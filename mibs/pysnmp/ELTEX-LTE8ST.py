#
# PySNMP MIB module ELTEX-LTE8ST (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-LTE8ST
# Produced by pysmi-0.3.4 at Mon Apr 29 18:45:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
elHardware, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "elHardware")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, Gauge32, ObjectIdentity, Bits, Counter32, Counter64, Unsigned32, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "Gauge32", "ObjectIdentity", "Bits", "Counter32", "Counter64", "Unsigned32", "TimeTicks", "MibIdentifier")
DisplayString, RowStatus, TimeStamp, TruthValue, TextualConvention, TimeInterval, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TimeStamp", "TruthValue", "TextualConvention", "TimeInterval", "MacAddress")
lte8st = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 21))
lte8st.setRevisions(('2009-09-16 00:00',))
if mibBuilder.loadTexts: lte8st.setLastUpdated('200909160000Z')
if mibBuilder.loadTexts: lte8st.setOrganization('Eltex Co')
class BoolValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("false", 0), ("true", 1))

class LTEObjectState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("free", 0), ("allocated", 1), ("authInProgress", 2), ("cfgInProgress", 3), ("authFailed", 4), ("cfgFailed", 5), ("reportTimeout", 6), ("ok", 7), ("authOk", 8), ("resetInProgress", 9), ("resetOk", 10), ("discovered", 11), ("blocked", 12), ("checkNewFw", 13), ("unidentified", 14), ("unconfigured", 15))

class LTEExtObjectState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))
    namedValues = NamedValues(("free", 0), ("allocated", 1), ("authInProgress", 2), ("cfgInProgress", 3), ("authFailed", 4), ("cfgFailed", 5), ("reportTimeout", 6), ("ok", 7), ("authOk", 8), ("resetInProgress", 9), ("resetOk", 10), ("discovered", 11), ("blocked", 12), ("checkNewFw", 13), ("unidentified", 14), ("unconfigured", 15), ("unavailable", 255))

class OLTPortSpeed(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3))
    namedValues = NamedValues(("speed1Gbps", 2), ("speed2Gbps", 3))

class ONTPortSpeed(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("speed10Mbps", 0), ("speed100Mbps", 1), ("speed1000Mbps", 2), ("speed2GDown1GUp", 3))

class ONTPortForwardingMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("forward", 0), ("dropUntilLearned", 1))

class SwitchPortState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1))

class SwitchLinkState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("down", 0), ("up", 1))

class SwitchPortSpeed(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("speed10", 0), ("speed100", 1), ("speed1000", 2), ("speed10G", 3))

class SwitchPortDuplex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("fullDuplex", 0), ("halfDuplex", 1))

class PortMirrorSettings(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("ingress", 1), ("egress", 2), ("both", 3))

class PortFrameTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("vlan-tagged", 0), ("all", 1))

class PortTagged(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("not-member", 0), ("tagged", 1), ("untagged", 2))

class LACPMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("lacp", 0), ("static", 1))

class IGMPUnregGroupSettings(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("flood", 0), ("drop", 1))

class OntType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))
    namedValues = NamedValues(("nte-2", 1), ("nte-2c", 2), ("nte-rg-1400f", 3), ("nte-rg-1400g", 4), ("nte-rg-1400f-w", 5), ("nte-rg-1400g-w", 6), ("nte-rg-1400fc", 7), ("nte-rg-1400gc", 8), ("nte-rg-1400fc-w", 9), ("nte-rg-1400gc-w", 10), ("nte-rg-1402f", 11), ("nte-rg-1402g", 12), ("nte-rg-1402f-w", 13), ("nte-rg-1402g-w", 14), ("nte-rg-1402fc", 15), ("nte-rg-1402gc", 16), ("nte-rg-1402fc-w", 17), ("nte-rg-1402gc-w", 18), ("nte-rg-2400g", 19), ("nte-rg-2400g-w", 20), ("nte-rg-2400g-w2", 21), ("nte-rg-2402g", 22), ("nte-rg-2402g-w", 23), ("nte-rg-2402g-w2", 24), ("nte-rg-2400gc", 25), ("nte-rg-2400gc-w", 26), ("nte-rg-2400gc-w2", 27), ("nte-rg-2402gc", 28), ("nte-rg-2402gc-w", 29), ("nte-rg-2402gc-w2", 30), ("nte-rg-2402gb", 31), ("nte-rg-2402gb-w", 32), ("nte-rg-2402gb-w2", 33), ("nte-rg-2402gcb", 34), ("nte-rg-2402gcb-w", 35), ("nte-rg-2402gcb-w2", 36))

class TempConv(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(255))
    namedValues = NamedValues(("n-a", 255))

class OntPort(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("uni0", 1), ("uni1", 2))

lte8stSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1))
lte8stSystemName = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemName.setStatus('current')
lte8stSystemIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemIpAddress.setStatus('current')
lte8stSystemNetMask = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemNetMask.setStatus('current')
lte8stSystemGateway = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemGateway.setStatus('current')
lte8stSystemSnmpManager = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemSnmpManager.setStatus('current')
lte8stSystemNtpServer = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemNtpServer.setStatus('current')
lte8stSystemSyslogForward = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemSyslogForward.setStatus('current')
lte8stSystemPonPorts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemPonPorts.setStatus('current')
lte8stSystemUplinkPorts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemUplinkPorts.setStatus('current')
lte8stSystemManagementIP = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemManagementIP.setStatus('current')
lte8stSystemManagementNetMask = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemManagementNetMask.setStatus('current')
lte8stSystemManagementVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemManagementVID.setStatus('current')
lte8stSystemCVLANEtherType = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemCVLANEtherType.setStatus('current')
lte8stSystemSVLANEtherType = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemSVLANEtherType.setStatus('current')
lte8stSystemP2PEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 15), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemP2PEnabled.setStatus('current')
lte8stSystemFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemFirmwareVersion.setStatus('current')
lte8stSystemDiskFreeSpace = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemDiskFreeSpace.setStatus('current')
lte8stSystemRAMFree = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemRAMFree.setStatus('current')
lte8stSystemCPULoadAverage1Minute = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemCPULoadAverage1Minute.setStatus('current')
lte8stSystemCPULoadAverage5Minutes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemCPULoadAverage5Minutes.setStatus('current')
lte8stSystemCPULoadAverage15Minutes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemCPULoadAverage15Minutes.setStatus('current')
lte8stSystemUptime = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSystemUptime.setStatus('current')
lte8stSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 1, 100)).setObjects(("ELTEX-LTE8ST", "lte8stSystemName"), ("ELTEX-LTE8ST", "lte8stSystemIpAddress"), ("ELTEX-LTE8ST", "lte8stSystemNetMask"), ("ELTEX-LTE8ST", "lte8stSystemGateway"), ("ELTEX-LTE8ST", "lte8stSystemSnmpManager"), ("ELTEX-LTE8ST", "lte8stSystemNtpServer"), ("ELTEX-LTE8ST", "lte8stSystemSyslogForward"), ("ELTEX-LTE8ST", "lte8stSystemPonPorts"), ("ELTEX-LTE8ST", "lte8stSystemUplinkPorts"), ("ELTEX-LTE8ST", "lte8stSystemManagementIP"), ("ELTEX-LTE8ST", "lte8stSystemManagementNetMask"), ("ELTEX-LTE8ST", "lte8stSystemManagementVID"), ("ELTEX-LTE8ST", "lte8stSystemCVLANEtherType"), ("ELTEX-LTE8ST", "lte8stSystemSVLANEtherType"), ("ELTEX-LTE8ST", "lte8stSystemP2PEnabled"), ("ELTEX-LTE8ST", "lte8stSystemFirmwareVersion"), ("ELTEX-LTE8ST", "lte8stSystemDiskFreeSpace"), ("ELTEX-LTE8ST", "lte8stSystemRAMFree"), ("ELTEX-LTE8ST", "lte8stSystemCPULoadAverage1Minute"), ("ELTEX-LTE8ST", "lte8stSystemCPULoadAverage5Minutes"), ("ELTEX-LTE8ST", "lte8stSystemCPULoadAverage15Minutes"), ("ELTEX-LTE8ST", "lte8stSystemUptime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stSystemGroup = lte8stSystemGroup.setStatus('current')
lte8stOLT0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2))
lte8stOLT0State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 1))
lte8stOLT0StateOltId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0StateOltId.setStatus('current')
lte8stOLT0StateMac = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0StateMac.setStatus('current')
lte8stOLT0StateFwRev = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0StateFwRev.setStatus('current')
lte8stOLT0StateOntCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0StateOntCount.setStatus('current')
lte8stOLT0StateState = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 1, 5), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0StateState.setStatus('current')
lte8stOLT0PON0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2))
lte8stOLT0PON0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0Desc.setStatus('current')
lte8stOLT0PON0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT0PON0Enabled.setStatus('current')
lte8stOLT0PON0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0Linked.setStatus('current')
lte8stOLT0PON0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0Speed.setStatus('current')
lte8stOLT0PON0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0Duplex.setStatus('current')
lte8stOLT0PON0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0FlowControl.setStatus('current')
lte8stOLT0PON0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0AutoNegotiate.setStatus('current')
lte8stOLT0PON0FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0FecUp.setStatus('current')
lte8stOLT0PON0FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0FecDown.setStatus('current')
lte8stOLT0PON0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10))
lte8stOLT0PON0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1))
lte8stOLT0PON0StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACBytes.setStatus('current')
lte8stOLT0PON0StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACFrames.setStatus('current')
lte8stOLT0PON0StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACUnicast.setStatus('current')
lte8stOLT0PON0StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACMulticast.setStatus('current')
lte8stOLT0PON0StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACBroadcast.setStatus('current')
lte8stOLT0PON0StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACUndersize.setStatus('current')
lte8stOLT0PON0StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACOversize.setStatus('current')
lte8stOLT0PON0StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACCRC32.setStatus('current')
lte8stOLT0PON0StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT0PON0StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT0PON0StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACReports.setStatus('current')
lte8stOLT0PON0StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACReportAbort.setStatus('current')
lte8stOLT0PON0StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT0PON0StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT0PON0StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACLLIDError.setStatus('current')
lte8stOLT0PON0StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT0PON0StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT0PON0StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT0PON0StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFByte.setStatus('current')
lte8stOLT0PON0StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFFrame.setStatus('current')
lte8stOLT0PON0StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFCRC8.setStatus('current')
lte8stOLT0PON0StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT0PON0StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT0PON0StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT0PON0StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT0PON0StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT0PON0StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT0PON0StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT0PON0StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT0PON0StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT0PON0StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT0PON0StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT0PON0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2))
lte8stOLT0PON0StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACBytes.setStatus('current')
lte8stOLT0PON0StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACFrames.setStatus('current')
lte8stOLT0PON0StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACUnicast.setStatus('current')
lte8stOLT0PON0StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACMultiCast.setStatus('current')
lte8stOLT0PON0StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACBroadCast.setStatus('current')
lte8stOLT0PON0StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT0PON0StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT0PON0StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT0PON0StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT0PON0StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACGateFrames.setStatus('current')
lte8stOLT0PON0StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACOamFrames.setStatus('current')
lte8stOLT0PON0StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACOamBytes.setStatus('current')
lte8stOLT0PON0StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT0PON0StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT0PON0StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitMACReport.setStatus('current')
lte8stOLT0PON0StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitLIFBytes.setStatus('current')
lte8stOLT0PON0StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitLIFFrames.setStatus('current')
lte8stOLT0PON0StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT0PON0StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT0PON0StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT0PON0StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT0PON0StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT0PON0SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0SFPVendor.setStatus('current')
lte8stOLT0PON0SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0SFPModel.setStatus('current')
lte8stOLT0PON0ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 2, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON0ONTCount.setStatus('current')
lte8stOLT0PON1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3))
lte8stOLT0PON1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1Desc.setStatus('current')
lte8stOLT0PON1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT0PON1Enabled.setStatus('current')
lte8stOLT0PON1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1Linked.setStatus('current')
lte8stOLT0PON1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1Speed.setStatus('current')
lte8stOLT0PON1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1Duplex.setStatus('current')
lte8stOLT0PON1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1FlowControl.setStatus('current')
lte8stOLT0PON1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1AutoNegotiate.setStatus('current')
lte8stOLT0PON1FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1FecUp.setStatus('current')
lte8stOLT0PON1FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1FecDown.setStatus('current')
lte8stOLT0PON1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10))
lte8stOLT0PON1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1))
lte8stOLT0PON1StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACBytes.setStatus('current')
lte8stOLT0PON1StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACFrames.setStatus('current')
lte8stOLT0PON1StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACUnicast.setStatus('current')
lte8stOLT0PON1StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACMulticast.setStatus('current')
lte8stOLT0PON1StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACBroadcast.setStatus('current')
lte8stOLT0PON1StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACUndersize.setStatus('current')
lte8stOLT0PON1StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACOversize.setStatus('current')
lte8stOLT0PON1StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACCRC32.setStatus('current')
lte8stOLT0PON1StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT0PON1StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT0PON1StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACReports.setStatus('current')
lte8stOLT0PON1StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACReportAbort.setStatus('current')
lte8stOLT0PON1StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT0PON1StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT0PON1StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACLLIDError.setStatus('current')
lte8stOLT0PON1StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT0PON1StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT0PON1StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT0PON1StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFByte.setStatus('current')
lte8stOLT0PON1StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFFrame.setStatus('current')
lte8stOLT0PON1StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFCRC8.setStatus('current')
lte8stOLT0PON1StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT0PON1StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT0PON1StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT0PON1StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT0PON1StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT0PON1StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT0PON1StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT0PON1StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT0PON1StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT0PON1StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT0PON1StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT0PON1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2))
lte8stOLT0PON1StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACBytes.setStatus('current')
lte8stOLT0PON1StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACFrames.setStatus('current')
lte8stOLT0PON1StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACUnicast.setStatus('current')
lte8stOLT0PON1StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACMultiCast.setStatus('current')
lte8stOLT0PON1StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACBroadCast.setStatus('current')
lte8stOLT0PON1StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT0PON1StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT0PON1StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT0PON1StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT0PON1StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACGateFrames.setStatus('current')
lte8stOLT0PON1StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACOamFrames.setStatus('current')
lte8stOLT0PON1StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACOamBytes.setStatus('current')
lte8stOLT0PON1StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT0PON1StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT0PON1StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitMACReport.setStatus('current')
lte8stOLT0PON1StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitLIFBytes.setStatus('current')
lte8stOLT0PON1StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitLIFFrames.setStatus('current')
lte8stOLT0PON1StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT0PON1StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT0PON1StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT0PON1StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT0PON1StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT0PON1SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1SFPVendor.setStatus('current')
lte8stOLT0PON1SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1SFPModel.setStatus('current')
lte8stOLT0PON1ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 3, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0PON1ONTCount.setStatus('current')
lte8stOLT0NNI0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4))
lte8stOLT0NNI0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0Desc.setStatus('current')
lte8stOLT0NNI0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0Enabled.setStatus('current')
lte8stOLT0NNI0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0Linked.setStatus('current')
lte8stOLT0NNI0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0Speed.setStatus('current')
lte8stOLT0NNI0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0Duplex.setStatus('current')
lte8stOLT0NNI0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0FlowControl.setStatus('current')
lte8stOLT0NNI0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0AutoNegotiate.setStatus('current')
lte8stOLT0NNI0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10))
lte8stOLT0NNI0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1))
lte8stOLT0NNI0StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveBytes.setStatus('current')
lte8stOLT0NNI0StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveFrames.setStatus('current')
lte8stOLT0NNI0StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveUnicast.setStatus('current')
lte8stOLT0NNI0StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveMulticast.setStatus('current')
lte8stOLT0NNI0StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveBroadcast.setStatus('current')
lte8stOLT0NNI0StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceive64Byte.setStatus('current')
lte8stOLT0NNI0StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceive65to127Byte.setStatus('current')
lte8stOLT0NNI0StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceive128to255Byte.setStatus('current')
lte8stOLT0NNI0StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceive256to511Byte.setStatus('current')
lte8stOLT0NNI0StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceive512to1023Byte.setStatus('current')
lte8stOLT0NNI0StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceive1024to1518Byte.setStatus('current')
lte8stOLT0NNI0StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT0NNI0StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT0NNI0StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveOversizeFrames.setStatus('current')
lte8stOLT0NNI0StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveCRCErrors.setStatus('current')
lte8stOLT0NNI0StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceivePauseFrames.setStatus('current')
lte8stOLT0NNI0StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveAlignmentError.setStatus('current')
lte8stOLT0NNI0StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveErroredBytes.setStatus('current')
lte8stOLT0NNI0StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT0NNI0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2))
lte8stOLT0NNI0StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitBytes.setStatus('current')
lte8stOLT0NNI0StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitFrames.setStatus('current')
lte8stOLT0NNI0StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitUnicast.setStatus('current')
lte8stOLT0NNI0StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitMulticast.setStatus('current')
lte8stOLT0NNI0StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitBroadCast.setStatus('current')
lte8stOLT0NNI0StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmit64Byte.setStatus('current')
lte8stOLT0NNI0StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmit65to127Byte.setStatus('current')
lte8stOLT0NNI0StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmit128to255Byte.setStatus('current')
lte8stOLT0NNI0StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmit255to511Byte.setStatus('current')
lte8stOLT0NNI0StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmit512to1023Byte.setStatus('current')
lte8stOLT0NNI0StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT0NNI0StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT0NNI0StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitCRCGen.setStatus('current')
lte8stOLT0NNI0StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitPauseFrames.setStatus('current')
lte8stOLT0NNI0StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitErroredBytes.setStatus('current')
lte8stOLT0NNI0StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 4, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI0StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT0NNI1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5))
lte8stOLT0NNI1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1Desc.setStatus('current')
lte8stOLT0NNI1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1Enabled.setStatus('current')
lte8stOLT0NNI1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1Linked.setStatus('current')
lte8stOLT0NNI1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1Speed.setStatus('current')
lte8stOLT0NNI1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1Duplex.setStatus('current')
lte8stOLT0NNI1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1FlowControl.setStatus('current')
lte8stOLT0NNI1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1AutoNegotiate.setStatus('current')
lte8stOLT0NNI1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10))
lte8stOLT0NNI1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1))
lte8stOLT0NNI1StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveBytes.setStatus('current')
lte8stOLT0NNI1StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveFrames.setStatus('current')
lte8stOLT0NNI1StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveUnicast.setStatus('current')
lte8stOLT0NNI1StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveMulticast.setStatus('current')
lte8stOLT0NNI1StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveBroadcast.setStatus('current')
lte8stOLT0NNI1StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceive64Byte.setStatus('current')
lte8stOLT0NNI1StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceive65to127Byte.setStatus('current')
lte8stOLT0NNI1StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceive128to255Byte.setStatus('current')
lte8stOLT0NNI1StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceive256to511Byte.setStatus('current')
lte8stOLT0NNI1StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceive512to1023Byte.setStatus('current')
lte8stOLT0NNI1StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceive1024to1518Byte.setStatus('current')
lte8stOLT0NNI1StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT0NNI1StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT0NNI1StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveOversizeFrames.setStatus('current')
lte8stOLT0NNI1StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveCRCErrors.setStatus('current')
lte8stOLT0NNI1StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceivePauseFrames.setStatus('current')
lte8stOLT0NNI1StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveAlignmentError.setStatus('current')
lte8stOLT0NNI1StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveErroredBytes.setStatus('current')
lte8stOLT0NNI1StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT0NNI1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2))
lte8stOLT0NNI1StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitBytes.setStatus('current')
lte8stOLT0NNI1StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitFrames.setStatus('current')
lte8stOLT0NNI1StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitUnicast.setStatus('current')
lte8stOLT0NNI1StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitMulticast.setStatus('current')
lte8stOLT0NNI1StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitBroadCast.setStatus('current')
lte8stOLT0NNI1StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmit64Byte.setStatus('current')
lte8stOLT0NNI1StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmit65to127Byte.setStatus('current')
lte8stOLT0NNI1StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmit128to255Byte.setStatus('current')
lte8stOLT0NNI1StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmit255to511Byte.setStatus('current')
lte8stOLT0NNI1StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmit512to1023Byte.setStatus('current')
lte8stOLT0NNI1StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT0NNI1StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT0NNI1StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitCRCGen.setStatus('current')
lte8stOLT0NNI1StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitPauseFrames.setStatus('current')
lte8stOLT0NNI1StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitErroredBytes.setStatus('current')
lte8stOLT0NNI1StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 5, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT0NNI1StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 2, 100)).setObjects(("ELTEX-LTE8ST", "lte8stOLT0StateOltId"), ("ELTEX-LTE8ST", "lte8stOLT0StateMac"), ("ELTEX-LTE8ST", "lte8stOLT0StateFwRev"), ("ELTEX-LTE8ST", "lte8stOLT0StateOntCount"), ("ELTEX-LTE8ST", "lte8stOLT0StateState"), ("ELTEX-LTE8ST", "lte8stOLT0PON0Desc"), ("ELTEX-LTE8ST", "lte8stOLT0PON0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT0PON0Linked"), ("ELTEX-LTE8ST", "lte8stOLT0PON0Speed"), ("ELTEX-LTE8ST", "lte8stOLT0PON0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT0PON0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT0PON0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT0PON0FecUp"), ("ELTEX-LTE8ST", "lte8stOLT0PON0FecDown"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT0PON0StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT0PON0SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT0PON0SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT0PON1Desc"), ("ELTEX-LTE8ST", "lte8stOLT0PON1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT0PON1Linked"), ("ELTEX-LTE8ST", "lte8stOLT0PON1Speed"), ("ELTEX-LTE8ST", "lte8stOLT0PON1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT0PON1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT0PON1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT0PON1FecUp"), ("ELTEX-LTE8ST", "lte8stOLT0PON1FecDown"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT0PON1StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT0PON1SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT0PON1SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0Desc"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0Linked"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0Speed"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI0StatTransmitBufferUnderrun"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1Desc"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1Linked"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1Speed"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT0NNI1StatTransmitBufferUnderrun"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stOLT0Group = lte8stOLT0Group.setStatus('current')
lte8stOLT1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3))
lte8stOLT1State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 1))
lte8stOLT1StateOltId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1StateOltId.setStatus('current')
lte8stOLT1StateMac = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1StateMac.setStatus('current')
lte8stOLT1StateFwRev = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1StateFwRev.setStatus('current')
lte8stOLT1StateOntCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1StateOntCount.setStatus('current')
lte8stOLT1StateState = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 1, 5), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1StateState.setStatus('current')
lte8stOLT1PON0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2))
lte8stOLT1PON0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0Desc.setStatus('current')
lte8stOLT1PON0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT1PON0Enabled.setStatus('current')
lte8stOLT1PON0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0Linked.setStatus('current')
lte8stOLT1PON0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0Speed.setStatus('current')
lte8stOLT1PON0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0Duplex.setStatus('current')
lte8stOLT1PON0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0FlowControl.setStatus('current')
lte8stOLT1PON0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0AutoNegotiate.setStatus('current')
lte8stOLT1PON0FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0FecUp.setStatus('current')
lte8stOLT1PON0FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0FecDown.setStatus('current')
lte8stOLT1PON0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10))
lte8stOLT1PON0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1))
lte8stOLT1PON0StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACBytes.setStatus('current')
lte8stOLT1PON0StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACFrames.setStatus('current')
lte8stOLT1PON0StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACUnicast.setStatus('current')
lte8stOLT1PON0StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACMulticast.setStatus('current')
lte8stOLT1PON0StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACBroadcast.setStatus('current')
lte8stOLT1PON0StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACUndersize.setStatus('current')
lte8stOLT1PON0StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACOversize.setStatus('current')
lte8stOLT1PON0StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACCRC32.setStatus('current')
lte8stOLT1PON0StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT1PON0StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT1PON0StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACReports.setStatus('current')
lte8stOLT1PON0StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACReportAbort.setStatus('current')
lte8stOLT1PON0StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT1PON0StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT1PON0StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACLLIDError.setStatus('current')
lte8stOLT1PON0StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT1PON0StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT1PON0StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT1PON0StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFByte.setStatus('current')
lte8stOLT1PON0StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFFrame.setStatus('current')
lte8stOLT1PON0StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFCRC8.setStatus('current')
lte8stOLT1PON0StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT1PON0StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT1PON0StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT1PON0StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT1PON0StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT1PON0StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT1PON0StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT1PON0StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT1PON0StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT1PON0StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT1PON0StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT1PON0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2))
lte8stOLT1PON0StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACBytes.setStatus('current')
lte8stOLT1PON0StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACFrames.setStatus('current')
lte8stOLT1PON0StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACUnicast.setStatus('current')
lte8stOLT1PON0StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACMultiCast.setStatus('current')
lte8stOLT1PON0StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACBroadCast.setStatus('current')
lte8stOLT1PON0StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT1PON0StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT1PON0StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT1PON0StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT1PON0StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACGateFrames.setStatus('current')
lte8stOLT1PON0StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACOamFrames.setStatus('current')
lte8stOLT1PON0StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACOamBytes.setStatus('current')
lte8stOLT1PON0StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT1PON0StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT1PON0StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitMACReport.setStatus('current')
lte8stOLT1PON0StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitLIFBytes.setStatus('current')
lte8stOLT1PON0StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitLIFFrames.setStatus('current')
lte8stOLT1PON0StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT1PON0StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT1PON0StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT1PON0StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT1PON0StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT1PON0SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0SFPVendor.setStatus('current')
lte8stOLT1PON0SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0SFPModel.setStatus('current')
lte8stOLT1PON0ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 2, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON0ONTCount.setStatus('current')
lte8stOLT1PON1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3))
lte8stOLT1PON1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1Desc.setStatus('current')
lte8stOLT1PON1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT1PON1Enabled.setStatus('current')
lte8stOLT1PON1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1Linked.setStatus('current')
lte8stOLT1PON1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1Speed.setStatus('current')
lte8stOLT1PON1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1Duplex.setStatus('current')
lte8stOLT1PON1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1FlowControl.setStatus('current')
lte8stOLT1PON1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1AutoNegotiate.setStatus('current')
lte8stOLT1PON1FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1FecUp.setStatus('current')
lte8stOLT1PON1FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1FecDown.setStatus('current')
lte8stOLT1PON1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10))
lte8stOLT1PON1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1))
lte8stOLT1PON1StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACBytes.setStatus('current')
lte8stOLT1PON1StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACFrames.setStatus('current')
lte8stOLT1PON1StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACUnicast.setStatus('current')
lte8stOLT1PON1StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACMulticast.setStatus('current')
lte8stOLT1PON1StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACBroadcast.setStatus('current')
lte8stOLT1PON1StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACUndersize.setStatus('current')
lte8stOLT1PON1StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACOversize.setStatus('current')
lte8stOLT1PON1StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACCRC32.setStatus('current')
lte8stOLT1PON1StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT1PON1StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT1PON1StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACReports.setStatus('current')
lte8stOLT1PON1StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACReportAbort.setStatus('current')
lte8stOLT1PON1StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT1PON1StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT1PON1StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACLLIDError.setStatus('current')
lte8stOLT1PON1StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT1PON1StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT1PON1StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT1PON1StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFByte.setStatus('current')
lte8stOLT1PON1StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFFrame.setStatus('current')
lte8stOLT1PON1StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFCRC8.setStatus('current')
lte8stOLT1PON1StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT1PON1StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT1PON1StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT1PON1StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT1PON1StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT1PON1StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT1PON1StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT1PON1StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT1PON1StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT1PON1StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT1PON1StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT1PON1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2))
lte8stOLT1PON1StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACBytes.setStatus('current')
lte8stOLT1PON1StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACFrames.setStatus('current')
lte8stOLT1PON1StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACUnicast.setStatus('current')
lte8stOLT1PON1StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACMultiCast.setStatus('current')
lte8stOLT1PON1StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACBroadCast.setStatus('current')
lte8stOLT1PON1StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT1PON1StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT1PON1StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT1PON1StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT1PON1StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACGateFrames.setStatus('current')
lte8stOLT1PON1StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACOamFrames.setStatus('current')
lte8stOLT1PON1StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACOamBytes.setStatus('current')
lte8stOLT1PON1StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT1PON1StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT1PON1StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitMACReport.setStatus('current')
lte8stOLT1PON1StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitLIFBytes.setStatus('current')
lte8stOLT1PON1StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitLIFFrames.setStatus('current')
lte8stOLT1PON1StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT1PON1StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT1PON1StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT1PON1StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT1PON1StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT1PON1SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1SFPVendor.setStatus('current')
lte8stOLT1PON1SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1SFPModel.setStatus('current')
lte8stOLT1PON1ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 3, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1PON1ONTCount.setStatus('current')
lte8stOLT1NNI0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4))
lte8stOLT1NNI0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0Desc.setStatus('current')
lte8stOLT1NNI0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0Enabled.setStatus('current')
lte8stOLT1NNI0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0Linked.setStatus('current')
lte8stOLT1NNI0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0Speed.setStatus('current')
lte8stOLT1NNI0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0Duplex.setStatus('current')
lte8stOLT1NNI0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0FlowControl.setStatus('current')
lte8stOLT1NNI0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0AutoNegotiate.setStatus('current')
lte8stOLT1NNI0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10))
lte8stOLT1NNI0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1))
lte8stOLT1NNI0StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveBytes.setStatus('current')
lte8stOLT1NNI0StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveFrames.setStatus('current')
lte8stOLT1NNI0StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveUnicast.setStatus('current')
lte8stOLT1NNI0StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveMulticast.setStatus('current')
lte8stOLT1NNI0StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveBroadcast.setStatus('current')
lte8stOLT1NNI0StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceive64Byte.setStatus('current')
lte8stOLT1NNI0StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceive65to127Byte.setStatus('current')
lte8stOLT1NNI0StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceive128to255Byte.setStatus('current')
lte8stOLT1NNI0StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceive256to511Byte.setStatus('current')
lte8stOLT1NNI0StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceive512to1023Byte.setStatus('current')
lte8stOLT1NNI0StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceive1024to1518Byte.setStatus('current')
lte8stOLT1NNI0StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT1NNI0StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT1NNI0StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveOversizeFrames.setStatus('current')
lte8stOLT1NNI0StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveCRCErrors.setStatus('current')
lte8stOLT1NNI0StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceivePauseFrames.setStatus('current')
lte8stOLT1NNI0StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveAlignmentError.setStatus('current')
lte8stOLT1NNI0StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveErroredBytes.setStatus('current')
lte8stOLT1NNI0StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT1NNI0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2))
lte8stOLT1NNI0StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitBytes.setStatus('current')
lte8stOLT1NNI0StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitFrames.setStatus('current')
lte8stOLT1NNI0StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitUnicast.setStatus('current')
lte8stOLT1NNI0StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitMulticast.setStatus('current')
lte8stOLT1NNI0StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitBroadCast.setStatus('current')
lte8stOLT1NNI0StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmit64Byte.setStatus('current')
lte8stOLT1NNI0StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmit65to127Byte.setStatus('current')
lte8stOLT1NNI0StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmit128to255Byte.setStatus('current')
lte8stOLT1NNI0StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmit255to511Byte.setStatus('current')
lte8stOLT1NNI0StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmit512to1023Byte.setStatus('current')
lte8stOLT1NNI0StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT1NNI0StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT1NNI0StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitCRCGen.setStatus('current')
lte8stOLT1NNI0StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitPauseFrames.setStatus('current')
lte8stOLT1NNI0StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitErroredBytes.setStatus('current')
lte8stOLT1NNI0StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 4, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI0StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT1NNI1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5))
lte8stOLT1NNI1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1Desc.setStatus('current')
lte8stOLT1NNI1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1Enabled.setStatus('current')
lte8stOLT1NNI1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1Linked.setStatus('current')
lte8stOLT1NNI1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1Speed.setStatus('current')
lte8stOLT1NNI1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1Duplex.setStatus('current')
lte8stOLT1NNI1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1FlowControl.setStatus('current')
lte8stOLT1NNI1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1AutoNegotiate.setStatus('current')
lte8stOLT1NNI1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10))
lte8stOLT1NNI1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1))
lte8stOLT1NNI1StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveBytes.setStatus('current')
lte8stOLT1NNI1StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveFrames.setStatus('current')
lte8stOLT1NNI1StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveUnicast.setStatus('current')
lte8stOLT1NNI1StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveMulticast.setStatus('current')
lte8stOLT1NNI1StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveBroadcast.setStatus('current')
lte8stOLT1NNI1StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceive64Byte.setStatus('current')
lte8stOLT1NNI1StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceive65to127Byte.setStatus('current')
lte8stOLT1NNI1StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceive128to255Byte.setStatus('current')
lte8stOLT1NNI1StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceive256to511Byte.setStatus('current')
lte8stOLT1NNI1StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceive512to1023Byte.setStatus('current')
lte8stOLT1NNI1StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceive1024to1518Byte.setStatus('current')
lte8stOLT1NNI1StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT1NNI1StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT1NNI1StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveOversizeFrames.setStatus('current')
lte8stOLT1NNI1StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveCRCErrors.setStatus('current')
lte8stOLT1NNI1StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceivePauseFrames.setStatus('current')
lte8stOLT1NNI1StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveAlignmentError.setStatus('current')
lte8stOLT1NNI1StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveErroredBytes.setStatus('current')
lte8stOLT1NNI1StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT1NNI1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2))
lte8stOLT1NNI1StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitBytes.setStatus('current')
lte8stOLT1NNI1StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitFrames.setStatus('current')
lte8stOLT1NNI1StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitUnicast.setStatus('current')
lte8stOLT1NNI1StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitMulticast.setStatus('current')
lte8stOLT1NNI1StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitBroadCast.setStatus('current')
lte8stOLT1NNI1StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmit64Byte.setStatus('current')
lte8stOLT1NNI1StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmit65to127Byte.setStatus('current')
lte8stOLT1NNI1StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmit128to255Byte.setStatus('current')
lte8stOLT1NNI1StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmit255to511Byte.setStatus('current')
lte8stOLT1NNI1StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmit512to1023Byte.setStatus('current')
lte8stOLT1NNI1StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT1NNI1StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT1NNI1StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitCRCGen.setStatus('current')
lte8stOLT1NNI1StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitPauseFrames.setStatus('current')
lte8stOLT1NNI1StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitErroredBytes.setStatus('current')
lte8stOLT1NNI1StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 5, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT1NNI1StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 3, 100)).setObjects(("ELTEX-LTE8ST", "lte8stOLT1StateOltId"), ("ELTEX-LTE8ST", "lte8stOLT1StateMac"), ("ELTEX-LTE8ST", "lte8stOLT1StateFwRev"), ("ELTEX-LTE8ST", "lte8stOLT1StateOntCount"), ("ELTEX-LTE8ST", "lte8stOLT1StateState"), ("ELTEX-LTE8ST", "lte8stOLT1PON0Desc"), ("ELTEX-LTE8ST", "lte8stOLT1PON0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT1PON0Linked"), ("ELTEX-LTE8ST", "lte8stOLT1PON0Speed"), ("ELTEX-LTE8ST", "lte8stOLT1PON0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT1PON0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT1PON0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT1PON0FecUp"), ("ELTEX-LTE8ST", "lte8stOLT1PON0FecDown"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT1PON0StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT1PON0SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT1PON0SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT1PON1Desc"), ("ELTEX-LTE8ST", "lte8stOLT1PON1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT1PON1Linked"), ("ELTEX-LTE8ST", "lte8stOLT1PON1Speed"), ("ELTEX-LTE8ST", "lte8stOLT1PON1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT1PON1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT1PON1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT1PON1FecUp"), ("ELTEX-LTE8ST", "lte8stOLT1PON1FecDown"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT1PON1StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT1PON1SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT1PON1SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0Desc"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0Linked"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0Speed"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI0StatTransmitBufferUnderrun"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1Desc"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1Linked"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1Speed"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT1NNI1StatTransmitBufferUnderrun"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stOLT1Group = lte8stOLT1Group.setStatus('current')
lte8stOLT2 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4))
lte8stOLT2State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 1))
lte8stOLT2StateOltId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2StateOltId.setStatus('current')
lte8stOLT2StateMac = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2StateMac.setStatus('current')
lte8stOLT2StateFwRev = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2StateFwRev.setStatus('current')
lte8stOLT2StateOntCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2StateOntCount.setStatus('current')
lte8stOLT2StateState = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 1, 5), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2StateState.setStatus('current')
lte8stOLT2PON0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2))
lte8stOLT2PON0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0Desc.setStatus('current')
lte8stOLT2PON0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT2PON0Enabled.setStatus('current')
lte8stOLT2PON0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0Linked.setStatus('current')
lte8stOLT2PON0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0Speed.setStatus('current')
lte8stOLT2PON0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0Duplex.setStatus('current')
lte8stOLT2PON0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0FlowControl.setStatus('current')
lte8stOLT2PON0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0AutoNegotiate.setStatus('current')
lte8stOLT2PON0FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0FecUp.setStatus('current')
lte8stOLT2PON0FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0FecDown.setStatus('current')
lte8stOLT2PON0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10))
lte8stOLT2PON0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1))
lte8stOLT2PON0StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACBytes.setStatus('current')
lte8stOLT2PON0StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACFrames.setStatus('current')
lte8stOLT2PON0StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACUnicast.setStatus('current')
lte8stOLT2PON0StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACMulticast.setStatus('current')
lte8stOLT2PON0StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACBroadcast.setStatus('current')
lte8stOLT2PON0StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACUndersize.setStatus('current')
lte8stOLT2PON0StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACOversize.setStatus('current')
lte8stOLT2PON0StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACCRC32.setStatus('current')
lte8stOLT2PON0StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT2PON0StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT2PON0StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACReports.setStatus('current')
lte8stOLT2PON0StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACReportAbort.setStatus('current')
lte8stOLT2PON0StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT2PON0StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT2PON0StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACLLIDError.setStatus('current')
lte8stOLT2PON0StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT2PON0StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT2PON0StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT2PON0StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFByte.setStatus('current')
lte8stOLT2PON0StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFFrame.setStatus('current')
lte8stOLT2PON0StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFCRC8.setStatus('current')
lte8stOLT2PON0StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT2PON0StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT2PON0StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT2PON0StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT2PON0StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT2PON0StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT2PON0StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT2PON0StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT2PON0StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT2PON0StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT2PON0StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT2PON0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2))
lte8stOLT2PON0StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACBytes.setStatus('current')
lte8stOLT2PON0StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACFrames.setStatus('current')
lte8stOLT2PON0StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACUnicast.setStatus('current')
lte8stOLT2PON0StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACMultiCast.setStatus('current')
lte8stOLT2PON0StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACBroadCast.setStatus('current')
lte8stOLT2PON0StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT2PON0StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT2PON0StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT2PON0StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT2PON0StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACGateFrames.setStatus('current')
lte8stOLT2PON0StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACOamFrames.setStatus('current')
lte8stOLT2PON0StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACOamBytes.setStatus('current')
lte8stOLT2PON0StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT2PON0StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT2PON0StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitMACReport.setStatus('current')
lte8stOLT2PON0StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitLIFBytes.setStatus('current')
lte8stOLT2PON0StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitLIFFrames.setStatus('current')
lte8stOLT2PON0StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT2PON0StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT2PON0StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT2PON0StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT2PON0StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT2PON0SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0SFPVendor.setStatus('current')
lte8stOLT2PON0SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0SFPModel.setStatus('current')
lte8stOLT2PON0ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 2, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON0ONTCount.setStatus('current')
lte8stOLT2PON1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3))
lte8stOLT2PON1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1Desc.setStatus('current')
lte8stOLT2PON1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT2PON1Enabled.setStatus('current')
lte8stOLT2PON1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1Linked.setStatus('current')
lte8stOLT2PON1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1Speed.setStatus('current')
lte8stOLT2PON1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1Duplex.setStatus('current')
lte8stOLT2PON1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1FlowControl.setStatus('current')
lte8stOLT2PON1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1AutoNegotiate.setStatus('current')
lte8stOLT2PON1FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1FecUp.setStatus('current')
lte8stOLT2PON1FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1FecDown.setStatus('current')
lte8stOLT2PON1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10))
lte8stOLT2PON1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1))
lte8stOLT2PON1StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACBytes.setStatus('current')
lte8stOLT2PON1StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACFrames.setStatus('current')
lte8stOLT2PON1StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACUnicast.setStatus('current')
lte8stOLT2PON1StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACMulticast.setStatus('current')
lte8stOLT2PON1StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACBroadcast.setStatus('current')
lte8stOLT2PON1StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACUndersize.setStatus('current')
lte8stOLT2PON1StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACOversize.setStatus('current')
lte8stOLT2PON1StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACCRC32.setStatus('current')
lte8stOLT2PON1StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT2PON1StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT2PON1StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACReports.setStatus('current')
lte8stOLT2PON1StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACReportAbort.setStatus('current')
lte8stOLT2PON1StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT2PON1StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT2PON1StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACLLIDError.setStatus('current')
lte8stOLT2PON1StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT2PON1StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT2PON1StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT2PON1StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFByte.setStatus('current')
lte8stOLT2PON1StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFFrame.setStatus('current')
lte8stOLT2PON1StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFCRC8.setStatus('current')
lte8stOLT2PON1StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT2PON1StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT2PON1StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT2PON1StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT2PON1StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT2PON1StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT2PON1StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT2PON1StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT2PON1StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT2PON1StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT2PON1StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT2PON1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2))
lte8stOLT2PON1StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACBytes.setStatus('current')
lte8stOLT2PON1StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACFrames.setStatus('current')
lte8stOLT2PON1StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACUnicast.setStatus('current')
lte8stOLT2PON1StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACMultiCast.setStatus('current')
lte8stOLT2PON1StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACBroadCast.setStatus('current')
lte8stOLT2PON1StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT2PON1StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT2PON1StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT2PON1StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT2PON1StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACGateFrames.setStatus('current')
lte8stOLT2PON1StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACOamFrames.setStatus('current')
lte8stOLT2PON1StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACOamBytes.setStatus('current')
lte8stOLT2PON1StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT2PON1StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT2PON1StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitMACReport.setStatus('current')
lte8stOLT2PON1StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitLIFBytes.setStatus('current')
lte8stOLT2PON1StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitLIFFrames.setStatus('current')
lte8stOLT2PON1StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT2PON1StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT2PON1StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT2PON1StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT2PON1StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT2PON1SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1SFPVendor.setStatus('current')
lte8stOLT2PON1SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1SFPModel.setStatus('current')
lte8stOLT2PON1ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 3, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2PON1ONTCount.setStatus('current')
lte8stOLT2NNI0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4))
lte8stOLT2NNI0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0Desc.setStatus('current')
lte8stOLT2NNI0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0Enabled.setStatus('current')
lte8stOLT2NNI0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0Linked.setStatus('current')
lte8stOLT2NNI0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0Speed.setStatus('current')
lte8stOLT2NNI0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0Duplex.setStatus('current')
lte8stOLT2NNI0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0FlowControl.setStatus('current')
lte8stOLT2NNI0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0AutoNegotiate.setStatus('current')
lte8stOLT2NNI0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10))
lte8stOLT2NNI0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1))
lte8stOLT2NNI0StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveBytes.setStatus('current')
lte8stOLT2NNI0StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveFrames.setStatus('current')
lte8stOLT2NNI0StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveUnicast.setStatus('current')
lte8stOLT2NNI0StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveMulticast.setStatus('current')
lte8stOLT2NNI0StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveBroadcast.setStatus('current')
lte8stOLT2NNI0StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceive64Byte.setStatus('current')
lte8stOLT2NNI0StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceive65to127Byte.setStatus('current')
lte8stOLT2NNI0StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceive128to255Byte.setStatus('current')
lte8stOLT2NNI0StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceive256to511Byte.setStatus('current')
lte8stOLT2NNI0StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceive512to1023Byte.setStatus('current')
lte8stOLT2NNI0StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceive1024to1518Byte.setStatus('current')
lte8stOLT2NNI0StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT2NNI0StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT2NNI0StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveOversizeFrames.setStatus('current')
lte8stOLT2NNI0StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveCRCErrors.setStatus('current')
lte8stOLT2NNI0StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceivePauseFrames.setStatus('current')
lte8stOLT2NNI0StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveAlignmentError.setStatus('current')
lte8stOLT2NNI0StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveErroredBytes.setStatus('current')
lte8stOLT2NNI0StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT2NNI0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2))
lte8stOLT2NNI0StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitBytes.setStatus('current')
lte8stOLT2NNI0StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitFrames.setStatus('current')
lte8stOLT2NNI0StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitUnicast.setStatus('current')
lte8stOLT2NNI0StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitMulticast.setStatus('current')
lte8stOLT2NNI0StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitBroadCast.setStatus('current')
lte8stOLT2NNI0StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmit64Byte.setStatus('current')
lte8stOLT2NNI0StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmit65to127Byte.setStatus('current')
lte8stOLT2NNI0StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmit128to255Byte.setStatus('current')
lte8stOLT2NNI0StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmit255to511Byte.setStatus('current')
lte8stOLT2NNI0StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmit512to1023Byte.setStatus('current')
lte8stOLT2NNI0StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT2NNI0StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT2NNI0StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitCRCGen.setStatus('current')
lte8stOLT2NNI0StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitPauseFrames.setStatus('current')
lte8stOLT2NNI0StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitErroredBytes.setStatus('current')
lte8stOLT2NNI0StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 4, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI0StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT2NNI1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5))
lte8stOLT2NNI1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1Desc.setStatus('current')
lte8stOLT2NNI1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1Enabled.setStatus('current')
lte8stOLT2NNI1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1Linked.setStatus('current')
lte8stOLT2NNI1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1Speed.setStatus('current')
lte8stOLT2NNI1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1Duplex.setStatus('current')
lte8stOLT2NNI1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1FlowControl.setStatus('current')
lte8stOLT2NNI1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1AutoNegotiate.setStatus('current')
lte8stOLT2NNI1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10))
lte8stOLT2NNI1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1))
lte8stOLT2NNI1StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveBytes.setStatus('current')
lte8stOLT2NNI1StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveFrames.setStatus('current')
lte8stOLT2NNI1StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveUnicast.setStatus('current')
lte8stOLT2NNI1StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveMulticast.setStatus('current')
lte8stOLT2NNI1StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveBroadcast.setStatus('current')
lte8stOLT2NNI1StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceive64Byte.setStatus('current')
lte8stOLT2NNI1StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceive65to127Byte.setStatus('current')
lte8stOLT2NNI1StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceive128to255Byte.setStatus('current')
lte8stOLT2NNI1StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceive256to511Byte.setStatus('current')
lte8stOLT2NNI1StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceive512to1023Byte.setStatus('current')
lte8stOLT2NNI1StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceive1024to1518Byte.setStatus('current')
lte8stOLT2NNI1StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT2NNI1StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT2NNI1StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveOversizeFrames.setStatus('current')
lte8stOLT2NNI1StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveCRCErrors.setStatus('current')
lte8stOLT2NNI1StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceivePauseFrames.setStatus('current')
lte8stOLT2NNI1StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveAlignmentError.setStatus('current')
lte8stOLT2NNI1StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveErroredBytes.setStatus('current')
lte8stOLT2NNI1StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT2NNI1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2))
lte8stOLT2NNI1StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitBytes.setStatus('current')
lte8stOLT2NNI1StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitFrames.setStatus('current')
lte8stOLT2NNI1StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitUnicast.setStatus('current')
lte8stOLT2NNI1StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitMulticast.setStatus('current')
lte8stOLT2NNI1StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitBroadCast.setStatus('current')
lte8stOLT2NNI1StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmit64Byte.setStatus('current')
lte8stOLT2NNI1StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmit65to127Byte.setStatus('current')
lte8stOLT2NNI1StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmit128to255Byte.setStatus('current')
lte8stOLT2NNI1StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmit255to511Byte.setStatus('current')
lte8stOLT2NNI1StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmit512to1023Byte.setStatus('current')
lte8stOLT2NNI1StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT2NNI1StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT2NNI1StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitCRCGen.setStatus('current')
lte8stOLT2NNI1StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitPauseFrames.setStatus('current')
lte8stOLT2NNI1StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitErroredBytes.setStatus('current')
lte8stOLT2NNI1StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 5, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT2NNI1StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 4, 100)).setObjects(("ELTEX-LTE8ST", "lte8stOLT2StateOltId"), ("ELTEX-LTE8ST", "lte8stOLT2StateMac"), ("ELTEX-LTE8ST", "lte8stOLT2StateFwRev"), ("ELTEX-LTE8ST", "lte8stOLT2StateOntCount"), ("ELTEX-LTE8ST", "lte8stOLT2StateState"), ("ELTEX-LTE8ST", "lte8stOLT2PON0Desc"), ("ELTEX-LTE8ST", "lte8stOLT2PON0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT2PON0Linked"), ("ELTEX-LTE8ST", "lte8stOLT2PON0Speed"), ("ELTEX-LTE8ST", "lte8stOLT2PON0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT2PON0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT2PON0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT2PON0FecUp"), ("ELTEX-LTE8ST", "lte8stOLT2PON0FecDown"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT2PON0StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT2PON0SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT2PON0SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT2PON1Desc"), ("ELTEX-LTE8ST", "lte8stOLT2PON1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT2PON1Linked"), ("ELTEX-LTE8ST", "lte8stOLT2PON1Speed"), ("ELTEX-LTE8ST", "lte8stOLT2PON1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT2PON1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT2PON1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT2PON1FecUp"), ("ELTEX-LTE8ST", "lte8stOLT2PON1FecDown"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT2PON1StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT2PON1SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT2PON1SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0Desc"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0Linked"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0Speed"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI0StatTransmitBufferUnderrun"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1Desc"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1Linked"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1Speed"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT2NNI1StatTransmitBufferUnderrun"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stOLT2Group = lte8stOLT2Group.setStatus('current')
lte8stOLT3 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5))
lte8stOLT3State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 1))
lte8stOLT3StateOltId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3StateOltId.setStatus('current')
lte8stOLT3StateMac = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3StateMac.setStatus('current')
lte8stOLT3StateFwRev = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3StateFwRev.setStatus('current')
lte8stOLT3StateOntCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3StateOntCount.setStatus('current')
lte8stOLT3StateState = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 1, 5), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3StateState.setStatus('current')
lte8stOLT3PON0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2))
lte8stOLT3PON0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0Desc.setStatus('current')
lte8stOLT3PON0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT3PON0Enabled.setStatus('current')
lte8stOLT3PON0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0Linked.setStatus('current')
lte8stOLT3PON0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0Speed.setStatus('current')
lte8stOLT3PON0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0Duplex.setStatus('current')
lte8stOLT3PON0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0FlowControl.setStatus('current')
lte8stOLT3PON0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0AutoNegotiate.setStatus('current')
lte8stOLT3PON0FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0FecUp.setStatus('current')
lte8stOLT3PON0FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0FecDown.setStatus('current')
lte8stOLT3PON0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10))
lte8stOLT3PON0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1))
lte8stOLT3PON0StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACBytes.setStatus('current')
lte8stOLT3PON0StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACFrames.setStatus('current')
lte8stOLT3PON0StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACUnicast.setStatus('current')
lte8stOLT3PON0StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACMulticast.setStatus('current')
lte8stOLT3PON0StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACBroadcast.setStatus('current')
lte8stOLT3PON0StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACUndersize.setStatus('current')
lte8stOLT3PON0StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACOversize.setStatus('current')
lte8stOLT3PON0StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACCRC32.setStatus('current')
lte8stOLT3PON0StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT3PON0StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT3PON0StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACReports.setStatus('current')
lte8stOLT3PON0StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACReportAbort.setStatus('current')
lte8stOLT3PON0StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT3PON0StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT3PON0StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACLLIDError.setStatus('current')
lte8stOLT3PON0StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT3PON0StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT3PON0StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT3PON0StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFByte.setStatus('current')
lte8stOLT3PON0StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFFrame.setStatus('current')
lte8stOLT3PON0StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFCRC8.setStatus('current')
lte8stOLT3PON0StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT3PON0StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT3PON0StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT3PON0StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT3PON0StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT3PON0StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT3PON0StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT3PON0StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT3PON0StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT3PON0StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT3PON0StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT3PON0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2))
lte8stOLT3PON0StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACBytes.setStatus('current')
lte8stOLT3PON0StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACFrames.setStatus('current')
lte8stOLT3PON0StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACUnicast.setStatus('current')
lte8stOLT3PON0StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACMultiCast.setStatus('current')
lte8stOLT3PON0StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACBroadCast.setStatus('current')
lte8stOLT3PON0StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT3PON0StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT3PON0StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT3PON0StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT3PON0StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACGateFrames.setStatus('current')
lte8stOLT3PON0StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACOamFrames.setStatus('current')
lte8stOLT3PON0StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACOamBytes.setStatus('current')
lte8stOLT3PON0StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT3PON0StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT3PON0StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitMACReport.setStatus('current')
lte8stOLT3PON0StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitLIFBytes.setStatus('current')
lte8stOLT3PON0StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitLIFFrames.setStatus('current')
lte8stOLT3PON0StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT3PON0StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT3PON0StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT3PON0StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT3PON0StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT3PON0SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0SFPVendor.setStatus('current')
lte8stOLT3PON0SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0SFPModel.setStatus('current')
lte8stOLT3PON0ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 2, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON0ONTCount.setStatus('current')
lte8stOLT3PON1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3))
lte8stOLT3PON1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1Desc.setStatus('current')
lte8stOLT3PON1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stOLT3PON1Enabled.setStatus('current')
lte8stOLT3PON1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1Linked.setStatus('current')
lte8stOLT3PON1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1Speed.setStatus('current')
lte8stOLT3PON1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1Duplex.setStatus('current')
lte8stOLT3PON1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1FlowControl.setStatus('current')
lte8stOLT3PON1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1AutoNegotiate.setStatus('current')
lte8stOLT3PON1FecUp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1FecUp.setStatus('current')
lte8stOLT3PON1FecDown = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1FecDown.setStatus('current')
lte8stOLT3PON1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10))
lte8stOLT3PON1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1))
lte8stOLT3PON1StatReceiveMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACBytes.setStatus('current')
lte8stOLT3PON1StatReceiveMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACFrames.setStatus('current')
lte8stOLT3PON1StatReceiveMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACUnicast.setStatus('current')
lte8stOLT3PON1StatReceiveMACMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACMulticast.setStatus('current')
lte8stOLT3PON1StatReceiveMACBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACBroadcast.setStatus('current')
lte8stOLT3PON1StatReceiveMACUndersize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACUndersize.setStatus('current')
lte8stOLT3PON1StatReceiveMACOversize = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACOversize.setStatus('current')
lte8stOLT3PON1StatReceiveMACCRC32 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACCRC32.setStatus('current')
lte8stOLT3PON1StatReceiveMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACMPCPFrames.setStatus('current')
lte8stOLT3PON1StatReceiveMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACMPCPBytes.setStatus('current')
lte8stOLT3PON1StatReceiveMACReports = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACReports.setStatus('current')
lte8stOLT3PON1StatReceiveMACReportAbort = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACReportAbort.setStatus('current')
lte8stOLT3PON1StatReceiveMACOAMFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACOAMFrames.setStatus('current')
lte8stOLT3PON1StatReceiveMACOAMBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACOAMBytes.setStatus('current')
lte8stOLT3PON1StatReceiveMACLLIDError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACLLIDError.setStatus('current')
lte8stOLT3PON1StatReceiveMACDropUngranted = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACDropUngranted.setStatus('current')
lte8stOLT3PON1StatReceiveMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACRegisterReq.setStatus('current')
lte8stOLT3PON1StatReceiveMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveMACRegisterAck.setStatus('current')
lte8stOLT3PON1StatReceiveLIFByte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFByte.setStatus('current')
lte8stOLT3PON1StatReceiveLIFFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFFrame.setStatus('current')
lte8stOLT3PON1StatReceiveLIFCRC8 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFCRC8.setStatus('current')
lte8stOLT3PON1StatReceiveLIFErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFErrorPkt.setStatus('current')
lte8stOLT3PON1StatReceiveLIFCodeErr = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFCodeErr.setStatus('current')
lte8stOLT3PON1StatReceiveLIFFecBlockOk = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFFecBlockOk.setStatus('current')
lte8stOLT3PON1StatReceiveLIFFecBlockCorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFFecBlockCorrectable.setStatus('current')
lte8stOLT3PON1StatReceiveLIFFecBlockUncorrectable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFFecBlockUncorrectable.setStatus('current')
lte8stOLT3PON1StatReceiveLIFFecCorrectableBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFFecCorrectableBytes.setStatus('current')
lte8stOLT3PON1StatReceiveLIFPostFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFPostFecGoodFrame.setStatus('current')
lte8stOLT3PON1StatReceiveLIFPostFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFPostFecBadFrame.setStatus('current')
lte8stOLT3PON1StatReceiveLIFPreFecGoodFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFPreFecGoodFrame.setStatus('current')
lte8stOLT3PON1StatReceiveLIFPreFecBadFrame = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFPreFecBadFrame.setStatus('current')
lte8stOLT3PON1StatReceiveLIFLaserIdlePower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatReceiveLIFLaserIdlePower.setStatus('current')
lte8stOLT3PON1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2))
lte8stOLT3PON1StatTransmitMACBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACBytes.setStatus('current')
lte8stOLT3PON1StatTransmitMACFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACFrames.setStatus('current')
lte8stOLT3PON1StatTransmitMACUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACUnicast.setStatus('current')
lte8stOLT3PON1StatTransmitMACMultiCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACMultiCast.setStatus('current')
lte8stOLT3PON1StatTransmitMACBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACBroadCast.setStatus('current')
lte8stOLT3PON1StatTransmitMACMPCPFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACMPCPFrames.setStatus('current')
lte8stOLT3PON1StatTransmitMACMPCPBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACMPCPBytes.setStatus('current')
lte8stOLT3PON1StatTransmitMACMPCPDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACMPCPDiscoveryTimeouts.setStatus('current')
lte8stOLT3PON1StatTransmitMACMPCPDiscoveryWindows = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACMPCPDiscoveryWindows.setStatus('current')
lte8stOLT3PON1StatTransmitMACGateFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACGateFrames.setStatus('current')
lte8stOLT3PON1StatTransmitMACOamFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACOamFrames.setStatus('current')
lte8stOLT3PON1StatTransmitMACOamBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACOamBytes.setStatus('current')
lte8stOLT3PON1StatTransmitMACRegisterReq = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACRegisterReq.setStatus('current')
lte8stOLT3PON1StatTransmitMACRegisterAck = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACRegisterAck.setStatus('current')
lte8stOLT3PON1StatTransmitMACReport = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitMACReport.setStatus('current')
lte8stOLT3PON1StatTransmitLIFBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitLIFBytes.setStatus('current')
lte8stOLT3PON1StatTransmitLIFFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitLIFFrames.setStatus('current')
lte8stOLT3PON1StatTransmitLIFFecBlocks = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitLIFFecBlocks.setStatus('current')
lte8stOLT3PON1StatTransmitLIFLaserPower = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitLIFLaserPower.setStatus('current')
lte8stOLT3PON1StatTransmitLIFLaserVCC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitLIFLaserVCC.setStatus('current')
lte8stOLT3PON1StatTransmitLIFLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitLIFLaserBias.setStatus('current')
lte8stOLT3PON1StatTransmitLIFLaserTemp = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 10, 2, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1StatTransmitLIFLaserTemp.setStatus('current')
lte8stOLT3PON1SFPVendor = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1SFPVendor.setStatus('current')
lte8stOLT3PON1SFPModel = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1SFPModel.setStatus('current')
lte8stOLT3PON1ONTCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 3, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3PON1ONTCount.setStatus('current')
lte8stOLT3NNI0 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4))
lte8stOLT3NNI0Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0Desc.setStatus('current')
lte8stOLT3NNI0Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0Enabled.setStatus('current')
lte8stOLT3NNI0Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0Linked.setStatus('current')
lte8stOLT3NNI0Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0Speed.setStatus('current')
lte8stOLT3NNI0Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0Duplex.setStatus('current')
lte8stOLT3NNI0FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0FlowControl.setStatus('current')
lte8stOLT3NNI0AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0AutoNegotiate.setStatus('current')
lte8stOLT3NNI0Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10))
lte8stOLT3NNI0StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1))
lte8stOLT3NNI0StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveBytes.setStatus('current')
lte8stOLT3NNI0StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveFrames.setStatus('current')
lte8stOLT3NNI0StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveUnicast.setStatus('current')
lte8stOLT3NNI0StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveMulticast.setStatus('current')
lte8stOLT3NNI0StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveBroadcast.setStatus('current')
lte8stOLT3NNI0StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceive64Byte.setStatus('current')
lte8stOLT3NNI0StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceive65to127Byte.setStatus('current')
lte8stOLT3NNI0StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceive128to255Byte.setStatus('current')
lte8stOLT3NNI0StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceive256to511Byte.setStatus('current')
lte8stOLT3NNI0StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceive512to1023Byte.setStatus('current')
lte8stOLT3NNI0StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceive1024to1518Byte.setStatus('current')
lte8stOLT3NNI0StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT3NNI0StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT3NNI0StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveOversizeFrames.setStatus('current')
lte8stOLT3NNI0StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveCRCErrors.setStatus('current')
lte8stOLT3NNI0StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceivePauseFrames.setStatus('current')
lte8stOLT3NNI0StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveAlignmentError.setStatus('current')
lte8stOLT3NNI0StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveErroredBytes.setStatus('current')
lte8stOLT3NNI0StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT3NNI0StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2))
lte8stOLT3NNI0StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitBytes.setStatus('current')
lte8stOLT3NNI0StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitFrames.setStatus('current')
lte8stOLT3NNI0StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitUnicast.setStatus('current')
lte8stOLT3NNI0StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitMulticast.setStatus('current')
lte8stOLT3NNI0StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitBroadCast.setStatus('current')
lte8stOLT3NNI0StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmit64Byte.setStatus('current')
lte8stOLT3NNI0StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmit65to127Byte.setStatus('current')
lte8stOLT3NNI0StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmit128to255Byte.setStatus('current')
lte8stOLT3NNI0StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmit255to511Byte.setStatus('current')
lte8stOLT3NNI0StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmit512to1023Byte.setStatus('current')
lte8stOLT3NNI0StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT3NNI0StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT3NNI0StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitCRCGen.setStatus('current')
lte8stOLT3NNI0StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitPauseFrames.setStatus('current')
lte8stOLT3NNI0StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitErroredBytes.setStatus('current')
lte8stOLT3NNI0StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 4, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI0StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT3NNI1 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5))
lte8stOLT3NNI1Desc = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1Desc.setStatus('current')
lte8stOLT3NNI1Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1Enabled.setStatus('current')
lte8stOLT3NNI1Linked = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1Linked.setStatus('current')
lte8stOLT3NNI1Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 4), OLTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1Speed.setStatus('current')
lte8stOLT3NNI1Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1Duplex.setStatus('current')
lte8stOLT3NNI1FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1FlowControl.setStatus('current')
lte8stOLT3NNI1AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1AutoNegotiate.setStatus('current')
lte8stOLT3NNI1Stat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10))
lte8stOLT3NNI1StatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1))
lte8stOLT3NNI1StatReceiveBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveBytes.setStatus('current')
lte8stOLT3NNI1StatReceiveFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveFrames.setStatus('current')
lte8stOLT3NNI1StatReceiveUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveUnicast.setStatus('current')
lte8stOLT3NNI1StatReceiveMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveMulticast.setStatus('current')
lte8stOLT3NNI1StatReceiveBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveBroadcast.setStatus('current')
lte8stOLT3NNI1StatReceive64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceive64Byte.setStatus('current')
lte8stOLT3NNI1StatReceive65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceive65to127Byte.setStatus('current')
lte8stOLT3NNI1StatReceive128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceive128to255Byte.setStatus('current')
lte8stOLT3NNI1StatReceive256to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceive256to511Byte.setStatus('current')
lte8stOLT3NNI1StatReceive512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceive512to1023Byte.setStatus('current')
lte8stOLT3NNI1StatReceive1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceive1024to1518Byte.setStatus('current')
lte8stOLT3NNI1StatReceiveGreater1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveGreater1518Byte.setStatus('current')
lte8stOLT3NNI1StatReceiveUndersizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveUndersizeFrames.setStatus('current')
lte8stOLT3NNI1StatReceiveOversizeFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveOversizeFrames.setStatus('current')
lte8stOLT3NNI1StatReceiveCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveCRCErrors.setStatus('current')
lte8stOLT3NNI1StatReceivePauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceivePauseFrames.setStatus('current')
lte8stOLT3NNI1StatReceiveAlignmentError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveAlignmentError.setStatus('current')
lte8stOLT3NNI1StatReceiveErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveErroredBytes.setStatus('current')
lte8stOLT3NNI1StatReceiveLineCodeErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatReceiveLineCodeErrors.setStatus('current')
lte8stOLT3NNI1StatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2))
lte8stOLT3NNI1StatTransmitBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitBytes.setStatus('current')
lte8stOLT3NNI1StatTransmitFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitFrames.setStatus('current')
lte8stOLT3NNI1StatTransmitUnicast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitUnicast.setStatus('current')
lte8stOLT3NNI1StatTransmitMulticast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitMulticast.setStatus('current')
lte8stOLT3NNI1StatTransmitBroadCast = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitBroadCast.setStatus('current')
lte8stOLT3NNI1StatTransmit64Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmit64Byte.setStatus('current')
lte8stOLT3NNI1StatTransmit65to127Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmit65to127Byte.setStatus('current')
lte8stOLT3NNI1StatTransmit128to255Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmit128to255Byte.setStatus('current')
lte8stOLT3NNI1StatTransmit255to511Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmit255to511Byte.setStatus('current')
lte8stOLT3NNI1StatTransmit512to1023Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmit512to1023Byte.setStatus('current')
lte8stOLT3NNI1StatTransmit1024to1518Byte = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmit1024to1518Byte.setStatus('current')
lte8stOLT3NNI1StatTransmitGreater1518Bytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitGreater1518Bytes.setStatus('current')
lte8stOLT3NNI1StatTransmitCRCGen = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitCRCGen.setStatus('current')
lte8stOLT3NNI1StatTransmitPauseFrames = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitPauseFrames.setStatus('current')
lte8stOLT3NNI1StatTransmitErroredBytes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitErroredBytes.setStatus('current')
lte8stOLT3NNI1StatTransmitBufferUnderrun = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 5, 10, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stOLT3NNI1StatTransmitBufferUnderrun.setStatus('current')
lte8stOLT3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 5, 100)).setObjects(("ELTEX-LTE8ST", "lte8stOLT3StateOltId"), ("ELTEX-LTE8ST", "lte8stOLT3StateMac"), ("ELTEX-LTE8ST", "lte8stOLT3StateFwRev"), ("ELTEX-LTE8ST", "lte8stOLT3StateOntCount"), ("ELTEX-LTE8ST", "lte8stOLT3StateState"), ("ELTEX-LTE8ST", "lte8stOLT3PON0Desc"), ("ELTEX-LTE8ST", "lte8stOLT3PON0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT3PON0Linked"), ("ELTEX-LTE8ST", "lte8stOLT3PON0Speed"), ("ELTEX-LTE8ST", "lte8stOLT3PON0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT3PON0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT3PON0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT3PON0FecUp"), ("ELTEX-LTE8ST", "lte8stOLT3PON0FecDown"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT3PON0StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT3PON0SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT3PON0SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT3PON1Desc"), ("ELTEX-LTE8ST", "lte8stOLT3PON1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT3PON1Linked"), ("ELTEX-LTE8ST", "lte8stOLT3PON1Speed"), ("ELTEX-LTE8ST", "lte8stOLT3PON1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT3PON1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT3PON1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT3PON1FecUp"), ("ELTEX-LTE8ST", "lte8stOLT3PON1FecDown"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACMulticast"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACUndersize"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACOversize"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACCRC32"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACReports"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACReportAbort"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACOAMFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACOAMBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACLLIDError"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACDropUngranted"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFByte"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFCRC8"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFErrorPkt"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFCodeErr"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFFecBlockOk"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFFecBlockCorrectable"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFFecBlockUncorrectable"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFFecCorrectableBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFPostFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFPostFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFPreFecGoodFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFPreFecBadFrame"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatReceiveLIFLaserIdlePower"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACMultiCast"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACMPCPFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACMPCPBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACMPCPDiscoveryTimeouts"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACMPCPDiscoveryWindows"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACGateFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACOamFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACOamBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACRegisterReq"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACRegisterAck"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitMACReport"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitLIFBytes"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitLIFFrames"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitLIFFecBlocks"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitLIFLaserPower"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitLIFLaserVCC"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitLIFLaserBias"), ("ELTEX-LTE8ST", "lte8stOLT3PON1StatTransmitLIFLaserTemp"), ("ELTEX-LTE8ST", "lte8stOLT3PON1SFPVendor"), ("ELTEX-LTE8ST", "lte8stOLT3PON1SFPModel"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0Desc"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0Enabled"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0Linked"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0Speed"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0Duplex"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI0StatTransmitBufferUnderrun"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1Desc"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1Enabled"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1Linked"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1Speed"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1Duplex"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1FlowControl"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveMulticast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveBroadcast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceive64Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceive65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceive128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceive256to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceive512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceive1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveOversizeFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveCRCErrors"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceivePauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveAlignmentError"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatReceiveLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitUnicast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitMulticast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitBroadCast"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmit64Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmit65to127Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmit128to255Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmit255to511Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmit512to1023Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmit1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitGreater1518Bytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitCRCGen"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitPauseFrames"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitErroredBytes"), ("ELTEX-LTE8ST", "lte8stOLT3NNI1StatTransmitBufferUnderrun"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stOLT3Group = lte8stOLT3Group.setStatus('current')
lte8stONT = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6))
lte8stONTStateTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1), )
if mibBuilder.loadTexts: lte8stONTStateTable.setStatus('current')
lte8stONTStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTStateMac"))
if mibBuilder.loadTexts: lte8stONTStateEntry.setStatus('current')
lte8stONTStateMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateMac.setStatus('current')
lte8stONTStateType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 2), OntType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateType.setStatus('current')
lte8stONTStateFwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateFwRev.setStatus('current')
lte8stONTStateOLTId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateOLTId.setStatus('current')
lte8stONTStateOLTPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateOLTPort.setStatus('current')
lte8stONTStateState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 6), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateState.setStatus('current')
lte8stONTStateId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateId.setStatus('current')
lte8stONTStateLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateLaserPower.setStatus('current')
lte8stONTStateReconfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTStateReconfigure.setStatus('current')
lte8stONTStateUpdateFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTStateUpdateFirmware.setStatus('current')
lte8stONTStateLaserPowerdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateLaserPowerdBm.setStatus('current')
lte8stONTStateVideoLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateVideoLaserPower.setStatus('current')
lte8stONTStateVideoLaserPowerdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateVideoLaserPowerdBm.setStatus('current')
lte8stONTStateVendorFwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStateVendorFwRev.setStatus('current')
lte8stONTPONTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2), )
if mibBuilder.loadTexts: lte8stONTPONTable.setStatus('current')
lte8stONTPONEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTPONMac"))
if mibBuilder.loadTexts: lte8stONTPONEntry.setStatus('current')
lte8stONTPONMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONMac.setStatus('current')
lte8stONTPONDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONDesc.setStatus('current')
lte8stONTPONEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONEnabled.setStatus('current')
lte8stONTPONLinked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONLinked.setStatus('current')
lte8stONTPONSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 5), ONTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONSpeed.setStatus('current')
lte8stONTPONDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONDuplex.setStatus('current')
lte8stONTPONFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONFlowControl.setStatus('current')
lte8stONTPONAutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONAutoNegotiate.setStatus('current')
lte8stONTPONFecUp = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONFecUp.setStatus('current')
lte8stONTPONFecDown = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 2, 1, 10), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTPONFecDown.setStatus('current')
lte8stONTUNI0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3), )
if mibBuilder.loadTexts: lte8stONTUNI0Table.setStatus('current')
lte8stONTUNI0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTUNI0Mac"))
if mibBuilder.loadTexts: lte8stONTUNI0Entry.setStatus('current')
lte8stONTUNI0Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0Mac.setStatus('current')
lte8stONTUNI0Desc = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0Desc.setStatus('current')
lte8stONTUNI0Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0Enabled.setStatus('current')
lte8stONTUNI0Linked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0Linked.setStatus('current')
lte8stONTUNI0Speed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 5), ONTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0Speed.setStatus('current')
lte8stONTUNI0Duplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0Duplex.setStatus('current')
lte8stONTUNI0FlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0FlowControl.setStatus('current')
lte8stONTUNI0AutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 3, 1, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI0AutoNegotiate.setStatus('current')
lte8stONTUNI1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4), )
if mibBuilder.loadTexts: lte8stONTUNI1Table.setStatus('current')
lte8stONTUNI1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTUNI1Mac"))
if mibBuilder.loadTexts: lte8stONTUNI1Entry.setStatus('current')
lte8stONTUNI1Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1Mac.setStatus('current')
lte8stONTUNI1Desc = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1Desc.setStatus('current')
lte8stONTUNI1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1Enabled.setStatus('current')
lte8stONTUNI1Linked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1Linked.setStatus('current')
lte8stONTUNI1Speed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 5), ONTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1Speed.setStatus('current')
lte8stONTUNI1Duplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1Duplex.setStatus('current')
lte8stONTUNI1FlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1FlowControl.setStatus('current')
lte8stONTUNI1AutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 4, 1, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTUNI1AutoNegotiate.setStatus('current')
lte8stONTLink0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 5), )
if mibBuilder.loadTexts: lte8stONTLink0Table.setStatus('current')
lte8stONTLink0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 5, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTLink0ONTMac"))
if mibBuilder.loadTexts: lte8stONTLink0Entry.setStatus('current')
lte8stONTLink0ONTMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink0ONTMac.setStatus('current')
lte8stONTLink0Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink0Mac.setStatus('current')
lte8stONTLink0Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink0Llid.setStatus('current')
lte8stONTLink0State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 5, 1, 4), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink0State.setStatus('current')
lte8stONTLink1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 6), )
if mibBuilder.loadTexts: lte8stONTLink1Table.setStatus('current')
lte8stONTLink1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 6, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTLink1ONTMac"))
if mibBuilder.loadTexts: lte8stONTLink1Entry.setStatus('current')
lte8stONTLink1ONTMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink1ONTMac.setStatus('current')
lte8stONTLink1Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 6, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink1Mac.setStatus('current')
lte8stONTLink1Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink1Llid.setStatus('current')
lte8stONTLink1State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 6, 1, 4), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink1State.setStatus('current')
lte8stONTLink2Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 7), )
if mibBuilder.loadTexts: lte8stONTLink2Table.setStatus('current')
lte8stONTLink2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 7, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTLink2ONTMac"))
if mibBuilder.loadTexts: lte8stONTLink2Entry.setStatus('current')
lte8stONTLink2ONTMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 7, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink2ONTMac.setStatus('current')
lte8stONTLink2Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 7, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink2Mac.setStatus('current')
lte8stONTLink2Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink2Llid.setStatus('current')
lte8stONTLink2State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 7, 1, 4), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink2State.setStatus('current')
lte8stONTLink3Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 8), )
if mibBuilder.loadTexts: lte8stONTLink3Table.setStatus('current')
lte8stONTLink3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 8, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTLink3ONTMac"))
if mibBuilder.loadTexts: lte8stONTLink3Entry.setStatus('current')
lte8stONTLink3ONTMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 8, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink3ONTMac.setStatus('current')
lte8stONTLink3Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 8, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink3Mac.setStatus('current')
lte8stONTLink3Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink3Llid.setStatus('current')
lte8stONTLink3State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 8, 1, 4), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTLink3State.setStatus('current')
lte8stONTIDStateTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10), )
if mibBuilder.loadTexts: lte8stONTIDStateTable.setStatus('current')
lte8stONTIDStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDStateEntry.setStatus('current')
lte8stONTIDStateTree = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateTree.setStatus('current')
lte8stONTIDStateID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateID.setStatus('current')
lte8stONTIDStateMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateMac.setStatus('current')
lte8stONTIDStateType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 4), OntType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateType.setStatus('current')
lte8stONTIDStateFwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateFwRev.setStatus('current')
lte8stONTIDStateOLTId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateOLTId.setStatus('current')
lte8stONTIDStateOLTPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateOLTPort.setStatus('current')
lte8stONTIDStateState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 8), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateState.setStatus('current')
lte8stONTIDStateLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateLaserPower.setStatus('current')
lte8stONTIDStateReconfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDStateReconfigure.setStatus('current')
lte8stONTIDStateUpdateFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDStateUpdateFirmware.setStatus('current')
lte8stONTIDStateLaserPowerdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateLaserPowerdBm.setStatus('current')
lte8stONTIDStateVideoLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateVideoLaserPower.setStatus('current')
lte8stONTIDStateVideoLaserPowerdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateVideoLaserPowerdBm.setStatus('current')
lte8stONTIDStateVendorFwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 10, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStateVendorFwRev.setStatus('current')
lte8stONTIDPONTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11), )
if mibBuilder.loadTexts: lte8stONTIDPONTable.setStatus('current')
lte8stONTIDPONEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDPONEntry.setStatus('current')
lte8stONTIDPONDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONDesc.setStatus('current')
lte8stONTIDPONEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONEnabled.setStatus('current')
lte8stONTIDPONLinked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONLinked.setStatus('current')
lte8stONTIDPONSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 4), ONTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONSpeed.setStatus('current')
lte8stONTIDPONDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONDuplex.setStatus('current')
lte8stONTIDPONFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONFlowControl.setStatus('current')
lte8stONTIDPONAutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONAutoNegotiate.setStatus('current')
lte8stONTIDPONFecUp = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONFecUp.setStatus('current')
lte8stONTIDPONFecDown = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 11, 1, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDPONFecDown.setStatus('current')
lte8stONTIDUNI0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12), )
if mibBuilder.loadTexts: lte8stONTIDUNI0Table.setStatus('current')
lte8stONTIDUNI0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDUNI0Entry.setStatus('current')
lte8stONTIDUNI0Desc = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI0Desc.setStatus('current')
lte8stONTIDUNI0Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI0Enabled.setStatus('current')
lte8stONTIDUNI0Linked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI0Linked.setStatus('current')
lte8stONTIDUNI0Speed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1, 4), ONTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI0Speed.setStatus('current')
lte8stONTIDUNI0Duplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI0Duplex.setStatus('current')
lte8stONTIDUNI0FlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI0FlowControl.setStatus('current')
lte8stONTIDUNI0AutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 12, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI0AutoNegotiate.setStatus('current')
lte8stONTIDUNI1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13), )
if mibBuilder.loadTexts: lte8stONTIDUNI1Table.setStatus('current')
lte8stONTIDUNI1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDUNI1Entry.setStatus('current')
lte8stONTIDUNI1Desc = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI1Desc.setStatus('current')
lte8stONTIDUNI1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI1Enabled.setStatus('current')
lte8stONTIDUNI1Linked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI1Linked.setStatus('current')
lte8stONTIDUNI1Speed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1, 4), ONTPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI1Speed.setStatus('current')
lte8stONTIDUNI1Duplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI1Duplex.setStatus('current')
lte8stONTIDUNI1FlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI1FlowControl.setStatus('current')
lte8stONTIDUNI1AutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 13, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDUNI1AutoNegotiate.setStatus('current')
lte8stONTIDLink0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 14), )
if mibBuilder.loadTexts: lte8stONTIDLink0Table.setStatus('current')
lte8stONTIDLink0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 14, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDLink0Entry.setStatus('current')
lte8stONTIDLink0Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 14, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink0Mac.setStatus('current')
lte8stONTIDLink0Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 14, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink0Llid.setStatus('current')
lte8stONTIDLink0State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 14, 1, 3), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink0State.setStatus('current')
lte8stONTIDLink1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 15), )
if mibBuilder.loadTexts: lte8stONTIDLink1Table.setStatus('current')
lte8stONTIDLink1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 15, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDLink1Entry.setStatus('current')
lte8stONTIDLink1Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 15, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink1Mac.setStatus('current')
lte8stONTIDLink1Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 15, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink1Llid.setStatus('current')
lte8stONTIDLink1State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 15, 1, 3), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink1State.setStatus('current')
lte8stONTIDLink2Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 16), )
if mibBuilder.loadTexts: lte8stONTIDLink2Table.setStatus('current')
lte8stONTIDLink2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 16, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDLink2Entry.setStatus('current')
lte8stONTIDLink2Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 16, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink2Mac.setStatus('current')
lte8stONTIDLink2Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 16, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink2Llid.setStatus('current')
lte8stONTIDLink2State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 16, 1, 3), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink2State.setStatus('current')
lte8stONTIDLink3Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 17), )
if mibBuilder.loadTexts: lte8stONTIDLink3Table.setStatus('current')
lte8stONTIDLink3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 17, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDLink3Entry.setStatus('current')
lte8stONTIDLink3Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 17, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink3Mac.setStatus('current')
lte8stONTIDLink3Llid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 17, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink3Llid.setStatus('current')
lte8stONTIDLink3State = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 17, 1, 3), LTEObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDLink3State.setStatus('current')
lte8stTreeStatesTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 20), )
if mibBuilder.loadTexts: lte8stTreeStatesTable.setStatus('current')
lte8stTreeStatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 20, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stTreeStatesTree"))
if mibBuilder.loadTexts: lte8stTreeStatesEntry.setStatus('current')
lte8stTreeStatesTree = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stTreeStatesTree.setStatus('current')
lte8stTreeStatesConfiguredONT = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 20, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stTreeStatesConfiguredONT.setStatus('current')
lte8stTreeStatesActiveONT = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 20, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stTreeStatesActiveONT.setStatus('current')
lte8stTreeStatesErrorONT = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 20, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stTreeStatesErrorONT.setStatus('current')
lte8stONTFactorySettingsTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30), )
if mibBuilder.loadTexts: lte8stONTFactorySettingsTable.setStatus('current')
lte8stONTFactorySettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTFactorySettingsMac"))
if mibBuilder.loadTexts: lte8stONTFactorySettingsEntry.setStatus('current')
lte8stONTFactorySettingsMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTFactorySettingsMac.setStatus('current')
lte8stONTFactorySettingsSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTFactorySettingsSerialNumber.setStatus('current')
lte8stONTFactorySettingsHardwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTFactorySettingsHardwareRevision.setStatus('current')
lte8stONTFactorySettingsMacsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTFactorySettingsMacsNumber.setStatus('current')
lte8stONTFactorySettingsBaseMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTFactorySettingsBaseMac.setStatus('current')
lte8stONTFactorySettingsEPONMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 30, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTFactorySettingsEPONMac.setStatus('current')
lte8stONTGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 6, 100)).setObjects(("ELTEX-LTE8ST", "lte8stONTStateMac"), ("ELTEX-LTE8ST", "lte8stONTStateType"), ("ELTEX-LTE8ST", "lte8stONTStateFwRev"), ("ELTEX-LTE8ST", "lte8stONTStateOLTId"), ("ELTEX-LTE8ST", "lte8stONTStateOLTPort"), ("ELTEX-LTE8ST", "lte8stONTStateState"), ("ELTEX-LTE8ST", "lte8stONTStateId"), ("ELTEX-LTE8ST", "lte8stONTStateLaserPower"), ("ELTEX-LTE8ST", "lte8stONTStateReconfigure"), ("ELTEX-LTE8ST", "lte8stONTStateUpdateFirmware"), ("ELTEX-LTE8ST", "lte8stONTPONMac"), ("ELTEX-LTE8ST", "lte8stONTPONDesc"), ("ELTEX-LTE8ST", "lte8stONTPONEnabled"), ("ELTEX-LTE8ST", "lte8stONTPONLinked"), ("ELTEX-LTE8ST", "lte8stONTPONSpeed"), ("ELTEX-LTE8ST", "lte8stONTPONDuplex"), ("ELTEX-LTE8ST", "lte8stONTPONFlowControl"), ("ELTEX-LTE8ST", "lte8stONTPONAutoNegotiate"), ("ELTEX-LTE8ST", "lte8stONTPONFecUp"), ("ELTEX-LTE8ST", "lte8stONTPONFecDown"), ("ELTEX-LTE8ST", "lte8stONTUNI0Mac"), ("ELTEX-LTE8ST", "lte8stONTUNI0Desc"), ("ELTEX-LTE8ST", "lte8stONTUNI0Enabled"), ("ELTEX-LTE8ST", "lte8stONTUNI0Linked"), ("ELTEX-LTE8ST", "lte8stONTUNI0Speed"), ("ELTEX-LTE8ST", "lte8stONTUNI0Duplex"), ("ELTEX-LTE8ST", "lte8stONTUNI0FlowControl"), ("ELTEX-LTE8ST", "lte8stONTUNI0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stONTUNI1Mac"), ("ELTEX-LTE8ST", "lte8stONTUNI1Desc"), ("ELTEX-LTE8ST", "lte8stONTUNI1Enabled"), ("ELTEX-LTE8ST", "lte8stONTUNI1Linked"), ("ELTEX-LTE8ST", "lte8stONTUNI1Speed"), ("ELTEX-LTE8ST", "lte8stONTUNI1Duplex"), ("ELTEX-LTE8ST", "lte8stONTUNI1FlowControl"), ("ELTEX-LTE8ST", "lte8stONTUNI1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stONTLink0ONTMac"), ("ELTEX-LTE8ST", "lte8stONTLink0Mac"), ("ELTEX-LTE8ST", "lte8stONTLink0Llid"), ("ELTEX-LTE8ST", "lte8stONTLink0State"), ("ELTEX-LTE8ST", "lte8stONTLink1ONTMac"), ("ELTEX-LTE8ST", "lte8stONTLink1Mac"), ("ELTEX-LTE8ST", "lte8stONTLink1Llid"), ("ELTEX-LTE8ST", "lte8stONTLink1State"), ("ELTEX-LTE8ST", "lte8stONTLink2ONTMac"), ("ELTEX-LTE8ST", "lte8stONTLink2Mac"), ("ELTEX-LTE8ST", "lte8stONTLink2Llid"), ("ELTEX-LTE8ST", "lte8stONTLink2State"), ("ELTEX-LTE8ST", "lte8stONTLink3ONTMac"), ("ELTEX-LTE8ST", "lte8stONTLink3Mac"), ("ELTEX-LTE8ST", "lte8stONTLink3Llid"), ("ELTEX-LTE8ST", "lte8stONTLink3State"), ("ELTEX-LTE8ST", "lte8stONTIDStateTree"), ("ELTEX-LTE8ST", "lte8stONTIDStateID"), ("ELTEX-LTE8ST", "lte8stONTIDStateMac"), ("ELTEX-LTE8ST", "lte8stONTIDStateType"), ("ELTEX-LTE8ST", "lte8stONTIDStateFwRev"), ("ELTEX-LTE8ST", "lte8stONTIDStateOLTId"), ("ELTEX-LTE8ST", "lte8stONTIDStateOLTPort"), ("ELTEX-LTE8ST", "lte8stONTIDStateState"), ("ELTEX-LTE8ST", "lte8stONTIDStateLaserPower"), ("ELTEX-LTE8ST", "lte8stONTIDStateReconfigure"), ("ELTEX-LTE8ST", "lte8stONTIDStateUpdateFirmware"), ("ELTEX-LTE8ST", "lte8stONTIDPONDesc"), ("ELTEX-LTE8ST", "lte8stONTIDPONEnabled"), ("ELTEX-LTE8ST", "lte8stONTIDPONLinked"), ("ELTEX-LTE8ST", "lte8stONTIDPONSpeed"), ("ELTEX-LTE8ST", "lte8stONTIDPONDuplex"), ("ELTEX-LTE8ST", "lte8stONTIDPONFlowControl"), ("ELTEX-LTE8ST", "lte8stONTIDPONAutoNegotiate"), ("ELTEX-LTE8ST", "lte8stONTIDPONFecUp"), ("ELTEX-LTE8ST", "lte8stONTIDPONFecDown"), ("ELTEX-LTE8ST", "lte8stONTIDUNI0Desc"), ("ELTEX-LTE8ST", "lte8stONTIDUNI0Enabled"), ("ELTEX-LTE8ST", "lte8stONTIDUNI0Linked"), ("ELTEX-LTE8ST", "lte8stONTIDUNI0Speed"), ("ELTEX-LTE8ST", "lte8stONTIDUNI0Duplex"), ("ELTEX-LTE8ST", "lte8stONTIDUNI0FlowControl"), ("ELTEX-LTE8ST", "lte8stONTIDUNI0AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stONTIDUNI1Desc"), ("ELTEX-LTE8ST", "lte8stONTIDUNI1Enabled"), ("ELTEX-LTE8ST", "lte8stONTIDUNI1Linked"), ("ELTEX-LTE8ST", "lte8stONTIDUNI1Speed"), ("ELTEX-LTE8ST", "lte8stONTIDUNI1Duplex"), ("ELTEX-LTE8ST", "lte8stONTIDUNI1FlowControl"), ("ELTEX-LTE8ST", "lte8stONTIDUNI1AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stONTIDLink0Mac"), ("ELTEX-LTE8ST", "lte8stONTIDLink0Llid"), ("ELTEX-LTE8ST", "lte8stONTIDLink0State"), ("ELTEX-LTE8ST", "lte8stONTIDLink1Mac"), ("ELTEX-LTE8ST", "lte8stONTIDLink1Llid"), ("ELTEX-LTE8ST", "lte8stONTIDLink1State"), ("ELTEX-LTE8ST", "lte8stONTIDLink2Mac"), ("ELTEX-LTE8ST", "lte8stONTIDLink2Llid"), ("ELTEX-LTE8ST", "lte8stONTIDLink2State"), ("ELTEX-LTE8ST", "lte8stONTIDLink3Mac"), ("ELTEX-LTE8ST", "lte8stONTIDLink3Llid"), ("ELTEX-LTE8ST", "lte8stONTIDLink3State"), ("ELTEX-LTE8ST", "lte8stTreeStatesTree"), ("ELTEX-LTE8ST", "lte8stTreeStatesConfiguredONT"), ("ELTEX-LTE8ST", "lte8stTreeStatesActiveONT"), ("ELTEX-LTE8ST", "lte8stTreeStatesErrorONT"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stONTGroup = lte8stONTGroup.setStatus('current')
lte8stONTStat = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7))
lte8stONTStatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1))
lte8stONTStatReceivePONTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1), )
if mibBuilder.loadTexts: lte8stONTStatReceivePONTable.setStatus('current')
lte8stONTStatReceivePONEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTStatReceivePONMac"))
if mibBuilder.loadTexts: lte8stONTStatReceivePONEntry.setStatus('current')
lte8stONTStatReceivePONMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONMac.setStatus('current')
lte8stONTStatReceivePONBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONBytes.setStatus('current')
lte8stONTStatReceivePONFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONFrames.setStatus('current')
lte8stONTStatReceivePONUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONUnicast.setStatus('current')
lte8stONTStatReceivePONMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONMulticast.setStatus('current')
lte8stONTStatReceivePONBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONBroadcast.setStatus('current')
lte8stONTStatReceivePON64Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePON64Byte.setStatus('current')
lte8stONTStatReceivePON65to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePON65to127Byte.setStatus('current')
lte8stONTStatReceivePON128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePON128to255Byte.setStatus('current')
lte8stONTStatReceivePON256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePON256to511Byte.setStatus('current')
lte8stONTStatReceivePON512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePON512to1023Byte.setStatus('current')
lte8stONTStatReceivePON1024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePON1024to1518Byte.setStatus('current')
lte8stONTStatReceivePONGreater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONGreater1518Byte.setStatus('current')
lte8stONTStatReceivePONUndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONUndersizeFrames.setStatus('current')
lte8stONTStatReceivePONFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONFCSErrors.setStatus('current')
lte8stONTStatReceivePONCRC8Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONCRC8Errors.setStatus('current')
lte8stONTStatReceivePONLineCodeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONLineCodeErrors.setStatus('current')
lte8stONTStatReceivePONDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONDroppedBytes.setStatus('current')
lte8stONTStatReceivePONDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONDroppedFrames.setStatus('current')
lte8stONTStatReceivePONDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONDelayedBytes.setStatus('current')
lte8stONTStatReceivePONDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONDelayMax.setStatus('current')
lte8stONTStatReceivePONDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONDelayThresh.setStatus('current')
lte8stONTStatReceivePONErroredFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONErroredFrames.setStatus('current')
lte8stONTStatReceivePONLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONLaserPower.setStatus('current')
lte8stONTStatReceivePONInvalidSLDFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONInvalidSLDFrames.setStatus('current')
lte8stONTStatReceivePONONTDestinedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONONTDestinedBytes.setStatus('current')
lte8stONTStatReceivePONErroredONTDestinedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceivePONErroredONTDestinedBytes.setStatus('current')
lte8stONTStatReceiveUNI0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2), )
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Table.setStatus('current')
lte8stONTStatReceiveUNI0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Mac"))
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Entry.setStatus('current')
lte8stONTStatReceiveUNI0Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Mac.setStatus('current')
lte8stONTStatReceiveUNI0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Bytes.setStatus('current')
lte8stONTStatReceiveUNI0Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Frames.setStatus('current')
lte8stONTStatReceiveUNI0Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Unicast.setStatus('current')
lte8stONTStatReceiveUNI0Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Multicast.setStatus('current')
lte8stONTStatReceiveUNI0Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Broadcast.setStatus('current')
lte8stONTStatReceiveUNI064Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI064Byte.setStatus('current')
lte8stONTStatReceiveUNI065to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI065to127Byte.setStatus('current')
lte8stONTStatReceiveUNI0128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0128to255Byte.setStatus('current')
lte8stONTStatReceiveUNI0256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0256to511Byte.setStatus('current')
lte8stONTStatReceiveUNI0512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0512to1023Byte.setStatus('current')
lte8stONTStatReceiveUNI01024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI01024to1518Byte.setStatus('current')
lte8stONTStatReceiveUNI0Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0Greater1518Byte.setStatus('current')
lte8stONTStatReceiveUNI0UndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0UndersizeFrames.setStatus('current')
lte8stONTStatReceiveUNI0OversizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0OversizeFrames.setStatus('current')
lte8stONTStatReceiveUNI0PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0PauseFrames.setStatus('current')
lte8stONTStatReceiveUNI0LengthError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0LengthError.setStatus('current')
lte8stONTStatReceiveUNI0AlignmentError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0AlignmentError.setStatus('current')
lte8stONTStatReceiveUNI0CRC32Error = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI0CRC32Error.setStatus('current')
lte8stONTStatReceiveUNI1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3), )
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Table.setStatus('current')
lte8stONTStatReceiveUNI1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Mac"))
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Entry.setStatus('current')
lte8stONTStatReceiveUNI1Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Mac.setStatus('current')
lte8stONTStatReceiveUNI1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Bytes.setStatus('current')
lte8stONTStatReceiveUNI1Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Frames.setStatus('current')
lte8stONTStatReceiveUNI1Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Unicast.setStatus('current')
lte8stONTStatReceiveUNI1Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Multicast.setStatus('current')
lte8stONTStatReceiveUNI1Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Broadcast.setStatus('current')
lte8stONTStatReceiveUNI164Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI164Byte.setStatus('current')
lte8stONTStatReceiveUNI165to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI165to127Byte.setStatus('current')
lte8stONTStatReceiveUNI1128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1128to255Byte.setStatus('current')
lte8stONTStatReceiveUNI1256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1256to511Byte.setStatus('current')
lte8stONTStatReceiveUNI1512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1512to1023Byte.setStatus('current')
lte8stONTStatReceiveUNI11024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI11024to1518Byte.setStatus('current')
lte8stONTStatReceiveUNI1Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1Greater1518Byte.setStatus('current')
lte8stONTStatReceiveUNI1UndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1UndersizeFrames.setStatus('current')
lte8stONTStatReceiveUNI1OversizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1OversizeFrames.setStatus('current')
lte8stONTStatReceiveUNI1PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1PauseFrames.setStatus('current')
lte8stONTStatReceiveUNI1LengthError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1LengthError.setStatus('current')
lte8stONTStatReceiveUNI1AlignmentError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1AlignmentError.setStatus('current')
lte8stONTStatReceiveUNI1CRC32Error = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatReceiveUNI1CRC32Error.setStatus('current')
lte8stONTStatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2))
lte8stONTStatTransmitPONTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1), )
if mibBuilder.loadTexts: lte8stONTStatTransmitPONTable.setStatus('current')
lte8stONTStatTransmitPONEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTStatTransmitPONMac"))
if mibBuilder.loadTexts: lte8stONTStatTransmitPONEntry.setStatus('current')
lte8stONTStatTransmitPONMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONMac.setStatus('current')
lte8stONTStatTransmitPONBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONBytes.setStatus('current')
lte8stONTStatTransmitPONFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONFrames.setStatus('current')
lte8stONTStatTransmitPONUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONUnicast.setStatus('current')
lte8stONTStatTransmitPONMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONMulticast.setStatus('current')
lte8stONTStatTransmitPONBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONBroadcast.setStatus('current')
lte8stONTStatTransmitPON64Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPON64Byte.setStatus('current')
lte8stONTStatTransmitPON65to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPON65to127Byte.setStatus('current')
lte8stONTStatTransmitPON128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPON128to255Byte.setStatus('current')
lte8stONTStatTransmitPON256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPON256to511Byte.setStatus('current')
lte8stONTStatTransmitPON512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPON512to1023Byte.setStatus('current')
lte8stONTStatTransmitPON1024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPON1024to1518Byte.setStatus('current')
lte8stONTStatTransmitPONGreater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONGreater1518Byte.setStatus('current')
lte8stONTStatTransmitPONDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONDroppedBytes.setStatus('current')
lte8stONTStatTransmitPONDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONDroppedFrames.setStatus('current')
lte8stONTStatTransmitPONDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONDelayedBytes.setStatus('current')
lte8stONTStatTransmitPONDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONDelayMax.setStatus('current')
lte8stONTStatTransmitPONDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONDelayThresh.setStatus('current')
lte8stONTStatTransmitPONUnusedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONUnusedBytes.setStatus('current')
lte8stONTStatTransmitPONLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONLaserPower.setStatus('current')
lte8stONTStatTransmitPONLaserVCC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONLaserVCC.setStatus('current')
lte8stONTStatTransmitPONLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONLaserBias.setStatus('current')
lte8stONTStatTransmitPONLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitPONLaserTemp.setStatus('current')
lte8stONTStatTransmitUNI0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2), )
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Table.setStatus('current')
lte8stONTStatTransmitUNI0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Mac"))
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Entry.setStatus('current')
lte8stONTStatTransmitUNI0Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Mac.setStatus('current')
lte8stONTStatTransmitUNI0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Bytes.setStatus('current')
lte8stONTStatTransmitUNI0Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Frames.setStatus('current')
lte8stONTStatTransmitUNI0Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Unicast.setStatus('current')
lte8stONTStatTransmitUNI0Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Multicast.setStatus('current')
lte8stONTStatTransmitUNI0Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Broadcast.setStatus('current')
lte8stONTStatTransmitUNI064Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI064Byte.setStatus('current')
lte8stONTStatTransmitUNI065to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI065to127Byte.setStatus('current')
lte8stONTStatTransmitUNI0128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0128to255Byte.setStatus('current')
lte8stONTStatTransmitUNI0256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0256to511Byte.setStatus('current')
lte8stONTStatTransmitUNI0512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0512to1023Byte.setStatus('current')
lte8stONTStatTransmitUNI01024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI01024to1518Byte.setStatus('current')
lte8stONTStatTransmitUNI0Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0Greater1518Byte.setStatus('current')
lte8stONTStatTransmitUNI0PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0PauseFrames.setStatus('current')
lte8stONTStatTransmitUNI0DroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0DroppedBytes.setStatus('current')
lte8stONTStatTransmitUNI0DroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0DroppedFrames.setStatus('current')
lte8stONTStatTransmitUNI0CollisionSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0CollisionSingle.setStatus('current')
lte8stONTStatTransmitUNI0CollisionMulti = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0CollisionMulti.setStatus('current')
lte8stONTStatTransmitUNI0CollisionLate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0CollisionLate.setStatus('current')
lte8stONTStatTransmitUNI0CollisionExcessive = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI0CollisionExcessive.setStatus('current')
lte8stONTStatTransmitUNI1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3), )
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Table.setStatus('current')
lte8stONTStatTransmitUNI1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Mac"))
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Entry.setStatus('current')
lte8stONTStatTransmitUNI1Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Mac.setStatus('current')
lte8stONTStatTransmitUNI1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Bytes.setStatus('current')
lte8stONTStatTransmitUNI1Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Frames.setStatus('current')
lte8stONTStatTransmitUNI1Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Unicast.setStatus('current')
lte8stONTStatTransmitUNI1Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Multicast.setStatus('current')
lte8stONTStatTransmitUNI1Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Broadcast.setStatus('current')
lte8stONTStatTransmitUNI164Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI164Byte.setStatus('current')
lte8stONTStatTransmitUNI165to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI165to127Byte.setStatus('current')
lte8stONTStatTransmitUNI1128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1128to255Byte.setStatus('current')
lte8stONTStatTransmitUNI1256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1256to511Byte.setStatus('current')
lte8stONTStatTransmitUNI1512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1512to1023Byte.setStatus('current')
lte8stONTStatTransmitUNI11024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI11024to1518Byte.setStatus('current')
lte8stONTStatTransmitUNI1Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1Greater1518Byte.setStatus('current')
lte8stONTStatTransmitUNI1PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1PauseFrames.setStatus('current')
lte8stONTStatTransmitUNI1DroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1DroppedBytes.setStatus('current')
lte8stONTStatTransmitUNI1DroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1DroppedFrames.setStatus('current')
lte8stONTStatTransmitUNI1CollisionSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1CollisionSingle.setStatus('current')
lte8stONTStatTransmitUNI1CollisionMulti = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1CollisionMulti.setStatus('current')
lte8stONTStatTransmitUNI1CollisionLate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1CollisionLate.setStatus('current')
lte8stONTStatTransmitUNI1CollisionExcessive = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 2, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTStatTransmitUNI1CollisionExcessive.setStatus('current')
lte8stONTIDStatReceive = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10))
lte8stONTIDStatReceivePONTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1), )
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONTable.setStatus('current')
lte8stONTIDStatReceivePONEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONEntry.setStatus('current')
lte8stONTIDStatReceivePONBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONBytes.setStatus('current')
lte8stONTIDStatReceivePONFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONFrames.setStatus('current')
lte8stONTIDStatReceivePONUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONUnicast.setStatus('current')
lte8stONTIDStatReceivePONMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONMulticast.setStatus('current')
lte8stONTIDStatReceivePONBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONBroadcast.setStatus('current')
lte8stONTIDStatReceivePON64Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePON64Byte.setStatus('current')
lte8stONTIDStatReceivePON65to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePON65to127Byte.setStatus('current')
lte8stONTIDStatReceivePON128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePON128to255Byte.setStatus('current')
lte8stONTIDStatReceivePON256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePON256to511Byte.setStatus('current')
lte8stONTIDStatReceivePON512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePON512to1023Byte.setStatus('current')
lte8stONTIDStatReceivePON1024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePON1024to1518Byte.setStatus('current')
lte8stONTIDStatReceivePONGreater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONGreater1518Byte.setStatus('current')
lte8stONTIDStatReceivePONUndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONUndersizeFrames.setStatus('current')
lte8stONTIDStatReceivePONFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONFCSErrors.setStatus('current')
lte8stONTIDStatReceivePONCRC8Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONCRC8Errors.setStatus('current')
lte8stONTIDStatReceivePONLineCodeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONLineCodeErrors.setStatus('current')
lte8stONTIDStatReceivePONDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONDroppedBytes.setStatus('current')
lte8stONTIDStatReceivePONDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONDroppedFrames.setStatus('current')
lte8stONTIDStatReceivePONDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONDelayedBytes.setStatus('current')
lte8stONTIDStatReceivePONDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONDelayMax.setStatus('current')
lte8stONTIDStatReceivePONDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONDelayThresh.setStatus('current')
lte8stONTIDStatReceivePONErroredFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONErroredFrames.setStatus('current')
lte8stONTIDStatReceivePONLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONLaserPower.setStatus('current')
lte8stONTIDStatReceivePONInvalidSLDFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONInvalidSLDFrames.setStatus('current')
lte8stONTIDStatReceivePONONTDestinedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONONTDestinedBytes.setStatus('current')
lte8stONTIDStatReceivePONErroredONTDestinedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceivePONErroredONTDestinedBytes.setStatus('current')
lte8stONTIDStatReceiveUNI0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2), )
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Table.setStatus('current')
lte8stONTIDStatReceiveUNI0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Entry.setStatus('current')
lte8stONTIDStatReceiveUNI0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Bytes.setStatus('current')
lte8stONTIDStatReceiveUNI0Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Frames.setStatus('current')
lte8stONTIDStatReceiveUNI0Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Unicast.setStatus('current')
lte8stONTIDStatReceiveUNI0Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Multicast.setStatus('current')
lte8stONTIDStatReceiveUNI0Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Broadcast.setStatus('current')
lte8stONTIDStatReceiveUNI064Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI064Byte.setStatus('current')
lte8stONTIDStatReceiveUNI065to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI065to127Byte.setStatus('current')
lte8stONTIDStatReceiveUNI0128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0128to255Byte.setStatus('current')
lte8stONTIDStatReceiveUNI0256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0256to511Byte.setStatus('current')
lte8stONTIDStatReceiveUNI0512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0512to1023Byte.setStatus('current')
lte8stONTIDStatReceiveUNI01024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI01024to1518Byte.setStatus('current')
lte8stONTIDStatReceiveUNI0Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0Greater1518Byte.setStatus('current')
lte8stONTIDStatReceiveUNI0UndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0UndersizeFrames.setStatus('current')
lte8stONTIDStatReceiveUNI0OversizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0OversizeFrames.setStatus('current')
lte8stONTIDStatReceiveUNI0PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0PauseFrames.setStatus('current')
lte8stONTIDStatReceiveUNI0LengthError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0LengthError.setStatus('current')
lte8stONTIDStatReceiveUNI0AlignmentError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0AlignmentError.setStatus('current')
lte8stONTIDStatReceiveUNI0CRC32Error = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI0CRC32Error.setStatus('current')
lte8stONTIDStatReceiveUNI1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3), )
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Table.setStatus('current')
lte8stONTIDStatReceiveUNI1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Entry.setStatus('current')
lte8stONTIDStatReceiveUNI1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Bytes.setStatus('current')
lte8stONTIDStatReceiveUNI1Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Frames.setStatus('current')
lte8stONTIDStatReceiveUNI1Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Unicast.setStatus('current')
lte8stONTIDStatReceiveUNI1Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Multicast.setStatus('current')
lte8stONTIDStatReceiveUNI1Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Broadcast.setStatus('current')
lte8stONTIDStatReceiveUNI164Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI164Byte.setStatus('current')
lte8stONTIDStatReceiveUNI165to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI165to127Byte.setStatus('current')
lte8stONTIDStatReceiveUNI1128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1128to255Byte.setStatus('current')
lte8stONTIDStatReceiveUNI1256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1256to511Byte.setStatus('current')
lte8stONTIDStatReceiveUNI1512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1512to1023Byte.setStatus('current')
lte8stONTIDStatReceiveUNI11024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI11024to1518Byte.setStatus('current')
lte8stONTIDStatReceiveUNI1Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1Greater1518Byte.setStatus('current')
lte8stONTIDStatReceiveUNI1UndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1UndersizeFrames.setStatus('current')
lte8stONTIDStatReceiveUNI1OversizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1OversizeFrames.setStatus('current')
lte8stONTIDStatReceiveUNI1PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1PauseFrames.setStatus('current')
lte8stONTIDStatReceiveUNI1LengthError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1LengthError.setStatus('current')
lte8stONTIDStatReceiveUNI1AlignmentError = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1AlignmentError.setStatus('current')
lte8stONTIDStatReceiveUNI1CRC32Error = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 10, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatReceiveUNI1CRC32Error.setStatus('current')
lte8stONTIDStatTransmit = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11))
lte8stONTIDStatTransmitPONTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1), )
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONTable.setStatus('current')
lte8stONTIDStatTransmitPONEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONEntry.setStatus('current')
lte8stONTIDStatTransmitPONBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONBytes.setStatus('current')
lte8stONTIDStatTransmitPONFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONFrames.setStatus('current')
lte8stONTIDStatTransmitPONUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONUnicast.setStatus('current')
lte8stONTIDStatTransmitPONMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONMulticast.setStatus('current')
lte8stONTIDStatTransmitPONBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONBroadcast.setStatus('current')
lte8stONTIDStatTransmitPON64Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPON64Byte.setStatus('current')
lte8stONTIDStatTransmitPON65to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPON65to127Byte.setStatus('current')
lte8stONTIDStatTransmitPON128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPON128to255Byte.setStatus('current')
lte8stONTIDStatTransmitPON256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPON256to511Byte.setStatus('current')
lte8stONTIDStatTransmitPON512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPON512to1023Byte.setStatus('current')
lte8stONTIDStatTransmitPON1024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPON1024to1518Byte.setStatus('current')
lte8stONTIDStatTransmitPONGreater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONGreater1518Byte.setStatus('current')
lte8stONTIDStatTransmitPONDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONDroppedBytes.setStatus('current')
lte8stONTIDStatTransmitPONDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONDroppedFrames.setStatus('current')
lte8stONTIDStatTransmitPONDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONDelayedBytes.setStatus('current')
lte8stONTIDStatTransmitPONDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONDelayMax.setStatus('current')
lte8stONTIDStatTransmitPONDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONDelayThresh.setStatus('current')
lte8stONTIDStatTransmitPONUnusedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONUnusedBytes.setStatus('current')
lte8stONTIDStatTransmitPONLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONLaserPower.setStatus('current')
lte8stONTIDStatTransmitPONLaserVCC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONLaserVCC.setStatus('current')
lte8stONTIDStatTransmitPONLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONLaserBias.setStatus('current')
lte8stONTIDStatTransmitPONLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitPONLaserTemp.setStatus('current')
lte8stONTIDStatTransmitUNI0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2), )
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Table.setStatus('current')
lte8stONTIDStatTransmitUNI0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Entry.setStatus('current')
lte8stONTIDStatTransmitUNI0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Bytes.setStatus('current')
lte8stONTIDStatTransmitUNI0Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Frames.setStatus('current')
lte8stONTIDStatTransmitUNI0Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Unicast.setStatus('current')
lte8stONTIDStatTransmitUNI0Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Multicast.setStatus('current')
lte8stONTIDStatTransmitUNI0Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Broadcast.setStatus('current')
lte8stONTIDStatTransmitUNI064Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI064Byte.setStatus('current')
lte8stONTIDStatTransmitUNI065to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI065to127Byte.setStatus('current')
lte8stONTIDStatTransmitUNI0128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0128to255Byte.setStatus('current')
lte8stONTIDStatTransmitUNI0256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0256to511Byte.setStatus('current')
lte8stONTIDStatTransmitUNI0512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0512to1023Byte.setStatus('current')
lte8stONTIDStatTransmitUNI01024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI01024to1518Byte.setStatus('current')
lte8stONTIDStatTransmitUNI0Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0Greater1518Byte.setStatus('current')
lte8stONTIDStatTransmitUNI0PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0PauseFrames.setStatus('current')
lte8stONTIDStatTransmitUNI0DroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0DroppedBytes.setStatus('current')
lte8stONTIDStatTransmitUNI0DroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0DroppedFrames.setStatus('current')
lte8stONTIDStatTransmitUNI0CollisionSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0CollisionSingle.setStatus('current')
lte8stONTIDStatTransmitUNI0CollisionMulti = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0CollisionMulti.setStatus('current')
lte8stONTIDStatTransmitUNI0CollisionLate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0CollisionLate.setStatus('current')
lte8stONTIDStatTransmitUNI0CollisionExcessive = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI0CollisionExcessive.setStatus('current')
lte8stONTIDStatTransmitUNI1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3), )
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Table.setStatus('current')
lte8stONTIDStatTransmitUNI1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDStateTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDStateID"))
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Entry.setStatus('current')
lte8stONTIDStatTransmitUNI1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Bytes.setStatus('current')
lte8stONTIDStatTransmitUNI1Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Frames.setStatus('current')
lte8stONTIDStatTransmitUNI1Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Unicast.setStatus('current')
lte8stONTIDStatTransmitUNI1Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Multicast.setStatus('current')
lte8stONTIDStatTransmitUNI1Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Broadcast.setStatus('current')
lte8stONTIDStatTransmitUNI164Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI164Byte.setStatus('current')
lte8stONTIDStatTransmitUNI165to127Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI165to127Byte.setStatus('current')
lte8stONTIDStatTransmitUNI1128to255Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1128to255Byte.setStatus('current')
lte8stONTIDStatTransmitUNI1256to511Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1256to511Byte.setStatus('current')
lte8stONTIDStatTransmitUNI1512to1023Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1512to1023Byte.setStatus('current')
lte8stONTIDStatTransmitUNI11024to1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI11024to1518Byte.setStatus('current')
lte8stONTIDStatTransmitUNI1Greater1518Byte = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1Greater1518Byte.setStatus('current')
lte8stONTIDStatTransmitUNI1PauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1PauseFrames.setStatus('current')
lte8stONTIDStatTransmitUNI1DroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1DroppedBytes.setStatus('current')
lte8stONTIDStatTransmitUNI1DroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1DroppedFrames.setStatus('current')
lte8stONTIDStatTransmitUNI1CollisionSingle = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1CollisionSingle.setStatus('current')
lte8stONTIDStatTransmitUNI1CollisionMulti = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1CollisionMulti.setStatus('current')
lte8stONTIDStatTransmitUNI1CollisionLate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1CollisionLate.setStatus('current')
lte8stONTIDStatTransmitUNI1CollisionExcessive = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 11, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDStatTransmitUNI1CollisionExcessive.setStatus('current')
lte8stONTStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 7, 100)).setObjects(("ELTEX-LTE8ST", "lte8stONTStatReceivePONMac"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONBytes"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONUnicast"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONMulticast"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONBroadcast"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePON64Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePON65to127Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePON128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePON256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePON512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePON1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONFCSErrors"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONCRC8Errors"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONDroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONDroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONDelayedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONDelayMax"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONDelayThresh"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONErroredFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONLaserPower"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONInvalidSLDFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONONTDestinedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatReceivePONErroredONTDestinedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Mac"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Bytes"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Frames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Unicast"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Multicast"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Broadcast"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI064Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI065to127Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI01024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0UndersizeFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0OversizeFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0LengthError"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0AlignmentError"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI0CRC32Error"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Mac"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Bytes"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Frames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Unicast"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Multicast"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Broadcast"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI164Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI165to127Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI11024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1UndersizeFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1OversizeFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1LengthError"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1AlignmentError"), ("ELTEX-LTE8ST", "lte8stONTStatReceiveUNI1CRC32Error"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONMac"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONBytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONFrames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONUnicast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONMulticast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONBroadcast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPON64Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPON65to127Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPON128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPON256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPON512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPON1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONDroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONDroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONDelayedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONDelayMax"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONDelayThresh"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONUnusedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONLaserPower"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONLaserVCC"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONLaserBias"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitPONLaserTemp"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Mac"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Bytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Frames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Unicast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Multicast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Broadcast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI064Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI065to127Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI01024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0DroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0DroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0CollisionSingle"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0CollisionMulti"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0CollisionLate"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI0CollisionExcessive"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Mac"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Bytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Frames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Unicast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Multicast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Broadcast"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI164Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI165to127Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI11024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1DroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1DroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1CollisionSingle"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1CollisionMulti"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1CollisionLate"), ("ELTEX-LTE8ST", "lte8stONTStatTransmitUNI1CollisionExcessive"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONUnicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONMulticast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONBroadcast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePON64Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePON65to127Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePON128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePON256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePON512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePON1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONUndersizeFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONFCSErrors"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONCRC8Errors"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONLineCodeErrors"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONDroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONDroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONDelayedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONDelayMax"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONDelayThresh"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONErroredFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONLaserPower"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONInvalidSLDFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONONTDestinedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceivePONErroredONTDestinedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0Bytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0Frames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0Unicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0Multicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0Broadcast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI064Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI065to127Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI01024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0UndersizeFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0OversizeFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0LengthError"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0AlignmentError"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI0CRC32Error"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1Bytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1Frames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1Unicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1Multicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1Broadcast"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI164Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI165to127Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI11024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1UndersizeFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1OversizeFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1LengthError"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1AlignmentError"), ("ELTEX-LTE8ST", "lte8stONTIDStatReceiveUNI1CRC32Error"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONUnicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONMulticast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONBroadcast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPON64Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPON65to127Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPON128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPON256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPON512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPON1024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONGreater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONDroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONDroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONDelayedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONDelayMax"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONDelayThresh"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONUnusedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONLaserPower"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONLaserVCC"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONLaserBias"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitPONLaserTemp"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0Bytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0Frames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0Unicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0Multicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0Broadcast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI064Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI065to127Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI01024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0DroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0DroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0CollisionSingle"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0CollisionMulti"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0CollisionLate"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI0CollisionExcessive"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1Bytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1Frames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1Unicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1Multicast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1Broadcast"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI164Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI165to127Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1128to255Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1256to511Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1512to1023Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI11024to1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1Greater1518Byte"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1PauseFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1DroppedBytes"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1DroppedFrames"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1CollisionSingle"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1CollisionMulti"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1CollisionLate"), ("ELTEX-LTE8ST", "lte8stONTIDStatTransmitUNI1CollisionExcessive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stONTStatGroup = lte8stONTStatGroup.setStatus('current')
lte8stSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8))
lte8stSwitchPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1))
lte8stSwitchPort00 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1))
lte8stSwitchPort00Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Enabled.setStatus('current')
lte8stSwitchPort00AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00AutoNegotiate.setStatus('current')
lte8stSwitchPort00Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Speed.setStatus('current')
lte8stSwitchPort00Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Duplex.setStatus('current')
lte8stSwitchPort00FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00FlowControl.setStatus('current')
lte8stSwitchPort00IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00IngressMirroring.setStatus('current')
lte8stSwitchPort00EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00EgressMirroring.setStatus('current')
lte8stSwitchPort00State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 8))
lte8stSwitchPort00StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00StateLink.setStatus('current')
lte8stSwitchPort00StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00StateError.setStatus('current')
lte8stSwitchPort00StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00StateSpeed.setStatus('current')
lte8stSwitchPort00StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00StateDuplex.setStatus('current')
lte8stSwitchPort00StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00StateFlowControl.setStatus('current')
lte8stSwitchPort00VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 9))
lte8stSwitchPort00VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00VLANPVID.setStatus('current')
lte8stSwitchPort00VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00VLANFrameTypes.setStatus('current')
lte8stSwitchPort00VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00VLANIngressFiltering.setStatus('current')
lte8stSwitchPort00LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 10))
lte8stSwitchPort00LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00LACPChannelGroup.setStatus('current')
lte8stSwitchPort00LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00LACPPriority.setStatus('current')
lte8stSwitchPort00LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00LACPTimeOut.setStatus('current')
lte8stSwitchPort00LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00LACPActivity.setStatus('current')
lte8stSwitchPort00Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11))
lte8stSwitchPort00GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00GoodOctetsReceived.setStatus('current')
lte8stSwitchPort00BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00BadOctetsReceived.setStatus('current')
lte8stSwitchPort00MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00MacTransmitErrors.setStatus('current')
lte8stSwitchPort00GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00GoodPacketsReceived.setStatus('current')
lte8stSwitchPort00BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00BadPacketsReceived.setStatus('current')
lte8stSwitchPort00BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort00MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort00Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Packets64Octets.setStatus('current')
lte8stSwitchPort00Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Packets65to127Octets.setStatus('current')
lte8stSwitchPort00Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Packets128to255Octets.setStatus('current')
lte8stSwitchPort00Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Packets256to511Octets.setStatus('current')
lte8stSwitchPort00Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Packets512to1023Octets.setStatus('current')
lte8stSwitchPort00Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort00GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00GoodOctetsSent.setStatus('current')
lte8stSwitchPort00GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00GoodPacketsSent.setStatus('current')
lte8stSwitchPort00ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00ExcessiveCollisions.setStatus('current')
lte8stSwitchPort00MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00MulticastPacketsSent.setStatus('current')
lte8stSwitchPort00BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort00UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort00FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00FlowControlFramesSent.setStatus('current')
lte8stSwitchPort00GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort00DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00DropEvents.setStatus('current')
lte8stSwitchPort00UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort00FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00FragmentsReceived.setStatus('current')
lte8stSwitchPort00OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00OversizePacketsReceived.setStatus('current')
lte8stSwitchPort00JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00JabberPacketsReceived.setStatus('current')
lte8stSwitchPort00MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00MACReceiveErrors.setStatus('current')
lte8stSwitchPort00BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00BadCRC.setStatus('current')
lte8stSwitchPort00Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00Collisions.setStatus('current')
lte8stSwitchPort00LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00LateCollisions.setStatus('current')
lte8stSwitchPort00BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 1, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort00BadFlowControlReceived.setStatus('current')
lte8stSwitchPort01 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2))
lte8stSwitchPort01Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Enabled.setStatus('current')
lte8stSwitchPort01AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01AutoNegotiate.setStatus('current')
lte8stSwitchPort01Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Speed.setStatus('current')
lte8stSwitchPort01Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Duplex.setStatus('current')
lte8stSwitchPort01FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01FlowControl.setStatus('current')
lte8stSwitchPort01IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01IngressMirroring.setStatus('current')
lte8stSwitchPort01EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01EgressMirroring.setStatus('current')
lte8stSwitchPort01State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 8))
lte8stSwitchPort01StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01StateLink.setStatus('current')
lte8stSwitchPort01StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01StateError.setStatus('current')
lte8stSwitchPort01StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01StateSpeed.setStatus('current')
lte8stSwitchPort01StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01StateDuplex.setStatus('current')
lte8stSwitchPort01StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01StateFlowControl.setStatus('current')
lte8stSwitchPort01VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 9))
lte8stSwitchPort01VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01VLANPVID.setStatus('current')
lte8stSwitchPort01VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01VLANFrameTypes.setStatus('current')
lte8stSwitchPort01VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01VLANIngressFiltering.setStatus('current')
lte8stSwitchPort01LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 10))
lte8stSwitchPort01LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01LACPChannelGroup.setStatus('current')
lte8stSwitchPort01LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01LACPPriority.setStatus('current')
lte8stSwitchPort01LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01LACPTimeOut.setStatus('current')
lte8stSwitchPort01LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01LACPActivity.setStatus('current')
lte8stSwitchPort01Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11))
lte8stSwitchPort01GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01GoodOctetsReceived.setStatus('current')
lte8stSwitchPort01BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01BadOctetsReceived.setStatus('current')
lte8stSwitchPort01MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01MacTransmitErrors.setStatus('current')
lte8stSwitchPort01GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01GoodPacketsReceived.setStatus('current')
lte8stSwitchPort01BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01BadPacketsReceived.setStatus('current')
lte8stSwitchPort01BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort01MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort01Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Packets64Octets.setStatus('current')
lte8stSwitchPort01Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Packets65to127Octets.setStatus('current')
lte8stSwitchPort01Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Packets128to255Octets.setStatus('current')
lte8stSwitchPort01Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Packets256to511Octets.setStatus('current')
lte8stSwitchPort01Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Packets512to1023Octets.setStatus('current')
lte8stSwitchPort01Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort01GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01GoodOctetsSent.setStatus('current')
lte8stSwitchPort01GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01GoodPacketsSent.setStatus('current')
lte8stSwitchPort01ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01ExcessiveCollisions.setStatus('current')
lte8stSwitchPort01MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01MulticastPacketsSent.setStatus('current')
lte8stSwitchPort01BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort01UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort01FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01FlowControlFramesSent.setStatus('current')
lte8stSwitchPort01GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort01DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01DropEvents.setStatus('current')
lte8stSwitchPort01UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort01FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01FragmentsReceived.setStatus('current')
lte8stSwitchPort01OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01OversizePacketsReceived.setStatus('current')
lte8stSwitchPort01JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01JabberPacketsReceived.setStatus('current')
lte8stSwitchPort01MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01MACReceiveErrors.setStatus('current')
lte8stSwitchPort01BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01BadCRC.setStatus('current')
lte8stSwitchPort01Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01Collisions.setStatus('current')
lte8stSwitchPort01LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01LateCollisions.setStatus('current')
lte8stSwitchPort01BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 2, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort01BadFlowControlReceived.setStatus('current')
lte8stSwitchPort02 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3))
lte8stSwitchPort02Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Enabled.setStatus('current')
lte8stSwitchPort02AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02AutoNegotiate.setStatus('current')
lte8stSwitchPort02Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Speed.setStatus('current')
lte8stSwitchPort02Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Duplex.setStatus('current')
lte8stSwitchPort02FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02FlowControl.setStatus('current')
lte8stSwitchPort02IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02IngressMirroring.setStatus('current')
lte8stSwitchPort02EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02EgressMirroring.setStatus('current')
lte8stSwitchPort02State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 8))
lte8stSwitchPort02StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02StateLink.setStatus('current')
lte8stSwitchPort02StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02StateError.setStatus('current')
lte8stSwitchPort02StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02StateSpeed.setStatus('current')
lte8stSwitchPort02StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02StateDuplex.setStatus('current')
lte8stSwitchPort02StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02StateFlowControl.setStatus('current')
lte8stSwitchPort02VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 9))
lte8stSwitchPort02VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02VLANPVID.setStatus('current')
lte8stSwitchPort02VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02VLANFrameTypes.setStatus('current')
lte8stSwitchPort02VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02VLANIngressFiltering.setStatus('current')
lte8stSwitchPort02LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 10))
lte8stSwitchPort02LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02LACPChannelGroup.setStatus('current')
lte8stSwitchPort02LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02LACPPriority.setStatus('current')
lte8stSwitchPort02LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02LACPTimeOut.setStatus('current')
lte8stSwitchPort02LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02LACPActivity.setStatus('current')
lte8stSwitchPort02Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11))
lte8stSwitchPort02GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02GoodOctetsReceived.setStatus('current')
lte8stSwitchPort02BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02BadOctetsReceived.setStatus('current')
lte8stSwitchPort02MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02MacTransmitErrors.setStatus('current')
lte8stSwitchPort02GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02GoodPacketsReceived.setStatus('current')
lte8stSwitchPort02BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02BadPacketsReceived.setStatus('current')
lte8stSwitchPort02BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort02MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort02Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Packets64Octets.setStatus('current')
lte8stSwitchPort02Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Packets65to127Octets.setStatus('current')
lte8stSwitchPort02Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Packets128to255Octets.setStatus('current')
lte8stSwitchPort02Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Packets256to511Octets.setStatus('current')
lte8stSwitchPort02Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Packets512to1023Octets.setStatus('current')
lte8stSwitchPort02Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort02GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02GoodOctetsSent.setStatus('current')
lte8stSwitchPort02GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02GoodPacketsSent.setStatus('current')
lte8stSwitchPort02ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02ExcessiveCollisions.setStatus('current')
lte8stSwitchPort02MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02MulticastPacketsSent.setStatus('current')
lte8stSwitchPort02BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort02UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort02FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02FlowControlFramesSent.setStatus('current')
lte8stSwitchPort02GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort02DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02DropEvents.setStatus('current')
lte8stSwitchPort02UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort02FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02FragmentsReceived.setStatus('current')
lte8stSwitchPort02OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02OversizePacketsReceived.setStatus('current')
lte8stSwitchPort02JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02JabberPacketsReceived.setStatus('current')
lte8stSwitchPort02MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02MACReceiveErrors.setStatus('current')
lte8stSwitchPort02BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02BadCRC.setStatus('current')
lte8stSwitchPort02Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02Collisions.setStatus('current')
lte8stSwitchPort02LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02LateCollisions.setStatus('current')
lte8stSwitchPort02BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 3, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort02BadFlowControlReceived.setStatus('current')
lte8stSwitchPort03 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4))
lte8stSwitchPort03Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Enabled.setStatus('current')
lte8stSwitchPort03AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03AutoNegotiate.setStatus('current')
lte8stSwitchPort03Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Speed.setStatus('current')
lte8stSwitchPort03Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Duplex.setStatus('current')
lte8stSwitchPort03FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03FlowControl.setStatus('current')
lte8stSwitchPort03IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03IngressMirroring.setStatus('current')
lte8stSwitchPort03EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03EgressMirroring.setStatus('current')
lte8stSwitchPort03State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 8))
lte8stSwitchPort03StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03StateLink.setStatus('current')
lte8stSwitchPort03StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03StateError.setStatus('current')
lte8stSwitchPort03StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03StateSpeed.setStatus('current')
lte8stSwitchPort03StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03StateDuplex.setStatus('current')
lte8stSwitchPort03StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03StateFlowControl.setStatus('current')
lte8stSwitchPort03VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 9))
lte8stSwitchPort03VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03VLANPVID.setStatus('current')
lte8stSwitchPort03VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03VLANFrameTypes.setStatus('current')
lte8stSwitchPort03VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03VLANIngressFiltering.setStatus('current')
lte8stSwitchPort03LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 10))
lte8stSwitchPort03LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03LACPChannelGroup.setStatus('current')
lte8stSwitchPort03LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03LACPPriority.setStatus('current')
lte8stSwitchPort03LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03LACPTimeOut.setStatus('current')
lte8stSwitchPort03LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03LACPActivity.setStatus('current')
lte8stSwitchPort03Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11))
lte8stSwitchPort03GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03GoodOctetsReceived.setStatus('current')
lte8stSwitchPort03BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03BadOctetsReceived.setStatus('current')
lte8stSwitchPort03MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03MacTransmitErrors.setStatus('current')
lte8stSwitchPort03GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03GoodPacketsReceived.setStatus('current')
lte8stSwitchPort03BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03BadPacketsReceived.setStatus('current')
lte8stSwitchPort03BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort03MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort03Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Packets64Octets.setStatus('current')
lte8stSwitchPort03Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Packets65to127Octets.setStatus('current')
lte8stSwitchPort03Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Packets128to255Octets.setStatus('current')
lte8stSwitchPort03Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Packets256to511Octets.setStatus('current')
lte8stSwitchPort03Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Packets512to1023Octets.setStatus('current')
lte8stSwitchPort03Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort03GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03GoodOctetsSent.setStatus('current')
lte8stSwitchPort03GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03GoodPacketsSent.setStatus('current')
lte8stSwitchPort03ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03ExcessiveCollisions.setStatus('current')
lte8stSwitchPort03MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03MulticastPacketsSent.setStatus('current')
lte8stSwitchPort03BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort03UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort03FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03FlowControlFramesSent.setStatus('current')
lte8stSwitchPort03GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort03DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03DropEvents.setStatus('current')
lte8stSwitchPort03UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort03FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03FragmentsReceived.setStatus('current')
lte8stSwitchPort03OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03OversizePacketsReceived.setStatus('current')
lte8stSwitchPort03JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03JabberPacketsReceived.setStatus('current')
lte8stSwitchPort03MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03MACReceiveErrors.setStatus('current')
lte8stSwitchPort03BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03BadCRC.setStatus('current')
lte8stSwitchPort03Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03Collisions.setStatus('current')
lte8stSwitchPort03LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03LateCollisions.setStatus('current')
lte8stSwitchPort03BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 4, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort03BadFlowControlReceived.setStatus('current')
lte8stSwitchPort04 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5))
lte8stSwitchPort04Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Enabled.setStatus('current')
lte8stSwitchPort04AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04AutoNegotiate.setStatus('current')
lte8stSwitchPort04Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Speed.setStatus('current')
lte8stSwitchPort04Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Duplex.setStatus('current')
lte8stSwitchPort04FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04FlowControl.setStatus('current')
lte8stSwitchPort04IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04IngressMirroring.setStatus('current')
lte8stSwitchPort04EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04EgressMirroring.setStatus('current')
lte8stSwitchPort04State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 8))
lte8stSwitchPort04StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04StateLink.setStatus('current')
lte8stSwitchPort04StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04StateError.setStatus('current')
lte8stSwitchPort04StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04StateSpeed.setStatus('current')
lte8stSwitchPort04StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04StateDuplex.setStatus('current')
lte8stSwitchPort04StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04StateFlowControl.setStatus('current')
lte8stSwitchPort04VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 9))
lte8stSwitchPort04VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04VLANPVID.setStatus('current')
lte8stSwitchPort04VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04VLANFrameTypes.setStatus('current')
lte8stSwitchPort04VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04VLANIngressFiltering.setStatus('current')
lte8stSwitchPort04LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 10))
lte8stSwitchPort04LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04LACPChannelGroup.setStatus('current')
lte8stSwitchPort04LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04LACPPriority.setStatus('current')
lte8stSwitchPort04LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04LACPTimeOut.setStatus('current')
lte8stSwitchPort04LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04LACPActivity.setStatus('current')
lte8stSwitchPort04Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11))
lte8stSwitchPort04GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04GoodOctetsReceived.setStatus('current')
lte8stSwitchPort04BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04BadOctetsReceived.setStatus('current')
lte8stSwitchPort04MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04MacTransmitErrors.setStatus('current')
lte8stSwitchPort04GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04GoodPacketsReceived.setStatus('current')
lte8stSwitchPort04BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04BadPacketsReceived.setStatus('current')
lte8stSwitchPort04BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort04MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort04Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Packets64Octets.setStatus('current')
lte8stSwitchPort04Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Packets65to127Octets.setStatus('current')
lte8stSwitchPort04Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Packets128to255Octets.setStatus('current')
lte8stSwitchPort04Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Packets256to511Octets.setStatus('current')
lte8stSwitchPort04Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Packets512to1023Octets.setStatus('current')
lte8stSwitchPort04Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort04GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04GoodOctetsSent.setStatus('current')
lte8stSwitchPort04GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04GoodPacketsSent.setStatus('current')
lte8stSwitchPort04ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04ExcessiveCollisions.setStatus('current')
lte8stSwitchPort04MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04MulticastPacketsSent.setStatus('current')
lte8stSwitchPort04BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort04UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort04FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04FlowControlFramesSent.setStatus('current')
lte8stSwitchPort04GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort04DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04DropEvents.setStatus('current')
lte8stSwitchPort04UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort04FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04FragmentsReceived.setStatus('current')
lte8stSwitchPort04OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04OversizePacketsReceived.setStatus('current')
lte8stSwitchPort04JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04JabberPacketsReceived.setStatus('current')
lte8stSwitchPort04MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04MACReceiveErrors.setStatus('current')
lte8stSwitchPort04BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04BadCRC.setStatus('current')
lte8stSwitchPort04Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04Collisions.setStatus('current')
lte8stSwitchPort04LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04LateCollisions.setStatus('current')
lte8stSwitchPort04BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 5, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort04BadFlowControlReceived.setStatus('current')
lte8stSwitchPort05 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6))
lte8stSwitchPort05Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Enabled.setStatus('current')
lte8stSwitchPort05AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05AutoNegotiate.setStatus('current')
lte8stSwitchPort05Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Speed.setStatus('current')
lte8stSwitchPort05Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Duplex.setStatus('current')
lte8stSwitchPort05FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05FlowControl.setStatus('current')
lte8stSwitchPort05IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05IngressMirroring.setStatus('current')
lte8stSwitchPort05EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05EgressMirroring.setStatus('current')
lte8stSwitchPort05State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 8))
lte8stSwitchPort05StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05StateLink.setStatus('current')
lte8stSwitchPort05StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05StateError.setStatus('current')
lte8stSwitchPort05StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05StateSpeed.setStatus('current')
lte8stSwitchPort05StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05StateDuplex.setStatus('current')
lte8stSwitchPort05StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05StateFlowControl.setStatus('current')
lte8stSwitchPort05VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 9))
lte8stSwitchPort05VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05VLANPVID.setStatus('current')
lte8stSwitchPort05VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05VLANFrameTypes.setStatus('current')
lte8stSwitchPort05VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05VLANIngressFiltering.setStatus('current')
lte8stSwitchPort05LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 10))
lte8stSwitchPort05LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05LACPChannelGroup.setStatus('current')
lte8stSwitchPort05LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05LACPPriority.setStatus('current')
lte8stSwitchPort05LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05LACPTimeOut.setStatus('current')
lte8stSwitchPort05LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05LACPActivity.setStatus('current')
lte8stSwitchPort05Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11))
lte8stSwitchPort05GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05GoodOctetsReceived.setStatus('current')
lte8stSwitchPort05BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05BadOctetsReceived.setStatus('current')
lte8stSwitchPort05MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05MacTransmitErrors.setStatus('current')
lte8stSwitchPort05GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05GoodPacketsReceived.setStatus('current')
lte8stSwitchPort05BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05BadPacketsReceived.setStatus('current')
lte8stSwitchPort05BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort05MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort05Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Packets64Octets.setStatus('current')
lte8stSwitchPort05Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Packets65to127Octets.setStatus('current')
lte8stSwitchPort05Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Packets128to255Octets.setStatus('current')
lte8stSwitchPort05Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Packets256to511Octets.setStatus('current')
lte8stSwitchPort05Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Packets512to1023Octets.setStatus('current')
lte8stSwitchPort05Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort05GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05GoodOctetsSent.setStatus('current')
lte8stSwitchPort05GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05GoodPacketsSent.setStatus('current')
lte8stSwitchPort05ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05ExcessiveCollisions.setStatus('current')
lte8stSwitchPort05MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05MulticastPacketsSent.setStatus('current')
lte8stSwitchPort05BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort05UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort05FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05FlowControlFramesSent.setStatus('current')
lte8stSwitchPort05GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort05DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05DropEvents.setStatus('current')
lte8stSwitchPort05UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort05FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05FragmentsReceived.setStatus('current')
lte8stSwitchPort05OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05OversizePacketsReceived.setStatus('current')
lte8stSwitchPort05JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05JabberPacketsReceived.setStatus('current')
lte8stSwitchPort05MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05MACReceiveErrors.setStatus('current')
lte8stSwitchPort05BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05BadCRC.setStatus('current')
lte8stSwitchPort05Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05Collisions.setStatus('current')
lte8stSwitchPort05LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05LateCollisions.setStatus('current')
lte8stSwitchPort05BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 6, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort05BadFlowControlReceived.setStatus('current')
lte8stSwitchPort06 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7))
lte8stSwitchPort06Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Enabled.setStatus('current')
lte8stSwitchPort06AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06AutoNegotiate.setStatus('current')
lte8stSwitchPort06Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Speed.setStatus('current')
lte8stSwitchPort06Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Duplex.setStatus('current')
lte8stSwitchPort06FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06FlowControl.setStatus('current')
lte8stSwitchPort06IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06IngressMirroring.setStatus('current')
lte8stSwitchPort06EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06EgressMirroring.setStatus('current')
lte8stSwitchPort06State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 8))
lte8stSwitchPort06StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06StateLink.setStatus('current')
lte8stSwitchPort06StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06StateError.setStatus('current')
lte8stSwitchPort06StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06StateSpeed.setStatus('current')
lte8stSwitchPort06StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06StateDuplex.setStatus('current')
lte8stSwitchPort06StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06StateFlowControl.setStatus('current')
lte8stSwitchPort06VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 9))
lte8stSwitchPort06VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06VLANPVID.setStatus('current')
lte8stSwitchPort06VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06VLANFrameTypes.setStatus('current')
lte8stSwitchPort06VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06VLANIngressFiltering.setStatus('current')
lte8stSwitchPort06LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 10))
lte8stSwitchPort06LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06LACPChannelGroup.setStatus('current')
lte8stSwitchPort06LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06LACPPriority.setStatus('current')
lte8stSwitchPort06LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06LACPTimeOut.setStatus('current')
lte8stSwitchPort06LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06LACPActivity.setStatus('current')
lte8stSwitchPort06Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11))
lte8stSwitchPort06GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06GoodOctetsReceived.setStatus('current')
lte8stSwitchPort06BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06BadOctetsReceived.setStatus('current')
lte8stSwitchPort06MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06MacTransmitErrors.setStatus('current')
lte8stSwitchPort06GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06GoodPacketsReceived.setStatus('current')
lte8stSwitchPort06BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06BadPacketsReceived.setStatus('current')
lte8stSwitchPort06BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort06MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort06Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Packets64Octets.setStatus('current')
lte8stSwitchPort06Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Packets65to127Octets.setStatus('current')
lte8stSwitchPort06Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Packets128to255Octets.setStatus('current')
lte8stSwitchPort06Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Packets256to511Octets.setStatus('current')
lte8stSwitchPort06Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Packets512to1023Octets.setStatus('current')
lte8stSwitchPort06Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort06GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06GoodOctetsSent.setStatus('current')
lte8stSwitchPort06GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06GoodPacketsSent.setStatus('current')
lte8stSwitchPort06ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06ExcessiveCollisions.setStatus('current')
lte8stSwitchPort06MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06MulticastPacketsSent.setStatus('current')
lte8stSwitchPort06BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort06UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort06FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06FlowControlFramesSent.setStatus('current')
lte8stSwitchPort06GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort06DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06DropEvents.setStatus('current')
lte8stSwitchPort06UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort06FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06FragmentsReceived.setStatus('current')
lte8stSwitchPort06OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06OversizePacketsReceived.setStatus('current')
lte8stSwitchPort06JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06JabberPacketsReceived.setStatus('current')
lte8stSwitchPort06MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06MACReceiveErrors.setStatus('current')
lte8stSwitchPort06BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06BadCRC.setStatus('current')
lte8stSwitchPort06Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06Collisions.setStatus('current')
lte8stSwitchPort06LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06LateCollisions.setStatus('current')
lte8stSwitchPort06BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 7, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort06BadFlowControlReceived.setStatus('current')
lte8stSwitchPort07 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8))
lte8stSwitchPort07Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Enabled.setStatus('current')
lte8stSwitchPort07AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07AutoNegotiate.setStatus('current')
lte8stSwitchPort07Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Speed.setStatus('current')
lte8stSwitchPort07Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Duplex.setStatus('current')
lte8stSwitchPort07FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07FlowControl.setStatus('current')
lte8stSwitchPort07IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07IngressMirroring.setStatus('current')
lte8stSwitchPort07EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07EgressMirroring.setStatus('current')
lte8stSwitchPort07State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 8))
lte8stSwitchPort07StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07StateLink.setStatus('current')
lte8stSwitchPort07StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07StateError.setStatus('current')
lte8stSwitchPort07StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07StateSpeed.setStatus('current')
lte8stSwitchPort07StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07StateDuplex.setStatus('current')
lte8stSwitchPort07StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07StateFlowControl.setStatus('current')
lte8stSwitchPort07VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 9))
lte8stSwitchPort07VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07VLANPVID.setStatus('current')
lte8stSwitchPort07VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07VLANFrameTypes.setStatus('current')
lte8stSwitchPort07VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07VLANIngressFiltering.setStatus('current')
lte8stSwitchPort07LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 10))
lte8stSwitchPort07LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07LACPChannelGroup.setStatus('current')
lte8stSwitchPort07LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07LACPPriority.setStatus('current')
lte8stSwitchPort07LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07LACPTimeOut.setStatus('current')
lte8stSwitchPort07LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07LACPActivity.setStatus('current')
lte8stSwitchPort07Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11))
lte8stSwitchPort07GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07GoodOctetsReceived.setStatus('current')
lte8stSwitchPort07BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07BadOctetsReceived.setStatus('current')
lte8stSwitchPort07MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07MacTransmitErrors.setStatus('current')
lte8stSwitchPort07GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07GoodPacketsReceived.setStatus('current')
lte8stSwitchPort07BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07BadPacketsReceived.setStatus('current')
lte8stSwitchPort07BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort07MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort07Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Packets64Octets.setStatus('current')
lte8stSwitchPort07Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Packets65to127Octets.setStatus('current')
lte8stSwitchPort07Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Packets128to255Octets.setStatus('current')
lte8stSwitchPort07Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Packets256to511Octets.setStatus('current')
lte8stSwitchPort07Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Packets512to1023Octets.setStatus('current')
lte8stSwitchPort07Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort07GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07GoodOctetsSent.setStatus('current')
lte8stSwitchPort07GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07GoodPacketsSent.setStatus('current')
lte8stSwitchPort07ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07ExcessiveCollisions.setStatus('current')
lte8stSwitchPort07MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07MulticastPacketsSent.setStatus('current')
lte8stSwitchPort07BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort07UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort07FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07FlowControlFramesSent.setStatus('current')
lte8stSwitchPort07GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort07DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07DropEvents.setStatus('current')
lte8stSwitchPort07UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort07FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07FragmentsReceived.setStatus('current')
lte8stSwitchPort07OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07OversizePacketsReceived.setStatus('current')
lte8stSwitchPort07JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07JabberPacketsReceived.setStatus('current')
lte8stSwitchPort07MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07MACReceiveErrors.setStatus('current')
lte8stSwitchPort07BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07BadCRC.setStatus('current')
lte8stSwitchPort07Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07Collisions.setStatus('current')
lte8stSwitchPort07LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07LateCollisions.setStatus('current')
lte8stSwitchPort07BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 8, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort07BadFlowControlReceived.setStatus('current')
lte8stSwitchPort08 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9))
lte8stSwitchPort08Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Enabled.setStatus('current')
lte8stSwitchPort08AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08AutoNegotiate.setStatus('current')
lte8stSwitchPort08Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Speed.setStatus('current')
lte8stSwitchPort08Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Duplex.setStatus('current')
lte8stSwitchPort08FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08FlowControl.setStatus('current')
lte8stSwitchPort08IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08IngressMirroring.setStatus('current')
lte8stSwitchPort08EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08EgressMirroring.setStatus('current')
lte8stSwitchPort08State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 8))
lte8stSwitchPort08StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08StateLink.setStatus('current')
lte8stSwitchPort08StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08StateError.setStatus('current')
lte8stSwitchPort08StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08StateSpeed.setStatus('current')
lte8stSwitchPort08StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08StateDuplex.setStatus('current')
lte8stSwitchPort08StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08StateFlowControl.setStatus('current')
lte8stSwitchPort08VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 9))
lte8stSwitchPort08VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08VLANPVID.setStatus('current')
lte8stSwitchPort08VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08VLANFrameTypes.setStatus('current')
lte8stSwitchPort08VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08VLANIngressFiltering.setStatus('current')
lte8stSwitchPort08LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 10))
lte8stSwitchPort08LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08LACPChannelGroup.setStatus('current')
lte8stSwitchPort08LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08LACPPriority.setStatus('current')
lte8stSwitchPort08LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08LACPTimeOut.setStatus('current')
lte8stSwitchPort08LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08LACPActivity.setStatus('current')
lte8stSwitchPort08Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11))
lte8stSwitchPort08GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08GoodOctetsReceived.setStatus('current')
lte8stSwitchPort08BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08BadOctetsReceived.setStatus('current')
lte8stSwitchPort08MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08MacTransmitErrors.setStatus('current')
lte8stSwitchPort08GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08GoodPacketsReceived.setStatus('current')
lte8stSwitchPort08BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08BadPacketsReceived.setStatus('current')
lte8stSwitchPort08BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort08MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort08Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Packets64Octets.setStatus('current')
lte8stSwitchPort08Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Packets65to127Octets.setStatus('current')
lte8stSwitchPort08Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Packets128to255Octets.setStatus('current')
lte8stSwitchPort08Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Packets256to511Octets.setStatus('current')
lte8stSwitchPort08Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Packets512to1023Octets.setStatus('current')
lte8stSwitchPort08Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort08GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08GoodOctetsSent.setStatus('current')
lte8stSwitchPort08GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08GoodPacketsSent.setStatus('current')
lte8stSwitchPort08ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08ExcessiveCollisions.setStatus('current')
lte8stSwitchPort08MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08MulticastPacketsSent.setStatus('current')
lte8stSwitchPort08BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort08UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort08FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08FlowControlFramesSent.setStatus('current')
lte8stSwitchPort08GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort08DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08DropEvents.setStatus('current')
lte8stSwitchPort08UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort08FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08FragmentsReceived.setStatus('current')
lte8stSwitchPort08OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08OversizePacketsReceived.setStatus('current')
lte8stSwitchPort08JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08JabberPacketsReceived.setStatus('current')
lte8stSwitchPort08MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08MACReceiveErrors.setStatus('current')
lte8stSwitchPort08BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08BadCRC.setStatus('current')
lte8stSwitchPort08Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08Collisions.setStatus('current')
lte8stSwitchPort08LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08LateCollisions.setStatus('current')
lte8stSwitchPort08BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 9, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort08BadFlowControlReceived.setStatus('current')
lte8stSwitchPort09 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10))
lte8stSwitchPort09Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Enabled.setStatus('current')
lte8stSwitchPort09AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09AutoNegotiate.setStatus('current')
lte8stSwitchPort09Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Speed.setStatus('current')
lte8stSwitchPort09Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Duplex.setStatus('current')
lte8stSwitchPort09FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09FlowControl.setStatus('current')
lte8stSwitchPort09IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09IngressMirroring.setStatus('current')
lte8stSwitchPort09EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09EgressMirroring.setStatus('current')
lte8stSwitchPort09State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 8))
lte8stSwitchPort09StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09StateLink.setStatus('current')
lte8stSwitchPort09StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09StateError.setStatus('current')
lte8stSwitchPort09StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09StateSpeed.setStatus('current')
lte8stSwitchPort09StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09StateDuplex.setStatus('current')
lte8stSwitchPort09StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09StateFlowControl.setStatus('current')
lte8stSwitchPort09VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 9))
lte8stSwitchPort09VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09VLANPVID.setStatus('current')
lte8stSwitchPort09VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09VLANFrameTypes.setStatus('current')
lte8stSwitchPort09VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09VLANIngressFiltering.setStatus('current')
lte8stSwitchPort09LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 10))
lte8stSwitchPort09LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09LACPChannelGroup.setStatus('current')
lte8stSwitchPort09LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09LACPPriority.setStatus('current')
lte8stSwitchPort09LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09LACPTimeOut.setStatus('current')
lte8stSwitchPort09LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09LACPActivity.setStatus('current')
lte8stSwitchPort09Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11))
lte8stSwitchPort09GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09GoodOctetsReceived.setStatus('current')
lte8stSwitchPort09BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09BadOctetsReceived.setStatus('current')
lte8stSwitchPort09MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09MacTransmitErrors.setStatus('current')
lte8stSwitchPort09GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09GoodPacketsReceived.setStatus('current')
lte8stSwitchPort09BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09BadPacketsReceived.setStatus('current')
lte8stSwitchPort09BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort09MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort09Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Packets64Octets.setStatus('current')
lte8stSwitchPort09Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Packets65to127Octets.setStatus('current')
lte8stSwitchPort09Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Packets128to255Octets.setStatus('current')
lte8stSwitchPort09Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Packets256to511Octets.setStatus('current')
lte8stSwitchPort09Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Packets512to1023Octets.setStatus('current')
lte8stSwitchPort09Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort09GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09GoodOctetsSent.setStatus('current')
lte8stSwitchPort09GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09GoodPacketsSent.setStatus('current')
lte8stSwitchPort09ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09ExcessiveCollisions.setStatus('current')
lte8stSwitchPort09MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09MulticastPacketsSent.setStatus('current')
lte8stSwitchPort09BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort09UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort09FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09FlowControlFramesSent.setStatus('current')
lte8stSwitchPort09GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort09DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09DropEvents.setStatus('current')
lte8stSwitchPort09UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort09FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09FragmentsReceived.setStatus('current')
lte8stSwitchPort09OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09OversizePacketsReceived.setStatus('current')
lte8stSwitchPort09JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09JabberPacketsReceived.setStatus('current')
lte8stSwitchPort09MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09MACReceiveErrors.setStatus('current')
lte8stSwitchPort09BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09BadCRC.setStatus('current')
lte8stSwitchPort09Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09Collisions.setStatus('current')
lte8stSwitchPort09LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09LateCollisions.setStatus('current')
lte8stSwitchPort09BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 10, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort09BadFlowControlReceived.setStatus('current')
lte8stSwitchPort10 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11))
lte8stSwitchPort10Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Enabled.setStatus('current')
lte8stSwitchPort10AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10AutoNegotiate.setStatus('current')
lte8stSwitchPort10Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Speed.setStatus('current')
lte8stSwitchPort10Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Duplex.setStatus('current')
lte8stSwitchPort10FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10FlowControl.setStatus('current')
lte8stSwitchPort10IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10IngressMirroring.setStatus('current')
lte8stSwitchPort10EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10EgressMirroring.setStatus('current')
lte8stSwitchPort10State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 8))
lte8stSwitchPort10StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10StateLink.setStatus('current')
lte8stSwitchPort10StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10StateError.setStatus('current')
lte8stSwitchPort10StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10StateSpeed.setStatus('current')
lte8stSwitchPort10StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10StateDuplex.setStatus('current')
lte8stSwitchPort10StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10StateFlowControl.setStatus('current')
lte8stSwitchPort10VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 9))
lte8stSwitchPort10VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10VLANPVID.setStatus('current')
lte8stSwitchPort10VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10VLANFrameTypes.setStatus('current')
lte8stSwitchPort10VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10VLANIngressFiltering.setStatus('current')
lte8stSwitchPort10LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 10))
lte8stSwitchPort10LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10LACPChannelGroup.setStatus('current')
lte8stSwitchPort10LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10LACPPriority.setStatus('current')
lte8stSwitchPort10LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10LACPTimeOut.setStatus('current')
lte8stSwitchPort10LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10LACPActivity.setStatus('current')
lte8stSwitchPort10Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11))
lte8stSwitchPort10GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10GoodOctetsReceived.setStatus('current')
lte8stSwitchPort10BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10BadOctetsReceived.setStatus('current')
lte8stSwitchPort10MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10MacTransmitErrors.setStatus('current')
lte8stSwitchPort10GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10GoodPacketsReceived.setStatus('current')
lte8stSwitchPort10BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10BadPacketsReceived.setStatus('current')
lte8stSwitchPort10BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort10MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort10Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Packets64Octets.setStatus('current')
lte8stSwitchPort10Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Packets65to127Octets.setStatus('current')
lte8stSwitchPort10Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Packets128to255Octets.setStatus('current')
lte8stSwitchPort10Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Packets256to511Octets.setStatus('current')
lte8stSwitchPort10Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Packets512to1023Octets.setStatus('current')
lte8stSwitchPort10Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort10GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10GoodOctetsSent.setStatus('current')
lte8stSwitchPort10GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10GoodPacketsSent.setStatus('current')
lte8stSwitchPort10ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10ExcessiveCollisions.setStatus('current')
lte8stSwitchPort10MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10MulticastPacketsSent.setStatus('current')
lte8stSwitchPort10BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort10UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort10FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10FlowControlFramesSent.setStatus('current')
lte8stSwitchPort10GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort10DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10DropEvents.setStatus('current')
lte8stSwitchPort10UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort10FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10FragmentsReceived.setStatus('current')
lte8stSwitchPort10OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10OversizePacketsReceived.setStatus('current')
lte8stSwitchPort10JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10JabberPacketsReceived.setStatus('current')
lte8stSwitchPort10MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10MACReceiveErrors.setStatus('current')
lte8stSwitchPort10BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10BadCRC.setStatus('current')
lte8stSwitchPort10Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10Collisions.setStatus('current')
lte8stSwitchPort10LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10LateCollisions.setStatus('current')
lte8stSwitchPort10BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 11, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort10BadFlowControlReceived.setStatus('current')
lte8stSwitchPort11 = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12))
lte8stSwitchPort11Enabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Enabled.setStatus('current')
lte8stSwitchPort11AutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11AutoNegotiate.setStatus('current')
lte8stSwitchPort11Speed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Speed.setStatus('current')
lte8stSwitchPort11Duplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Duplex.setStatus('current')
lte8stSwitchPort11FlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11FlowControl.setStatus('current')
lte8stSwitchPort11IngressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11IngressMirroring.setStatus('current')
lte8stSwitchPort11EgressMirroring = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11EgressMirroring.setStatus('current')
lte8stSwitchPort11State = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 8))
lte8stSwitchPort11StateLink = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 8, 1), SwitchLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11StateLink.setStatus('current')
lte8stSwitchPort11StateError = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 8, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11StateError.setStatus('current')
lte8stSwitchPort11StateSpeed = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 8, 3), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11StateSpeed.setStatus('current')
lte8stSwitchPort11StateDuplex = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 8, 4), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11StateDuplex.setStatus('current')
lte8stSwitchPort11StateFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 8, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11StateFlowControl.setStatus('current')
lte8stSwitchPort11VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 9))
lte8stSwitchPort11VLANPVID = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11VLANPVID.setStatus('current')
lte8stSwitchPort11VLANFrameTypes = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 9, 2), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11VLANFrameTypes.setStatus('current')
lte8stSwitchPort11VLANIngressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 9, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11VLANIngressFiltering.setStatus('current')
lte8stSwitchPort11LACP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 10))
lte8stSwitchPort11LACPChannelGroup = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11LACPChannelGroup.setStatus('current')
lte8stSwitchPort11LACPPriority = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11LACPPriority.setStatus('current')
lte8stSwitchPort11LACPTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 10, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11LACPTimeOut.setStatus('current')
lte8stSwitchPort11LACPActivity = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 10, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11LACPActivity.setStatus('current')
lte8stSwitchPort11Counters = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11))
lte8stSwitchPort11GoodOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11GoodOctetsReceived.setStatus('current')
lte8stSwitchPort11BadOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11BadOctetsReceived.setStatus('current')
lte8stSwitchPort11MacTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11MacTransmitErrors.setStatus('current')
lte8stSwitchPort11GoodPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11GoodPacketsReceived.setStatus('current')
lte8stSwitchPort11BadPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11BadPacketsReceived.setStatus('current')
lte8stSwitchPort11BroadcastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11BroadcastPacketsReceived.setStatus('current')
lte8stSwitchPort11MulticastPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11MulticastPacketsReceived.setStatus('current')
lte8stSwitchPort11Packets64Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Packets64Octets.setStatus('current')
lte8stSwitchPort11Packets65to127Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Packets65to127Octets.setStatus('current')
lte8stSwitchPort11Packets128to255Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Packets128to255Octets.setStatus('current')
lte8stSwitchPort11Packets256to511Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Packets256to511Octets.setStatus('current')
lte8stSwitchPort11Packets512to1023Octets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Packets512to1023Octets.setStatus('current')
lte8stSwitchPort11Packets1024toMaxOctets = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Packets1024toMaxOctets.setStatus('current')
lte8stSwitchPort11GoodOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11GoodOctetsSent.setStatus('current')
lte8stSwitchPort11GoodPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11GoodPacketsSent.setStatus('current')
lte8stSwitchPort11ExcessiveCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11ExcessiveCollisions.setStatus('current')
lte8stSwitchPort11MulticastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11MulticastPacketsSent.setStatus('current')
lte8stSwitchPort11BroadcastPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11BroadcastPacketsSent.setStatus('current')
lte8stSwitchPort11UnrecogMacControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11UnrecogMacControlReceived.setStatus('current')
lte8stSwitchPort11FlowControlFramesSent = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11FlowControlFramesSent.setStatus('current')
lte8stSwitchPort11GoodFlowControlFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11GoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPort11DropEvents = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11DropEvents.setStatus('current')
lte8stSwitchPort11UndersizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11UndersizePacketsReceived.setStatus('current')
lte8stSwitchPort11FragmentsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11FragmentsReceived.setStatus('current')
lte8stSwitchPort11OversizePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11OversizePacketsReceived.setStatus('current')
lte8stSwitchPort11JabberPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11JabberPacketsReceived.setStatus('current')
lte8stSwitchPort11MACReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11MACReceiveErrors.setStatus('current')
lte8stSwitchPort11BadCRC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11BadCRC.setStatus('current')
lte8stSwitchPort11Collisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11Collisions.setStatus('current')
lte8stSwitchPort11LateCollisions = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11LateCollisions.setStatus('current')
lte8stSwitchPort11BadFlowControlReceived = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 1, 12, 11, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPort11BadFlowControlReceived.setStatus('current')
lte8stSwitchVLANTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2), )
if mibBuilder.loadTexts: lte8stSwitchVLANTable.setStatus('current')
lte8stSwitchVLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stSwitchVLANVID"))
if mibBuilder.loadTexts: lte8stSwitchVLANEntry.setStatus('current')
lte8stSwitchVLANVID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANVID.setStatus('current')
lte8stSwitchVLANName = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANName.setStatus('current')
lte8stSwitchVLANIGMPSnoopingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingEnabled.setStatus('current')
lte8stSwitchVLANIGMPSnoopingQuerierIP = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingQuerierIP.setStatus('current')
lte8stSwitchVLANIGMPSnoopingQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingQueryInterval.setStatus('current')
lte8stSwitchVLANIGMPSnoopingQueryResponceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingQueryResponceInterval.setStatus('current')
lte8stSwitchVLANIGMPSnoopingRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingRobustness.setStatus('current')
lte8stSwitchVLANIGMPSnoopingLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingLastMemberQueryInterval.setStatus('current')
lte8stSwitchVLANIGMPSnoopingFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 9), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingFastLeave.setStatus('current')
lte8stSwitchVLANIGMPSnoopingUpstreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPSnoopingUpstreamPort.setStatus('current')
lte8stSwitchVLANIGMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANIGMPVersion.setStatus('current')
lte8stSwitchVLANDiffServ = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANDiffServ.setStatus('current')
lte8stSwitchVLANUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANUserPriority.setStatus('current')
lte8stSwitchVLANPort00 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 20), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort00.setStatus('current')
lte8stSwitchVLANPort01 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 21), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort01.setStatus('current')
lte8stSwitchVLANPort02 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 22), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort02.setStatus('current')
lte8stSwitchVLANPort03 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 23), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort03.setStatus('current')
lte8stSwitchVLANPort04 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 24), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort04.setStatus('current')
lte8stSwitchVLANPort05 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 25), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort05.setStatus('current')
lte8stSwitchVLANPort06 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 26), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort06.setStatus('current')
lte8stSwitchVLANPort07 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 27), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort07.setStatus('current')
lte8stSwitchVLANPort08 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 28), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort08.setStatus('current')
lte8stSwitchVLANPort09 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 29), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort09.setStatus('current')
lte8stSwitchVLANPort10 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 30), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort10.setStatus('current')
lte8stSwitchVLANPort11 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 2, 1, 31), PortTagged()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchVLANPort11.setStatus('current')
lte8stSwitchLACPTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3), )
if mibBuilder.loadTexts: lte8stSwitchLACPTable.setStatus('current')
lte8stSwitchLACPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stSwitchLACPID"))
if mibBuilder.loadTexts: lte8stSwitchLACPEntry.setStatus('current')
lte8stSwitchLACPID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPID.setStatus('current')
lte8stSwitchLACPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 2), LACPMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPMode.setStatus('current')
lte8stSwitchLACPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPEnabled.setStatus('current')
lte8stSwitchLACPAutoNegotiate = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPAutoNegotiate.setStatus('current')
lte8stSwitchLACPSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 5), SwitchPortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPSpeed.setStatus('current')
lte8stSwitchLACPDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 6), SwitchPortDuplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPDuplex.setStatus('current')
lte8stSwitchLACPFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPFlowControl.setStatus('current')
lte8stSwitchLACPPVID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPPVID.setStatus('current')
lte8stSwitchLACPFrameTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 9), PortFrameTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPFrameTypes.setStatus('current')
lte8stSwitchLACPIngressFiltering = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 3, 1, 10), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchLACPIngressFiltering.setStatus('current')
lte8stSwitchIGMPSnooping = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 4))
lte8stSwitchIGMPSnoopingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 4, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchIGMPSnoopingEnabled.setStatus('current')
lte8stSwitchIGMPSnoopingUnregGroups = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 4, 2), IGMPUnregGroupSettings()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchIGMPSnoopingUnregGroups.setStatus('current')
lte8stSwitchPortMirroring = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 5))
lte8stSwitchMirroringEgressAnalyser = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchMirroringEgressAnalyser.setStatus('current')
lte8stSwitchMirroringIngressAnalyser = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 5, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchMirroringIngressAnalyser.setStatus('current')
lte8stSwitchDHCP = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 6))
lte8stSwitchDHCPPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 6, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchDHCPPrimaryServer.setStatus('current')
lte8stSwitchDHCPSecondaryServer = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 6, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchDHCPSecondaryServer.setStatus('current')
lte8stSwitchPortsCountersTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10), )
if mibBuilder.loadTexts: lte8stSwitchPortsCountersTable.setStatus('current')
lte8stSwitchPortsCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stSwitchPortsCountersID"))
if mibBuilder.loadTexts: lte8stSwitchPortsCountersEntry.setStatus('current')
lte8stSwitchPortsCountersID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersID.setStatus('current')
lte8stSwitchPortsCountersGoodOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersGoodOctetsReceived.setStatus('current')
lte8stSwitchPortsCountersBadOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersBadOctetsReceived.setStatus('current')
lte8stSwitchPortsCountersMacTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersMacTransmitErrors.setStatus('current')
lte8stSwitchPortsCountersGoodPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersGoodPacketsReceived.setStatus('current')
lte8stSwitchPortsCountersBadPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersBadPacketsReceived.setStatus('current')
lte8stSwitchPortsCountersBroadcastPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersBroadcastPacketsReceived.setStatus('current')
lte8stSwitchPortsCountersMulticastPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersMulticastPacketsReceived.setStatus('current')
lte8stSwitchPortsCountersPackets64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersPackets64Octets.setStatus('current')
lte8stSwitchPortsCountersPackets65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersPackets65to127Octets.setStatus('current')
lte8stSwitchPortsCountersPackets128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersPackets128to255Octets.setStatus('current')
lte8stSwitchPortsCountersPackets256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersPackets256to511Octets.setStatus('current')
lte8stSwitchPortsCountersPackets512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersPackets512to1023Octets.setStatus('current')
lte8stSwitchPortsCountersPackets1024toMaxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersPackets1024toMaxOctets.setStatus('current')
lte8stSwitchPortsCountersGoodOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersGoodOctetsSent.setStatus('current')
lte8stSwitchPortsCountersGoodPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersGoodPacketsSent.setStatus('current')
lte8stSwitchPortsCountersExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersExcessiveCollisions.setStatus('current')
lte8stSwitchPortsCountersMulticastPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersMulticastPacketsSent.setStatus('current')
lte8stSwitchPortsCountersBroadcastPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersBroadcastPacketsSent.setStatus('current')
lte8stSwitchPortsCountersUnrecogMacControlReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersUnrecogMacControlReceived.setStatus('current')
lte8stSwitchPortsCountersFlowControlFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersFlowControlFramesSent.setStatus('current')
lte8stSwitchPortsCountersGoodFlowControlFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersGoodFlowControlFramesReceived.setStatus('current')
lte8stSwitchPortsCountersDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersDropEvents.setStatus('current')
lte8stSwitchPortsCountersUndersizePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersUndersizePacketsReceived.setStatus('current')
lte8stSwitchPortsCountersFragmentsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersFragmentsReceived.setStatus('current')
lte8stSwitchPortsCountersOversizePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersOversizePacketsReceived.setStatus('current')
lte8stSwitchPortsCountersJabberPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersJabberPacketsReceived.setStatus('current')
lte8stSwitchPortsCountersMACReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersMACReceiveErrors.setStatus('current')
lte8stSwitchPortsCountersBadCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersBadCRC.setStatus('current')
lte8stSwitchPortsCountersCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersCollisions.setStatus('current')
lte8stSwitchPortsCountersLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersLateCollisions.setStatus('current')
lte8stSwitchPortsCountersBadFlowControlReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stSwitchPortsCountersBadFlowControlReceived.setStatus('current')
lte8stSwitchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 8, 100))
for _lte8stSwitchGroup_obj in [[("ELTEX-LTE8ST", "lte8stSwitchPort00Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort00AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort00FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort00IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort00EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort00StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort00StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort00StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort00StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort00StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort00VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort00VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort00VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort00LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort00LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort00LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort00LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort00GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort00GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort00GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort00GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort00ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort00MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort00BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort00UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort00GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort00UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort00MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort00BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort00Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort00LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort00BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort01AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort01FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort01IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort01EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort01StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort01StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort01StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort01StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort01StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort01VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort01VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort01VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort01LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort01LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort01LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort01LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort01GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort01GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort01GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort01GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort01ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort01MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort01BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort01UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort01GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort01UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort01MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort01BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort01Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort01LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort01BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort02AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort02FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort02IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort02EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort02StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort02StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort02StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort02StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort02StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort02VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort02VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort02VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort02LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort02LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort02LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort02LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort02GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort02GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort02GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort02GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort02ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort02MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort02BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort02UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort02GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort02UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort02MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort02BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort02Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort02LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort02BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort03AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort03FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort03IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort03EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort03StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort03StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort03StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort03StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort03StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort03VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort03VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort03VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort03LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort03LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort03LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort03LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort03GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort03GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort03GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort03GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort03ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort03MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort03BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort03UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort03GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort03UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort03MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort03BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort03Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort03LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort03BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort04AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort04FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort04IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort04EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort04StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort04StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort04StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort04StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort04StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort04VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort04VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort04VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort04LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort04LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort04LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort04LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort04GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort04GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort04GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort04GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort04ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort04MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort04BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort04UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort04GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort04UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort04MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort04BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort04Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort04LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort04BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort05AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort05FlowControl")], [("ELTEX-LTE8ST", "lte8stSwitchPort05IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort05EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort05StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort05StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort05StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort05StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort05StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort05VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort05VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort05VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort05LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort05LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort05LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort05LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort05GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort05GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort05GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort05GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort05ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort05MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort05BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort05UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort05GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort05UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort05MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort05BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort05Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort05LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort05BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort06AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort06FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort06IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort06EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort06StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort06StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort06StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort06StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort06StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort06VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort06VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort06VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort06LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort06LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort06LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort06LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort06GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort06GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort06GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort06GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort06ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort06MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort06BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort06UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort06GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort06UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort06MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort06BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort06Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort06LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort06BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort07AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort07FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort07IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort07EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort07StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort07StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort07StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort07StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort07StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort07VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort07VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort07VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort07LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort07LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort07LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort07LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort07GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort07GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort07GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort07GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort07ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort07MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort07BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort07UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort07GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort07UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort07MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort07BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort07Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort07LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort07BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort08AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort08FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort08IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort08EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort08StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort08StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort08StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort08StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort08StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort08VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort08VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort08VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort08LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort08LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort08LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort08LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort08GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort08GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort08GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort08GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort08ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort08MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort08BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort08UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort08GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort08UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort08MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort08BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort08Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort08LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort08BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort09AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort09FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort09IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort09EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort09StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort09StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort09StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort09StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort09StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort09VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort09VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort09VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort09LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort09LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort09LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort09LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort09GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort09GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort09GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort09GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort09ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort09MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort09BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort09UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort09GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort09UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort09MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort09BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort09Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort09LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort09BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort10AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort10FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort10IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort10EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort10StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort10StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort10StateSpeed")], [("ELTEX-LTE8ST", "lte8stSwitchPort10StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort10StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort10VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort10VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort10VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort10LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort10LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort10LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort10LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort10GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort10GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort10GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort10GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort10ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort10MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort10BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort10UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort10GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort10UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort10MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort10BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort10Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort10LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort10BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Enabled"), ("ELTEX-LTE8ST", "lte8stSwitchPort11AutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Speed"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Duplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort11FlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort11IngressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort11EgressMirroring"), ("ELTEX-LTE8ST", "lte8stSwitchPort11StateLink"), ("ELTEX-LTE8ST", "lte8stSwitchPort11StateError"), ("ELTEX-LTE8ST", "lte8stSwitchPort11StateSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchPort11StateDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchPort11StateFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchPort11VLANPVID"), ("ELTEX-LTE8ST", "lte8stSwitchPort11VLANFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchPort11VLANIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchPort11LACPChannelGroup"), ("ELTEX-LTE8ST", "lte8stSwitchPort11LACPPriority"), ("ELTEX-LTE8ST", "lte8stSwitchPort11LACPTimeOut"), ("ELTEX-LTE8ST", "lte8stSwitchPort11LACPActivity"), ("ELTEX-LTE8ST", "lte8stSwitchPort11GoodOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11BadOctetsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11MacTransmitErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort11GoodPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11BadPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11BroadcastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11MulticastPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Packets64Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Packets65to127Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Packets128to255Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Packets256to511Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Packets512to1023Octets"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Packets1024toMaxOctets"), ("ELTEX-LTE8ST", "lte8stSwitchPort11GoodOctetsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort11GoodPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort11ExcessiveCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort11MulticastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort11BroadcastPacketsSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort11UnrecogMacControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11FlowControlFramesSent"), ("ELTEX-LTE8ST", "lte8stSwitchPort11GoodFlowControlFramesReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11DropEvents"), ("ELTEX-LTE8ST", "lte8stSwitchPort11UndersizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11FragmentsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11OversizePacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11JabberPacketsReceived"), ("ELTEX-LTE8ST", "lte8stSwitchPort11MACReceiveErrors"), ("ELTEX-LTE8ST", "lte8stSwitchPort11BadCRC"), ("ELTEX-LTE8ST", "lte8stSwitchPort11Collisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort11LateCollisions"), ("ELTEX-LTE8ST", "lte8stSwitchPort11BadFlowControlReceived"), ("ELTEX-LTE8ST", "lte8stSwitchVLANVID"), ("ELTEX-LTE8ST", "lte8stSwitchVLANName"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingEnabled"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingQuerierIP"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingQueryInterval"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingQueryResponceInterval"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingRobustness"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingLastMemberQueryInterval"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingFastLeave"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPSnoopingUpstreamPort"), ("ELTEX-LTE8ST", "lte8stSwitchVLANIGMPVersion"), ("ELTEX-LTE8ST", "lte8stSwitchVLANDiffServ"), ("ELTEX-LTE8ST", "lte8stSwitchVLANUserPriority"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort00"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort01"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort02"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort03"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort04"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort05"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort06"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort07"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort08"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort09"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort10"), ("ELTEX-LTE8ST", "lte8stSwitchVLANPort11"), ("ELTEX-LTE8ST", "lte8stSwitchLACPID"), ("ELTEX-LTE8ST", "lte8stSwitchLACPMode"), ("ELTEX-LTE8ST", "lte8stSwitchLACPEnabled"), ("ELTEX-LTE8ST", "lte8stSwitchLACPAutoNegotiate"), ("ELTEX-LTE8ST", "lte8stSwitchLACPSpeed"), ("ELTEX-LTE8ST", "lte8stSwitchLACPDuplex"), ("ELTEX-LTE8ST", "lte8stSwitchLACPFlowControl"), ("ELTEX-LTE8ST", "lte8stSwitchLACPPVID"), ("ELTEX-LTE8ST", "lte8stSwitchLACPFrameTypes"), ("ELTEX-LTE8ST", "lte8stSwitchLACPIngressFiltering"), ("ELTEX-LTE8ST", "lte8stSwitchIGMPSnoopingEnabled"), ("ELTEX-LTE8ST", "lte8stSwitchIGMPSnoopingUnregGroups"), ("ELTEX-LTE8ST", "lte8stSwitchMirroringEgressAnalyser"), ("ELTEX-LTE8ST", "lte8stSwitchMirroringIngressAnalyser"), ("ELTEX-LTE8ST", "lte8stSwitchDHCPPrimaryServer"), ("ELTEX-LTE8ST", "lte8stSwitchDHCPSecondaryServer")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        lte8stSwitchGroup = lte8stSwitchGroup.setObjects(*_lte8stSwitchGroup_obj)
    else:
        lte8stSwitchGroup = lte8stSwitchGroup.setObjects(*_lte8stSwitchGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stSwitchGroup = lte8stSwitchGroup.setStatus('current')
lte8stONTConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16))
lte8stONTConfigTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1), )
if mibBuilder.loadTexts: lte8stONTConfigTable.setStatus('current')
lte8stONTConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTConfigMAC"))
if mibBuilder.loadTexts: lte8stONTConfigEntry.setStatus('current')
lte8stONTConfigMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigMAC.setStatus('current')
lte8stONTConfigID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigID.setStatus('current')
lte8stONTConfigRulesProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigRulesProfile.setStatus('current')
lte8stONTConfigIpMulticastProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigIpMulticastProfile.setStatus('current')
lte8stONTConfigShaperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigShaperProfile.setStatus('current')
lte8stONTConfigPortsProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigPortsProfile.setStatus('current')
lte8stONTConfigPathProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigPathProfile.setStatus('current')
lte8stONTConfigDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigDescription.setStatus('current')
lte8stONTConfigSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigSecret.setStatus('current')
lte8stONTConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 10), OntType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigType.setStatus('current')
lte8stONTConfigPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigPorts.setStatus('current')
lte8stONTConfigLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigLinks.setStatus('current')
lte8stONTConfigUNI0VIDDefined = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 13), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigUNI0VIDDefined.setStatus('deprecated')
lte8stONTConfigUNI0VID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigUNI0VID.setStatus('current')
lte8stONTConfigUNI1VIDDefined = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 15), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigUNI1VIDDefined.setStatus('deprecated')
lte8stONTConfigUNI1VID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigUNI1VID.setStatus('current')
lte8stONTConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 17), LTEExtObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigState.setStatus('deprecated')
lte8stONTConfigTree = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 18), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigTree.setStatus('current')
lte8stONTConfigBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 19), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stONTConfigBlocked.setStatus('current')
lte8stONTConfigDeleteRow = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTConfigDeleteRow.setStatus('current')
lte8stONTConfigReconfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTConfigReconfigure.setStatus('current')
lte8stONTConfigUpdateFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTConfigUpdateFirmware.setStatus('current')
lte8stONTConfigUNI0Blocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 23), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTConfigUNI0Blocked.setStatus('current')
lte8stONTConfigUNI1Blocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 24), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTConfigUNI1Blocked.setStatus('current')
lte8stONTConfigRFOutBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 1, 1, 25), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTConfigRFOutBlocked.setStatus('current')
lte8stONTIDConfigTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2), )
if mibBuilder.loadTexts: lte8stONTIDConfigTable.setStatus('current')
lte8stONTIDConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIDConfigTree"), (0, "ELTEX-LTE8ST", "lte8stONTIDConfigID"))
if mibBuilder.loadTexts: lte8stONTIDConfigEntry.setStatus('current')
lte8stONTIDConfigTree = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigTree.setStatus('current')
lte8stONTIDConfigID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigID.setStatus('current')
lte8stONTIDConfigMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDConfigMAC.setStatus('current')
lte8stONTIDConfigRulesProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigRulesProfile.setStatus('current')
lte8stONTIDConfigIpMulticastProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigIpMulticastProfile.setStatus('current')
lte8stONTIDConfigShaperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigShaperProfile.setStatus('current')
lte8stONTIDConfigPortsProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigPortsProfile.setStatus('current')
lte8stONTIDConfigPathProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigPathProfile.setStatus('current')
lte8stONTIDConfigDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigDescription.setStatus('current')
lte8stONTIDConfigSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigSecret.setStatus('current')
lte8stONTIDConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 11), OntType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigType.setStatus('current')
lte8stONTIDConfigPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDConfigPorts.setStatus('current')
lte8stONTIDConfigLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDConfigLinks.setStatus('current')
lte8stONTIDConfigUNI0VIDDefined = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 14), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDConfigUNI0VIDDefined.setStatus('deprecated')
lte8stONTIDConfigUNI0VID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigUNI0VID.setStatus('current')
lte8stONTIDConfigUNI1VIDDefined = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 16), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDConfigUNI1VIDDefined.setStatus('deprecated')
lte8stONTIDConfigUNI1VID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 17), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigUNI1VID.setStatus('current')
lte8stONTIDConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 18), LTEExtObjectState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIDConfigState.setStatus('deprecated')
lte8stONTIDConfigBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 19), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigBlocked.setStatus('current')
lte8stONTIDConfigDeleteRow = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigDeleteRow.setStatus('deprecated')
lte8stONTIDConfigReconfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigReconfigure.setStatus('current')
lte8stONTIDConfigUpdateFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigUpdateFirmware.setStatus('current')
lte8stONTIDConfigUNI0Blocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 23), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigUNI0Blocked.setStatus('current')
lte8stONTIDConfigUNI1Blocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 24), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigUNI1Blocked.setStatus('current')
lte8stONTIDConfigRFOutBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 2, 1, 25), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTIDConfigRFOutBlocked.setStatus('current')
lte8stONTRulesPONTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 3), )
if mibBuilder.loadTexts: lte8stONTRulesPONTable.setStatus('current')
lte8stONTRulesPONEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTRulesPONMAC"), (0, "ELTEX-LTE8ST", "lte8stONTRulesPONID"))
if mibBuilder.loadTexts: lte8stONTRulesPONEntry.setStatus('current')
lte8stONTRulesPONMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: lte8stONTRulesPONMAC.setStatus('current')
lte8stONTRulesPONID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: lte8stONTRulesPONID.setStatus('current')
lte8stONTRulesPONLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTRulesPONLocal.setStatus('current')
lte8stONTRulesPONRule = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTRulesPONRule.setStatus('current')
lte8stONTRulesPONRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 3, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTRulesPONRowStatus.setStatus('current')
lte8stONTRulesUNI0Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 4), )
if mibBuilder.loadTexts: lte8stONTRulesUNI0Table.setStatus('current')
lte8stONTRulesUNI0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 4, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTRulesUNI0MAC"), (0, "ELTEX-LTE8ST", "lte8stONTRulesUNI0ID"))
if mibBuilder.loadTexts: lte8stONTRulesUNI0Entry.setStatus('current')
lte8stONTRulesUNI0MAC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: lte8stONTRulesUNI0MAC.setStatus('current')
lte8stONTRulesUNI0ID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 4, 1, 2), Unsigned32())
if mibBuilder.loadTexts: lte8stONTRulesUNI0ID.setStatus('current')
lte8stONTRulesUNI0Local = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTRulesUNI0Local.setStatus('current')
lte8stONTRulesUNI0Rule = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTRulesUNI0Rule.setStatus('current')
lte8stONTRulesUNI0RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 4, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTRulesUNI0RowStatus.setStatus('current')
lte8stONTRulesUNI1Table = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 5), )
if mibBuilder.loadTexts: lte8stONTRulesUNI1Table.setStatus('current')
lte8stONTRulesUNI1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 5, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTRulesUNI1MAC"), (0, "ELTEX-LTE8ST", "lte8stONTRulesUNI1ID"))
if mibBuilder.loadTexts: lte8stONTRulesUNI1Entry.setStatus('current')
lte8stONTRulesUNI1MAC = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: lte8stONTRulesUNI1MAC.setStatus('current')
lte8stONTRulesUNI1ID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 5, 1, 2), Unsigned32())
if mibBuilder.loadTexts: lte8stONTRulesUNI1ID.setStatus('current')
lte8stONTRulesUNI1Local = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTRulesUNI1Local.setStatus('current')
lte8stONTRulesUNI1Rule = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTRulesUNI1Rule.setStatus('current')
lte8stONTRulesUNI1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 5, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stONTRulesUNI1RowStatus.setStatus('current')
lte8stONTConfigConfigChangesCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigConfigChangesCount.setStatus('current')
lte8stONTConfigStateChangesCount = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 16, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTConfigStateChangesCount.setStatus('current')
lte8stONTIGMPGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 18), )
if mibBuilder.loadTexts: lte8stONTIGMPGroupsTable.setStatus('current')
lte8stONTIGMPGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 18, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stONTIGMPGroupsONTMac"), (0, "ELTEX-LTE8ST", "lte8stONTIGMPGroupsONTPort"), (0, "ELTEX-LTE8ST", "lte8stONTIGMPGroupsID"))
if mibBuilder.loadTexts: lte8stONTIGMPGroupsEntry.setStatus('current')
lte8stONTIGMPGroupsONTMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 18, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIGMPGroupsONTMac.setStatus('current')
lte8stONTIGMPGroupsONTPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 18, 1, 2), OntPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIGMPGroupsONTPort.setStatus('current')
lte8stONTIGMPGroupsID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 18, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIGMPGroupsID.setStatus('current')
lte8stONTIGMPGroupsIP = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 18, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stONTIGMPGroupsIP.setStatus('current')
lte8stProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20))
lte8stProfilesShaperTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1), )
if mibBuilder.loadTexts: lte8stProfilesShaperTable.setStatus('current')
lte8stProfilesShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stProfilesShaperEntryID"))
if mibBuilder.loadTexts: lte8stProfilesShaperEntry.setStatus('current')
lte8stProfilesShaperEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesShaperEntryID.setStatus('current')
lte8stProfilesShaperDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesShaperDescription.setStatus('current')
lte8stProfilesShaperLink0Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 3), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0Enabled.setStatus('current')
lte8stProfilesShaperLink0UpstreamBandwidthMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamBandwidthMin.setStatus('current')
lte8stProfilesShaperLink0UpstreamBandwidthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamBandwidthMax.setStatus('current')
lte8stProfilesShaperLink0UpstreamBurstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamBurstMin.setStatus('current')
lte8stProfilesShaperLink0UpstreamBurstMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamBurstMax.setStatus('current')
lte8stProfilesShaperLink0UpstreamSchedulerLevelMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamSchedulerLevelMin.setStatus('current')
lte8stProfilesShaperLink0UpstreamSchedulerLevelMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamSchedulerLevelMax.setStatus('current')
lte8stProfilesShaperLink0UpstreamWeightMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamWeightMin.setStatus('current')
lte8stProfilesShaperLink0UpstreamWeightMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0UpstreamWeightMax.setStatus('current')
lte8stProfilesShaperLink0DownstreamBandwidthMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamBandwidthMin.setStatus('current')
lte8stProfilesShaperLink0DownstreamBandwidthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamBandwidthMax.setStatus('current')
lte8stProfilesShaperLink0DownstreamBurstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamBurstMin.setStatus('current')
lte8stProfilesShaperLink0DownstreamBurstMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamBurstMax.setStatus('current')
lte8stProfilesShaperLink0DownstreamSchedulerLevelMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamSchedulerLevelMin.setStatus('current')
lte8stProfilesShaperLink0DownstreamSchedulerLevelMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamSchedulerLevelMax.setStatus('current')
lte8stProfilesShaperLink0DownstreamWeightMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamWeightMin.setStatus('current')
lte8stProfilesShaperLink0DownstreamWeightMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink0DownstreamWeightMax.setStatus('current')
lte8stProfilesShaperLink1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 20), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1Enabled.setStatus('current')
lte8stProfilesShaperLink1UpstreamBandwidthMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamBandwidthMin.setStatus('current')
lte8stProfilesShaperLink1UpstreamBandwidthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamBandwidthMax.setStatus('current')
lte8stProfilesShaperLink1UpstreamBurstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 23), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamBurstMin.setStatus('current')
lte8stProfilesShaperLink1UpstreamBurstMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 24), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamBurstMax.setStatus('current')
lte8stProfilesShaperLink1UpstreamSchedulerLevelMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamSchedulerLevelMin.setStatus('current')
lte8stProfilesShaperLink1UpstreamSchedulerLevelMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamSchedulerLevelMax.setStatus('current')
lte8stProfilesShaperLink1UpstreamWeightMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamWeightMin.setStatus('current')
lte8stProfilesShaperLink1UpstreamWeightMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 28), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1UpstreamWeightMax.setStatus('current')
lte8stProfilesShaperLink1DownstreamBandwidthMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 29), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamBandwidthMin.setStatus('current')
lte8stProfilesShaperLink1DownstreamBandwidthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 30), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamBandwidthMax.setStatus('current')
lte8stProfilesShaperLink1DownstreamBurstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 31), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamBurstMin.setStatus('current')
lte8stProfilesShaperLink1DownstreamBurstMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 32), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamBurstMax.setStatus('current')
lte8stProfilesShaperLink1DownstreamSchedulerLevelMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamSchedulerLevelMin.setStatus('current')
lte8stProfilesShaperLink1DownstreamSchedulerLevelMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamSchedulerLevelMax.setStatus('current')
lte8stProfilesShaperLink1DownstreamWeightMin = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 35), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamWeightMin.setStatus('current')
lte8stProfilesShaperLink1DownstreamWeightMax = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 1, 1, 36), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stProfilesShaperLink1DownstreamWeightMax.setStatus('current')
lte8stProfilesPortsTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2), )
if mibBuilder.loadTexts: lte8stProfilesPortsTable.setStatus('current')
lte8stProfilesPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stProfilesPortsEntryID"))
if mibBuilder.loadTexts: lte8stProfilesPortsEntry.setStatus('current')
lte8stProfilesPortsEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesPortsEntryID.setStatus('current')
lte8stProfilesPortsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsDescription.setStatus('current')
lte8stProfilesPortsPONEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 3), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsPONEnabled.setStatus('current')
lte8stProfilesPortsPONForwardBroadcastARPFramesLink0 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 4), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsPONForwardBroadcastARPFramesLink0.setStatus('current')
lte8stProfilesPortsPONForwardBroadcastARPFramesLink1 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 5), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsPONForwardBroadcastARPFramesLink1.setStatus('current')
lte8stProfilesPortsUNI0Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 6), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0Enabled.setStatus('current')
lte8stProfilesPortsUNI0AutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 7), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0AutoNegotiation.setStatus('current')
lte8stProfilesPortsUNI0Speed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 8), ONTPortSpeed()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0Speed.setStatus('current')
lte8stProfilesPortsUNI0Duplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 9), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0Duplex.setStatus('current')
lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink0 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 10), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink0.setStatus('current')
lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink1 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 11), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink1.setStatus('current')
lte8stProfilesPortsUNI0AutomaticLearningEntryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0AutomaticLearningEntryLimit.setStatus('current')
lte8stProfilesPortsUNI0LearnedEntryAgeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0LearnedEntryAgeLimit.setStatus('current')
lte8stProfilesPortsUNI0ForwardingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 14), ONTPortForwardingMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0ForwardingMode.setStatus('current')
lte8stProfilesPortsUNI0MinimumGuaranteedMACLearningLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI0MinimumGuaranteedMACLearningLimit.setStatus('current')
lte8stProfilesPortsUNI1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 16), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1Enabled.setStatus('current')
lte8stProfilesPortsUNI1AutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 17), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1AutoNegotiation.setStatus('current')
lte8stProfilesPortsUNI1Speed = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 18), ONTPortSpeed()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1Speed.setStatus('current')
lte8stProfilesPortsUNI1Duplex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 19), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1Duplex.setStatus('current')
lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink0 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 20), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink0.setStatus('current')
lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink1 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 21), BoolValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink1.setStatus('current')
lte8stProfilesPortsUNI1AutomaticLearningEntryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1AutomaticLearningEntryLimit.setStatus('current')
lte8stProfilesPortsUNI1LearnedEntryAgeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1LearnedEntryAgeLimit.setStatus('current')
lte8stProfilesPortsUNI1ForwardingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 24), ONTPortForwardingMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1ForwardingMode.setStatus('current')
lte8stProfilesPortsUNI1MinimumGuaranteedMACLearningLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 2, 1, 25), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lte8stProfilesPortsUNI1MinimumGuaranteedMACLearningLimit.setStatus('current')
lte8stProfilesRulesTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 3), )
if mibBuilder.loadTexts: lte8stProfilesRulesTable.setStatus('current')
lte8stProfilesRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 3, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stProfilesRulesEntryID"))
if mibBuilder.loadTexts: lte8stProfilesRulesEntry.setStatus('current')
lte8stProfilesRulesEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesRulesEntryID.setStatus('current')
lte8stProfilesRulesDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesRulesDescription.setStatus('current')
lte8stProfilesIpMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 4), )
if mibBuilder.loadTexts: lte8stProfilesIpMulticastTable.setStatus('current')
lte8stProfilesIpMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 4, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stProfilesIpMulticastEntryID"))
if mibBuilder.loadTexts: lte8stProfilesIpMulticastEntry.setStatus('current')
lte8stProfilesIpMulticastEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesIpMulticastEntryID.setStatus('current')
lte8stProfilesIpMulticastDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesIpMulticastDescription.setStatus('current')
lte8stProfilesPathTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 5), )
if mibBuilder.loadTexts: lte8stProfilesPathTable.setStatus('current')
lte8stProfilesPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 5, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stProfilesPathEntryID"))
if mibBuilder.loadTexts: lte8stProfilesPathEntry.setStatus('current')
lte8stProfilesPathEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesPathEntryID.setStatus('current')
lte8stProfilesPathDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 20, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stProfilesPathDescription.setStatus('current')
lte8stMacTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25), )
if mibBuilder.loadTexts: lte8stMacTable.setStatus('current')
lte8stMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25, 1), ).setIndexNames((0, "ELTEX-LTE8ST", "lte8stMacIndexMac"), (0, "ELTEX-LTE8ST", "lte8stMacIndexNum"))
if mibBuilder.loadTexts: lte8stMacEntry.setStatus('current')
lte8stMacIndexMac = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stMacIndexMac.setStatus('current')
lte8stMacIndexNum = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stMacIndexNum.setStatus('current')
lte8stMacONTChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stMacONTChannel.setStatus('current')
lte8stMacONTID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stMacONTID.setStatus('current')
lte8stMacONTPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25, 1, 5), OntPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stMacONTPort.setStatus('current')
lte8stMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 21, 25, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stMacAddress.setStatus('current')
lte8stBoardStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30))
lte8stFan0Operational = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 1), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan0Operational.setStatus('current')
lte8stFan1Operational = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan1Operational.setStatus('current')
lte8stBoardTemperature = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 3), TempConv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stBoardTemperature.setStatus('current')
lte8stBoardTemperature2 = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 4), TempConv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stBoardTemperature2.setStatus('current')
lte8stFan2Operational = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan2Operational.setStatus('current')
lte8stFan3Operational = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan3Operational.setStatus('current')
lte8stFan0RPM = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan0RPM.setStatus('current')
lte8stFan1RPM = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan1RPM.setStatus('current')
lte8stFan2RPM = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan2RPM.setStatus('current')
lte8stFan3RPM = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 30, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lte8stFan3RPM.setStatus('current')
lte8stSNMPConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40))
lte8stSNMPAuthFailureTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 1), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPAuthFailureTrapEnabled.setStatus('current')
lte8stSNMPONTAuthAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 2), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPONTAuthAlarmTrapEnabled.setStatus('current')
lte8stSNMPUplinkAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 3), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPUplinkAlarmTrapEnabled.setStatus('current')
lte8stSNMPOpticalAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 4), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPOpticalAlarmTrapEnabled.setStatus('current')
lte8stSNMPFANAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 5), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPFANAlarmTrapEnabled.setStatus('current')
lte8stSNMPONTConfigAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 6), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPONTConfigAlarmTrapEnabled.setStatus('current')
lte8stSNMPFlappingAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 7), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPFlappingAlarmTrapEnabled.setStatus('current')
lte8stSNMPEponAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 8), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPEponAlarmTrapEnabled.setStatus('current')
lte8stSNMPConfigSavedAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 9), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPConfigSavedAlarmTrapEnabled.setStatus('current')
lte8stSNMPFirmwareUpdateAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 10), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPFirmwareUpdateAlarmTrapEnabled.setStatus('current')
lte8stSNMPUserLoginAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 11), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPUserLoginAlarmTrapEnabled.setStatus('deprecated')
lte8stSNMPRAMAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 12), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPRAMAlarmTrapEnabled.setStatus('current')
lte8stSNMPLoginAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 13), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPLoginAlarmTrapEnabled.setStatus('current')
lte8stSNMPDuplicateMacAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 14), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPDuplicateMacAlarmTrapEnabled.setStatus('current')
lte8stSNMPLoadAverageAlarmTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 15), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPLoadAverageAlarmTrapEnabled.setStatus('current')
lte8stSNMPONTAuthOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 20), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPONTAuthOkTrapEnabled.setStatus('current')
lte8stSNMPUplinkOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 21), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPUplinkOkTrapEnabled.setStatus('current')
lte8stSNMPOpticalOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 22), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPOpticalOkTrapEnabled.setStatus('current')
lte8stSNMPFanOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 23), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPFanOkTrapEnabled.setStatus('current')
lte8stSNMPONTConfOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 24), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPONTConfOkTrapEnabled.setStatus('current')
lte8stSNMPConfigSavedTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 25), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPConfigSavedTrapEnabled.setStatus('current')
lte8stSNMPFirmwareUpdateTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 26), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPFirmwareUpdateTrapEnabled.setStatus('current')
lte8stSNMPUserLoginTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 27), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPUserLoginTrapEnabled.setStatus('deprecated')
lte8stSNMPEponOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 28), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPEponOkTrapEnabled.setStatus('current')
lte8stSNMPFlappingOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 29), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPFlappingOkTrapEnabled.setStatus('current')
lte8stSNMPRAMOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 30), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPRAMOkTrapEnabled.setStatus('current')
lte8stSNMPLoginOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 31), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPLoginOkTrapEnabled.setStatus('current')
lte8stSNMPLogoutOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 32), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPLogoutOkTrapEnabled.setStatus('current')
lte8stSNMPSwitchConfigChangeTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 33), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPSwitchConfigChangeTrapEnabled.setStatus('current')
lte8stSNMPLoadAverageOkTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 40), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPLoadAverageOkTrapEnabled.setStatus('current')
lte8stSNMPONTDeconfigureTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 40, 41), BoolValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSNMPONTDeconfigureTrapEnabled.setStatus('current')
lte8stConfigMigrate = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 41))
lte8stConfigMigrateAll = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 41, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stConfigMigrateAll.setStatus('current')
lte8stConfigMigratePon = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 41, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stConfigMigratePon.setStatus('current')
lte8stSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 45), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stSaveConfig.setStatus('current')
lte8stRebootTimeout = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 21, 50), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lte8stRebootTimeout.setStatus('current')
lte8stOthersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 21, 200)).setObjects(("ELTEX-LTE8ST", "lte8stONTConfigMAC"), ("ELTEX-LTE8ST", "lte8stONTConfigID"), ("ELTEX-LTE8ST", "lte8stONTConfigRulesProfile"), ("ELTEX-LTE8ST", "lte8stONTConfigIpMulticastProfile"), ("ELTEX-LTE8ST", "lte8stONTConfigShaperProfile"), ("ELTEX-LTE8ST", "lte8stONTConfigPortsProfile"), ("ELTEX-LTE8ST", "lte8stONTConfigPathProfile"), ("ELTEX-LTE8ST", "lte8stONTConfigDescription"), ("ELTEX-LTE8ST", "lte8stONTConfigSecret"), ("ELTEX-LTE8ST", "lte8stONTConfigType"), ("ELTEX-LTE8ST", "lte8stONTConfigPorts"), ("ELTEX-LTE8ST", "lte8stONTConfigLinks"), ("ELTEX-LTE8ST", "lte8stONTConfigUNI0VIDDefined"), ("ELTEX-LTE8ST", "lte8stONTConfigUNI0VID"), ("ELTEX-LTE8ST", "lte8stONTConfigUNI1VIDDefined"), ("ELTEX-LTE8ST", "lte8stONTConfigUNI1VID"), ("ELTEX-LTE8ST", "lte8stONTConfigState"), ("ELTEX-LTE8ST", "lte8stONTConfigTree"), ("ELTEX-LTE8ST", "lte8stONTConfigBlocked"), ("ELTEX-LTE8ST", "lte8stONTConfigDeleteRow"), ("ELTEX-LTE8ST", "lte8stONTConfigReconfigure"), ("ELTEX-LTE8ST", "lte8stONTConfigUpdateFirmware"), ("ELTEX-LTE8ST", "lte8stONTConfigUNI0Blocked"), ("ELTEX-LTE8ST", "lte8stONTConfigUNI1Blocked"), ("ELTEX-LTE8ST", "lte8stONTIDConfigMAC"), ("ELTEX-LTE8ST", "lte8stONTIDConfigID"), ("ELTEX-LTE8ST", "lte8stONTIDConfigRulesProfile"), ("ELTEX-LTE8ST", "lte8stONTIDConfigIpMulticastProfile"), ("ELTEX-LTE8ST", "lte8stONTIDConfigShaperProfile"), ("ELTEX-LTE8ST", "lte8stONTIDConfigPortsProfile"), ("ELTEX-LTE8ST", "lte8stONTIDConfigPathProfile"), ("ELTEX-LTE8ST", "lte8stONTIDConfigDescription"), ("ELTEX-LTE8ST", "lte8stONTIDConfigSecret"), ("ELTEX-LTE8ST", "lte8stONTIDConfigType"), ("ELTEX-LTE8ST", "lte8stONTIDConfigPorts"), ("ELTEX-LTE8ST", "lte8stONTIDConfigLinks"), ("ELTEX-LTE8ST", "lte8stONTIDConfigUNI0VIDDefined"), ("ELTEX-LTE8ST", "lte8stONTIDConfigUNI0VID"), ("ELTEX-LTE8ST", "lte8stONTIDConfigUNI1VIDDefined"), ("ELTEX-LTE8ST", "lte8stONTIDConfigUNI1VID"), ("ELTEX-LTE8ST", "lte8stONTIDConfigState"), ("ELTEX-LTE8ST", "lte8stONTIDConfigTree"), ("ELTEX-LTE8ST", "lte8stONTIDConfigBlocked"), ("ELTEX-LTE8ST", "lte8stONTIDConfigDeleteRow"), ("ELTEX-LTE8ST", "lte8stONTIDConfigReconfigure"), ("ELTEX-LTE8ST", "lte8stONTIDConfigUpdateFirmware"), ("ELTEX-LTE8ST", "lte8stONTIDConfigUNI0Blocked"), ("ELTEX-LTE8ST", "lte8stONTIDConfigUNI1Blocked"), ("ELTEX-LTE8ST", "lte8stONTConfigConfigChangesCount"), ("ELTEX-LTE8ST", "lte8stONTConfigStateChangesCount"), ("ELTEX-LTE8ST", "lte8stProfilesShaperEntryID"), ("ELTEX-LTE8ST", "lte8stProfilesShaperDescription"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0Enabled"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamBandwidthMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamBandwidthMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamBurstMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamBurstMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamSchedulerLevelMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamSchedulerLevelMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamWeightMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0UpstreamWeightMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamBandwidthMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamBandwidthMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamBurstMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamBurstMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamSchedulerLevelMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamSchedulerLevelMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamWeightMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink0DownstreamWeightMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1Enabled"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamBandwidthMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamBandwidthMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamBurstMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamBurstMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamSchedulerLevelMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamSchedulerLevelMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamWeightMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1UpstreamWeightMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamBandwidthMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamBandwidthMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamBurstMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamBurstMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamSchedulerLevelMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamSchedulerLevelMax"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamWeightMin"), ("ELTEX-LTE8ST", "lte8stProfilesShaperLink1DownstreamWeightMax"), ("ELTEX-LTE8ST", "lte8stProfilesPortsEntryID"), ("ELTEX-LTE8ST", "lte8stProfilesPortsDescription"), ("ELTEX-LTE8ST", "lte8stProfilesPortsPONEnabled"), ("ELTEX-LTE8ST", "lte8stProfilesPortsPONForwardBroadcastARPFramesLink0"), ("ELTEX-LTE8ST", "lte8stProfilesPortsPONForwardBroadcastARPFramesLink1"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0Enabled"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0AutoNegotiation"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0Speed"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0Duplex"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink0"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink1"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0AutomaticLearningEntryLimit"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0LearnedEntryAgeLimit"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0ForwardingMode"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI0MinimumGuaranteedMACLearningLimit"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1Enabled"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1AutoNegotiation"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1Speed"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1Duplex"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink0"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink1"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1AutomaticLearningEntryLimit"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1LearnedEntryAgeLimit"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1ForwardingMode"), ("ELTEX-LTE8ST", "lte8stProfilesPortsUNI1MinimumGuaranteedMACLearningLimit"), ("ELTEX-LTE8ST", "lte8stProfilesRulesEntryID"), ("ELTEX-LTE8ST", "lte8stProfilesRulesDescription"), ("ELTEX-LTE8ST", "lte8stProfilesIpMulticastEntryID"), ("ELTEX-LTE8ST", "lte8stProfilesIpMulticastDescription"), ("ELTEX-LTE8ST", "lte8stProfilesPathEntryID"), ("ELTEX-LTE8ST", "lte8stProfilesPathDescription"), ("ELTEX-LTE8ST", "lte8stMacIndexMac"), ("ELTEX-LTE8ST", "lte8stMacIndexNum"), ("ELTEX-LTE8ST", "lte8stMacONTChannel"), ("ELTEX-LTE8ST", "lte8stMacONTID"), ("ELTEX-LTE8ST", "lte8stMacONTPort"), ("ELTEX-LTE8ST", "lte8stMacAddress"), ("ELTEX-LTE8ST", "lte8stFan0Operational"), ("ELTEX-LTE8ST", "lte8stFan1Operational"), ("ELTEX-LTE8ST", "lte8stBoardTemperature"), ("ELTEX-LTE8ST", "lte8stBoardTemperature2"), ("ELTEX-LTE8ST", "lte8stSNMPAuthFailureTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPONTAuthAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPUplinkAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPOpticalAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPFANAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPONTConfigAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPFlappingAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPEponAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPConfigSavedAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPFirmwareUpdateAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPUserLoginAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPRAMAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPLoginAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPDuplicateMacAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPLoadAverageAlarmTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPONTAuthOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPUplinkOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPOpticalOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPFanOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPONTConfOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPConfigSavedTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPFirmwareUpdateTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPUserLoginTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPEponOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPFlappingOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPRAMOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPLoadAverageOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPLoginOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPLogoutOkTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSNMPSwitchConfigChangeTrapEnabled"), ("ELTEX-LTE8ST", "lte8stSaveConfig"), ("ELTEX-LTE8ST", "lte8stRebootTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lte8stOthersGroup = lte8stOthersGroup.setStatus('current')
lteSubTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 202))
lteSubType8ST = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 202, 1))
lteSubType2X = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 202, 2))
lteSubType8X = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 21, 202, 3))
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stSNMPUserLoginAlarmTrapEnabled=lte8stSNMPUserLoginAlarmTrapEnabled, lte8stSwitchPort10StateError=lte8stSwitchPort10StateError, lte8stONTStatTransmitPON1024to1518Byte=lte8stONTStatTransmitPON1024to1518Byte, lte8stOLT1PON1StatReceiveLIFPreFecBadFrame=lte8stOLT1PON1StatReceiveLIFPreFecBadFrame, lte8stOLT2NNI0StatTransmit=lte8stOLT2NNI0StatTransmit, lte8stSwitchPort06IngressMirroring=lte8stSwitchPort06IngressMirroring, lte8stSwitchPort06Packets256to511Octets=lte8stSwitchPort06Packets256to511Octets, lte8stSwitchVLANDiffServ=lte8stSwitchVLANDiffServ, lte8stSwitchPort06BadPacketsReceived=lte8stSwitchPort06BadPacketsReceived, lte8stOLT2NNI0Speed=lte8stOLT2NNI0Speed, lte8stSwitchPort04GoodFlowControlFramesReceived=lte8stSwitchPort04GoodFlowControlFramesReceived, lte8stONTIDStatReceiveUNI165to127Byte=lte8stONTIDStatReceiveUNI165to127Byte, lte8stSystemNetMask=lte8stSystemNetMask, lte8stOLT0PON1Duplex=lte8stOLT0PON1Duplex, lte8stONTStatTransmitUNI164Byte=lte8stONTStatTransmitUNI164Byte, lte8stProfilesPortsPONForwardBroadcastARPFramesLink1=lte8stProfilesPortsPONForwardBroadcastARPFramesLink1, lte8stSwitchPort06LACPPriority=lte8stSwitchPort06LACPPriority, lte8stONTRulesUNI0Entry=lte8stONTRulesUNI0Entry, lte8stOLT3NNI1StatTransmitCRCGen=lte8stOLT3NNI1StatTransmitCRCGen, lte8stOLT1StateFwRev=lte8stOLT1StateFwRev, lte8stSwitchPort06StateDuplex=lte8stSwitchPort06StateDuplex, lte8stOLT2NNI0StatReceive65to127Byte=lte8stOLT2NNI0StatReceive65to127Byte, lte8stSNMPFanOkTrapEnabled=lte8stSNMPFanOkTrapEnabled, lte8stOLT0NNI1StatReceive=lte8stOLT0NNI1StatReceive, lte8stOLT1PON1StatTransmitLIFFecBlocks=lte8stOLT1PON1StatTransmitLIFFecBlocks, lte8stSwitchPort02State=lte8stSwitchPort02State, lte8stSwitchPort11IngressMirroring=lte8stSwitchPort11IngressMirroring, lte8stOLT1PON0StatReceiveMACBytes=lte8stOLT1PON0StatReceiveMACBytes, lte8stONTIDConfigPorts=lte8stONTIDConfigPorts, lte8stMacONTChannel=lte8stMacONTChannel, lte8stSwitchPort02BadFlowControlReceived=lte8stSwitchPort02BadFlowControlReceived, lte8stOLT1NNI0StatReceive64Byte=lte8stOLT1NNI0StatReceive64Byte, lte8stBoardTemperature2=lte8stBoardTemperature2, lte8stOLT2PON1StatReceive=lte8stOLT2PON1StatReceive, BoolValue=BoolValue, lte8stSwitchVLANIGMPSnoopingQueryInterval=lte8stSwitchVLANIGMPSnoopingQueryInterval, lte8st=lte8st, lte8stONTIDConfigUNI1VIDDefined=lte8stONTIDConfigUNI1VIDDefined, lte8stONTIDUNI1Duplex=lte8stONTIDUNI1Duplex, lte8stOLT3PON1StatReceiveMACCRC32=lte8stOLT3PON1StatReceiveMACCRC32, lte8stOLT1PON0StatReceiveMACOAMBytes=lte8stOLT1PON0StatReceiveMACOAMBytes, lte8stOLT1PON0StatReceiveMACReports=lte8stOLT1PON0StatReceiveMACReports, lte8stOLT0PON1Enabled=lte8stOLT0PON1Enabled, lte8stSwitchPort09VLAN=lte8stSwitchPort09VLAN, lte8stOLT3PON1StatReceiveMACRegisterReq=lte8stOLT3PON1StatReceiveMACRegisterReq, lte8stOLT1NNI0StatTransmit64Byte=lte8stOLT1NNI0StatTransmit64Byte, lte8stOLT3NNI1Linked=lte8stOLT3NNI1Linked, lte8stSwitchPort10Duplex=lte8stSwitchPort10Duplex, lte8stONTIDConfigID=lte8stONTIDConfigID, lte8stOLT2PON0StatTransmitMACFrames=lte8stOLT2PON0StatTransmitMACFrames, lte8stOLT1PON1StatReceiveMACFrames=lte8stOLT1PON1StatReceiveMACFrames, lte8stONTStatTransmitUNI0Entry=lte8stONTStatTransmitUNI0Entry, lte8stOLT0PON1FlowControl=lte8stOLT0PON1FlowControl, lte8stProfilesShaperLink0DownstreamWeightMin=lte8stProfilesShaperLink0DownstreamWeightMin, lte8stONTIGMPGroupsONTPort=lte8stONTIGMPGroupsONTPort, lte8stONTIDLink1Mac=lte8stONTIDLink1Mac, lte8stONTIDStatReceive=lte8stONTIDStatReceive, lte8stSwitchPort03DropEvents=lte8stSwitchPort03DropEvents, lte8stONTIDStatTransmitPONMulticast=lte8stONTIDStatTransmitPONMulticast, lte8stONTIDStatReceivePON65to127Byte=lte8stONTIDStatReceivePON65to127Byte, lte8stONTUNI0Enabled=lte8stONTUNI0Enabled, lte8stProfilesShaperLink1DownstreamSchedulerLevelMax=lte8stProfilesShaperLink1DownstreamSchedulerLevelMax, lte8stSwitchPort05FlowControlFramesSent=lte8stSwitchPort05FlowControlFramesSent, lte8stOLT3PON1StatTransmitMACMPCPDiscoveryWindows=lte8stOLT3PON1StatTransmitMACMPCPDiscoveryWindows, lte8stSwitchPort00LACPTimeOut=lte8stSwitchPort00LACPTimeOut, lte8stOLT2PON0StatReceiveMACRegisterAck=lte8stOLT2PON0StatReceiveMACRegisterAck, lte8stSwitchPort10FlowControl=lte8stSwitchPort10FlowControl, lte8stSwitchPort03GoodPacketsSent=lte8stSwitchPort03GoodPacketsSent, lte8stOLT2NNI1Speed=lte8stOLT2NNI1Speed, lte8stOLT3PON1StatTransmitMACGateFrames=lte8stOLT3PON1StatTransmitMACGateFrames, lte8stSwitchPort05StateSpeed=lte8stSwitchPort05StateSpeed, lte8stSwitchPort09BroadcastPacketsReceived=lte8stSwitchPort09BroadcastPacketsReceived, lte8stONTIDConfigIpMulticastProfile=lte8stONTIDConfigIpMulticastProfile, lte8stOLT2NNI1StatTransmitUnicast=lte8stOLT2NNI1StatTransmitUnicast, lte8stOLT0NNI0StatReceiveBytes=lte8stOLT0NNI0StatReceiveBytes, lte8stOLT1NNI1StatReceive128to255Byte=lte8stOLT1NNI1StatReceive128to255Byte, lte8stOLT1PON0StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT1PON0StatTransmitMACMPCPDiscoveryTimeouts, lte8stSNMPAuthFailureTrapEnabled=lte8stSNMPAuthFailureTrapEnabled, lte8stSwitchPort04IngressMirroring=lte8stSwitchPort04IngressMirroring, lte8stOLT2NNI0StatReceiveOversizeFrames=lte8stOLT2NNI0StatReceiveOversizeFrames, lte8stONTStatReceiveUNI0Unicast=lte8stONTStatReceiveUNI0Unicast, lte8stSwitchPortsCountersExcessiveCollisions=lte8stSwitchPortsCountersExcessiveCollisions, lte8stONTConfigBlocked=lte8stONTConfigBlocked, lte8stONTStatTransmitPON64Byte=lte8stONTStatTransmitPON64Byte, lte8stOLT0NNI1StatTransmit1024to1518Byte=lte8stOLT0NNI1StatTransmit1024to1518Byte, lte8stSwitchPort03LACPChannelGroup=lte8stSwitchPort03LACPChannelGroup, lte8stSwitchPort01ExcessiveCollisions=lte8stSwitchPort01ExcessiveCollisions, lte8stSwitchPort10Packets64Octets=lte8stSwitchPort10Packets64Octets, lte8stOLT1NNI1StatTransmit=lte8stOLT1NNI1StatTransmit, lte8stOLT1PON0StatTransmitMACMPCPFrames=lte8stOLT1PON0StatTransmitMACMPCPFrames, lte8stSwitchPort01Collisions=lte8stSwitchPort01Collisions, lte8stSwitchPort02Packets65to127Octets=lte8stSwitchPort02Packets65to127Octets, lte8stOLT0PON0StatReceiveLIFFecBlockOk=lte8stOLT0PON0StatReceiveLIFFecBlockOk, lte8stONTStatTransmit=lte8stONTStatTransmit, ONTPortForwardingMode=ONTPortForwardingMode, lte8stOLT1NNI0Linked=lte8stOLT1NNI0Linked, lte8stSwitchPort06Collisions=lte8stSwitchPort06Collisions, lte8stOLT2PON1StatReceiveMACReports=lte8stOLT2PON1StatReceiveMACReports, lte8stOLT0PON0StatReceiveLIFPostFecBadFrame=lte8stOLT0PON0StatReceiveLIFPostFecBadFrame, lte8stSwitchPort10BadFlowControlReceived=lte8stSwitchPort10BadFlowControlReceived, lte8stProfilesPortsPONForwardBroadcastARPFramesLink0=lte8stProfilesPortsPONForwardBroadcastARPFramesLink0, lte8stOLT1NNI0StatTransmitMulticast=lte8stOLT1NNI0StatTransmitMulticast, lte8stSwitchPort01Packets256to511Octets=lte8stSwitchPort01Packets256to511Octets, lte8stOLT2NNI0StatTransmitCRCGen=lte8stOLT2NNI0StatTransmitCRCGen, lte8stOLT1PON0StatReceiveMACOversize=lte8stOLT1PON0StatReceiveMACOversize, lte8stSwitchPortsCountersUndersizePacketsReceived=lte8stSwitchPortsCountersUndersizePacketsReceived, lte8stOLT3NNI0StatReceiveBroadcast=lte8stOLT3NNI0StatReceiveBroadcast, lte8stSwitchPort07Packets1024toMaxOctets=lte8stSwitchPort07Packets1024toMaxOctets, lte8stOLT3PON0StatReceiveMACDropUngranted=lte8stOLT3PON0StatReceiveMACDropUngranted, lte8stSwitchPort09GoodOctetsReceived=lte8stSwitchPort09GoodOctetsReceived, lte8stOLT0NNI0StatReceiveBroadcast=lte8stOLT0NNI0StatReceiveBroadcast, lte8stOLT2PON0StatTransmitMACReport=lte8stOLT2PON0StatTransmitMACReport, lte8stOLT1PON0StatTransmitMACBytes=lte8stOLT1PON0StatTransmitMACBytes, lte8stONTIDStatReceivePONBytes=lte8stONTIDStatReceivePONBytes, lte8stONTIDUNI1Desc=lte8stONTIDUNI1Desc, lte8stOLT3PON1StatReceiveLIFCRC8=lte8stOLT3PON1StatReceiveLIFCRC8, lte8stSwitchPort01State=lte8stSwitchPort01State, lte8stOLT0NNI0StatTransmitPauseFrames=lte8stOLT0NNI0StatTransmitPauseFrames, lte8stONTUNI1Mac=lte8stONTUNI1Mac, lte8stOLT0PON0SFPVendor=lte8stOLT0PON0SFPVendor, lte8stOLT3NNI0StatTransmit255to511Byte=lte8stOLT3NNI0StatTransmit255to511Byte, lte8stOLT2NNI0StatReceiveBroadcast=lte8stOLT2NNI0StatReceiveBroadcast, lte8stSwitchPort11DropEvents=lte8stSwitchPort11DropEvents, lte8stONTConfigEntry=lte8stONTConfigEntry, lte8stSwitchPort11Packets1024toMaxOctets=lte8stSwitchPort11Packets1024toMaxOctets, lte8stOLT2PON1=lte8stOLT2PON1, lte8stSNMPFirmwareUpdateTrapEnabled=lte8stSNMPFirmwareUpdateTrapEnabled, lte8stOLT3NNI0StatReceiveOversizeFrames=lte8stOLT3NNI0StatReceiveOversizeFrames, lte8stOLT1PON0StatTransmitMACOamFrames=lte8stOLT1PON0StatTransmitMACOamFrames, lte8stSwitchVLANPort06=lte8stSwitchVLANPort06, lte8stOLT2NNI1AutoNegotiate=lte8stOLT2NNI1AutoNegotiate, lte8stSwitchPort06GoodFlowControlFramesReceived=lte8stSwitchPort06GoodFlowControlFramesReceived, lte8stONTIDStatTransmitPONDelayedBytes=lte8stONTIDStatTransmitPONDelayedBytes, lte8stOLT3PON0StatReceiveMACRegisterAck=lte8stOLT3PON0StatReceiveMACRegisterAck, lte8stOLT3PON0StatReceiveLIFCRC8=lte8stOLT3PON0StatReceiveLIFCRC8, lte8stSwitchPort10OversizePacketsReceived=lte8stSwitchPort10OversizePacketsReceived, lte8stOLT0NNI1StatReceive256to511Byte=lte8stOLT0NNI1StatReceive256to511Byte, lte8stOLT1PON1SFPModel=lte8stOLT1PON1SFPModel, lte8stProfilesPortsUNI1Speed=lte8stProfilesPortsUNI1Speed, lte8stONTIDStatTransmitUNI0256to511Byte=lte8stONTIDStatTransmitUNI0256to511Byte, lte8stSwitchPort06ExcessiveCollisions=lte8stSwitchPort06ExcessiveCollisions, lte8stSystemManagementVID=lte8stSystemManagementVID, lte8stOLT1NNI1StatReceive64Byte=lte8stOLT1NNI1StatReceive64Byte, lte8stOLT1PON1StatReceiveLIFCRC8=lte8stOLT1PON1StatReceiveLIFCRC8, lte8stOLT2NNI0StatTransmit128to255Byte=lte8stOLT2NNI0StatTransmit128to255Byte, lte8stSwitchPort01AutoNegotiate=lte8stSwitchPort01AutoNegotiate, lte8stSwitchPort04Packets1024toMaxOctets=lte8stSwitchPort04Packets1024toMaxOctets, lte8stONTLink1ONTMac=lte8stONTLink1ONTMac, lte8stOLT1PON1StatTransmitMACUnicast=lte8stOLT1PON1StatTransmitMACUnicast, lte8stONTStatTransmitUNI0256to511Byte=lte8stONTStatTransmitUNI0256to511Byte, lte8stTreeStatesEntry=lte8stTreeStatesEntry, lte8stONTStatReceiveUNI1Broadcast=lte8stONTStatReceiveUNI1Broadcast, lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink0=lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink0, lte8stONTStatTransmitUNI01024to1518Byte=lte8stONTStatTransmitUNI01024to1518Byte, lte8stOLT1PON0StatReceiveLIFFecBlockOk=lte8stOLT1PON0StatReceiveLIFFecBlockOk, lte8stOLT1PON1Enabled=lte8stOLT1PON1Enabled, lte8stSwitchPort02LACPChannelGroup=lte8stSwitchPort02LACPChannelGroup, lte8stSNMPLoadAverageOkTrapEnabled=lte8stSNMPLoadAverageOkTrapEnabled, lte8stOLT1PON1StatReceiveMACUndersize=lte8stOLT1PON1StatReceiveMACUndersize, lte8stSwitchPort11StateLink=lte8stSwitchPort11StateLink, lte8stSwitchPort09LACPTimeOut=lte8stSwitchPort09LACPTimeOut, lte8stOLT1PON0StatReceiveMACUnicast=lte8stOLT1PON0StatReceiveMACUnicast, lte8stONTIDStateVendorFwRev=lte8stONTIDStateVendorFwRev, lte8stOLT0PON0StatReceiveLIFFrame=lte8stOLT0PON0StatReceiveLIFFrame, lte8stOLT3NNI1StatReceiveErroredBytes=lte8stOLT3NNI1StatReceiveErroredBytes, lte8stFan1Operational=lte8stFan1Operational, lte8stONTStatTransmitUNI1DroppedBytes=lte8stONTStatTransmitUNI1DroppedBytes, lte8stOLT2NNI1StatTransmit=lte8stOLT2NNI1StatTransmit, lte8stOLT2PON1StatReceiveLIFFrame=lte8stOLT2PON1StatReceiveLIFFrame, lte8stONTIDStatReceivePON1024to1518Byte=lte8stONTIDStatReceivePON1024to1518Byte, lte8stSwitchPort10FlowControlFramesSent=lte8stSwitchPort10FlowControlFramesSent, lte8stSwitchPort04ExcessiveCollisions=lte8stSwitchPort04ExcessiveCollisions, lte8stONTStatReceiveUNI0Frames=lte8stONTStatReceiveUNI0Frames, lte8stSNMPLoginOkTrapEnabled=lte8stSNMPLoginOkTrapEnabled, lte8stSwitchPort07StateLink=lte8stSwitchPort07StateLink, lte8stOLT0PON0Duplex=lte8stOLT0PON0Duplex, lte8stONTStatTransmitUNI1CollisionLate=lte8stONTStatTransmitUNI1CollisionLate, lte8stSwitchPort08Packets512to1023Octets=lte8stSwitchPort08Packets512to1023Octets, lte8stSwitchPort11ExcessiveCollisions=lte8stSwitchPort11ExcessiveCollisions, lte8stOLT1NNI1StatReceiveUnicast=lte8stOLT1NNI1StatReceiveUnicast, lte8stOLT1NNI1StatReceiveBytes=lte8stOLT1NNI1StatReceiveBytes, lte8stONTIDConfigDeleteRow=lte8stONTIDConfigDeleteRow, lte8stOLT1PON0FlowControl=lte8stOLT1PON0FlowControl, lte8stOLT1PON0FecUp=lte8stOLT1PON0FecUp, lte8stSwitchPort07Duplex=lte8stSwitchPort07Duplex, lte8stOLT2PON1StatTransmitMACBroadCast=lte8stOLT2PON1StatTransmitMACBroadCast, lte8stONTFactorySettingsMac=lte8stONTFactorySettingsMac, lte8stSwitchPort02Enabled=lte8stSwitchPort02Enabled, lte8stSwitchPort07BroadcastPacketsSent=lte8stSwitchPort07BroadcastPacketsSent, lte8stONTConfigStateChangesCount=lte8stONTConfigStateChangesCount, lte8stOLT1PON1ONTCount=lte8stOLT1PON1ONTCount, lte8stOLT2PON0StatReceiveMACFrames=lte8stOLT2PON0StatReceiveMACFrames, lte8stOLT2PON0StatReceiveLIFPreFecGoodFrame=lte8stOLT2PON0StatReceiveLIFPreFecGoodFrame, lte8stONTStatReceivePON64Byte=lte8stONTStatReceivePON64Byte, lte8stONTIDStatTransmitUNI11024to1518Byte=lte8stONTIDStatTransmitUNI11024to1518Byte, lte8stOLT2NNI1StatReceiveCRCErrors=lte8stOLT2NNI1StatReceiveCRCErrors, lte8stOLT3NNI1StatTransmitMulticast=lte8stOLT3NNI1StatTransmitMulticast, lte8stSwitchPort02Packets1024toMaxOctets=lte8stSwitchPort02Packets1024toMaxOctets, lte8stONTStatReceiveUNI1Entry=lte8stONTStatReceiveUNI1Entry, lte8stONTIDStatReceiveUNI1Multicast=lte8stONTIDStatReceiveUNI1Multicast, lte8stSwitchPort04MacTransmitErrors=lte8stSwitchPort04MacTransmitErrors, lte8stOLT2NNI1StatReceivePauseFrames=lte8stOLT2NNI1StatReceivePauseFrames, lte8stOLT2PON0StatTransmitLIFLaserBias=lte8stOLT2PON0StatTransmitLIFLaserBias, lte8stSwitchPort06BadCRC=lte8stSwitchPort06BadCRC, lte8stSwitchPort09BadFlowControlReceived=lte8stSwitchPort09BadFlowControlReceived, lte8stSwitchPort10VLANPVID=lte8stSwitchPort10VLANPVID, lte8stSwitchPort11BadOctetsReceived=lte8stSwitchPort11BadOctetsReceived, lte8stONTConfigUpdateFirmware=lte8stONTConfigUpdateFirmware, lte8stSwitchPort10VLAN=lte8stSwitchPort10VLAN, lte8stProfilesPortsPONEnabled=lte8stProfilesPortsPONEnabled, lte8stOLT3PON1StatTransmitLIFLaserBias=lte8stOLT3PON1StatTransmitLIFLaserBias, lte8stOLT0PON1StatReceiveMACOAMBytes=lte8stOLT0PON1StatReceiveMACOAMBytes, lte8stOLT3NNI1Duplex=lte8stOLT3NNI1Duplex, lte8stONTIDStatReceiveUNI0Bytes=lte8stONTIDStatReceiveUNI0Bytes, lte8stOLT0NNI0StatReceiveFrames=lte8stOLT0NNI0StatReceiveFrames, lte8stSwitchVLANPort11=lte8stSwitchVLANPort11, lte8stOLT1NNI0Speed=lte8stOLT1NNI0Speed, lte8stONTIDStatTransmitPON256to511Byte=lte8stONTIDStatTransmitPON256to511Byte, lte8stOLT1PON0StatReceiveMACBroadcast=lte8stOLT1PON0StatReceiveMACBroadcast, lte8stSwitchPortMirroring=lte8stSwitchPortMirroring, lte8stOLT2PON1StatReceiveLIFFecBlockOk=lte8stOLT2PON1StatReceiveLIFFecBlockOk, lte8stSwitchPort09UnrecogMacControlReceived=lte8stSwitchPort09UnrecogMacControlReceived, lte8stSwitchPort03LateCollisions=lte8stSwitchPort03LateCollisions, lte8stSwitchDHCP=lte8stSwitchDHCP, lte8stSwitchPort02AutoNegotiate=lte8stSwitchPort02AutoNegotiate, lte8stSwitchPort08StateFlowControl=lte8stSwitchPort08StateFlowControl, lte8stSwitchDHCPSecondaryServer=lte8stSwitchDHCPSecondaryServer, lte8stONTIDPONEnabled=lte8stONTIDPONEnabled, lte8stOLT3PON0StatReceiveLIFErrorPkt=lte8stOLT3PON0StatReceiveLIFErrorPkt, lte8stSwitchPortsCountersFragmentsReceived=lte8stSwitchPortsCountersFragmentsReceived, lte8stOLT2NNI0StatReceiveLineCodeErrors=lte8stOLT2NNI0StatReceiveLineCodeErrors, lte8stOLT2NNI1StatTransmit65to127Byte=lte8stOLT2NNI1StatTransmit65to127Byte, lte8stOLT3PON0StatReceiveMACOAMBytes=lte8stOLT3PON0StatReceiveMACOAMBytes, lte8stOLT1PON1StatReceiveMACMPCPFrames=lte8stOLT1PON1StatReceiveMACMPCPFrames, lte8stONTIDPONDesc=lte8stONTIDPONDesc, lte8stONTConfigPortsProfile=lte8stONTConfigPortsProfile, lte8stONTStatReceiveUNI1512to1023Byte=lte8stONTStatReceiveUNI1512to1023Byte, lte8stONTIDStateLaserPower=lte8stONTIDStateLaserPower, lte8stSwitchPort09BadPacketsReceived=lte8stSwitchPort09BadPacketsReceived, lte8stONTConfigDescription=lte8stONTConfigDescription, lte8stOLT2PON0StatReceiveLIFCodeErr=lte8stOLT2PON0StatReceiveLIFCodeErr, lte8stSwitchPort00LateCollisions=lte8stSwitchPort00LateCollisions, lte8stSwitchPort06State=lte8stSwitchPort06State, lte8stOLT1PON0StatReceiveLIFCRC8=lte8stOLT1PON0StatReceiveLIFCRC8, lte8stSwitchPort10=lte8stSwitchPort10, lte8stONTIDStatTransmitUNI1512to1023Byte=lte8stONTIDStatTransmitUNI1512to1023Byte, lte8stSwitchPort01LACPChannelGroup=lte8stSwitchPort01LACPChannelGroup, lte8stSwitchPort11Packets512to1023Octets=lte8stSwitchPort11Packets512to1023Octets, lte8stONTRulesUNI1Rule=lte8stONTRulesUNI1Rule, lte8stSwitchPort07UndersizePacketsReceived=lte8stSwitchPort07UndersizePacketsReceived, lte8stSwitchPort11LACPPriority=lte8stSwitchPort11LACPPriority, lte8stSwitchPort07LACPPriority=lte8stSwitchPort07LACPPriority, lte8stOLT3NNI1StatReceive512to1023Byte=lte8stOLT3NNI1StatReceive512to1023Byte, lte8stOLT2NNI0StatReceive64Byte=lte8stOLT2NNI0StatReceive64Byte)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stOLT3PON0StatReceiveMACLLIDError=lte8stOLT3PON0StatReceiveMACLLIDError, lte8stOLT3PON1StatTransmitMACReport=lte8stOLT3PON1StatTransmitMACReport, lte8stONTStatReceiveUNI0Multicast=lte8stONTStatReceiveUNI0Multicast, lte8stONTStatReceivePONUnicast=lte8stONTStatReceivePONUnicast, lte8stOLT3PON1StatReceiveLIFPreFecBadFrame=lte8stOLT3PON1StatReceiveLIFPreFecBadFrame, lte8stSwitchVLANIGMPSnoopingFastLeave=lte8stSwitchVLANIGMPSnoopingFastLeave, lte8stProfilesShaperDescription=lte8stProfilesShaperDescription, lte8stOLT3NNI0FlowControl=lte8stOLT3NNI0FlowControl, lte8stOLT3NNI1StatTransmit255to511Byte=lte8stOLT3NNI1StatTransmit255to511Byte, lte8stONTStatReceivePONMulticast=lte8stONTStatReceivePONMulticast, lte8stONTIDStatTransmitUNI1Entry=lte8stONTIDStatTransmitUNI1Entry, lte8stSwitchPort04StateSpeed=lte8stSwitchPort04StateSpeed, lte8stONTIDStatReceiveUNI0UndersizeFrames=lte8stONTIDStatReceiveUNI0UndersizeFrames, lte8stSwitchPort05Packets256to511Octets=lte8stSwitchPort05Packets256to511Octets, lte8stSwitchPort04BadOctetsReceived=lte8stSwitchPort04BadOctetsReceived, lte8stOLT0NNI0StatReceiveAlignmentError=lte8stOLT0NNI0StatReceiveAlignmentError, lte8stOLT2NNI1StatReceiveUnicast=lte8stOLT2NNI1StatReceiveUnicast, lte8stSwitchPort04StateFlowControl=lte8stSwitchPort04StateFlowControl, lte8stONTIDStatReceiveUNI164Byte=lte8stONTIDStatReceiveUNI164Byte, lte8stONTStatReceiveUNI0512to1023Byte=lte8stONTStatReceiveUNI0512to1023Byte, lte8stSwitchPort08StateDuplex=lte8stSwitchPort08StateDuplex, lte8stOLT2PON1Speed=lte8stOLT2PON1Speed, lte8stONTConfigUNI0Blocked=lte8stONTConfigUNI0Blocked, lte8stOLT0PON1StatTransmitLIFLaserBias=lte8stOLT0PON1StatTransmitLIFLaserBias, lte8stONTIDStatReceiveUNI0256to511Byte=lte8stONTIDStatReceiveUNI0256to511Byte, lte8stSwitchPort03Packets1024toMaxOctets=lte8stSwitchPort03Packets1024toMaxOctets, lte8stOLT0PON0StatTransmitLIFLaserVCC=lte8stOLT0PON0StatTransmitLIFLaserVCC, lte8stONTStatTransmitPONLaserTemp=lte8stONTStatTransmitPONLaserTemp, lte8stSwitchPort02GoodFlowControlFramesReceived=lte8stSwitchPort02GoodFlowControlFramesReceived, lte8stOLT2PON1StatTransmit=lte8stOLT2PON1StatTransmit, lte8stONTIDStatReceiveUNI1AlignmentError=lte8stONTIDStatReceiveUNI1AlignmentError, lte8stOLT2PON1StatReceiveMACMPCPFrames=lte8stOLT2PON1StatReceiveMACMPCPFrames, lte8stSwitchPort01StateLink=lte8stSwitchPort01StateLink, lte8stOLT1PON1Stat=lte8stOLT1PON1Stat, lte8stOLT3NNI0StatTransmit128to255Byte=lte8stOLT3NNI0StatTransmit128to255Byte, lte8stSwitchLACPSpeed=lte8stSwitchLACPSpeed, lte8stSwitchPort09StateDuplex=lte8stSwitchPort09StateDuplex, lte8stOLT0PON1ONTCount=lte8stOLT0PON1ONTCount, lte8stSwitchPort05ExcessiveCollisions=lte8stSwitchPort05ExcessiveCollisions, lte8stSwitchPort01VLAN=lte8stSwitchPort01VLAN, lte8stSwitchPort04EgressMirroring=lte8stSwitchPort04EgressMirroring, lte8stONTStatReceiveUNI1Table=lte8stONTStatReceiveUNI1Table, lte8stOLT2NNI0Duplex=lte8stOLT2NNI0Duplex, lte8stOLT0StateFwRev=lte8stOLT0StateFwRev, lte8stONTStateFwRev=lte8stONTStateFwRev, lte8stOLT0NNI1Desc=lte8stOLT0NNI1Desc, lte8stOLT0NNI0StatTransmit65to127Byte=lte8stOLT0NNI0StatTransmit65to127Byte, lte8stOLT0NNI0StatTransmitBytes=lte8stOLT0NNI0StatTransmitBytes, lte8stOLT1PON0StatReceiveLIFFecCorrectableBytes=lte8stOLT1PON0StatReceiveLIFFecCorrectableBytes, lte8stONTIDConfigLinks=lte8stONTIDConfigLinks, lte8stOLT2NNI1StatReceiveGreater1518Byte=lte8stOLT2NNI1StatReceiveGreater1518Byte, lte8stSwitchPort02Collisions=lte8stSwitchPort02Collisions, lte8stOLT0PON1Speed=lte8stOLT0PON1Speed, lte8stONTIDStatTransmitPON65to127Byte=lte8stONTIDStatTransmitPON65to127Byte, lte8stONTIDLink0Entry=lte8stONTIDLink0Entry, lte8stProfilesShaperEntry=lte8stProfilesShaperEntry, lte8stOLT1NNI0StatReceiveErroredBytes=lte8stOLT1NNI0StatReceiveErroredBytes, lte8stOLT1NNI1StatReceive=lte8stOLT1NNI1StatReceive, lte8stONTIDStatTransmit=lte8stONTIDStatTransmit, lte8stOLT1PON1StatReceiveLIFPreFecGoodFrame=lte8stOLT1PON1StatReceiveLIFPreFecGoodFrame, lte8stONTUNI1Duplex=lte8stONTUNI1Duplex, lte8stSwitchPort11State=lte8stSwitchPort11State, lte8stONTPONEntry=lte8stONTPONEntry, lte8stSwitchLACPFrameTypes=lte8stSwitchLACPFrameTypes, lte8stSwitchPort10BadPacketsReceived=lte8stSwitchPort10BadPacketsReceived, lte8stOLT0PON1StatTransmitMACMultiCast=lte8stOLT0PON1StatTransmitMACMultiCast, lte8stONTStatReceiveUNI1CRC32Error=lte8stONTStatReceiveUNI1CRC32Error, lte8stOLT1PON0StatTransmitMACOamBytes=lte8stOLT1PON0StatTransmitMACOamBytes, lte8stSwitchPort04JabberPacketsReceived=lte8stSwitchPort04JabberPacketsReceived, lte8stONTRulesUNI1MAC=lte8stONTRulesUNI1MAC, lte8stOLT1PON1FecUp=lte8stOLT1PON1FecUp, lte8stSwitchPort07MACReceiveErrors=lte8stSwitchPort07MACReceiveErrors, lte8stOLT2PON0StatReceiveMACRegisterReq=lte8stOLT2PON0StatReceiveMACRegisterReq, lte8stOLT3PON1StatReceiveMACReportAbort=lte8stOLT3PON1StatReceiveMACReportAbort, lte8stOLT3NNI1StatTransmit512to1023Byte=lte8stOLT3NNI1StatTransmit512to1023Byte, lte8stSwitchPort06StateError=lte8stSwitchPort06StateError, lte8stSwitchPort10EgressMirroring=lte8stSwitchPort10EgressMirroring, lte8stONTStatReceiveUNI0Greater1518Byte=lte8stONTStatReceiveUNI0Greater1518Byte, lte8stOLT2NNI1StatReceiveErroredBytes=lte8stOLT2NNI1StatReceiveErroredBytes, lte8stOLT3NNI0StatTransmitGreater1518Bytes=lte8stOLT3NNI0StatTransmitGreater1518Bytes, lte8stOLT0PON0StatReceiveMACRegisterAck=lte8stOLT0PON0StatReceiveMACRegisterAck, lte8stSwitchPort01UnrecogMacControlReceived=lte8stSwitchPort01UnrecogMacControlReceived, lte8stOLT1NNI0StatReceiveUndersizeFrames=lte8stOLT1NNI0StatReceiveUndersizeFrames, lte8stOLT0PON1StatTransmitMACMPCPFrames=lte8stOLT0PON1StatTransmitMACMPCPFrames, lte8stONTStatTransmitPONFrames=lte8stONTStatTransmitPONFrames, lte8stSwitchPort01Packets128to255Octets=lte8stSwitchPort01Packets128to255Octets, lte8stONTLink3ONTMac=lte8stONTLink3ONTMac, lte8stONTIDStatReceivePONLaserPower=lte8stONTIDStatReceivePONLaserPower, lte8stOLT2PON1AutoNegotiate=lte8stOLT2PON1AutoNegotiate, lte8stOLT3PON0SFPVendor=lte8stOLT3PON0SFPVendor, lte8stBoardTemperature=lte8stBoardTemperature, lte8stOLT1PON1StatTransmitLIFFrames=lte8stOLT1PON1StatTransmitLIFFrames, lte8stONTStatTransmitPONMulticast=lte8stONTStatTransmitPONMulticast, lte8stOLT2PON0StatTransmitMACGateFrames=lte8stOLT2PON0StatTransmitMACGateFrames, lte8stSwitchPort07MulticastPacketsSent=lte8stSwitchPort07MulticastPacketsSent, lte8stOLT3NNI0StatReceive65to127Byte=lte8stOLT3NNI0StatReceive65to127Byte, lte8stONTStatTransmitUNI0Broadcast=lte8stONTStatTransmitUNI0Broadcast, lte8stSwitchPort02=lte8stSwitchPort02, lte8stOLT3PON1FecUp=lte8stOLT3PON1FecUp, lte8stONTPONSpeed=lte8stONTPONSpeed, lte8stONTStatTransmitUNI0DroppedBytes=lte8stONTStatTransmitUNI0DroppedBytes, lte8stProfilesPortsUNI0ForwardingMode=lte8stProfilesPortsUNI0ForwardingMode, lte8stSystemIpAddress=lte8stSystemIpAddress, lte8stOLT0PON0StatReceiveMACMulticast=lte8stOLT0PON0StatReceiveMACMulticast, lte8stOLT3NNI0StatTransmit65to127Byte=lte8stOLT3NNI0StatTransmit65to127Byte, lte8stONTConfigUNI1Blocked=lte8stONTConfigUNI1Blocked, lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink1=lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink1, lte8stSwitchPort08StateLink=lte8stSwitchPort08StateLink, lte8stOLT0NNI1StatTransmitGreater1518Bytes=lte8stOLT0NNI1StatTransmitGreater1518Bytes, lte8stSwitchPort09Counters=lte8stSwitchPort09Counters, lte8stSwitchPort02GoodOctetsSent=lte8stSwitchPort02GoodOctetsSent, lte8stProfilesRulesEntryID=lte8stProfilesRulesEntryID, lte8stONTStatTransmitUNI1Greater1518Byte=lte8stONTStatTransmitUNI1Greater1518Byte, lte8stSwitchPort09Enabled=lte8stSwitchPort09Enabled, lte8stSwitchPort02MACReceiveErrors=lte8stSwitchPort02MACReceiveErrors, lte8stSwitchPort03MulticastPacketsSent=lte8stSwitchPort03MulticastPacketsSent, lte8stSwitchPort06StateFlowControl=lte8stSwitchPort06StateFlowControl, lte8stOLT1NNI0StatReceive65to127Byte=lte8stOLT1NNI0StatReceive65to127Byte, lte8stOLT3NNI0StatReceive128to255Byte=lte8stOLT3NNI0StatReceive128to255Byte, lte8stSwitchPort03Packets64Octets=lte8stSwitchPort03Packets64Octets, lte8stProfilesShaperLink0DownstreamSchedulerLevelMax=lte8stProfilesShaperLink0DownstreamSchedulerLevelMax, lte8stProfilesShaperLink0DownstreamBurstMin=lte8stProfilesShaperLink0DownstreamBurstMin, lte8stOLT0PON1StatReceiveLIFErrorPkt=lte8stOLT0PON1StatReceiveLIFErrorPkt, lte8stOLT1PON1StatTransmitMACMPCPBytes=lte8stOLT1PON1StatTransmitMACMPCPBytes, lte8stSwitchPort04Packets65to127Octets=lte8stSwitchPort04Packets65to127Octets, lte8stSwitchPort03GoodPacketsReceived=lte8stSwitchPort03GoodPacketsReceived, lte8stOLT2PON1Desc=lte8stOLT2PON1Desc, lte8stOLT1NNI1Speed=lte8stOLT1NNI1Speed, lte8stSwitchPort03UnrecogMacControlReceived=lte8stSwitchPort03UnrecogMacControlReceived, lte8stSwitchPort01GoodOctetsReceived=lte8stSwitchPort01GoodOctetsReceived, lte8stOLT1PON1StatReceiveMACMulticast=lte8stOLT1PON1StatReceiveMACMulticast, lte8stOLT0Group=lte8stOLT0Group, lte8stOLT3NNI1AutoNegotiate=lte8stOLT3NNI1AutoNegotiate, lte8stSwitchPortsCountersBroadcastPacketsSent=lte8stSwitchPortsCountersBroadcastPacketsSent, lte8stSwitchPort04FlowControlFramesSent=lte8stSwitchPort04FlowControlFramesSent, lte8stONTStatReceiveUNI0Broadcast=lte8stONTStatReceiveUNI0Broadcast, lte8stOLT0PON1StatTransmitLIFLaserPower=lte8stOLT0PON1StatTransmitLIFLaserPower, lte8stOLT1NNI1StatReceiveCRCErrors=lte8stOLT1NNI1StatReceiveCRCErrors, lte8stSwitchPort01StateDuplex=lte8stSwitchPort01StateDuplex, lte8stSwitchPort07LACPChannelGroup=lte8stSwitchPort07LACPChannelGroup, lte8stProfilesPortsUNI1ForwardingMode=lte8stProfilesPortsUNI1ForwardingMode, lte8stProfilesRulesEntry=lte8stProfilesRulesEntry, lte8stSwitchPort05BadCRC=lte8stSwitchPort05BadCRC, lte8stONTIDConfigReconfigure=lte8stONTIDConfigReconfigure, lte8stOLT3NNI1StatReceive65to127Byte=lte8stOLT3NNI1StatReceive65to127Byte, lte8stOLT3NNI0StatTransmitUnicast=lte8stOLT3NNI0StatTransmitUnicast, lte8stOLT2PON0StatTransmitMACRegisterAck=lte8stOLT2PON0StatTransmitMACRegisterAck, lte8stOLT0PON0StatReceiveLIFLaserIdlePower=lte8stOLT0PON0StatReceiveLIFLaserIdlePower, lte8stOLT2PON1StatReceiveMACBytes=lte8stOLT2PON1StatReceiveMACBytes, lte8stSwitchPort00UnrecogMacControlReceived=lte8stSwitchPort00UnrecogMacControlReceived, lte8stSwitchPort05Packets512to1023Octets=lte8stSwitchPort05Packets512to1023Octets, lte8stSwitchPort05IngressMirroring=lte8stSwitchPort05IngressMirroring, lte8stSwitchPort00GoodOctetsSent=lte8stSwitchPort00GoodOctetsSent, lte8stSwitchPort09Collisions=lte8stSwitchPort09Collisions, lte8stOLT2PON1StatReceiveMACOAMBytes=lte8stOLT2PON1StatReceiveMACOAMBytes, lte8stONTIGMPGroupsEntry=lte8stONTIGMPGroupsEntry, lte8stONTStatReceiveUNI064Byte=lte8stONTStatReceiveUNI064Byte, lte8stOLT2PON0StatReceiveMACReportAbort=lte8stOLT2PON0StatReceiveMACReportAbort, lte8stSwitchPort05StateDuplex=lte8stSwitchPort05StateDuplex, lte8stSwitchPort09Packets1024toMaxOctets=lte8stSwitchPort09Packets1024toMaxOctets, lte8stSwitchVLANPort07=lte8stSwitchVLANPort07, lte8stSNMPONTConfOkTrapEnabled=lte8stSNMPONTConfOkTrapEnabled, lte8stONTIDLink1Entry=lte8stONTIDLink1Entry, lte8stOLT0PON0StatTransmitLIFFrames=lte8stOLT0PON0StatTransmitLIFFrames, lte8stOLT2PON0StatReceiveMACMulticast=lte8stOLT2PON0StatReceiveMACMulticast, lte8stOLT0NNI1StatReceiveErroredBytes=lte8stOLT0NNI1StatReceiveErroredBytes, lte8stOLT2NNI0StatReceiveUnicast=lte8stOLT2NNI0StatReceiveUnicast, lte8stONTIDStatReceiveUNI1Greater1518Byte=lte8stONTIDStatReceiveUNI1Greater1518Byte, lte8stSwitchPort07VLANIngressFiltering=lte8stSwitchPort07VLANIngressFiltering, lte8stONTStatTransmitPONDelayMax=lte8stONTStatTransmitPONDelayMax, lte8stOLT3NNI1StatTransmitGreater1518Bytes=lte8stOLT3NNI1StatTransmitGreater1518Bytes, lte8stOLT1PON1StatTransmitLIFBytes=lte8stOLT1PON1StatTransmitLIFBytes, lte8stSwitchPort07VLANPVID=lte8stSwitchPort07VLANPVID, lte8stOLT1PON0StatReceiveLIFPreFecGoodFrame=lte8stOLT1PON0StatReceiveLIFPreFecGoodFrame, lte8stOLT3NNI0Speed=lte8stOLT3NNI0Speed, lte8stSwitchPort07GoodOctetsReceived=lte8stSwitchPort07GoodOctetsReceived, lte8stOLT3PON0StatTransmitLIFBytes=lte8stOLT3PON0StatTransmitLIFBytes, lte8stONTStateType=lte8stONTStateType, lte8stOLT0PON1StatReceiveLIFPostFecBadFrame=lte8stOLT0PON1StatReceiveLIFPostFecBadFrame, lte8stOLT2PON0StatReceiveMACMPCPFrames=lte8stOLT2PON0StatReceiveMACMPCPFrames, lte8stSwitchPort01Counters=lte8stSwitchPort01Counters, lte8stProfilesRulesTable=lte8stProfilesRulesTable, lte8stOLT3PON1StatTransmitLIFLaserTemp=lte8stOLT3PON1StatTransmitLIFLaserTemp, lte8stOLT0PON0StatTransmitMACMPCPDiscoveryWindows=lte8stOLT0PON0StatTransmitMACMPCPDiscoveryWindows, lte8stOLT3PON0StatReceiveLIFFecBlockCorrectable=lte8stOLT3PON0StatReceiveLIFFecBlockCorrectable, lte8stOLT0PON0StatTransmitMACMPCPBytes=lte8stOLT0PON0StatTransmitMACMPCPBytes, lte8stOLT0NNI1StatReceiveBroadcast=lte8stOLT0NNI1StatReceiveBroadcast, lte8stOLT0PON0StatReceiveMACDropUngranted=lte8stOLT0PON0StatReceiveMACDropUngranted, lte8stSwitchPort11MacTransmitErrors=lte8stSwitchPort11MacTransmitErrors, lte8stOLT0PON0StatReceive=lte8stOLT0PON0StatReceive, lte8stOLT2PON1ONTCount=lte8stOLT2PON1ONTCount, lte8stOLT3PON0StatReceiveLIFByte=lte8stOLT3PON0StatReceiveLIFByte, lte8stOLT2NNI0StatReceiveUndersizeFrames=lte8stOLT2NNI0StatReceiveUndersizeFrames, lte8stSwitchPort04Packets64Octets=lte8stSwitchPort04Packets64Octets, lte8stSwitchPort06UndersizePacketsReceived=lte8stSwitchPort06UndersizePacketsReceived, lte8stOLT2PON1Duplex=lte8stOLT2PON1Duplex, lte8stSwitchPort03GoodFlowControlFramesReceived=lte8stSwitchPort03GoodFlowControlFramesReceived, lte8stMacIndexMac=lte8stMacIndexMac, lte8stOLT2NNI1StatTransmit128to255Byte=lte8stOLT2NNI1StatTransmit128to255Byte, lte8stONTUNI1Enabled=lte8stONTUNI1Enabled, lte8stConfigMigratePon=lte8stConfigMigratePon, lte8stOLT0NNI0StatReceive512to1023Byte=lte8stOLT0NNI0StatReceive512to1023Byte, lte8stONTUNI1Linked=lte8stONTUNI1Linked, lte8stONTConfigTable=lte8stONTConfigTable, lte8stOLT0PON0StatTransmitLIFLaserTemp=lte8stOLT0PON0StatTransmitLIFLaserTemp, lte8stOLT2PON0StatReceiveMACLLIDError=lte8stOLT2PON0StatReceiveMACLLIDError, lte8stONTIDStatTransmitUNI1Multicast=lte8stONTIDStatTransmitUNI1Multicast, lte8stSwitchPort04LACPActivity=lte8stSwitchPort04LACPActivity, lte8stSwitchLACPDuplex=lte8stSwitchLACPDuplex, lte8stOLT3PON1StatTransmit=lte8stOLT3PON1StatTransmit, lte8stSwitchPort01BadCRC=lte8stSwitchPort01BadCRC, lte8stONTUNI0Mac=lte8stONTUNI0Mac, lte8stOLT3PON1StatTransmitMACFrames=lte8stOLT3PON1StatTransmitMACFrames, lte8stOLT1NNI0StatTransmitFrames=lte8stOLT1NNI0StatTransmitFrames, lte8stONTStateReconfigure=lte8stONTStateReconfigure, lte8stONTConfigUNI0VIDDefined=lte8stONTConfigUNI0VIDDefined, lte8stOLT2NNI1Enabled=lte8stOLT2NNI1Enabled, lte8stSwitchPort00FlowControlFramesSent=lte8stSwitchPort00FlowControlFramesSent, lte8stSystemDiskFreeSpace=lte8stSystemDiskFreeSpace, lte8stONTRulesPONID=lte8stONTRulesPONID, lte8stONTIDStatReceivePONUndersizeFrames=lte8stONTIDStatReceivePONUndersizeFrames, lte8stONTStatReceiveUNI0Entry=lte8stONTStatReceiveUNI0Entry, lte8stOLT0NNI0StatTransmitBufferUnderrun=lte8stOLT0NNI0StatTransmitBufferUnderrun, lte8stSwitchPort09MACReceiveErrors=lte8stSwitchPort09MACReceiveErrors, lte8stOLT1PON1StatReceiveMACLLIDError=lte8stOLT1PON1StatReceiveMACLLIDError, lte8stOLT1PON0StatReceiveMACRegisterAck=lte8stOLT1PON0StatReceiveMACRegisterAck, lte8stOLT1PON1Speed=lte8stOLT1PON1Speed, lte8stOLT3NNI1Desc=lte8stOLT3NNI1Desc, lte8stONTUNI0Desc=lte8stONTUNI0Desc, lte8stONTPONDuplex=lte8stONTPONDuplex, lte8stSwitchPort04State=lte8stSwitchPort04State, lte8stOLT1PON1StatReceive=lte8stOLT1PON1StatReceive, lte8stSwitchPort03ExcessiveCollisions=lte8stSwitchPort03ExcessiveCollisions, lte8stOLT1NNI0StatTransmit128to255Byte=lte8stOLT1NNI0StatTransmit128to255Byte, lte8stONTIDStatReceivePON512to1023Byte=lte8stONTIDStatReceivePON512to1023Byte, lte8stOLT0NNI1StatReceive512to1023Byte=lte8stOLT0NNI1StatReceive512to1023Byte, lte8stOLT0PON1StatReceiveMACBytes=lte8stOLT0PON1StatReceiveMACBytes, lte8stSwitchPort04LACPTimeOut=lte8stSwitchPort04LACPTimeOut, lte8stSwitchPort07StateError=lte8stSwitchPort07StateError, lte8stOLT1PON0StatReceiveLIFFecBlockCorrectable=lte8stOLT1PON0StatReceiveLIFFecBlockCorrectable, lte8stSwitchPort11LACP=lte8stSwitchPort11LACP, lte8stONTIDConfigPortsProfile=lte8stONTIDConfigPortsProfile, lte8stOLT1PON0StatReceiveMACCRC32=lte8stOLT1PON0StatReceiveMACCRC32, lte8stOLT1PON0StatReceiveMACOAMFrames=lte8stOLT1PON0StatReceiveMACOAMFrames, lte8stOLT2PON1Stat=lte8stOLT2PON1Stat, lte8stOLT2PON0Enabled=lte8stOLT2PON0Enabled, lte8stOLT1PON0StatTransmitMACRegisterReq=lte8stOLT1PON0StatTransmitMACRegisterReq, lte8stOLT3NNI0StatTransmitBytes=lte8stOLT3NNI0StatTransmitBytes, lte8stOLT0PON0FlowControl=lte8stOLT0PON0FlowControl, lte8stONTIDStateState=lte8stONTIDStateState, lte8stSwitchPort04BadCRC=lte8stSwitchPort04BadCRC, lte8stSwitchPortsCountersMulticastPacketsSent=lte8stSwitchPortsCountersMulticastPacketsSent, lte8stOLT0NNI1Linked=lte8stOLT0NNI1Linked, lte8stOLT0PON1StatTransmitLIFFecBlocks=lte8stOLT0PON1StatTransmitLIFFecBlocks)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stOLT2NNI0Enabled=lte8stOLT2NNI0Enabled, lte8stONTStatGroup=lte8stONTStatGroup, lte8stOLT1StateMac=lte8stOLT1StateMac, lte8stOLT1NNI1StatTransmitBroadCast=lte8stOLT1NNI1StatTransmitBroadCast, lte8stOLT0PON1StatReceive=lte8stOLT0PON1StatReceive, lte8stOLT3NNI0StatReceiveCRCErrors=lte8stOLT3NNI0StatReceiveCRCErrors, lte8stSwitchPort02Packets256to511Octets=lte8stSwitchPort02Packets256to511Octets, lte8stOLT0NNI0Duplex=lte8stOLT0NNI0Duplex, lte8stOLT0NNI1StatReceiveLineCodeErrors=lte8stOLT0NNI1StatReceiveLineCodeErrors, lte8stOLT1NNI1StatTransmit64Byte=lte8stOLT1NNI1StatTransmit64Byte, lte8stOLT0PON0StatReceiveMACRegisterReq=lte8stOLT0PON0StatReceiveMACRegisterReq, lte8stOLT1PON0StatTransmitLIFLaserBias=lte8stOLT1PON0StatTransmitLIFLaserBias, lte8stONTIDStateID=lte8stONTIDStateID, lte8stOLT1NNI0StatReceive256to511Byte=lte8stOLT1NNI0StatReceive256to511Byte, lte8stOLT3PON1StatReceiveMACOAMBytes=lte8stOLT3PON1StatReceiveMACOAMBytes, lte8stONTStatTransmitUNI0CollisionSingle=lte8stONTStatTransmitUNI0CollisionSingle, lte8stONTRulesUNI0Rule=lte8stONTRulesUNI0Rule, lte8stSwitchPort03StateError=lte8stSwitchPort03StateError, lte8stONTIDStatReceivePONEntry=lte8stONTIDStatReceivePONEntry, lte8stSwitchPort10MACReceiveErrors=lte8stSwitchPort10MACReceiveErrors, lte8stONTIDStatReceivePONLineCodeErrors=lte8stONTIDStatReceivePONLineCodeErrors, lte8stSwitchPort00VLANFrameTypes=lte8stSwitchPort00VLANFrameTypes, lte8stOLT0NNI0StatReceiveUndersizeFrames=lte8stOLT0NNI0StatReceiveUndersizeFrames, lte8stOLT3NNI1StatTransmitBytes=lte8stOLT3NNI1StatTransmitBytes, lte8stSwitchPort07FlowControlFramesSent=lte8stSwitchPort07FlowControlFramesSent, lte8stSwitchPort07OversizePacketsReceived=lte8stSwitchPort07OversizePacketsReceived, lte8stSwitchPort05LateCollisions=lte8stSwitchPort05LateCollisions, lte8stOLT0PON0ONTCount=lte8stOLT0PON0ONTCount, lte8stONTIDStatTransmitUNI0512to1023Byte=lte8stONTIDStatTransmitUNI0512to1023Byte, lte8stOLT3NNI1StatTransmitErroredBytes=lte8stOLT3NNI1StatTransmitErroredBytes, lte8stONTStatTransmitPON128to255Byte=lte8stONTStatTransmitPON128to255Byte, lte8stOLT3NNI0StatTransmitErroredBytes=lte8stOLT3NNI0StatTransmitErroredBytes, lte8stOLT2PON1StatReceiveMACUndersize=lte8stOLT2PON1StatReceiveMACUndersize, lte8stOLT2PON1FecDown=lte8stOLT2PON1FecDown, lte8stOLT2NNI0StatTransmit512to1023Byte=lte8stOLT2NNI0StatTransmit512to1023Byte, lte8stSwitchPort07LACPActivity=lte8stSwitchPort07LACPActivity, lte8stSwitchPort03EgressMirroring=lte8stSwitchPort03EgressMirroring, lte8stSwitchPort03MulticastPacketsReceived=lte8stSwitchPort03MulticastPacketsReceived, lte8stSwitchPort10LACP=lte8stSwitchPort10LACP, lte8stSwitchPort01OversizePacketsReceived=lte8stSwitchPort01OversizePacketsReceived, lte8stOLT3PON1ONTCount=lte8stOLT3PON1ONTCount, lte8stOLT0PON0StatReceiveLIFFecBlockUncorrectable=lte8stOLT0PON0StatReceiveLIFFecBlockUncorrectable, lte8stONTLink1Llid=lte8stONTLink1Llid, lte8stONTStatTransmitUNI165to127Byte=lte8stONTStatTransmitUNI165to127Byte, lte8stONTStatTransmitUNI065to127Byte=lte8stONTStatTransmitUNI065to127Byte, lte8stSwitchPort05StateFlowControl=lte8stSwitchPort05StateFlowControl, lte8stSwitchVLANPort04=lte8stSwitchVLANPort04, lte8stSwitchPort07FragmentsReceived=lte8stSwitchPort07FragmentsReceived, lte8stONTIDStatTransmitUNI0Unicast=lte8stONTIDStatTransmitUNI0Unicast, lte8stSwitchPort04BroadcastPacketsReceived=lte8stSwitchPort04BroadcastPacketsReceived, lte8stOLT1NNI0StatReceiveBytes=lte8stOLT1NNI0StatReceiveBytes, lte8stSwitchPort11UndersizePacketsReceived=lte8stSwitchPort11UndersizePacketsReceived, lte8stOLT2PON0StatReceiveLIFFecCorrectableBytes=lte8stOLT2PON0StatReceiveLIFFecCorrectableBytes, lte8stOLT2PON0SFPModel=lte8stOLT2PON0SFPModel, lte8stOLT2PON1StatTransmitLIFLaserTemp=lte8stOLT2PON1StatTransmitLIFLaserTemp, lte8stOLT0PON1StatTransmitMACOamBytes=lte8stOLT0PON1StatTransmitMACOamBytes, lte8stSwitchPort09BadOctetsReceived=lte8stSwitchPort09BadOctetsReceived, lte8stONTIDStatReceiveUNI0Frames=lte8stONTIDStatReceiveUNI0Frames, lte8stSwitchPort04StateLink=lte8stSwitchPort04StateLink, lte8stOLT0PON0StatReceiveMACUndersize=lte8stOLT0PON0StatReceiveMACUndersize, lte8stSwitchPort04MulticastPacketsReceived=lte8stSwitchPort04MulticastPacketsReceived, lte8stOLT2NNI0StatReceive128to255Byte=lte8stOLT2NNI0StatReceive128to255Byte, lte8stTreeStatesTable=lte8stTreeStatesTable, lte8stOLT1PON1StatReceiveMACReportAbort=lte8stOLT1PON1StatReceiveMACReportAbort, lte8stOLT1NNI1StatReceive65to127Byte=lte8stOLT1NNI1StatReceive65to127Byte, lte8stONTConfigIpMulticastProfile=lte8stONTConfigIpMulticastProfile, lte8stMacTable=lte8stMacTable, lte8stSystemSVLANEtherType=lte8stSystemSVLANEtherType, lte8stONTLink0Mac=lte8stONTLink0Mac, lte8stONTIDStatTransmitUNI1Greater1518Byte=lte8stONTIDStatTransmitUNI1Greater1518Byte, lte8stSwitchPort05VLANFrameTypes=lte8stSwitchPort05VLANFrameTypes, lte8stONTIDStateVideoLaserPower=lte8stONTIDStateVideoLaserPower, lte8stProfilesShaperLink0UpstreamBandwidthMax=lte8stProfilesShaperLink0UpstreamBandwidthMax, lte8stONTIDStatTransmitUNI0CollisionLate=lte8stONTIDStatTransmitUNI0CollisionLate, lte8stSwitchPort01FlowControl=lte8stSwitchPort01FlowControl, lte8stSwitchPort01GoodPacketsSent=lte8stSwitchPort01GoodPacketsSent, lte8stSwitchPort03FragmentsReceived=lte8stSwitchPort03FragmentsReceived, lte8stSwitchPort03FlowControlFramesSent=lte8stSwitchPort03FlowControlFramesSent, lte8stProfilesPathEntry=lte8stProfilesPathEntry, lte8stSwitchLACPTable=lte8stSwitchLACPTable, lte8stOLT3NNI1StatReceiveCRCErrors=lte8stOLT3NNI1StatReceiveCRCErrors, lte8stSwitchPort10Packets65to127Octets=lte8stSwitchPort10Packets65to127Octets, lte8stOLT1PON1StatTransmitMACOamFrames=lte8stOLT1PON1StatTransmitMACOamFrames, lte8stONTIDStatTransmitUNI064Byte=lte8stONTIDStatTransmitUNI064Byte, lte8stSwitchPort02MulticastPacketsReceived=lte8stSwitchPort02MulticastPacketsReceived, lte8stProfilesIpMulticastTable=lte8stProfilesIpMulticastTable, lte8stONTIDStateFwRev=lte8stONTIDStateFwRev, lte8stONTIDStatTransmitPONDelayThresh=lte8stONTIDStatTransmitPONDelayThresh, lte8stONTStatReceiveUNI065to127Byte=lte8stONTStatReceiveUNI065to127Byte, lte8stOLT3NNI0StatReceiveLineCodeErrors=lte8stOLT3NNI0StatReceiveLineCodeErrors, lte8stSwitchPort11LateCollisions=lte8stSwitchPort11LateCollisions, lte8stONTIDStatReceivePONErroredFrames=lte8stONTIDStatReceivePONErroredFrames, lte8stSwitchPort10DropEvents=lte8stSwitchPort10DropEvents, lte8stOLT2NNI1Duplex=lte8stOLT2NNI1Duplex, lte8stOLT3NNI0StatTransmitPauseFrames=lte8stOLT3NNI0StatTransmitPauseFrames, lte8stONTIDStatTransmitUNI1CollisionMulti=lte8stONTIDStatTransmitUNI1CollisionMulti, lte8stSwitchPort02GoodPacketsReceived=lte8stSwitchPort02GoodPacketsReceived, lte8stOLT2PON0StatReceiveMACCRC32=lte8stOLT2PON0StatReceiveMACCRC32, lte8stONTStatReceivePONLineCodeErrors=lte8stONTStatReceivePONLineCodeErrors, lte8stSwitchPort00Packets512to1023Octets=lte8stSwitchPort00Packets512to1023Octets, lte8stOLT0NNI0StatTransmitErroredBytes=lte8stOLT0NNI0StatTransmitErroredBytes, lte8stSwitchPort00MACReceiveErrors=lte8stSwitchPort00MACReceiveErrors, lte8stONTIGMPGroupsIP=lte8stONTIGMPGroupsIP, lte8stSwitchPort05Packets1024toMaxOctets=lte8stSwitchPort05Packets1024toMaxOctets, lte8stOthersGroup=lte8stOthersGroup, lte8stONTIDStatReceiveUNI0CRC32Error=lte8stONTIDStatReceiveUNI0CRC32Error, lte8stSwitchPort01VLANPVID=lte8stSwitchPort01VLANPVID, lte8stSwitchPortsCountersGoodPacketsSent=lte8stSwitchPortsCountersGoodPacketsSent, lte8stOLT1NNI1StatTransmitBufferUnderrun=lte8stOLT1NNI1StatTransmitBufferUnderrun, lte8stOLT3PON0StatTransmitMACRegisterAck=lte8stOLT3PON0StatTransmitMACRegisterAck, lte8stOLT2PON1StatReceiveMACUnicast=lte8stOLT2PON1StatReceiveMACUnicast, lte8stONTStatReceivePONErroredFrames=lte8stONTStatReceivePONErroredFrames, lte8stONTStatReceivePONCRC8Errors=lte8stONTStatReceivePONCRC8Errors, lte8stSwitchPort08Packets65to127Octets=lte8stSwitchPort08Packets65to127Octets, lte8stOLT2PON1StatTransmitLIFLaserPower=lte8stOLT2PON1StatTransmitLIFLaserPower, lte8stOLT2NNI1StatReceiveLineCodeErrors=lte8stOLT2NNI1StatReceiveLineCodeErrors, lte8stSwitchPort01LACPPriority=lte8stSwitchPort01LACPPriority, lte8stOLT2PON1StatTransmitMACUnicast=lte8stOLT2PON1StatTransmitMACUnicast, lte8stOLT3PON0StatTransmitMACMPCPBytes=lte8stOLT3PON0StatTransmitMACMPCPBytes, lte8stTreeStatesConfiguredONT=lte8stTreeStatesConfiguredONT, lte8stOLT2PON0Duplex=lte8stOLT2PON0Duplex, lteSubTypes=lteSubTypes, lte8stSwitchPort08FlowControl=lte8stSwitchPort08FlowControl, lte8stOLT1NNI0AutoNegotiate=lte8stOLT1NNI0AutoNegotiate, lte8stSwitchPort03State=lte8stSwitchPort03State, lte8stSwitchPort03BadPacketsReceived=lte8stSwitchPort03BadPacketsReceived, lte8stSwitchPort07LateCollisions=lte8stSwitchPort07LateCollisions, lte8stOLT0PON0Desc=lte8stOLT0PON0Desc, lte8stOLT0NNI0StatTransmit128to255Byte=lte8stOLT0NNI0StatTransmit128to255Byte, lte8stOLT3PON1StatTransmitLIFFrames=lte8stOLT3PON1StatTransmitLIFFrames, lte8stSwitchPort05OversizePacketsReceived=lte8stSwitchPort05OversizePacketsReceived, lte8stSwitchPort08GoodPacketsReceived=lte8stSwitchPort08GoodPacketsReceived, lte8stOLT2PON1StatReceiveMACFrames=lte8stOLT2PON1StatReceiveMACFrames, lte8stONTIDStatReceivePONInvalidSLDFrames=lte8stONTIDStatReceivePONInvalidSLDFrames, lte8stSwitchPort02Duplex=lte8stSwitchPort02Duplex, lte8stOLT0PON1StatReceiveMACCRC32=lte8stOLT0PON1StatReceiveMACCRC32, lte8stSwitchPort04Collisions=lte8stSwitchPort04Collisions, lte8stOLT3PON0StatReceiveMACCRC32=lte8stOLT3PON0StatReceiveMACCRC32, lte8stONTLink3Entry=lte8stONTLink3Entry, lte8stOLT1NNI0StatReceiveGreater1518Byte=lte8stOLT1NNI0StatReceiveGreater1518Byte, lte8stSwitchPort09LACPChannelGroup=lte8stSwitchPort09LACPChannelGroup, lte8stONTLink1Entry=lte8stONTLink1Entry, lte8stOLT3PON1Stat=lte8stOLT3PON1Stat, lte8stONTStatTransmitPONGreater1518Byte=lte8stONTStatTransmitPONGreater1518Byte, lte8stSwitchPort05AutoNegotiate=lte8stSwitchPort05AutoNegotiate, lte8stONTStateOLTId=lte8stONTStateOLTId, lte8stSwitchPort11FragmentsReceived=lte8stSwitchPort11FragmentsReceived, lte8stSwitchPortsCountersMulticastPacketsReceived=lte8stSwitchPortsCountersMulticastPacketsReceived, lte8stSwitchPort11Counters=lte8stSwitchPort11Counters, lte8stOLT2PON1StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT2PON1StatTransmitMACMPCPDiscoveryTimeouts, lte8stOLT2PON0StatTransmitMACRegisterReq=lte8stOLT2PON0StatTransmitMACRegisterReq, lte8stONTIDStatReceiveUNI1Bytes=lte8stONTIDStatReceiveUNI1Bytes, OntType=OntType, lte8stSwitchPortsCountersPackets65to127Octets=lte8stSwitchPortsCountersPackets65to127Octets, lte8stOLT0PON1StatTransmitLIFBytes=lte8stOLT0PON1StatTransmitLIFBytes, lte8stOLT1NNI1StatTransmit255to511Byte=lte8stOLT1NNI1StatTransmit255to511Byte, lte8stOLT1NNI0Duplex=lte8stOLT1NNI0Duplex, lte8stONTConfigReconfigure=lte8stONTConfigReconfigure, lte8stSwitchPort09FlowControlFramesSent=lte8stSwitchPort09FlowControlFramesSent, lte8stOLT2Group=lte8stOLT2Group, lte8stOLT0PON0StatReceiveMACOAMBytes=lte8stOLT0PON0StatReceiveMACOAMBytes, lte8stSwitchPort05JabberPacketsReceived=lte8stSwitchPort05JabberPacketsReceived, PortMirrorSettings=PortMirrorSettings, lte8stOLT2NNI1FlowControl=lte8stOLT2NNI1FlowControl, lte8stSwitchPort04MulticastPacketsSent=lte8stSwitchPort04MulticastPacketsSent, lte8stSwitchIGMPSnoopingUnregGroups=lte8stSwitchIGMPSnoopingUnregGroups, lte8stOLT0NNI1StatTransmit=lte8stOLT0NNI1StatTransmit, lte8stOLT1NNI1StatReceive512to1023Byte=lte8stOLT1NNI1StatReceive512to1023Byte, lte8stSwitchPort06MACReceiveErrors=lte8stSwitchPort06MACReceiveErrors, lte8stOLT1NNI1StatTransmitMulticast=lte8stOLT1NNI1StatTransmitMulticast, lte8stProfilesPortsUNI1LearnedEntryAgeLimit=lte8stProfilesPortsUNI1LearnedEntryAgeLimit, lte8stONTStatTransmitUNI1CollisionMulti=lte8stONTStatTransmitUNI1CollisionMulti, lte8stOLT0NNI0AutoNegotiate=lte8stOLT0NNI0AutoNegotiate, lte8stProfilesShaperLink1UpstreamBandwidthMin=lte8stProfilesShaperLink1UpstreamBandwidthMin, lte8stSwitchPort02LACPTimeOut=lte8stSwitchPort02LACPTimeOut, lte8stSwitchPort07StateSpeed=lte8stSwitchPort07StateSpeed, lte8stSwitchPort01MulticastPacketsSent=lte8stSwitchPort01MulticastPacketsSent, lte8stONTStatTransmitUNI0Multicast=lte8stONTStatTransmitUNI0Multicast, lte8stSwitchPortsCountersPackets128to255Octets=lte8stSwitchPortsCountersPackets128to255Octets, lte8stSwitchPort03VLANPVID=lte8stSwitchPort03VLANPVID, lte8stONTIDConfigUNI1Blocked=lte8stONTIDConfigUNI1Blocked, lte8stOLT3PON0StatTransmitMACRegisterReq=lte8stOLT3PON0StatTransmitMACRegisterReq, lte8stSystemUptime=lte8stSystemUptime, lte8stONTUNI0Duplex=lte8stONTUNI0Duplex, lte8stONTStatReceivePON128to255Byte=lte8stONTStatReceivePON128to255Byte, lte8stOLT3PON0FecDown=lte8stOLT3PON0FecDown, lte8stSwitchPort07LACPTimeOut=lte8stSwitchPort07LACPTimeOut, lte8stSwitchPort11VLANIngressFiltering=lte8stSwitchPort11VLANIngressFiltering, lte8stOLT1NNI0StatTransmitUnicast=lte8stOLT1NNI0StatTransmitUnicast, lte8stSwitchPort07Packets65to127Octets=lte8stSwitchPort07Packets65to127Octets, lte8stSwitchPort09=lte8stSwitchPort09, lte8stOLT2PON0StatReceiveMACDropUngranted=lte8stOLT2PON0StatReceiveMACDropUngranted, lte8stOLT3NNI1StatReceive128to255Byte=lte8stOLT3NNI1StatReceive128to255Byte, lte8stONTIDStateVideoLaserPowerdBm=lte8stONTIDStateVideoLaserPowerdBm, lte8stOLT1PON0ONTCount=lte8stOLT1PON0ONTCount, lte8stONTStatReceivePONMac=lte8stONTStatReceivePONMac, lte8stOLT3NNI1Stat=lte8stOLT3NNI1Stat, lte8stONTStatTransmitUNI1Unicast=lte8stONTStatTransmitUNI1Unicast, lte8stONTFactorySettingsMacsNumber=lte8stONTFactorySettingsMacsNumber, lte8stONTLink0ONTMac=lte8stONTLink0ONTMac, lte8stONTIDStatTransmitUNI1CollisionSingle=lte8stONTIDStatTransmitUNI1CollisionSingle, lte8stOLT0PON1SFPVendor=lte8stOLT0PON1SFPVendor, lte8stSwitchPort07ExcessiveCollisions=lte8stSwitchPort07ExcessiveCollisions, lte8stSwitchPort01JabberPacketsReceived=lte8stSwitchPort01JabberPacketsReceived, lte8stONTIDStatTransmitUNI0Multicast=lte8stONTIDStatTransmitUNI0Multicast, lte8stSwitchPortsCountersBroadcastPacketsReceived=lte8stSwitchPortsCountersBroadcastPacketsReceived, lte8stSNMPEponAlarmTrapEnabled=lte8stSNMPEponAlarmTrapEnabled, lte8stOLT0NNI1StatTransmitFrames=lte8stOLT0NNI1StatTransmitFrames, lte8stONTStatTransmitPON65to127Byte=lte8stONTStatTransmitPON65to127Byte, lte8stSwitchPort09DropEvents=lte8stSwitchPort09DropEvents, lte8stSwitchPort04StateError=lte8stSwitchPort04StateError, lte8stSwitchPort07GoodFlowControlFramesReceived=lte8stSwitchPort07GoodFlowControlFramesReceived, lte8stONTStatTransmitUNI11024to1518Byte=lte8stONTStatTransmitUNI11024to1518Byte, lte8stSwitchPort10LateCollisions=lte8stSwitchPort10LateCollisions, lte8stOLT1PON1FlowControl=lte8stOLT1PON1FlowControl, lte8stOLT3PON0StatReceiveMACUndersize=lte8stOLT3PON0StatReceiveMACUndersize, lte8stOLT2NNI1StatTransmitBytes=lte8stOLT2NNI1StatTransmitBytes, lte8stSwitchPort10LACPPriority=lte8stSwitchPort10LACPPriority, lte8stOLT2NNI1StatTransmitBroadCast=lte8stOLT2NNI1StatTransmitBroadCast, lte8stONTStatReceiveUNI0CRC32Error=lte8stONTStatReceiveUNI0CRC32Error, lte8stOLT2NNI1StatTransmitBufferUnderrun=lte8stOLT2NNI1StatTransmitBufferUnderrun, lte8stSwitchPort01BroadcastPacketsReceived=lte8stSwitchPort01BroadcastPacketsReceived, lte8stONTUNI1Table=lte8stONTUNI1Table, lte8stSwitchVLANPort01=lte8stSwitchVLANPort01, lte8stOLT3NNI1StatTransmit65to127Byte=lte8stOLT3NNI1StatTransmit65to127Byte, lte8stOLT1PON1StatReceiveMACBroadcast=lte8stOLT1PON1StatReceiveMACBroadcast, lte8stOLT1PON0StatReceiveLIFErrorPkt=lte8stOLT1PON0StatReceiveLIFErrorPkt, lte8stSwitchPort00BadFlowControlReceived=lte8stSwitchPort00BadFlowControlReceived, lte8stONTUNI1Speed=lte8stONTUNI1Speed, lte8stProfilesShaperLink0UpstreamWeightMin=lte8stProfilesShaperLink0UpstreamWeightMin, lte8stONTStatReceivePONTable=lte8stONTStatReceivePONTable, lte8stOLT1PON0StatTransmitMACUnicast=lte8stOLT1PON0StatTransmitMACUnicast, lte8stOLT1PON0StatReceiveLIFPostFecGoodFrame=lte8stOLT1PON0StatReceiveLIFPostFecGoodFrame, lte8stOLT1PON1StatTransmitMACReport=lte8stOLT1PON1StatTransmitMACReport, lte8stONTIDConfigEntry=lte8stONTIDConfigEntry, lte8stOLT3NNI1StatTransmitBufferUnderrun=lte8stOLT3NNI1StatTransmitBufferUnderrun, lte8stOLT1PON0StatTransmitLIFLaserVCC=lte8stOLT1PON0StatTransmitLIFLaserVCC, lte8stSwitchPort11VLANPVID=lte8stSwitchPort11VLANPVID, lte8stSwitchPort03BadOctetsReceived=lte8stSwitchPort03BadOctetsReceived, lte8stONTRulesUNI1Entry=lte8stONTRulesUNI1Entry, lte8stSwitch=lte8stSwitch, lte8stSwitchPort08IngressMirroring=lte8stSwitchPort08IngressMirroring, lte8stOLT3PON1StatTransmitLIFFecBlocks=lte8stOLT3PON1StatTransmitLIFFecBlocks, lte8stSwitchPort09LACP=lte8stSwitchPort09LACP, lte8stOLT2PON1SFPModel=lte8stOLT2PON1SFPModel, lte8stONTIDStatReceiveUNI0Entry=lte8stONTIDStatReceiveUNI0Entry, lte8stOLT0PON0StatTransmitLIFLaserBias=lte8stOLT0PON0StatTransmitLIFLaserBias, lte8stONTStatReceiveUNI11024to1518Byte=lte8stONTStatReceiveUNI11024to1518Byte, lte8stONTIDStatReceiveUNI1Unicast=lte8stONTIDStatReceiveUNI1Unicast, lte8stSwitchPort05BroadcastPacketsReceived=lte8stSwitchPort05BroadcastPacketsReceived, lte8stOLT2NNI0StatReceiveAlignmentError=lte8stOLT2NNI0StatReceiveAlignmentError, lte8stSwitchPort08Counters=lte8stSwitchPort08Counters, lte8stOLT0PON1StatTransmitMACRegisterAck=lte8stOLT0PON1StatTransmitMACRegisterAck, lte8stONTIDStatReceivePON128to255Byte=lte8stONTIDStatReceivePON128to255Byte)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stSwitchPort03Packets65to127Octets=lte8stSwitchPort03Packets65to127Octets, lte8stOLT2NNI0AutoNegotiate=lte8stOLT2NNI0AutoNegotiate, lte8stSwitchPort01Packets1024toMaxOctets=lte8stSwitchPort01Packets1024toMaxOctets, lte8stOLT0NNI1AutoNegotiate=lte8stOLT0NNI1AutoNegotiate, lte8stSwitchPort06GoodOctetsSent=lte8stSwitchPort06GoodOctetsSent, lte8stOLT2PON0StatReceiveMACMPCPBytes=lte8stOLT2PON0StatReceiveMACMPCPBytes, lte8stOLT3NNI0StatReceiveMulticast=lte8stOLT3NNI0StatReceiveMulticast, lte8stSwitchPort03MacTransmitErrors=lte8stSwitchPort03MacTransmitErrors, lte8stONTRulesPONLocal=lte8stONTRulesPONLocal, lte8stONTIDStatReceivePONDroppedFrames=lte8stONTIDStatReceivePONDroppedFrames, lte8stOLT0NNI1StatReceive128to255Byte=lte8stOLT0NNI1StatReceive128to255Byte, lte8stSwitchPort06Counters=lte8stSwitchPort06Counters, lte8stONTIDLink0Mac=lte8stONTIDLink0Mac, lte8stONTPONMac=lte8stONTPONMac, lte8stOLT3PON1Enabled=lte8stOLT3PON1Enabled, lte8stOLT1PON1FecDown=lte8stOLT1PON1FecDown, lte8stProfilesShaperLink1UpstreamWeightMin=lte8stProfilesShaperLink1UpstreamWeightMin, lte8stSNMPONTDeconfigureTrapEnabled=lte8stSNMPONTDeconfigureTrapEnabled, lte8stONTConfigState=lte8stONTConfigState, lte8stOLT1PON0StatTransmitMACMultiCast=lte8stOLT1PON0StatTransmitMACMultiCast, lte8stOLT2PON1FecUp=lte8stOLT2PON1FecUp, lte8stOLT0PON0StatReceiveMACReportAbort=lte8stOLT0PON0StatReceiveMACReportAbort, lte8stSwitchPortsCountersMacTransmitErrors=lte8stSwitchPortsCountersMacTransmitErrors, lte8stOLT2NNI1StatReceiveBroadcast=lte8stOLT2NNI1StatReceiveBroadcast, lte8stONTStatTransmitUNI1CollisionExcessive=lte8stONTStatTransmitUNI1CollisionExcessive, lte8stOLT0NNI1StatReceiveFrames=lte8stOLT0NNI1StatReceiveFrames, lte8stONTLink0State=lte8stONTLink0State, lte8stSNMPONTAuthOkTrapEnabled=lte8stSNMPONTAuthOkTrapEnabled, lte8stOLT0PON0StatTransmitMACOamFrames=lte8stOLT0PON0StatTransmitMACOamFrames, lte8stONTIDStatTransmitPON128to255Byte=lte8stONTIDStatTransmitPON128to255Byte, lte8stSystemSnmpManager=lte8stSystemSnmpManager, lte8stONTRulesPONRule=lte8stONTRulesPONRule, lte8stOLT3PON0FlowControl=lte8stOLT3PON0FlowControl, lte8stOLT1PON1StatTransmitLIFLaserTemp=lte8stOLT1PON1StatTransmitLIFLaserTemp, lte8stSwitchPort07AutoNegotiate=lte8stSwitchPort07AutoNegotiate, lte8stOLT0NNI0=lte8stOLT0NNI0, lte8stSwitchPort09VLANIngressFiltering=lte8stSwitchPort09VLANIngressFiltering, lte8stONTIDStatReceivePONONTDestinedBytes=lte8stONTIDStatReceivePONONTDestinedBytes, lte8stONTStatTransmitUNI0Table=lte8stONTStatTransmitUNI0Table, lte8stSwitchPort02BadCRC=lte8stSwitchPort02BadCRC, lte8stONTStatReceivePONFrames=lte8stONTStatReceivePONFrames, lteSubType8ST=lteSubType8ST, lte8stONTIDStatTransmitUNI1128to255Byte=lte8stONTIDStatTransmitUNI1128to255Byte, lte8stSwitchPort09StateFlowControl=lte8stSwitchPort09StateFlowControl, lte8stOLT3PON1StatReceiveMACBroadcast=lte8stOLT3PON1StatReceiveMACBroadcast, lte8stONTIDStatTransmitUNI0CollisionExcessive=lte8stONTIDStatTransmitUNI0CollisionExcessive, lte8stSwitchPort06GoodPacketsSent=lte8stSwitchPort06GoodPacketsSent, lte8stOLT0NNI0Desc=lte8stOLT0NNI0Desc, lte8stOLT0NNI0Speed=lte8stOLT0NNI0Speed, lte8stONTIDLink3Entry=lte8stONTIDLink3Entry, lte8stSwitchPort02Packets128to255Octets=lte8stSwitchPort02Packets128to255Octets, lte8stSwitchPort07State=lte8stSwitchPort07State, lte8stONTStatTransmitPONDelayThresh=lte8stONTStatTransmitPONDelayThresh, lte8stONT=lte8stONT, lte8stOLT0NNI0StatReceiveUnicast=lte8stOLT0NNI0StatReceiveUnicast, lte8stSwitchPort06LateCollisions=lte8stSwitchPort06LateCollisions, lte8stONTRulesPONEntry=lte8stONTRulesPONEntry, lte8stONTIDStatTransmitPONDelayMax=lte8stONTIDStatTransmitPONDelayMax, lte8stSwitchPort10MulticastPacketsReceived=lte8stSwitchPort10MulticastPacketsReceived, lte8stONTIDStatTransmitPONEntry=lte8stONTIDStatTransmitPONEntry, lte8stONTLink1State=lte8stONTLink1State, lte8stONTIDStatTransmitUNI1256to511Byte=lte8stONTIDStatTransmitUNI1256to511Byte, lte8stOLT2NNI1StatReceiveOversizeFrames=lte8stOLT2NNI1StatReceiveOversizeFrames, lte8stSwitchPort02JabberPacketsReceived=lte8stSwitchPort02JabberPacketsReceived, lte8stSystemFirmwareVersion=lte8stSystemFirmwareVersion, lte8stSwitchPort05GoodPacketsReceived=lte8stSwitchPort05GoodPacketsReceived, lte8stONTIDConfigShaperProfile=lte8stONTIDConfigShaperProfile, lte8stOLT3NNI1=lte8stOLT3NNI1, lte8stOLT0State=lte8stOLT0State, lte8stOLT0PON1StatReceiveLIFFecBlockUncorrectable=lte8stOLT0PON1StatReceiveLIFFecBlockUncorrectable, lte8stOLT1PON0Stat=lte8stOLT1PON0Stat, lte8stOLT1=lte8stOLT1, lte8stSNMPUserLoginTrapEnabled=lte8stSNMPUserLoginTrapEnabled, lte8stSwitchPort07Collisions=lte8stSwitchPort07Collisions, lte8stOLT0PON1StatTransmitMACReport=lte8stOLT0PON1StatTransmitMACReport, lte8stOLT3NNI1StatReceiveUnicast=lte8stOLT3NNI1StatReceiveUnicast, lte8stONTStateEntry=lte8stONTStateEntry, lte8stSwitchPort11=lte8stSwitchPort11, lte8stSwitchPort04MACReceiveErrors=lte8stSwitchPort04MACReceiveErrors, lte8stSwitchPort11GoodFlowControlFramesReceived=lte8stSwitchPort11GoodFlowControlFramesReceived, lte8stOLT1PON1Duplex=lte8stOLT1PON1Duplex, lte8stONTIDPONEntry=lte8stONTIDPONEntry, lte8stONTStateLaserPowerdBm=lte8stONTStateLaserPowerdBm, lte8stONTLink3Table=lte8stONTLink3Table, lte8stONTIDStateEntry=lte8stONTIDStateEntry, lte8stONTStatTransmitUNI1Bytes=lte8stONTStatTransmitUNI1Bytes, lte8stSwitchVLANIGMPSnoopingUpstreamPort=lte8stSwitchVLANIGMPSnoopingUpstreamPort, lte8stSwitchVLANPort03=lte8stSwitchVLANPort03, lte8stONTConfigDeleteRow=lte8stONTConfigDeleteRow, lte8stOLT3NNI0StatReceive64Byte=lte8stOLT3NNI0StatReceive64Byte, lte8stONTIDStatReceiveUNI064Byte=lte8stONTIDStatReceiveUNI064Byte, lte8stSwitchPort01UndersizePacketsReceived=lte8stSwitchPort01UndersizePacketsReceived, lte8stRebootTimeout=lte8stRebootTimeout, lte8stSwitchPort02LateCollisions=lte8stSwitchPort02LateCollisions, lte8stOLT3PON0StatReceiveLIFFrame=lte8stOLT3PON0StatReceiveLIFFrame, lte8stOLT3PON1Linked=lte8stOLT3PON1Linked, lte8stOLT0NNI0StatReceive1024to1518Byte=lte8stOLT0NNI0StatReceive1024to1518Byte, lte8stOLT2PON1StatReceiveLIFLaserIdlePower=lte8stOLT2PON1StatReceiveLIFLaserIdlePower, lte8stSwitchPort04FragmentsReceived=lte8stSwitchPort04FragmentsReceived, lte8stSwitchPort06Speed=lte8stSwitchPort06Speed, lte8stONTStatReceivePONFCSErrors=lte8stONTStatReceivePONFCSErrors, lte8stOLT0NNI0StatReceive128to255Byte=lte8stOLT0NNI0StatReceive128to255Byte, lte8stOLT2NNI0StatReceiveGreater1518Byte=lte8stOLT2NNI0StatReceiveGreater1518Byte, lte8stOLT3NNI1StatReceivePauseFrames=lte8stOLT3NNI1StatReceivePauseFrames, lte8stOLT2=lte8stOLT2, lte8stONTUNI0FlowControl=lte8stONTUNI0FlowControl, lte8stSwitchPort00Duplex=lte8stSwitchPort00Duplex, lte8stOLT2PON0Desc=lte8stOLT2PON0Desc, lte8stONTIDStatTransmitPONLaserTemp=lte8stONTIDStatTransmitPONLaserTemp, lte8stOLT0PON0StatTransmitMACMultiCast=lte8stOLT0PON0StatTransmitMACMultiCast, lte8stSwitchPort07Packets128to255Octets=lte8stSwitchPort07Packets128to255Octets, lte8stOLT3PON0StatReceiveLIFFecBlockUncorrectable=lte8stOLT3PON0StatReceiveLIFFecBlockUncorrectable, lte8stOLT1PON0StatTransmitLIFFrames=lte8stOLT1PON0StatTransmitLIFFrames, lte8stOLT3NNI1Speed=lte8stOLT3NNI1Speed, lte8stSwitchPort05MulticastPacketsReceived=lte8stSwitchPort05MulticastPacketsReceived, lte8stSwitchPort09StateError=lte8stSwitchPort09StateError, lte8stOLT0NNI0StatReceiveErroredBytes=lte8stOLT0NNI0StatReceiveErroredBytes, lte8stSwitchPort06Packets128to255Octets=lte8stSwitchPort06Packets128to255Octets, lte8stONTIDUNI0AutoNegotiate=lte8stONTIDUNI0AutoNegotiate, lte8stONTIDStatReceivePON256to511Byte=lte8stONTIDStatReceivePON256to511Byte, lte8stONTRulesUNI0ID=lte8stONTRulesUNI0ID, lte8stSwitchPort09Packets65to127Octets=lte8stSwitchPort09Packets65to127Octets, lte8stONTIDStatTransmitUNI0Entry=lte8stONTIDStatTransmitUNI0Entry, lte8stOLT0PON1StatReceiveMACBroadcast=lte8stOLT0PON1StatReceiveMACBroadcast, lte8stONTIDStateMac=lte8stONTIDStateMac, lte8stSwitchPort04BadPacketsReceived=lte8stSwitchPort04BadPacketsReceived, lte8stONTIDStatReceiveUNI0128to255Byte=lte8stONTIDStatReceiveUNI0128to255Byte, lte8stSwitchPort11Collisions=lte8stSwitchPort11Collisions, lte8stSwitchPort10Packets128to255Octets=lte8stSwitchPort10Packets128to255Octets, lte8stOLT0NNI0StatTransmitUnicast=lte8stOLT0NNI0StatTransmitUnicast, lte8stOLT1NNI0StatTransmit512to1023Byte=lte8stOLT1NNI0StatTransmit512to1023Byte, lte8stONTIGMPGroupsID=lte8stONTIGMPGroupsID, lte8stOLT3PON1Desc=lte8stOLT3PON1Desc, lte8stONTIDLink2State=lte8stONTIDLink2State, lte8stONTConfigShaperProfile=lte8stONTConfigShaperProfile, lte8stOLT0PON1StatReceiveMACMPCPFrames=lte8stOLT0PON1StatReceiveMACMPCPFrames, lte8stSwitchPort03BadCRC=lte8stSwitchPort03BadCRC, lte8stSwitchPort05BadPacketsReceived=lte8stSwitchPort05BadPacketsReceived, lte8stSwitchPort09GoodPacketsSent=lte8stSwitchPort09GoodPacketsSent, lte8stSwitchPort01StateFlowControl=lte8stSwitchPort01StateFlowControl, lte8stONTStatTransmitUNI1DroppedFrames=lte8stONTStatTransmitUNI1DroppedFrames, lte8stOLT2NNI1StatTransmitErroredBytes=lte8stOLT2NNI1StatTransmitErroredBytes, lte8stONTRulesPONMAC=lte8stONTRulesPONMAC, lte8stSwitchPort06FlowControlFramesSent=lte8stSwitchPort06FlowControlFramesSent, lte8stSwitchPort01VLANIngressFiltering=lte8stSwitchPort01VLANIngressFiltering, lte8stOLT1PON1StatTransmitMACRegisterAck=lte8stOLT1PON1StatTransmitMACRegisterAck, lte8stOLT0NNI0StatTransmit255to511Byte=lte8stOLT0NNI0StatTransmit255to511Byte, lte8stProfilesPortsUNI0Enabled=lte8stProfilesPortsUNI0Enabled, lte8stProfilesShaperLink1DownstreamBurstMax=lte8stProfilesShaperLink1DownstreamBurstMax, lte8stONTIDPONSpeed=lte8stONTIDPONSpeed, lte8stSwitchPort04GoodOctetsReceived=lte8stSwitchPort04GoodOctetsReceived, lte8stOLT0PON1Desc=lte8stOLT0PON1Desc, lte8stSwitchPort04BadFlowControlReceived=lte8stSwitchPort04BadFlowControlReceived, lte8stSwitchPort10StateDuplex=lte8stSwitchPort10StateDuplex, lte8stOLT1PON0Desc=lte8stOLT1PON0Desc, lte8stSwitchPort01Packets512to1023Octets=lte8stSwitchPort01Packets512to1023Octets, lte8stOLT3PON0StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT3PON0StatTransmitMACMPCPDiscoveryTimeouts, lte8stONTIDStatReceivePON64Byte=lte8stONTIDStatReceivePON64Byte, lte8stSwitchPort05LACPChannelGroup=lte8stSwitchPort05LACPChannelGroup, lte8stOLT3PON1StatReceiveMACOversize=lte8stOLT3PON1StatReceiveMACOversize, lte8stSNMPFlappingOkTrapEnabled=lte8stSNMPFlappingOkTrapEnabled, lte8stOLT2NNI0StatTransmitPauseFrames=lte8stOLT2NNI0StatTransmitPauseFrames, lte8stSwitchPort06BadOctetsReceived=lte8stSwitchPort06BadOctetsReceived, lte8stSwitchPort06OversizePacketsReceived=lte8stSwitchPort06OversizePacketsReceived, lte8stSwitchPort06LACP=lte8stSwitchPort06LACP, lte8stSwitchPort08GoodOctetsReceived=lte8stSwitchPort08GoodOctetsReceived, lte8stONTIDLink1Table=lte8stONTIDLink1Table, lte8stOLT3StateFwRev=lte8stOLT3StateFwRev, lte8stSwitchPort06=lte8stSwitchPort06, lte8stONTStatReceivePONUndersizeFrames=lte8stONTStatReceivePONUndersizeFrames, lte8stSwitchPort03LACPTimeOut=lte8stSwitchPort03LACPTimeOut, lte8stSwitchPort11LACPActivity=lte8stSwitchPort11LACPActivity, lte8stSwitchPort06VLANIngressFiltering=lte8stSwitchPort06VLANIngressFiltering, lte8stONTStateOLTPort=lte8stONTStateOLTPort, lte8stONTLink2Table=lte8stONTLink2Table, lte8stOLT3PON1StatTransmitMACRegisterReq=lte8stOLT3PON1StatTransmitMACRegisterReq, lte8stONTIDStateTree=lte8stONTIDStateTree, lte8stOLT0NNI0StatReceiveOversizeFrames=lte8stOLT0NNI0StatReceiveOversizeFrames, lte8stSwitchPort10BroadcastPacketsReceived=lte8stSwitchPort10BroadcastPacketsReceived, lte8stOLT3NNI0StatTransmitCRCGen=lte8stOLT3NNI0StatTransmitCRCGen, lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink0=lte8stProfilesPortsUNI1ForwardBroadcastARPFramesLink0, lte8stONTIDStatTransmitUNI0DroppedFrames=lte8stONTIDStatTransmitUNI0DroppedFrames, lte8stONTIDConfigSecret=lte8stONTIDConfigSecret, lte8stONTPONTable=lte8stONTPONTable, lte8stONTStatTransmitUNI0PauseFrames=lte8stONTStatTransmitUNI0PauseFrames, lte8stSwitchPort08BadOctetsReceived=lte8stSwitchPort08BadOctetsReceived, SwitchLinkState=SwitchLinkState, lte8stONTStateVideoLaserPowerdBm=lte8stONTStateVideoLaserPowerdBm, lte8stSwitchPortsCountersBadCRC=lte8stSwitchPortsCountersBadCRC, lte8stOLT3PON0StatTransmitLIFLaserBias=lte8stOLT3PON0StatTransmitLIFLaserBias, lte8stSwitchPort03Counters=lte8stSwitchPort03Counters, lte8stSwitchPort06VLANFrameTypes=lte8stSwitchPort06VLANFrameTypes, lte8stProfilesShaperLink1DownstreamBandwidthMax=lte8stProfilesShaperLink1DownstreamBandwidthMax, lte8stONTIDStatReceiveUNI11024to1518Byte=lte8stONTIDStatReceiveUNI11024to1518Byte, lte8stSwitchPort08BroadcastPacketsReceived=lte8stSwitchPort08BroadcastPacketsReceived, lte8stProfilesIpMulticastDescription=lte8stProfilesIpMulticastDescription, lte8stOLT2NNI1StatReceiveAlignmentError=lte8stOLT2NNI1StatReceiveAlignmentError, lte8stSwitchPort00ExcessiveCollisions=lte8stSwitchPort00ExcessiveCollisions, lte8stSwitchPort02StateDuplex=lte8stSwitchPort02StateDuplex, lte8stOLT0NNI1StatReceivePauseFrames=lte8stOLT0NNI1StatReceivePauseFrames, lte8stOLT2NNI0Stat=lte8stOLT2NNI0Stat, lte8stOLT1PON1StatTransmitMACBytes=lte8stOLT1PON1StatTransmitMACBytes, lte8stSwitchPort02BroadcastPacketsReceived=lte8stSwitchPort02BroadcastPacketsReceived, lte8stOLT1PON1StatTransmitLIFLaserPower=lte8stOLT1PON1StatTransmitLIFLaserPower, lte8stSwitchPort11FlowControlFramesSent=lte8stSwitchPort11FlowControlFramesSent, lte8stSwitchPort00Packets128to255Octets=lte8stSwitchPort00Packets128to255Octets, lte8stOLT0NNI0StatTransmitGreater1518Bytes=lte8stOLT0NNI0StatTransmitGreater1518Bytes, lte8stONTIDUNI1Enabled=lte8stONTIDUNI1Enabled, lte8stOLT2NNI0StatReceive512to1023Byte=lte8stOLT2NNI0StatReceive512to1023Byte, lte8stSwitchPort08StateSpeed=lte8stSwitchPort08StateSpeed, lte8stOLT1NNI1StatReceiveAlignmentError=lte8stOLT1NNI1StatReceiveAlignmentError, lte8stSwitchPort01LACPActivity=lte8stSwitchPort01LACPActivity, lte8stOLT0PON0FecUp=lte8stOLT0PON0FecUp, lte8stOLT2PON0StatTransmitLIFFrames=lte8stOLT2PON0StatTransmitLIFFrames, lte8stSNMPUplinkOkTrapEnabled=lte8stSNMPUplinkOkTrapEnabled, lte8stSNMPSwitchConfigChangeTrapEnabled=lte8stSNMPSwitchConfigChangeTrapEnabled, lte8stSwitchPort02OversizePacketsReceived=lte8stSwitchPort02OversizePacketsReceived, lte8stSwitchPort05BadOctetsReceived=lte8stSwitchPort05BadOctetsReceived, lte8stSwitchPort08BadCRC=lte8stSwitchPort08BadCRC, lte8stOLT2NNI0Linked=lte8stOLT2NNI0Linked, lte8stOLT3NNI0StatReceiveUndersizeFrames=lte8stOLT3NNI0StatReceiveUndersizeFrames, lte8stSwitchPort05UnrecogMacControlReceived=lte8stSwitchPort05UnrecogMacControlReceived, lte8stOLT1NNI0StatReceive1024to1518Byte=lte8stOLT1NNI0StatReceive1024to1518Byte, lte8stOLT2NNI1=lte8stOLT2NNI1, lte8stOLT1NNI1Duplex=lte8stOLT1NNI1Duplex, lte8stSwitchPort11GoodOctetsSent=lte8stSwitchPort11GoodOctetsSent, lte8stOLT3NNI0Stat=lte8stOLT3NNI0Stat, lte8stOLT1NNI0StatTransmit255to511Byte=lte8stOLT1NNI0StatTransmit255to511Byte, lte8stONTIDLink3Llid=lte8stONTIDLink3Llid, lte8stSwitchPort00Counters=lte8stSwitchPort00Counters, lte8stOLT3PON0StatReceiveMACMPCPBytes=lte8stOLT3PON0StatReceiveMACMPCPBytes, lte8stONTIGMPGroupsONTMac=lte8stONTIGMPGroupsONTMac, lte8stOLT0PON1AutoNegotiate=lte8stOLT0PON1AutoNegotiate, lte8stONTStatTransmitPONEntry=lte8stONTStatTransmitPONEntry, lte8stSwitchPort07DropEvents=lte8stSwitchPort07DropEvents, lte8stONTIDStatReceivePONFrames=lte8stONTIDStatReceivePONFrames, lte8stONTLink2Mac=lte8stONTLink2Mac, lte8stSwitchPort05EgressMirroring=lte8stSwitchPort05EgressMirroring, lte8stOLT0PON0FecDown=lte8stOLT0PON0FecDown, lte8stSwitchPort03Packets128to255Octets=lte8stSwitchPort03Packets128to255Octets, lte8stSwitchPort06Duplex=lte8stSwitchPort06Duplex, lte8stSwitchPort00BroadcastPacketsReceived=lte8stSwitchPort00BroadcastPacketsReceived, lte8stSwitchPort11Packets65to127Octets=lte8stSwitchPort11Packets65to127Octets, lte8stONTIDStatReceiveUNI1LengthError=lte8stONTIDStatReceiveUNI1LengthError, lte8stSwitchPort05VLAN=lte8stSwitchPort05VLAN, lte8stSwitchPort00StateDuplex=lte8stSwitchPort00StateDuplex, lte8stSwitchPort03Packets256to511Octets=lte8stSwitchPort03Packets256to511Octets, lte8stONTIDConfigTree=lte8stONTIDConfigTree, lte8stSwitchGroup=lte8stSwitchGroup, lte8stSwitchPortsCountersPackets1024toMaxOctets=lte8stSwitchPortsCountersPackets1024toMaxOctets, lte8stSwitchVLANIGMPSnoopingQuerierIP=lte8stSwitchVLANIGMPSnoopingQuerierIP, lte8stOLT3NNI1StatTransmit128to255Byte=lte8stOLT3NNI1StatTransmit128to255Byte, lte8stONTStatReceiveUNI1UndersizeFrames=lte8stONTStatReceiveUNI1UndersizeFrames, lte8stOLT1PON0StatTransmitMACMPCPBytes=lte8stOLT1PON0StatTransmitMACMPCPBytes)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stONTIDStatReceiveUNI0Unicast=lte8stONTIDStatReceiveUNI0Unicast, lte8stOLT0PON0StatTransmitMACOamBytes=lte8stOLT0PON0StatTransmitMACOamBytes, lte8stOLT1PON1StatTransmitMACBroadCast=lte8stOLT1PON1StatTransmitMACBroadCast, lte8stOLT1NNI0FlowControl=lte8stOLT1NNI0FlowControl, lte8stONTIDStatTransmitUNI0128to255Byte=lte8stONTIDStatTransmitUNI0128to255Byte, lte8stSwitchLACPMode=lte8stSwitchLACPMode, SwitchPortSpeed=SwitchPortSpeed, lte8stONTIDStatReceiveUNI1Entry=lte8stONTIDStatReceiveUNI1Entry, lte8stONTIDStatTransmitUNI1Broadcast=lte8stONTIDStatTransmitUNI1Broadcast, lte8stOLT3PON1StatReceiveMACFrames=lte8stOLT3PON1StatReceiveMACFrames, lte8stOLT0PON1FecUp=lte8stOLT0PON1FecUp, lte8stOLT2NNI0StatTransmit65to127Byte=lte8stOLT2NNI0StatTransmit65to127Byte, lte8stSwitchPort03LACPPriority=lte8stSwitchPort03LACPPriority, lte8stOLT2PON0StatTransmitMACBroadCast=lte8stOLT2PON0StatTransmitMACBroadCast, lte8stOLT0PON1StatReceiveMACMulticast=lte8stOLT0PON1StatReceiveMACMulticast, lte8stOLT1PON1StatReceiveMACOAMFrames=lte8stOLT1PON1StatReceiveMACOAMFrames, lte8stOLT1NNI0StatReceiveBroadcast=lte8stOLT1NNI0StatReceiveBroadcast, lte8stSwitchPort03BadFlowControlReceived=lte8stSwitchPort03BadFlowControlReceived, lte8stONTIDPONAutoNegotiate=lte8stONTIDPONAutoNegotiate, lte8stOLT2NNI1StatReceiveFrames=lte8stOLT2NNI1StatReceiveFrames, lte8stOLT0PON0StatReceiveLIFPreFecGoodFrame=lte8stOLT0PON0StatReceiveLIFPreFecGoodFrame, lte8stONTIDStatReceivePONErroredONTDestinedBytes=lte8stONTIDStatReceivePONErroredONTDestinedBytes, lte8stMacIndexNum=lte8stMacIndexNum, lte8stONTConfigUNI1VID=lte8stONTConfigUNI1VID, lte8stONTStateVendorFwRev=lte8stONTStateVendorFwRev, lte8stSwitchPort11VLAN=lte8stSwitchPort11VLAN, lte8stONTIGMPGroupsTable=lte8stONTIGMPGroupsTable, lte8stONTIDConfigMAC=lte8stONTIDConfigMAC, lte8stOLT0PON1=lte8stOLT0PON1, lte8stOLT0PON1StatTransmitMACBroadCast=lte8stOLT0PON1StatTransmitMACBroadCast, lte8stSwitchPort00BadCRC=lte8stSwitchPort00BadCRC, lte8stSNMPUplinkAlarmTrapEnabled=lte8stSNMPUplinkAlarmTrapEnabled, lte8stOLT2PON0StatTransmitLIFLaserTemp=lte8stOLT2PON0StatTransmitLIFLaserTemp, lte8stOLT0PON1StatReceiveLIFPreFecBadFrame=lte8stOLT0PON1StatReceiveLIFPreFecBadFrame, lte8stONTIDStatTransmitPONDroppedBytes=lte8stONTIDStatTransmitPONDroppedBytes, lte8stOLT1NNI1FlowControl=lte8stOLT1NNI1FlowControl, lte8stSwitchPort08DropEvents=lte8stSwitchPort08DropEvents, lte8stONTIDStatReceivePONGreater1518Byte=lte8stONTIDStatReceivePONGreater1518Byte, lte8stOLT3PON0Stat=lte8stOLT3PON0Stat, lte8stOLT3PON0StatReceiveMACOversize=lte8stOLT3PON0StatReceiveMACOversize, lte8stONTIDStatReceivePONMulticast=lte8stONTIDStatReceivePONMulticast, lte8stSwitchPort05Duplex=lte8stSwitchPort05Duplex, lte8stONTIDLink2Mac=lte8stONTIDLink2Mac, lte8stOLT3PON1StatReceiveLIFCodeErr=lte8stOLT3PON1StatReceiveLIFCodeErr, lte8stOLT3PON1StatReceiveMACOAMFrames=lte8stOLT3PON1StatReceiveMACOAMFrames, lte8stOLT2PON0Linked=lte8stOLT2PON0Linked, lte8stOLT2NNI0=lte8stOLT2NNI0, IGMPUnregGroupSettings=IGMPUnregGroupSettings, lte8stOLT3PON0StatTransmitMACOamFrames=lte8stOLT3PON0StatTransmitMACOamFrames, lte8stONTIDUNI0Linked=lte8stONTIDUNI0Linked, lte8stSwitchPort10GoodOctetsReceived=lte8stSwitchPort10GoodOctetsReceived, lte8stSwitchPort10BadOctetsReceived=lte8stSwitchPort10BadOctetsReceived, lte8stONTIDStatReceiveUNI1512to1023Byte=lte8stONTIDStatReceiveUNI1512to1023Byte, lte8stONTStatReceiveUNI0PauseFrames=lte8stONTStatReceiveUNI0PauseFrames, lte8stOLT1NNI0=lte8stOLT1NNI0, lte8stOLT0NNI1StatTransmitMulticast=lte8stOLT0NNI1StatTransmitMulticast, lte8stONTStatReceiveUNI01024to1518Byte=lte8stONTStatReceiveUNI01024to1518Byte, lte8stSwitchPort08BadPacketsReceived=lte8stSwitchPort08BadPacketsReceived, lte8stProfilesPortsUNI1AutomaticLearningEntryLimit=lte8stProfilesPortsUNI1AutomaticLearningEntryLimit, lte8stOLT2NNI0StatReceivePauseFrames=lte8stOLT2NNI0StatReceivePauseFrames, lte8stONTLink0Entry=lte8stONTLink0Entry, lte8stOLT0NNI0StatTransmitCRCGen=lte8stOLT0NNI0StatTransmitCRCGen, lte8stOLT2PON0StatTransmitLIFLaserVCC=lte8stOLT2PON0StatTransmitLIFLaserVCC, lte8stOLT1NNI1Linked=lte8stOLT1NNI1Linked, lte8stOLT2PON1StatTransmitLIFLaserVCC=lte8stOLT2PON1StatTransmitLIFLaserVCC, lte8stSwitchPort08GoodFlowControlFramesReceived=lte8stSwitchPort08GoodFlowControlFramesReceived, lte8stOLT0PON0StatReceiveLIFCRC8=lte8stOLT0PON0StatReceiveLIFCRC8, lte8stOLT2NNI1StatReceive64Byte=lte8stOLT2NNI1StatReceive64Byte, lte8stOLT1PON1StatTransmitLIFLaserBias=lte8stOLT1PON1StatTransmitLIFLaserBias, lte8stSwitchPort11BroadcastPacketsSent=lte8stSwitchPort11BroadcastPacketsSent, lte8stSwitchPort07MacTransmitErrors=lte8stSwitchPort07MacTransmitErrors, lte8stOLT0NNI1StatReceiveUnicast=lte8stOLT0NNI1StatReceiveUnicast, lte8stONTStatReceivePONGreater1518Byte=lte8stONTStatReceivePONGreater1518Byte, lte8stSwitchPort11StateFlowControl=lte8stSwitchPort11StateFlowControl, lte8stSwitchPort05Packets128to255Octets=lte8stSwitchPort05Packets128to255Octets, lte8stSwitchPort04Packets256to511Octets=lte8stSwitchPort04Packets256to511Octets, lte8stOLT1NNI0StatTransmit65to127Byte=lte8stOLT1NNI0StatTransmit65to127Byte, lte8stSwitchPort06BroadcastPacketsReceived=lte8stSwitchPort06BroadcastPacketsReceived, lte8stOLT3PON1StatTransmitLIFLaserPower=lte8stOLT3PON1StatTransmitLIFLaserPower, lte8stSwitchPort08BroadcastPacketsSent=lte8stSwitchPort08BroadcastPacketsSent, lte8stONTPONFlowControl=lte8stONTPONFlowControl, lte8stOLT2PON0StatTransmitMACBytes=lte8stOLT2PON0StatTransmitMACBytes, lte8stSwitchPort09FlowControl=lte8stSwitchPort09FlowControl, lte8stSwitchPortsCountersTable=lte8stSwitchPortsCountersTable, lte8stOLT0NNI1StatReceiveCRCErrors=lte8stOLT0NNI1StatReceiveCRCErrors, lte8stOLT3NNI0StatTransmitBufferUnderrun=lte8stOLT3NNI0StatTransmitBufferUnderrun, lte8stOLT1PON0StatReceiveLIFPreFecBadFrame=lte8stOLT1PON0StatReceiveLIFPreFecBadFrame, lte8stOLT1NNI0StatReceive128to255Byte=lte8stOLT1NNI0StatReceive128to255Byte, lte8stONTIDUNI0Entry=lte8stONTIDUNI0Entry, lte8stSwitchPort05FragmentsReceived=lte8stSwitchPort05FragmentsReceived, lte8stSwitchLACPEnabled=lte8stSwitchLACPEnabled, lte8stProfilesPathEntryID=lte8stProfilesPathEntryID, lte8stProfilesShaperLink1UpstreamBurstMin=lte8stProfilesShaperLink1UpstreamBurstMin, lte8stONTStatReceiveUNI1Mac=lte8stONTStatReceiveUNI1Mac, lte8stOLT0NNI1=lte8stOLT0NNI1, lte8stSwitchPort10State=lte8stSwitchPort10State, lte8stONTIDStatReceiveUNI1128to255Byte=lte8stONTIDStatReceiveUNI1128to255Byte, lte8stSwitchPort00State=lte8stSwitchPort00State, lte8stSwitchPort04StateDuplex=lte8stSwitchPort04StateDuplex, lte8stSwitchPort10Speed=lte8stSwitchPort10Speed, lte8stONTStatReceiveUNI1OversizeFrames=lte8stONTStatReceiveUNI1OversizeFrames, lte8stOLT2PON1StatTransmitMACReport=lte8stOLT2PON1StatTransmitMACReport, lte8stSwitchPort10Collisions=lte8stSwitchPort10Collisions, lte8stOLT0NNI0StatTransmit1024to1518Byte=lte8stOLT0NNI0StatTransmit1024to1518Byte, lte8stOLT0NNI0StatReceiveCRCErrors=lte8stOLT0NNI0StatReceiveCRCErrors, lte8stOLT2PON0StatReceiveLIFFecBlockOk=lte8stOLT2PON0StatReceiveLIFFecBlockOk, lte8stSwitchPort05StateLink=lte8stSwitchPort05StateLink, lte8stOLT3PON0StatReceiveLIFPreFecBadFrame=lte8stOLT3PON0StatReceiveLIFPreFecBadFrame, lte8stONTStatReceivePON256to511Byte=lte8stONTStatReceivePON256to511Byte, lte8stSwitchPort09VLANPVID=lte8stSwitchPort09VLANPVID, lte8stOLT0NNI0Linked=lte8stOLT0NNI0Linked, lte8stProfilesPortsUNI1Duplex=lte8stProfilesPortsUNI1Duplex, lte8stOLT1NNI1StatReceiveBroadcast=lte8stOLT1NNI1StatReceiveBroadcast, lte8stSwitchPort10Enabled=lte8stSwitchPort10Enabled, lte8stOLT1PON0StatReceiveMACMPCPBytes=lte8stOLT1PON0StatReceiveMACMPCPBytes, lte8stProfilesPortsUNI0AutoNegotiation=lte8stProfilesPortsUNI0AutoNegotiation, lte8stOLT1PON1StatReceiveMACDropUngranted=lte8stOLT1PON1StatReceiveMACDropUngranted, lte8stOLT3NNI0StatTransmitMulticast=lte8stOLT3NNI0StatTransmitMulticast, lte8stONTStatReceiveUNI1128to255Byte=lte8stONTStatReceiveUNI1128to255Byte, lte8stOLT1NNI0StatTransmitErroredBytes=lte8stOLT1NNI0StatTransmitErroredBytes, lte8stONTStatReceiveUNI0OversizeFrames=lte8stONTStatReceiveUNI0OversizeFrames, lte8stSwitchPort10VLANFrameTypes=lte8stSwitchPort10VLANFrameTypes, lte8stOLT0PON1StatTransmitLIFLaserTemp=lte8stOLT0PON1StatTransmitLIFLaserTemp, lte8stOLT3PON1SFPModel=lte8stOLT3PON1SFPModel, lte8stOLT0NNI1StatReceive1024to1518Byte=lte8stOLT0NNI1StatReceive1024to1518Byte, lte8stOLT3PON0StatTransmitMACMPCPFrames=lte8stOLT3PON0StatTransmitMACMPCPFrames, lte8stOLT3=lte8stOLT3, lte8stONTIDStatReceiveUNI1CRC32Error=lte8stONTIDStatReceiveUNI1CRC32Error, lte8stOLT1PON0StatTransmitMACBroadCast=lte8stOLT1PON0StatTransmitMACBroadCast, lte8stOLT3PON0StatTransmitMACReport=lte8stOLT3PON0StatTransmitMACReport, lte8stOLT3Group=lte8stOLT3Group, lte8stOLT1NNI1StatReceive256to511Byte=lte8stOLT1NNI1StatReceive256to511Byte, lte8stONTIDStatTransmitPONFrames=lte8stONTIDStatTransmitPONFrames, lte8stSwitchPort11EgressMirroring=lte8stSwitchPort11EgressMirroring, lte8stFan0Operational=lte8stFan0Operational, lte8stOLT3PON0StatReceiveMACMulticast=lte8stOLT3PON0StatReceiveMACMulticast, lte8stSwitchPort06StateSpeed=lte8stSwitchPort06StateSpeed, lte8stConfigMigrate=lte8stConfigMigrate, lte8stSwitchPort06GoodPacketsReceived=lte8stSwitchPort06GoodPacketsReceived, lte8stSwitchPort10GoodPacketsReceived=lte8stSwitchPort10GoodPacketsReceived, lte8stSwitchPort11UnrecogMacControlReceived=lte8stSwitchPort11UnrecogMacControlReceived, PortFrameTypes=PortFrameTypes, lte8stSwitchPort02StateSpeed=lte8stSwitchPort02StateSpeed, lte8stSwitchPort04LACP=lte8stSwitchPort04LACP, lte8stOLT0PON1StatReceiveMACReports=lte8stOLT0PON1StatReceiveMACReports, lte8stOLT0PON0StatTransmitMACRegisterReq=lte8stOLT0PON0StatTransmitMACRegisterReq, lte8stSwitchPort01DropEvents=lte8stSwitchPort01DropEvents, lte8stONTConfigRFOutBlocked=lte8stONTConfigRFOutBlocked, lte8stOLT1PON1StatTransmitLIFLaserVCC=lte8stOLT1PON1StatTransmitLIFLaserVCC, lte8stOLT2NNI1StatTransmit64Byte=lte8stOLT2NNI1StatTransmit64Byte, lte8stProfilesShaperLink0UpstreamBurstMin=lte8stProfilesShaperLink0UpstreamBurstMin, lte8stOLT0PON0StatTransmitMACBroadCast=lte8stOLT0PON0StatTransmitMACBroadCast, lte8stONTFactorySettingsHardwareRevision=lte8stONTFactorySettingsHardwareRevision, lte8stOLT1PON0StatReceiveLIFFecBlockUncorrectable=lte8stOLT1PON0StatReceiveLIFFecBlockUncorrectable, lte8stSwitchPort04VLANFrameTypes=lte8stSwitchPort04VLANFrameTypes, lte8stONTConfigUNI1VIDDefined=lte8stONTConfigUNI1VIDDefined, lte8stOLT0PON1StatReceiveMACOversize=lte8stOLT0PON1StatReceiveMACOversize, lte8stSwitchPort05UndersizePacketsReceived=lte8stSwitchPort05UndersizePacketsReceived, lte8stSNMPFANAlarmTrapEnabled=lte8stSNMPFANAlarmTrapEnabled, lte8stSwitchPort06FragmentsReceived=lte8stSwitchPort06FragmentsReceived, lte8stProfilesIpMulticastEntryID=lte8stProfilesIpMulticastEntryID, lte8stOLT1StateOntCount=lte8stOLT1StateOntCount, lte8stSwitchPort01BroadcastPacketsSent=lte8stSwitchPort01BroadcastPacketsSent, lte8stONTIDConfigUNI0Blocked=lte8stONTIDConfigUNI0Blocked, lte8stOLT3PON0Linked=lte8stOLT3PON0Linked, lte8stONTIDUNI1AutoNegotiate=lte8stONTIDUNI1AutoNegotiate, lte8stSNMPONTAuthAlarmTrapEnabled=lte8stSNMPONTAuthAlarmTrapEnabled, lte8stSwitchPort08=lte8stSwitchPort08, lte8stProfilesPortsUNI1AutoNegotiation=lte8stProfilesPortsUNI1AutoNegotiation, lte8stOLT0PON0StatReceiveLIFFecBlockCorrectable=lte8stOLT0PON0StatReceiveLIFFecBlockCorrectable, lte8stSwitchPort07Packets64Octets=lte8stSwitchPort07Packets64Octets, lte8stMacEntry=lte8stMacEntry, lte8stSwitchPort08UndersizePacketsReceived=lte8stSwitchPort08UndersizePacketsReceived, lte8stSwitchVLANTable=lte8stSwitchVLANTable, lte8stProfilesShaperTable=lte8stProfilesShaperTable, lte8stOLT0NNI1StatTransmitBytes=lte8stOLT0NNI1StatTransmitBytes, lte8stOLT0PON0StatTransmitMACUnicast=lte8stOLT0PON0StatTransmitMACUnicast, lte8stONTRulesUNI0RowStatus=lte8stONTRulesUNI0RowStatus, lte8stOLT3State=lte8stOLT3State, lte8stOLT3PON0StatReceiveLIFPostFecBadFrame=lte8stOLT3PON0StatReceiveLIFPostFecBadFrame, lte8stOLT3NNI0StatReceive512to1023Byte=lte8stOLT3NNI0StatReceive512to1023Byte, lte8stOLT0NNI1StatTransmitBroadCast=lte8stOLT0NNI1StatTransmitBroadCast, lte8stONTStatReceiveUNI0Bytes=lte8stONTStatReceiveUNI0Bytes, lte8stSwitchPort01Duplex=lte8stSwitchPort01Duplex, lte8stOLT2PON1StatTransmitLIFFrames=lte8stOLT2PON1StatTransmitLIFFrames, lte8stONTLink1Table=lte8stONTLink1Table, lte8stOLT2PON0StatTransmitLIFLaserPower=lte8stOLT2PON0StatTransmitLIFLaserPower, lte8stONTIDUNI0Duplex=lte8stONTIDUNI0Duplex, lte8stONTStatReceivePON1024to1518Byte=lte8stONTStatReceivePON1024to1518Byte, lte8stONTStatTransmitUNI0CollisionLate=lte8stONTStatTransmitUNI0CollisionLate, lte8stOLT0PON1SFPModel=lte8stOLT0PON1SFPModel, lte8stOLT1NNI1StatReceiveLineCodeErrors=lte8stOLT1NNI1StatReceiveLineCodeErrors, lte8stSwitchPort07UnrecogMacControlReceived=lte8stSwitchPort07UnrecogMacControlReceived, lte8stOLT0PON0StatTransmitMACGateFrames=lte8stOLT0PON0StatTransmitMACGateFrames, lte8stSwitchPort07IngressMirroring=lte8stSwitchPort07IngressMirroring, lte8stOLT3NNI1StatTransmit=lte8stOLT3NNI1StatTransmit, lte8stOLT2NNI0Desc=lte8stOLT2NNI0Desc, lte8stONTStatReceiveUNI1AlignmentError=lte8stONTStatReceiveUNI1AlignmentError, lte8stSwitchPortsCountersPackets512to1023Octets=lte8stSwitchPortsCountersPackets512to1023Octets, lte8stOLT1NNI1StatTransmitGreater1518Bytes=lte8stOLT1NNI1StatTransmitGreater1518Bytes, lte8stONTIDStatTransmitUNI1PauseFrames=lte8stONTIDStatTransmitUNI1PauseFrames, lte8stONTStatReceiveUNI0UndersizeFrames=lte8stONTStatReceiveUNI0UndersizeFrames, lte8stSwitchPort00VLAN=lte8stSwitchPort00VLAN, lte8stSwitchPort07StateFlowControl=lte8stSwitchPort07StateFlowControl, lte8stOLT1PON0SFPModel=lte8stOLT1PON0SFPModel, lte8stSwitchPort06Packets64Octets=lte8stSwitchPort06Packets64Octets, lte8stSwitchPort08LACP=lte8stSwitchPort08LACP, lte8stONTIDStateOLTId=lte8stONTIDStateOLTId, lte8stSwitchPort07EgressMirroring=lte8stSwitchPort07EgressMirroring, lte8stOLT0PON0StatTransmitLIFFecBlocks=lte8stOLT0PON0StatTransmitLIFFecBlocks, lte8stProfilesShaperLink1DownstreamSchedulerLevelMin=lte8stProfilesShaperLink1DownstreamSchedulerLevelMin, lte8stOLT1NNI1StatReceivePauseFrames=lte8stOLT1NNI1StatReceivePauseFrames, lte8stOLT2PON1StatReceiveMACDropUngranted=lte8stOLT2PON1StatReceiveMACDropUngranted, lte8stSwitchPort01MACReceiveErrors=lte8stSwitchPort01MACReceiveErrors, lte8stOLT2NNI1StatReceive512to1023Byte=lte8stOLT2NNI1StatReceive512to1023Byte, lte8stOLT3NNI1StatTransmitPauseFrames=lte8stOLT3NNI1StatTransmitPauseFrames, lte8stONTRulesUNI1Local=lte8stONTRulesUNI1Local, lte8stOLT0NNI1StatTransmit65to127Byte=lte8stOLT0NNI1StatTransmit65to127Byte, lte8stSwitchPort03GoodOctetsReceived=lte8stSwitchPort03GoodOctetsReceived, lte8stFan2RPM=lte8stFan2RPM, lte8stONTIDStatTransmitUNI1Bytes=lte8stONTIDStatTransmitUNI1Bytes, lte8stONTConfigTree=lte8stONTConfigTree, lte8stONTStat=lte8stONTStat, lte8stONTStatReceiveUNI0256to511Byte=lte8stONTStatReceiveUNI0256to511Byte, lte8stOLT2PON0StatReceiveLIFFrame=lte8stOLT2PON0StatReceiveLIFFrame, lte8stProfilesShaperLink0DownstreamBandwidthMax=lte8stProfilesShaperLink0DownstreamBandwidthMax, lte8stSwitchPort06Packets65to127Octets=lte8stSwitchPort06Packets65to127Octets, lte8stSwitchPort10GoodPacketsSent=lte8stSwitchPort10GoodPacketsSent, lte8stOLT3PON0StatReceiveLIFLaserIdlePower=lte8stOLT3PON0StatReceiveLIFLaserIdlePower, lte8stOLT2NNI1Linked=lte8stOLT2NNI1Linked, lte8stONTPONFecDown=lte8stONTPONFecDown, lte8stONTIDLink3Mac=lte8stONTIDLink3Mac, lte8stOLT0PON1FecDown=lte8stOLT0PON1FecDown, lte8stOLT0PON0StatReceiveLIFErrorPkt=lte8stOLT0PON0StatReceiveLIFErrorPkt, lte8stOLT1PON0StatReceiveMACReportAbort=lte8stOLT1PON0StatReceiveMACReportAbort, lte8stSwitchPort00LACPChannelGroup=lte8stSwitchPort00LACPChannelGroup, lte8stSwitchPort00LACPPriority=lte8stSwitchPort00LACPPriority, lte8stMacONTID=lte8stMacONTID, lte8stOLT1PON0StatReceiveLIFPostFecBadFrame=lte8stOLT1PON0StatReceiveLIFPostFecBadFrame, lte8stSwitchPort05=lte8stSwitchPort05, lte8stSwitchPort05State=lte8stSwitchPort05State, lte8stProfilesPortsUNI0Duplex=lte8stProfilesPortsUNI0Duplex, lte8stOLT1PON0StatReceiveMACLLIDError=lte8stOLT1PON0StatReceiveMACLLIDError, lte8stONTStatReceiveUNI1PauseFrames=lte8stONTStatReceiveUNI1PauseFrames, lte8stOLT3NNI1StatReceiveAlignmentError=lte8stOLT3NNI1StatReceiveAlignmentError, lte8stMacAddress=lte8stMacAddress, lte8stONTConfigLinks=lte8stONTConfigLinks, lte8stOLT0PON0StatReceiveMACBytes=lte8stOLT0PON0StatReceiveMACBytes, lte8stSwitchPort09LACPActivity=lte8stSwitchPort09LACPActivity, lte8stONTStatTransmitUNI0DroppedFrames=lte8stONTStatTransmitUNI0DroppedFrames, lte8stOLT0PON1StatReceiveMACFrames=lte8stOLT0PON1StatReceiveMACFrames, lte8stONTIDStatTransmitUNI01024to1518Byte=lte8stONTIDStatTransmitUNI01024to1518Byte, lte8stSwitchVLANIGMPVersion=lte8stSwitchVLANIGMPVersion, lte8stSwitchPort08MACReceiveErrors=lte8stSwitchPort08MACReceiveErrors)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stONTStatReceivePONErroredONTDestinedBytes=lte8stONTStatReceivePONErroredONTDestinedBytes, lte8stSwitchPort11LACPTimeOut=lte8stSwitchPort11LACPTimeOut, lte8stSwitchPort00OversizePacketsReceived=lte8stSwitchPort00OversizePacketsReceived, lte8stSwitchPort07BadCRC=lte8stSwitchPort07BadCRC, lte8stOLT1NNI1StatTransmitCRCGen=lte8stOLT1NNI1StatTransmitCRCGen, lte8stOLT3NNI1StatReceive64Byte=lte8stOLT3NNI1StatReceive64Byte, lte8stOLT2PON0StatReceiveLIFPostFecGoodFrame=lte8stOLT2PON0StatReceiveLIFPostFecGoodFrame, lte8stOLT0NNI1StatTransmit128to255Byte=lte8stOLT0NNI1StatTransmit128to255Byte, lte8stOLT2PON1StatTransmitMACRegisterReq=lte8stOLT2PON1StatTransmitMACRegisterReq, lte8stOLT3NNI1StatReceiveLineCodeErrors=lte8stOLT3NNI1StatReceiveLineCodeErrors, lte8stTreeStatesTree=lte8stTreeStatesTree, lte8stProfilesPathDescription=lte8stProfilesPathDescription, lte8stOLT3PON0StatReceiveLIFFecCorrectableBytes=lte8stOLT3PON0StatReceiveLIFFecCorrectableBytes, lte8stOLT2NNI1StatTransmitGreater1518Bytes=lte8stOLT2NNI1StatTransmitGreater1518Bytes, lte8stSwitchPort01Packets64Octets=lte8stSwitchPort01Packets64Octets, lte8stOLT2PON1StatTransmitMACFrames=lte8stOLT2PON1StatTransmitMACFrames, lte8stONTIDStatTransmitUNI1Table=lte8stONTIDStatTransmitUNI1Table, lte8stONTIDStatReceiveUNI1UndersizeFrames=lte8stONTIDStatReceiveUNI1UndersizeFrames, lte8stOLT1NNI0StatTransmitBroadCast=lte8stOLT1NNI0StatTransmitBroadCast, lte8stOLT3NNI1Enabled=lte8stOLT3NNI1Enabled, lte8stSwitchPort02BroadcastPacketsSent=lte8stSwitchPort02BroadcastPacketsSent, lte8stSwitchPort06DropEvents=lte8stSwitchPort06DropEvents, lte8stONTIDLink3State=lte8stONTIDLink3State, lte8stOLT2NNI1Desc=lte8stOLT2NNI1Desc, lte8stONTStatTransmitPONDelayedBytes=lte8stONTStatTransmitPONDelayedBytes, lte8stOLT1NNI1=lte8stOLT1NNI1, lte8stConfigMigrateAll=lte8stConfigMigrateAll, lte8stONTStateState=lte8stONTStateState, lte8stOLT2NNI1StatReceive1024to1518Byte=lte8stOLT2NNI1StatReceive1024to1518Byte, lte8stSwitchPort06JabberPacketsReceived=lte8stSwitchPort06JabberPacketsReceived, lte8stONTIDUNI0FlowControl=lte8stONTIDUNI0FlowControl, lte8stSwitchPort03Collisions=lte8stSwitchPort03Collisions, lte8stSwitchPort01Packets65to127Octets=lte8stSwitchPort01Packets65to127Octets, lte8stOLT1NNI0StatTransmitBytes=lte8stOLT1NNI0StatTransmitBytes, lte8stOLT1PON0StatReceiveMACMPCPFrames=lte8stOLT1PON0StatReceiveMACMPCPFrames, lte8stONTIDConfigUNI0VID=lte8stONTIDConfigUNI0VID, lte8stFan0RPM=lte8stFan0RPM, lte8stONTIDStateOLTPort=lte8stONTIDStateOLTPort, lte8stSwitchPort05Packets64Octets=lte8stSwitchPort05Packets64Octets, lte8stOLT1PON0StatTransmitMACFrames=lte8stOLT1PON0StatTransmitMACFrames, lte8stSwitchPort08Packets128to255Octets=lte8stSwitchPort08Packets128to255Octets, lte8stOLT3NNI1StatReceiveUndersizeFrames=lte8stOLT3NNI1StatReceiveUndersizeFrames, lte8stSNMPFlappingAlarmTrapEnabled=lte8stSNMPFlappingAlarmTrapEnabled, lte8stONTConfigType=lte8stONTConfigType, lte8stONTIDStateReconfigure=lte8stONTIDStateReconfigure, lte8stOLT1PON0StatReceiveLIFFrame=lte8stOLT1PON0StatReceiveLIFFrame, lte8stOLT3PON1StatTransmitMACMPCPBytes=lte8stOLT3PON1StatTransmitMACMPCPBytes, lte8stONTIDPONTable=lte8stONTIDPONTable, lte8stSystemCPULoadAverage5Minutes=lte8stSystemCPULoadAverage5Minutes, lte8stOLT1PON1StatReceiveLIFFecBlockUncorrectable=lte8stOLT1PON1StatReceiveLIFFecBlockUncorrectable, lte8stSwitchPort00IngressMirroring=lte8stSwitchPort00IngressMirroring, lte8stSwitchVLANUserPriority=lte8stSwitchVLANUserPriority, lte8stSwitchPort10LACPActivity=lte8stSwitchPort10LACPActivity, lte8stONTIDStatReceiveUNI0512to1023Byte=lte8stONTIDStatReceiveUNI0512to1023Byte, lte8stSwitchPort08JabberPacketsReceived=lte8stSwitchPort08JabberPacketsReceived, lte8stOLT0PON0StatReceiveMACMPCPBytes=lte8stOLT0PON0StatReceiveMACMPCPBytes, lte8stFan3Operational=lte8stFan3Operational, lte8stOLT1Group=lte8stOLT1Group, lte8stOLT2PON0StatReceiveLIFPostFecBadFrame=lte8stOLT2PON0StatReceiveLIFPostFecBadFrame, lte8stONTStatReceiveUNI1Frames=lte8stONTStatReceiveUNI1Frames, lte8stOLT2PON0StatReceiveMACReports=lte8stOLT2PON0StatReceiveMACReports, lte8stOLT3NNI1StatReceiveFrames=lte8stOLT3NNI1StatReceiveFrames, lte8stOLT1NNI0StatTransmitCRCGen=lte8stOLT1NNI0StatTransmitCRCGen, lte8stSwitchPort04GoodOctetsSent=lte8stSwitchPort04GoodOctetsSent, lte8stOLT2NNI1StatReceiveUndersizeFrames=lte8stOLT2NNI1StatReceiveUndersizeFrames, lte8stOLT3PON1StatReceiveLIFFecBlockCorrectable=lte8stOLT3PON1StatReceiveLIFFecBlockCorrectable, lte8stSwitchPort03VLAN=lte8stSwitchPort03VLAN, lte8stSwitchPort00DropEvents=lte8stSwitchPort00DropEvents, lte8stONTIDStatReceivePONFCSErrors=lte8stONTIDStatReceivePONFCSErrors, lte8stSwitchPort09Packets64Octets=lte8stSwitchPort09Packets64Octets, lte8stONTStatTransmitPONUnusedBytes=lte8stONTStatTransmitPONUnusedBytes, lte8stSwitchPort08FragmentsReceived=lte8stSwitchPort08FragmentsReceived, lte8stProfilesShaperLink1UpstreamSchedulerLevelMin=lte8stProfilesShaperLink1UpstreamSchedulerLevelMin, lte8stSwitchPort01BadFlowControlReceived=lte8stSwitchPort01BadFlowControlReceived, lte8stSwitchPort01LateCollisions=lte8stSwitchPort01LateCollisions, lte8stONTFactorySettingsEntry=lte8stONTFactorySettingsEntry, lte8stOLT2PON0FecDown=lte8stOLT2PON0FecDown, lte8stSwitchPortsCountersEntry=lte8stSwitchPortsCountersEntry, lte8stOLT0NNI1Enabled=lte8stOLT0NNI1Enabled, lte8stSwitchVLANPort10=lte8stSwitchVLANPort10, lte8stSwitchPort07FlowControl=lte8stSwitchPort07FlowControl, lte8stOLT0PON1StatTransmitMACFrames=lte8stOLT0PON1StatTransmitMACFrames, lte8stSwitchPort03StateDuplex=lte8stSwitchPort03StateDuplex, lte8stSwitchPort07JabberPacketsReceived=lte8stSwitchPort07JabberPacketsReceived, lte8stOLT0PON0=lte8stOLT0PON0, lte8stSwitchPort03Enabled=lte8stSwitchPort03Enabled, lte8stSwitchPort02UndersizePacketsReceived=lte8stSwitchPort02UndersizePacketsReceived, lte8stProfilesPortsUNI1MinimumGuaranteedMACLearningLimit=lte8stProfilesPortsUNI1MinimumGuaranteedMACLearningLimit, lte8stOLT3PON1StatReceiveMACMPCPBytes=lte8stOLT3PON1StatReceiveMACMPCPBytes, lte8stSwitchPort02StateFlowControl=lte8stSwitchPort02StateFlowControl, lte8stOLT3PON0StatTransmitMACOamBytes=lte8stOLT3PON0StatTransmitMACOamBytes, lte8stOLT2PON0StatReceiveLIFFecBlockUncorrectable=lte8stOLT2PON0StatReceiveLIFFecBlockUncorrectable, lte8stONTStatReceiveUNI0Table=lte8stONTStatReceiveUNI0Table, lte8stONTIDConfigState=lte8stONTIDConfigState, lte8stSwitchPort03LACPActivity=lte8stSwitchPort03LACPActivity, lte8stSwitchPortsCountersMACReceiveErrors=lte8stSwitchPortsCountersMACReceiveErrors, lte8stProfilesShaperEntryID=lte8stProfilesShaperEntryID, lte8stOLT2NNI1StatReceiveMulticast=lte8stOLT2NNI1StatReceiveMulticast, lte8stSwitchPort10BroadcastPacketsSent=lte8stSwitchPort10BroadcastPacketsSent, lte8stOLT1NNI0StatReceiveLineCodeErrors=lte8stOLT1NNI0StatReceiveLineCodeErrors, lte8stOLT3NNI1StatTransmitFrames=lte8stOLT3NNI1StatTransmitFrames, lte8stSwitchPort00AutoNegotiate=lte8stSwitchPort00AutoNegotiate, lte8stSwitchPort00GoodPacketsSent=lte8stSwitchPort00GoodPacketsSent, lte8stProfilesShaperLink1UpstreamBurstMax=lte8stProfilesShaperLink1UpstreamBurstMax, lte8stSwitchPort01MulticastPacketsReceived=lte8stSwitchPort01MulticastPacketsReceived, lte8stSwitchPort07LACP=lte8stSwitchPort07LACP, lte8stOLT0PON0StatReceiveLIFPreFecBadFrame=lte8stOLT0PON0StatReceiveLIFPreFecBadFrame, lte8stOLT0PON1Linked=lte8stOLT0PON1Linked, OntPort=OntPort, lte8stOLT2PON0StatTransmitMACMPCPDiscoveryWindows=lte8stOLT2PON0StatTransmitMACMPCPDiscoveryWindows, lte8stONTIDUNI1Speed=lte8stONTIDUNI1Speed, lte8stSwitchPort11Duplex=lte8stSwitchPort11Duplex, lte8stOLT0NNI1Stat=lte8stOLT0NNI1Stat, lte8stONTIDStatReceiveUNI0AlignmentError=lte8stONTIDStatReceiveUNI0AlignmentError, lte8stOLT0PON1StatReceiveLIFCodeErr=lte8stOLT0PON1StatReceiveLIFCodeErr, lte8stOLT0NNI1StatReceive64Byte=lte8stOLT0NNI1StatReceive64Byte, lte8stSwitchPort10Packets1024toMaxOctets=lte8stSwitchPort10Packets1024toMaxOctets, lte8stOLT1PON1StatReceiveLIFPostFecGoodFrame=lte8stOLT1PON1StatReceiveLIFPostFecGoodFrame, lte8stOLT2NNI0StatTransmitBytes=lte8stOLT2NNI0StatTransmitBytes, lte8stOLT3NNI0StatTransmit=lte8stOLT3NNI0StatTransmit, lte8stONTLink3Llid=lte8stONTLink3Llid, lte8stONTStatTransmitUNI0Greater1518Byte=lte8stONTStatTransmitUNI0Greater1518Byte, lte8stONTIDConfigDescription=lte8stONTIDConfigDescription, lte8stOLT2PON0StatReceiveMACOAMBytes=lte8stOLT2PON0StatReceiveMACOAMBytes, lte8stSwitchPort06Enabled=lte8stSwitchPort06Enabled, lte8stONTIDStatTransmitPONDroppedFrames=lte8stONTIDStatTransmitPONDroppedFrames, lte8stOLT3PON1StatReceiveMACMulticast=lte8stOLT3PON1StatReceiveMACMulticast, lte8stOLT3PON1StatTransmitMACOamFrames=lte8stOLT3PON1StatTransmitMACOamFrames, lte8stOLT3PON1StatReceiveMACMPCPFrames=lte8stOLT3PON1StatReceiveMACMPCPFrames, lte8stOLT2PON0StatReceiveLIFCRC8=lte8stOLT2PON0StatReceiveLIFCRC8, lte8stONTIDStatTransmitUNI0Bytes=lte8stONTIDStatTransmitUNI0Bytes, lte8stOLT1PON0StatTransmitLIFLaserPower=lte8stOLT1PON0StatTransmitLIFLaserPower, lte8stSwitchPort08BadFlowControlReceived=lte8stSwitchPort08BadFlowControlReceived, lte8stOLT3NNI0AutoNegotiate=lte8stOLT3NNI0AutoNegotiate, lte8stONTIDConfigType=lte8stONTIDConfigType, lte8stOLT0NNI1StatReceiveUndersizeFrames=lte8stOLT0NNI1StatReceiveUndersizeFrames, lte8stSwitchPort02IngressMirroring=lte8stSwitchPort02IngressMirroring, lte8stONTLink2Entry=lte8stONTLink2Entry, lte8stSwitchPort07Counters=lte8stSwitchPort07Counters, lte8stOLT2NNI1Stat=lte8stOLT2NNI1Stat, lte8stONTConfigRulesProfile=lte8stONTConfigRulesProfile, lte8stONTRulesPONTable=lte8stONTRulesPONTable, lte8stOLT2PON0StatTransmitMACOamBytes=lte8stOLT2PON0StatTransmitMACOamBytes, lte8stOLT3NNI1StatReceive256to511Byte=lte8stOLT3NNI1StatReceive256to511Byte, lte8stSwitchPort07BroadcastPacketsReceived=lte8stSwitchPort07BroadcastPacketsReceived, lte8stOLT2NNI0StatReceiveBytes=lte8stOLT2NNI0StatReceiveBytes, lte8stSwitchPort08Collisions=lte8stSwitchPort08Collisions, lte8stONTUNI1AutoNegotiate=lte8stONTUNI1AutoNegotiate, lte8stONTStatTransmitPONDroppedBytes=lte8stONTStatTransmitPONDroppedBytes, lte8stSwitchPort09StateSpeed=lte8stSwitchPort09StateSpeed, lte8stSwitchPort05GoodOctetsSent=lte8stSwitchPort05GoodOctetsSent, lte8stOLT0PON1StatReceiveMACOAMFrames=lte8stOLT0PON1StatReceiveMACOAMFrames, lte8stSwitchPort08GoodOctetsSent=lte8stSwitchPort08GoodOctetsSent, lte8stONTStatTransmitPONBytes=lte8stONTStatTransmitPONBytes, lte8stOLT0PON0AutoNegotiate=lte8stOLT0PON0AutoNegotiate, lte8stOLT2PON1StatReceiveMACOversize=lte8stOLT2PON1StatReceiveMACOversize, lte8stOLT2NNI1StatReceive256to511Byte=lte8stOLT2NNI1StatReceive256to511Byte, lte8stOLT2PON0StatTransmit=lte8stOLT2PON0StatTransmit, lte8stONTUNI1Desc=lte8stONTUNI1Desc, lte8stSwitchPort10GoodOctetsSent=lte8stSwitchPort10GoodOctetsSent, lte8stOLT2PON0AutoNegotiate=lte8stOLT2PON0AutoNegotiate, lte8stSwitchPort10LACPTimeOut=lte8stSwitchPort10LACPTimeOut, lte8stSwitchPort00UndersizePacketsReceived=lte8stSwitchPort00UndersizePacketsReceived, lte8stProfilesPortsUNI1Enabled=lte8stProfilesPortsUNI1Enabled, lte8stOLT3NNI1StatTransmitUnicast=lte8stOLT3NNI1StatTransmitUnicast, lte8stOLT2NNI1StatReceiveBytes=lte8stOLT2NNI1StatReceiveBytes, lte8stSwitchPort02LACPPriority=lte8stSwitchPort02LACPPriority, lte8stONTStatReceiveUNI0LengthError=lte8stONTStatReceiveUNI0LengthError, lte8stSwitchPort03UndersizePacketsReceived=lte8stSwitchPort03UndersizePacketsReceived, lte8stOLT0PON1StatReceiveLIFFrame=lte8stOLT0PON1StatReceiveLIFFrame, lte8stSwitchPort01GoodPacketsReceived=lte8stSwitchPort01GoodPacketsReceived, lte8stSwitchPort10StateLink=lte8stSwitchPort10StateLink, lte8stProfilesShaperLink0DownstreamBurstMax=lte8stProfilesShaperLink0DownstreamBurstMax, lte8stOLT2PON0StatReceiveMACOversize=lte8stOLT2PON0StatReceiveMACOversize, lte8stONTUNI0Table=lte8stONTUNI0Table, lte8stSwitchPort05Collisions=lte8stSwitchPort05Collisions, lte8stOLT0NNI0StatTransmit512to1023Byte=lte8stOLT0NNI0StatTransmit512to1023Byte, lte8stOLT2PON0StatReceiveLIFLaserIdlePower=lte8stOLT2PON0StatReceiveLIFLaserIdlePower, lte8stOLT1NNI1Enabled=lte8stOLT1NNI1Enabled, PortTagged=PortTagged, lte8stOLT2PON1Enabled=lte8stOLT2PON1Enabled, lte8stOLT0NNI1StatReceiveMulticast=lte8stOLT0NNI1StatReceiveMulticast, lte8stONTFactorySettingsTable=lte8stONTFactorySettingsTable, lte8stONTIDStatReceivePONTable=lte8stONTIDStatReceivePONTable, lte8stOLT1PON0FecDown=lte8stOLT1PON0FecDown, lte8stOLT0PON1StatReceiveLIFFecBlockOk=lte8stOLT0PON1StatReceiveLIFFecBlockOk, lte8stONTStatReceivePONBytes=lte8stONTStatReceivePONBytes, lte8stProfilesPortsUNI0AutomaticLearningEntryLimit=lte8stProfilesPortsUNI0AutomaticLearningEntryLimit, lte8stSwitchPort09UndersizePacketsReceived=lte8stSwitchPort09UndersizePacketsReceived, lte8stSwitchPort11Packets64Octets=lte8stSwitchPort11Packets64Octets, lte8stSwitchPort03BroadcastPacketsReceived=lte8stSwitchPort03BroadcastPacketsReceived, lte8stSwitchPort01StateSpeed=lte8stSwitchPort01StateSpeed, lte8stOLT2PON0FecUp=lte8stOLT2PON0FecUp, lte8stSwitchPort06Packets1024toMaxOctets=lte8stSwitchPort06Packets1024toMaxOctets, lte8stONTUNI0AutoNegotiate=lte8stONTUNI0AutoNegotiate, lte8stSwitchPort00VLANIngressFiltering=lte8stSwitchPort00VLANIngressFiltering, lte8stOLT0NNI1StatReceive65to127Byte=lte8stOLT0NNI1StatReceive65to127Byte, lte8stSwitchPort02StateLink=lte8stSwitchPort02StateLink, lte8stOLT3PON1StatTransmitMACUnicast=lte8stOLT3PON1StatTransmitMACUnicast, lte8stOLT0NNI1StatTransmit512to1023Byte=lte8stOLT0NNI1StatTransmit512to1023Byte, PYSNMP_MODULE_ID=lte8st, lte8stOLT1PON1StatTransmitMACGateFrames=lte8stOLT1PON1StatTransmitMACGateFrames, lte8stOLT3PON1StatReceiveLIFPostFecBadFrame=lte8stOLT3PON1StatReceiveLIFPostFecBadFrame, lte8stOLT0PON1StatTransmitMACUnicast=lte8stOLT0PON1StatTransmitMACUnicast, lte8stSwitchPort08LACPPriority=lte8stSwitchPort08LACPPriority, lte8stOLT0NNI1Duplex=lte8stOLT0NNI1Duplex, lte8stOLT2PON0Speed=lte8stOLT2PON0Speed, lte8stOLT2PON1SFPVendor=lte8stOLT2PON1SFPVendor, lte8stSwitchPort09GoodPacketsReceived=lte8stSwitchPort09GoodPacketsReceived, lte8stSystemGateway=lte8stSystemGateway, lte8stSwitchPort00MulticastPacketsReceived=lte8stSwitchPort00MulticastPacketsReceived, lte8stSwitchPort08LACPTimeOut=lte8stSwitchPort08LACPTimeOut, lte8stOLT3PON0StatReceiveLIFPreFecGoodFrame=lte8stOLT3PON0StatReceiveLIFPreFecGoodFrame, lte8stSwitchPort09Packets256to511Octets=lte8stSwitchPort09Packets256to511Octets, lte8stOLT1PON1StatReceiveMACCRC32=lte8stOLT1PON1StatReceiveMACCRC32, lte8stSwitchPort08Packets64Octets=lte8stSwitchPort08Packets64Octets, lte8stOLT0PON1StatTransmitMACBytes=lte8stOLT0PON1StatTransmitMACBytes, lte8stOLT3PON0StatTransmitMACBroadCast=lte8stOLT3PON0StatTransmitMACBroadCast, lte8stOLT1NNI1StatTransmitErroredBytes=lte8stOLT1NNI1StatTransmitErroredBytes, lte8stSwitchPort03IngressMirroring=lte8stSwitchPort03IngressMirroring, lte8stONTIDConfigRFOutBlocked=lte8stONTIDConfigRFOutBlocked, lte8stOLT2NNI0StatReceiveErroredBytes=lte8stOLT2NNI0StatReceiveErroredBytes, lte8stOLT0PON1StatTransmitMACMPCPDiscoveryWindows=lte8stOLT0PON1StatTransmitMACMPCPDiscoveryWindows, lte8stOLT3PON0StatReceiveMACMPCPFrames=lte8stOLT3PON0StatReceiveMACMPCPFrames, lte8stSwitchPort07GoodPacketsSent=lte8stSwitchPort07GoodPacketsSent, lte8stProfilesPortsUNI0MinimumGuaranteedMACLearningLimit=lte8stProfilesPortsUNI0MinimumGuaranteedMACLearningLimit, lte8stSwitchPortsCountersJabberPacketsReceived=lte8stSwitchPortsCountersJabberPacketsReceived, lte8stSwitchVLANPort05=lte8stSwitchVLANPort05, lte8stSwitchPort00GoodPacketsReceived=lte8stSwitchPort00GoodPacketsReceived, lte8stOLT2NNI0StatReceiveFrames=lte8stOLT2NNI0StatReceiveFrames, lte8stSNMPEponOkTrapEnabled=lte8stSNMPEponOkTrapEnabled, lte8stOLT1PON1AutoNegotiate=lte8stOLT1PON1AutoNegotiate, lte8stSwitchPort07VLAN=lte8stSwitchPort07VLAN, lte8stOLT1NNI1StatReceiveErroredBytes=lte8stOLT1NNI1StatReceiveErroredBytes, lte8stOLT2NNI1StatTransmitCRCGen=lte8stOLT2NNI1StatTransmitCRCGen, lte8stONTLink0Table=lte8stONTLink0Table, lte8stOLT1NNI0Desc=lte8stOLT1NNI0Desc, lte8stSwitchPort08State=lte8stSwitchPort08State, lte8stSwitchPort08StateError=lte8stSwitchPort08StateError, lte8stONTIDStateType=lte8stONTIDStateType, lte8stSwitchPort00BadPacketsReceived=lte8stSwitchPort00BadPacketsReceived, lte8stONTIDStatTransmitUNI165to127Byte=lte8stONTIDStatTransmitUNI165to127Byte, lte8stOLT1NNI0StatReceive=lte8stOLT1NNI0StatReceive, lte8stONTIDStatReceiveUNI0Table=lte8stONTIDStatReceiveUNI0Table, lte8stSwitchPort00BadOctetsReceived=lte8stSwitchPort00BadOctetsReceived, lte8stOLT1NNI1StatReceiveMulticast=lte8stOLT1NNI1StatReceiveMulticast, lte8stOLT3NNI1StatReceive=lte8stOLT3NNI1StatReceive, lte8stSwitchPort00StateLink=lte8stSwitchPort00StateLink, lte8stONTStatReceiveUNI0128to255Byte=lte8stONTStatReceiveUNI0128to255Byte, lte8stSwitchPort02EgressMirroring=lte8stSwitchPort02EgressMirroring, lte8stSwitchPort00Packets64Octets=lte8stSwitchPort00Packets64Octets, lte8stOLT0PON0Enabled=lte8stOLT0PON0Enabled, lte8stOLT3PON1StatTransmitMACMPCPFrames=lte8stOLT3PON1StatTransmitMACMPCPFrames, lte8stOLT3PON1StatReceiveLIFByte=lte8stOLT3PON1StatReceiveLIFByte)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stONTStatReceiveUNI1Multicast=lte8stONTStatReceiveUNI1Multicast, lte8stSwitchPort10GoodFlowControlFramesReceived=lte8stSwitchPort10GoodFlowControlFramesReceived, lte8stSwitchPortsCountersID=lte8stSwitchPortsCountersID, lte8stONTStatTransmitPONBroadcast=lte8stONTStatTransmitPONBroadcast, lte8stSwitchPort10AutoNegotiate=lte8stSwitchPort10AutoNegotiate, lte8stOLT0PON0StatReceiveLIFByte=lte8stOLT0PON0StatReceiveLIFByte, lte8stONTIDStatReceiveUNI0Broadcast=lte8stONTIDStatReceiveUNI0Broadcast, lte8stSwitchVLANPort02=lte8stSwitchVLANPort02, lte8stOLT1NNI0StatReceiveUnicast=lte8stOLT1NNI0StatReceiveUnicast, lte8stSystem=lte8stSystem, lte8stOLT3PON0StatReceiveMACRegisterReq=lte8stOLT3PON0StatReceiveMACRegisterReq, lte8stSwitchPort00EgressMirroring=lte8stSwitchPort00EgressMirroring, lte8stOLT0NNI0StatTransmitFrames=lte8stOLT0NNI0StatTransmitFrames, lte8stSwitchPort00Speed=lte8stSwitchPort00Speed, lte8stSNMPRAMAlarmTrapEnabled=lte8stSNMPRAMAlarmTrapEnabled, lte8stONTLink2Llid=lte8stONTLink2Llid, lte8stOLT1NNI0StatReceiveFrames=lte8stOLT1NNI0StatReceiveFrames, lte8stONTIDStatTransmitUNI1DroppedFrames=lte8stONTIDStatTransmitUNI1DroppedFrames, lte8stOLT1NNI1StatTransmit512to1023Byte=lte8stOLT1NNI1StatTransmit512to1023Byte, lte8stOLT2PON0StatTransmitMACOamFrames=lte8stOLT2PON0StatTransmitMACOamFrames, lte8stOLT1PON1StatReceiveMACMPCPBytes=lte8stOLT1PON1StatReceiveMACMPCPBytes, lte8stSwitchMirroringEgressAnalyser=lte8stSwitchMirroringEgressAnalyser, lte8stONTStatReceivePON512to1023Byte=lte8stONTStatReceivePON512to1023Byte, lte8stONTIDStatTransmitPONBroadcast=lte8stONTIDStatTransmitPONBroadcast, lte8stSNMPOpticalAlarmTrapEnabled=lte8stSNMPOpticalAlarmTrapEnabled, lte8stOLT2PON1StatReceiveLIFPreFecBadFrame=lte8stOLT2PON1StatReceiveLIFPreFecBadFrame, lte8stOLT3PON0ONTCount=lte8stOLT3PON0ONTCount, lte8stSwitchPort06MulticastPacketsReceived=lte8stSwitchPort06MulticastPacketsReceived, lte8stONTIDLink3Table=lte8stONTIDLink3Table, lte8stONTPONAutoNegotiate=lte8stONTPONAutoNegotiate, lte8stSwitchPorts=lte8stSwitchPorts, lte8stOLT1PON1StatReceiveMACRegisterAck=lte8stOLT1PON1StatReceiveMACRegisterAck, lte8stSwitchVLANPort09=lte8stSwitchVLANPort09, lte8stOLT0=lte8stOLT0, lte8stONTStatTransmitPONMac=lte8stONTStatTransmitPONMac, lte8stSwitchPort02GoodOctetsReceived=lte8stSwitchPort02GoodOctetsReceived, lte8stOLT0PON0StatTransmitMACBytes=lte8stOLT0PON0StatTransmitMACBytes, lte8stOLT1State=lte8stOLT1State, lte8stONTStatReceivePONInvalidSLDFrames=lte8stONTStatReceivePONInvalidSLDFrames, lte8stONTIDStatReceiveUNI0PauseFrames=lte8stONTIDStatReceiveUNI0PauseFrames, lte8stOLT1NNI1StatTransmitBytes=lte8stOLT1NNI1StatTransmitBytes, lte8stSwitchPort01FragmentsReceived=lte8stSwitchPort01FragmentsReceived, lte8stOLT0PON1StatReceiveLIFPreFecGoodFrame=lte8stOLT0PON1StatReceiveLIFPreFecGoodFrame, lte8stOLT1NNI0StatTransmit=lte8stOLT1NNI0StatTransmit, lte8stOLT1NNI1StatTransmit65to127Byte=lte8stOLT1NNI1StatTransmit65to127Byte, lte8stProfilesPortsTable=lte8stProfilesPortsTable, lte8stONTIDStatReceiveUNI1Table=lte8stONTIDStatReceiveUNI1Table, lte8stSwitchPort11StateError=lte8stSwitchPort11StateError, lte8stONTIDStateTable=lte8stONTIDStateTable, lte8stOLT1PON0StatTransmitMACMPCPDiscoveryWindows=lte8stOLT1PON0StatTransmitMACMPCPDiscoveryWindows, lte8stOLT3PON1FecDown=lte8stOLT3PON1FecDown, lte8stOLT3PON0Desc=lte8stOLT3PON0Desc, lte8stOLT3PON1StatTransmitMACBroadCast=lte8stOLT3PON1StatTransmitMACBroadCast, lte8stOLT3NNI0StatReceive1024to1518Byte=lte8stOLT3NNI0StatReceive1024to1518Byte, lte8stOLT1PON1StatReceiveLIFErrorPkt=lte8stOLT1PON1StatReceiveLIFErrorPkt, lte8stOLT3NNI1StatReceiveGreater1518Byte=lte8stOLT3NNI1StatReceiveGreater1518Byte, lte8stOLT2StateState=lte8stOLT2StateState, lte8stOLT3PON1StatReceiveLIFPreFecGoodFrame=lte8stOLT3PON1StatReceiveLIFPreFecGoodFrame, lte8stONTStatTransmitUNI1256to511Byte=lte8stONTStatTransmitUNI1256to511Byte, lte8stOLT2NNI0StatTransmit64Byte=lte8stOLT2NNI0StatTransmit64Byte, lte8stOLT0PON0StatReceiveMACReports=lte8stOLT0PON0StatReceiveMACReports, lte8stSwitchPort03StateSpeed=lte8stSwitchPort03StateSpeed, lte8stSwitchPort01=lte8stSwitchPort01, lte8stONTIDLink2Table=lte8stONTIDLink2Table, lte8stSwitchPort06Packets512to1023Octets=lte8stSwitchPort06Packets512to1023Octets, lte8stOLT3NNI1StatReceiveOversizeFrames=lte8stOLT3NNI1StatReceiveOversizeFrames, lte8stONTUNI0Entry=lte8stONTUNI0Entry, lte8stOLT3NNI0StatReceiveFrames=lte8stOLT3NNI0StatReceiveFrames, lte8stSwitchPortsCountersUnrecogMacControlReceived=lte8stSwitchPortsCountersUnrecogMacControlReceived, lte8stONTIDStatTransmitUNI0PauseFrames=lte8stONTIDStatTransmitUNI0PauseFrames, lte8stOLT2PON0StatTransmitLIFBytes=lte8stOLT2PON0StatTransmitLIFBytes, lte8stSwitchPort07Enabled=lte8stSwitchPort07Enabled, lte8stSNMPLoadAverageAlarmTrapEnabled=lte8stSNMPLoadAverageAlarmTrapEnabled, lte8stSwitchPort00Collisions=lte8stSwitchPort00Collisions, LTEExtObjectState=LTEExtObjectState, lte8stOLT0NNI0StatReceive65to127Byte=lte8stOLT0NNI0StatReceive65to127Byte, lte8stSwitchPort00StateError=lte8stSwitchPort00StateError, lte8stOLT3NNI1StatReceiveMulticast=lte8stOLT3NNI1StatReceiveMulticast, lte8stSwitchPort00Packets1024toMaxOctets=lte8stSwitchPort00Packets1024toMaxOctets, lte8stOLT3PON0SFPModel=lte8stOLT3PON0SFPModel, lte8stSwitchPort08Enabled=lte8stSwitchPort08Enabled, lte8stSwitchPort10StateFlowControl=lte8stSwitchPort10StateFlowControl, lte8stOLT2NNI1StatTransmit1024to1518Byte=lte8stOLT2NNI1StatTransmit1024to1518Byte, lte8stSwitchPort00StateSpeed=lte8stSwitchPort00StateSpeed, lte8stONTStatReceivePONDelayMax=lte8stONTStatReceivePONDelayMax, lte8stSwitchPort04BroadcastPacketsSent=lte8stSwitchPort04BroadcastPacketsSent, lte8stSwitchPort08Speed=lte8stSwitchPort08Speed, lte8stOLT3PON1StatReceiveLIFErrorPkt=lte8stOLT3PON1StatReceiveLIFErrorPkt, lte8stOLT2PON1StatReceiveLIFPostFecBadFrame=lte8stOLT2PON1StatReceiveLIFPostFecBadFrame, lte8stSwitchPort11MulticastPacketsSent=lte8stSwitchPort11MulticastPacketsSent, lte8stOLT1PON1StatReceiveMACUnicast=lte8stOLT1PON1StatReceiveMACUnicast, lte8stONTStatReceivePONEntry=lte8stONTStatReceivePONEntry, lte8stSystemManagementNetMask=lte8stSystemManagementNetMask, lte8stONTStatTransmitPON512to1023Byte=lte8stONTStatTransmitPON512to1023Byte, lte8stProfilesPortsDescription=lte8stProfilesPortsDescription, lte8stONTIDStatTransmitUNI0Table=lte8stONTIDStatTransmitUNI0Table, OLTPortSpeed=OLTPortSpeed, lte8stSwitchPort04AutoNegotiate=lte8stSwitchPort04AutoNegotiate, lte8stONTStatReceivePON65to127Byte=lte8stONTStatReceivePON65to127Byte, lte8stSwitchPort01GoodOctetsSent=lte8stSwitchPort01GoodOctetsSent, lte8stSwitchPort09AutoNegotiate=lte8stSwitchPort09AutoNegotiate, lte8stONTIDPONFecUp=lte8stONTIDPONFecUp, lte8stSwitchPort03BroadcastPacketsSent=lte8stSwitchPort03BroadcastPacketsSent, lte8stONTIDStatTransmitUNI0CollisionSingle=lte8stONTIDStatTransmitUNI0CollisionSingle, lte8stSwitchPort11BroadcastPacketsReceived=lte8stSwitchPort11BroadcastPacketsReceived, lte8stOLT0NNI0StatTransmit64Byte=lte8stOLT0NNI0StatTransmit64Byte, lte8stOLT3NNI1StatTransmit64Byte=lte8stOLT3NNI1StatTransmit64Byte, lte8stONTIDStatTransmitPONGreater1518Byte=lte8stONTIDStatTransmitPONGreater1518Byte, lte8stSwitchPort03StateLink=lte8stSwitchPort03StateLink, lte8stSystemCPULoadAverage1Minute=lte8stSystemCPULoadAverage1Minute, lte8stOLT0PON1StatTransmitMACGateFrames=lte8stOLT0PON1StatTransmitMACGateFrames, lte8stONTIDStatTransmitUNI1CollisionExcessive=lte8stONTIDStatTransmitUNI1CollisionExcessive, lte8stOLT0PON0StatReceiveLIFCodeErr=lte8stOLT0PON0StatReceiveLIFCodeErr, lte8stSwitchPort04VLANIngressFiltering=lte8stSwitchPort04VLANIngressFiltering, lte8stONTStatTransmitPONTable=lte8stONTStatTransmitPONTable, lte8stOLT0PON1StatReceiveMACMPCPBytes=lte8stOLT0PON1StatReceiveMACMPCPBytes, lte8stSwitchPort06VLAN=lte8stSwitchPort06VLAN, lte8stSwitchPort09LACPPriority=lte8stSwitchPort09LACPPriority, lte8stSwitchVLANIGMPSnoopingQueryResponceInterval=lte8stSwitchVLANIGMPSnoopingQueryResponceInterval, lte8stSwitchPort01Speed=lte8stSwitchPort01Speed, lte8stOLT3NNI1StatTransmitBroadCast=lte8stOLT3NNI1StatTransmitBroadCast, lte8stONTConfigConfigChangesCount=lte8stONTConfigConfigChangesCount, lte8stSwitchPort00GoodOctetsReceived=lte8stSwitchPort00GoodOctetsReceived, lte8stONTIDPONFecDown=lte8stONTIDPONFecDown, lte8stProfilesPortsUNI0LearnedEntryAgeLimit=lte8stProfilesPortsUNI0LearnedEntryAgeLimit, lte8stSwitchPort03Duplex=lte8stSwitchPort03Duplex, lte8stONTStatTransmitUNI0512to1023Byte=lte8stONTStatTransmitUNI0512to1023Byte, lte8stONTStateMac=lte8stONTStateMac, lte8stONTLink1Mac=lte8stONTLink1Mac, lte8stProfilesShaperLink0Enabled=lte8stProfilesShaperLink0Enabled, lte8stONTStatTransmitUNI1Multicast=lte8stONTStatTransmitUNI1Multicast, lte8stSNMPOpticalOkTrapEnabled=lte8stSNMPOpticalOkTrapEnabled, lte8stOLT2StateFwRev=lte8stOLT2StateFwRev, lte8stOLT2PON1StatReceiveMACRegisterReq=lte8stOLT2PON1StatReceiveMACRegisterReq, lte8stOLT2PON1StatTransmitMACRegisterAck=lte8stOLT2PON1StatTransmitMACRegisterAck, lte8stOLT3NNI0StatTransmit512to1023Byte=lte8stOLT3NNI0StatTransmit512to1023Byte, lte8stONTStatTransmitUNI1CollisionSingle=lte8stONTStatTransmitUNI1CollisionSingle, lte8stSwitchPort08OversizePacketsReceived=lte8stSwitchPort08OversizePacketsReceived, lte8stOLT1PON1StatReceiveLIFCodeErr=lte8stOLT1PON1StatReceiveLIFCodeErr, lte8stONTStatReceiveUNI0Mac=lte8stONTStatReceiveUNI0Mac, lte8stOLT1PON0StatReceiveLIFByte=lte8stOLT1PON0StatReceiveLIFByte, lte8stProfilesShaperLink1DownstreamBurstMin=lte8stProfilesShaperLink1DownstreamBurstMin, lte8stONTStatTransmitPONLaserVCC=lte8stONTStatTransmitPONLaserVCC, lte8stSwitchPort11Packets256to511Octets=lte8stSwitchPort11Packets256to511Octets, lte8stOLT2NNI1StatTransmitFrames=lte8stOLT2NNI1StatTransmitFrames, lte8stONTStatReceiveUNI0AlignmentError=lte8stONTStatReceiveUNI0AlignmentError, lte8stSwitchPort10UnrecogMacControlReceived=lte8stSwitchPort10UnrecogMacControlReceived, lte8stOLT2PON1StatReceiveMACCRC32=lte8stOLT2PON1StatReceiveMACCRC32, lte8stONTRulesUNI1RowStatus=lte8stONTRulesUNI1RowStatus, lte8stFan1RPM=lte8stFan1RPM, lte8stOLT3NNI0StatTransmitFrames=lte8stOLT3NNI0StatTransmitFrames, lte8stSwitchPort00=lte8stSwitchPort00, lte8stONTConfigSecret=lte8stONTConfigSecret, lte8stONTIDStatTransmitUNI1Unicast=lte8stONTIDStatTransmitUNI1Unicast, lte8stOLT3PON1StatTransmitMACOamBytes=lte8stOLT3PON1StatTransmitMACOamBytes, lte8stONTUNI1FlowControl=lte8stONTUNI1FlowControl, lte8stOLT2PON0StatTransmitMACMultiCast=lte8stOLT2PON0StatTransmitMACMultiCast, lte8stSwitchPort10StateSpeed=lte8stSwitchPort10StateSpeed, lte8stOLT0PON1StatReceiveLIFFecBlockCorrectable=lte8stOLT0PON1StatReceiveLIFFecBlockCorrectable, lte8stONTConfigPathProfile=lte8stONTConfigPathProfile, lte8stOLT3PON0StatTransmitMACMPCPDiscoveryWindows=lte8stOLT3PON0StatTransmitMACMPCPDiscoveryWindows, lte8stOLT3PON1StatReceiveMACRegisterAck=lte8stOLT3PON1StatReceiveMACRegisterAck, lte8stSystemCVLANEtherType=lte8stSystemCVLANEtherType, lte8stOLT2NNI0StatTransmitBroadCast=lte8stOLT2NNI0StatTransmitBroadCast, lte8stSwitchPort09OversizePacketsReceived=lte8stSwitchPort09OversizePacketsReceived, lte8stOLT3PON1StatReceiveLIFFrame=lte8stOLT3PON1StatReceiveLIFFrame, lte8stSwitchPort05BroadcastPacketsSent=lte8stSwitchPort05BroadcastPacketsSent, lte8stONTStatTransmitUNI0CollisionMulti=lte8stONTStatTransmitUNI0CollisionMulti, lte8stOLT3NNI0StatTransmit64Byte=lte8stOLT3NNI0StatTransmit64Byte, lte8stSwitchPort06MulticastPacketsSent=lte8stSwitchPort06MulticastPacketsSent, lte8stONTFactorySettingsEPONMac=lte8stONTFactorySettingsEPONMac, ONTPortSpeed=ONTPortSpeed, lte8stSwitchPort11LACPChannelGroup=lte8stSwitchPort11LACPChannelGroup, lte8stProfilesShaperLink0UpstreamSchedulerLevelMax=lte8stProfilesShaperLink0UpstreamSchedulerLevelMax, lte8stONTStatTransmitUNI1Mac=lte8stONTStatTransmitUNI1Mac, lte8stOLT1PON0StatReceiveLIFLaserIdlePower=lte8stOLT1PON0StatReceiveLIFLaserIdlePower, lte8stONTRulesUNI0MAC=lte8stONTRulesUNI0MAC, lte8stSwitchPort06EgressMirroring=lte8stSwitchPort06EgressMirroring, lte8stONTStateLaserPower=lte8stONTStateLaserPower, lte8stOLT3NNI0StatReceiveUnicast=lte8stOLT3NNI0StatReceiveUnicast, lte8stOLT3PON0StatReceive=lte8stOLT3PON0StatReceive, lte8stSwitchPort10JabberPacketsReceived=lte8stSwitchPort10JabberPacketsReceived, lte8stProfilesPortsUNI0Speed=lte8stProfilesPortsUNI0Speed, lte8stSwitchPort10BadCRC=lte8stSwitchPort10BadCRC, lte8stONTStatTransmitUNI1Table=lte8stONTStatTransmitUNI1Table, lte8stSwitchPort02FlowControl=lte8stSwitchPort02FlowControl, lte8stSwitchPort04=lte8stSwitchPort04, lte8stSNMPLogoutOkTrapEnabled=lte8stSNMPLogoutOkTrapEnabled, lte8stSwitchPort08VLANPVID=lte8stSwitchPort08VLANPVID, lte8stOLT1PON1Desc=lte8stOLT1PON1Desc, lte8stOLT1PON1StatReceiveMACOversize=lte8stOLT1PON1StatReceiveMACOversize, lte8stOLT2NNI0StatReceive256to511Byte=lte8stOLT2NNI0StatReceive256to511Byte, lte8stOLT2PON1StatReceiveLIFCodeErr=lte8stOLT2PON1StatReceiveLIFCodeErr, lte8stOLT1PON1StatReceiveLIFByte=lte8stOLT1PON1StatReceiveLIFByte, lte8stProfilesShaperLink1Enabled=lte8stProfilesShaperLink1Enabled, lte8stSwitchPort01GoodFlowControlFramesReceived=lte8stSwitchPort01GoodFlowControlFramesReceived, lte8stONTIDStatReceivePONDelayMax=lte8stONTIDStatReceivePONDelayMax, lteSubType8X=lteSubType8X, lte8stOLT1PON0StatReceiveMACMulticast=lte8stOLT1PON0StatReceiveMACMulticast, lte8stSwitchPort05StateError=lte8stSwitchPort05StateError, lte8stONTIDStatTransmitUNI0Greater1518Byte=lte8stONTIDStatTransmitUNI0Greater1518Byte, lte8stOLT3PON0StatTransmitLIFLaserVCC=lte8stOLT3PON0StatTransmitLIFLaserVCC, lte8stSwitchPort07Packets256to511Octets=lte8stSwitchPort07Packets256to511Octets, lte8stOLT2PON1FlowControl=lte8stOLT2PON1FlowControl, lte8stOLT2PON1StatTransmitMACMPCPDiscoveryWindows=lte8stOLT2PON1StatTransmitMACMPCPDiscoveryWindows, lte8stSwitchPort05LACPTimeOut=lte8stSwitchPort05LACPTimeOut, lte8stONTIDStatTransmitPONBytes=lte8stONTIDStatTransmitPONBytes, lte8stSwitchPort08VLANIngressFiltering=lte8stSwitchPort08VLANIngressFiltering, lte8stSwitchPortsCountersPackets256to511Octets=lte8stSwitchPortsCountersPackets256to511Octets, lte8stONTIDStatTransmitUNI164Byte=lte8stONTIDStatTransmitUNI164Byte, lte8stOLT0StateOntCount=lte8stOLT0StateOntCount, lte8stOLT0PON1StatTransmitLIFLaserVCC=lte8stOLT0PON1StatTransmitLIFLaserVCC, lte8stOLT3NNI1StatReceive1024to1518Byte=lte8stOLT3NNI1StatReceive1024to1518Byte, lte8stONTLink3State=lte8stONTLink3State, lte8stOLT3PON0StatReceiveMACBytes=lte8stOLT3PON0StatReceiveMACBytes, lte8stProfilesShaperLink0DownstreamSchedulerLevelMin=lte8stProfilesShaperLink0DownstreamSchedulerLevelMin, lte8stSwitchPort11StateDuplex=lte8stSwitchPort11StateDuplex, lte8stONTPONLinked=lte8stONTPONLinked, lte8stSwitchVLANIGMPSnoopingLastMemberQueryInterval=lte8stSwitchVLANIGMPSnoopingLastMemberQueryInterval, lte8stSwitchPort09MacTransmitErrors=lte8stSwitchPort09MacTransmitErrors, lte8stSwitchPort01EgressMirroring=lte8stSwitchPort01EgressMirroring, lte8stONTConfig=lte8stONTConfig, lte8stSwitchPort02BadPacketsReceived=lte8stSwitchPort02BadPacketsReceived, lte8stSwitchPortsCountersBadPacketsReceived=lte8stSwitchPortsCountersBadPacketsReceived, lte8stONTIDLink0Llid=lte8stONTIDLink0Llid, lte8stOLT0PON1StatReceiveLIFByte=lte8stOLT0PON1StatReceiveLIFByte, lte8stOLT2PON1StatTransmitLIFFecBlocks=lte8stOLT2PON1StatTransmitLIFFecBlocks, lte8stOLT1StateOltId=lte8stOLT1StateOltId, lte8stOLT3NNI0Desc=lte8stOLT3NNI0Desc, lte8stOLT0NNI0StatReceive256to511Byte=lte8stOLT0NNI0StatReceive256to511Byte, lte8stOLT2PON0StatTransmitMACMPCPBytes=lte8stOLT2PON0StatTransmitMACMPCPBytes, lte8stONTStatTransmitPONLaserBias=lte8stONTStatTransmitPONLaserBias, lte8stSwitchIGMPSnoopingEnabled=lte8stSwitchIGMPSnoopingEnabled, lte8stOLT3PON0StatTransmitMACGateFrames=lte8stOLT3PON0StatTransmitMACGateFrames, lte8stSwitchPort08MulticastPacketsReceived=lte8stSwitchPort08MulticastPacketsReceived, lte8stSwitchPortsCountersGoodOctetsSent=lte8stSwitchPortsCountersGoodOctetsSent, lte8stSwitchPort04VLANPVID=lte8stSwitchPort04VLANPVID, lte8stOLT1PON1StatReceiveLIFFrame=lte8stOLT1PON1StatReceiveLIFFrame, lte8stOLT2PON0ONTCount=lte8stOLT2PON0ONTCount, lte8stOLT3PON0StatTransmitMACFrames=lte8stOLT3PON0StatTransmitMACFrames, lte8stOLT2PON0StatReceiveMACBroadcast=lte8stOLT2PON0StatReceiveMACBroadcast, lte8stProfilesShaperLink0UpstreamBurstMax=lte8stProfilesShaperLink0UpstreamBurstMax, lte8stProfilesPathTable=lte8stProfilesPathTable, lte8stOLT1PON1=lte8stOLT1PON1, lte8stSwitchPort02MacTransmitErrors=lte8stSwitchPort02MacTransmitErrors, lte8stSwitchPort02Speed=lte8stSwitchPort02Speed, lte8stSwitchVLANName=lte8stSwitchVLANName, lte8stONTRulesUNI0Local=lte8stONTRulesUNI0Local, lte8stOLT2PON1StatReceiveMACMulticast=lte8stOLT2PON1StatReceiveMACMulticast, lte8stSwitchPort11BadFlowControlReceived=lte8stSwitchPort11BadFlowControlReceived, lte8stOLT2PON1StatReceiveLIFFecBlockCorrectable=lte8stOLT2PON1StatReceiveLIFFecBlockCorrectable, lte8stOLT2NNI0StatTransmit255to511Byte=lte8stOLT2NNI0StatTransmit255to511Byte, lte8stOLT0PON1StatTransmitLIFFrames=lte8stOLT0PON1StatTransmitLIFFrames, lte8stSwitchPort08LACPActivity=lte8stSwitchPort08LACPActivity)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stOLT2NNI0StatReceive=lte8stOLT2NNI0StatReceive, lte8stOLT0NNI0StatReceive=lte8stOLT0NNI0StatReceive, lte8stProfilesShaperLink1UpstreamWeightMax=lte8stProfilesShaperLink1UpstreamWeightMax, lte8stONTRulesPONRowStatus=lte8stONTRulesPONRowStatus, lte8stSwitchPort05GoodOctetsReceived=lte8stSwitchPort05GoodOctetsReceived, lte8stSwitchPort05GoodFlowControlFramesReceived=lte8stSwitchPort05GoodFlowControlFramesReceived, lte8stOLT3PON0StatTransmitLIFLaserPower=lte8stOLT3PON0StatTransmitLIFLaserPower, lte8stONTUNI0Speed=lte8stONTUNI0Speed, lte8stSwitchPort02Packets64Octets=lte8stSwitchPort02Packets64Octets, lte8stOLT3PON1Duplex=lte8stOLT3PON1Duplex, lte8stOLT0StateState=lte8stOLT0StateState, lte8stSwitchPort10IngressMirroring=lte8stSwitchPort10IngressMirroring, lte8stSwitchPort07Packets512to1023Octets=lte8stSwitchPort07Packets512to1023Octets, lte8stOLT1PON0StatReceiveMACFrames=lte8stOLT1PON0StatReceiveMACFrames, lte8stOLT1PON0StatReceiveMACDropUngranted=lte8stOLT1PON0StatReceiveMACDropUngranted, lte8stSwitchPort10MacTransmitErrors=lte8stSwitchPort10MacTransmitErrors, lte8stOLT2NNI0StatTransmitUnicast=lte8stOLT2NNI0StatTransmitUnicast, lte8stSwitchPort01LACPTimeOut=lte8stSwitchPort01LACPTimeOut, lte8stOLT2PON1StatTransmitLIFBytes=lte8stOLT2PON1StatTransmitLIFBytes, lte8stSwitchPort11MulticastPacketsReceived=lte8stSwitchPort11MulticastPacketsReceived, lte8stONTStatReceivePONBroadcast=lte8stONTStatReceivePONBroadcast, lte8stONTIDStatTransmitUNI0CollisionMulti=lte8stONTIDStatTransmitUNI0CollisionMulti, lte8stOLT3PON0StatReceiveMACFrames=lte8stOLT3PON0StatReceiveMACFrames, lte8stONTIDConfigUpdateFirmware=lte8stONTIDConfigUpdateFirmware, lte8stONTIDConfigTable=lte8stONTIDConfigTable, lte8stSwitchPort02UnrecogMacControlReceived=lte8stSwitchPort02UnrecogMacControlReceived, lte8stONTStatTransmitPONDroppedFrames=lte8stONTStatTransmitPONDroppedFrames, lte8stOLT1PON1StatReceiveLIFFecBlockOk=lte8stOLT1PON1StatReceiveLIFFecBlockOk, lte8stOLT1NNI1StatReceiveOversizeFrames=lte8stOLT1NNI1StatReceiveOversizeFrames, lte8stSwitchPort10Counters=lte8stSwitchPort10Counters, lte8stONTIDStatReceiveUNI1OversizeFrames=lte8stONTIDStatReceiveUNI1OversizeFrames, lte8stONTIDConfigRulesProfile=lte8stONTIDConfigRulesProfile, lte8stOLT1PON0StatTransmitLIFBytes=lte8stOLT1PON0StatTransmitLIFBytes, lte8stOLT3PON1StatReceiveMACBytes=lte8stOLT3PON1StatReceiveMACBytes, lte8stSwitchPort09Duplex=lte8stSwitchPort09Duplex, lte8stSwitchPort09JabberPacketsReceived=lte8stSwitchPort09JabberPacketsReceived, lte8stSwitchPort02LACPActivity=lte8stSwitchPort02LACPActivity, lte8stOLT2NNI1StatTransmit512to1023Byte=lte8stOLT2NNI1StatTransmit512to1023Byte, lte8stSwitchPort09Packets128to255Octets=lte8stSwitchPort09Packets128to255Octets, lte8stSwitchPort05VLANPVID=lte8stSwitchPort05VLANPVID, lte8stSNMPConfig=lte8stSNMPConfig, lte8stSwitchPort03GoodOctetsSent=lte8stSwitchPort03GoodOctetsSent, lte8stTreeStatesActiveONT=lte8stTreeStatesActiveONT, lte8stOLT0PON0StatReceiveMACOAMFrames=lte8stOLT0PON0StatReceiveMACOAMFrames, lte8stProfilesShaperLink1DownstreamWeightMax=lte8stProfilesShaperLink1DownstreamWeightMax, lte8stSaveConfig=lte8stSaveConfig, lte8stOLT0PON0StatReceiveMACBroadcast=lte8stOLT0PON0StatReceiveMACBroadcast, lte8stSwitchPort11GoodOctetsReceived=lte8stSwitchPort11GoodOctetsReceived, lte8stONTIDLink0Table=lte8stONTIDLink0Table, lte8stProfilesShaperLink0UpstreamBandwidthMin=lte8stProfilesShaperLink0UpstreamBandwidthMin, lte8stSwitchPortsCountersLateCollisions=lte8stSwitchPortsCountersLateCollisions, lte8stOLT0PON0StatReceiveMACLLIDError=lte8stOLT0PON0StatReceiveMACLLIDError, lte8stOLT0NNI1StatTransmitBufferUnderrun=lte8stOLT0NNI1StatTransmitBufferUnderrun, lte8stONTStatReceiveUNI1LengthError=lte8stONTStatReceiveUNI1LengthError, lte8stOLT3PON1StatReceiveLIFFecCorrectableBytes=lte8stOLT3PON1StatReceiveLIFFecCorrectableBytes, lte8stSwitchPort11MACReceiveErrors=lte8stSwitchPort11MACReceiveErrors, lte8stONTIDStatTransmitUNI0Frames=lte8stONTIDStatTransmitUNI0Frames, lte8stSwitchPort08GoodPacketsSent=lte8stSwitchPort08GoodPacketsSent, lte8stOLT3NNI0StatReceive256to511Byte=lte8stOLT3NNI0StatReceive256to511Byte, lteSubType2X=lteSubType2X, lte8stONTIDUNI0Table=lte8stONTIDUNI0Table, lte8stSwitchPort09Speed=lte8stSwitchPort09Speed, lte8stOLT3NNI0StatTransmit1024to1518Byte=lte8stOLT3NNI0StatTransmit1024to1518Byte, lte8stOLT2PON0StatTransmitLIFFecBlocks=lte8stOLT2PON0StatTransmitLIFFecBlocks, lte8stONTStatReceiveUNI1Bytes=lte8stONTStatReceiveUNI1Bytes, lte8stOLT1PON0SFPVendor=lte8stOLT1PON0SFPVendor, lte8stSwitchPort11Speed=lte8stSwitchPort11Speed, lte8stSwitchPort00Enabled=lte8stSwitchPort00Enabled, lte8stOLT3NNI1FlowControl=lte8stOLT3NNI1FlowControl, lte8stSwitchPort00FlowControl=lte8stSwitchPort00FlowControl, lte8stSwitchPort03Packets512to1023Octets=lte8stSwitchPort03Packets512to1023Octets, lte8stSwitchPort02FragmentsReceived=lte8stSwitchPort02FragmentsReceived, lte8stOLT0StateMac=lte8stOLT0StateMac, lte8stSwitchPortsCountersGoodFlowControlFramesReceived=lte8stSwitchPortsCountersGoodFlowControlFramesReceived, lte8stSystemGroup=lte8stSystemGroup, lte8stOLT3NNI1StatTransmit1024to1518Byte=lte8stOLT3NNI1StatTransmit1024to1518Byte, lte8stOLT0NNI0StatReceiveLineCodeErrors=lte8stOLT0NNI0StatReceiveLineCodeErrors, lte8stOLT2PON1StatTransmitMACMultiCast=lte8stOLT2PON1StatTransmitMACMultiCast, lte8stSwitchPort01LACP=lte8stSwitchPort01LACP, lte8stONTStatTransmitPONLaserPower=lte8stONTStatTransmitPONLaserPower, lte8stONTStatTransmitUNI1PauseFrames=lte8stONTStatTransmitUNI1PauseFrames, lte8stSwitchPort01BadPacketsReceived=lte8stSwitchPort01BadPacketsReceived, lte8stSNMPRAMOkTrapEnabled=lte8stSNMPRAMOkTrapEnabled, lte8stSwitchPort11GoodPacketsReceived=lte8stSwitchPort11GoodPacketsReceived, lte8stSwitchPort05MacTransmitErrors=lte8stSwitchPort05MacTransmitErrors, lte8stOLT1PON1StatReceiveLIFPostFecBadFrame=lte8stOLT1PON1StatReceiveLIFPostFecBadFrame, lte8stONTStatReceiveUNI164Byte=lte8stONTStatReceiveUNI164Byte, lte8stONTUNI1Entry=lte8stONTUNI1Entry, lte8stSwitchPort03MACReceiveErrors=lte8stSwitchPort03MACReceiveErrors, lte8stOLT2PON0Stat=lte8stOLT2PON0Stat, LACPMode=LACPMode, lte8stONTStatTransmitUNI064Byte=lte8stONTStatTransmitUNI064Byte, lte8stONTIDStatTransmitUNI0DroppedBytes=lte8stONTIDStatTransmitUNI0DroppedBytes, lte8stONTIDStateLaserPowerdBm=lte8stONTIDStateLaserPowerdBm, lte8stSwitchPort00FragmentsReceived=lte8stSwitchPort00FragmentsReceived, lte8stONTIDConfigUNI1VID=lte8stONTIDConfigUNI1VID, lte8stOLT0NNI0FlowControl=lte8stOLT0NNI0FlowControl, lte8stOLT2PON0StatReceive=lte8stOLT2PON0StatReceive, lte8stOLT3PON0Duplex=lte8stOLT3PON0Duplex, lte8stOLT1PON1SFPVendor=lte8stOLT1PON1SFPVendor, lte8stOLT0NNI0Stat=lte8stOLT0NNI0Stat, lte8stSwitchPort07GoodOctetsSent=lte8stSwitchPort07GoodOctetsSent, lte8stSwitchPort00Packets65to127Octets=lte8stSwitchPort00Packets65to127Octets, lte8stOLT2PON1StatReceiveMACMPCPBytes=lte8stOLT2PON1StatReceiveMACMPCPBytes, lte8stSwitchPort02LACP=lte8stSwitchPort02LACP, lte8stOLT0PON0StatTransmitMACRegisterAck=lte8stOLT0PON0StatTransmitMACRegisterAck, lte8stOLT1PON1StatTransmitMACMPCPDiscoveryWindows=lte8stOLT1PON1StatTransmitMACMPCPDiscoveryWindows, lte8stSwitchPort02ExcessiveCollisions=lte8stSwitchPort02ExcessiveCollisions, lte8stOLT0PON0StatTransmitLIFLaserPower=lte8stOLT0PON0StatTransmitLIFLaserPower, lte8stOLT3PON0StatTransmitLIFFrames=lte8stOLT3PON0StatTransmitLIFFrames, lte8stOLT1NNI0StatReceivePauseFrames=lte8stOLT1NNI0StatReceivePauseFrames, lte8stSwitchPort09GoodFlowControlFramesReceived=lte8stSwitchPort09GoodFlowControlFramesReceived, lte8stSwitchPort05Enabled=lte8stSwitchPort05Enabled, lte8stSwitchVLANIGMPSnoopingEnabled=lte8stSwitchVLANIGMPSnoopingEnabled, lte8stSwitchPortsCountersPackets64Octets=lte8stSwitchPortsCountersPackets64Octets, lte8stOLT0NNI1StatReceiveBytes=lte8stOLT0NNI1StatReceiveBytes, lte8stOLT3NNI0=lte8stOLT3NNI0, lte8stONTIDConfigBlocked=lte8stONTIDConfigBlocked, lte8stONTIDStatTransmitUNI065to127Byte=lte8stONTIDStatTransmitUNI065to127Byte, lte8stOLT1NNI1Desc=lte8stOLT1NNI1Desc, lte8stOLT2PON1StatReceiveMACReportAbort=lte8stOLT2PON1StatReceiveMACReportAbort, lte8stOLT2StateMac=lte8stOLT2StateMac, lte8stSwitchPort06BroadcastPacketsSent=lte8stSwitchPort06BroadcastPacketsSent, lte8stSwitchPort08MulticastPacketsSent=lte8stSwitchPort08MulticastPacketsSent, lte8stONTIDPONLinked=lte8stONTIDPONLinked, lte8stOLT2NNI0StatTransmitFrames=lte8stOLT2NNI0StatTransmitFrames, lte8stOLT1NNI1StatTransmitFrames=lte8stOLT1NNI1StatTransmitFrames, lte8stOLT2PON0StatReceiveLIFFecBlockCorrectable=lte8stOLT2PON0StatReceiveLIFFecBlockCorrectable, lte8stONTIDStatReceiveUNI0OversizeFrames=lte8stONTIDStatReceiveUNI0OversizeFrames, lte8stONTIDStatTransmitUNI1Frames=lte8stONTIDStatTransmitUNI1Frames, lte8stONTIDUNI0Enabled=lte8stONTIDUNI0Enabled, lte8stONTLink2State=lte8stONTLink2State, lte8stONTIDConfigUNI0VIDDefined=lte8stONTIDConfigUNI0VIDDefined, lte8stSwitchPort08Packets1024toMaxOctets=lte8stSwitchPort08Packets1024toMaxOctets, lte8stSNMPDuplicateMacAlarmTrapEnabled=lte8stSNMPDuplicateMacAlarmTrapEnabled, lte8stOLT0PON0Speed=lte8stOLT0PON0Speed, lte8stSwitchPort04Duplex=lte8stSwitchPort04Duplex, lte8stONTIDStatTransmitPONUnicast=lte8stONTIDStatTransmitPONUnicast, lte8stSwitchPort04DropEvents=lte8stSwitchPort04DropEvents, lte8stSNMPLoginAlarmTrapEnabled=lte8stSNMPLoginAlarmTrapEnabled, lte8stSwitchLACPID=lte8stSwitchLACPID, lte8stSwitchPort03JabberPacketsReceived=lte8stSwitchPort03JabberPacketsReceived, lte8stOLT0PON1StatReceiveMACLLIDError=lte8stOLT0PON1StatReceiveMACLLIDError, lte8stOLT1PON0=lte8stOLT1PON0, lte8stONTIDStatTransmitPONTable=lte8stONTIDStatTransmitPONTable, lte8stONTStateUpdateFirmware=lte8stONTStateUpdateFirmware, lte8stOLT1NNI1StatReceive1024to1518Byte=lte8stOLT1NNI1StatReceive1024to1518Byte, lte8stOLT2NNI0StatReceive1024to1518Byte=lte8stOLT2NNI0StatReceive1024to1518Byte, lte8stSwitchPort08FlowControlFramesSent=lte8stSwitchPort08FlowControlFramesSent, lte8stFan3RPM=lte8stFan3RPM, lte8stOLT2NNI1StatTransmit255to511Byte=lte8stOLT2NNI1StatTransmit255to511Byte, lte8stSwitchPort11BadCRC=lte8stSwitchPort11BadCRC, lte8stSwitchPort02VLANIngressFiltering=lte8stSwitchPort02VLANIngressFiltering, lte8stOLT3PON0StatTransmit=lte8stOLT3PON0StatTransmit, lte8stSwitchPort10MulticastPacketsSent=lte8stSwitchPort10MulticastPacketsSent, lte8stOLT3NNI0Enabled=lte8stOLT3NNI0Enabled, lte8stOLT1NNI1StatTransmit128to255Byte=lte8stOLT1NNI1StatTransmit128to255Byte, lte8stOLT1NNI1StatTransmitPauseFrames=lte8stOLT1NNI1StatTransmitPauseFrames, lte8stOLT2PON0SFPVendor=lte8stOLT2PON0SFPVendor, lte8stOLT0PON1StatReceiveLIFPostFecGoodFrame=lte8stOLT0PON1StatReceiveLIFPostFecGoodFrame, lte8stOLT2PON0StatTransmitMACMPCPFrames=lte8stOLT2PON0StatTransmitMACMPCPFrames, lte8stSwitchPort09LateCollisions=lte8stSwitchPort09LateCollisions, lte8stOLT2PON1StatTransmitMACMPCPBytes=lte8stOLT2PON1StatTransmitMACMPCPBytes, lte8stOLT1PON0StatReceive=lte8stOLT1PON0StatReceive, lte8stSwitchPort02DropEvents=lte8stSwitchPort02DropEvents, lte8stSwitchPort06BadFlowControlReceived=lte8stSwitchPort06BadFlowControlReceived, lte8stOLT3PON0StatReceiveLIFPostFecGoodFrame=lte8stOLT3PON0StatReceiveLIFPostFecGoodFrame, lte8stOLT1PON0Duplex=lte8stOLT1PON0Duplex, lte8stSwitchPort06StateLink=lte8stSwitchPort06StateLink, lte8stOLT2NNI0FlowControl=lte8stOLT2NNI0FlowControl, lte8stSwitchPort07Speed=lte8stSwitchPort07Speed, lte8stProfilesRulesDescription=lte8stProfilesRulesDescription, lte8stOLT0PON0StatTransmitMACReport=lte8stOLT0PON0StatTransmitMACReport, lte8stOLT3PON0StatReceiveMACReports=lte8stOLT3PON0StatReceiveMACReports, lte8stOLT2PON1StatReceiveMACLLIDError=lte8stOLT2PON1StatReceiveMACLLIDError, lte8stSwitchPort04Speed=lte8stSwitchPort04Speed, lte8stSwitchPort05MulticastPacketsSent=lte8stSwitchPort05MulticastPacketsSent, lte8stOLT2PON1StatReceiveLIFByte=lte8stOLT2PON1StatReceiveLIFByte, lte8stOLT0PON0Linked=lte8stOLT0PON0Linked, lte8stSwitchLACPAutoNegotiate=lte8stSwitchLACPAutoNegotiate, lte8stProfilesShaperLink0DownstreamWeightMax=lte8stProfilesShaperLink0DownstreamWeightMax, lte8stOLT1PON1StatReceiveLIFFecCorrectableBytes=lte8stOLT1PON1StatReceiveLIFFecCorrectableBytes, lte8stOLT2StateOntCount=lte8stOLT2StateOntCount, lte8stOLT3PON0AutoNegotiate=lte8stOLT3PON0AutoNegotiate, lte8stSwitchPort05DropEvents=lte8stSwitchPort05DropEvents, lte8stONTRulesUNI1Table=lte8stONTRulesUNI1Table, lte8stSwitchPort07StateDuplex=lte8stSwitchPort07StateDuplex, lte8stSwitchDHCPPrimaryServer=lte8stSwitchDHCPPrimaryServer, lte8stProfilesShaperLink0UpstreamSchedulerLevelMin=lte8stProfilesShaperLink0UpstreamSchedulerLevelMin, lte8stSNMPFirmwareUpdateAlarmTrapEnabled=lte8stSNMPFirmwareUpdateAlarmTrapEnabled, lte8stOLT3PON1StatTransmitLIFBytes=lte8stOLT3PON1StatTransmitLIFBytes, lte8stSwitchPort09BadCRC=lte8stSwitchPort09BadCRC, lte8stSwitchPort03=lte8stSwitchPort03, lte8stOLT1StateState=lte8stOLT1StateState, lte8stOLT1NNI0StatTransmitGreater1518Bytes=lte8stOLT1NNI0StatTransmitGreater1518Bytes, lte8stSwitchPort05BadFlowControlReceived=lte8stSwitchPort05BadFlowControlReceived, lte8stOLT0NNI0StatTransmitMulticast=lte8stOLT0NNI0StatTransmitMulticast, lte8stOLT0PON1StatReceiveLIFFecCorrectableBytes=lte8stOLT0PON1StatReceiveLIFFecCorrectableBytes, lte8stOLT1PON0Enabled=lte8stOLT1PON0Enabled, lte8stOLT0NNI0StatReceiveGreater1518Byte=lte8stOLT0NNI0StatReceiveGreater1518Byte, lte8stOLT3StateMac=lte8stOLT3StateMac, lte8stOLT0NNI1StatReceiveAlignmentError=lte8stOLT0NNI1StatReceiveAlignmentError, lte8stSwitchPort06GoodOctetsReceived=lte8stSwitchPort06GoodOctetsReceived, lte8stSNMPONTConfigAlarmTrapEnabled=lte8stSNMPONTConfigAlarmTrapEnabled, lte8stOLT2PON1StatTransmitMACBytes=lte8stOLT2PON1StatTransmitMACBytes, lte8stSwitchPort02VLANPVID=lte8stSwitchPort02VLANPVID, lte8stSwitchPort07VLANFrameTypes=lte8stSwitchPort07VLANFrameTypes, lte8stOLT3NNI0Linked=lte8stOLT3NNI0Linked, lte8stOLT1PON0StatTransmitLIFFecBlocks=lte8stOLT1PON0StatTransmitLIFFecBlocks, lte8stSwitchPort10LACPChannelGroup=lte8stSwitchPort10LACPChannelGroup, lte8stOLT0NNI1StatTransmit255to511Byte=lte8stOLT0NNI1StatTransmit255to511Byte, lte8stSwitchPort08UnrecogMacControlReceived=lte8stSwitchPort08UnrecogMacControlReceived, lte8stSwitchPort07BadFlowControlReceived=lte8stSwitchPort07BadFlowControlReceived, lte8stONTPONFecUp=lte8stONTPONFecUp, lte8stOLT0NNI1StatTransmitErroredBytes=lte8stOLT0NNI1StatTransmitErroredBytes, lte8stOLT0PON0StatReceiveMACMPCPFrames=lte8stOLT0PON0StatReceiveMACMPCPFrames, lte8stSwitchPort00LACP=lte8stSwitchPort00LACP, lte8stSwitchPort00JabberPacketsReceived=lte8stSwitchPort00JabberPacketsReceived, lte8stONTStatTransmitUNI0128to255Byte=lte8stONTStatTransmitUNI0128to255Byte, lte8stOLT2PON0StatReceiveMACUnicast=lte8stOLT2PON0StatReceiveMACUnicast, lte8stOLT1PON1StatReceiveMACOAMBytes=lte8stOLT1PON1StatReceiveMACOAMBytes, lte8stONTIDStatTransmitPON512to1023Byte=lte8stONTIDStatTransmitPON512to1023Byte, lte8stSwitchPort09MulticastPacketsReceived=lte8stSwitchPort09MulticastPacketsReceived, lte8stOLT1PON1Linked=lte8stOLT1PON1Linked, lte8stOLT1PON1StatTransmitMACMPCPFrames=lte8stOLT1PON1StatTransmitMACMPCPFrames, lte8stONTStatReceivePONDelayThresh=lte8stONTStatReceivePONDelayThresh, lte8stSwitchPort03VLANFrameTypes=lte8stSwitchPort03VLANFrameTypes, lte8stOLT0PON1StatReceiveMACRegisterReq=lte8stOLT0PON1StatReceiveMACRegisterReq, SwitchPortState=SwitchPortState, lte8stSwitchLACPEntry=lte8stSwitchLACPEntry, lte8stONTIDStatTransmitPONLaserVCC=lte8stONTIDStatTransmitPONLaserVCC, lte8stOLT0NNI1StatTransmitCRCGen=lte8stOLT0NNI1StatTransmitCRCGen, lte8stOLT2PON0=lte8stOLT2PON0, lte8stOLT3PON1StatReceiveLIFFecBlockUncorrectable=lte8stOLT3PON1StatReceiveLIFFecBlockUncorrectable, lte8stSwitchPort05Packets65to127Octets=lte8stSwitchPort05Packets65to127Octets, lte8stSwitchIGMPSnooping=lte8stSwitchIGMPSnooping, lte8stONTIDStatReceivePONDelayedBytes=lte8stONTIDStatReceivePONDelayedBytes, lte8stSystemNtpServer=lte8stSystemNtpServer, lte8stOLT2PON1StatReceiveLIFPreFecGoodFrame=lte8stOLT2PON1StatReceiveLIFPreFecGoodFrame, lte8stSystemPonPorts=lte8stSystemPonPorts, lte8stOLT0NNI1StatTransmit64Byte=lte8stOLT0NNI1StatTransmit64Byte, lte8stOLT3PON1StatTransmitMACRegisterAck=lte8stOLT3PON1StatTransmitMACRegisterAck, lte8stSwitchPort02BadOctetsReceived=lte8stSwitchPort02BadOctetsReceived, lte8stSwitchPort03Speed=lte8stSwitchPort03Speed, lte8stOLT3PON1AutoNegotiate=lte8stOLT3PON1AutoNegotiate, lte8stONTFactorySettingsSerialNumber=lte8stONTFactorySettingsSerialNumber, lte8stSwitchPort03OversizePacketsReceived=lte8stSwitchPort03OversizePacketsReceived, lte8stONTIDStatReceiveUNI0LengthError=lte8stONTIDStatReceiveUNI0LengthError, lte8stONTStatReceive=lte8stONTStatReceive, lte8stOLT0PON1StatTransmitMACRegisterReq=lte8stOLT0PON1StatTransmitMACRegisterReq, lte8stSwitchPort00Packets256to511Octets=lte8stSwitchPort00Packets256to511Octets, lte8stOLT1PON0Speed=lte8stOLT1PON0Speed, lte8stOLT3PON1StatReceiveLIFLaserIdlePower=lte8stOLT3PON1StatReceiveLIFLaserIdlePower, lte8stSwitchPort01FlowControlFramesSent=lte8stSwitchPort01FlowControlFramesSent)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stSwitchPort05LACPPriority=lte8stSwitchPort05LACPPriority, lte8stProfilesShaperLink1DownstreamWeightMin=lte8stProfilesShaperLink1DownstreamWeightMin, lte8stOLT3PON0StatReceiveMACReportAbort=lte8stOLT3PON0StatReceiveMACReportAbort, lte8stSwitchPort01VLANFrameTypes=lte8stSwitchPort01VLANFrameTypes, lte8stOLT3NNI0StatReceiveGreater1518Byte=lte8stOLT3NNI0StatReceiveGreater1518Byte, lte8stSystemRAMFree=lte8stSystemRAMFree, lte8stOLT3PON1StatReceive=lte8stOLT3PON1StatReceive, lte8stONTIDStatTransmitPON1024to1518Byte=lte8stONTIDStatTransmitPON1024to1518Byte, lte8stSwitchPort11BadPacketsReceived=lte8stSwitchPort11BadPacketsReceived, lte8stOLT0NNI0StatReceiveMulticast=lte8stOLT0NNI0StatReceiveMulticast, lte8stOLT2PON0StatReceiveLIFErrorPkt=lte8stOLT2PON0StatReceiveLIFErrorPkt, lte8stONTStatTransmitUNI0Frames=lte8stONTStatTransmitUNI0Frames, lte8stSwitchPort07GoodPacketsReceived=lte8stSwitchPort07GoodPacketsReceived, lte8stOLT0PON0StatReceiveLIFPostFecGoodFrame=lte8stOLT0PON0StatReceiveLIFPostFecGoodFrame, lte8stProfilesShaperLink1UpstreamSchedulerLevelMax=lte8stProfilesShaperLink1UpstreamSchedulerLevelMax, lte8stONTGroup=lte8stONTGroup, lte8stOLT3NNI0StatReceive=lte8stOLT3NNI0StatReceive, lte8stOLT0PON0StatReceiveLIFFecCorrectableBytes=lte8stOLT0PON0StatReceiveLIFFecCorrectableBytes, lte8stOLT3PON1=lte8stOLT3PON1, lte8stONTIDUNI1Linked=lte8stONTIDUNI1Linked, lte8stOLT0NNI0StatReceivePauseFrames=lte8stOLT0NNI0StatReceivePauseFrames, lte8stOLT3NNI0StatReceiveBytes=lte8stOLT3NNI0StatReceiveBytes, lte8stOLT0PON0Stat=lte8stOLT0PON0Stat, lte8stONTIDLink0State=lte8stONTIDLink0State, lte8stONTStateId=lte8stONTStateId, lte8stONTConfigUNI0VID=lte8stONTConfigUNI0VID, lte8stONTIDLink1State=lte8stONTIDLink1State, lte8stOLT1NNI0StatReceiveOversizeFrames=lte8stOLT1NNI0StatReceiveOversizeFrames, lte8stSwitchVLANVID=lte8stSwitchVLANVID, lte8stSwitchPort05Counters=lte8stSwitchPort05Counters, lte8stOLT0PON1StatReceiveMACUnicast=lte8stOLT0PON1StatReceiveMACUnicast, lte8stSwitchPort11VLANFrameTypes=lte8stSwitchPort11VLANFrameTypes, lte8stOLT2NNI0StatTransmit1024to1518Byte=lte8stOLT2NNI0StatTransmit1024to1518Byte, lte8stSwitchPort11StateSpeed=lte8stSwitchPort11StateSpeed, lte8stOLT3PON1Speed=lte8stOLT3PON1Speed, lte8stONTStatTransmitUNI0Mac=lte8stONTStatTransmitUNI0Mac, lte8stSwitchPort09IngressMirroring=lte8stSwitchPort09IngressMirroring, lte8stOLT3PON0StatReceiveLIFFecBlockOk=lte8stOLT3PON0StatReceiveLIFFecBlockOk, lte8stSwitchPort01IngressMirroring=lte8stSwitchPort01IngressMirroring, lte8stSwitchPort08LACPChannelGroup=lte8stSwitchPort08LACPChannelGroup, lte8stOLT2PON1StatReceiveMACBroadcast=lte8stOLT2PON1StatReceiveMACBroadcast, lte8stONTConfigPorts=lte8stONTConfigPorts, lte8stOLT0PON1StatReceiveLIFLaserIdlePower=lte8stOLT0PON1StatReceiveLIFLaserIdlePower, lte8stSwitchPort04VLAN=lte8stSwitchPort04VLAN, lte8stMacONTPort=lte8stMacONTPort, lte8stOLT1PON0StatReceiveMACRegisterReq=lte8stOLT1PON0StatReceiveMACRegisterReq, lte8stSwitchPort04LACPPriority=lte8stSwitchPort04LACPPriority, lte8stOLT3NNI1StatReceiveBytes=lte8stOLT3NNI1StatReceiveBytes, lte8stSwitchPort06VLANPVID=lte8stSwitchPort06VLANPVID, lte8stFan2Operational=lte8stFan2Operational, lte8stOLT1NNI1AutoNegotiate=lte8stOLT1NNI1AutoNegotiate, lte8stSwitchLACPFlowControl=lte8stSwitchLACPFlowControl, lte8stSNMPConfigSavedTrapEnabled=lte8stSNMPConfigSavedTrapEnabled, lte8stSwitchPort04FlowControl=lte8stSwitchPort04FlowControl, lte8stOLT0PON0SFPModel=lte8stOLT0PON0SFPModel, lte8stOLT0NNI1Speed=lte8stOLT0NNI1Speed, lte8stSwitchPort09ExcessiveCollisions=lte8stSwitchPort09ExcessiveCollisions, lte8stOLT1PON0StatTransmitLIFLaserTemp=lte8stOLT1PON0StatTransmitLIFLaserTemp, lte8stOLT2State=lte8stOLT2State, lte8stOLT1PON1StatReceiveLIFLaserIdlePower=lte8stOLT1PON1StatReceiveLIFLaserIdlePower, lte8stSwitchPort06AutoNegotiate=lte8stSwitchPort06AutoNegotiate, lte8stONTIDStatTransmitUNI0Broadcast=lte8stONTIDStatTransmitUNI0Broadcast, lte8stSwitchPort10VLANIngressFiltering=lte8stSwitchPort10VLANIngressFiltering, lte8stOLT2PON1StatTransmitMACOamFrames=lte8stOLT2PON1StatTransmitMACOamFrames, lte8stOLT1PON1StatReceiveMACBytes=lte8stOLT1PON1StatReceiveMACBytes, lte8stSwitchPort01BadOctetsReceived=lte8stSwitchPort01BadOctetsReceived, lte8stOLT2PON1StatTransmitLIFLaserBias=lte8stOLT2PON1StatTransmitLIFLaserBias, lte8stOLT1NNI0StatReceiveMulticast=lte8stOLT1NNI0StatReceiveMulticast, lte8stOLT0PON0StatTransmitMACFrames=lte8stOLT0PON0StatTransmitMACFrames, lte8stProfilesPortsEntry=lte8stProfilesPortsEntry, lte8stSystemName=lte8stSystemName, lte8stSwitchPort09Packets512to1023Octets=lte8stSwitchPort09Packets512to1023Octets, lte8stOLT0NNI0StatTransmitBroadCast=lte8stOLT0NNI0StatTransmitBroadCast, lte8stSwitchPort04Packets512to1023Octets=lte8stSwitchPort04Packets512to1023Octets, lte8stSwitchPort02Packets512to1023Octets=lte8stSwitchPort02Packets512to1023Octets, lte8stSwitchPort04LateCollisions=lte8stSwitchPort04LateCollisions, lte8stONTStatTransmitPON256to511Byte=lte8stONTStatTransmitPON256to511Byte, lte8stSwitchPort11Enabled=lte8stSwitchPort11Enabled, lte8stOLT0NNI1StatTransmitPauseFrames=lte8stOLT0NNI1StatTransmitPauseFrames, lte8stSwitchPort03StateFlowControl=lte8stSwitchPort03StateFlowControl, lte8stSwitchPort04LACPChannelGroup=lte8stSwitchPort04LACPChannelGroup, lte8stSwitchPort09EgressMirroring=lte8stSwitchPort09EgressMirroring, lte8stONTIDStatReceiveUNI065to127Byte=lte8stONTIDStatReceiveUNI065to127Byte, lte8stOLT0NNI0StatTransmit=lte8stOLT0NNI0StatTransmit, lte8stOLT3PON0StatTransmitLIFFecBlocks=lte8stOLT3PON0StatTransmitLIFFecBlocks, lte8stSwitchPort04Counters=lte8stSwitchPort04Counters, lte8stSwitchPort08VLANFrameTypes=lte8stSwitchPort08VLANFrameTypes, lte8stOLT1NNI1StatReceiveUndersizeFrames=lte8stOLT1NNI1StatReceiveUndersizeFrames, lte8stONTIDStatReceiveUNI0Greater1518Byte=lte8stONTIDStatReceiveUNI0Greater1518Byte, lte8stSwitchPort05FlowControl=lte8stSwitchPort05FlowControl, lte8stONTIDStatTransmitPONLaserPower=lte8stONTIDStatTransmitPONLaserPower, lte8stONTPONDesc=lte8stONTPONDesc, lte8stOLT0PON1StatReceiveMACRegisterAck=lte8stOLT0PON1StatReceiveMACRegisterAck, lte8stSwitchPort01StateError=lte8stSwitchPort01StateError, lte8stSwitchPort06LACPChannelGroup=lte8stSwitchPort06LACPChannelGroup, lte8stOLT2PON1StatTransmitMACMPCPFrames=lte8stOLT2PON1StatTransmitMACMPCPFrames, lte8stOLT1NNI0StatReceiveAlignmentError=lte8stOLT1NNI0StatReceiveAlignmentError, lte8stSwitchPort05LACP=lte8stSwitchPort05LACP, lte8stOLT0PON0StatReceiveMACFrames=lte8stOLT0PON0StatReceiveMACFrames, lte8stOLT2PON0StatReceiveLIFPreFecBadFrame=lte8stOLT2PON0StatReceiveLIFPreFecBadFrame, lte8stSwitchPort04GoodPacketsReceived=lte8stSwitchPort04GoodPacketsReceived, lte8stOLT0PON1StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT0PON1StatTransmitMACMPCPDiscoveryTimeouts, lte8stProfilesShaperLink1UpstreamBandwidthMax=lte8stProfilesShaperLink1UpstreamBandwidthMax, lte8stOLT0PON0StatReceiveMACUnicast=lte8stOLT0PON0StatReceiveMACUnicast, lte8stSwitchPort09MulticastPacketsSent=lte8stSwitchPort09MulticastPacketsSent, lte8stSwitchPort06LACPActivity=lte8stSwitchPort06LACPActivity, lte8stSwitchPort09State=lte8stSwitchPort09State, lte8stSwitchPortsCountersFlowControlFramesSent=lte8stSwitchPortsCountersFlowControlFramesSent, lte8stSNMPConfigSavedAlarmTrapEnabled=lte8stSNMPConfigSavedAlarmTrapEnabled, lte8stSwitchPort00StateFlowControl=lte8stSwitchPort00StateFlowControl, lte8stOLT1PON0StatTransmit=lte8stOLT1PON0StatTransmit, lte8stOLT2PON0StatReceiveMACBytes=lte8stOLT2PON0StatReceiveMACBytes, lte8stOLT2NNI0StatReceiveCRCErrors=lte8stOLT2NNI0StatReceiveCRCErrors, lte8stOLT0PON1Stat=lte8stOLT0PON1Stat, lte8stOLT3PON0StatReceiveMACBroadcast=lte8stOLT3PON0StatReceiveMACBroadcast, lte8stSwitchPort06MacTransmitErrors=lte8stSwitchPort06MacTransmitErrors, lte8stOLT2PON0StatReceiveMACOAMFrames=lte8stOLT2PON0StatReceiveMACOAMFrames, lte8stSwitchPort03LACP=lte8stSwitchPort03LACP, lte8stSwitchPort07=lte8stSwitchPort07, lte8stOLT2PON1StatTransmitMACGateFrames=lte8stOLT2PON1StatTransmitMACGateFrames, lte8stSwitchPort10UndersizePacketsReceived=lte8stSwitchPort10UndersizePacketsReceived, lte8stSystemUplinkPorts=lte8stSystemUplinkPorts, lte8stONTFactorySettingsBaseMac=lte8stONTFactorySettingsBaseMac, lte8stOLT0NNI1StatReceiveGreater1518Byte=lte8stOLT0NNI1StatReceiveGreater1518Byte, lte8stOLT2PON1StatReceiveMACRegisterAck=lte8stOLT2PON1StatReceiveMACRegisterAck, lte8stTreeStatesErrorONT=lte8stTreeStatesErrorONT, lte8stSwitchPort10Packets512to1023Octets=lte8stSwitchPort10Packets512to1023Octets, lte8stSwitchPort11GoodPacketsSent=lte8stSwitchPort11GoodPacketsSent, lte8stOLT0PON0StatReceiveMACOversize=lte8stOLT0PON0StatReceiveMACOversize, lte8stOLT1PON0StatTransmitMACGateFrames=lte8stOLT1PON0StatTransmitMACGateFrames, lte8stSystemSyslogForward=lte8stSystemSyslogForward, lte8stOLT1PON0StatReceiveMACUndersize=lte8stOLT1PON0StatReceiveMACUndersize, lte8stOLT1NNI1StatTransmitUnicast=lte8stOLT1NNI1StatTransmitUnicast, lte8stONTIDStatReceiveUNI1Frames=lte8stONTIDStatReceiveUNI1Frames, lte8stOLT3StateOntCount=lte8stOLT3StateOntCount, lte8stSwitchLACPPVID=lte8stSwitchLACPPVID, lte8stSwitchPort07BadOctetsReceived=lte8stSwitchPort07BadOctetsReceived, lte8stOLT1NNI1StatTransmit1024to1518Byte=lte8stOLT1NNI1StatTransmit1024to1518Byte, lte8stOLT3PON1FlowControl=lte8stOLT3PON1FlowControl, lte8stONTLink2ONTMac=lte8stONTLink2ONTMac, lte8stSwitchPort05GoodPacketsSent=lte8stSwitchPort05GoodPacketsSent, lte8stSwitchPort09FragmentsReceived=lte8stSwitchPort09FragmentsReceived, lte8stOLT2NNI1StatTransmitPauseFrames=lte8stOLT2NNI1StatTransmitPauseFrames, lte8stOLT1PON1StatTransmit=lte8stOLT1PON1StatTransmit, lte8stSwitchPort04GoodPacketsSent=lte8stSwitchPort04GoodPacketsSent, lte8stOLT1PON0StatReceiveLIFCodeErr=lte8stOLT1PON0StatReceiveLIFCodeErr, lte8stONTIDLink1Llid=lte8stONTIDLink1Llid, lte8stONTStatTransmitPONUnicast=lte8stONTStatTransmitPONUnicast, lte8stOLT0PON0StatTransmit=lte8stOLT0PON0StatTransmit, lte8stSwitchPort00MacTransmitErrors=lte8stSwitchPort00MacTransmitErrors, lte8stOLT0NNI1FlowControl=lte8stOLT0NNI1FlowControl, lte8stONTStatTransmitUNI0CollisionExcessive=lte8stONTStatTransmitUNI0CollisionExcessive, lte8stSwitchPort00LACPActivity=lte8stSwitchPort00LACPActivity, lte8stSwitchPort02Counters=lte8stSwitchPort02Counters, lte8stOLT3NNI0StatTransmitBroadCast=lte8stOLT3NNI0StatTransmitBroadCast, lte8stProfilesShaperLink1DownstreamBandwidthMin=lte8stProfilesShaperLink1DownstreamBandwidthMin, lte8stOLT3PON0Speed=lte8stOLT3PON0Speed, lte8stONTStatReceiveUNI165to127Byte=lte8stONTStatReceiveUNI165to127Byte, lte8stONTIDStatTransmitPONUnusedBytes=lte8stONTIDStatTransmitPONUnusedBytes, lte8stSwitchPort08EgressMirroring=lte8stSwitchPort08EgressMirroring, lte8stSwitchPort06FlowControl=lte8stSwitchPort06FlowControl, lte8stOLT2PON1StatReceiveLIFFecBlockUncorrectable=lte8stOLT2PON1StatReceiveLIFFecBlockUncorrectable, lte8stOLT3PON0Enabled=lte8stOLT3PON0Enabled, lte8stSwitchPort02StateError=lte8stSwitchPort02StateError, lte8stSwitchPort04Packets128to255Octets=lte8stSwitchPort04Packets128to255Octets, lte8stOLT1PON1StatTransmitMACOamBytes=lte8stOLT1PON1StatTransmitMACOamBytes, lte8stSwitchPort01MacTransmitErrors=lte8stSwitchPort01MacTransmitErrors, lte8stOLT3PON0StatTransmitMACMultiCast=lte8stOLT3PON0StatTransmitMACMultiCast, lte8stOLT1PON1StatReceiveMACRegisterReq=lte8stOLT1PON1StatReceiveMACRegisterReq, lte8stOLT3PON1StatReceiveMACUnicast=lte8stOLT3PON1StatReceiveMACUnicast, lte8stOLT3PON1StatTransmitLIFLaserVCC=lte8stOLT3PON1StatTransmitLIFLaserVCC, lte8stSwitchPort02VLAN=lte8stSwitchPort02VLAN, lte8stSwitchPort08Duplex=lte8stSwitchPort08Duplex, lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink1=lte8stProfilesPortsUNI0ForwardBroadcastARPFramesLink1, lte8stSwitchPort05LACPActivity=lte8stSwitchPort05LACPActivity, lte8stOLT0PON0StatTransmitMACMPCPFrames=lte8stOLT0PON0StatTransmitMACMPCPFrames, lte8stOLT3NNI1StatReceiveBroadcast=lte8stOLT3NNI1StatReceiveBroadcast, lte8stOLT0PON1StatReceiveMACUndersize=lte8stOLT0PON1StatReceiveMACUndersize, lte8stONTIDUNI1Entry=lte8stONTIDUNI1Entry, lte8stOLT1NNI0StatReceiveCRCErrors=lte8stOLT1NNI0StatReceiveCRCErrors, lte8stONTStatTransmitUNI0Unicast=lte8stONTStatTransmitUNI0Unicast, lte8stSwitchPort08LateCollisions=lte8stSwitchPort08LateCollisions, lte8stSwitchPort01Enabled=lte8stSwitchPort01Enabled, lte8stOLT2PON1StatReceiveMACOAMFrames=lte8stOLT2PON1StatReceiveMACOAMFrames, lte8stSwitchPort08ExcessiveCollisions=lte8stSwitchPort08ExcessiveCollisions, lte8stOLT1PON0StatTransmitMACReport=lte8stOLT1PON0StatTransmitMACReport, lte8stSystemP2PEnabled=lte8stSystemP2PEnabled, lte8stOLT2PON1StatReceiveLIFFecCorrectableBytes=lte8stOLT2PON1StatReceiveLIFFecCorrectableBytes, lte8stONTRulesUNI0Table=lte8stONTRulesUNI0Table, lte8stONTConfigMAC=lte8stONTConfigMAC, lte8stOLT0StateOltId=lte8stOLT0StateOltId, lte8stSwitchMirroringIngressAnalyser=lte8stSwitchMirroringIngressAnalyser, lte8stSwitchPort08AutoNegotiate=lte8stSwitchPort08AutoNegotiate, lte8stSystemManagementIP=lte8stSystemManagementIP, lte8stONTIDStatTransmitUNI1CollisionLate=lte8stONTIDStatTransmitUNI1CollisionLate, lte8stSwitchPort11JabberPacketsReceived=lte8stSwitchPort11JabberPacketsReceived, LTEObjectState=LTEObjectState, lte8stONTIDStatReceiveUNI1Broadcast=lte8stONTIDStatReceiveUNI1Broadcast, lte8stOLT3PON1StatReceiveMACUndersize=lte8stOLT3PON1StatReceiveMACUndersize, lte8stSwitchPort11FlowControl=lte8stSwitchPort11FlowControl, lte8stSwitchPort00BroadcastPacketsSent=lte8stSwitchPort00BroadcastPacketsSent, lte8stOLT0NNI1StatTransmitUnicast=lte8stOLT0NNI1StatTransmitUnicast, lte8stONTLink3Mac=lte8stONTLink3Mac, lte8stSwitchPort02GoodPacketsSent=lte8stSwitchPort02GoodPacketsSent, lte8stSwitchLACPIngressFiltering=lte8stSwitchLACPIngressFiltering, lte8stOLT1NNI1StatReceiveFrames=lte8stOLT1NNI1StatReceiveFrames, lte8stOLT2PON0StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT2PON0StatTransmitMACMPCPDiscoveryTimeouts, lte8stOLT0PON1StatReceiveMACReportAbort=lte8stOLT0PON1StatReceiveMACReportAbort, lte8stOLT0PON0StatTransmitLIFBytes=lte8stOLT0PON0StatTransmitLIFBytes, lte8stONTStateTable=lte8stONTStateTable, lte8stSwitchVLANPort00=lte8stSwitchVLANPort00, lte8stSwitchPort09StateLink=lte8stSwitchPort09StateLink, lte8stONTIDUNI1Table=lte8stONTIDUNI1Table, lte8stOLT3PON1StatReceiveLIFPostFecGoodFrame=lte8stOLT3PON1StatReceiveLIFPostFecGoodFrame, lte8stSwitchPort10Packets256to511Octets=lte8stSwitchPort10Packets256to511Octets, lte8stOLT1PON1StatTransmitMACFrames=lte8stOLT1PON1StatTransmitMACFrames, lte8stONTIDStatReceivePONUnicast=lte8stONTIDStatReceivePONUnicast, lte8stSwitchPortsCountersGoodPacketsReceived=lte8stSwitchPortsCountersGoodPacketsReceived, lte8stONTStatTransmitUNI1512to1023Byte=lte8stONTStatTransmitUNI1512to1023Byte, lte8stONTIDStatReceivePONCRC8Errors=lte8stONTIDStatReceivePONCRC8Errors, lte8stSwitchPort00VLANPVID=lte8stSwitchPort00VLANPVID, lte8stSwitchPort08MacTransmitErrors=lte8stSwitchPort08MacTransmitErrors, lte8stONTStatReceivePONDelayedBytes=lte8stONTStatReceivePONDelayedBytes, lte8stOLT2PON1StatTransmitMACOamBytes=lte8stOLT2PON1StatTransmitMACOamBytes, lte8stONTStateVideoLaserPower=lte8stONTStateVideoLaserPower, lte8stOLT1PON0StatTransmitMACRegisterAck=lte8stOLT1PON0StatTransmitMACRegisterAck, lte8stOLT2PON1Linked=lte8stOLT2PON1Linked, lte8stOLT0PON1StatTransmitMACMPCPBytes=lte8stOLT0PON1StatTransmitMACMPCPBytes, lte8stProfilesShaperLink0UpstreamWeightMax=lte8stProfilesShaperLink0UpstreamWeightMax, lte8stONTIDLink2Llid=lte8stONTIDLink2Llid, lte8stOLT0PON0StatReceiveMACCRC32=lte8stOLT0PON0StatReceiveMACCRC32, lte8stSwitchPort02FlowControlFramesSent=lte8stSwitchPort02FlowControlFramesSent, lte8stOLT2NNI0StatTransmitErroredBytes=lte8stOLT2NNI0StatTransmitErroredBytes, lte8stONTStatTransmitUNI1Entry=lte8stONTStatTransmitUNI1Entry, lte8stOLT1PON1StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT1PON1StatTransmitMACMPCPDiscoveryTimeouts, lte8stSwitchPort03VLANIngressFiltering=lte8stSwitchPort03VLANIngressFiltering, lte8stOLT3StateState=lte8stOLT3StateState, lte8stSystemCPULoadAverage15Minutes=lte8stSystemCPULoadAverage15Minutes, lte8stONTPONEnabled=lte8stONTPONEnabled, lte8stSwitchPort10ExcessiveCollisions=lte8stSwitchPort10ExcessiveCollisions, lte8stOLT3NNI0StatReceiveErroredBytes=lte8stOLT3NNI0StatReceiveErroredBytes, lte8stONTIDStatTransmitPON64Byte=lte8stONTIDStatTransmitPON64Byte, lte8stOLT0PON1StatTransmitMACOamFrames=lte8stOLT0PON1StatTransmitMACOamFrames, lte8stSwitchPort11OversizePacketsReceived=lte8stSwitchPort11OversizePacketsReceived, lte8stSwitchPort09GoodOctetsSent=lte8stSwitchPort09GoodOctetsSent, lte8stOLT3PON1StatReceiveMACDropUngranted=lte8stOLT3PON1StatReceiveMACDropUngranted, lte8stONTRulesUNI1ID=lte8stONTRulesUNI1ID, lte8stONTIDStatTransmitUNI1DroppedBytes=lte8stONTIDStatTransmitUNI1DroppedBytes, lte8stONTStatTransmitUNI0Bytes=lte8stONTStatTransmitUNI0Bytes, lte8stONTConfigID=lte8stONTConfigID, lte8stONTIDUNI0Speed=lte8stONTIDUNI0Speed, lte8stOLT0NNI0Enabled=lte8stOLT0NNI0Enabled, lte8stOLT3PON1StatReceiveMACReports=lte8stOLT3PON1StatReceiveMACReports, lte8stOLT2NNI0StatReceiveMulticast=lte8stOLT2NNI0StatReceiveMulticast)
mibBuilder.exportSymbols("ELTEX-LTE8ST", lte8stOLT3NNI0Duplex=lte8stOLT3NNI0Duplex, lte8stOLT2NNI1StatTransmitMulticast=lte8stOLT2NNI1StatTransmitMulticast, lte8stOLT1PON1StatReceiveLIFFecBlockCorrectable=lte8stOLT1PON1StatReceiveLIFFecBlockCorrectable, lte8stONTStatReceiveUNI1Greater1518Byte=lte8stONTStatReceiveUNI1Greater1518Byte, lte8stSwitchVLANPort08=lte8stSwitchVLANPort08, lte8stONTIDUNI0Desc=lte8stONTIDUNI0Desc, lte8stOLT2NNI0StatTransmitBufferUnderrun=lte8stOLT2NNI0StatTransmitBufferUnderrun, lte8stOLT2NNI1StatReceive65to127Byte=lte8stOLT2NNI1StatReceive65to127Byte, TempConv=TempConv, lte8stOLT3PON0=lte8stOLT3PON0, lte8stONTStatReceivePONDroppedFrames=lte8stONTStatReceivePONDroppedFrames, lte8stOLT2PON0FlowControl=lte8stOLT2PON0FlowControl, lte8stONTStatTransmitUNI1128to255Byte=lte8stONTStatTransmitUNI1128to255Byte, lte8stSwitchPort00MulticastPacketsSent=lte8stSwitchPort00MulticastPacketsSent, lte8stOLT3PON0StatReceiveLIFCodeErr=lte8stOLT3PON0StatReceiveLIFCodeErr, lte8stOLT3PON1StatReceiveMACLLIDError=lte8stOLT3PON1StatReceiveMACLLIDError, lte8stSwitchPort03FlowControl=lte8stSwitchPort03FlowControl, lte8stSwitchPortsCountersCollisions=lte8stSwitchPortsCountersCollisions, lte8stSwitchPort05Speed=lte8stSwitchPort05Speed, lte8stOLT0NNI1StatReceiveOversizeFrames=lte8stOLT0NNI1StatReceiveOversizeFrames, lte8stSwitchPort11Packets128to255Octets=lte8stSwitchPort11Packets128to255Octets, lte8stONTStatTransmitUNI1Frames=lte8stONTStatTransmitUNI1Frames, lte8stONTIDStatReceivePONDroppedBytes=lte8stONTIDStatReceivePONDroppedBytes, lte8stOLT1PON1StatTransmitMACMultiCast=lte8stOLT1PON1StatTransmitMACMultiCast, lte8stOLT1NNI0StatTransmitBufferUnderrun=lte8stOLT1NNI0StatTransmitBufferUnderrun, lte8stONTIDPONFlowControl=lte8stONTIDPONFlowControl, lte8stSwitchPort11AutoNegotiate=lte8stSwitchPort11AutoNegotiate, lte8stSwitchPortsCountersDropEvents=lte8stSwitchPortsCountersDropEvents, lte8stOLT1PON1StatReceiveMACReports=lte8stOLT1PON1StatReceiveMACReports, lte8stSwitchPort05VLANIngressFiltering=lte8stSwitchPort05VLANIngressFiltering, lte8stOLT2NNI0StatTransmitMulticast=lte8stOLT2NNI0StatTransmitMulticast, lte8stONTStatReceivePONLaserPower=lte8stONTStatReceivePONLaserPower, lte8stSwitchPort06LACPTimeOut=lte8stSwitchPort06LACPTimeOut, lte8stOLT0PON1StatReceiveMACDropUngranted=lte8stOLT0PON1StatReceiveMACDropUngranted, lte8stOLT0NNI0StatReceive64Byte=lte8stOLT0NNI0StatReceive64Byte, lte8stONTIDStatReceiveUNI1PauseFrames=lte8stONTIDStatReceiveUNI1PauseFrames, lte8stSwitchPort09VLANFrameTypes=lte8stSwitchPort09VLANFrameTypes, lte8stProfilesShaperLink0DownstreamBandwidthMin=lte8stProfilesShaperLink0DownstreamBandwidthMin, lte8stONTIDConfigPathProfile=lte8stONTIDConfigPathProfile, lte8stOLT3NNI0StatReceiveAlignmentError=lte8stOLT3NNI0StatReceiveAlignmentError, lte8stOLT3PON0StatTransmitLIFLaserTemp=lte8stOLT3PON0StatTransmitLIFLaserTemp, lte8stOLT1PON0Linked=lte8stOLT1PON0Linked, lte8stOLT3PON1StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT3PON1StatTransmitMACMPCPDiscoveryTimeouts, lte8stOLT0PON1StatTransmit=lte8stOLT0PON1StatTransmit, lte8stSwitchPort04UndersizePacketsReceived=lte8stSwitchPort04UndersizePacketsReceived, lte8stONTUNI0Linked=lte8stONTUNI0Linked, lte8stONTStatReceivePONDroppedBytes=lte8stONTStatReceivePONDroppedBytes, lte8stOLT2NNI1StatReceive=lte8stOLT2NNI1StatReceive, lte8stSwitchPort02VLANFrameTypes=lte8stSwitchPort02VLANFrameTypes, lte8stSwitchPort02MulticastPacketsSent=lte8stSwitchPort02MulticastPacketsSent, lte8stOLT3PON1SFPVendor=lte8stOLT3PON1SFPVendor, lte8stSwitchPort03AutoNegotiate=lte8stSwitchPort03AutoNegotiate, lte8stProfilesPortsEntryID=lte8stProfilesPortsEntryID, lte8stOLT3PON0StatReceiveMACOAMFrames=lte8stOLT3PON0StatReceiveMACOAMFrames, lte8stONTStatReceiveUNI1256to511Byte=lte8stONTStatReceiveUNI1256to511Byte, lte8stONTLink0Llid=lte8stONTLink0Llid, lte8stOLT1NNI0StatReceive512to1023Byte=lte8stOLT1NNI0StatReceive512to1023Byte, lte8stSwitchPort09BroadcastPacketsSent=lte8stSwitchPort09BroadcastPacketsSent, lte8stOLT3StateOltId=lte8stOLT3StateOltId, lte8stSwitchPortsCountersOversizePacketsReceived=lte8stSwitchPortsCountersOversizePacketsReceived, lte8stOLT3PON1StatTransmitMACBytes=lte8stOLT3PON1StatTransmitMACBytes, lte8stSwitchPort04UnrecogMacControlReceived=lte8stSwitchPort04UnrecogMacControlReceived, lte8stSwitchPortsCountersBadOctetsReceived=lte8stSwitchPortsCountersBadOctetsReceived, lte8stOLT3PON0FecUp=lte8stOLT3PON0FecUp, lte8stONTIDUNI1FlowControl=lte8stONTIDUNI1FlowControl, SwitchPortDuplex=SwitchPortDuplex, lte8stOLT3PON0StatTransmitMACUnicast=lte8stOLT3PON0StatTransmitMACUnicast, lte8stONTIDStatReceiveUNI1256to511Byte=lte8stONTIDStatReceiveUNI1256to511Byte, lte8stONTStatTransmitUNI1Broadcast=lte8stONTStatTransmitUNI1Broadcast, lte8stBoardStatus=lte8stBoardStatus, lte8stOLT1NNI1StatReceiveGreater1518Byte=lte8stOLT1NNI1StatReceiveGreater1518Byte, lte8stSwitchPort00GoodFlowControlFramesReceived=lte8stSwitchPort00GoodFlowControlFramesReceived, lte8stProfilesIpMulticastEntry=lte8stProfilesIpMulticastEntry, lte8stOLT1PON1StatTransmitMACRegisterReq=lte8stOLT1PON1StatTransmitMACRegisterReq, lte8stOLT1NNI0StatTransmitPauseFrames=lte8stOLT1NNI0StatTransmitPauseFrames, lte8stOLT3PON1StatTransmitMACMultiCast=lte8stOLT3PON1StatTransmitMACMultiCast, lte8stSwitchPortsCountersBadFlowControlReceived=lte8stSwitchPortsCountersBadFlowControlReceived, lte8stOLT2PON0StatReceiveMACUndersize=lte8stOLT2PON0StatReceiveMACUndersize, lte8stSwitchPort04Enabled=lte8stSwitchPort04Enabled, lte8stOLT1NNI1Stat=lte8stOLT1NNI1Stat, lte8stSwitchPort08Packets256to511Octets=lte8stSwitchPort08Packets256to511Octets, lte8stOLT2PON0StatReceiveLIFByte=lte8stOLT2PON0StatReceiveLIFByte, lte8stONTIDStatReceiveUNI0Multicast=lte8stONTIDStatReceiveUNI0Multicast, lte8stONTIDStatTransmitPONLaserBias=lte8stONTIDStatTransmitPONLaserBias, lte8stOLT2PON1StatReceiveLIFCRC8=lte8stOLT2PON1StatReceiveLIFCRC8, lte8stSwitchVLANIGMPSnoopingRobustness=lte8stSwitchVLANIGMPSnoopingRobustness, lte8stONTIDLink2Entry=lte8stONTIDLink2Entry, lte8stOLT3PON0StatTransmitMACBytes=lte8stOLT3PON0StatTransmitMACBytes, lte8stOLT1NNI0Enabled=lte8stOLT1NNI0Enabled, lte8stOLT2StateOltId=lte8stOLT2StateOltId, lte8stOLT3PON1StatReceiveLIFFecBlockOk=lte8stOLT3PON1StatReceiveLIFFecBlockOk, lte8stOLT2NNI0StatTransmitGreater1518Bytes=lte8stOLT2NNI0StatTransmitGreater1518Bytes, lte8stONTIDStatReceivePONDelayThresh=lte8stONTIDStatReceivePONDelayThresh, lte8stONTStatReceivePONONTDestinedBytes=lte8stONTStatReceivePONONTDestinedBytes, lte8stOLT2NNI1StatReceive128to255Byte=lte8stOLT2NNI1StatReceive128to255Byte, lte8stSwitchPort07BadPacketsReceived=lte8stSwitchPort07BadPacketsReceived, lte8stOLT0PON1StatReceiveLIFCRC8=lte8stOLT0PON1StatReceiveLIFCRC8, lte8stOLT2PON1StatReceiveLIFPostFecGoodFrame=lte8stOLT2PON1StatReceiveLIFPostFecGoodFrame, lte8stOLT1PON0AutoNegotiate=lte8stOLT1PON0AutoNegotiate, lte8stONTIDStatReceiveUNI01024to1518Byte=lte8stONTIDStatReceiveUNI01024to1518Byte, lte8stSwitchPort08VLAN=lte8stSwitchPort08VLAN, lte8stProfiles=lte8stProfiles, lte8stSwitchPort10FragmentsReceived=lte8stSwitchPort10FragmentsReceived, lte8stSwitchVLANEntry=lte8stSwitchVLANEntry, lte8stOLT2PON1StatReceiveLIFErrorPkt=lte8stOLT2PON1StatReceiveLIFErrorPkt, lte8stOLT3NNI0StatReceivePauseFrames=lte8stOLT3NNI0StatReceivePauseFrames, lte8stSwitchPort07MulticastPacketsReceived=lte8stSwitchPort07MulticastPacketsReceived, lte8stONTStatReceiveUNI1Unicast=lte8stONTStatReceiveUNI1Unicast, lte8stOLT0PON0StatTransmitMACMPCPDiscoveryTimeouts=lte8stOLT0PON0StatTransmitMACMPCPDiscoveryTimeouts, lte8stOLT1NNI0Stat=lte8stOLT1NNI0Stat, lte8stONTIDStateUpdateFirmware=lte8stONTIDStateUpdateFirmware, lte8stOLT1NNI0StatTransmit1024to1518Byte=lte8stOLT1NNI0StatTransmit1024to1518Byte, lte8stSwitchPort06UnrecogMacControlReceived=lte8stSwitchPort06UnrecogMacControlReceived, lte8stONTIDPONDuplex=lte8stONTIDPONDuplex, lte8stSwitchPort04OversizePacketsReceived=lte8stSwitchPort04OversizePacketsReceived, lte8stONTIDStatReceivePONBroadcast=lte8stONTIDStatReceivePONBroadcast, lte8stSwitchPortsCountersGoodOctetsReceived=lte8stSwitchPortsCountersGoodOctetsReceived, lte8stOLT3PON0StatReceiveMACUnicast=lte8stOLT3PON0StatReceiveMACUnicast, lte8stOLT2PON0StatTransmitMACUnicast=lte8stOLT2PON0StatTransmitMACUnicast, lte8stSwitchPort05MACReceiveErrors=lte8stSwitchPort05MACReceiveErrors)
