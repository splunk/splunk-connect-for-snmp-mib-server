#
# PySNMP MIB module PKTC-MTA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PKTC-MTA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:32:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
clabProjPacketCable, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjPacketCable")
docsDevSwCurrentVers, = mibBuilder.importSymbols("DOCS-CABLE-DEVICE-MIB", "docsDevSwCurrentVers")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, Counter32, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, TimeTicks, Gauge32, MibIdentifier, ObjectIdentity, Counter64, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "TimeTicks", "Gauge32", "MibIdentifier", "ObjectIdentity", "Counter64", "Unsigned32", "Integer32")
TruthValue, DateAndTime, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DateAndTime", "TextualConvention", "DisplayString", "RowStatus")
pktcMtaMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1))
if mibBuilder.loadTexts: pktcMtaMib.setLastUpdated('9912010000Z')
if mibBuilder.loadTexts: pktcMtaMib.setOrganization('IPCablecom OSS Group')
class X509Certificate(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 4096)

pktcMtaMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1))
pktcMtaDevBase = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1))
pktcMtaDevServer = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 2))
pktcMtaDevSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3))
pktcMtaDevEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4))
pktcMtaDevResetNow = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevResetNow.setStatus('current')
pktcMtaDevSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevSerialNumber.setStatus('current')
pktcMtaDevHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevHardwareVersion.setStatus('current')
pktcMtaDevMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevMacAddress.setStatus('current')
pktcMtaDevFQDN = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevFQDN.setStatus('current')
pktcMtaDevEndPntCount = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEndPntCount.setStatus('current')
pktcMtaDevEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEnabled.setStatus('current')
pktcMtaDevTypeIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevTypeIdentifier.setStatus('current')
pktcMtaDevProvisioningState = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pass", 1), ("inProgress", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevProvisioningState.setStatus('current')
pktcMtaDevHttpAccess = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevHttpAccess.setStatus('current')
pktcMtaDevManufacturerCertificate = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 1), X509Certificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevManufacturerCertificate.setStatus('current')
pktcMtaDevCertificate = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 2), X509Certificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevCertificate.setStatus('current')
pktcMtaDevSignature = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevSignature.setStatus('current')
pktcMtaDevCorrelationId = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevCorrelationId.setStatus('current')
pktcMtaDevSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5), )
if mibBuilder.loadTexts: pktcMtaDevSecurityTable.setStatus('current')
pktcMtaDevSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pktcMtaDevSecurityEntry.setStatus('current')
pktcMtaDevServProviderCertificate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 1), X509Certificate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevServProviderCertificate.setStatus('current')
pktcMtaDevTelephonyCertificate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 2), X509Certificate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevTelephonyCertificate.setStatus('current')
pktcMtaDevKerberosRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1280))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevKerberosRealm.setStatus('current')
pktcMtaDevKerbPrincipalName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevKerbPrincipalName.setStatus('current')
pktcMtaDevServGracePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevServGracePeriod.setStatus('current')
pktcMtaDevLocalSystemCertificate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 6), X509Certificate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevLocalSystemCertificate.setStatus('current')
pktcMtaDevKeyMgmtTimeout1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevKeyMgmtTimeout1.setStatus('current')
pktcMtaDevKeyMgmtTimeout2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevKeyMgmtTimeout2.setStatus('current')
pktcMtaDevTgsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 8), )
if mibBuilder.loadTexts: pktcMtaDevTgsTable.setStatus('current')
pktcMtaDevTgsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PKTC-MTA-MIB", "pktcMtaDevTgsIndex"))
if mibBuilder.loadTexts: pktcMtaDevTgsEntry.setStatus('current')
pktcMtaDevTgsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: pktcMtaDevTgsIndex.setStatus('current')
pktcMtaDevTgsLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevTgsLocation.setStatus('current')
pktcMtaDevTgsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 3, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcMtaDevTgsStatus.setStatus('current')
pktcMtaDevServerBootState = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("operational", 1), ("disabled", 2), ("waitingForDhcpOffer", 3), ("waitingForDhcpResponse", 4), ("waitingForConfig", 5), ("refusedByCmts", 6), ("other", 7), ("unknown", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevServerBootState.setStatus('current')
pktcMtaDevServerDhcp = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevServerDhcp.setStatus('current')
pktcMtaDevServerDns1 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevServerDns1.setStatus('current')
pktcMtaDevServerDns2 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 2, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevServerDns2.setStatus('current')
pktcMtaDevConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevConfigFile.setStatus('current')
pktcMtaDevSnmpEntity = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 2, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevSnmpEntity.setStatus('current')
pktcMtaDevEvControl = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("resetLog", 1), ("useDefaultReporting", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEvControl.setStatus('current')
pktcMtaDevEvSyslog = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEvSyslog.setStatus('current')
pktcMtaDevEvThrottleAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unconstrained", 1), ("maintainBelowThreshold", 2), ("stopAtThreshold", 3), ("inhibited", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEvThrottleAdminStatus.setStatus('current')
pktcMtaDevEvThrottleInhibited = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEvThrottleInhibited.setStatus('current')
pktcMtaDevEvThrottleThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEvThrottleThreshold.setStatus('current')
pktcMtaDevEvThrottleInterval = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEvThrottleInterval.setStatus('current')
pktcMtaDevEvControlTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 7), )
if mibBuilder.loadTexts: pktcMtaDevEvControlTable.setStatus('current')
pktcMtaDevEvControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 7, 1), ).setIndexNames((0, "PKTC-MTA-MIB", "pktcMtaDevEvPriority"))
if mibBuilder.loadTexts: pktcMtaDevEvControlEntry.setStatus('current')
pktcMtaDevEvPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("information", 7), ("debug", 8))))
if mibBuilder.loadTexts: pktcMtaDevEvPriority.setStatus('current')
pktcMtaDevEvReporting = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 7, 1, 2), Bits().clone(namedValues=NamedValues(("local", 0), ("traps", 1), ("syslog", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcMtaDevEvReporting.setStatus('current')
pktcMtaDevEventTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8), )
if mibBuilder.loadTexts: pktcMtaDevEventTable.setStatus('current')
pktcMtaDevEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1), ).setIndexNames((0, "PKTC-MTA-MIB", "pktcMtaDevEvIndex"))
if mibBuilder.loadTexts: pktcMtaDevEventEntry.setStatus('current')
pktcMtaDevEvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pktcMtaDevEvIndex.setStatus('current')
pktcMtaDevEvFirstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEvFirstTime.setStatus('current')
pktcMtaDevEvLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEvLastTime.setStatus('current')
pktcMtaDevEvCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEvCounts.setStatus('current')
pktcMtaDevEvLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("information", 5), ("notice", 6), ("debug", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEvLevel.setStatus('current')
pktcMtaDevEvId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEvId.setStatus('current')
pktcMtaDevEvText = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 1, 4, 8, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcMtaDevEvText.setStatus('current')
pktcMtaNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 2))
pktcMtaConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 3))
pktcMtaCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 3, 1))
pktcMtaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 3, 2))
pktcMtaProvisioningEnrollment = NotificationType((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 2, 1)).setObjects(("PKTC-MTA-MIB", "pktcMtaDevHardwareVersion"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSwCurrentVers"), ("PKTC-MTA-MIB", "pktcMtaDevTypeIdentifier"), ("PKTC-MTA-MIB", "pktcMtaDevMacAddress"), ("PKTC-MTA-MIB", "pktcMtaDevCorrelationId"), ("PKTC-MTA-MIB", "pktcMtaDevSignature"))
if mibBuilder.loadTexts: pktcMtaProvisioningEnrollment.setStatus('current')
pktcMtaProvisioningStatus = NotificationType((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 2, 2)).setObjects(("PKTC-MTA-MIB", "pktcMtaDevMacAddress"), ("PKTC-MTA-MIB", "pktcMtaDevCorrelationId"), ("PKTC-MTA-MIB", "pktcMtaDevSignature"), ("PKTC-MTA-MIB", "pktcMtaDevProvisioningState"))
if mibBuilder.loadTexts: pktcMtaProvisioningStatus.setStatus('current')
pktcMtaBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 3, 1, 3)).setObjects(("PKTC-MTA-MIB", "pktcMtaGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcMtaBasicCompliance = pktcMtaBasicCompliance.setStatus('current')
pktcMtaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 2, 1, 3, 2, 1)).setObjects(("PKTC-MTA-MIB", "pktcMtaDevResetNow"), ("PKTC-MTA-MIB", "pktcMtaDevSerialNumber"), ("PKTC-MTA-MIB", "pktcMtaDevHardwareVersion"), ("PKTC-MTA-MIB", "pktcMtaDevMacAddress"), ("PKTC-MTA-MIB", "pktcMtaDevFQDN"), ("PKTC-MTA-MIB", "pktcMtaDevEndPntCount"), ("PKTC-MTA-MIB", "pktcMtaDevEnabled"), ("PKTC-MTA-MIB", "pktcMtaDevTypeIdentifier"), ("PKTC-MTA-MIB", "pktcMtaDevProvisioningState"), ("PKTC-MTA-MIB", "pktcMtaDevCertificate"), ("PKTC-MTA-MIB", "pktcMtaDevSignature"), ("PKTC-MTA-MIB", "pktcMtaDevCorrelationId"), ("PKTC-MTA-MIB", "pktcMtaDevManufacturerCertificate"), ("PKTC-MTA-MIB", "pktcMtaDevTelephonyCertificate"), ("PKTC-MTA-MIB", "pktcMtaDevServProviderCertificate"), ("PKTC-MTA-MIB", "pktcMtaDevLocalSystemCertificate"), ("PKTC-MTA-MIB", "pktcMtaDevKerberosRealm"), ("PKTC-MTA-MIB", "pktcMtaDevTgsLocation"), ("PKTC-MTA-MIB", "pktcMtaDevKerbPrincipalName"), ("PKTC-MTA-MIB", "pktcMtaDevServGracePeriod"), ("PKTC-MTA-MIB", "pktcMtaDevKeyMgmtTimeout1"), ("PKTC-MTA-MIB", "pktcMtaDevKeyMgmtTimeout2"), ("PKTC-MTA-MIB", "pktcMtaDevServerBootState"), ("PKTC-MTA-MIB", "pktcMtaDevServerDhcp"), ("PKTC-MTA-MIB", "pktcMtaDevSnmpEntity"), ("PKTC-MTA-MIB", "pktcMtaDevEvControl"), ("PKTC-MTA-MIB", "pktcMtaDevEvSyslog"), ("PKTC-MTA-MIB", "pktcMtaDevEvThrottleAdminStatus"), ("PKTC-MTA-MIB", "pktcMtaDevEvThrottleInhibited"), ("PKTC-MTA-MIB", "pktcMtaDevEvThrottleThreshold"), ("PKTC-MTA-MIB", "pktcMtaDevEvThrottleInterval"), ("PKTC-MTA-MIB", "pktcMtaDevEvReporting"), ("PKTC-MTA-MIB", "pktcMtaDevEvFirstTime"), ("PKTC-MTA-MIB", "pktcMtaDevEvLastTime"), ("PKTC-MTA-MIB", "pktcMtaDevEvCounts"), ("PKTC-MTA-MIB", "pktcMtaDevEvLevel"), ("PKTC-MTA-MIB", "pktcMtaDevEvId"), ("PKTC-MTA-MIB", "pktcMtaDevEvText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcMtaGroup = pktcMtaGroup.setStatus('current')
mibBuilder.exportSymbols("PKTC-MTA-MIB", pktcMtaDevTelephonyCertificate=pktcMtaDevTelephonyCertificate, pktcMtaMib=pktcMtaMib, pktcMtaDevHardwareVersion=pktcMtaDevHardwareVersion, pktcMtaDevTgsStatus=pktcMtaDevTgsStatus, pktcMtaDevEvThrottleInterval=pktcMtaDevEvThrottleInterval, pktcMtaDevMacAddress=pktcMtaDevMacAddress, pktcMtaDevEvThrottleAdminStatus=pktcMtaDevEvThrottleAdminStatus, pktcMtaDevSignature=pktcMtaDevSignature, pktcMtaDevProvisioningState=pktcMtaDevProvisioningState, pktcMtaDevEvText=pktcMtaDevEvText, X509Certificate=X509Certificate, pktcMtaDevEvReporting=pktcMtaDevEvReporting, pktcMtaDevManufacturerCertificate=pktcMtaDevManufacturerCertificate, pktcMtaDevServProviderCertificate=pktcMtaDevServProviderCertificate, pktcMtaDevEventEntry=pktcMtaDevEventEntry, pktcMtaDevEndPntCount=pktcMtaDevEndPntCount, pktcMtaBasicCompliance=pktcMtaBasicCompliance, pktcMtaDevEvCounts=pktcMtaDevEvCounts, pktcMtaDevTgsLocation=pktcMtaDevTgsLocation, pktcMtaDevKerbPrincipalName=pktcMtaDevKerbPrincipalName, pktcMtaDevKeyMgmtTimeout2=pktcMtaDevKeyMgmtTimeout2, pktcMtaDevSnmpEntity=pktcMtaDevSnmpEntity, pktcMtaDevCertificate=pktcMtaDevCertificate, pktcMtaDevEvPriority=pktcMtaDevEvPriority, pktcMtaDevEventTable=pktcMtaDevEventTable, pktcMtaDevEvent=pktcMtaDevEvent, pktcMtaDevServGracePeriod=pktcMtaDevServGracePeriod, pktcMtaDevServerDns1=pktcMtaDevServerDns1, pktcMtaDevFQDN=pktcMtaDevFQDN, pktcMtaDevSecurityEntry=pktcMtaDevSecurityEntry, pktcMtaDevKerberosRealm=pktcMtaDevKerberosRealm, pktcMtaDevTgsTable=pktcMtaDevTgsTable, pktcMtaDevHttpAccess=pktcMtaDevHttpAccess, pktcMtaDevEvLevel=pktcMtaDevEvLevel, pktcMtaDevBase=pktcMtaDevBase, pktcMtaMibObjects=pktcMtaMibObjects, pktcMtaDevServerDhcp=pktcMtaDevServerDhcp, pktcMtaDevSerialNumber=pktcMtaDevSerialNumber, pktcMtaDevTypeIdentifier=pktcMtaDevTypeIdentifier, pktcMtaDevTgsIndex=pktcMtaDevTgsIndex, pktcMtaProvisioningEnrollment=pktcMtaProvisioningEnrollment, pktcMtaDevConfigFile=pktcMtaDevConfigFile, pktcMtaDevEvThrottleThreshold=pktcMtaDevEvThrottleThreshold, pktcMtaDevServerDns2=pktcMtaDevServerDns2, pktcMtaDevEvControl=pktcMtaDevEvControl, pktcMtaProvisioningStatus=pktcMtaProvisioningStatus, pktcMtaDevEnabled=pktcMtaDevEnabled, pktcMtaDevCorrelationId=pktcMtaDevCorrelationId, pktcMtaDevTgsEntry=pktcMtaDevTgsEntry, pktcMtaDevServer=pktcMtaDevServer, pktcMtaDevKeyMgmtTimeout1=pktcMtaDevKeyMgmtTimeout1, pktcMtaGroup=pktcMtaGroup, pktcMtaDevEvSyslog=pktcMtaDevEvSyslog, pktcMtaDevEvIndex=pktcMtaDevEvIndex, pktcMtaDevLocalSystemCertificate=pktcMtaDevLocalSystemCertificate, pktcMtaDevEvControlTable=pktcMtaDevEvControlTable, pktcMtaDevEvId=pktcMtaDevEvId, pktcMtaCompliances=pktcMtaCompliances, pktcMtaDevEvThrottleInhibited=pktcMtaDevEvThrottleInhibited, pktcMtaDevServerBootState=pktcMtaDevServerBootState, pktcMtaDevEvControlEntry=pktcMtaDevEvControlEntry, pktcMtaDevEvLastTime=pktcMtaDevEvLastTime, pktcMtaDevSecurity=pktcMtaDevSecurity, PYSNMP_MODULE_ID=pktcMtaMib, pktcMtaDevEvFirstTime=pktcMtaDevEvFirstTime, pktcMtaNotification=pktcMtaNotification, pktcMtaConformance=pktcMtaConformance, pktcMtaDevResetNow=pktcMtaDevResetNow, pktcMtaDevSecurityTable=pktcMtaDevSecurityTable, pktcMtaGroups=pktcMtaGroups)
