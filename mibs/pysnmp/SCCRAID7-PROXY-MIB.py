#
# PySNMP MIB module SCCRAID7-PROXY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCCRAID7-PROXY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
raid7proxy, = mibBuilder.importSymbols("SCC-ENTERPRISE-MIB", "raid7proxy")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, Counter64, NotificationType, iso, IpAddress, Bits, Gauge32, TimeTicks, Integer32, Counter32, ModuleIdentity, ObjectIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "Counter64", "NotificationType", "iso", "IpAddress", "Bits", "Gauge32", "TimeTicks", "Integer32", "Counter32", "ModuleIdentity", "ObjectIdentity", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
raid7Agent = MibIdentifier((1, 3, 6, 1, 4, 1, 1386, 2, 2, 1))
raid7Link = MibIdentifier((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2))
raid7proxyMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7proxyMibVersion.setStatus('mandatory')
raid7proxyAgentVersion = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7proxyAgentVersion.setStatus('mandatory')
raid7CacheLifetime = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7CacheLifetime.setStatus('mandatory')
raid7CacheTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7CacheTimeouts.setStatus('mandatory')
raid7BadValues = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7BadValues.setStatus('mandatory')
raid7LinkName = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkName.setStatus('mandatory')
raid7LinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("openfailed", 2), ("quiet", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkStatus.setStatus('mandatory')
raid7LinkUp = NotificationType((1, 3, 6, 1, 4, 1, 1386, 2, 2) + (0,1)).setObjects(("SCCRAID7-PROXY-MIB", "raid7LinkName"), ("SCCRAID7-PROXY-MIB", "raid7LinkStatus"))
raid7LinkDown = NotificationType((1, 3, 6, 1, 4, 1, 1386, 2, 2) + (0,2)).setObjects(("SCCRAID7-PROXY-MIB", "raid7LinkName"), ("SCCRAID7-PROXY-MIB", "raid7LinkStatus"))
raid7LinkInactivityTime = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkInactivityTime.setStatus('mandatory')
raid7LinkRcvBytes = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkRcvBytes.setStatus('mandatory')
raid7LinkXmtBytes = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkXmtBytes.setStatus('mandatory')
raid7LinkRcvFrames = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkRcvFrames.setStatus('mandatory')
raid7LinkXmtFrames = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkXmtFrames.setStatus('mandatory')
raid7LinkFramingErrors = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkFramingErrors.setStatus('mandatory')
raid7LinkChecksumErrors = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkChecksumErrors.setStatus('mandatory')
raid7LinkBadVersions = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkBadVersions.setStatus('mandatory')
raid7LinkBadIds = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkBadIds.setStatus('mandatory')
raid7LinkBadInstances = MibScalar((1, 3, 6, 1, 4, 1, 1386, 2, 2, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raid7LinkBadInstances.setStatus('mandatory')
mibBuilder.exportSymbols("SCCRAID7-PROXY-MIB", raid7LinkInactivityTime=raid7LinkInactivityTime, raid7CacheLifetime=raid7CacheLifetime, raid7LinkBadInstances=raid7LinkBadInstances, raid7proxyAgentVersion=raid7proxyAgentVersion, raid7Agent=raid7Agent, raid7LinkBadVersions=raid7LinkBadVersions, raid7CacheTimeouts=raid7CacheTimeouts, raid7LinkStatus=raid7LinkStatus, raid7LinkName=raid7LinkName, raid7LinkChecksumErrors=raid7LinkChecksumErrors, raid7BadValues=raid7BadValues, raid7LinkXmtFrames=raid7LinkXmtFrames, raid7LinkRcvFrames=raid7LinkRcvFrames, raid7LinkFramingErrors=raid7LinkFramingErrors, raid7proxyMibVersion=raid7proxyMibVersion, raid7LinkXmtBytes=raid7LinkXmtBytes, raid7LinkRcvBytes=raid7LinkRcvBytes, raid7LinkBadIds=raid7LinkBadIds, raid7Link=raid7Link, raid7LinkUp=raid7LinkUp, raid7LinkDown=raid7LinkDown)
