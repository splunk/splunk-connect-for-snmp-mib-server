#
# PySNMP MIB module DSLAM-BACKUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DSLAM-BACKUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:39:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
AtmVpIdentifier, AtmVcIdentifier, AtmVorXOperStatus = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVpIdentifier", "AtmVcIdentifier", "AtmVorXOperStatus")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
pgainDSLAM, = mibBuilder.importSymbols("PAIRGAIN-COMMON-HD-MIB", "pgainDSLAM")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, IpAddress, Counter32, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, ModuleIdentity, Bits, Gauge32, Unsigned32, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "IpAddress", "Counter32", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "ModuleIdentity", "Bits", "Gauge32", "Unsigned32", "iso", "MibIdentifier")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
pgBackupMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 927, 1, 9, 19))
if mibBuilder.loadTexts: pgBackupMIB.setLastUpdated('')
if mibBuilder.loadTexts: pgBackupMIB.setOrganization('PairGain Technologies, Inc.')
pgBackupObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1))
pgBackupPortTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 1), )
if mibBuilder.loadTexts: pgBackupPortTable.setStatus('current')
pgBackupPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pgBackupPortEntry.setStatus('current')
pgBackupPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgBackupPortAdminStatus.setStatus('current')
pgBackupVpTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2), )
if mibBuilder.loadTexts: pgBackupVpTable.setStatus('current')
pgBackupVpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1), ).setIndexNames((0, "DSLAM-BACKUP-MIB", "pgBackupVpPrimaryIfIndex"), (0, "DSLAM-BACKUP-MIB", "pgBackupVpPrimaryVpi"), (0, "DSLAM-BACKUP-MIB", "pgBackupVpSecondaryIfIndex"), (0, "DSLAM-BACKUP-MIB", "pgBackupVpSecondaryVpi"))
if mibBuilder.loadTexts: pgBackupVpEntry.setStatus('current')
pgBackupVpPrimaryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pgBackupVpPrimaryIfIndex.setStatus('current')
pgBackupVpPrimaryVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: pgBackupVpPrimaryVpi.setStatus('current')
pgBackupVpSecondaryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: pgBackupVpSecondaryIfIndex.setStatus('current')
pgBackupVpSecondaryVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 4), AtmVpIdentifier())
if mibBuilder.loadTexts: pgBackupVpSecondaryVpi.setStatus('current')
pgBackupVpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 5), RowStatus().clone('createAndWait')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pgBackupVpRowStatus.setStatus('current')
pgBackupVpPrimaryAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgBackupVpPrimaryAdminStatus.setStatus('current')
pgBackupVpPrimaryOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 7), AtmVorXOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgBackupVpPrimaryOperStatus.setStatus('current')
pgBackupVpSecondaryOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 8), AtmVorXOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgBackupVpSecondaryOperStatus.setStatus('current')
pgBackupVpSwitchTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgBackupVpSwitchTimes.setStatus('current')
pgBackupVcTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3), )
if mibBuilder.loadTexts: pgBackupVcTable.setStatus('current')
pgBackupVcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1), ).setIndexNames((0, "DSLAM-BACKUP-MIB", "pgBackupVcPrimaryIfIndex"), (0, "DSLAM-BACKUP-MIB", "pgBackupVcPrimaryVpi"), (0, "DSLAM-BACKUP-MIB", "pgBackupVcPrimaryVci"), (0, "DSLAM-BACKUP-MIB", "pgBackupVcSecondaryIfIndex"), (0, "DSLAM-BACKUP-MIB", "pgBackupVcSecondaryVpi"), (0, "DSLAM-BACKUP-MIB", "pgBackupVcSecondaryVci"))
if mibBuilder.loadTexts: pgBackupVcEntry.setStatus('current')
pgBackupVcPrimaryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pgBackupVcPrimaryIfIndex.setStatus('current')
pgBackupVcPrimaryVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: pgBackupVcPrimaryVpi.setStatus('current')
pgBackupVcPrimaryVci = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 3), AtmVcIdentifier())
if mibBuilder.loadTexts: pgBackupVcPrimaryVci.setStatus('current')
pgBackupVcSecondaryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 4), InterfaceIndex())
if mibBuilder.loadTexts: pgBackupVcSecondaryIfIndex.setStatus('current')
pgBackupVcSecondaryVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 5), AtmVpIdentifier())
if mibBuilder.loadTexts: pgBackupVcSecondaryVpi.setStatus('current')
pgBackupVcSecondaryVci = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 6), AtmVcIdentifier())
if mibBuilder.loadTexts: pgBackupVcSecondaryVci.setStatus('current')
pgBackupVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 7), RowStatus().clone('createAndWait')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pgBackupVcRowStatus.setStatus('current')
pgBackupVcPrimaryAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgBackupVcPrimaryAdminStatus.setStatus('current')
pgBackupVcPrimaryOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 9), AtmVorXOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgBackupVcPrimaryOperStatus.setStatus('current')
pgBackupVcSecondaryOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 10), AtmVorXOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgBackupVcSecondaryOperStatus.setStatus('current')
pgBackupVcSwitchTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 19, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgBackupVcSwitchTimes.setStatus('current')
mibBuilder.exportSymbols("DSLAM-BACKUP-MIB", pgBackupPortAdminStatus=pgBackupPortAdminStatus, pgBackupVcSecondaryOperStatus=pgBackupVcSecondaryOperStatus, pgBackupVpSecondaryVpi=pgBackupVpSecondaryVpi, pgBackupPortEntry=pgBackupPortEntry, pgBackupVpPrimaryVpi=pgBackupVpPrimaryVpi, pgBackupVcSecondaryVpi=pgBackupVcSecondaryVpi, pgBackupMIB=pgBackupMIB, pgBackupVcEntry=pgBackupVcEntry, pgBackupVcPrimaryVci=pgBackupVcPrimaryVci, pgBackupVpRowStatus=pgBackupVpRowStatus, pgBackupVcSwitchTimes=pgBackupVcSwitchTimes, pgBackupVpSecondaryOperStatus=pgBackupVpSecondaryOperStatus, pgBackupVpPrimaryAdminStatus=pgBackupVpPrimaryAdminStatus, pgBackupVpSecondaryIfIndex=pgBackupVpSecondaryIfIndex, pgBackupPortTable=pgBackupPortTable, PYSNMP_MODULE_ID=pgBackupMIB, pgBackupVpEntry=pgBackupVpEntry, pgBackupVcPrimaryVpi=pgBackupVcPrimaryVpi, pgBackupVcTable=pgBackupVcTable, pgBackupObjects=pgBackupObjects, pgBackupVcRowStatus=pgBackupVcRowStatus, pgBackupVcSecondaryIfIndex=pgBackupVcSecondaryIfIndex, pgBackupVcPrimaryOperStatus=pgBackupVcPrimaryOperStatus, pgBackupVcPrimaryIfIndex=pgBackupVcPrimaryIfIndex, pgBackupVpSwitchTimes=pgBackupVpSwitchTimes, pgBackupVpTable=pgBackupVpTable, pgBackupVcSecondaryVci=pgBackupVcSecondaryVci, pgBackupVpPrimaryIfIndex=pgBackupVpPrimaryIfIndex, pgBackupVpPrimaryOperStatus=pgBackupVpPrimaryOperStatus, pgBackupVcPrimaryAdminStatus=pgBackupVcPrimaryAdminStatus)
