#
# PySNMP MIB module NETSCREEN-RIPv2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-RIPv2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
netscreenVR, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVR")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter64, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, TimeTicks, Bits, Gauge32, MibIdentifier, Integer32, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "TimeTicks", "Bits", "Gauge32", "MibIdentifier", "Integer32", "Unsigned32", "iso")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
nsRip2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 18, 4))
if mibBuilder.loadTexts: nsRip2.setLastUpdated('200506032022Z')
if mibBuilder.loadTexts: nsRip2.setOrganization('IETF RIP-II Working Group')
class RouteTag(TextualConvention, OctetString):
    status = 'deprecated'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

nsRip2GlobalsTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 4, 1), )
if mibBuilder.loadTexts: nsRip2GlobalsTable.setStatus('deprecated')
nsRip2GlobalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 4, 1, 1), ).setIndexNames((0, "NETSCREEN-RIPv2-MIB", "nsRip2GlobalVRID"))
if mibBuilder.loadTexts: nsRip2GlobalsEntry.setStatus('deprecated')
nsRip2GlobalRouteChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2GlobalRouteChanges.setStatus('deprecated')
nsRip2GlobalQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2GlobalQueries.setStatus('deprecated')
nsRip2GlobalVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2GlobalVRID.setStatus('deprecated')
nsRip2IfStatTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2), )
if mibBuilder.loadTexts: nsRip2IfStatTable.setStatus('deprecated')
nsRip2IfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2, 1), ).setIndexNames((0, "NETSCREEN-RIPv2-MIB", "nsRip2IfStatAddress"), (0, "NETSCREEN-RIPv2-MIB", "nsRip2IfStatVRID"))
if mibBuilder.loadTexts: nsRip2IfStatEntry.setStatus('deprecated')
nsRip2IfStatAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2IfStatAddress.setStatus('deprecated')
nsRip2IfStatRcvBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2IfStatRcvBadPackets.setStatus('deprecated')
nsRip2IfStatRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2IfStatRcvBadRoutes.setStatus('deprecated')
nsRip2IfStatSentUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2IfStatSentUpdates.setStatus('deprecated')
nsRip2IfStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfStatStatus.setStatus('deprecated')
nsRip2IfStatVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2IfStatVRID.setStatus('deprecated')
nsRip2IfConfTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3), )
if mibBuilder.loadTexts: nsRip2IfConfTable.setStatus('deprecated')
nsRip2IfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1), ).setIndexNames((0, "NETSCREEN-RIPv2-MIB", "nsRip2IfConfAddress"), (0, "NETSCREEN-RIPv2-MIB", "nsRip2IfConfVRID"))
if mibBuilder.loadTexts: nsRip2IfConfEntry.setStatus('deprecated')
nsRip2IfConfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2IfConfAddress.setStatus('deprecated')
nsRip2IfConfDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 2), RouteTag().clone(hexValue="0000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfDomain.setStatus('obsolete')
nsRip2IfConfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthentication", 1), ("simplePassword", 2), ("md5", 3))).clone('noAuthentication')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfAuthType.setStatus('deprecated')
nsRip2IfConfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfAuthKey.setStatus('deprecated')
nsRip2IfConfSend = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("doNotSend", 1), ("ripVersion1", 2), ("rip1Compatible", 3), ("ripVersion2", 4), ("ripV1Demand", 5), ("ripV2Demand", 6))).clone('rip1Compatible')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfSend.setStatus('deprecated')
nsRip2IfConfReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rip1", 1), ("rip2", 2), ("rip1OrRip2", 3), ("doNotRecieve", 4))).clone('rip1OrRip2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfReceive.setStatus('deprecated')
nsRip2IfConfDefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfDefaultMetric.setStatus('deprecated')
nsRip2IfConfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfStatus.setStatus('deprecated')
nsRip2IfConfSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsRip2IfConfSrcAddress.setStatus('deprecated')
nsRip2IfConfVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2IfConfVRID.setStatus('deprecated')
nsRip2PeerTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4), )
if mibBuilder.loadTexts: nsRip2PeerTable.setStatus('deprecated')
nsRip2PeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1), ).setIndexNames((0, "NETSCREEN-RIPv2-MIB", "nsRip2PeerAddress"), (0, "NETSCREEN-RIPv2-MIB", "nsRip2PeerDomain"), (0, "NETSCREEN-RIPv2-MIB", "nsRip2PeerVRID"))
if mibBuilder.loadTexts: nsRip2PeerEntry.setStatus('deprecated')
nsRip2PeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2PeerAddress.setStatus('deprecated')
nsRip2PeerDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1, 2), RouteTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2PeerDomain.setStatus('deprecated')
nsRip2PeerLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2PeerLastUpdate.setStatus('deprecated')
nsRip2PeerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2PeerVersion.setStatus('deprecated')
nsRip2PeerRcvBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2PeerRcvBadPackets.setStatus('deprecated')
nsRip2PeerRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2PeerRcvBadRoutes.setStatus('deprecated')
nsRip2PeerVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 4, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsRip2PeerVRID.setStatus('deprecated')
mibBuilder.exportSymbols("NETSCREEN-RIPv2-MIB", nsRip2IfConfDefaultMetric=nsRip2IfConfDefaultMetric, nsRip2IfStatAddress=nsRip2IfStatAddress, nsRip2=nsRip2, nsRip2PeerTable=nsRip2PeerTable, nsRip2PeerEntry=nsRip2PeerEntry, nsRip2IfConfAddress=nsRip2IfConfAddress, RouteTag=RouteTag, nsRip2IfConfSend=nsRip2IfConfSend, nsRip2IfConfEntry=nsRip2IfConfEntry, nsRip2PeerVersion=nsRip2PeerVersion, nsRip2PeerRcvBadRoutes=nsRip2PeerRcvBadRoutes, nsRip2IfStatSentUpdates=nsRip2IfStatSentUpdates, nsRip2IfStatTable=nsRip2IfStatTable, nsRip2IfStatStatus=nsRip2IfStatStatus, nsRip2PeerLastUpdate=nsRip2PeerLastUpdate, nsRip2GlobalsTable=nsRip2GlobalsTable, PYSNMP_MODULE_ID=nsRip2, nsRip2IfConfAuthKey=nsRip2IfConfAuthKey, nsRip2PeerDomain=nsRip2PeerDomain, nsRip2IfStatVRID=nsRip2IfStatVRID, nsRip2IfConfVRID=nsRip2IfConfVRID, nsRip2IfConfReceive=nsRip2IfConfReceive, nsRip2GlobalVRID=nsRip2GlobalVRID, nsRip2IfStatEntry=nsRip2IfStatEntry, nsRip2IfStatRcvBadPackets=nsRip2IfStatRcvBadPackets, nsRip2IfConfDomain=nsRip2IfConfDomain, nsRip2IfConfSrcAddress=nsRip2IfConfSrcAddress, nsRip2GlobalRouteChanges=nsRip2GlobalRouteChanges, nsRip2IfStatRcvBadRoutes=nsRip2IfStatRcvBadRoutes, nsRip2IfConfAuthType=nsRip2IfConfAuthType, nsRip2IfConfTable=nsRip2IfConfTable, nsRip2GlobalQueries=nsRip2GlobalQueries, nsRip2IfConfStatus=nsRip2IfConfStatus, nsRip2PeerVRID=nsRip2PeerVRID, nsRip2GlobalsEntry=nsRip2GlobalsEntry, nsRip2PeerRcvBadPackets=nsRip2PeerRcvBadPackets, nsRip2PeerAddress=nsRip2PeerAddress)
