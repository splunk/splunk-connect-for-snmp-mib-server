#
# PySNMP MIB module Hub-facs-prvt (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/tin/Dev/mibs.snmplabs.com/asn1/Hub-facs-prvt
# Produced by pysmi-0.3.4 at Fri Jan 31 21:31:35 2020
# On host bier platform Linux version 5.4.0-3-amd64 by user tin
# Using Python version 3.7.6 (default, Jan 19 2020, 22:34:52) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Bits, Counter64, Unsigned32, ModuleIdentity, NotificationType, Counter32, MibIdentifier, mgmt, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, IpAddress, TimeTicks, NotificationType, internet = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Bits", "Counter64", "Unsigned32", "ModuleIdentity", "NotificationType", "Counter32", "MibIdentifier", "mgmt", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "IpAddress", "TimeTicks", "NotificationType", "internet")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
fibronics = MibIdentifier((1, 3, 6, 1, 4, 1, 22))
trap = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 3))
traprun = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 3, 1))
traperm = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 3, 2))
trapvar = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 3, 3))
fm800 = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 51))
fmsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 51, 1))
fmdiag = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 51, 5))
fmdebug = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 51, 6))
fmsystemrun = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 51, 1, 1))
fmsystemperm = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 51, 1, 2))
rTrapAddrTbl = MibTable((1, 3, 6, 1, 4, 1, 22, 3, 1, 1), )
if mibBuilder.loadTexts: rTrapAddrTbl.setStatus('mandatory')
rTrapAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1), ).setMaxAccess("readonly").setIndexNames((0, "Hub-facs-prvt", "rTrapAddrAddr"))
if mibBuilder.loadTexts: rTrapAddrEntry.setStatus('mandatory')
rTrapAddrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rTrapAddrAddr.setStatus('mandatory')
rTrapAddrComm = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rTrapAddrComm.setStatus('mandatory')
rTrapAddrVer = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rTrapAddrVer.setStatus('mandatory')
rTrapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rTrapAddrType.setStatus('mandatory')
rTrapAddrState = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rTrapAddrState.setStatus('mandatory')
rTrapAddrFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fixed", 0), ("removable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rTrapAddrFlag.setStatus('mandatory')
rTrapAddrAge = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTrapAddrAge.setStatus('mandatory')
rTrapLearning = MibScalar((1, 3, 6, 1, 4, 1, 22, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTrapLearning.setStatus('mandatory')
rTrapAging = MibScalar((1, 3, 6, 1, 4, 1, 22, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTrapAging.setStatus('mandatory')
pTrapAddrTbl = MibTable((1, 3, 6, 1, 4, 1, 22, 3, 2, 1), )
if mibBuilder.loadTexts: pTrapAddrTbl.setStatus('mandatory')
pTrapAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22, 3, 2, 1, 1), ).setMaxAccess("readwrite").setIndexNames((0, "Hub-facs-prvt", "pTrapAddrAddr"))
if mibBuilder.loadTexts: pTrapAddrEntry.setStatus('mandatory')
pTrapAddrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 2, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapAddrAddr.setStatus('mandatory')
pTrapAddrComm = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 2, 1, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapAddrComm.setStatus('mandatory')
pTrapAddrVer = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapAddrVer.setStatus('mandatory')
pTrapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 2, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapAddrType.setStatus('mandatory')
pTrapAddrState = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapAddrState.setStatus('mandatory')
pTrapLearning = MibScalar((1, 3, 6, 1, 4, 1, 22, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapLearning.setStatus('mandatory')
pTrapAging = MibScalar((1, 3, 6, 1, 4, 1, 22, 3, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pTrapAging.setStatus('mandatory')
fmSystemReset = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 127))).clone(namedValues=NamedValues(("cold-reset", 0), ("warm-reset", 1), ("power-up", 2), ("meaning-less-value", 127)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSystemReset.setStatus('mandatory')
fmSystemSelfTestLevel = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("partial", 1), ("full", 2), ("extended", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSystemSelfTestLevel.setStatus('mandatory')
fmSystemIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemIpAddr.setStatus('mandatory')
fmSystemIPNetMask = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemIPNetMask.setStatus('mandatory')
fmSystemIPDefGway = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemIPDefGway.setStatus('mandatory')
fmSystemFileServer = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSystemFileServer.setStatus('mandatory')
fmSystemBootFile = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemBootFile.setStatus('mandatory')
fmSystemDownLoad = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 127))).clone(namedValues=NamedValues(("download", 1), ("meaning-less-value", 127)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSystemDownLoad.setStatus('mandatory')
fmSystemSlipIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemSlipIpAddr.setStatus('mandatory')
fmSystemSlipIPNetMask = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemSlipIPNetMask.setStatus('mandatory')
fmSystemSlipBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("baud1200", 0), ("baud2400", 1), ("baud4800", 2), ("baud9600", 3), ("baud19200", 4), ("baud38400", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemSlipBaudRate.setStatus('mandatory')
fmSystemSlipParity = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("odd", 1), ("even", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemSlipParity.setStatus('mandatory')
fmSystemSlipStopBits = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("one", 0), ("two", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemSlipStopBits.setStatus('mandatory')
fmSystemLastSourceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemLastSourceIpAddr.setStatus('mandatory')
fmSystemLastDestinationIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 1, 21), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSystemLastDestinationIpAddr.setStatus('mandatory')
pfmSystemIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemIpAddr.setStatus('mandatory')
pfmSystemIPNetMask = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemIPNetMask.setStatus('mandatory')
pfmSystemIPDefGway = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemIPDefGway.setStatus('mandatory')
pfmSystemFileServer = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemFileServer.setStatus('mandatory')
pfmSystemBootFile = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemBootFile.setStatus('mandatory')
pfmSystemReadCommunity = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemReadCommunity.setStatus('mandatory')
pfmSystemWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 14), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemWriteCommunity.setStatus('mandatory')
pfmSystemSlipIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemSlipIpAddr.setStatus('mandatory')
pfmSystemSlipIPNetMask = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemSlipIPNetMask.setStatus('mandatory')
pfmSystemSlipBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("baud1200", 0), ("baud2400", 1), ("baud4800", 2), ("baud9600", 3), ("baud19200", 4), ("baud38400", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemSlipBaudRate.setStatus('mandatory')
pfmSystemSlipParity = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("odd", 1), ("even", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemSlipParity.setStatus('mandatory')
pfmSystemSlipStopBits = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 1, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("one", 0), ("two", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pfmSystemSlipStopBits.setStatus('mandatory')
fmDiagTrapInfo = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDiagTrapInfo.setStatus('mandatory')
fmDiagFaultTable = MibTable((1, 3, 6, 1, 4, 1, 22, 51, 5, 3), )
if mibBuilder.loadTexts: fmDiagFaultTable.setStatus('optional')
fmDiagFaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22, 51, 5, 3, 1), ).setIndexNames((0, "Hub-facs-prvt", "fmDiagFaultIndex"))
if mibBuilder.loadTexts: fmDiagFaultEntry.setStatus('optional')
fmDiagFaultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 51, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDiagFaultIndex.setStatus('optional')
fmDiagFaultReport = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 51, 5, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDiagFaultReport.setStatus('optional')
fmDiagDebug = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal-mode", 1), ("debug-mode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDiagDebug.setStatus('mandatory')
fmDiagDeleteFaults = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no-delete", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDiagDeleteFaults.setStatus('mandatory')
fmDebugReadMem = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 6, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDebugReadMem.setStatus('mandatory')
fmDebugReadEeprom = MibScalar((1, 3, 6, 1, 4, 1, 22, 51, 6, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDebugReadEeprom.setStatus('mandatory')
fmDiagGenericTrap = NotificationType((1, 3, 6, 1, 4, 1, 22, 51) + (0,30)).setObjects(("Hub-facs-prvt", "fmDiagTrapInfo"))
fmDiagDownloadTrap = NotificationType((1, 3, 6, 1, 4, 1, 22, 51) + (0,31)).setObjects(("Hub-facs-prvt", "fmSystemLastSourceIpAddr"), ("Hub-facs-prvt", "fmSystemLastDestinationIpAddr"))
mibBuilder.exportSymbols("Hub-facs-prvt", fmSystemFileServer=fmSystemFileServer, pfmSystemIPNetMask=pfmSystemIPNetMask, pTrapAddrType=pTrapAddrType, pTrapAging=pTrapAging, fmSystemSlipIpAddr=fmSystemSlipIpAddr, rTrapLearning=rTrapLearning, trapvar=trapvar, fmSystemLastDestinationIpAddr=fmSystemLastDestinationIpAddr, rTrapAddrType=rTrapAddrType, fmDiagFaultIndex=fmDiagFaultIndex, traperm=traperm, fmsystemrun=fmsystemrun, pTrapAddrComm=pTrapAddrComm, fmSystemReset=fmSystemReset, pfmSystemIPDefGway=pfmSystemIPDefGway, fmSystemIPNetMask=fmSystemIPNetMask, traprun=traprun, fmDebugReadMem=fmDebugReadMem, fmSystemDownLoad=fmSystemDownLoad, fmDiagTrapInfo=fmDiagTrapInfo, fmDiagFaultEntry=fmDiagFaultEntry, fmSystemLastSourceIpAddr=fmSystemLastSourceIpAddr, fmsystemperm=fmsystemperm, rTrapAddrEntry=rTrapAddrEntry, rTrapAddrFlag=rTrapAddrFlag, pfmSystemReadCommunity=pfmSystemReadCommunity, private=private, rTrapAddrVer=rTrapAddrVer, pfmSystemFileServer=pfmSystemFileServer, pfmSystemWriteCommunity=pfmSystemWriteCommunity, rTrapAddrAge=rTrapAddrAge, enterprises=enterprises, fmdiag=fmdiag, rTrapAging=rTrapAging, fm800=fm800, pfmSystemSlipBaudRate=pfmSystemSlipBaudRate, pTrapLearning=pTrapLearning, rTrapAddrAddr=rTrapAddrAddr, rTrapAddrState=rTrapAddrState, pTrapAddrState=pTrapAddrState, fmDiagFaultReport=fmDiagFaultReport, fibronics=fibronics, pfmSystemSlipParity=pfmSystemSlipParity, rTrapAddrTbl=rTrapAddrTbl, fmDiagDeleteFaults=fmDiagDeleteFaults, fmDiagDownloadTrap=fmDiagDownloadTrap, rTrapAddrComm=rTrapAddrComm, pfmSystemSlipIpAddr=pfmSystemSlipIpAddr, pTrapAddrEntry=pTrapAddrEntry, fmSystemSelfTestLevel=fmSystemSelfTestLevel, fmSystemIPDefGway=fmSystemIPDefGway, pfmSystemBootFile=pfmSystemBootFile, fmSystemSlipParity=fmSystemSlipParity, fmSystemIpAddr=fmSystemIpAddr, pTrapAddrTbl=pTrapAddrTbl, pTrapAddrVer=pTrapAddrVer, pfmSystemSlipStopBits=pfmSystemSlipStopBits, fmDiagFaultTable=fmDiagFaultTable, fmDiagDebug=fmDiagDebug, pfmSystemIpAddr=pfmSystemIpAddr, pfmSystemSlipIPNetMask=pfmSystemSlipIPNetMask, fmSystemSlipStopBits=fmSystemSlipStopBits, pTrapAddrAddr=pTrapAddrAddr, fmSystemBootFile=fmSystemBootFile, fmDiagGenericTrap=fmDiagGenericTrap, fmdebug=fmdebug, fmSystemSlipIPNetMask=fmSystemSlipIPNetMask, fmsystem=fmsystem, fmSystemSlipBaudRate=fmSystemSlipBaudRate, trap=trap, fmDebugReadEeprom=fmDebugReadEeprom)
