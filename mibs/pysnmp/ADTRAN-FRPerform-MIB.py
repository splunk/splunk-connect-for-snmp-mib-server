#
# PySNMP MIB module ADTRAN-FRPerform-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADTRAN-FRPerform-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:59:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adtran, adProducts, adMgmt, adProdPhysAddress = mibBuilder.importSymbols("ADTRAN-MIB", "adtran", "adProducts", "adMgmt", "adProdPhysAddress")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, NotificationType, Counter32, Unsigned32, iso, TimeTicks, Bits, Gauge32, Integer32, enterprises, ObjectIdentity, ModuleIdentity, Counter64, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "NotificationType", "Counter32", "Unsigned32", "iso", "TimeTicks", "Bits", "Gauge32", "Integer32", "enterprises", "ObjectIdentity", "ModuleIdentity", "Counter64", "MibIdentifier", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
adPerform = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4))
adFRPerformmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1))
adFRPerformHistoryControl = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 1))
adFRPerformCurrentPvcStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 2))
adFRPerformIntPvcStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 3))
adFRPerformIntPortStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 4))
adFRPerformIntPortError = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 5))
adFRPerformIntHistoryTime = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 6))
adFRPerformDayPvcStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 7))
adFRPerformDayPortStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 8))
adFRPerformDayPortError = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 9))
adFRPerformDayHistoryTime = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4, 1, 10))
adFRPerformHistoryIntLength = MibScalar((1, 3, 6, 1, 4, 1, 664, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("min5", 1), ("min10", 2), ("min15", 3), ("min20", 4), ("min30", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adFRPerformHistoryIntLength.setStatus('mandatory')
adFRPerformCurrentIntTimeRemaining = MibScalar((1, 3, 6, 1, 4, 1, 664, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformCurrentIntTimeRemaining.setStatus('mandatory')
adFRPerformCompletedInts = MibScalar((1, 3, 6, 1, 4, 1, 664, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformCompletedInts.setStatus('mandatory')
adFRPerformCompletedDays = MibScalar((1, 3, 6, 1, 4, 1, 664, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformCompletedDays.setStatus('mandatory')
adFRPerformCurrentPvcStatusTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 2, 1), )
if mibBuilder.loadTexts: adFRPerformCurrentPvcStatusTable.setStatus('mandatory')
adFRPerformCurrentPvcStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 2, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformCurrentPvcIfIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformCurrentPvcStatusIndex"))
if mibBuilder.loadTexts: adFRPerformCurrentPvcStatusEntry.setStatus('mandatory')
adFRPerformCurrentPvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformCurrentPvcIfIndex.setStatus('mandatory')
adFRPerformCurrentPvcStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformCurrentPvcStatusIndex.setStatus('mandatory')
adFRPerformCurrentPvcState = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformCurrentPvcState.setStatus('mandatory')
adFRPerformCurrentPvcStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("not-available", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformCurrentPvcStatistics.setStatus('mandatory')
adFRPerformIntPvcStatusTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1), )
if mibBuilder.loadTexts: adFRPerformIntPvcStatusTable.setStatus('mandatory')
adFRPerformIntPvcStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformIntPvcIfIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformIntPvcIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformIntPvcSlotIndex"))
if mibBuilder.loadTexts: adFRPerformIntPvcStatusEntry.setStatus('mandatory')
adFRPerformIntPvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPvcIfIndex.setStatus('mandatory')
adFRPerformIntPvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPvcIndex.setStatus('mandatory')
adFRPerformIntPvcSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPvcSlotIndex.setStatus('mandatory')
adFRPerformIntPVCStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCStateChange.setStatus('mandatory')
adFRPerformIntPVCInactiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCInactiveTime.setStatus('mandatory')
adFRPerformIntPVCFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCFramesRx.setStatus('mandatory')
adFRPerformIntPVCFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCFramesTx.setStatus('mandatory')
adFRPerformIntPVCBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCBytesRx.setStatus('mandatory')
adFRPerformIntPVCBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCBytesTx.setStatus('mandatory')
adFRPerformIntPVCAvgThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCAvgThruputTx.setStatus('mandatory')
adFRPerformIntPVCAvgThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCAvgThruputRx.setStatus('mandatory')
adFRPerformIntPVCMaxThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMaxThruputTx.setStatus('mandatory')
adFRPerformIntPVCMaxThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMaxThruputRx.setStatus('mandatory')
adFRPerformIntPVCAvgUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCAvgUtilizationTx.setStatus('mandatory')
adFRPerformIntPVCAvgUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCAvgUtilizationRx.setStatus('mandatory')
adFRPerformIntPVCMaxUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMaxUtilizationTx.setStatus('mandatory')
adFRPerformIntPVCMaxUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMaxUtilizationRx.setStatus('mandatory')
adFRPerformIntPVCBurstTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCBurstTx.setStatus('mandatory')
adFRPerformIntPVCBurstRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCBurstRx.setStatus('mandatory')
adFRPerformIntPVCFecnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCFecnRx.setStatus('mandatory')
adFRPerformIntPVCFecnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCFecnTx.setStatus('mandatory')
adFRPerformIntPVCBecnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCBecnRx.setStatus('mandatory')
adFRPerformIntPVCBecnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCBecnTx.setStatus('mandatory')
adFRPerformIntPVCDeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCDeRx.setStatus('mandatory')
adFRPerformIntPVCDeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCDeTx.setStatus('mandatory')
adFRPerformIntPVCCrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCCrRx.setStatus('mandatory')
adFRPerformIntPVCCrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCCrTx.setStatus('mandatory')
adFRPerformIntPVCMinFrameSizeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMinFrameSizeRx.setStatus('mandatory')
adFRPerformIntPVCMinFrameSizeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMinFrameSizeTx.setStatus('mandatory')
adFRPerformIntPVCMaxFrameSizeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMaxFrameSizeRx.setStatus('mandatory')
adFRPerformIntPVCMaxFrameSizeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMaxFrameSizeTx.setStatus('mandatory')
adFRPerformIntPVCAvgFrameSizeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCAvgFrameSizeRx.setStatus('mandatory')
adFRPerformIntPVCAvgFrameSizeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCAvgFrameSizeTx.setStatus('mandatory')
adFRPerformIntPVCLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCLostFrames.setStatus('mandatory')
adFRPerformIntPVCRemoteLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCRemoteLostFrames.setStatus('mandatory')
adFRPerformIntPVCMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMaxDelay.setStatus('mandatory')
adFRPerformIntPVCMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCMinDelay.setStatus('mandatory')
adFRPerformIntPVCAvgDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCAvgDelay.setStatus('mandatory')
adFRPerformIntPVCTimeInDBU = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 3, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPVCTimeInDBU.setStatus('mandatory')
adFRPerformIntPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1), )
if mibBuilder.loadTexts: adFRPerformIntPortStatusTable.setStatus('mandatory')
adFRPerformIntPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformIntIfIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformIntPortSlotIndex"))
if mibBuilder.loadTexts: adFRPerformIntPortStatusEntry.setStatus('mandatory')
adFRPerformIntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntIfIndex.setStatus('mandatory')
adFRPerformIntPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortSlotIndex.setStatus('mandatory')
adFRPerformIntPortFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortFramesRx.setStatus('mandatory')
adFRPerformIntPortFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortFramesTx.setStatus('mandatory')
adFRPerformIntPortBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortBytesRx.setStatus('mandatory')
adFRPerformIntPortBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortBytesTx.setStatus('mandatory')
adFRPerformIntPortAvgThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortAvgThruputTx.setStatus('mandatory')
adFRPerformIntPortAvgThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortAvgThruputRx.setStatus('mandatory')
adFRPerformIntPortMaxThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortMaxThruputTx.setStatus('mandatory')
adFRPerformIntPortMaxThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortMaxThruputRx.setStatus('mandatory')
adFRPerformIntPortAvgUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortAvgUtilizationTx.setStatus('mandatory')
adFRPerformIntPortAvgUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortAvgUtilizationRx.setStatus('mandatory')
adFRPerformIntPortMaxUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortMaxUtilizationTx.setStatus('mandatory')
adFRPerformIntPortMaxUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortMaxUtilizationRx.setStatus('mandatory')
adFRPerformIntPortFullStatusRX = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortFullStatusRX.setStatus('mandatory')
adFRPerformIntPortFullStatusTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortFullStatusTx.setStatus('mandatory')
adFRPerformIntPortLIOnlyRX = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortLIOnlyRX.setStatus('mandatory')
adFRPerformIntPortLIOnlyTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortLIOnlyTx.setStatus('mandatory')
adFRPerformIntPortAsyncStatusFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortAsyncStatusFrame.setStatus('mandatory')
adFRPerformIntPortErrorTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1), )
if mibBuilder.loadTexts: adFRPerformIntPortErrorTable.setStatus('mandatory')
adFRPerformIntPortErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformIntPortIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformIntPortErrorSlotIndex"))
if mibBuilder.loadTexts: adFRPerformIntPortErrorEntry.setStatus('mandatory')
adFRPerformIntPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortIndex.setStatus('mandatory')
adFRPerformIntPortErrorSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortErrorSlotIndex.setStatus('mandatory')
adFRPerformIntPortUnavailableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntPortUnavailableTime.setStatus('mandatory')
adFRPerformIntCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntCrcErrors.setStatus('mandatory')
adFRPerformIntAbortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntAbortFrames.setStatus('mandatory')
adFRPerformIntOctectViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntOctectViolations.setStatus('mandatory')
adFRPerformIntDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntDiscardFrames.setStatus('mandatory')
adFRPerformIntLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntLengthErrors.setStatus('mandatory')
adFRPerformIntEAViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntEAViolations.setStatus('mandatory')
adFRPerformIntEncapsulationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntEncapsulationErrors.setStatus('mandatory')
adFRPerformIntInactiveDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntInactiveDLCI.setStatus('mandatory')
adFRPerformIntInvalidDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntInvalidDLCI.setStatus('mandatory')
adFRPerformIntUnroutable = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntUnroutable.setStatus('mandatory')
adFRPerformIntSignalDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntSignalDownTime.setStatus('mandatory')
adFRPerformIntSignalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntSignalErrors.setStatus('mandatory')
adFRPerformIntSignalTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntSignalTimeOut.setStatus('mandatory')
adFRPerformIntSignalStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 5, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntSignalStateChange.setStatus('mandatory')
adFRPerformIntHistoryTimeTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 6, 1), )
if mibBuilder.loadTexts: adFRPerformIntHistoryTimeTable.setStatus('mandatory')
adFRPerformIntHistoryTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 6, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformIntHistoryTimeSlotIndex"))
if mibBuilder.loadTexts: adFRPerformIntHistoryTimeEntry.setStatus('mandatory')
adFRPerformIntHistoryTimeSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntHistoryTimeSlotIndex.setStatus('mandatory')
adFRPerformIntHistorySlotTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntHistorySlotTotalTime.setStatus('mandatory')
adFRPerformIntHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformIntHistoryTimeStamp.setStatus('mandatory')
adFRPerformDayPvcStatusTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1), )
if mibBuilder.loadTexts: adFRPerformDayPvcStatusTable.setStatus('mandatory')
adFRPerformDayPvcStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformDayPvcIfIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformDayPvcIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformDayPvcSlotIndex"))
if mibBuilder.loadTexts: adFRPerformDayPvcStatusEntry.setStatus('mandatory')
adFRPerformDayPvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPvcIfIndex.setStatus('mandatory')
adFRPerformDayPvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPvcIndex.setStatus('mandatory')
adFRPerformDayPvcSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPvcSlotIndex.setStatus('mandatory')
adFRPerformDayPVCStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCStateChange.setStatus('mandatory')
adFRPerformDayPVCInactiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCInactiveTime.setStatus('mandatory')
adFRPerformDayPVCFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCFramesRx.setStatus('mandatory')
adFRPerformDayPVCFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCFramesTx.setStatus('mandatory')
adFRPerformDayPVCBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCBytesRx.setStatus('mandatory')
adFRPerformDayPVCBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCBytesTx.setStatus('mandatory')
adFRPerformDayPVCAvgThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCAvgThruputTx.setStatus('mandatory')
adFRPerformDayPVCAvgThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCAvgThruputRx.setStatus('mandatory')
adFRPerformDayPVCMaxThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMaxThruputTx.setStatus('mandatory')
adFRPerformDayPVCMaxThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMaxThruputRx.setStatus('mandatory')
adFRPerformDayPVCAvgUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCAvgUtilizationTx.setStatus('mandatory')
adFRPerformDayPVCAvgUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCAvgUtilizationRx.setStatus('mandatory')
adFRPerformDayPVCMaxUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMaxUtilizationTx.setStatus('mandatory')
adFRPerformDayPVCMaxUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMaxUtilizationRx.setStatus('mandatory')
adFRPerformDayPVCBurstTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCBurstTx.setStatus('mandatory')
adFRPerformDayPVCBurstRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCBurstRx.setStatus('mandatory')
adFRPerformDayPVCFecnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCFecnRx.setStatus('mandatory')
adFRPerformDayPVCFecnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCFecnTx.setStatus('mandatory')
adFRPerformDayPVCBecnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCBecnRx.setStatus('mandatory')
adFRPerformDayPVCBecnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCBecnTx.setStatus('mandatory')
adFRPerformDayPVCDeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCDeRx.setStatus('mandatory')
adFRPerformDayPVCDeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCDeTx.setStatus('mandatory')
adFRPerformDayPVCCrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCCrRx.setStatus('mandatory')
adFRPerformDayPVCCrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCCrTx.setStatus('mandatory')
adFRPerformDayPVCMinFrameSizeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMinFrameSizeRx.setStatus('mandatory')
adFRPerformDayPVCMinFrameSizeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMinFrameSizeTx.setStatus('mandatory')
adFRPerformDayPVCMaxFrameSizeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMaxFrameSizeRx.setStatus('mandatory')
adFRPerformDayPVCMaxFrameSizeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMaxFrameSizeTx.setStatus('mandatory')
adFRPerformDayPVCAvgFrameSizeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCAvgFrameSizeRx.setStatus('mandatory')
adFRPerformDayPVCAvgFrameSizeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCAvgFrameSizeTx.setStatus('mandatory')
adFRPerformDayPVCLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCLostFrames.setStatus('mandatory')
adFRPerformDayPVCRemoteLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCRemoteLostFrames.setStatus('mandatory')
adFRPerformDayPVCMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMaxDelay.setStatus('mandatory')
adFRPerformDayPVCMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCMinDelay.setStatus('mandatory')
adFRPerformDayPVCAvgDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCAvgDelay.setStatus('mandatory')
adFRPerformDayPVCTimeInDBU = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 7, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPVCTimeInDBU.setStatus('mandatory')
adFRPerformDayPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1), )
if mibBuilder.loadTexts: adFRPerformDayPortStatusTable.setStatus('mandatory')
adFRPerformDayPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformDayIfIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformDayPortSlotIndex"))
if mibBuilder.loadTexts: adFRPerformDayPortStatusEntry.setStatus('mandatory')
adFRPerformDayIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayIfIndex.setStatus('mandatory')
adFRPerformDayPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortSlotIndex.setStatus('mandatory')
adFRPerformDayPortFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortFramesRx.setStatus('mandatory')
adFRPerformDayPortFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortFramesTx.setStatus('mandatory')
adFRPerformDayPortBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortBytesRx.setStatus('mandatory')
adFRPerformDayPortBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortBytesTx.setStatus('mandatory')
adFRPerformDayPortAvgThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortAvgThruputTx.setStatus('mandatory')
adFRPerformDayPortAvgThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortAvgThruputRx.setStatus('mandatory')
adFRPerformDayPortMaxThruputTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortMaxThruputTx.setStatus('mandatory')
adFRPerformDayPortMaxThruputRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortMaxThruputRx.setStatus('mandatory')
adFRPerformDayPortAvgUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortAvgUtilizationTx.setStatus('mandatory')
adFRPerformDayPortAvgUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortAvgUtilizationRx.setStatus('mandatory')
adFRPerformDayPortMaxUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortMaxUtilizationTx.setStatus('mandatory')
adFRPerformDayPortMaxUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortMaxUtilizationRx.setStatus('mandatory')
adFRPerformDayPortFullStatusRX = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortFullStatusRX.setStatus('mandatory')
adFRPerformDayPortFullStatusTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortFullStatusTx.setStatus('mandatory')
adFRPerformDayPortLIOnlyRX = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortLIOnlyRX.setStatus('mandatory')
adFRPerformDayPortLIOnlyTx = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortLIOnlyTx.setStatus('mandatory')
adFRPerformDayPortAsyncStatusFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 8, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortAsyncStatusFrame.setStatus('mandatory')
adFRPerformDayPortErrorTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1), )
if mibBuilder.loadTexts: adFRPerformDayPortErrorTable.setStatus('mandatory')
adFRPerformDayPortErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformDayPortIndex"), (0, "ADTRAN-FRPerform-MIB", "adFRPerformDayPortErrorSlotIndex"))
if mibBuilder.loadTexts: adFRPerformDayPortErrorEntry.setStatus('mandatory')
adFRPerformDayPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortIndex.setStatus('mandatory')
adFRPerformDayPortErrorSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortErrorSlotIndex.setStatus('mandatory')
adFRPerformDayPortUnavailableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayPortUnavailableTime.setStatus('mandatory')
adFRPerformDayCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayCrcErrors.setStatus('mandatory')
adFRPerformDayAbortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayAbortFrames.setStatus('mandatory')
adFRPerformDayOctectViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayOctectViolations.setStatus('mandatory')
adFRPerformDayDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayDiscardFrames.setStatus('mandatory')
adFRPerformDayLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayLengthErrors.setStatus('mandatory')
adFRPerformDayEAViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayEAViolations.setStatus('mandatory')
adFRPerformDayEncapsulationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayEncapsulationErrors.setStatus('mandatory')
adFRPerformDayInactiveDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayInactiveDLCI.setStatus('mandatory')
adFRPerformDayInvalidDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayInvalidDLCI.setStatus('mandatory')
adFRPerformDayUnroutable = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayUnroutable.setStatus('mandatory')
adFRPerformDaySignalDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDaySignalDownTime.setStatus('mandatory')
adFRPerformDaySignalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDaySignalErrors.setStatus('mandatory')
adFRPerformDaySignalTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDaySignalTimeOut.setStatus('mandatory')
adFRPerformDaySignalStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 9, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDaySignalStateChange.setStatus('mandatory')
adFRPerformDayHistoryTimeTable = MibTable((1, 3, 6, 1, 4, 1, 664, 4, 1, 10, 1), )
if mibBuilder.loadTexts: adFRPerformDayHistoryTimeTable.setStatus('mandatory')
adFRPerformDayHistoryTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 4, 1, 10, 1, 1), ).setIndexNames((0, "ADTRAN-FRPerform-MIB", "adFRPerformDayHistoryTimeSlotIndex"))
if mibBuilder.loadTexts: adFRPerformDayHistoryTimeEntry.setStatus('mandatory')
adFRPerformDayHistoryTimeSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayHistoryTimeSlotIndex.setStatus('mandatory')
adFRPerformDayHistorySlotTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayHistorySlotTotalTime.setStatus('mandatory')
adFRPerformDayHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 4, 1, 10, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adFRPerformDayHistoryTimeStamp.setStatus('mandatory')
mibBuilder.exportSymbols("ADTRAN-FRPerform-MIB", adFRPerformDayPortBytesTx=adFRPerformDayPortBytesTx, adFRPerformDayPvcIndex=adFRPerformDayPvcIndex, adFRPerformDayPortIndex=adFRPerformDayPortIndex, adFRPerformIntHistoryTimeSlotIndex=adFRPerformIntHistoryTimeSlotIndex, adFRPerformDayPortAvgThruputRx=adFRPerformDayPortAvgThruputRx, adFRPerformDayPVCAvgFrameSizeTx=adFRPerformDayPVCAvgFrameSizeTx, adFRPerformIntPortUnavailableTime=adFRPerformIntPortUnavailableTime, adFRPerformIntPVCBecnTx=adFRPerformIntPVCBecnTx, adFRPerformIntHistoryTimeEntry=adFRPerformIntHistoryTimeEntry, adFRPerformDayPortLIOnlyRX=adFRPerformDayPortLIOnlyRX, adFRPerformDayPVCDeRx=adFRPerformDayPVCDeRx, adFRPerformIntPVCFecnTx=adFRPerformIntPVCFecnTx, adFRPerformCompletedInts=adFRPerformCompletedInts, adFRPerformDayPVCMaxFrameSizeTx=adFRPerformDayPVCMaxFrameSizeTx, adFRPerformIntPVCMinDelay=adFRPerformIntPVCMinDelay, adFRPerformDayPVCAvgFrameSizeRx=adFRPerformDayPVCAvgFrameSizeRx, adFRPerformDayPVCRemoteLostFrames=adFRPerformDayPVCRemoteLostFrames, adFRPerformDaySignalTimeOut=adFRPerformDaySignalTimeOut, adFRPerformDayPvcStatusTable=adFRPerformDayPvcStatusTable, adFRPerformDayPVCLostFrames=adFRPerformDayPVCLostFrames, adFRPerformIntPVCAvgFrameSizeRx=adFRPerformIntPVCAvgFrameSizeRx, adFRPerformCurrentIntTimeRemaining=adFRPerformCurrentIntTimeRemaining, adFRPerformDayPortMaxUtilizationRx=adFRPerformDayPortMaxUtilizationRx, adFRPerformDayInactiveDLCI=adFRPerformDayInactiveDLCI, adFRPerformDayPortAvgThruputTx=adFRPerformDayPortAvgThruputTx, adFRPerformIntPVCDeTx=adFRPerformIntPVCDeTx, adFRPerformDayPortFramesTx=adFRPerformDayPortFramesTx, adFRPerformIntPvcStatusEntry=adFRPerformIntPvcStatusEntry, adFRPerformIntPVCAvgThruputTx=adFRPerformIntPVCAvgThruputTx, adFRPerformIntPortMaxUtilizationTx=adFRPerformIntPortMaxUtilizationTx, adFRPerformDayPVCTimeInDBU=adFRPerformDayPVCTimeInDBU, adFRPerformDaySignalErrors=adFRPerformDaySignalErrors, adFRPerformDayPortAvgUtilizationTx=adFRPerformDayPortAvgUtilizationTx, adFRPerformDayPVCInactiveTime=adFRPerformDayPVCInactiveTime, adFRPerformDayPVCAvgUtilizationTx=adFRPerformDayPVCAvgUtilizationTx, adFRPerformDayPortLIOnlyTx=adFRPerformDayPortLIOnlyTx, adFRPerformDayPVCMinFrameSizeTx=adFRPerformDayPVCMinFrameSizeTx, adFRPerformIntPVCBurstTx=adFRPerformIntPVCBurstTx, adFRPerformDayPVCMaxFrameSizeRx=adFRPerformDayPVCMaxFrameSizeRx, adFRPerformIntPVCAvgUtilizationRx=adFRPerformIntPVCAvgUtilizationRx, adFRPerformDayHistoryTimeStamp=adFRPerformDayHistoryTimeStamp, adFRPerformDayPortAvgUtilizationRx=adFRPerformDayPortAvgUtilizationRx, adFRPerformDayPortStatusTable=adFRPerformDayPortStatusTable, adFRPerformIntPVCAvgFrameSizeTx=adFRPerformIntPVCAvgFrameSizeTx, adFRPerformIntUnroutable=adFRPerformIntUnroutable, adFRPerformDayInvalidDLCI=adFRPerformDayInvalidDLCI, adFRPerformDayPVCAvgUtilizationRx=adFRPerformDayPVCAvgUtilizationRx, adFRPerformIntPVCMaxUtilizationTx=adFRPerformIntPVCMaxUtilizationTx, adFRPerformIntPVCTimeInDBU=adFRPerformIntPVCTimeInDBU, adFRPerformIntPortFramesRx=adFRPerformIntPortFramesRx, adFRPerformDayPVCMaxDelay=adFRPerformDayPVCMaxDelay, adFRPerformIntPVCCrTx=adFRPerformIntPVCCrTx, adFRPerformIntPortBytesRx=adFRPerformIntPortBytesRx, adFRPerformIntPvcIndex=adFRPerformIntPvcIndex, adFRPerformDayPVCMaxUtilizationTx=adFRPerformDayPVCMaxUtilizationTx, adFRPerformIntOctectViolations=adFRPerformIntOctectViolations, adFRPerformDayPortError=adFRPerformDayPortError, adFRPerformDayPortErrorEntry=adFRPerformDayPortErrorEntry, adFRPerformIntEAViolations=adFRPerformIntEAViolations, adFRPerformDayPVCBytesTx=adFRPerformDayPVCBytesTx, adFRPerformIntSignalStateChange=adFRPerformIntSignalStateChange, adFRPerformDayUnroutable=adFRPerformDayUnroutable, adFRPerformIntPVCLostFrames=adFRPerformIntPVCLostFrames, adFRPerformIntPortMaxUtilizationRx=adFRPerformIntPortMaxUtilizationRx, adFRPerformDayPVCBecnTx=adFRPerformDayPVCBecnTx, adFRPerformIntPortError=adFRPerformIntPortError, adFRPerformDayPVCFecnTx=adFRPerformDayPVCFecnTx, adFRPerformIntPortMaxThruputTx=adFRPerformIntPortMaxThruputTx, adFRPerformDayPVCMinDelay=adFRPerformDayPVCMinDelay, adFRPerformIntPVCMinFrameSizeRx=adFRPerformIntPVCMinFrameSizeRx, adFRPerformDayHistorySlotTotalTime=adFRPerformDayHistorySlotTotalTime, adFRPerformIntPVCInactiveTime=adFRPerformIntPVCInactiveTime, adFRPerformDayPortStatus=adFRPerformDayPortStatus, adFRPerformIntAbortFrames=adFRPerformIntAbortFrames, adFRPerformIntInactiveDLCI=adFRPerformIntInactiveDLCI, adFRPerformDayPortMaxUtilizationTx=adFRPerformDayPortMaxUtilizationTx, adFRPerformDayAbortFrames=adFRPerformDayAbortFrames, adFRPerformIntPortAvgUtilizationRx=adFRPerformIntPortAvgUtilizationRx, adFRPerformDayPortFramesRx=adFRPerformDayPortFramesRx, adFRPerformDayPVCAvgThruputRx=adFRPerformDayPVCAvgThruputRx, adFRPerformDayPortStatusEntry=adFRPerformDayPortStatusEntry, adFRPerformDayHistoryTime=adFRPerformDayHistoryTime, adFRPerformIntLengthErrors=adFRPerformIntLengthErrors, adFRPerformIntPVCBytesTx=adFRPerformIntPVCBytesTx, adFRPerformIntPortAvgThruputRx=adFRPerformIntPortAvgThruputRx, adFRPerformDayHistoryTimeTable=adFRPerformDayHistoryTimeTable, adFRPerformIntPVCMinFrameSizeTx=adFRPerformIntPVCMinFrameSizeTx, adFRPerformIntPVCFecnRx=adFRPerformIntPVCFecnRx, adFRPerformDayPVCFramesTx=adFRPerformDayPVCFramesTx, adFRPerformDayPVCFramesRx=adFRPerformDayPVCFramesRx, adFRPerformDayPortErrorSlotIndex=adFRPerformDayPortErrorSlotIndex, adFRPerformCurrentPvcStatusEntry=adFRPerformCurrentPvcStatusEntry, adFRPerformDayPVCMaxThruputTx=adFRPerformDayPVCMaxThruputTx, adFRPerformIntEncapsulationErrors=adFRPerformIntEncapsulationErrors, adFRPerformIntPVCMaxUtilizationRx=adFRPerformIntPVCMaxUtilizationRx, adFRPerformIntSignalErrors=adFRPerformIntSignalErrors, adFRPerformDayIfIndex=adFRPerformDayIfIndex, adFRPerformIntPVCAvgUtilizationTx=adFRPerformIntPVCAvgUtilizationTx, adFRPerformDayHistoryTimeEntry=adFRPerformDayHistoryTimeEntry, adFRPerformIntPVCAvgThruputRx=adFRPerformIntPVCAvgThruputRx, adFRPerformDayPVCCrRx=adFRPerformDayPVCCrRx, adFRPerformDayPVCAvgDelay=adFRPerformDayPVCAvgDelay, adFRPerformIntPVCRemoteLostFrames=adFRPerformIntPVCRemoteLostFrames, adFRPerformDayPortErrorTable=adFRPerformDayPortErrorTable, adFRPerformIntHistoryTimeStamp=adFRPerformIntHistoryTimeStamp, adFRPerformDayPortAsyncStatusFrame=adFRPerformDayPortAsyncStatusFrame, adFRPerformDayPVCAvgThruputTx=adFRPerformDayPVCAvgThruputTx, adFRPerformDayPortMaxThruputTx=adFRPerformDayPortMaxThruputTx, adFRPerformCurrentPvcStatistics=adFRPerformCurrentPvcStatistics, adFRPerformDayPVCBecnRx=adFRPerformDayPVCBecnRx, adFRPerformDaySignalStateChange=adFRPerformDaySignalStateChange, adFRPerformDayEAViolations=adFRPerformDayEAViolations, adFRPerformIntPvcSlotIndex=adFRPerformIntPvcSlotIndex, adFRPerformIntPVCBurstRx=adFRPerformIntPVCBurstRx, adFRPerformIntDiscardFrames=adFRPerformIntDiscardFrames, adFRPerformHistoryControl=adFRPerformHistoryControl, adFRPerformDayPVCMaxThruputRx=adFRPerformDayPVCMaxThruputRx, adFRPerformIntPVCAvgDelay=adFRPerformIntPVCAvgDelay, adFRPerformDayPvcIfIndex=adFRPerformDayPvcIfIndex, adFRPerformDayPortMaxThruputRx=adFRPerformDayPortMaxThruputRx, adFRPerformIntPortFramesTx=adFRPerformIntPortFramesTx, adFRPerformIntPvcStatusTable=adFRPerformIntPvcStatusTable, adFRPerformIntPortLIOnlyTx=adFRPerformIntPortLIOnlyTx, adFRPerformIntIfIndex=adFRPerformIntIfIndex, adFRPerformDayPVCMaxUtilizationRx=adFRPerformDayPVCMaxUtilizationRx, adFRPerformDaySignalDownTime=adFRPerformDaySignalDownTime, adFRPerformIntPVCBytesRx=adFRPerformIntPVCBytesRx, adFRPerformIntPortSlotIndex=adFRPerformIntPortSlotIndex, adFRPerformIntInvalidDLCI=adFRPerformIntInvalidDLCI, adFRPerformDayPvcStatus=adFRPerformDayPvcStatus, adFRPerformIntPortStatusTable=adFRPerformIntPortStatusTable, adFRPerformDayPVCFecnRx=adFRPerformDayPVCFecnRx, adFRPerformDayPVCMinFrameSizeRx=adFRPerformDayPVCMinFrameSizeRx, adFRPerformIntHistoryTime=adFRPerformIntHistoryTime, adFRPerformIntPvcIfIndex=adFRPerformIntPvcIfIndex, adFRPerformIntCrcErrors=adFRPerformIntCrcErrors, adFRPerformDayPortSlotIndex=adFRPerformDayPortSlotIndex, adFRPerformIntPortStatusEntry=adFRPerformIntPortStatusEntry, adFRPerformDayOctectViolations=adFRPerformDayOctectViolations, adFRPerformDayDiscardFrames=adFRPerformDayDiscardFrames, adFRPerformIntPortFullStatusTx=adFRPerformIntPortFullStatusTx, adFRPerformDayLengthErrors=adFRPerformDayLengthErrors, adFRPerformIntPortAvgThruputTx=adFRPerformIntPortAvgThruputTx, adFRPerformCurrentPvcStatus=adFRPerformCurrentPvcStatus, adFRPerformIntPVCFramesRx=adFRPerformIntPVCFramesRx, adFRPerformIntHistorySlotTotalTime=adFRPerformIntHistorySlotTotalTime, adFRPerformIntPVCCrRx=adFRPerformIntPVCCrRx, adFRPerformIntPortErrorTable=adFRPerformIntPortErrorTable, adFRPerformIntHistoryTimeTable=adFRPerformIntHistoryTimeTable, adFRPerformDayPVCBurstRx=adFRPerformDayPVCBurstRx, adFRPerformIntPortBytesTx=adFRPerformIntPortBytesTx, adFRPerformIntPVCMaxThruputTx=adFRPerformIntPVCMaxThruputTx, adFRPerformIntSignalDownTime=adFRPerformIntSignalDownTime, adFRPerformCompletedDays=adFRPerformCompletedDays, adFRPerformIntPVCMaxThruputRx=adFRPerformIntPVCMaxThruputRx, adFRPerformDayPVCBurstTx=adFRPerformDayPVCBurstTx, adFRPerformIntPortErrorSlotIndex=adFRPerformIntPortErrorSlotIndex, adFRPerformHistoryIntLength=adFRPerformHistoryIntLength, adFRPerformIntPVCMaxDelay=adFRPerformIntPVCMaxDelay, adFRPerformIntPortMaxThruputRx=adFRPerformIntPortMaxThruputRx, adFRPerformDayCrcErrors=adFRPerformDayCrcErrors, adFRPerformIntSignalTimeOut=adFRPerformIntSignalTimeOut, adFRPerformCurrentPvcStatusTable=adFRPerformCurrentPvcStatusTable, adFRPerformDayPortUnavailableTime=adFRPerformDayPortUnavailableTime, adFRPerformIntPVCMaxFrameSizeRx=adFRPerformIntPVCMaxFrameSizeRx, adFRPerformIntPortFullStatusRX=adFRPerformIntPortFullStatusRX, adFRPerformDayPVCDeTx=adFRPerformDayPVCDeTx, adFRPerformIntPVCMaxFrameSizeTx=adFRPerformIntPVCMaxFrameSizeTx, adFRPerformDayPVCBytesRx=adFRPerformDayPVCBytesRx, adFRPerformDayPVCStateChange=adFRPerformDayPVCStateChange, adFRPerformIntPVCBecnRx=adFRPerformIntPVCBecnRx, adFRPerformIntPortAsyncStatusFrame=adFRPerformIntPortAsyncStatusFrame, adFRPerformDayPVCCrTx=adFRPerformDayPVCCrTx, adFRPerformIntPortIndex=adFRPerformIntPortIndex, adFRPerformDayPortBytesRx=adFRPerformDayPortBytesRx, adFRPerformIntPVCFramesTx=adFRPerformIntPVCFramesTx, adFRPerformmg=adFRPerformmg, adFRPerformIntPortLIOnlyRX=adFRPerformIntPortLIOnlyRX, adFRPerformDayPvcStatusEntry=adFRPerformDayPvcStatusEntry, adPerform=adPerform, adFRPerformDayHistoryTimeSlotIndex=adFRPerformDayHistoryTimeSlotIndex, adFRPerformIntPvcStatus=adFRPerformIntPvcStatus, adFRPerformCurrentPvcState=adFRPerformCurrentPvcState, adFRPerformDayPortFullStatusTx=adFRPerformDayPortFullStatusTx, adFRPerformDayPortFullStatusRX=adFRPerformDayPortFullStatusRX, adFRPerformIntPortStatus=adFRPerformIntPortStatus, adFRPerformIntPortErrorEntry=adFRPerformIntPortErrorEntry, adFRPerformDayEncapsulationErrors=adFRPerformDayEncapsulationErrors, adFRPerformDayPvcSlotIndex=adFRPerformDayPvcSlotIndex, adFRPerformIntPVCStateChange=adFRPerformIntPVCStateChange, adFRPerformCurrentPvcStatusIndex=adFRPerformCurrentPvcStatusIndex, adFRPerformIntPortAvgUtilizationTx=adFRPerformIntPortAvgUtilizationTx, adFRPerformCurrentPvcIfIndex=adFRPerformCurrentPvcIfIndex, adFRPerformIntPVCDeRx=adFRPerformIntPVCDeRx)
