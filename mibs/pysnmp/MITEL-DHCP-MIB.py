#
# PySNMP MIB module MITEL-DHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MITEL-DHCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:02:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, Bits, TimeTicks, enterprises, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, Integer32, Counter32, ObjectIdentity, MibIdentifier, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "Bits", "TimeTicks", "enterprises", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "Integer32", "Counter32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "IpAddress")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
mitelRouterDhcpGroup = ModuleIdentity((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3))
mitelRouterDhcpGroup.setRevisions(('2005-11-07 12:00', '2003-03-21 12:31', '1999-03-01 00:00',))
if mibBuilder.loadTexts: mitelRouterDhcpGroup.setLastUpdated('200511071200Z')
if mibBuilder.loadTexts: mitelRouterDhcpGroup.setOrganization('MITEL Corporation')
class MitelDhcpServerProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3), ("bootp-or-dhcp", 4))

class MitelDhcpServerOptionList(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 1))
    namedValues = NamedValues(("time-offset", 2), ("default-router", 3), ("time-server", 4), ("name-server", 5), ("dns-server", 6), ("log-server", 7), ("cookie-server", 8), ("lpr-server", 9), ("impress-server", 10), ("resource-location-server", 11), ("host-name", 12), ("boot-file-size", 13), ("merit-dump-file-name", 14), ("domain-name", 15), ("swap-server", 16), ("root-path", 17), ("extension-path", 18), ("ip-forwarding", 19), ("non-local-source-routing", 20), ("policy-filter", 21), ("max-datagram-reassembly", 22), ("default-ip-time-to-live", 23), ("path-MTU-aging-timeout", 24), ("path-MTU-plateau-table", 25), ("interface-MTU-value", 26), ("all-subnets-are-local", 27), ("broadcast-address", 28), ("perform-mask-discovery", 29), ("mask-supplier", 30), ("perform-router-discovery", 31), ("router-solicitation-address", 32), ("static-route", 33), ("trailer-encapsulation", 34), ("arp-cache-timeout", 35), ("ethernet-encapsulation", 36), ("tcp-default-ttl", 37), ("tcp-keepalive-interval", 38), ("tcp-keepalive-garbage", 39), ("nis-domain-name", 40), ("nis-server", 41), ("ntp-server", 42), ("vendor-specific-information", 43), ("netbios-ip-name-server", 44), ("netbios-ip-dgram-distrib-server", 45), ("netbios-ip-node-type", 46), ("netbios-ip-scope", 47), ("x-window-font-server", 48), ("x-window-display-manager", 49), ("nis-plus-domain", 64), ("nis-plus-server", 65), ("tftp-server-name", 66), ("bootfile-name", 67), ("mobile-ip-home-agent", 68), ("smtp-server", 69), ("pop3-server", 70), ("nntp-server", 71), ("www-server", 72), ("finger-server", 73), ("irc-server", 74), ("streettalk-server", 75), ("streettalk-directory-assistance-server", 76), ("requested-ip", 50), ("lease-time", 51), ("option-overload", 52), ("message-type", 53), ("server-identifier", 54), ("parameter-request-list", 55), ("message", 56), ("max-dhcp-message-size", 57), ("renewal-time-value-t1", 58), ("rebinding-time-value-t2", 59), ("vendor-class-identifier", 60), ("client-identifier", 61), ("subnet-mask", 1))

mitel = MibIdentifier((1, 3, 6, 1, 4, 1, 1027))
mitelProprietary = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 4))
mitelPropIpNetworking = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 4, 8))
mitelIpNetRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1))
mitelIdentification = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 1))
mitelIdCallServers = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 1, 2))
mitelIdCsIpera1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 1, 2, 4))
mitelDhcpRelayAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpRelayAgentEnable.setStatus('current')
mitelDhcpRelayAgentMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpRelayAgentMaxHops.setStatus('current')
mitelDhcpRelayAgentBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpRelayAgentBroadcast.setStatus('current')
mitelDhcpRelayAgentServerTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 3), )
if mibBuilder.loadTexts: mitelDhcpRelayAgentServerTable.setStatus('current')
mitelDhcpRelayAgentServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 3, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpRelayAgentServerAddr"))
if mibBuilder.loadTexts: mitelDhcpRelayAgentServerEntry.setStatus('current')
mitelDhcpRelayAgentServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpRelayAgentServerAddr.setStatus('current')
mitelDhcpRelayAgentServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpRelayAgentServerName.setStatus('current')
mitelDhcpRelayAgentServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mitelDhcpRelayAgentServerStatus.setStatus('current')
mitelDhcpServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5))
mitelDhcpServerGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 1))
mitelDhcpServerGeneralEnable = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("autoconfig", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerGeneralEnable.setStatus('current')
mitelDhcpServerGeneralGateway = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("this-if-first", 1), ("this-if-last", 2), ("not-this-if", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerGeneralGateway.setStatus('current')
mitelDhcpServerGeneralRefDhcpServer = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerGeneralRefDhcpServer.setStatus('current')
mitelDhcpServerGeneralPingStatus = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerGeneralPingStatus.setStatus('current')
mitelDhcpServerSubnetTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2), )
if mibBuilder.loadTexts: mitelDhcpServerSubnetTable.setStatus('current')
mitelDhcpServerSubnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpServerSubnetAddr"), (0, "MITEL-DHCP-MIB", "mitelDhcpServerSubnetSharedNet"))
if mibBuilder.loadTexts: mitelDhcpServerSubnetEntry.setStatus('current')
mitelDhcpServerSubnetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerSubnetAddr.setStatus('current')
mitelDhcpServerSubnetSharedNet = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerSubnetSharedNet.setStatus('current')
mitelDhcpServerSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerSubnetMask.setStatus('current')
mitelDhcpServerSubnetGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("this-if-first", 1), ("this-if-last", 2), ("not-this-if", 3), ("default", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerSubnetGateway.setStatus('current')
mitelDhcpServerSubnetName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerSubnetName.setStatus('current')
mitelDhcpServerSubnetDeleteTree = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerSubnetDeleteTree.setStatus('current')
mitelDhcpServerSubnetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mitelDhcpServerSubnetStatus.setStatus('current')
mitelDhcpServerRangeTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3), )
if mibBuilder.loadTexts: mitelDhcpServerRangeTable.setStatus('current')
mitelDhcpServerRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpServerRangeStart"), (0, "MITEL-DHCP-MIB", "mitelDhcpServerRangeEnd"), (0, "MITEL-DHCP-MIB", "mitelDhcpServerRangeSubnet"))
if mibBuilder.loadTexts: mitelDhcpServerRangeEntry.setStatus('current')
mitelDhcpServerRangeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerRangeStart.setStatus('current')
mitelDhcpServerRangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerRangeEnd.setStatus('current')
mitelDhcpServerRangeSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerRangeSubnet.setStatus('current')
mitelDhcpServerRangeProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 4), MitelDhcpServerProtocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerRangeProtocol.setStatus('current')
mitelDhcpServerRangeGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("this-if-first", 1), ("this-if-last", 2), ("not-this-if", 3), ("default", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerRangeGateway.setStatus('current')
mitelDhcpServerRangeLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerRangeLeaseTime.setStatus('current')
mitelDhcpServerRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerRangeName.setStatus('current')
mitelDhcpServerRangeMatchClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerRangeMatchClassId.setStatus('current')
mitelDhcpServerRangeDeleteTree = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerRangeDeleteTree.setStatus('current')
mitelDhcpServerRangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mitelDhcpServerRangeStatus.setStatus('current')
mitelDhcpServerStaticIpTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4), )
if mibBuilder.loadTexts: mitelDhcpServerStaticIpTable.setStatus('current')
mitelDhcpServerStaticIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpServerStaticIpAddr"), (0, "MITEL-DHCP-MIB", "mitelDhcpServerStaticIpSubnet"))
if mibBuilder.loadTexts: mitelDhcpServerStaticIpEntry.setStatus('current')
mitelDhcpServerStaticIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpAddr.setStatus('current')
mitelDhcpServerStaticIpSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpSubnet.setStatus('current')
mitelDhcpServerStaticIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 3), MitelDhcpServerProtocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpProtocol.setStatus('current')
mitelDhcpServerStaticIpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("this-if-first", 1), ("this-if-last", 2), ("not-this-if", 3), ("default", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpGateway.setStatus('current')
mitelDhcpServerStaticIpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpMacAddress.setStatus('current')
mitelDhcpServerStaticIpClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpClientId.setStatus('current')
mitelDhcpServerStaticIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpName.setStatus('current')
mitelDhcpServerStaticIpDeleteTree = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpDeleteTree.setStatus('current')
mitelDhcpServerStaticIpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mitelDhcpServerStaticIpStatus.setStatus('current')
mitelDhcpServerOptionTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 5), )
if mibBuilder.loadTexts: mitelDhcpServerOptionTable.setStatus('current')
mitelDhcpServerOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 5, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpServerOptionAddr"), (0, "MITEL-DHCP-MIB", "mitelDhcpServerOptionNumber"))
if mibBuilder.loadTexts: mitelDhcpServerOptionEntry.setStatus('current')
mitelDhcpServerOptionAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerOptionAddr.setStatus('current')
mitelDhcpServerOptionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 5, 1, 2), MitelDhcpServerOptionList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerOptionNumber.setStatus('current')
mitelDhcpServerOptionDisplayFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("ip-address", 2), ("ascii-string", 3), ("integer", 4), ("octet-string", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerOptionDisplayFormat.setStatus('current')
mitelDhcpServerOptionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerOptionValue.setStatus('current')
mitelDhcpServerOptionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mitelDhcpServerOptionStatus.setStatus('current')
mitelDhcpServerLeaseTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6), )
if mibBuilder.loadTexts: mitelDhcpServerLeaseTable.setStatus('current')
mitelDhcpServerLeaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpServerLeaseAddr"))
if mibBuilder.loadTexts: mitelDhcpServerLeaseEntry.setStatus('current')
mitelDhcpServerLeaseAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseAddr.setStatus('current')
mitelDhcpServerLeaseSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseSubnet.setStatus('current')
mitelDhcpServerLeaseRange = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseRange.setStatus('current')
mitelDhcpServerLeaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("configuration-reserved", 3), ("server-reserved", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseType.setStatus('current')
mitelDhcpServerLeaseEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseEndTime.setStatus('current')
mitelDhcpServerLeaseAllowedProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3), ("bootp-or-dhcp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseAllowedProtocol.setStatus('current')
mitelDhcpServerLeaseServedProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseServedProtocol.setStatus('current')
mitelDhcpServerLeaseMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseMacAddress.setStatus('current')
mitelDhcpServerLeaseClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseClientId.setStatus('current')
mitelDhcpServerLeaseHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseHostName.setStatus('current')
mitelDhcpServerLeaseDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseDomainName.setStatus('current')
mitelDhcpServerLeaseServedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerLeaseServedTime.setStatus('current')
mitelDhcpServerLeaseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 6, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mitelDhcpServerLeaseStatus.setStatus('current')
mitelDhcpServerStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 7))
mitelDhcpServerStatsNumServers = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStatsNumServers.setStatus('current')
mitelDhcpServerStatsConfSubnets = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStatsConfSubnets.setStatus('current')
mitelDhcpServerStatsConfRanges = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStatsConfRanges.setStatus('current')
mitelDhcpServerStatsConfStatic = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStatsConfStatic.setStatus('current')
mitelDhcpServerStatsConfOptions = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStatsConfOptions.setStatus('current')
mitelDhcpServerStatsConfLeases = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 7, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerStatsConfLeases.setStatus('current')
mitelDhcpServerVendorInfoTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 8), )
if mibBuilder.loadTexts: mitelDhcpServerVendorInfoTable.setStatus('current')
mitelDhcpServerVendorInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 8, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpServerOptionAddr"), (0, "MITEL-DHCP-MIB", "mitelDhcpServerOptionNumber"), (0, "MITEL-DHCP-MIB", "mitelDhcpServerVendorInfoID"))
if mibBuilder.loadTexts: mitelDhcpServerVendorInfoEntry.setStatus('current')
mitelDhcpServerVendorInfoID = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerVendorInfoID.setStatus('current')
mitelDhcpServerVendorInfoName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpServerVendorInfoName.setStatus('current')
mitelDhcpServerVendorInfoOptionDisplayFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("ip-address", 2), ("ascii-string", 3), ("integer", 4), ("octet-string", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerVendorInfoOptionDisplayFormat.setStatus('current')
mitelDhcpServerVendorInfoOptionValue = MibScalar((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpServerVendorInfoOptionValue.setStatus('current')
mitelDhcpServerVendorInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 5, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mitelDhcpServerVendorInfoStatus.setStatus('current')
mitelDhcpClientTable = MibTable((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6), )
if mibBuilder.loadTexts: mitelDhcpClientTable.setStatus('current')
mitelDhcpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1), ).setIndexNames((0, "MITEL-DHCP-MIB", "mitelDhcpClientIndex"))
if mibBuilder.loadTexts: mitelDhcpClientEntry.setStatus('current')
mitelDhcpClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientIndex.setStatus('current')
mitelDhcpClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mitelDhcpClientId.setStatus('current')
mitelDhcpClientLeaseAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("release", 2), ("renew", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientLeaseAction.setStatus('current')
mitelDhcpClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientIpAddress.setStatus('current')
mitelDhcpClientLeaseObtained = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientLeaseObtained.setStatus('current')
mitelDhcpClientLeaseExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientLeaseExpired.setStatus('current')
mitelDhcpClientDefaultGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientDefaultGateway.setStatus('current')
mitelDhcpClientServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientServerIp.setStatus('current')
mitelDhcpClientPrimaryDns = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientPrimaryDns.setStatus('current')
mitelDhcpClientSecondaryDns = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientSecondaryDns.setStatus('current')
mitelDhcpClientPrimaryWins = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientPrimaryWins.setStatus('current')
mitelDhcpClientSecondaryWins = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientSecondaryWins.setStatus('current')
mitelDhcpClientDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientDomainName.setStatus('current')
mitelDhcpClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientName.setStatus('current')
mitelDhcpClientAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1027, 4, 8, 1, 3, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mitelDhcpClientAdminState.setStatus('current')
mitelIpera1000Notifications = NotificationGroup((1, 3, 6, 1, 4, 1, 1027, 1, 2, 4, 0)).setObjects(("MITEL-DHCP-MIB", "mitelDhcpClientObtainedIp"), ("MITEL-DHCP-MIB", "mitelDhcpClientLeaseExpiry"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mitelIpera1000Notifications = mitelIpera1000Notifications.setStatus('current')
mitelDhcpClientObtainedIp = NotificationType((1, 3, 6, 1, 4, 1, 1027, 1, 2, 4, 0, 404)).setObjects(("MITEL-DHCP-MIB", "mitelDhcpClientIndex"), ("MITEL-DHCP-MIB", "mitelDhcpClientIpAddress"), ("MITEL-DHCP-MIB", "mitelDhcpClientServerIp"))
if mibBuilder.loadTexts: mitelDhcpClientObtainedIp.setStatus('current')
mitelDhcpClientLeaseExpiry = NotificationType((1, 3, 6, 1, 4, 1, 1027, 1, 2, 4, 0, 405)).setObjects(("MITEL-DHCP-MIB", "mitelDhcpClientIndex"))
if mibBuilder.loadTexts: mitelDhcpClientLeaseExpiry.setStatus('current')
mibBuilder.exportSymbols("MITEL-DHCP-MIB", mitelDhcpServerLeaseDomainName=mitelDhcpServerLeaseDomainName, mitelDhcpServerRangeSubnet=mitelDhcpServerRangeSubnet, mitelDhcpRelayAgentServerTable=mitelDhcpRelayAgentServerTable, mitelDhcpRelayAgentMaxHops=mitelDhcpRelayAgentMaxHops, mitelDhcpServerRangeGateway=mitelDhcpServerRangeGateway, mitelDhcpServerStaticIpTable=mitelDhcpServerStaticIpTable, mitelDhcpServerRangeStart=mitelDhcpServerRangeStart, mitelDhcpServerVendorInfoOptionValue=mitelDhcpServerVendorInfoOptionValue, mitelDhcpClientLeaseExpired=mitelDhcpClientLeaseExpired, mitelDhcpServerRangeEnd=mitelDhcpServerRangeEnd, mitelDhcpServerSubnetStatus=mitelDhcpServerSubnetStatus, mitelDhcpClientId=mitelDhcpClientId, mitelDhcpClientPrimaryDns=mitelDhcpClientPrimaryDns, mitelDhcpClientLeaseExpiry=mitelDhcpClientLeaseExpiry, mitelDhcpServerStaticIpDeleteTree=mitelDhcpServerStaticIpDeleteTree, mitel=mitel, mitelDhcpServerVendorInfoID=mitelDhcpServerVendorInfoID, mitelDhcpServerLeaseAddr=mitelDhcpServerLeaseAddr, mitelDhcpServerLeaseMacAddress=mitelDhcpServerLeaseMacAddress, mitelDhcpServerOptionEntry=mitelDhcpServerOptionEntry, mitelDhcpServerLeaseTable=mitelDhcpServerLeaseTable, mitelDhcpClientEntry=mitelDhcpClientEntry, mitelDhcpClientIndex=mitelDhcpClientIndex, mitelDhcpServerStatsGroup=mitelDhcpServerStatsGroup, mitelDhcpRelayAgentServerName=mitelDhcpRelayAgentServerName, mitelDhcpRelayAgentServerAddr=mitelDhcpRelayAgentServerAddr, mitelDhcpServerRangeLeaseTime=mitelDhcpServerRangeLeaseTime, mitelIdentification=mitelIdentification, mitelDhcpServerSubnetGateway=mitelDhcpServerSubnetGateway, mitelDhcpServerStatsConfRanges=mitelDhcpServerStatsConfRanges, mitelDhcpServerRangeStatus=mitelDhcpServerRangeStatus, mitelDhcpClientSecondaryDns=mitelDhcpClientSecondaryDns, mitelProprietary=mitelProprietary, mitelDhcpServerGroup=mitelDhcpServerGroup, mitelDhcpServerVendorInfoName=mitelDhcpServerVendorInfoName, mitelDhcpServerOptionStatus=mitelDhcpServerOptionStatus, mitelDhcpServerStatsConfStatic=mitelDhcpServerStatsConfStatic, mitelDhcpServerSubnetEntry=mitelDhcpServerSubnetEntry, mitelDhcpClientDomainName=mitelDhcpClientDomainName, mitelDhcpServerGeneralRefDhcpServer=mitelDhcpServerGeneralRefDhcpServer, mitelDhcpClientAdminState=mitelDhcpClientAdminState, mitelDhcpClientObtainedIp=mitelDhcpClientObtainedIp, mitelDhcpServerStatsConfLeases=mitelDhcpServerStatsConfLeases, mitelDhcpServerStaticIpSubnet=mitelDhcpServerStaticIpSubnet, mitelDhcpServerSubnetAddr=mitelDhcpServerSubnetAddr, mitelDhcpServerLeaseHostName=mitelDhcpServerLeaseHostName, mitelPropIpNetworking=mitelPropIpNetworking, mitelDhcpServerLeaseEntry=mitelDhcpServerLeaseEntry, mitelRouterDhcpGroup=mitelRouterDhcpGroup, mitelDhcpRelayAgentEnable=mitelDhcpRelayAgentEnable, mitelDhcpServerVendorInfoOptionDisplayFormat=mitelDhcpServerVendorInfoOptionDisplayFormat, mitelDhcpServerOptionTable=mitelDhcpServerOptionTable, mitelDhcpServerOptionNumber=mitelDhcpServerOptionNumber, mitelDhcpServerOptionAddr=mitelDhcpServerOptionAddr, mitelIpNetRouter=mitelIpNetRouter, mitelDhcpClientSecondaryWins=mitelDhcpClientSecondaryWins, mitelDhcpServerStaticIpClientId=mitelDhcpServerStaticIpClientId, mitelDhcpServerStaticIpEntry=mitelDhcpServerStaticIpEntry, mitelDhcpRelayAgentBroadcast=mitelDhcpRelayAgentBroadcast, mitelDhcpRelayAgentServerEntry=mitelDhcpRelayAgentServerEntry, mitelDhcpServerLeaseStatus=mitelDhcpServerLeaseStatus, mitelDhcpClientDefaultGateway=mitelDhcpClientDefaultGateway, mitelDhcpClientLeaseObtained=mitelDhcpClientLeaseObtained, mitelDhcpServerStaticIpMacAddress=mitelDhcpServerStaticIpMacAddress, mitelDhcpServerRangeName=mitelDhcpServerRangeName, mitelDhcpServerStaticIpAddr=mitelDhcpServerStaticIpAddr, mitelIdCallServers=mitelIdCallServers, mitelDhcpServerLeaseClientId=mitelDhcpServerLeaseClientId, mitelDhcpClientLeaseAction=mitelDhcpClientLeaseAction, mitelDhcpRelayAgentServerStatus=mitelDhcpRelayAgentServerStatus, mitelDhcpClientName=mitelDhcpClientName, mitelIdCsIpera1000=mitelIdCsIpera1000, mitelDhcpServerRangeTable=mitelDhcpServerRangeTable, mitelDhcpServerStaticIpStatus=mitelDhcpServerStaticIpStatus, mitelDhcpServerLeaseEndTime=mitelDhcpServerLeaseEndTime, mitelDhcpServerLeaseRange=mitelDhcpServerLeaseRange, mitelDhcpServerOptionValue=mitelDhcpServerOptionValue, mitelDhcpServerLeaseSubnet=mitelDhcpServerLeaseSubnet, mitelDhcpServerStaticIpName=mitelDhcpServerStaticIpName, mitelDhcpServerVendorInfoStatus=mitelDhcpServerVendorInfoStatus, MitelDhcpServerProtocol=MitelDhcpServerProtocol, mitelDhcpServerSubnetName=mitelDhcpServerSubnetName, mitelDhcpServerLeaseAllowedProtocol=mitelDhcpServerLeaseAllowedProtocol, mitelDhcpClientIpAddress=mitelDhcpClientIpAddress, mitelDhcpServerLeaseType=mitelDhcpServerLeaseType, mitelDhcpClientServerIp=mitelDhcpClientServerIp, mitelDhcpServerStatsNumServers=mitelDhcpServerStatsNumServers, mitelDhcpServerSubnetMask=mitelDhcpServerSubnetMask, mitelDhcpServerStatsConfSubnets=mitelDhcpServerStatsConfSubnets, mitelDhcpClientTable=mitelDhcpClientTable, mitelDhcpServerStaticIpGateway=mitelDhcpServerStaticIpGateway, mitelDhcpServerSubnetTable=mitelDhcpServerSubnetTable, mitelDhcpServerRangeEntry=mitelDhcpServerRangeEntry, mitelDhcpServerSubnetDeleteTree=mitelDhcpServerSubnetDeleteTree, mitelDhcpServerSubnetSharedNet=mitelDhcpServerSubnetSharedNet, PYSNMP_MODULE_ID=mitelRouterDhcpGroup, mitelDhcpClientPrimaryWins=mitelDhcpClientPrimaryWins, mitelDhcpServerGeneralEnable=mitelDhcpServerGeneralEnable, mitelIpera1000Notifications=mitelIpera1000Notifications, mitelDhcpServerLeaseServedTime=mitelDhcpServerLeaseServedTime, mitelDhcpServerRangeMatchClassId=mitelDhcpServerRangeMatchClassId, mitelDhcpServerStatsConfOptions=mitelDhcpServerStatsConfOptions, mitelDhcpServerVendorInfoTable=mitelDhcpServerVendorInfoTable, mitelDhcpServerRangeDeleteTree=mitelDhcpServerRangeDeleteTree, mitelDhcpServerStaticIpProtocol=mitelDhcpServerStaticIpProtocol, mitelDhcpServerLeaseServedProtocol=mitelDhcpServerLeaseServedProtocol, mitelDhcpServerVendorInfoEntry=mitelDhcpServerVendorInfoEntry, mitelDhcpServerGeneralGroup=mitelDhcpServerGeneralGroup, MitelDhcpServerOptionList=MitelDhcpServerOptionList, mitelDhcpServerGeneralPingStatus=mitelDhcpServerGeneralPingStatus, mitelDhcpServerOptionDisplayFormat=mitelDhcpServerOptionDisplayFormat, mitelDhcpServerGeneralGateway=mitelDhcpServerGeneralGateway, mitelDhcpServerRangeProtocol=mitelDhcpServerRangeProtocol)
