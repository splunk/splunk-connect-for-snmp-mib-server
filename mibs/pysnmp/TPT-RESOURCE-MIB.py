#
# PySNMP MIB module TPT-RESOURCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-RESOURCE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Counter64, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, ModuleIdentity, Gauge32, Bits, NotificationType, TimeTicks, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "ModuleIdentity", "Gauge32", "Bits", "NotificationType", "TimeTicks", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tpt_tpa_unkparams, tpt_tpa_eventsV2, tpt_tpa_objs = mibBuilder.importSymbols("TPT-TPAMIBS-MIB", "tpt-tpa-unkparams", "tpt-tpa-eventsV2", "tpt-tpa-objs")
tpt_resource = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5)).setLabel("tpt-resource")
tpt_resource.setRevisions(('2016-05-25 18:54',))
if mibBuilder.loadTexts: tpt_resource.setLastUpdated('201605251854Z')
if mibBuilder.loadTexts: tpt_resource.setOrganization('Trend Micro, Inc.')
class ResourceIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("filesystem", 1), ("hpCPU", 2), ("hpMemory", 3), ("chassisTemp", 4), ("fan", 5), ("powerSupply", 6), ("hardDisk", 7), ("i2cBus", 8))

class ResourceState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("red", 1), ("yellow", 2), ("green", 3))

class PowerSupplyState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("red", 1), ("green", 2))

class SnmpVersions(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("snmpv2", 1), ("snmpv3", 2), ("snmpv2-and-snmpv3", 3))

class EnabledOrNot(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1))

class FilesystemState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unformatted", 0), ("formatted", 1), ("mounted", 2))

class RemoteAuthType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("radius", 1), ("sms", 2), ("tacacs", 3))

resourceNumberOfFilesystems = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNumberOfFilesystems.setStatus('current')
resourceFSTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2), )
if mibBuilder.loadTexts: resourceFSTable.setStatus('current')
resourceFSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1), ).setIndexNames((0, "TPT-RESOURCE-MIB", "resourceFSIndex"))
if mibBuilder.loadTexts: resourceFSEntry.setStatus('current')
resourceFSInUseMB = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSInUseMB.setStatus('current')
resourceFSThresholdMaj = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSThresholdMaj.setStatus('current')
resourceFSThresholdCrit = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSThresholdCrit.setStatus('current')
resourceFSRangeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSRangeMin.setStatus('current')
resourceFSRangeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSRangeMax.setStatus('current')
resourceFSName = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSName.setStatus('current')
resourceFSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 7), Unsigned32())
if mibBuilder.loadTexts: resourceFSIndex.setStatus('current')
resourceFSState = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 8), FilesystemState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSState.setStatus('current')
resourceFSEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 2, 1, 9), EnabledOrNot()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceFSEncryption.setStatus('current')
resourceHPMemoryObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 3))
if mibBuilder.loadTexts: resourceHPMemoryObjs.setStatus('current')
resourceHPMemoryInUsePercent = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPMemoryInUsePercent.setStatus('current')
resourceHPMemoryThresholdMaj = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPMemoryThresholdMaj.setStatus('current')
resourceHPMemoryThresholdCrit = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPMemoryThresholdCrit.setStatus('current')
resourceHPMemoryRangeMin = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPMemoryRangeMin.setStatus('current')
resourceHPMemoryRangeMax = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPMemoryRangeMax.setStatus('current')
resourceHPMemoryTotal = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 3, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPMemoryTotal.setStatus('current')
resourceHPCPUObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4))
if mibBuilder.loadTexts: resourceHPCPUObjs.setStatus('current')
resourceHPCPUBusyPercent = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPCPUBusyPercent.setStatus('current')
resourceHPCPUThresholdMaj = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPCPUThresholdMaj.setStatus('current')
resourceHPCPUThresholdCrit = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPCPUThresholdCrit.setStatus('current')
resourceHPCPURangeMin = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPCPURangeMin.setStatus('current')
resourceHPCPURangeMax = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceHPCPURangeMax.setStatus('current')
resourceNPCPUBusyPercentA = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentA.setStatus('current')
resourceNPCPUBusyPercentTier2A = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier2A.setStatus('current')
resourceNPCPUBusyPercentTier3A = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier3A.setStatus('current')
resourceNPCPUBusyPercentTier4A = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier4A.setStatus('current')
resourceNPCPUBusyPercentB = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentB.setStatus('current')
resourceNPCPUBusyPercentTier2B = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier2B.setStatus('current')
resourceNPCPUBusyPercentTier3B = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier3B.setStatus('current')
resourceNPCPUBusyPercentTier4B = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier4B.setStatus('current')
resourceNPCPUBusyPercentC = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentC.setStatus('current')
resourceNPCPUBusyPercentTier2C = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier2C.setStatus('current')
resourceNPCPUBusyPercentTier3C = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier3C.setStatus('current')
resourceNPCPUBusyPercentTier4C = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 4, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceNPCPUBusyPercentTier4C.setStatus('current')
resourceChassisTempObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 5))
if mibBuilder.loadTexts: resourceChassisTempObjs.setStatus('current')
resourceChassisTempDegreesC = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceChassisTempDegreesC.setStatus('current')
resourceChassisTempThresholdMaj = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceChassisTempThresholdMaj.setStatus('current')
resourceChassisTempThresholdCrit = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceChassisTempThresholdCrit.setStatus('current')
resourceChassisTempRangeMin = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceChassisTempRangeMin.setStatus('current')
resourceChassisTempRangeMax = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceChassisTempRangeMax.setStatus('current')
resourcePowerSupplyObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9))
if mibBuilder.loadTexts: resourcePowerSupplyObjs.setStatus('current')
resourcePowerSupplyStatus = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9, 1), ResourceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourcePowerSupplyStatus.setStatus('deprecated')
resourcePowerSupplyQuantity = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourcePowerSupplyQuantity.setStatus('current')
resourcePowerSupplyMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourcePowerSupplyMonitoring.setStatus('current')
resourcePowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9, 4), )
if mibBuilder.loadTexts: resourcePowerSupplyTable.setStatus('current')
resourcePowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9, 4, 1), ).setIndexNames((0, "TPT-RESOURCE-MIB", "powerSupplyUnitIndex"))
if mibBuilder.loadTexts: resourcePowerSupplyEntry.setStatus('current')
powerSupplyUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyUnitIndex.setStatus('current')
powerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 9, 4, 1, 2), ResourceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyStatus.setStatus('current')
resourceLogCountObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 7))
if mibBuilder.loadTexts: resourceLogCountObjs.setStatus('current')
resourceLogCountCritical = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 7, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceLogCountCritical.setStatus('current')
resourceLogCountError = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 7, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceLogCountError.setStatus('current')
resourceLogCountWarning = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 7, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceLogCountWarning.setStatus('current')
resourceLogCountInfo = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 7, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceLogCountInfo.setStatus('current')
resourceMetricObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 8))
if mibBuilder.loadTexts: resourceMetricObjs.setStatus('current')
resourceMetricFastpath = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceMetricFastpath.setStatus('current')
resourceMetricSmartpath = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 8, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceMetricSmartpath.setStatus('current')
resourceMetricCongestion = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 8, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceMetricCongestion.setStatus('current')
resourceVersion = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceVersion.setStatus('current')
resourceDateTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceDateTime.setStatus('current')
resourceSnmpRunState = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 11), SnmpVersions()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceSnmpRunState.setStatus('current')
resourceSnmpConfig = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 12), SnmpVersions()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceSnmpConfig.setStatus('current')
resourceRemoteAuthEnabled = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 13), EnabledOrNot()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceRemoteAuthEnabled.setStatus('current')
resourceRemoteAuthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceRemoteAuthTimeout.setStatus('current')
resourceRemoteAuthType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 5, 15), RemoteAuthType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceRemoteAuthType.setStatus('current')
tptResourceNotifyDeviceID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 61), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyDeviceID.setStatus('current')
tptResourceNotifyIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 62), ResourceIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyIdentifier.setStatus('current')
tptResourceNotifyFSIndex = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyFSIndex.setStatus('current')
tptResourceNotifyCurrentValue = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyCurrentValue.setStatus('current')
tptResourceNotifyThresholdMaj = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyThresholdMaj.setStatus('current')
tptResourceNotifyThresholdCrit = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyThresholdCrit.setStatus('current')
tptResourceNotifyRangeMin = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyRangeMin.setStatus('current')
tptResourceNotifyRangeMax = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyRangeMax.setStatus('current')
tptResourceNotifyStateBefore = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 69), ResourceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyStateBefore.setStatus('current')
tptResourceNotifyStateAfter = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 70), ResourceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyStateAfter.setStatus('current')
tptResourceNotifyTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 71), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifyTimeStamp.setStatus('current')
tptResourceNotifySubIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptResourceNotifySubIdentifier.setStatus('current')
tptResourceNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 14)).setObjects(("TPT-RESOURCE-MIB", "tptResourceNotifyDeviceID"), ("TPT-RESOURCE-MIB", "tptResourceNotifyIdentifier"), ("TPT-RESOURCE-MIB", "tptResourceNotifyFSIndex"), ("TPT-RESOURCE-MIB", "tptResourceNotifyCurrentValue"), ("TPT-RESOURCE-MIB", "tptResourceNotifyThresholdMaj"), ("TPT-RESOURCE-MIB", "tptResourceNotifyThresholdCrit"), ("TPT-RESOURCE-MIB", "tptResourceNotifyRangeMin"), ("TPT-RESOURCE-MIB", "tptResourceNotifyRangeMax"), ("TPT-RESOURCE-MIB", "tptResourceNotifyStateBefore"), ("TPT-RESOURCE-MIB", "tptResourceNotifyStateAfter"), ("TPT-RESOURCE-MIB", "tptResourceNotifyTimeStamp"), ("TPT-RESOURCE-MIB", "tptResourceNotifySubIdentifier"))
if mibBuilder.loadTexts: tptResourceNotify.setStatus('current')
mibBuilder.exportSymbols("TPT-RESOURCE-MIB", resourceFSState=resourceFSState, resourceNPCPUBusyPercentB=resourceNPCPUBusyPercentB, resourceVersion=resourceVersion, resourceChassisTempObjs=resourceChassisTempObjs, resourceHPMemoryRangeMin=resourceHPMemoryRangeMin, RemoteAuthType=RemoteAuthType, resourceNPCPUBusyPercentTier2C=resourceNPCPUBusyPercentTier2C, ResourceIdentifier=ResourceIdentifier, resourceHPMemoryObjs=resourceHPMemoryObjs, resourceHPCPUObjs=resourceHPCPUObjs, resourceSnmpConfig=resourceSnmpConfig, resourceFSThresholdCrit=resourceFSThresholdCrit, resourceNPCPUBusyPercentTier4A=resourceNPCPUBusyPercentTier4A, resourceChassisTempThresholdMaj=resourceChassisTempThresholdMaj, resourcePowerSupplyStatus=resourcePowerSupplyStatus, resourceNPCPUBusyPercentC=resourceNPCPUBusyPercentC, resourceNPCPUBusyPercentTier3A=resourceNPCPUBusyPercentTier3A, SnmpVersions=SnmpVersions, PowerSupplyState=PowerSupplyState, resourceHPMemoryRangeMax=resourceHPMemoryRangeMax, resourceChassisTempThresholdCrit=resourceChassisTempThresholdCrit, resourceNPCPUBusyPercentTier4B=resourceNPCPUBusyPercentTier4B, resourceHPCPURangeMax=resourceHPCPURangeMax, tptResourceNotifyRangeMin=tptResourceNotifyRangeMin, tptResourceNotifyTimeStamp=tptResourceNotifyTimeStamp, tptResourceNotifyStateAfter=tptResourceNotifyStateAfter, PYSNMP_MODULE_ID=tpt_resource, resourceChassisTempDegreesC=resourceChassisTempDegreesC, resourceMetricSmartpath=resourceMetricSmartpath, ResourceState=ResourceState, tptResourceNotifyThresholdMaj=tptResourceNotifyThresholdMaj, resourceFSEncryption=resourceFSEncryption, EnabledOrNot=EnabledOrNot, resourceFSTable=resourceFSTable, resourceRemoteAuthType=resourceRemoteAuthType, resourcePowerSupplyObjs=resourcePowerSupplyObjs, resourceHPCPUThresholdCrit=resourceHPCPUThresholdCrit, resourceNumberOfFilesystems=resourceNumberOfFilesystems, resourceChassisTempRangeMax=resourceChassisTempRangeMax, tptResourceNotifyIdentifier=tptResourceNotifyIdentifier, tptResourceNotifyDeviceID=tptResourceNotifyDeviceID, resourceHPMemoryTotal=resourceHPMemoryTotal, resourcePowerSupplyEntry=resourcePowerSupplyEntry, resourceHPMemoryInUsePercent=resourceHPMemoryInUsePercent, tptResourceNotifyCurrentValue=tptResourceNotifyCurrentValue, resourceFSName=resourceFSName, resourceHPCPURangeMin=resourceHPCPURangeMin, resourceMetricCongestion=resourceMetricCongestion, resourceRemoteAuthEnabled=resourceRemoteAuthEnabled, resourceLogCountWarning=resourceLogCountWarning, powerSupplyStatus=powerSupplyStatus, resourceFSRangeMin=resourceFSRangeMin, resourceMetricFastpath=resourceMetricFastpath, resourceDateTime=resourceDateTime, resourceMetricObjs=resourceMetricObjs, FilesystemState=FilesystemState, resourceNPCPUBusyPercentA=resourceNPCPUBusyPercentA, tptResourceNotifyThresholdCrit=tptResourceNotifyThresholdCrit, resourceLogCountCritical=resourceLogCountCritical, resourceLogCountError=resourceLogCountError, resourceNPCPUBusyPercentTier2B=resourceNPCPUBusyPercentTier2B, resourceNPCPUBusyPercentTier3C=resourceNPCPUBusyPercentTier3C, resourceLogCountInfo=resourceLogCountInfo, resourcePowerSupplyTable=resourcePowerSupplyTable, tptResourceNotifyRangeMax=tptResourceNotifyRangeMax, resourceFSThresholdMaj=resourceFSThresholdMaj, resourceFSEntry=resourceFSEntry, resourcePowerSupplyMonitoring=resourcePowerSupplyMonitoring, resourceFSRangeMax=resourceFSRangeMax, resourcePowerSupplyQuantity=resourcePowerSupplyQuantity, resourceHPMemoryThresholdMaj=resourceHPMemoryThresholdMaj, tptResourceNotifyStateBefore=tptResourceNotifyStateBefore, resourceFSIndex=resourceFSIndex, resourceRemoteAuthTimeout=resourceRemoteAuthTimeout, tptResourceNotifySubIdentifier=tptResourceNotifySubIdentifier, powerSupplyUnitIndex=powerSupplyUnitIndex, resourceHPCPUBusyPercent=resourceHPCPUBusyPercent, tptResourceNotify=tptResourceNotify, resourceSnmpRunState=resourceSnmpRunState, resourceHPMemoryThresholdCrit=resourceHPMemoryThresholdCrit, resourceLogCountObjs=resourceLogCountObjs, resourceNPCPUBusyPercentTier3B=resourceNPCPUBusyPercentTier3B, resourceHPCPUThresholdMaj=resourceHPCPUThresholdMaj, tpt_resource=tpt_resource, resourceChassisTempRangeMin=resourceChassisTempRangeMin, resourceFSInUseMB=resourceFSInUseMB, resourceNPCPUBusyPercentTier4C=resourceNPCPUBusyPercentTier4C, resourceNPCPUBusyPercentTier2A=resourceNPCPUBusyPercentTier2A, tptResourceNotifyFSIndex=tptResourceNotifyFSIndex)
