#
# PySNMP MIB module DNOS-DEVICE-FILESYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-DEVICE-FILESYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:36:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, NotificationType, Unsigned32, IpAddress, Counter64, Integer32, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, Counter32, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "Unsigned32", "IpAddress", "Counter64", "Integer32", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "Counter32", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
fastpathDeviceFileSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44))
fastpathDeviceFileSystem.setRevisions(('2011-01-26 00:00',))
if mibBuilder.loadTexts: fastpathDeviceFileSystem.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastpathDeviceFileSystem.setOrganization('Dell, Inc.')
agentDeviceFileSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1))
agentDeviceFileSystemTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1), )
if mibBuilder.loadTexts: agentDeviceFileSystemTable.setStatus('current')
agentDeviceFileSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1), ).setIndexNames((0, "DNOS-DEVICE-FILESYSTEM-MIB", "agentDeviceFileSystemIndex"))
if mibBuilder.loadTexts: agentDeviceFileSystemEntry.setStatus('current')
agentDeviceFileSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemIndex.setStatus('current')
agentDeviceFileSystemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("invalid", 3))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemStatus.setStatus('current')
agentDeviceFileSystemVendorID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemVendorID.setStatus('current')
agentDeviceFileSystemProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemProductID.setStatus('current')
agentDeviceFileSystemManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemManufacturer.setStatus('current')
agentDeviceFileSystemSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemSerialNumber.setStatus('current')
agentDeviceFileSystemVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemVersion.setStatus('current')
agentDeviceFileSystemProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemProtocol.setStatus('current')
agentDeviceFileSystemClass = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemClass.setStatus('current')
agentDeviceFileSystemSubclass = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemSubclass.setStatus('current')
agentDeviceFileSystemTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemTotalSize.setStatus('current')
agentDeviceFileSystemBytesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemBytesUsed.setStatus('current')
agentDeviceFileSystemBytesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemBytesFree.setStatus('current')
agentDeviceFileSystemUnmount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("unmount", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDeviceFileSystemUnmount.setStatus('current')
agentDeviceFileSystemContentTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2), )
if mibBuilder.loadTexts: agentDeviceFileSystemContentTable.setStatus('current')
agentDeviceFileSystemContentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1), ).setIndexNames((0, "DNOS-DEVICE-FILESYSTEM-MIB", "agentDevFileSystemIndex"), (0, "DNOS-DEVICE-FILESYSTEM-MIB", "agentDeviceFileSystemContentFileName"))
if mibBuilder.loadTexts: agentDeviceFileSystemContentEntry.setStatus('current')
agentDevFileSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDevFileSystemIndex.setStatus('current')
agentDeviceFileSystemContentFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileName.setStatus('current')
agentDeviceFileSystemContentFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileSize.setStatus('current')
agentDeviceFileSystemContentFileModificationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 44, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDeviceFileSystemContentFileModificationTime.setStatus('current')
mibBuilder.exportSymbols("DNOS-DEVICE-FILESYSTEM-MIB", agentDeviceFileSystemContentTable=agentDeviceFileSystemContentTable, agentDeviceFileSystemVendorID=agentDeviceFileSystemVendorID, agentDeviceFileSystemContentFileName=agentDeviceFileSystemContentFileName, agentDeviceFileSystemBytesFree=agentDeviceFileSystemBytesFree, agentDeviceFileSystemContentEntry=agentDeviceFileSystemContentEntry, agentDeviceFileSystemProtocol=agentDeviceFileSystemProtocol, agentDeviceFileSystemStatus=agentDeviceFileSystemStatus, agentDevFileSystemIndex=agentDevFileSystemIndex, agentDeviceFileSystemContentFileModificationTime=agentDeviceFileSystemContentFileModificationTime, agentDeviceFileSystemGroup=agentDeviceFileSystemGroup, fastpathDeviceFileSystem=fastpathDeviceFileSystem, agentDeviceFileSystemTotalSize=agentDeviceFileSystemTotalSize, agentDeviceFileSystemBytesUsed=agentDeviceFileSystemBytesUsed, agentDeviceFileSystemEntry=agentDeviceFileSystemEntry, agentDeviceFileSystemSubclass=agentDeviceFileSystemSubclass, agentDeviceFileSystemClass=agentDeviceFileSystemClass, agentDeviceFileSystemUnmount=agentDeviceFileSystemUnmount, agentDeviceFileSystemSerialNumber=agentDeviceFileSystemSerialNumber, agentDeviceFileSystemTable=agentDeviceFileSystemTable, PYSNMP_MODULE_ID=fastpathDeviceFileSystem, agentDeviceFileSystemVersion=agentDeviceFileSystemVersion, agentDeviceFileSystemIndex=agentDeviceFileSystemIndex, agentDeviceFileSystemProductID=agentDeviceFileSystemProductID, agentDeviceFileSystemContentFileSize=agentDeviceFileSystemContentFileSize, agentDeviceFileSystemManufacturer=agentDeviceFileSystemManufacturer)
