#
# PySNMP MIB module ELTEX-MES-IP-BFD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-IP-BFD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:46:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
eltMes, = mibBuilder.importSymbols("ELTEX-MES", "eltMes")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, Counter32, iso, MibIdentifier, Counter64, IpAddress, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "Counter32", "iso", "MibIdentifier", "Counter64", "IpAddress", "ObjectIdentity", "ModuleIdentity")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
eltMesIpBfd = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6))
eltMesIpBfd.setRevisions(('2014-03-28 00:00',))
if mibBuilder.loadTexts: eltMesIpBfd.setLastUpdated('201403280000Z')
if mibBuilder.loadTexts: eltMesIpBfd.setOrganization('Eltex Enterprise Co, Ltd.')
eltIpBfdOspfEnable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdOspfEnable.setStatus('current')
eltIpBfdIfTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2), )
if mibBuilder.loadTexts: eltIpBfdIfTable.setStatus('current')
eltIpBfdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1), ).setIndexNames((0, "ELTEX-MES-IP-BFD-MIB", "eltIpBfdAddr"))
if mibBuilder.loadTexts: eltIpBfdIfEntry.setStatus('current')
eltIpBfdAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltIpBfdAddr.setStatus('current')
eltIpBfdDesiredMinTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdDesiredMinTxInterval.setStatus('current')
eltIpBfdReqMinRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdReqMinRxInterval.setStatus('current')
eltIpBfdDetectMult = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdDetectMult.setStatus('current')
eltIpBfdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eltIpBfdRowStatus.setStatus('current')
eltIpBfdOspfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdOspfDisable.setStatus('current')
eltIpBfdRipDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdRipDisable.setStatus('current')
mibBuilder.exportSymbols("ELTEX-MES-IP-BFD-MIB", eltIpBfdIfEntry=eltIpBfdIfEntry, eltIpBfdAddr=eltIpBfdAddr, eltMesIpBfd=eltMesIpBfd, eltIpBfdIfTable=eltIpBfdIfTable, eltIpBfdDesiredMinTxInterval=eltIpBfdDesiredMinTxInterval, eltIpBfdDetectMult=eltIpBfdDetectMult, eltIpBfdRipDisable=eltIpBfdRipDisable, PYSNMP_MODULE_ID=eltMesIpBfd, eltIpBfdOspfEnable=eltIpBfdOspfEnable, eltIpBfdRowStatus=eltIpBfdRowStatus, eltIpBfdReqMinRxInterval=eltIpBfdReqMinRxInterval, eltIpBfdOspfDisable=eltIpBfdOspfDisable)
