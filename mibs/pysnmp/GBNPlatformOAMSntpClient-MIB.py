#
# PySNMP MIB module GBNPlatformOAMSntpClient-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GBNPlatformOAMSntpClient-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:05:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
gbnPlatformOAM, = mibBuilder.importSymbols("GBNPlatformOAM-MIB", "gbnPlatformOAM")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, Integer32, iso, ObjectIdentity, MibIdentifier, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Gauge32, Unsigned32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "iso", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Gauge32", "Unsigned32", "Counter64", "TimeTicks")
TruthValue, TextualConvention, DisplayString, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "MacAddress", "RowStatus")
gbnPlatformOAMSntpClient = ModuleIdentity((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8))
gbnPlatformOAMSntpClient.setRevisions(('1901-07-15 20:04',))
if mibBuilder.loadTexts: gbnPlatformOAMSntpClient.setLastUpdated('0107152004Z')
if mibBuilder.loadTexts: gbnPlatformOAMSntpClient.setOrganization('Greentech')
sntpClientGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1))
sntpClientMode = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("unicast", 1), ("anycast", 2), ("broadcast", 4), ("multicast", 8))).clone('broadcast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientMode.setStatus('current')
sntpClientPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1024)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientPollInterval.setStatus('current')
sntpClientRetransInterval = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientRetransInterval.setStatus('current')
sntpClientRetransTimes = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientRetransTimes.setStatus('current')
sntpClientServer = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientServer.setStatus('current')
sntpClientSynthFlag = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpClientSynthFlag.setStatus('current')
sntpClientState = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpClientState.setStatus('current')
sntpClientLastSynthTime = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpClientLastSynthTime.setStatus('current')
sntpClientLastSynthErrno = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpClientLastSynthErrno.setStatus('current')
sntpClientAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientAdminStatus.setStatus('current')
sntpClientBcastDelay = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientBcastDelay.setStatus('current')
sntpClientMcastTtl = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientMcastTtl.setStatus('current')
sntpClientAuthFlag = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientAuthFlag.setStatus('current')
sntpClientUniKeyID = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientUniKeyID.setStatus('current')
sntpClientAnyKeyID = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientAnyKeyID.setStatus('current')
sntpClientValidServerTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 2), )
if mibBuilder.loadTexts: sntpClientValidServerTable.setStatus('current')
sntpClientValidServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 2, 1), ).setIndexNames((0, "GBNPlatformOAMSntpClient-MIB", "sntpClientValidServerNet"), (0, "GBNPlatformOAMSntpClient-MIB", "sntpClientValidServerMask"))
if mibBuilder.loadTexts: sntpClientValidServerEntry.setStatus('current')
sntpClientValidServerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpClientValidServerNet.setStatus('current')
sntpClientValidServerMask = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpClientValidServerMask.setStatus('current')
sntpClientValidServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpClientValidServerRowStatus.setStatus('current')
sntpAuthKeyTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 3), )
if mibBuilder.loadTexts: sntpAuthKeyTable.setStatus('current')
sntpAuthKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 3, 1), ).setIndexNames((0, "GBNPlatformOAMSntpClient-MIB", "sntpAuthKeyId"))
if mibBuilder.loadTexts: sntpAuthKeyEntry.setStatus('current')
sntpAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpAuthKeyId.setStatus('current')
sntpAuthKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpAuthKeyValue.setStatus('current')
sntpAuthKeyTrustFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 3, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpAuthKeyTrustFlag.setStatus('current')
sntpAuthKeyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 1, 1, 8, 3, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpAuthKeyRowStatus.setStatus('current')
mibBuilder.exportSymbols("GBNPlatformOAMSntpClient-MIB", sntpClientMode=sntpClientMode, sntpAuthKeyId=sntpAuthKeyId, sntpClientBcastDelay=sntpClientBcastDelay, sntpClientValidServerRowStatus=sntpClientValidServerRowStatus, sntpAuthKeyValue=sntpAuthKeyValue, sntpClientValidServerNet=sntpClientValidServerNet, sntpClientAuthFlag=sntpClientAuthFlag, PYSNMP_MODULE_ID=gbnPlatformOAMSntpClient, sntpAuthKeyTable=sntpAuthKeyTable, sntpAuthKeyTrustFlag=sntpAuthKeyTrustFlag, sntpClientLastSynthErrno=sntpClientLastSynthErrno, sntpClientAdminStatus=sntpClientAdminStatus, sntpClientMcastTtl=sntpClientMcastTtl, sntpClientAnyKeyID=sntpClientAnyKeyID, sntpClientValidServerMask=sntpClientValidServerMask, sntpClientRetransInterval=sntpClientRetransInterval, sntpClientServer=sntpClientServer, sntpAuthKeyEntry=sntpAuthKeyEntry, sntpClientRetransTimes=sntpClientRetransTimes, sntpClientSynthFlag=sntpClientSynthFlag, sntpClientValidServerEntry=sntpClientValidServerEntry, sntpClientUniKeyID=sntpClientUniKeyID, sntpClientValidServerTable=sntpClientValidServerTable, sntpClientGeneral=sntpClientGeneral, sntpClientLastSynthTime=sntpClientLastSynthTime, gbnPlatformOAMSntpClient=gbnPlatformOAMSntpClient, sntpClientPollInterval=sntpClientPollInterval, sntpAuthKeyRowStatus=sntpAuthKeyRowStatus, sntpClientState=sntpClientState)
