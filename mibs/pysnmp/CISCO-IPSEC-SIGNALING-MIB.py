#
# PySNMP MIB module CISCO-IPSEC-SIGNALING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IPSEC-SIGNALING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:44:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
CIPsecEncryptAlgorithm, CIPsecControlProtocol, CIPsecPhase1TunnelIndex, CIPsecTunnelStatus, CIPsecIkeAuthMethod, CIPsecEncryptionKeySize, CIPsecPhase1PeerIdentityType, CIPsecIkeHashAlgorithm = mibBuilder.importSymbols("CISCO-IPSEC-TC", "CIPsecEncryptAlgorithm", "CIPsecControlProtocol", "CIPsecPhase1TunnelIndex", "CIPsecTunnelStatus", "CIPsecIkeAuthMethod", "CIPsecEncryptionKeySize", "CIPsecPhase1PeerIdentityType", "CIPsecIkeHashAlgorithm")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, Counter32, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, Bits, IpAddress, Gauge32, NotificationType, ModuleIdentity, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "Bits", "IpAddress", "Gauge32", "NotificationType", "ModuleIdentity", "TimeTicks", "Integer32")
TextualConvention, TruthValue, TimeInterval, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "TimeInterval", "TimeStamp", "DisplayString")
ciscoIPsecSignalingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 438))
ciscoIPsecSignalingMIB.setRevisions(('2004-09-22 00:00',))
if mibBuilder.loadTexts: ciscoIPsecSignalingMIB.setLastUpdated('200409220000Z')
if mibBuilder.loadTexts: ciscoIPsecSignalingMIB.setOrganization('Cisco Systems')
ciscoIPsecSigMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 0))
ciscoIPsecSigMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1))
ciscoIPsecSigMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 2))
cisgIpsSgCurrentActivity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1))
cisgIpsSgPeerAssociations = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 2))
cisgIpsSgHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3))
cisgIpsSgFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4))
cisgIpsSgNotificationCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 5))
cisgIpsSgGlobalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1), )
if mibBuilder.loadTexts: cisgIpsSgGlobalStatsTable.setStatus('current')
cisgIpsSgGlobalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgProtocol"))
if mibBuilder.loadTexts: cisgIpsSgGlobalStatsEntry.setStatus('current')
cisgIpsSgProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 1), CIPsecControlProtocol())
if mibBuilder.loadTexts: cisgIpsSgProtocol.setStatus('current')
cisgIpsSgGlobalActiveTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalActiveTunnels.setStatus('current')
cisgIpsSgGlobalPreviousTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 3), Counter64()).setUnits('SAs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalPreviousTunnels.setStatus('current')
cisgIpsSgGlobalInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 4), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInOctets.setStatus('current')
cisgIpsSgGlobalInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInPkts.setStatus('current')
cisgIpsSgGlobalInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInDropPkts.setStatus('current')
cisgIpsSgGlobalInNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 7), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInNotifys.setStatus('current')
cisgIpsSgGlobalInP2SaDelReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 8), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInP2SaDelReqs.setStatus('current')
cisgIpsSgGlobalOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 9), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalOutOctets.setStatus('current')
cisgIpsSgGlobalOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalOutPkts.setStatus('current')
cisgIpsSgGlobalOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 11), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalOutDropPkts.setStatus('current')
cisgIpsSgGlobalOutNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 12), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalOutNotifys.setStatus('current')
cisgIpsSgGlobalOutP2SaDelReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 13), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalOutP2SaDelReqs.setStatus('current')
cisgIpsSgGlobalInitTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 14), Counter64()).setUnits('SAs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInitTunnels.setStatus('current')
cisgIpsSgGlobalInitTunnelFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 15), Counter64()).setUnits('SAs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInitTunnelFails.setStatus('current')
cisgIpsSgGlobalRespTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 16), Counter64()).setUnits('SAs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalRespTunnels.setStatus('current')
cisgIpsSgGlobalRespTunnelFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 17), Counter64()).setUnits('SAs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalRespTunnelFails.setStatus('current')
cisgIpsSgGlobalSysCapFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 18), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalSysCapFails.setStatus('current')
cisgIpsSgGlobalAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 19), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalAuthFails.setStatus('current')
cisgIpsSgGlobalDecryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 20), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalDecryptFails.setStatus('current')
cisgIpsSgGlobalHashValidFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 21), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalHashValidFails.setStatus('current')
cisgIpsSgGlobalBadTunnelRefs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 22), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalBadTunnelRefs.setStatus('current')
cisgIpsSgGlobalInP1SaDelReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 23), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalInP1SaDelReqs.setStatus('current')
cisgIpsSgGlobalOutP1SaDelReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 1, 1, 24), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgGlobalOutP1SaDelReqs.setStatus('current')
cisgIpsSgTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2), )
if mibBuilder.loadTexts: cisgIpsSgTunnelTable.setStatus('current')
cisgIpsSgTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgProtocol"), (0, "CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunIndex"))
if mibBuilder.loadTexts: cisgIpsSgTunnelEntry.setStatus('current')
cisgIpsSgTunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 1), CIPsecPhase1TunnelIndex())
if mibBuilder.loadTexts: cisgIpsSgTunIndex.setStatus('current')
cisgIpsSgTunLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 2), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunLocalType.setStatus('current')
cisgIpsSgTunLocalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunLocalValue.setStatus('current')
cisgIpsSgTunLocalAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 4), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunLocalAddressType.setStatus('current')
cisgIpsSgTunLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunLocalAddress.setStatus('current')
cisgIpsSgTunLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunLocalName.setStatus('current')
cisgIpsSgTunRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 7), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunRemoteType.setStatus('current')
cisgIpsSgTunRemoteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunRemoteValue.setStatus('current')
cisgIpsSgTunRemoteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 9), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunRemoteAddressType.setStatus('current')
cisgIpsSgTunRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunRemoteAddress.setStatus('current')
cisgIpsSgTunRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunRemoteName.setStatus('current')
cisgIpsSgTunEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 12), CIPsecEncryptAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunEncryptAlgo.setStatus('current')
cisgIpsSgTunEncryptKeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 13), CIPsecEncryptionKeySize()).setUnits('Bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunEncryptKeySize.setStatus('current')
cisgIpsSgTunHashAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 14), CIPsecIkeHashAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHashAlgo.setStatus('current')
cisgIpsSgTunAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 15), CIPsecIkeAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunAuthMethod.setStatus('current')
cisgIpsSgTunLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunLifeTime.setStatus('current')
cisgIpsSgTunActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 17), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunActiveTime.setStatus('current')
cisgIpsSgTunInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 18), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunInOctets.setStatus('current')
cisgIpsSgTunInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 19), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunInPkts.setStatus('current')
cisgIpsSgTunInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 20), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunInDropPkts.setStatus('current')
cisgIpsSgTunInNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 21), Counter32()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunInNotifys.setStatus('current')
cisgIpsSgTunOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 22), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunOutOctets.setStatus('current')
cisgIpsSgTunOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 23), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunOutPkts.setStatus('current')
cisgIpsSgTunOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 24), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunOutDropPkts.setStatus('current')
cisgIpsSgTunOutNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 25), Counter32()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunOutNotifys.setStatus('current')
cisgIpsSgTunOutP2SaDelReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 26), Counter32()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunOutP2SaDelReqs.setStatus('current')
cisgIpsSgTunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 27), CIPsecTunnelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunStatus.setStatus('current')
cisgIpsSgTunAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("clear", 2), ("rekey", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgTunAction.setStatus('current')
cisgIpsSgHistGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 1))
cisgIpsSgHistGlobalCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 1, 1))
cisgIpsSgHistTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgHistTableSize.setStatus('current')
cisgIpsSgTunnelHistTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2), )
if mibBuilder.loadTexts: cisgIpsSgTunnelHistTable.setStatus('current')
cisgIpsSgTunnelHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgProtocol"), (0, "CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistIndex"))
if mibBuilder.loadTexts: cisgIpsSgTunnelHistEntry.setStatus('current')
cisgIpsSgTunHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cisgIpsSgTunHistIndex.setStatus('current')
cisgIpsSgTunHistTermReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("operRequest", 3), ("peerDelRequest", 4), ("peerLost", 5), ("applicationInitiated", 6), ("userAuthFailure", 7), ("localFailure", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistTermReason.setStatus('current')
cisgIpsSgTunHistActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 3), CIPsecPhase1TunnelIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistActiveIndex.setStatus('current')
cisgIpsSgTunHistPeerLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 4), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistPeerLocalType.setStatus('current')
cisgIpsSgTunHistPeerLocalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistPeerLocalValue.setStatus('current')
cisgIpsSgTunHistPeerIntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistPeerIntIndex.setStatus('current')
cisgIpsSgTunHistPeerRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 7), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistPeerRemoteType.setStatus('current')
cisgIpsSgTunHistPeerRemoteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistPeerRemoteValue.setStatus('current')
cisgIpsSgTunHistLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 9), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistLocalAddrType.setStatus('current')
cisgIpsSgTunHistLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistLocalAddr.setStatus('current')
cisgIpsSgTunHistLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistLocalName.setStatus('current')
cisgIpsSgTunHistRemoteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 12), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistRemoteAddrType.setStatus('current')
cisgIpsSgTunHistRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistRemoteAddr.setStatus('current')
cisgIpsSgTunHistRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistRemoteName.setStatus('current')
cisgIpsSgTunHistEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 15), CIPsecEncryptAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistEncryptAlgo.setStatus('current')
cisgIpsSgTunHistEncryptKeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 16), CIPsecEncryptionKeySize()).setUnits('Bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistEncryptKeySize.setStatus('current')
cisgIpsSgTunHistHashAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 17), CIPsecIkeHashAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistHashAlgo.setStatus('current')
cisgIpsSgTunHistAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 18), CIPsecIkeAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistAuthMethod.setStatus('current')
cisgIpsSgTunHistLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistLifeTime.setStatus('current')
cisgIpsSgTunHistStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistStartTime.setStatus('current')
cisgIpsSgTunHistActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 21), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistActiveTime.setStatus('current')
cisgIpsSgTunHistInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 22), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistInOctets.setStatus('current')
cisgIpsSgTunHistInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 23), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistInPkts.setStatus('current')
cisgIpsSgTunHistInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 24), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistInDropPkts.setStatus('current')
cisgIpsSgTunHistInNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 25), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistInNotifys.setStatus('current')
cisgIpsSgTunHistInP2SaDelReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 26), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistInP2SaDelReqs.setStatus('current')
cisgIpsSgTunHistOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 27), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistOutOctets.setStatus('current')
cisgIpsSgTunHistOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 28), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistOutPkts.setStatus('current')
cisgIpsSgTunHistOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 29), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistOutDropPkts.setStatus('current')
cisgIpsSgTunHistOutNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 30), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistOutNotifys.setStatus('current')
cisgIpsSgTunHistOutP2SaDelReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 3, 2, 1, 31), Counter64()).setUnits('Notification Payloads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgTunHistOutP2SaDelReqs.setStatus('current')
cisgIpsSgFailGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 1))
cisgIpsSgFailGlobalCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 1, 1))
cisgIpsSgFailTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgFailTableSize.setStatus('current')
cisgIpsSgFailTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2), )
if mibBuilder.loadTexts: cisgIpsSgFailTable.setStatus('current')
cisgIpsSgFailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgProtocol"), (0, "CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailIndex"))
if mibBuilder.loadTexts: cisgIpsSgFailEntry.setStatus('current')
cisgIpsSgFailIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cisgIpsSgFailIndex.setStatus('current')
cisgIpsSgFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("other", 1), ("peerDelRequest", 2), ("peerLost", 3), ("localFailure", 4), ("authFailure", 5), ("hashValidation", 6), ("encryptFailure", 7), ("internalError", 8), ("sysCapExceeded", 9), ("proposalFailure", 10), ("peerCertUnavailable", 11), ("peerCertNotValid", 12), ("localCertExpired", 13), ("crlFailure", 14), ("peerEncodingError", 15), ("nonExistentSa", 16), ("userAuthFailure", 17), ("operRequest", 18), ("deniedByAdmissionControl", 19), ("protocolSpecific", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailReason.setStatus('current')
cisgIpsSgFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailTime.setStatus('current')
cisgIpsSgFailLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 4), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailLocalType.setStatus('current')
cisgIpsSgFailLocalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailLocalValue.setStatus('current')
cisgIpsSgFailRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 6), CIPsecPhase1PeerIdentityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailRemoteType.setStatus('current')
cisgIpsSgFailRemoteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailRemoteValue.setStatus('current')
cisgIpsSgFailLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailLocalAddress.setStatus('current')
cisgIpsSgFailRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 4, 2, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisgIpsSgFailRemoteAddress.setStatus('current')
cisgIpsSgNotifCntlAllNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 5, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgNotifCntlAllNotifs.setStatus('current')
cisgIpsSgNotifCntlTunnelStart = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 5, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgNotifCntlTunnelStart.setStatus('current')
cisgIpsSgNotifCntlTunnelStop = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 5, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgNotifCntlTunnelStop.setStatus('current')
cisgIpsSgNotifCntlSysFailure = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 5, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgNotifCntlSysFailure.setStatus('current')
cisgIpsSgNotifCntlCertCrlFail = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 438, 1, 5, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisgIpsSgNotifCntlCertCrlFail.setStatus('current')
ciscoIpsSgTunnelStart = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 438, 0, 1)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLocalAddressType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLocalAddress"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunRemoteAddressType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunRemoteAddress"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLifeTime"))
if mibBuilder.loadTexts: ciscoIpsSgTunnelStart.setStatus('current')
ciscoIpsSgTunnelStop = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 438, 0, 2)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistLocalAddrType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistLocalAddr"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistRemoteAddrType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistRemoteAddr"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistTermReason"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistActiveTime"))
if mibBuilder.loadTexts: ciscoIpsSgTunnelStop.setStatus('current')
ciscoIpsSgSysFailure = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 438, 0, 3)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailLocalAddress"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailRemoteAddress"))
if mibBuilder.loadTexts: ciscoIpsSgSysFailure.setStatus('current')
ciscoIpsSgCertCrlFailure = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 438, 0, 4)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailLocalAddress"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailRemoteAddress"))
if mibBuilder.loadTexts: ciscoIpsSgCertCrlFailure.setStatus('current')
ciscoIpsSgMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 1))
ciscoIpsSgMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2))
ciscoIpsSgMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 1, 1)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgActivityGroup"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgCoreHistoryGroup"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgCoreFailureGroup"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgHistoryGroup"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgFailureGroup"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgNotifcationGroup"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgNotifCntlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgMIBCompliance = ciscoIpsSgMIBCompliance.setStatus('current')
ciscoIpsSgActivityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2, 1)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalActiveTunnels"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalPreviousTunnels"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInOctets"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInDropPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInNotifys"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInP2SaDelReqs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalOutOctets"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalOutPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalOutDropPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalOutNotifys"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalOutP2SaDelReqs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInitTunnels"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInitTunnelFails"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalRespTunnels"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalRespTunnelFails"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalSysCapFails"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalAuthFails"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalDecryptFails"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalHashValidFails"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalBadTunnelRefs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalInP1SaDelReqs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgGlobalOutP1SaDelReqs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLocalType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLocalValue"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLocalAddressType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLocalAddress"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLocalName"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunRemoteType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunRemoteValue"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunRemoteAddressType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunRemoteAddress"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunRemoteName"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunEncryptAlgo"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunEncryptKeySize"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHashAlgo"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunAuthMethod"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunLifeTime"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunActiveTime"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunInOctets"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunInPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunInDropPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunInNotifys"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunOutOctets"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunOutPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunOutDropPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunOutNotifys"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunOutP2SaDelReqs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunStatus"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgActivityGroup = ciscoIpsSgActivityGroup.setStatus('current')
ciscoIpsSgCoreHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2, 2)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgHistTableSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgCoreHistoryGroup = ciscoIpsSgCoreHistoryGroup.setStatus('current')
ciscoIpsSgHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2, 3)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistTermReason"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistActiveIndex"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistPeerLocalType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistPeerLocalValue"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistPeerIntIndex"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistPeerRemoteType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistPeerRemoteValue"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistLocalAddrType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistLocalAddr"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistLocalName"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistRemoteAddrType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistRemoteAddr"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistRemoteName"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistEncryptAlgo"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistEncryptKeySize"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistHashAlgo"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistAuthMethod"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistLifeTime"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistStartTime"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistActiveTime"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistInOctets"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistInPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistInDropPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistInNotifys"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistInP2SaDelReqs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistOutOctets"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistOutPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistOutDropPkts"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistOutNotifys"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgTunHistOutP2SaDelReqs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgHistoryGroup = ciscoIpsSgHistoryGroup.setStatus('current')
ciscoIpsSgCoreFailureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2, 4)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailTableSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgCoreFailureGroup = ciscoIpsSgCoreFailureGroup.setStatus('current')
ciscoIpsSgFailureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2, 5)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailReason"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailTime"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailLocalType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailLocalValue"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailRemoteType"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailRemoteValue"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailLocalAddress"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgFailRemoteAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgFailureGroup = ciscoIpsSgFailureGroup.setStatus('current')
ciscoIpsSgNotifCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2, 6)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgNotifCntlAllNotifs"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgNotifCntlTunnelStart"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgNotifCntlTunnelStop"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgNotifCntlSysFailure"), ("CISCO-IPSEC-SIGNALING-MIB", "cisgIpsSgNotifCntlCertCrlFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgNotifCntlGroup = ciscoIpsSgNotifCntlGroup.setStatus('current')
ciscoIpsSgNotifcationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 438, 2, 2, 7)).setObjects(("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgTunnelStart"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgTunnelStop"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgSysFailure"), ("CISCO-IPSEC-SIGNALING-MIB", "ciscoIpsSgCertCrlFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpsSgNotifcationGroup = ciscoIpsSgNotifcationGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IPSEC-SIGNALING-MIB", cisgIpsSgGlobalInDropPkts=cisgIpsSgGlobalInDropPkts, cisgIpsSgGlobalDecryptFails=cisgIpsSgGlobalDecryptFails, cisgIpsSgTunnelHistEntry=cisgIpsSgTunnelHistEntry, cisgIpsSgTunRemoteValue=cisgIpsSgTunRemoteValue, cisgIpsSgTunOutOctets=cisgIpsSgTunOutOctets, cisgIpsSgGlobalActiveTunnels=cisgIpsSgGlobalActiveTunnels, cisgIpsSgGlobalSysCapFails=cisgIpsSgGlobalSysCapFails, cisgIpsSgFailTableSize=cisgIpsSgFailTableSize, cisgIpsSgTunLocalName=cisgIpsSgTunLocalName, cisgIpsSgTunEncryptKeySize=cisgIpsSgTunEncryptKeySize, cisgIpsSgHistGlobal=cisgIpsSgHistGlobal, cisgIpsSgTunHistPeerLocalValue=cisgIpsSgTunHistPeerLocalValue, cisgIpsSgGlobalAuthFails=cisgIpsSgGlobalAuthFails, cisgIpsSgTunHistLocalAddrType=cisgIpsSgTunHistLocalAddrType, cisgIpsSgTunAction=cisgIpsSgTunAction, cisgIpsSgFailEntry=cisgIpsSgFailEntry, cisgIpsSgFailLocalAddress=cisgIpsSgFailLocalAddress, ciscoIPsecSigMIBObjects=ciscoIPsecSigMIBObjects, cisgIpsSgTunHistAuthMethod=cisgIpsSgTunHistAuthMethod, cisgIpsSgTunnelTable=cisgIpsSgTunnelTable, cisgIpsSgTunHistPeerIntIndex=cisgIpsSgTunHistPeerIntIndex, cisgIpsSgFailGlobalCntl=cisgIpsSgFailGlobalCntl, ciscoIpsSgHistoryGroup=ciscoIpsSgHistoryGroup, cisgIpsSgGlobalStatsEntry=cisgIpsSgGlobalStatsEntry, cisgIpsSgTunHistEncryptAlgo=cisgIpsSgTunHistEncryptAlgo, cisgIpsSgTunRemoteType=cisgIpsSgTunRemoteType, cisgIpsSgTunHistActiveTime=cisgIpsSgTunHistActiveTime, ciscoIPsecSigMIBConform=ciscoIPsecSigMIBConform, cisgIpsSgGlobalOutOctets=cisgIpsSgGlobalOutOctets, cisgIpsSgProtocol=cisgIpsSgProtocol, ciscoIpsSgMIBGroups=ciscoIpsSgMIBGroups, cisgIpsSgHistory=cisgIpsSgHistory, cisgIpsSgTunInOctets=cisgIpsSgTunInOctets, cisgIpsSgTunHistPeerRemoteType=cisgIpsSgTunHistPeerRemoteType, cisgIpsSgTunHistRemoteName=cisgIpsSgTunHistRemoteName, cisgIpsSgTunHistInOctets=cisgIpsSgTunHistInOctets, cisgIpsSgTunHistIndex=cisgIpsSgTunHistIndex, cisgIpsSgTunHistStartTime=cisgIpsSgTunHistStartTime, cisgIpsSgTunOutDropPkts=cisgIpsSgTunOutDropPkts, ciscoIpsSgNotifCntlGroup=ciscoIpsSgNotifCntlGroup, cisgIpsSgTunLocalValue=cisgIpsSgTunLocalValue, cisgIpsSgTunOutP2SaDelReqs=cisgIpsSgTunOutP2SaDelReqs, cisgIpsSgHistTableSize=cisgIpsSgHistTableSize, cisgIpsSgTunHistOutDropPkts=cisgIpsSgTunHistOutDropPkts, cisgIpsSgGlobalPreviousTunnels=cisgIpsSgGlobalPreviousTunnels, cisgIpsSgNotifCntlTunnelStart=cisgIpsSgNotifCntlTunnelStart, cisgIpsSgGlobalOutPkts=cisgIpsSgGlobalOutPkts, cisgIpsSgTunInDropPkts=cisgIpsSgTunInDropPkts, cisgIpsSgGlobalOutDropPkts=cisgIpsSgGlobalOutDropPkts, cisgIpsSgFailRemoteValue=cisgIpsSgFailRemoteValue, cisgIpsSgTunHistPeerRemoteValue=cisgIpsSgTunHistPeerRemoteValue, cisgIpsSgTunHistOutP2SaDelReqs=cisgIpsSgTunHistOutP2SaDelReqs, cisgIpsSgTunHistRemoteAddr=cisgIpsSgTunHistRemoteAddr, cisgIpsSgTunHistOutOctets=cisgIpsSgTunHistOutOctets, cisgIpsSgFailTable=cisgIpsSgFailTable, cisgIpsSgTunRemoteAddress=cisgIpsSgTunRemoteAddress, cisgIpsSgTunHistEncryptKeySize=cisgIpsSgTunHistEncryptKeySize, cisgIpsSgGlobalBadTunnelRefs=cisgIpsSgGlobalBadTunnelRefs, cisgIpsSgTunHistInPkts=cisgIpsSgTunHistInPkts, ciscoIpsSgTunnelStop=ciscoIpsSgTunnelStop, cisgIpsSgFailGlobal=cisgIpsSgFailGlobal, cisgIpsSgFailures=cisgIpsSgFailures, cisgIpsSgNotifCntlSysFailure=cisgIpsSgNotifCntlSysFailure, cisgIpsSgFailIndex=cisgIpsSgFailIndex, cisgIpsSgNotificationCntl=cisgIpsSgNotificationCntl, cisgIpsSgTunHistTermReason=cisgIpsSgTunHistTermReason, cisgIpsSgFailLocalValue=cisgIpsSgFailLocalValue, cisgIpsSgGlobalInPkts=cisgIpsSgGlobalInPkts, cisgIpsSgGlobalOutP1SaDelReqs=cisgIpsSgGlobalOutP1SaDelReqs, cisgIpsSgTunHistHashAlgo=cisgIpsSgTunHistHashAlgo, cisgIpsSgTunHistLocalName=cisgIpsSgTunHistLocalName, cisgIpsSgGlobalRespTunnels=cisgIpsSgGlobalRespTunnels, cisgIpsSgTunHistOutNotifys=cisgIpsSgTunHistOutNotifys, cisgIpsSgFailRemoteType=cisgIpsSgFailRemoteType, cisgIpsSgTunOutNotifys=cisgIpsSgTunOutNotifys, cisgIpsSgTunInPkts=cisgIpsSgTunInPkts, ciscoIpsSgActivityGroup=ciscoIpsSgActivityGroup, cisgIpsSgTunLocalAddress=cisgIpsSgTunLocalAddress, cisgIpsSgTunHistLifeTime=cisgIpsSgTunHistLifeTime, cisgIpsSgTunIndex=cisgIpsSgTunIndex, cisgIpsSgTunHashAlgo=cisgIpsSgTunHashAlgo, ciscoIpsSgMIBCompliance=ciscoIpsSgMIBCompliance, cisgIpsSgGlobalInNotifys=cisgIpsSgGlobalInNotifys, cisgIpsSgTunnelEntry=cisgIpsSgTunnelEntry, cisgIpsSgTunHistActiveIndex=cisgIpsSgTunHistActiveIndex, cisgIpsSgTunActiveTime=cisgIpsSgTunActiveTime, ciscoIpsSgNotifcationGroup=ciscoIpsSgNotifcationGroup, cisgIpsSgTunHistPeerLocalType=cisgIpsSgTunHistPeerLocalType, cisgIpsSgCurrentActivity=cisgIpsSgCurrentActivity, cisgIpsSgTunStatus=cisgIpsSgTunStatus, cisgIpsSgPeerAssociations=cisgIpsSgPeerAssociations, ciscoIpsSgTunnelStart=ciscoIpsSgTunnelStart, cisgIpsSgFailRemoteAddress=cisgIpsSgFailRemoteAddress, cisgIpsSgTunRemoteAddressType=cisgIpsSgTunRemoteAddressType, cisgIpsSgGlobalRespTunnelFails=cisgIpsSgGlobalRespTunnelFails, ciscoIpsSgCertCrlFailure=ciscoIpsSgCertCrlFailure, cisgIpsSgTunRemoteName=cisgIpsSgTunRemoteName, ciscoIpsSgMIBCompliances=ciscoIpsSgMIBCompliances, cisgIpsSgGlobalOutNotifys=cisgIpsSgGlobalOutNotifys, cisgIpsSgTunLocalType=cisgIpsSgTunLocalType, cisgIpsSgTunHistLocalAddr=cisgIpsSgTunHistLocalAddr, cisgIpsSgTunHistRemoteAddrType=cisgIpsSgTunHistRemoteAddrType, cisgIpsSgGlobalInitTunnelFails=cisgIpsSgGlobalInitTunnelFails, cisgIpsSgTunLocalAddressType=cisgIpsSgTunLocalAddressType, ciscoIpsSgCoreHistoryGroup=ciscoIpsSgCoreHistoryGroup, cisgIpsSgTunHistInDropPkts=cisgIpsSgTunHistInDropPkts, PYSNMP_MODULE_ID=ciscoIPsecSignalingMIB, cisgIpsSgFailTime=cisgIpsSgFailTime, ciscoIpsSgFailureGroup=ciscoIpsSgFailureGroup, ciscoIPsecSigMIBNotifs=ciscoIPsecSigMIBNotifs, cisgIpsSgGlobalOutP2SaDelReqs=cisgIpsSgGlobalOutP2SaDelReqs, cisgIpsSgGlobalInitTunnels=cisgIpsSgGlobalInitTunnels, cisgIpsSgTunEncryptAlgo=cisgIpsSgTunEncryptAlgo, cisgIpsSgGlobalInOctets=cisgIpsSgGlobalInOctets, cisgIpsSgGlobalInP2SaDelReqs=cisgIpsSgGlobalInP2SaDelReqs, cisgIpsSgFailReason=cisgIpsSgFailReason, cisgIpsSgTunOutPkts=cisgIpsSgTunOutPkts, cisgIpsSgTunAuthMethod=cisgIpsSgTunAuthMethod, cisgIpsSgNotifCntlTunnelStop=cisgIpsSgNotifCntlTunnelStop, cisgIpsSgTunInNotifys=cisgIpsSgTunInNotifys, ciscoIPsecSignalingMIB=ciscoIPsecSignalingMIB, cisgIpsSgGlobalInP1SaDelReqs=cisgIpsSgGlobalInP1SaDelReqs, cisgIpsSgTunnelHistTable=cisgIpsSgTunnelHistTable, cisgIpsSgTunHistOutPkts=cisgIpsSgTunHistOutPkts, cisgIpsSgGlobalHashValidFails=cisgIpsSgGlobalHashValidFails, cisgIpsSgNotifCntlAllNotifs=cisgIpsSgNotifCntlAllNotifs, cisgIpsSgTunHistInNotifys=cisgIpsSgTunHistInNotifys, ciscoIpsSgSysFailure=ciscoIpsSgSysFailure, cisgIpsSgFailLocalType=cisgIpsSgFailLocalType, cisgIpsSgGlobalStatsTable=cisgIpsSgGlobalStatsTable, cisgIpsSgTunLifeTime=cisgIpsSgTunLifeTime, cisgIpsSgTunHistInP2SaDelReqs=cisgIpsSgTunHistInP2SaDelReqs, ciscoIpsSgCoreFailureGroup=ciscoIpsSgCoreFailureGroup, cisgIpsSgNotifCntlCertCrlFail=cisgIpsSgNotifCntlCertCrlFail, cisgIpsSgHistGlobalCntl=cisgIpsSgHistGlobalCntl)
