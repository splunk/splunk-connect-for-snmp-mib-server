#
# PySNMP MIB module HPN-ICF-IPA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-IPA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:27:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Bits, Integer32, Gauge32, TimeTicks, iso, ObjectIdentity, Unsigned32, MibIdentifier, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Bits", "Integer32", "Gauge32", "TimeTicks", "iso", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Counter64", "Counter32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hpnicfIpa = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25))
if mibBuilder.loadTexts: hpnicfIpa.setLastUpdated('200411010000Z')
if mibBuilder.loadTexts: hpnicfIpa.setOrganization('')
class InterfaceIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

hpnicfIpaGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1))
hpnicfIpaGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaGlobalEnable.setStatus('current')
hpnicfIpaTimeOutSeconds = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 2), Integer32().clone(43200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaTimeOutSeconds.setStatus('current')
hpnicfIpaIntListMaxItemNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 3), Integer32().clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaIntListMaxItemNum.setStatus('current')
hpnicfIpaExtListMaxItemNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaExtListMaxItemNum.setStatus('current')
hpnicfIpaFWListMaxItemNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaFWListMaxItemNum.setStatus('current')
hpnicfIpaAccountListMaxItemNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaAccountListMaxItemNum.setStatus('current')
hpnicfIpaAccountListNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaAccountListNextIndex.setStatus('current')
hpnicfIpaListCleaningFlag = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("cleaningAll", 2), ("cleaningIntList", 3), ("cleaningExtList", 4), ("cleaningFWList", 5))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaListCleaningFlag.setStatus('current')
hpnicfIpaIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 2), )
if mibBuilder.loadTexts: hpnicfIpaIfConfigTable.setStatus('current')
hpnicfIpaIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 2, 1), ).setIndexNames((0, "HPN-ICF-IPA-MIB", "hpnicfIpaIfConfigIfIndex"))
if mibBuilder.loadTexts: hpnicfIpaIfConfigEntry.setStatus('current')
hpnicfIpaIfConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpnicfIpaIfConfigIfIndex.setStatus('current')
hpnicfIpaIfConfigInEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaIfConfigInEnable.setStatus('current')
hpnicfIpaIfConfigOutEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaIfConfigOutEnable.setStatus('current')
hpnicfIpaIfConfigFWEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nodirection", 1), ("inbound", 2), ("outbound", 3), ("bidirection", 4))).clone('nodirection')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIpaIfConfigFWEnable.setStatus('current')
hpnicfIpaAccountListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 3), )
if mibBuilder.loadTexts: hpnicfIpaAccountListTable.setStatus('current')
hpnicfIpaAccountListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 3, 1), ).setIndexNames((0, "HPN-ICF-IPA-MIB", "hpnicfIpaAccountListIndex"))
if mibBuilder.loadTexts: hpnicfIpaAccountListEntry.setStatus('current')
hpnicfIpaAccountListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfIpaAccountListIndex.setStatus('current')
hpnicfIpaAccountListIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIpaAccountListIpAddr.setStatus('current')
hpnicfIpaAccountListIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 3, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIpaAccountListIpMask.setStatus('current')
hpnicfIpaAccountListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIpaAccountListRowStatus.setStatus('current')
hpnicfIpaIntListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4), )
if mibBuilder.loadTexts: hpnicfIpaIntListTable.setStatus('current')
hpnicfIpaIntListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1), ).setIndexNames((0, "HPN-ICF-IPA-MIB", "hpnicfIpaIntListIpSrc"), (0, "HPN-ICF-IPA-MIB", "hpnicfIpaIntListIpDst"), (0, "HPN-ICF-IPA-MIB", "hpnicfIpaIntListProtocol"))
if mibBuilder.loadTexts: hpnicfIpaIntListEntry.setStatus('current')
hpnicfIpaIntListIpSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpnicfIpaIntListIpSrc.setStatus('current')
hpnicfIpaIntListIpDst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpnicfIpaIntListIpDst.setStatus('current')
hpnicfIpaIntListProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfIpaIntListProtocol.setStatus('current')
hpnicfIpaIntListInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaIntListInPackets.setStatus('current')
hpnicfIpaIntListInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaIntListInBytes.setStatus('current')
hpnicfIpaIntListOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaIntListOutPackets.setStatus('current')
hpnicfIpaIntListOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaIntListOutBytes.setStatus('current')
hpnicfIpaExtListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5), )
if mibBuilder.loadTexts: hpnicfIpaExtListTable.setStatus('current')
hpnicfIpaExtListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1), ).setIndexNames((0, "HPN-ICF-IPA-MIB", "hpnicfIpaExtListIpSrc"), (0, "HPN-ICF-IPA-MIB", "hpnicfIpaExtListIpDst"), (0, "HPN-ICF-IPA-MIB", "hpnicfIpaExtListProtocol"))
if mibBuilder.loadTexts: hpnicfIpaExtListEntry.setStatus('current')
hpnicfIpaExtListIpSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpnicfIpaExtListIpSrc.setStatus('current')
hpnicfIpaExtListIpDst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpnicfIpaExtListIpDst.setStatus('current')
hpnicfIpaExtListProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfIpaExtListProtocol.setStatus('current')
hpnicfIpaExtListInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaExtListInPackets.setStatus('current')
hpnicfIpaExtListInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaExtListInBytes.setStatus('current')
hpnicfIpaExtListOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaExtListOutPackets.setStatus('current')
hpnicfIpaExtListOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaExtListOutBytes.setStatus('current')
hpnicfIpaFWListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6), )
if mibBuilder.loadTexts: hpnicfIpaFWListTable.setStatus('current')
hpnicfIpaFWListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6, 1), ).setIndexNames((0, "HPN-ICF-IPA-MIB", "hpnicfIpaFWListIpSrc"), (0, "HPN-ICF-IPA-MIB", "hpnicfIpaFWListIpDst"))
if mibBuilder.loadTexts: hpnicfIpaFWListEntry.setStatus('current')
hpnicfIpaFWListIpSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpnicfIpaFWListIpSrc.setStatus('current')
hpnicfIpaFWListIpDst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpnicfIpaFWListIpDst.setStatus('current')
hpnicfIpaFWListInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaFWListInPackets.setStatus('current')
hpnicfIpaFWListInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaFWListInBytes.setStatus('current')
hpnicfIpaFWListOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaFWListOutPackets.setStatus('current')
hpnicfIpaFWListOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 25, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpaFWListOutBytes.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-IPA-MIB", hpnicfIpaExtListMaxItemNum=hpnicfIpaExtListMaxItemNum, hpnicfIpaIntListIpDst=hpnicfIpaIntListIpDst, hpnicfIpaExtListIpSrc=hpnicfIpaExtListIpSrc, hpnicfIpaIfConfigOutEnable=hpnicfIpaIfConfigOutEnable, hpnicfIpaFWListOutBytes=hpnicfIpaFWListOutBytes, hpnicfIpaAccountListIpAddr=hpnicfIpaAccountListIpAddr, hpnicfIpaExtListOutPackets=hpnicfIpaExtListOutPackets, hpnicfIpaGlobalStats=hpnicfIpaGlobalStats, hpnicfIpaIntListOutPackets=hpnicfIpaIntListOutPackets, hpnicfIpaIntListMaxItemNum=hpnicfIpaIntListMaxItemNum, hpnicfIpaIfConfigIfIndex=hpnicfIpaIfConfigIfIndex, hpnicfIpaFWListOutPackets=hpnicfIpaFWListOutPackets, hpnicfIpaFWListEntry=hpnicfIpaFWListEntry, hpnicfIpaListCleaningFlag=hpnicfIpaListCleaningFlag, hpnicfIpaIntListInPackets=hpnicfIpaIntListInPackets, hpnicfIpaExtListTable=hpnicfIpaExtListTable, hpnicfIpaIntListTable=hpnicfIpaIntListTable, hpnicfIpaIntListProtocol=hpnicfIpaIntListProtocol, hpnicfIpaExtListInBytes=hpnicfIpaExtListInBytes, InterfaceIndex=InterfaceIndex, hpnicfIpaExtListProtocol=hpnicfIpaExtListProtocol, hpnicfIpaAccountListMaxItemNum=hpnicfIpaAccountListMaxItemNum, hpnicfIpaIfConfigFWEnable=hpnicfIpaIfConfigFWEnable, hpnicfIpaAccountListIndex=hpnicfIpaAccountListIndex, hpnicfIpaExtListOutBytes=hpnicfIpaExtListOutBytes, hpnicfIpaFWListTable=hpnicfIpaFWListTable, hpnicfIpaAccountListTable=hpnicfIpaAccountListTable, hpnicfIpaIntListInBytes=hpnicfIpaIntListInBytes, hpnicfIpaExtListInPackets=hpnicfIpaExtListInPackets, hpnicfIpaIntListOutBytes=hpnicfIpaIntListOutBytes, hpnicfIpaFWListIpSrc=hpnicfIpaFWListIpSrc, hpnicfIpaGlobalEnable=hpnicfIpaGlobalEnable, hpnicfIpaFWListIpDst=hpnicfIpaFWListIpDst, hpnicfIpaIfConfigInEnable=hpnicfIpaIfConfigInEnable, hpnicfIpa=hpnicfIpa, hpnicfIpaAccountListEntry=hpnicfIpaAccountListEntry, hpnicfIpaIntListIpSrc=hpnicfIpaIntListIpSrc, hpnicfIpaIfConfigEntry=hpnicfIpaIfConfigEntry, hpnicfIpaExtListEntry=hpnicfIpaExtListEntry, PYSNMP_MODULE_ID=hpnicfIpa, hpnicfIpaIntListEntry=hpnicfIpaIntListEntry, hpnicfIpaAccountListIpMask=hpnicfIpaAccountListIpMask, hpnicfIpaFWListMaxItemNum=hpnicfIpaFWListMaxItemNum, hpnicfIpaExtListIpDst=hpnicfIpaExtListIpDst, hpnicfIpaAccountListRowStatus=hpnicfIpaAccountListRowStatus, hpnicfIpaFWListInPackets=hpnicfIpaFWListInPackets, hpnicfIpaIfConfigTable=hpnicfIpaIfConfigTable, hpnicfIpaFWListInBytes=hpnicfIpaFWListInBytes, hpnicfIpaTimeOutSeconds=hpnicfIpaTimeOutSeconds, hpnicfIpaAccountListNextIndex=hpnicfIpaAccountListNextIndex)
