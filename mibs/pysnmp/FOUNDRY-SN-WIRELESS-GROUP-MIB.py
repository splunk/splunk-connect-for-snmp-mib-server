#
# PySNMP MIB module FOUNDRY-SN-WIRELESS-GROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FOUNDRY-SN-WIRELESS-GROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:01:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
MacAddress, = mibBuilder.importSymbols("FOUNDRY-SN-AGENT-MIB", "MacAddress")
snSwitch, = mibBuilder.importSymbols("FOUNDRY-SN-SWITCH-GROUP-MIB", "snSwitch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibIdentifier, ModuleIdentity, Bits, Counter32, TimeTicks, Gauge32, ObjectIdentity, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "ModuleIdentity", "Bits", "Counter32", "TimeTicks", "Gauge32", "ObjectIdentity", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snWireless = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23))
snWireless.setRevisions(('2010-06-02 00:00', '2009-09-30 00:00',))
if mibBuilder.loadTexts: snWireless.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: snWireless.setOrganization('Brocade Communications Systems, Inc.')
class IfIndexList(TextualConvention, OctetString):
    status = 'current'

wgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 1))
wgMobilityId = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgMobilityId.setStatus('current')
wgVpnPTDeletePolicy = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgVpnPTDeletePolicy.setStatus('current')
wgIfTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2), )
if mibBuilder.loadTexts: wgIfTable.setStatus('current')
wgIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2, 1), ).setIndexNames((0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgIfIndex"))
if mibBuilder.loadTexts: wgIfEntry.setStatus('current')
wgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIfIndex.setStatus('current')
wgIfWirelessEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgIfWirelessEnable.setStatus('current')
wgIfPnPLearnNewAP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgIfPnPLearnNewAP.setStatus('current')
wgIfAutoPortDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgIfAutoPortDisable.setStatus('current')
wgIfVpnPTPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgIfVpnPTPolicyId.setStatus('current')
wgIfFullCompRoamingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgIfFullCompRoamingEnable.setStatus('current')
wgRoamingPeerTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 3), )
if mibBuilder.loadTexts: wgRoamingPeerTable.setStatus('current')
wgRoamingPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 3, 1), ).setIndexNames((0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgRoamingPeerIpAddress"))
if mibBuilder.loadTexts: wgRoamingPeerEntry.setStatus('current')
wgRoamingPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgRoamingPeerIpAddress.setStatus('current')
wgRoamingPeerConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("configured", 2), ("established", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgRoamingPeerConnectionStatus.setStatus('current')
wgRoamingPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgRoamingPeerRowStatus.setStatus('current')
wgPnPTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4), )
if mibBuilder.loadTexts: wgPnPTable.setStatus('current')
wgPnPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1), ).setIndexNames((0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgPnPIfIndex"), (0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgPnPMacAddress"))
if mibBuilder.loadTexts: wgPnPEntry.setStatus('current')
wgPnPIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgPnPIfIndex.setStatus('current')
wgPnPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgPnPMacAddress.setStatus('current')
wgPnPIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgPnPIpAddress.setStatus('current')
wgPnPIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgPnPIpMask.setStatus('current')
wgPnPIpDefaultGw = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgPnPIpDefaultGw.setStatus('current')
wgPnPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("discovered", 2), ("configured", 3), ("operational", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgPnPStatus.setStatus('current')
wgPnPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgPnPRowStatus.setStatus('current')
wgVpnPTServerTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 5), )
if mibBuilder.loadTexts: wgVpnPTServerTable.setStatus('current')
wgVpnPTServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 5, 1), ).setIndexNames((0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgVpnPTServerPolicyId"), (0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgVpnPTServerIpAddress"))
if mibBuilder.loadTexts: wgVpnPTServerEntry.setStatus('current')
wgVpnPTServerPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgVpnPTServerPolicyId.setStatus('current')
wgVpnPTServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgVpnPTServerIpAddress.setStatus('current')
wgVpnPTServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgVpnPTServerRowStatus.setStatus('current')
wgVpnPTFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 6), )
if mibBuilder.loadTexts: wgVpnPTFilterTable.setStatus('current')
wgVpnPTFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 6, 1), ).setIndexNames((0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgVpnPTFilterPolicyId"), (0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgVpnPTFilterProtocol"), (0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgVpnPTFilterPort"))
if mibBuilder.loadTexts: wgVpnPTFilterEntry.setStatus('current')
wgVpnPTFilterPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgVpnPTFilterPolicyId.setStatus('current')
wgVpnPTFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("udp", 2), ("tcp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgVpnPTFilterProtocol.setStatus('current')
wgVpnPTFilterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgVpnPTFilterPort.setStatus('current')
wgVpnPTFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wgVpnPTFilterRowStatus.setStatus('current')
wgVpnPTPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 7), )
if mibBuilder.loadTexts: wgVpnPTPolicyTable.setStatus('current')
wgVpnPTPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 7, 1), ).setIndexNames((0, "FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgVpnPTPolicyId"))
if mibBuilder.loadTexts: wgVpnPTPolicyEntry.setStatus('current')
wgVpnPTPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgVpnPTPolicyId.setStatus('current')
wgVpnPTPolicyPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 23, 7, 1, 2), IfIndexList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgVpnPTPolicyPortList.setStatus('current')
mibBuilder.exportSymbols("FOUNDRY-SN-WIRELESS-GROUP-MIB", wgVpnPTServerEntry=wgVpnPTServerEntry, IfIndexList=IfIndexList, wgVpnPTFilterProtocol=wgVpnPTFilterProtocol, wgVpnPTPolicyTable=wgVpnPTPolicyTable, wgVpnPTDeletePolicy=wgVpnPTDeletePolicy, wgPnPMacAddress=wgPnPMacAddress, wgRoamingPeerIpAddress=wgRoamingPeerIpAddress, wgVpnPTFilterPolicyId=wgVpnPTFilterPolicyId, wgVpnPTServerTable=wgVpnPTServerTable, wgIfTable=wgIfTable, wgPnPTable=wgPnPTable, wgPnPIfIndex=wgPnPIfIndex, wgGroup=wgGroup, wgIfFullCompRoamingEnable=wgIfFullCompRoamingEnable, wgIfWirelessEnable=wgIfWirelessEnable, wgVpnPTServerIpAddress=wgVpnPTServerIpAddress, wgVpnPTFilterPort=wgVpnPTFilterPort, wgVpnPTPolicyEntry=wgVpnPTPolicyEntry, wgIfAutoPortDisable=wgIfAutoPortDisable, wgVpnPTServerRowStatus=wgVpnPTServerRowStatus, wgIfEntry=wgIfEntry, wgPnPIpMask=wgPnPIpMask, wgPnPIpDefaultGw=wgPnPIpDefaultGw, wgIfIndex=wgIfIndex, wgVpnPTFilterTable=wgVpnPTFilterTable, wgVpnPTFilterRowStatus=wgVpnPTFilterRowStatus, wgMobilityId=wgMobilityId, snWireless=snWireless, wgRoamingPeerConnectionStatus=wgRoamingPeerConnectionStatus, PYSNMP_MODULE_ID=snWireless, wgVpnPTServerPolicyId=wgVpnPTServerPolicyId, wgPnPStatus=wgPnPStatus, wgRoamingPeerEntry=wgRoamingPeerEntry, wgVpnPTPolicyId=wgVpnPTPolicyId, wgPnPRowStatus=wgPnPRowStatus, wgVpnPTFilterEntry=wgVpnPTFilterEntry, wgPnPEntry=wgPnPEntry, wgRoamingPeerTable=wgRoamingPeerTable, wgPnPIpAddress=wgPnPIpAddress, wgRoamingPeerRowStatus=wgRoamingPeerRowStatus, wgVpnPTPolicyPortList=wgVpnPTPolicyPortList, wgIfPnPLearnNewAP=wgIfPnPLearnNewAP, wgIfVpnPTPolicyId=wgIfVpnPTPolicyId)
