#
# PySNMP MIB module Nortel-Magellan-Passport-FrameRelayDteMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FrameRelayDteMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
RowStatus, Integer32, Gauge32, Counter32, PassportCounter64, StorageType, InterfaceIndex, Unsigned32, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowStatus", "Integer32", "Gauge32", "Counter32", "PassportCounter64", "StorageType", "InterfaceIndex", "Unsigned32", "DisplayString")
NonReplicated, HexString, EnterpriseDateAndTime, Link, DashedHexString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "HexString", "EnterpriseDateAndTime", "Link", "DashedHexString")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Gauge32, Counter32, ObjectIdentity, Unsigned32, MibIdentifier, NotificationType, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "Counter32", "ObjectIdentity", "Unsigned32", "MibIdentifier", "NotificationType", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
frameRelayDteMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32))
frDte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101))
frDteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 1), )
if mibBuilder.loadTexts: frDteRowStatusTable.setStatus('mandatory')
frDteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteRowStatusEntry.setStatus('mandatory')
frDteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRowStatus.setStatus('mandatory')
frDteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteComponentName.setStatus('mandatory')
frDteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStorageType.setStatus('mandatory')
frDteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: frDteIndex.setStatus('mandatory')
frDteCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 20), )
if mibBuilder.loadTexts: frDteCidDataTable.setStatus('mandatory')
frDteCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteCidDataEntry.setStatus('mandatory')
frDteCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteCustomerIdentifier.setStatus('mandatory')
frDteIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 21), )
if mibBuilder.loadTexts: frDteIfEntryTable.setStatus('mandatory')
frDteIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 21, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteIfEntryEntry.setStatus('mandatory')
frDteIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteIfAdminStatus.setStatus('mandatory')
frDteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 21, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteIfIndex.setStatus('mandatory')
frDteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 22), )
if mibBuilder.loadTexts: frDteProvTable.setStatus('mandatory')
frDteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 22, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteProvEntry.setStatus('mandatory')
frDteAcceptUndefinedDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteAcceptUndefinedDlci.setStatus('mandatory')
frDteStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 23), )
if mibBuilder.loadTexts: frDteStateTable.setStatus('mandatory')
frDteStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 23, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteStateEntry.setStatus('mandatory')
frDteAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteAdminState.setStatus('mandatory')
frDteOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteOperationalState.setStatus('mandatory')
frDteUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteUsageState.setStatus('mandatory')
frDteOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 24), )
if mibBuilder.loadTexts: frDteOperStatusTable.setStatus('mandatory')
frDteOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 24, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteOperStatusEntry.setStatus('mandatory')
frDteSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteSnmpOperStatus.setStatus('mandatory')
frDteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 25), )
if mibBuilder.loadTexts: frDteOperTable.setStatus('mandatory')
frDteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 25, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteOperEntry.setStatus('mandatory')
frDteLinkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("down", 2), ("polling", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLinkOperState.setStatus('mandatory')
frDteErrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26), )
if mibBuilder.loadTexts: frDteErrTable.setStatus('mandatory')
frDteErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteErrEntry.setStatus('mandatory')
frDteErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknownError", 1), ("receiveShort", 2), ("receiveLong", 3), ("illegalDlci", 4), ("dlcmiProtoErr", 5), ("dlcmiUnknownIe", 6), ("dlcmiSequenceErr", 7), ("dlcmiUnknownRpt", 8), ("noErrorSinceReset", 9))).clone('noErrorSinceReset')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteErrType.setStatus('mandatory')
frDteErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteErrData.setStatus('mandatory')
frDteErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26, 1, 4), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteErrTime.setStatus('mandatory')
frDteErrDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteErrDiscards.setStatus('mandatory')
frDteErrFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteErrFaults.setStatus('mandatory')
frDteErrFaultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 26, 1, 8), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteErrFaultTime.setStatus('mandatory')
frDteErrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27), )
if mibBuilder.loadTexts: frDteErrStatsTable.setStatus('mandatory')
frDteErrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"))
if mibBuilder.loadTexts: frDteErrStatsEntry.setStatus('mandatory')
frDteXmitDiscardPvcDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteXmitDiscardPvcDown.setStatus('mandatory')
frDteXmitDiscardLmiInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteXmitDiscardLmiInactive.setStatus('mandatory')
frDteXmitDiscardFramerDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteXmitDiscardFramerDown.setStatus('mandatory')
frDteXmitDiscardPvcInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteXmitDiscardPvcInactive.setStatus('mandatory')
frDteXmitDiscardCirExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteXmitDiscardCirExceeded.setStatus('mandatory')
frDteRecvDiscardPvcDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRecvDiscardPvcDown.setStatus('mandatory')
frDteRecvDiscardLmiInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRecvDiscardLmiInactive.setStatus('mandatory')
frDteRecvDiscardPvcInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRecvDiscardPvcInactive.setStatus('mandatory')
frDteBadFc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteBadFc.setStatus('mandatory')
frDteUlpUnknownProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteUlpUnknownProtocol.setStatus('mandatory')
frDteDefragSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDefragSequenceErrors.setStatus('mandatory')
frDteReceiveShort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteReceiveShort.setStatus('mandatory')
frDteIllegalDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteIllegalDlci.setStatus('mandatory')
frDteDlcmiProtoErr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlcmiProtoErr.setStatus('mandatory')
frDteDlcmiUnknownIe = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlcmiUnknownIe.setStatus('mandatory')
frDteDlcmiSequenceErr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlcmiSequenceErr.setStatus('mandatory')
frDteDlcmiUnknownRpt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 27, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlcmiUnknownRpt.setStatus('mandatory')
frDteFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2))
frDteFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 1), )
if mibBuilder.loadTexts: frDteFramerRowStatusTable.setStatus('mandatory')
frDteFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteFramerIndex"))
if mibBuilder.loadTexts: frDteFramerRowStatusEntry.setStatus('mandatory')
frDteFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteFramerRowStatus.setStatus('mandatory')
frDteFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerComponentName.setStatus('mandatory')
frDteFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerStorageType.setStatus('mandatory')
frDteFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frDteFramerIndex.setStatus('mandatory')
frDteFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 10), )
if mibBuilder.loadTexts: frDteFramerProvTable.setStatus('mandatory')
frDteFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteFramerIndex"))
if mibBuilder.loadTexts: frDteFramerProvEntry.setStatus('mandatory')
frDteFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteFramerInterfaceName.setStatus('mandatory')
frDteFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 12), )
if mibBuilder.loadTexts: frDteFramerStateTable.setStatus('mandatory')
frDteFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteFramerIndex"))
if mibBuilder.loadTexts: frDteFramerStateEntry.setStatus('mandatory')
frDteFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerAdminState.setStatus('mandatory')
frDteFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerOperationalState.setStatus('mandatory')
frDteFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerUsageState.setStatus('mandatory')
frDteFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13), )
if mibBuilder.loadTexts: frDteFramerStatsTable.setStatus('mandatory')
frDteFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteFramerIndex"))
if mibBuilder.loadTexts: frDteFramerStatsEntry.setStatus('mandatory')
frDteFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerFrmToIf.setStatus('mandatory')
frDteFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerFrmFromIf.setStatus('mandatory')
frDteFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerAborts.setStatus('mandatory')
frDteFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerCrcErrors.setStatus('mandatory')
frDteFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerLrcErrors.setStatus('mandatory')
frDteFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerNonOctetErrors.setStatus('mandatory')
frDteFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerOverruns.setStatus('mandatory')
frDteFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerUnderruns.setStatus('mandatory')
frDteFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerLargeFrmErrors.setStatus('mandatory')
frDteFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 14), )
if mibBuilder.loadTexts: frDteFramerUtilTable.setStatus('mandatory')
frDteFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteFramerIndex"))
if mibBuilder.loadTexts: frDteFramerUtilEntry.setStatus('mandatory')
frDteFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerNormPrioLinkUtilToIf.setStatus('mandatory')
frDteFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
frDteLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3))
frDteLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 1), )
if mibBuilder.loadTexts: frDteLmiRowStatusTable.setStatus('mandatory')
frDteLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLmiIndex"))
if mibBuilder.loadTexts: frDteLmiRowStatusEntry.setStatus('mandatory')
frDteLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLmiRowStatus.setStatus('mandatory')
frDteLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLmiComponentName.setStatus('mandatory')
frDteLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLmiStorageType.setStatus('mandatory')
frDteLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frDteLmiIndex.setStatus('mandatory')
frDteLmiProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 10), )
if mibBuilder.loadTexts: frDteLmiProvTable.setStatus('mandatory')
frDteLmiProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLmiIndex"))
if mibBuilder.loadTexts: frDteLmiProvEntry.setStatus('mandatory')
frDteLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("none", 1), ("vendorForum", 2), ("ansi", 3), ("itu", 5))).clone('itu')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLmiProcedures.setStatus('mandatory')
frDteLmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLmiPollingInterval.setStatus('mandatory')
frDteLmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLmiFullEnquiryInterval.setStatus('mandatory')
frDteLmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLmiErrorThreshold.setStatus('mandatory')
frDteLmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLmiMonitoredEvents.setStatus('mandatory')
frDteLmiOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 11), )
if mibBuilder.loadTexts: frDteLmiOperTable.setStatus('mandatory')
frDteLmiOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLmiIndex"))
if mibBuilder.loadTexts: frDteLmiOperEntry.setStatus('mandatory')
frDteLmiLmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("initializing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLmiLmiStatus.setStatus('mandatory')
frDteRg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4))
frDteRgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 1), )
if mibBuilder.loadTexts: frDteRgRowStatusTable.setStatus('mandatory')
frDteRgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"))
if mibBuilder.loadTexts: frDteRgRowStatusEntry.setStatus('mandatory')
frDteRgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgRowStatus.setStatus('mandatory')
frDteRgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgComponentName.setStatus('mandatory')
frDteRgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgStorageType.setStatus('mandatory')
frDteRgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: frDteRgIndex.setStatus('mandatory')
frDteRgIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 10), )
if mibBuilder.loadTexts: frDteRgIfEntryTable.setStatus('mandatory')
frDteRgIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"))
if mibBuilder.loadTexts: frDteRgIfEntryEntry.setStatus('mandatory')
frDteRgIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgIfAdminStatus.setStatus('mandatory')
frDteRgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 10, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgIfIndex.setStatus('mandatory')
frDteRgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 11), )
if mibBuilder.loadTexts: frDteRgProvTable.setStatus('mandatory')
frDteRgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"))
if mibBuilder.loadTexts: frDteRgProvEntry.setStatus('mandatory')
frDteRgMaxTransmissionUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(262, 9190)).clone(1604)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgMaxTransmissionUnit.setStatus('mandatory')
frDteRgMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 12), )
if mibBuilder.loadTexts: frDteRgMpTable.setStatus('mandatory')
frDteRgMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"))
if mibBuilder.loadTexts: frDteRgMpEntry.setStatus('mandatory')
frDteRgLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 12, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgLinkToProtocolPort.setStatus('mandatory')
frDteRgStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 13), )
if mibBuilder.loadTexts: frDteRgStateTable.setStatus('mandatory')
frDteRgStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"))
if mibBuilder.loadTexts: frDteRgStateEntry.setStatus('mandatory')
frDteRgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgAdminState.setStatus('mandatory')
frDteRgOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgOperationalState.setStatus('mandatory')
frDteRgUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgUsageState.setStatus('mandatory')
frDteRgOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 14), )
if mibBuilder.loadTexts: frDteRgOperStatusTable.setStatus('mandatory')
frDteRgOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"))
if mibBuilder.loadTexts: frDteRgOperStatusEntry.setStatus('mandatory')
frDteRgSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgSnmpOperStatus.setStatus('mandatory')
frDteRgLtDlciTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 219), )
if mibBuilder.loadTexts: frDteRgLtDlciTable.setStatus('mandatory')
frDteRgLtDlciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 219, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgLtDlciValue"))
if mibBuilder.loadTexts: frDteRgLtDlciEntry.setStatus('mandatory')
frDteRgLtDlciValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 219, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgLtDlciValue.setStatus('mandatory')
frDteRgLtDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 219, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: frDteRgLtDlciRowStatus.setStatus('mandatory')
frDteRgBfr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15))
frDteRgBfrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 1), )
if mibBuilder.loadTexts: frDteRgBfrRowStatusTable.setStatus('mandatory')
frDteRgBfrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgBfrIndex"))
if mibBuilder.loadTexts: frDteRgBfrRowStatusEntry.setStatus('mandatory')
frDteRgBfrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgBfrRowStatus.setStatus('mandatory')
frDteRgBfrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgBfrComponentName.setStatus('mandatory')
frDteRgBfrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgBfrStorageType.setStatus('mandatory')
frDteRgBfrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frDteRgBfrIndex.setStatus('mandatory')
frDteRgBfrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 10), )
if mibBuilder.loadTexts: frDteRgBfrProvTable.setStatus('mandatory')
frDteRgBfrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgBfrIndex"))
if mibBuilder.loadTexts: frDteRgBfrProvEntry.setStatus('mandatory')
frDteRgBfrMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fddi", 0), ("enet", 1), ("tokenRing", 2))).clone('enet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgBfrMacType.setStatus('mandatory')
frDteRgBfrBfrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteRgBfrBfrIndex.setStatus('mandatory')
frDteRgBfrOprTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 11), )
if mibBuilder.loadTexts: frDteRgBfrOprTable.setStatus('mandatory')
frDteRgBfrOprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteRgBfrIndex"))
if mibBuilder.loadTexts: frDteRgBfrOprEntry.setStatus('mandatory')
frDteRgBfrMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 4, 15, 11, 1, 1), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteRgBfrMacAddr.setStatus('mandatory')
frDteDynDlciDefs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5))
frDteDynDlciDefsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 1), )
if mibBuilder.loadTexts: frDteDynDlciDefsRowStatusTable.setStatus('mandatory')
frDteDynDlciDefsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteDynDlciDefsIndex"))
if mibBuilder.loadTexts: frDteDynDlciDefsRowStatusEntry.setStatus('mandatory')
frDteDynDlciDefsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDynDlciDefsRowStatus.setStatus('mandatory')
frDteDynDlciDefsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDynDlciDefsComponentName.setStatus('mandatory')
frDteDynDlciDefsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDynDlciDefsStorageType.setStatus('mandatory')
frDteDynDlciDefsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frDteDynDlciDefsIndex.setStatus('mandatory')
frDteDynDlciDefsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10), )
if mibBuilder.loadTexts: frDteDynDlciDefsProvTable.setStatus('mandatory')
frDteDynDlciDefsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteDynDlciDefsIndex"))
if mibBuilder.loadTexts: frDteDynDlciDefsProvEntry.setStatus('mandatory')
frDteDynDlciDefsStdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDynDlciDefsStdRowStatus.setStatus('mandatory')
frDteDynDlciDefsRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDynDlciDefsRateEnforcement.setStatus('mandatory')
frDteDynDlciDefsCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDynDlciDefsCommittedInformationRate.setStatus('mandatory')
frDteDynDlciDefsCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDynDlciDefsCommittedBurst.setStatus('mandatory')
frDteDynDlciDefsExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDynDlciDefsExcessBurst.setStatus('mandatory')
frDteDynDlciDefsExcessBurstAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("setDeBit", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDynDlciDefsExcessBurstAction.setStatus('mandatory')
frDteDynDlciDefsIpCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDynDlciDefsIpCos.setStatus('mandatory')
frDteStDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6))
frDteStDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 1), )
if mibBuilder.loadTexts: frDteStDlciRowStatusTable.setStatus('mandatory')
frDteStDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"))
if mibBuilder.loadTexts: frDteStDlciRowStatusEntry.setStatus('mandatory')
frDteStDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciRowStatus.setStatus('mandatory')
frDteStDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciComponentName.setStatus('mandatory')
frDteStDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciStorageType.setStatus('mandatory')
frDteStDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: frDteStDlciIndex.setStatus('mandatory')
frDteStDlciProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10), )
if mibBuilder.loadTexts: frDteStDlciProvTable.setStatus('mandatory')
frDteStDlciProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"))
if mibBuilder.loadTexts: frDteStDlciProvEntry.setStatus('mandatory')
frDteStDlciStdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciStdRowStatus.setStatus('mandatory')
frDteStDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciRateEnforcement.setStatus('mandatory')
frDteStDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciCommittedInformationRate.setStatus('mandatory')
frDteStDlciCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciCommittedBurst.setStatus('mandatory')
frDteStDlciExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciExcessBurst.setStatus('mandatory')
frDteStDlciExcessBurstAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("setDeBit", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciExcessBurstAction.setStatus('mandatory')
frDteStDlciIpCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciIpCos.setStatus('mandatory')
frDteStDlciRgLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 11), )
if mibBuilder.loadTexts: frDteStDlciRgLinkTable.setStatus('mandatory')
frDteStDlciRgLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"))
if mibBuilder.loadTexts: frDteStDlciRgLinkEntry.setStatus('mandatory')
frDteStDlciLinkToRemoteGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciLinkToRemoteGroup.setStatus('mandatory')
frDteStDlciHq = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2))
frDteStDlciHqRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 1), )
if mibBuilder.loadTexts: frDteStDlciHqRowStatusTable.setStatus('mandatory')
frDteStDlciHqRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciHqIndex"))
if mibBuilder.loadTexts: frDteStDlciHqRowStatusEntry.setStatus('mandatory')
frDteStDlciHqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciHqRowStatus.setStatus('mandatory')
frDteStDlciHqComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqComponentName.setStatus('mandatory')
frDteStDlciHqStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqStorageType.setStatus('mandatory')
frDteStDlciHqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frDteStDlciHqIndex.setStatus('mandatory')
frDteStDlciHqProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 10), )
if mibBuilder.loadTexts: frDteStDlciHqProvTable.setStatus('mandatory')
frDteStDlciHqProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciHqIndex"))
if mibBuilder.loadTexts: frDteStDlciHqProvEntry.setStatus('mandatory')
frDteStDlciHqMaxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciHqMaxPackets.setStatus('mandatory')
frDteStDlciHqMaxMsecData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciHqMaxMsecData.setStatus('mandatory')
frDteStDlciHqMaxPercentMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciHqMaxPercentMulticast.setStatus('mandatory')
frDteStDlciHqTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteStDlciHqTimeToLive.setStatus('mandatory')
frDteStDlciHqStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 11), )
if mibBuilder.loadTexts: frDteStDlciHqStatsTable.setStatus('mandatory')
frDteStDlciHqStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciHqIndex"))
if mibBuilder.loadTexts: frDteStDlciHqStatsEntry.setStatus('mandatory')
frDteStDlciHqTimedOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqTimedOutPkt.setStatus('mandatory')
frDteStDlciHqQueuePurgeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqQueuePurgeDiscards.setStatus('mandatory')
frDteStDlciHqTStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 12), )
if mibBuilder.loadTexts: frDteStDlciHqTStatsTable.setStatus('mandatory')
frDteStDlciHqTStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciHqIndex"))
if mibBuilder.loadTexts: frDteStDlciHqTStatsEntry.setStatus('mandatory')
frDteStDlciHqTotalPktHandled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqTotalPktHandled.setStatus('mandatory')
frDteStDlciHqTotalPktForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqTotalPktForwarded.setStatus('mandatory')
frDteStDlciHqTotalPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqTotalPktQueued.setStatus('mandatory')
frDteStDlciHqTotalMulticastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqTotalMulticastPkt.setStatus('mandatory')
frDteStDlciHqTotalPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqTotalPktDiscards.setStatus('mandatory')
frDteStDlciHqCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 13), )
if mibBuilder.loadTexts: frDteStDlciHqCStatsTable.setStatus('mandatory')
frDteStDlciHqCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciHqIndex"))
if mibBuilder.loadTexts: frDteStDlciHqCStatsEntry.setStatus('mandatory')
frDteStDlciHqCurrentPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 13, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqCurrentPktQueued.setStatus('mandatory')
frDteStDlciHqCurrentBytesQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqCurrentBytesQueued.setStatus('mandatory')
frDteStDlciHqCurrentMulticastQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 13, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqCurrentMulticastQueued.setStatus('mandatory')
frDteStDlciHqThrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14), )
if mibBuilder.loadTexts: frDteStDlciHqThrStatsTable.setStatus('mandatory')
frDteStDlciHqThrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteStDlciHqIndex"))
if mibBuilder.loadTexts: frDteStDlciHqThrStatsEntry.setStatus('mandatory')
frDteStDlciHqQueuePktThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqQueuePktThreshold.setStatus('mandatory')
frDteStDlciHqPktThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqPktThresholdExceeded.setStatus('mandatory')
frDteStDlciHqQueueByteThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqQueueByteThreshold.setStatus('mandatory')
frDteStDlciHqByteThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqByteThresholdExceeded.setStatus('mandatory')
frDteStDlciHqQueueMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqQueueMulticastThreshold.setStatus('mandatory')
frDteStDlciHqMulThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqMulThresholdExceeded.setStatus('mandatory')
frDteStDlciHqMemThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 6, 2, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteStDlciHqMemThresholdExceeded.setStatus('mandatory')
frDteLeq = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7))
frDteLeqRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 1), )
if mibBuilder.loadTexts: frDteLeqRowStatusTable.setStatus('mandatory')
frDteLeqRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLeqIndex"))
if mibBuilder.loadTexts: frDteLeqRowStatusEntry.setStatus('mandatory')
frDteLeqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLeqRowStatus.setStatus('mandatory')
frDteLeqComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqComponentName.setStatus('mandatory')
frDteLeqStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqStorageType.setStatus('mandatory')
frDteLeqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frDteLeqIndex.setStatus('mandatory')
frDteLeqProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 10), )
if mibBuilder.loadTexts: frDteLeqProvTable.setStatus('mandatory')
frDteLeqProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLeqIndex"))
if mibBuilder.loadTexts: frDteLeqProvEntry.setStatus('mandatory')
frDteLeqMaxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLeqMaxPackets.setStatus('mandatory')
frDteLeqMaxMsecData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLeqMaxMsecData.setStatus('mandatory')
frDteLeqMaxPercentMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLeqMaxPercentMulticast.setStatus('mandatory')
frDteLeqTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteLeqTimeToLive.setStatus('mandatory')
frDteLeqStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 11), )
if mibBuilder.loadTexts: frDteLeqStatsTable.setStatus('mandatory')
frDteLeqStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLeqIndex"))
if mibBuilder.loadTexts: frDteLeqStatsEntry.setStatus('mandatory')
frDteLeqTimedOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqTimedOutPkt.setStatus('mandatory')
frDteLeqHardwareForcedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqHardwareForcedPkt.setStatus('mandatory')
frDteLeqForcedPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqForcedPktDiscards.setStatus('mandatory')
frDteLeqQueuePurgeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqQueuePurgeDiscards.setStatus('mandatory')
frDteLeqTStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 12), )
if mibBuilder.loadTexts: frDteLeqTStatsTable.setStatus('mandatory')
frDteLeqTStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLeqIndex"))
if mibBuilder.loadTexts: frDteLeqTStatsEntry.setStatus('mandatory')
frDteLeqTotalPktHandled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqTotalPktHandled.setStatus('mandatory')
frDteLeqTotalPktForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqTotalPktForwarded.setStatus('mandatory')
frDteLeqTotalPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqTotalPktQueued.setStatus('mandatory')
frDteLeqTotalMulticastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqTotalMulticastPkt.setStatus('mandatory')
frDteLeqTotalPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqTotalPktDiscards.setStatus('mandatory')
frDteLeqCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 13), )
if mibBuilder.loadTexts: frDteLeqCStatsTable.setStatus('mandatory')
frDteLeqCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLeqIndex"))
if mibBuilder.loadTexts: frDteLeqCStatsEntry.setStatus('mandatory')
frDteLeqCurrentPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 13, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqCurrentPktQueued.setStatus('mandatory')
frDteLeqCurrentBytesQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqCurrentBytesQueued.setStatus('mandatory')
frDteLeqCurrentMulticastQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 13, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqCurrentMulticastQueued.setStatus('mandatory')
frDteLeqThrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14), )
if mibBuilder.loadTexts: frDteLeqThrStatsTable.setStatus('mandatory')
frDteLeqThrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteLeqIndex"))
if mibBuilder.loadTexts: frDteLeqThrStatsEntry.setStatus('mandatory')
frDteLeqQueuePktThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqQueuePktThreshold.setStatus('mandatory')
frDteLeqPktThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqPktThresholdExceeded.setStatus('mandatory')
frDteLeqQueueByteThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqQueueByteThreshold.setStatus('mandatory')
frDteLeqByteThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqByteThresholdExceeded.setStatus('mandatory')
frDteLeqQueueMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqQueueMulticastThreshold.setStatus('mandatory')
frDteLeqMulThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqMulThresholdExceeded.setStatus('mandatory')
frDteLeqMemThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 7, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteLeqMemThresholdExceeded.setStatus('mandatory')
frDteDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8))
frDteDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 1), )
if mibBuilder.loadTexts: frDteDlciRowStatusTable.setStatus('mandatory')
frDteDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteDlciIndex"))
if mibBuilder.loadTexts: frDteDlciRowStatusEntry.setStatus('mandatory')
frDteDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciRowStatus.setStatus('mandatory')
frDteDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciComponentName.setStatus('mandatory')
frDteDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciStorageType.setStatus('mandatory')
frDteDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: frDteDlciIndex.setStatus('mandatory')
frDteDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 10), )
if mibBuilder.loadTexts: frDteDlciStateTable.setStatus('mandatory')
frDteDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteDlciIndex"))
if mibBuilder.loadTexts: frDteDlciStateEntry.setStatus('mandatory')
frDteDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciAdminState.setStatus('mandatory')
frDteDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciOperationalState.setStatus('mandatory')
frDteDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciUsageState.setStatus('mandatory')
frDteDlciOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11), )
if mibBuilder.loadTexts: frDteDlciOperTable.setStatus('mandatory')
frDteDlciOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteDlciIndex"))
if mibBuilder.loadTexts: frDteDlciOperEntry.setStatus('mandatory')
frDteDlciDlciState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciDlciState.setStatus('mandatory')
frDteDlciLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciLastTimeChange.setStatus('mandatory')
frDteDlciSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciSentFrames.setStatus('mandatory')
frDteDlciSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciSentOctets.setStatus('mandatory')
frDteDlciReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciReceivedFrames.setStatus('mandatory')
frDteDlciReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciReceivedOctets.setStatus('mandatory')
frDteDlciReceivedFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciReceivedFECNs.setStatus('mandatory')
frDteDlciReceivedBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciReceivedBECNs.setStatus('mandatory')
frDteDlciDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciDiscardedFrames.setStatus('mandatory')
frDteDlciCreationType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciCreationType.setStatus('mandatory')
frDteDlciCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 15), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteDlciCreationTime.setStatus('mandatory')
frDteDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDlciRateEnforcement.setStatus('mandatory')
frDteDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 18), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 48000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDlciCommittedInformationRate.setStatus('mandatory')
frDteDlciCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDlciCommittedBurst.setStatus('mandatory')
frDteDlciExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDlciExcessBurst.setStatus('mandatory')
frDteDlciExcessBurstAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 8, 11, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("setDeBit", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteDlciExcessBurstAction.setStatus('mandatory')
frDteVFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9))
frDteVFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 1), )
if mibBuilder.loadTexts: frDteVFramerRowStatusTable.setStatus('mandatory')
frDteVFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteVFramerIndex"))
if mibBuilder.loadTexts: frDteVFramerRowStatusEntry.setStatus('mandatory')
frDteVFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteVFramerRowStatus.setStatus('mandatory')
frDteVFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerComponentName.setStatus('mandatory')
frDteVFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerStorageType.setStatus('mandatory')
frDteVFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frDteVFramerIndex.setStatus('mandatory')
frDteVFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 10), )
if mibBuilder.loadTexts: frDteVFramerProvTable.setStatus('mandatory')
frDteVFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteVFramerIndex"))
if mibBuilder.loadTexts: frDteVFramerProvEntry.setStatus('mandatory')
frDteVFramerOtherVirtualFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteVFramerOtherVirtualFramer.setStatus('mandatory')
frDteVFramerLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDteVFramerLogicalProcessor.setStatus('mandatory')
frDteVFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 11), )
if mibBuilder.loadTexts: frDteVFramerStateTable.setStatus('mandatory')
frDteVFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteVFramerIndex"))
if mibBuilder.loadTexts: frDteVFramerStateEntry.setStatus('mandatory')
frDteVFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerAdminState.setStatus('mandatory')
frDteVFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerOperationalState.setStatus('mandatory')
frDteVFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerUsageState.setStatus('mandatory')
frDteVFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 12), )
if mibBuilder.loadTexts: frDteVFramerStatsTable.setStatus('mandatory')
frDteVFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteIndex"), (0, "Nortel-Magellan-Passport-FrameRelayDteMIB", "frDteVFramerIndex"))
if mibBuilder.loadTexts: frDteVFramerStatsEntry.setStatus('mandatory')
frDteVFramerFrmToOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 12, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerFrmToOtherVFramer.setStatus('mandatory')
frDteVFramerFrmFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 12, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerFrmFromOtherVFramer.setStatus('mandatory')
frDteVFramerOctetFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 101, 9, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDteVFramerOctetFromOtherVFramer.setStatus('mandatory')
frameRelayDteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 1))
frameRelayDteGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 1, 5))
frameRelayDteGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 1, 5, 1))
frameRelayDteGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 1, 5, 1, 2))
frameRelayDteCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 3))
frameRelayDteCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 3, 5))
frameRelayDteCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 3, 5, 1))
frameRelayDteCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 32, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayDteMIB", frDteStDlciCommittedInformationRate=frDteStDlciCommittedInformationRate, frDteLeq=frDteLeq, frDteLeqRowStatusEntry=frDteLeqRowStatusEntry, frDteRgOperationalState=frDteRgOperationalState, frDteComponentName=frDteComponentName, frDteStDlci=frDteStDlci, frDteVFramerOperationalState=frDteVFramerOperationalState, frDteDlciOperationalState=frDteDlciOperationalState, frameRelayDteCapabilitiesBE00A=frameRelayDteCapabilitiesBE00A, frDteRgIfIndex=frDteRgIfIndex, frDteStDlciHqComponentName=frDteStDlciHqComponentName, frDteIllegalDlci=frDteIllegalDlci, frDteFramerProvEntry=frDteFramerProvEntry, frDteStDlciHqTimedOutPkt=frDteStDlciHqTimedOutPkt, frDteStDlciHqIndex=frDteStDlciHqIndex, frDteStDlciRgLinkEntry=frDteStDlciRgLinkEntry, frDteRgBfrMacAddr=frDteRgBfrMacAddr, frDteStDlciHqStatsEntry=frDteStDlciHqStatsEntry, frDteLeqTotalPktHandled=frDteLeqTotalPktHandled, frDteStDlciHqCurrentBytesQueued=frDteStDlciHqCurrentBytesQueued, frDteRgStateTable=frDteRgStateTable, frDteOperStatusEntry=frDteOperStatusEntry, frDteLmiFullEnquiryInterval=frDteLmiFullEnquiryInterval, frDteVFramerIndex=frDteVFramerIndex, frDteCustomerIdentifier=frDteCustomerIdentifier, frDteStDlciIndex=frDteStDlciIndex, frDteStDlciHqRowStatus=frDteStDlciHqRowStatus, frDteDlciAdminState=frDteDlciAdminState, frDteRgIfEntryTable=frDteRgIfEntryTable, frDteStDlciHqTimeToLive=frDteStDlciHqTimeToLive, frDteXmitDiscardLmiInactive=frDteXmitDiscardLmiInactive, frDteLeqProvTable=frDteLeqProvTable, frDteErrType=frDteErrType, frDteFramerStatsTable=frDteFramerStatsTable, frDteLeqTotalPktQueued=frDteLeqTotalPktQueued, frDteFramerStateTable=frDteFramerStateTable, frDteVFramerUsageState=frDteVFramerUsageState, frDteRgAdminState=frDteRgAdminState, frDteLmiOperTable=frDteLmiOperTable, frDteStDlciExcessBurst=frDteStDlciExcessBurst, frDteFramerProvTable=frDteFramerProvTable, frDteStDlciHqMaxPercentMulticast=frDteStDlciHqMaxPercentMulticast, frDteRgBfr=frDteRgBfr, frDteSnmpOperStatus=frDteSnmpOperStatus, frDteDlciComponentName=frDteDlciComponentName, frDteDynDlciDefsProvTable=frDteDynDlciDefsProvTable, frDteDlciDlciState=frDteDlciDlciState, frDteLmiRowStatus=frDteLmiRowStatus, frDteStDlciRowStatus=frDteStDlciRowStatus, frDteLeqForcedPktDiscards=frDteLeqForcedPktDiscards, frDteVFramerAdminState=frDteVFramerAdminState, frDteLeqProvEntry=frDteLeqProvEntry, frDteLmiLmiStatus=frDteLmiLmiStatus, frDteLeqMaxPackets=frDteLeqMaxPackets, frDteDlciRateEnforcement=frDteDlciRateEnforcement, frDteDlcmiSequenceErr=frDteDlcmiSequenceErr, frDteLeqTStatsTable=frDteLeqTStatsTable, frDteDlciSentFrames=frDteDlciSentFrames, frDteUlpUnknownProtocol=frDteUlpUnknownProtocol, frDteStDlciIpCos=frDteStDlciIpCos, frDteDynDlciDefsCommittedInformationRate=frDteDynDlciDefsCommittedInformationRate, frDteLeqTotalPktForwarded=frDteLeqTotalPktForwarded, frDteDlcmiProtoErr=frDteDlcmiProtoErr, frDteLeqMulThresholdExceeded=frDteLeqMulThresholdExceeded, frDteRgProvTable=frDteRgProvTable, frDteVFramerOtherVirtualFramer=frDteVFramerOtherVirtualFramer, frDteFramerOperationalState=frDteFramerOperationalState, frDte=frDte, frDteStDlciHqCStatsTable=frDteStDlciHqCStatsTable, frDteStDlciRowStatusEntry=frDteStDlciRowStatusEntry, frDteRgStorageType=frDteRgStorageType, frDteVFramerStateEntry=frDteVFramerStateEntry, frDteStDlciStdRowStatus=frDteStDlciStdRowStatus, frDteIndex=frDteIndex, frDteFramerRowStatusEntry=frDteFramerRowStatusEntry, frDteRgProvEntry=frDteRgProvEntry, frDteDynDlciDefsComponentName=frDteDynDlciDefsComponentName, frDteStDlciHqQueueMulticastThreshold=frDteStDlciHqQueueMulticastThreshold, frDteLeqComponentName=frDteLeqComponentName, frDteErrEntry=frDteErrEntry, frDteLeqMaxMsecData=frDteLeqMaxMsecData, frDteLeqCurrentMulticastQueued=frDteLeqCurrentMulticastQueued, frDteRgBfrRowStatus=frDteRgBfrRowStatus, frDteRgBfrMacType=frDteRgBfrMacType, frDteFramerAborts=frDteFramerAborts, frDteFramerStateEntry=frDteFramerStateEntry, frDteRgOperStatusTable=frDteRgOperStatusTable, frDteStDlciLinkToRemoteGroup=frDteStDlciLinkToRemoteGroup, frDteFramerUtilTable=frDteFramerUtilTable, frDteVFramerFrmToOtherVFramer=frDteVFramerFrmToOtherVFramer, frDteLeqMemThresholdExceeded=frDteLeqMemThresholdExceeded, frameRelayDteGroupBE00A=frameRelayDteGroupBE00A, frDteProvTable=frDteProvTable, frameRelayDteGroupBE=frameRelayDteGroupBE, frDteLeqHardwareForcedPkt=frDteLeqHardwareForcedPkt, frDteFramerStorageType=frDteFramerStorageType, frDteErrFaultTime=frDteErrFaultTime, frDteFramerComponentName=frDteFramerComponentName, frDteVFramerRowStatus=frDteVFramerRowStatus, frDteLmiProcedures=frDteLmiProcedures, frDteFramerUtilEntry=frDteFramerUtilEntry, frameRelayDteCapabilitiesBE00=frameRelayDteCapabilitiesBE00, frDteLmi=frDteLmi, frDteLeqRowStatusTable=frDteLeqRowStatusTable, frDteIfEntryEntry=frDteIfEntryEntry, frDteDynDlciDefsIndex=frDteDynDlciDefsIndex, frDteStDlciHqStorageType=frDteStDlciHqStorageType, frDteDynDlciDefsRowStatusEntry=frDteDynDlciDefsRowStatusEntry, frDteLeqRowStatus=frDteLeqRowStatus, frDteFramerUsageState=frDteFramerUsageState, frDteStDlciHqByteThresholdExceeded=frDteStDlciHqByteThresholdExceeded, frDteVFramerProvEntry=frDteVFramerProvEntry, frDteStDlciHqCStatsEntry=frDteStDlciHqCStatsEntry, frDteStDlciHqCurrentPktQueued=frDteStDlciHqCurrentPktQueued, frDteStDlciHqTotalPktForwarded=frDteStDlciHqTotalPktForwarded, frDteFramerNonOctetErrors=frDteFramerNonOctetErrors, frDteReceiveShort=frDteReceiveShort, frDteDlciCreationType=frDteDlciCreationType, frDteXmitDiscardFramerDown=frDteXmitDiscardFramerDown, frDteRgBfrBfrIndex=frDteRgBfrBfrIndex, frDteCidDataEntry=frDteCidDataEntry, frDteDlciRowStatusEntry=frDteDlciRowStatusEntry, frDteStDlciHq=frDteStDlciHq, frDteStDlciHqProvEntry=frDteStDlciHqProvEntry, frameRelayDteCapabilities=frameRelayDteCapabilities, frDteRgBfrProvTable=frDteRgBfrProvTable, frDteFramerStatsEntry=frDteFramerStatsEntry, frDteStDlciHqTotalPktQueued=frDteStDlciHqTotalPktQueued, frDteStDlciHqCurrentMulticastQueued=frDteStDlciHqCurrentMulticastQueued, frDteDlciExcessBurstAction=frDteDlciExcessBurstAction, frDteOperEntry=frDteOperEntry, frDteErrDiscards=frDteErrDiscards, frameRelayDteMIB=frameRelayDteMIB, frDteRgLtDlciValue=frDteRgLtDlciValue, frDteRgBfrComponentName=frDteRgBfrComponentName, frDteRecvDiscardPvcInactive=frDteRecvDiscardPvcInactive, frDteDynDlciDefs=frDteDynDlciDefs, frameRelayDteGroupBE00=frameRelayDteGroupBE00, frDteVFramerProvTable=frDteVFramerProvTable, frDteStDlciHqTStatsEntry=frDteStDlciHqTStatsEntry, frDteFramerAdminState=frDteFramerAdminState, frDteLmiProvTable=frDteLmiProvTable, frDteRgLtDlciTable=frDteRgLtDlciTable, frDteLeqTStatsEntry=frDteLeqTStatsEntry, frDteVFramerStorageType=frDteVFramerStorageType, frDteLmiOperEntry=frDteLmiOperEntry, frDteRgLinkToProtocolPort=frDteRgLinkToProtocolPort, frDteVFramerOctetFromOtherVFramer=frDteVFramerOctetFromOtherVFramer, frDteErrData=frDteErrData, frDteStDlciHqThrStatsEntry=frDteStDlciHqThrStatsEntry, frDteIfAdminStatus=frDteIfAdminStatus, frameRelayDteCapabilitiesBE=frameRelayDteCapabilitiesBE, frDteRowStatusTable=frDteRowStatusTable, frDteDlciReceivedOctets=frDteDlciReceivedOctets, frDteDlciReceivedFrames=frDteDlciReceivedFrames, frDteLeqThrStatsTable=frDteLeqThrStatsTable, frDteStDlciHqPktThresholdExceeded=frDteStDlciHqPktThresholdExceeded, frDteVFramerRowStatusEntry=frDteVFramerRowStatusEntry, frDteRgIfAdminStatus=frDteRgIfAdminStatus, frDteStDlciHqTotalPktDiscards=frDteStDlciHqTotalPktDiscards, frDteStDlciHqRowStatusEntry=frDteStDlciHqRowStatusEntry, frDteDlciDiscardedFrames=frDteDlciDiscardedFrames, frDteDlciUsageState=frDteDlciUsageState, frDteFramerFrmToIf=frDteFramerFrmToIf, frDteStDlciProvEntry=frDteStDlciProvEntry, frDteFramer=frDteFramer, frDteLeqCStatsEntry=frDteLeqCStatsEntry, frDteDynDlciDefsRateEnforcement=frDteDynDlciDefsRateEnforcement, frDteRgBfrOprTable=frDteRgBfrOprTable, frDteStDlciHqThrStatsTable=frDteStDlciHqThrStatsTable, frDteRgStateEntry=frDteRgStateEntry, frDteRgIfEntryEntry=frDteRgIfEntryEntry, frDteLeqByteThresholdExceeded=frDteLeqByteThresholdExceeded, frDteLeqTimeToLive=frDteLeqTimeToLive, frDteLmiRowStatusEntry=frDteLmiRowStatusEntry, frDteErrStatsEntry=frDteErrStatsEntry, frDteStDlciHqStatsTable=frDteStDlciHqStatsTable, frDteFramerIndex=frDteFramerIndex, frDteLeqQueuePurgeDiscards=frDteLeqQueuePurgeDiscards, frDteDlciRowStatusTable=frDteDlciRowStatusTable, frDteRgBfrIndex=frDteRgBfrIndex, frDteDynDlciDefsRowStatus=frDteDynDlciDefsRowStatus, frDteStDlciRateEnforcement=frDteStDlciRateEnforcement, frDteXmitDiscardPvcDown=frDteXmitDiscardPvcDown, frDteLmiMonitoredEvents=frDteLmiMonitoredEvents, frDteDynDlciDefsExcessBurst=frDteDynDlciDefsExcessBurst, frDteUsageState=frDteUsageState, frDteRgBfrStorageType=frDteRgBfrStorageType, frDteStDlciStorageType=frDteStDlciStorageType, frDteRgBfrProvEntry=frDteRgBfrProvEntry, frDteErrTime=frDteErrTime, frDteLeqPktThresholdExceeded=frDteLeqPktThresholdExceeded, frDteStDlciExcessBurstAction=frDteStDlciExcessBurstAction, frDteFramerInterfaceName=frDteFramerInterfaceName, frDteStDlciRowStatusTable=frDteStDlciRowStatusTable, frDteStDlciHqQueueByteThreshold=frDteStDlciHqQueueByteThreshold, frDteStateTable=frDteStateTable, frDteStDlciRgLinkTable=frDteStDlciRgLinkTable, frDteRgLtDlciEntry=frDteRgLtDlciEntry, frDteDlciOperTable=frDteDlciOperTable, frDteRgBfrRowStatusTable=frDteRgBfrRowStatusTable, frDteRecvDiscardPvcDown=frDteRecvDiscardPvcDown, frDteVFramerStateTable=frDteVFramerStateTable, frDteRecvDiscardLmiInactive=frDteRecvDiscardLmiInactive, frDteDynDlciDefsStdRowStatus=frDteDynDlciDefsStdRowStatus, frDteDefragSequenceErrors=frDteDefragSequenceErrors, frDteDlci=frDteDlci, frDteStDlciProvTable=frDteStDlciProvTable, frDteDynDlciDefsProvEntry=frDteDynDlciDefsProvEntry, frDteDynDlciDefsRowStatusTable=frDteDynDlciDefsRowStatusTable, frDteDlciSentOctets=frDteDlciSentOctets, frDteLeqStorageType=frDteLeqStorageType, frDteProvEntry=frDteProvEntry, frDteLinkOperState=frDteLinkOperState, frDteStDlciHqTStatsTable=frDteStDlciHqTStatsTable, frDteLeqStatsEntry=frDteLeqStatsEntry, frDteDlciStateEntry=frDteDlciStateEntry, frDteDlciRowStatus=frDteDlciRowStatus, frDteRgRowStatusEntry=frDteRgRowStatusEntry, frDteStDlciHqMaxMsecData=frDteStDlciHqMaxMsecData, frDteLeqTotalMulticastPkt=frDteLeqTotalMulticastPkt, frDteRowStatusEntry=frDteRowStatusEntry, frDteDynDlciDefsExcessBurstAction=frDteDynDlciDefsExcessBurstAction, frDteVFramerStatsEntry=frDteVFramerStatsEntry, frDteDlciCommittedInformationRate=frDteDlciCommittedInformationRate, frDteStDlciHqMemThresholdExceeded=frDteStDlciHqMemThresholdExceeded, frDteStDlciHqTotalPktHandled=frDteStDlciHqTotalPktHandled, frDteErrTable=frDteErrTable, frDteVFramerComponentName=frDteVFramerComponentName, frDteCidDataTable=frDteCidDataTable, frDteIfEntryTable=frDteIfEntryTable, frDteStDlciHqRowStatusTable=frDteStDlciHqRowStatusTable, frDteAdminState=frDteAdminState, frDteRgComponentName=frDteRgComponentName, frDteLeqTimedOutPkt=frDteLeqTimedOutPkt, frDteRgMpEntry=frDteRgMpEntry, frDteLeqCurrentPktQueued=frDteLeqCurrentPktQueued, frDteRgMaxTransmissionUnit=frDteRgMaxTransmissionUnit, frDteStDlciHqTotalMulticastPkt=frDteStDlciHqTotalMulticastPkt, frDteDlcmiUnknownIe=frDteDlcmiUnknownIe, frDteRgUsageState=frDteRgUsageState, frDteRg=frDteRg, frDteDlciExcessBurst=frDteDlciExcessBurst, frDteDynDlciDefsIpCos=frDteDynDlciDefsIpCos, frDteDlciStateTable=frDteDlciStateTable, frDteRgMpTable=frDteRgMpTable, frDteStateEntry=frDteStateEntry, frDteFramerRowStatus=frDteFramerRowStatus, frDteRgOperStatusEntry=frDteRgOperStatusEntry, frDteRgRowStatus=frDteRgRowStatus, frDteLmiErrorThreshold=frDteLmiErrorThreshold, frDteFramerCrcErrors=frDteFramerCrcErrors, frDteVFramerStatsTable=frDteVFramerStatsTable, frDteDlciCommittedBurst=frDteDlciCommittedBurst)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayDteMIB", frDteFramerNormPrioLinkUtilFromIf=frDteFramerNormPrioLinkUtilFromIf, frDteVFramerLogicalProcessor=frDteVFramerLogicalProcessor, frDteXmitDiscardCirExceeded=frDteXmitDiscardCirExceeded, frDteLmiProvEntry=frDteLmiProvEntry, frDteLeqThrStatsEntry=frDteLeqThrStatsEntry, frDteRgSnmpOperStatus=frDteRgSnmpOperStatus, frDteRgRowStatusTable=frDteRgRowStatusTable, frDteFramerUnderruns=frDteFramerUnderruns, frDteRowStatus=frDteRowStatus, frDteFramerOverruns=frDteFramerOverruns, frDteLeqIndex=frDteLeqIndex, frameRelayDteGroup=frameRelayDteGroup, frDteDlciCreationTime=frDteDlciCreationTime, frDteStDlciCommittedBurst=frDteStDlciCommittedBurst, frDteDlciOperEntry=frDteDlciOperEntry, frDteDlciReceivedBECNs=frDteDlciReceivedBECNs, frDteOperationalState=frDteOperationalState, frDteRgBfrRowStatusEntry=frDteRgBfrRowStatusEntry, frDteRgLtDlciRowStatus=frDteRgLtDlciRowStatus, frDteXmitDiscardPvcInactive=frDteXmitDiscardPvcInactive, frDteStDlciComponentName=frDteStDlciComponentName, frDteRgBfrOprEntry=frDteRgBfrOprEntry, frDteLeqCurrentBytesQueued=frDteLeqCurrentBytesQueued, frDteLeqMaxPercentMulticast=frDteLeqMaxPercentMulticast, frDteBadFc=frDteBadFc, frDteStDlciHqProvTable=frDteStDlciHqProvTable, frDteDlciReceivedFECNs=frDteDlciReceivedFECNs, frDteFramerRowStatusTable=frDteFramerRowStatusTable, frDteStDlciHqQueuePktThreshold=frDteStDlciHqQueuePktThreshold, frDteLmiComponentName=frDteLmiComponentName, frDteDynDlciDefsStorageType=frDteDynDlciDefsStorageType, frDteLeqCStatsTable=frDteLeqCStatsTable, frDteLeqStatsTable=frDteLeqStatsTable, frDteLeqQueueByteThreshold=frDteLeqQueueByteThreshold, frDteStDlciHqMaxPackets=frDteStDlciHqMaxPackets, frDteVFramerRowStatusTable=frDteVFramerRowStatusTable, frDteErrFaults=frDteErrFaults, frDteIfIndex=frDteIfIndex, frDteFramerFrmFromIf=frDteFramerFrmFromIf, frDteAcceptUndefinedDlci=frDteAcceptUndefinedDlci, frDteDynDlciDefsCommittedBurst=frDteDynDlciDefsCommittedBurst, frDteDlciStorageType=frDteDlciStorageType, frDteOperStatusTable=frDteOperStatusTable, frDteLeqTotalPktDiscards=frDteLeqTotalPktDiscards, frDteDlciIndex=frDteDlciIndex, frDteLmiRowStatusTable=frDteLmiRowStatusTable, frDteLeqQueuePktThreshold=frDteLeqQueuePktThreshold, frDteDlciLastTimeChange=frDteDlciLastTimeChange, frDteVFramer=frDteVFramer, frDteVFramerFrmFromOtherVFramer=frDteVFramerFrmFromOtherVFramer, frDteLmiStorageType=frDteLmiStorageType, frDteLmiIndex=frDteLmiIndex, frDteLmiPollingInterval=frDteLmiPollingInterval, frDteLeqQueueMulticastThreshold=frDteLeqQueueMulticastThreshold, frDteFramerLrcErrors=frDteFramerLrcErrors, frDteFramerLargeFrmErrors=frDteFramerLargeFrmErrors, frDteStDlciHqQueuePurgeDiscards=frDteStDlciHqQueuePurgeDiscards, frDteOperTable=frDteOperTable, frDteFramerNormPrioLinkUtilToIf=frDteFramerNormPrioLinkUtilToIf, frDteDlcmiUnknownRpt=frDteDlcmiUnknownRpt, frDteStDlciHqMulThresholdExceeded=frDteStDlciHqMulThresholdExceeded, frDteStorageType=frDteStorageType, frDteErrStatsTable=frDteErrStatsTable, frDteRgIndex=frDteRgIndex)
