#
# PySNMP MIB module WWP-LEOS-PBT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-PBT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, ModuleIdentity, NotificationType, iso, MibIdentifier, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, Unsigned32, Bits, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "NotificationType", "iso", "MibIdentifier", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "Unsigned32", "Bits", "Gauge32", "IpAddress")
TextualConvention, DisplayString, RowStatus, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "MacAddress", "TruthValue")
wwpLeosVplsEncapTunnelName, wwpLeosVplsEncapTunnelId, wwpLeosVplsEncapTunnelActive, wwpLeosVplsEncapTunnelBVID = mibBuilder.importSymbols("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelName", "wwpLeosVplsEncapTunnelId", "wwpLeosVplsEncapTunnelActive", "wwpLeosVplsEncapTunnelBVID")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosPbtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38))
wwpLeosPbtMIB.setRevisions(('2011-07-05 00:00', '2011-05-05 16:00', '2011-01-31 00:00', '2007-03-02 17:00', '2006-08-25 17:00',))
if mibBuilder.loadTexts: wwpLeosPbtMIB.setLastUpdated('201107050000Z')
if mibBuilder.loadTexts: wwpLeosPbtMIB.setOrganization('Ciena, Inc')
wwpLeosPbtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1))
wwpLeosPbt = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1))
wwpLeosPbtMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2))
wwpLeosPbtMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0))
wwpLeosPbtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3))
wwpLeosPbtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 1))
wwpLeosPbtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 2))
wwpLeosPbtGlobalAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1))
wwpLeosPbtBridgeMac = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtBridgeMac.setStatus('current')
wwpLeosPbtServiceTagEType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtServiceTagEType.setStatus('current')
wwpLeosPbtTunnelTagEtype = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtTunnelTagEtype.setStatus('current')
wwpLeosPbtTunnelReversionState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtTunnelReversionState.setStatus('current')
wwpLeosPbtTunnelReversionHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 5), Unsigned32().clone(3000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtTunnelReversionHoldTime.setStatus('current')
wwpLeosPbtTransitTunnelEtypeRemark = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtTransitTunnelEtypeRemark.setStatus('current')
wwpLeosPbtAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonNative", 1), ("native", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtAdminMode.setStatus('current')
wwpLeosPbtOperMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonNative", 1), ("native", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtOperMode.setStatus('current')
wwpLeosPbtServiceVlanTpid = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtServiceVlanTpid.setStatus('current')
wwpLeosPbtTunnelSwitchOverHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 1, 10), Unsigned32()).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPbtTunnelSwitchOverHoldTime.setStatus('current')
wwpLeosPbtBridgeNameMacMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosPbtBridgeNameMacMapTable.setStatus('current')
wwpLeosPbtBridgeNameMacMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosPbtBridgeNameMacMapIndex"))
if mibBuilder.loadTexts: wwpLeosPbtBridgeNameMacMapEntry.setStatus('current')
wwpLeosPbtBridgeNameMacMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtBridgeNameMacMapIndex.setStatus('current')
wwpLeosPbtBridgeNameMacMapBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtBridgeNameMacMapBridgeName.setStatus('current')
wwpLeosPbtBridgeNameMacMapMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 2, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtBridgeNameMacMapMacAddr.setStatus('current')
wwpLeosPbtBridgeNameMacMapUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtBridgeNameMacMapUseCount.setStatus('current')
wwpLeosPbtBridgeNameMacMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtBridgeNameMacMapRowStatus.setStatus('current')
wwpLeosPbtReservedBVIDTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 3), )
if mibBuilder.loadTexts: wwpLeosPbtReservedBVIDTable.setStatus('current')
wwpLeosPbtReservedBVIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 3, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosPbtReservedBVID"))
if mibBuilder.loadTexts: wwpLeosPbtReservedBVIDEntry.setStatus('current')
wwpLeosPbtReservedBVID = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtReservedBVID.setStatus('current')
wwpLeosPbtReservedBVIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtReservedBVIDRowStatus.setStatus('current')
wwpLeosPbtVirtualCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4), )
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitTable.setStatus('current')
wwpLeosPbtVirtualCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitIndex"))
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitEntry.setStatus('current')
wwpLeosPbtVirtualCircuitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitIndex.setStatus('current')
wwpLeosPbtVirtualCircuitName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitName.setStatus('current')
wwpLeosPbtVirtualCircuitFixedEncapTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitFixedEncapTunnelId.setStatus('current')
wwpLeosPbtVirtualCircuitDestBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitDestBridgeIndex.setStatus('current')
wwpLeosPbtVirtualCircuitIngressISID = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitIngressISID.setStatus('current')
wwpLeosPbtVirtualCircuitEgressISID = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitEgressISID.setStatus('current')
wwpLeosPbtVirtualCircuitOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitOperState.setStatus('current')
wwpLeosPbtVirtualCircuitEncapTunnelIdInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitEncapTunnelIdInUse.setStatus('current')
wwpLeosPbtVirtualCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitRowStatus.setStatus('current')
wwpLeosPbtVirtualCircuitRetainSTAG = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitRetainSTAG.setStatus('current')
wwpLeosPbtVirtualCircuitStag = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 4, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitStag.setStatus('current')
wwpLeosPbtVirtualCircuitStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 5), )
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitStatsTable.setStatus('current')
wwpLeosPbtVirtualCircuitStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitIndex"))
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitStatsEntry.setStatus('current')
wwpLeosPbtVirtualCircuitTxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitTxBytesHi.setStatus('current')
wwpLeosPbtVirtualCircuitTxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitTxBytesLo.setStatus('current')
wwpLeosPbtVirtualCircuitRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitRxBytesHi.setStatus('current')
wwpLeosPbtVirtualCircuitRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtVirtualCircuitRxBytesLo.setStatus('current')
wwpLeosPbtLocalBridgeNameMacMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 6), )
if mibBuilder.loadTexts: wwpLeosPbtLocalBridgeNameMacMapTable.setStatus('current')
wwpLeosPbtLocalBridgeNameMacMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 6, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosPbtLocalBridgeNameMacMapIndex"))
if mibBuilder.loadTexts: wwpLeosPbtLocalBridgeNameMacMapEntry.setStatus('current')
wwpLeosPbtLocalBridgeNameMacMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtLocalBridgeNameMacMapIndex.setStatus('current')
wwpLeosPbtLocalBridgeNameMacMapBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtLocalBridgeNameMacMapBridgeName.setStatus('current')
wwpLeosPbtLocalBridgeNameMacMapMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 6, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtLocalBridgeNameMacMapMacAddr.setStatus('current')
wwpLeosPbtLocalBridgeNameMacMapUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPbtLocalBridgeNameMacMapUseCount.setStatus('current')
wwpLeosPbtLocalBridgeNameMacMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosPbtLocalBridgeNameMacMapRowStatus.setStatus('current')
wwpLeosTcePbt = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10))
wwpLeosTcePbtServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1), )
if mibBuilder.loadTexts: wwpLeosTcePbtServiceTable.setStatus('current')
wwpLeosTcePbtServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosTcePbtServiceIndex"))
if mibBuilder.loadTexts: wwpLeosTcePbtServiceEntry.setStatus('current')
wwpLeosTcePbtServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wwpLeosTcePbtServiceIndex.setStatus('current')
wwpLeosTcePbtServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceName.setStatus('current')
wwpLeosTcePbtServiceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceOperStatus.setStatus('current')
wwpLeosTcePbtServiceFloodContProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceFloodContProfileId.setStatus('current')
wwpLeosTcePbtServiceFloodContProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceFloodContProfileName.setStatus('current')
wwpLeosTcePbtServiceVsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceVsIndex.setStatus('current')
wwpLeosTcePbtServiceVsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceVsName.setStatus('current')
wwpLeosTcePbtServiceTnlGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceTnlGroupIndex.setStatus('current')
wwpLeosTcePbtServiceTnlGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceTnlGroupName.setStatus('current')
wwpLeosTcePbtServiceIngressIsId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceIngressIsId.setStatus('current')
wwpLeosTcePbtServiceEgressIsId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceEgressIsId.setStatus('current')
wwpLeosTcePbtServiceFixedEgressPcp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceFixedEgressPcp.setStatus('current')
wwpLeosTcePbtServiceFrameCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("isidPcPMap", 2))).clone('isidPcPMap')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceFrameCosPolicy.setStatus('current')
wwpLeosTcePbtServiceFrameCosMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceFrameCosMapIndex.setStatus('current')
wwpLeosTcePbtServiceFrameCosMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceFrameCosMapName.setStatus('current')
wwpLeosTcePbtServiceResolvedCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("fixed", 2), ("isidPcpMap", 3))).clone('isidPcpMap')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceResolvedCosPolicy.setStatus('current')
wwpLeosTcePbtServiceResolvedCosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceResolvedCosProfileIndex.setStatus('current')
wwpLeosTcePbtServiceResolvedCosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceResolvedCosProfileName.setStatus('current')
wwpLeosTcePbtServiceIngressMeterProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceIngressMeterProfileId.setStatus('current')
wwpLeosTcePbtServiceIngressMeterProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceIngressMeterProfileName.setStatus('current')
wwpLeosTcePbtServiceIngressMeterPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonhierarchical", 1), ("hierarchical", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceIngressMeterPolicy.setStatus('current')
wwpLeosTcePbtServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 1, 1, 64), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceRowStatus.setStatus('current')
wwpLeosTcePbtTnlGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5), )
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupTable.setStatus('current')
wwpLeosTcePbtTnlGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTnlGroupIndex"))
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupEntry.setStatus('current')
wwpLeosTcePbtTnlGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupIndex.setStatus('current')
wwpLeosTcePbtTnlGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupName.setStatus('current')
wwpLeosTcePbtTnlGroupSyncEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupSyncEnabled.setStatus('current')
wwpLeosTcePbtTnlGroupOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupOperStatus.setStatus('current')
wwpLeosTcePbtTnlGroupUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupUseCount.setStatus('current')
wwpLeosTcePbtTnlGroupActivePair = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupActivePair.setStatus('current')
wwpLeosTcePbtTnlGroupReverting = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupReverting.setStatus('current')
wwpLeosTcePbtTnlGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 5, 1, 64), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtTnlGroupRowStatus.setStatus('current')
wwpLeosTcePbtEncapTnlTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6), )
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlTable.setStatus('current')
wwpLeosTcePbtEncapTnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlIndex"))
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlEntry.setStatus('current')
wwpLeosTcePbtEncapTnlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlIndex.setStatus('current')
wwpLeosTcePbtEncapTnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlName.setStatus('current')
wwpLeosTcePbtEncapTnlRemoteBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlRemoteBridgeIndex.setStatus('current')
wwpLeosTcePbtEncapTnlRemoteBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlRemoteBridgeName.setStatus('current')
wwpLeosTcePbtEncapTnlGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlGroupIndex.setStatus('current')
wwpLeosTcePbtEncapTnlGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlGroupName.setStatus('current')
wwpLeosTcePbtEncapTnlBvId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlBvId.setStatus('current')
wwpLeosTcePbtEncapTnlPgId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlPgId.setStatus('current')
wwpLeosTcePbtEncapTnlPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlPortName.setStatus('current')
wwpLeosTcePbtEncapTnlFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlFaults.setStatus('current')
wwpLeosTcePbtEncapTnlAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlAdminState.setStatus('current')
wwpLeosTcePbtEncapTnlOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlOperState.setStatus('current')
wwpLeosTcePbtEncapTnlFwdState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("standby", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlFwdState.setStatus('current')
wwpLeosTcePbtEncapTnlPaired = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlPaired.setStatus('current')
wwpLeosTcePbtEncapTnlPairIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlPairIndex.setStatus('current')
wwpLeosTcePbtEncapTnlPairOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlPairOperState.setStatus('current')
wwpLeosTcePbtEncapTnlFrameCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("isidPcPMap", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlFrameCosPolicy.setStatus('current')
wwpLeosTcePbtEncapTnlFrameCosMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 18), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlFrameCosMapIndex.setStatus('current')
wwpLeosTcePbtEncapTnlFrameCosMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlFrameCosMapName.setStatus('current')
wwpLeosTcePbtEncapTnlFixedPcp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlFixedPcp.setStatus('current')
wwpLeosTcePbtEncapTnlCfmConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlCfmConfigured.setStatus('current')
wwpLeosTcePbtEncapTnlPairedDecapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlPairedDecapIndex.setStatus('current')
wwpLeosTcePbtEncapTnlPairedDecapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlPairedDecapName.setStatus('current')
wwpLeosTcePbtEncapTnlWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlWeight.setStatus('current')
wwpLeosTcePbtEncapTnlStatsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlStatsEnabled.setStatus('current')
wwpLeosTcePbtEncapTnlLocalBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 26), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlLocalBridgeIndex.setStatus('current')
wwpLeosTcePbtEncapTnlLocalBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlLocalBridgeName.setStatus('current')
wwpLeosTcePbtEncapTnlReversionToPairIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 28), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlReversionToPairIndex.setStatus('current')
wwpLeosTcePbtEncapTnlReversionFromPairIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 29), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlReversionFromPairIndex.setStatus('current')
wwpLeosTcePbtEncapTnlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 6, 1, 64), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtEncapTnlRowStatus.setStatus('current')
wwpLeosTcePbtDecapTnlTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7), )
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlTable.setStatus('current')
wwpLeosTcePbtDecapTnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosTcePbtDecapTnlIndex"))
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlEntry.setStatus('current')
wwpLeosTcePbtDecapTnlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlIndex.setStatus('current')
wwpLeosTcePbtDecapTnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlName.setStatus('current')
wwpLeosTcePbtDecapTnlRemoteBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlRemoteBridgeIndex.setStatus('current')
wwpLeosTcePbtDecapTnlRemoteBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlRemoteBridgeName.setStatus('current')
wwpLeosTcePbtDecapTnlGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlGroupIndex.setStatus('current')
wwpLeosTcePbtDecapTnlGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlGroupName.setStatus('current')
wwpLeosTcePbtDecapTnlBvId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlBvId.setStatus('current')
wwpLeosTcePbtDecapTnlPgId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlPgId.setStatus('current')
wwpLeosTcePbtDecapTnlPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlPortName.setStatus('current')
wwpLeosTcePbtDecapTnlFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlFaults.setStatus('current')
wwpLeosTcePbtDecapTnlOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlOperState.setStatus('current')
wwpLeosTcePbtDecapTnlFwdState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("standby", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlFwdState.setStatus('current')
wwpLeosTcePbtDecapTnlPaired = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlPaired.setStatus('current')
wwpLeosTcePbtDecapTnlPairIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlPairIndex.setStatus('current')
wwpLeosTcePbtDecapTnlPairOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlPairOperState.setStatus('current')
wwpLeosTcePbtDecapTnlResolvedCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("fixed", 2), ("isidPcpMap", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlResolvedCosPolicy.setStatus('current')
wwpLeosTcePbtDecapTnlResolvedCosMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 17), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlResolvedCosMapIndex.setStatus('current')
wwpLeosTcePbtDecapTnlResolvedCosMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlResolvedCosMapName.setStatus('current')
wwpLeosTcePbtDecapTnlCfmConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlCfmConfigured.setStatus('current')
wwpLeosTcePbtDecapTnlPairedEncapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlPairedEncapIndex.setStatus('current')
wwpLeosTcePbtDecapTnlPairedEncapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlPairedEncapName.setStatus('current')
wwpLeosTcePbtDecapTnlStatsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlStatsEnabled.setStatus('current')
wwpLeosTcePbtDecapTnlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 7, 1, 64), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosTcePbtDecapTnlRowStatus.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8), )
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformTable.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1), ).setIndexNames((0, "WWP-LEOS-PBT-MIB", "wwpLeosTcePbtServiceIndex"), (0, "WWP-LEOS-PBT-MIB", "wwpLeosTcePbtServiceUserFrameL2TransformDirection"), (0, "WWP-LEOS-PBT-MIB", "wwpLeosTcePbtServiceUserFrameL2TransformTagIndex"))
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformEntry.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2))))
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformDirection.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformTagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformTagIndex.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformTagAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("push", 2), ("pop", 3), ("stamp1", 4), ("stamp2", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformTagAction.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformTagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformTagValue.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformTagEtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformTagEtype.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformTagPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformTagPriority.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformPriPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("leave", 1), ("static", 2), ("mapped", 3))).clone('leave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformPriPolicy.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformUseTagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformUseTagValue.setStatus('current')
wwpLeosTcePbtServiceUserFrameL2TransformUseTagEtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 1, 1, 10, 8, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTcePbtServiceUserFrameL2TransformUseTagEtype.setStatus('current')
wwpLeosPbtTunnelFaultNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0, 1)).setObjects(("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelId"))
if mibBuilder.loadTexts: wwpLeosPbtTunnelFaultNotification.setStatus('deprecated')
wwpLeosPbtTunnelReversionNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0, 2)).setObjects(("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelId"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelName"))
if mibBuilder.loadTexts: wwpLeosPbtTunnelReversionNotification.setStatus('current')
wwpLeosPbtTunnelActivateNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0, 3)).setObjects(("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelId"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelName"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelId"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelName"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelActive"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelBVID"))
if mibBuilder.loadTexts: wwpLeosPbtTunnelActivateNotification.setStatus('current')
wwpLeosPbtTunnelDeactivateNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0, 4)).setObjects(("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelId"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelName"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelId"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelName"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelActive"), ("WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelBVID"))
if mibBuilder.loadTexts: wwpLeosPbtTunnelDeactivateNotification.setStatus('current')
wwpLeosTcePbtTunnelActivateNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0, 10)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlName"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTnlGroupIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTnlGroupName"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlFwdState"))
if mibBuilder.loadTexts: wwpLeosTcePbtTunnelActivateNotification.setStatus('current')
wwpLeosTcePbtTunnelDeactivateNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0, 11)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlName"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTnlGroupIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTnlGroupName"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlFwdState"))
if mibBuilder.loadTexts: wwpLeosTcePbtTunnelDeactivateNotification.setStatus('current')
wwpLeosTcePbtTunnelReversionNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 2, 0, 12)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTnlGroupIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTnlGroupName"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlReversionToPairIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtEncapTnlReversionFromPairIndex"))
if mibBuilder.loadTexts: wwpLeosTcePbtTunnelReversionNotification.setStatus('current')
pbtGlobalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 2, 1)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosPbtBridgeMac"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtServiceTagEType"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtTunnelTagEtype"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtTunnelReversionState"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtTunnelReversionHoldTime"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtAdminMode"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtOperMode"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtServiceVlanTpid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pbtGlobalConfigGroup = pbtGlobalConfigGroup.setStatus('current')
pbtBridgeNameMacMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 2, 2)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosPbtBridgeNameMacMapIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtBridgeNameMacMapBridgeName"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtBridgeNameMacMapMacAddr"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtBridgeNameMacMapUseCount"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtBridgeNameMacMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pbtBridgeNameMacMapGroup = pbtBridgeNameMacMapGroup.setStatus('current')
pbtReserveBvidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 2, 3)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosPbtReservedBVID"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtReservedBVIDRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pbtReserveBvidGroup = pbtReserveBvidGroup.setStatus('current')
pbtVirtualCircuitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 2, 4)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitName"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitFixedEncapTunnelId"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitDestBridgeIndex"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitIngressISID"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitEgressISID"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitOperState"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitEncapTunnelIdInUse"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pbtVirtualCircuitGroup = pbtVirtualCircuitGroup.setStatus('current')
pbtVirtualCircuitStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 2, 5)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitTxBytesHi"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitTxBytesLo"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitRxBytesHi"), ("WWP-LEOS-PBT-MIB", "wwpLeosPbtVirtualCircuitRxBytesLo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pbtVirtualCircuitStatsGroup = pbtVirtualCircuitStatsGroup.setStatus('current')
pbtNotificationGroups = NotificationGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 38, 3, 2, 6)).setObjects(("WWP-LEOS-PBT-MIB", "wwpLeosPbtTunnelFaultNotification"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTunnelActivateNotification"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTunnelDeactivateNotification"), ("WWP-LEOS-PBT-MIB", "wwpLeosTcePbtTunnelReversionNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pbtNotificationGroups = pbtNotificationGroups.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-PBT-MIB", wwpLeosTcePbtEncapTnlLocalBridgeIndex=wwpLeosTcePbtEncapTnlLocalBridgeIndex, pbtVirtualCircuitStatsGroup=pbtVirtualCircuitStatsGroup, wwpLeosTcePbtDecapTnlResolvedCosPolicy=wwpLeosTcePbtDecapTnlResolvedCosPolicy, wwpLeosTcePbtServiceFrameCosPolicy=wwpLeosTcePbtServiceFrameCosPolicy, wwpLeosPbtVirtualCircuitStatsTable=wwpLeosPbtVirtualCircuitStatsTable, wwpLeosPbtTunnelDeactivateNotification=wwpLeosPbtTunnelDeactivateNotification, wwpLeosPbtBridgeMac=wwpLeosPbtBridgeMac, wwpLeosTcePbtServiceUserFrameL2TransformUseTagValue=wwpLeosTcePbtServiceUserFrameL2TransformUseTagValue, wwpLeosTcePbtEncapTnlPairIndex=wwpLeosTcePbtEncapTnlPairIndex, wwpLeosTcePbtTnlGroupUseCount=wwpLeosTcePbtTnlGroupUseCount, wwpLeosTcePbtServiceIngressIsId=wwpLeosTcePbtServiceIngressIsId, wwpLeosPbtBridgeNameMacMapTable=wwpLeosPbtBridgeNameMacMapTable, wwpLeosTcePbtTnlGroupReverting=wwpLeosTcePbtTnlGroupReverting, wwpLeosPbtTunnelTagEtype=wwpLeosPbtTunnelTagEtype, wwpLeosTcePbtTunnelDeactivateNotification=wwpLeosTcePbtTunnelDeactivateNotification, PYSNMP_MODULE_ID=wwpLeosPbtMIB, wwpLeosTcePbtEncapTnlFrameCosMapName=wwpLeosTcePbtEncapTnlFrameCosMapName, wwpLeosTcePbtServiceTnlGroupIndex=wwpLeosTcePbtServiceTnlGroupIndex, wwpLeosTcePbtTnlGroupActivePair=wwpLeosTcePbtTnlGroupActivePair, wwpLeosTcePbtDecapTnlPairedEncapIndex=wwpLeosTcePbtDecapTnlPairedEncapIndex, wwpLeosPbtBridgeNameMacMapEntry=wwpLeosPbtBridgeNameMacMapEntry, wwpLeosPbtReservedBVIDRowStatus=wwpLeosPbtReservedBVIDRowStatus, wwpLeosTcePbt=wwpLeosTcePbt, pbtNotificationGroups=pbtNotificationGroups, wwpLeosTcePbtServiceUserFrameL2TransformUseTagEtype=wwpLeosTcePbtServiceUserFrameL2TransformUseTagEtype, wwpLeosTcePbtServiceIndex=wwpLeosTcePbtServiceIndex, wwpLeosTcePbtServiceUserFrameL2TransformPriPolicy=wwpLeosTcePbtServiceUserFrameL2TransformPriPolicy, wwpLeosPbtBridgeNameMacMapRowStatus=wwpLeosPbtBridgeNameMacMapRowStatus, wwpLeosTcePbtEncapTnlTable=wwpLeosTcePbtEncapTnlTable, wwpLeosTcePbtDecapTnlCfmConfigured=wwpLeosTcePbtDecapTnlCfmConfigured, wwpLeosTcePbtEncapTnlBvId=wwpLeosTcePbtEncapTnlBvId, wwpLeosTcePbtServiceVsName=wwpLeosTcePbtServiceVsName, wwpLeosTcePbtEncapTnlFaults=wwpLeosTcePbtEncapTnlFaults, wwpLeosTcePbtEncapTnlCfmConfigured=wwpLeosTcePbtEncapTnlCfmConfigured, wwpLeosTcePbtTnlGroupSyncEnabled=wwpLeosTcePbtTnlGroupSyncEnabled, wwpLeosPbtVirtualCircuitTxBytesLo=wwpLeosPbtVirtualCircuitTxBytesLo, wwpLeosTcePbtTnlGroupTable=wwpLeosTcePbtTnlGroupTable, wwpLeosTcePbtEncapTnlName=wwpLeosTcePbtEncapTnlName, wwpLeosTcePbtTnlGroupIndex=wwpLeosTcePbtTnlGroupIndex, wwpLeosTcePbtServiceVsIndex=wwpLeosTcePbtServiceVsIndex, wwpLeosTcePbtEncapTnlPairOperState=wwpLeosTcePbtEncapTnlPairOperState, wwpLeosPbtVirtualCircuitIngressISID=wwpLeosPbtVirtualCircuitIngressISID, wwpLeosPbtVirtualCircuitEgressISID=wwpLeosPbtVirtualCircuitEgressISID, wwpLeosTcePbtTnlGroupOperStatus=wwpLeosTcePbtTnlGroupOperStatus, wwpLeosTcePbtEncapTnlReversionToPairIndex=wwpLeosTcePbtEncapTnlReversionToPairIndex, wwpLeosTcePbtServiceIngressMeterProfileId=wwpLeosTcePbtServiceIngressMeterProfileId, wwpLeosTcePbtServiceFrameCosMapName=wwpLeosTcePbtServiceFrameCosMapName, wwpLeosTcePbtDecapTnlFwdState=wwpLeosTcePbtDecapTnlFwdState, wwpLeosTcePbtServiceTnlGroupName=wwpLeosTcePbtServiceTnlGroupName, wwpLeosPbt=wwpLeosPbt, wwpLeosPbtVirtualCircuitEncapTunnelIdInUse=wwpLeosPbtVirtualCircuitEncapTunnelIdInUse, wwpLeosPbtLocalBridgeNameMacMapEntry=wwpLeosPbtLocalBridgeNameMacMapEntry, wwpLeosTcePbtEncapTnlRemoteBridgeIndex=wwpLeosTcePbtEncapTnlRemoteBridgeIndex, wwpLeosPbtVirtualCircuitFixedEncapTunnelId=wwpLeosPbtVirtualCircuitFixedEncapTunnelId, wwpLeosPbtTunnelActivateNotification=wwpLeosPbtTunnelActivateNotification, wwpLeosTcePbtServiceFloodContProfileId=wwpLeosTcePbtServiceFloodContProfileId, wwpLeosPbtMIBCompliances=wwpLeosPbtMIBCompliances, wwpLeosPbtVirtualCircuitEntry=wwpLeosPbtVirtualCircuitEntry, wwpLeosTcePbtEncapTnlGroupIndex=wwpLeosTcePbtEncapTnlGroupIndex, wwpLeosTcePbtEncapTnlFrameCosMapIndex=wwpLeosTcePbtEncapTnlFrameCosMapIndex, wwpLeosPbtLocalBridgeNameMacMapBridgeName=wwpLeosPbtLocalBridgeNameMacMapBridgeName, wwpLeosTcePbtDecapTnlPgId=wwpLeosTcePbtDecapTnlPgId, wwpLeosTcePbtDecapTnlRemoteBridgeIndex=wwpLeosTcePbtDecapTnlRemoteBridgeIndex, wwpLeosTcePbtEncapTnlPairedDecapName=wwpLeosTcePbtEncapTnlPairedDecapName, wwpLeosTcePbtDecapTnlPairOperState=wwpLeosTcePbtDecapTnlPairOperState, wwpLeosTcePbtDecapTnlBvId=wwpLeosTcePbtDecapTnlBvId, wwpLeosPbtReservedBVIDEntry=wwpLeosPbtReservedBVIDEntry, wwpLeosPbtVirtualCircuitRxBytesLo=wwpLeosPbtVirtualCircuitRxBytesLo, wwpLeosPbtTransitTunnelEtypeRemark=wwpLeosPbtTransitTunnelEtypeRemark, wwpLeosTcePbtServiceResolvedCosProfileName=wwpLeosTcePbtServiceResolvedCosProfileName, wwpLeosPbtVirtualCircuitOperState=wwpLeosPbtVirtualCircuitOperState, wwpLeosPbtVirtualCircuitRxBytesHi=wwpLeosPbtVirtualCircuitRxBytesHi, wwpLeosTcePbtServiceUserFrameL2TransformTagPriority=wwpLeosTcePbtServiceUserFrameL2TransformTagPriority, wwpLeosPbtMIBObjects=wwpLeosPbtMIBObjects, wwpLeosTcePbtEncapTnlOperState=wwpLeosTcePbtEncapTnlOperState, wwpLeosPbtVirtualCircuitStag=wwpLeosPbtVirtualCircuitStag, wwpLeosTcePbtServiceUserFrameL2TransformTagValue=wwpLeosTcePbtServiceUserFrameL2TransformTagValue, pbtGlobalConfigGroup=pbtGlobalConfigGroup, wwpLeosTcePbtDecapTnlEntry=wwpLeosTcePbtDecapTnlEntry, wwpLeosTcePbtDecapTnlFaults=wwpLeosTcePbtDecapTnlFaults, wwpLeosTcePbtEncapTnlPgId=wwpLeosTcePbtEncapTnlPgId, wwpLeosPbtBridgeNameMacMapUseCount=wwpLeosPbtBridgeNameMacMapUseCount, wwpLeosPbtReservedBVIDTable=wwpLeosPbtReservedBVIDTable, wwpLeosTcePbtEncapTnlPaired=wwpLeosTcePbtEncapTnlPaired, wwpLeosPbtBridgeNameMacMapIndex=wwpLeosPbtBridgeNameMacMapIndex, wwpLeosTcePbtServiceResolvedCosProfileIndex=wwpLeosTcePbtServiceResolvedCosProfileIndex, wwpLeosTcePbtServiceFrameCosMapIndex=wwpLeosTcePbtServiceFrameCosMapIndex, pbtBridgeNameMacMapGroup=pbtBridgeNameMacMapGroup, wwpLeosTcePbtEncapTnlRemoteBridgeName=wwpLeosTcePbtEncapTnlRemoteBridgeName, wwpLeosPbtMIBNotifications=wwpLeosPbtMIBNotifications, wwpLeosPbtTunnelReversionHoldTime=wwpLeosPbtTunnelReversionHoldTime, wwpLeosPbtVirtualCircuitStatsEntry=wwpLeosPbtVirtualCircuitStatsEntry, wwpLeosTcePbtDecapTnlPaired=wwpLeosTcePbtDecapTnlPaired, wwpLeosPbtLocalBridgeNameMacMapUseCount=wwpLeosPbtLocalBridgeNameMacMapUseCount, wwpLeosTcePbtDecapTnlStatsEnabled=wwpLeosTcePbtDecapTnlStatsEnabled, wwpLeosTcePbtServiceIngressMeterPolicy=wwpLeosTcePbtServiceIngressMeterPolicy, wwpLeosPbtMIBConformance=wwpLeosPbtMIBConformance, wwpLeosTcePbtDecapTnlResolvedCosMapName=wwpLeosTcePbtDecapTnlResolvedCosMapName, wwpLeosPbtServiceVlanTpid=wwpLeosPbtServiceVlanTpid, wwpLeosPbtVirtualCircuitTxBytesHi=wwpLeosPbtVirtualCircuitTxBytesHi, wwpLeosPbtServiceTagEType=wwpLeosPbtServiceTagEType, wwpLeosTcePbtTnlGroupName=wwpLeosTcePbtTnlGroupName, wwpLeosPbtLocalBridgeNameMacMapTable=wwpLeosPbtLocalBridgeNameMacMapTable, wwpLeosTcePbtServiceFixedEgressPcp=wwpLeosTcePbtServiceFixedEgressPcp, wwpLeosPbtTunnelSwitchOverHoldTime=wwpLeosPbtTunnelSwitchOverHoldTime, wwpLeosPbtLocalBridgeNameMacMapMacAddr=wwpLeosPbtLocalBridgeNameMacMapMacAddr, wwpLeosTcePbtServiceUserFrameL2TransformTagAction=wwpLeosTcePbtServiceUserFrameL2TransformTagAction, wwpLeosTcePbtDecapTnlGroupName=wwpLeosTcePbtDecapTnlGroupName, wwpLeosTcePbtEncapTnlIndex=wwpLeosTcePbtEncapTnlIndex, wwpLeosTcePbtEncapTnlFrameCosPolicy=wwpLeosTcePbtEncapTnlFrameCosPolicy, pbtVirtualCircuitGroup=pbtVirtualCircuitGroup, wwpLeosPbtLocalBridgeNameMacMapRowStatus=wwpLeosPbtLocalBridgeNameMacMapRowStatus, wwpLeosTcePbtEncapTnlReversionFromPairIndex=wwpLeosTcePbtEncapTnlReversionFromPairIndex, wwpLeosTcePbtDecapTnlOperState=wwpLeosTcePbtDecapTnlOperState, wwpLeosTcePbtServiceUserFrameL2TransformTagIndex=wwpLeosTcePbtServiceUserFrameL2TransformTagIndex, wwpLeosTcePbtServiceFloodContProfileName=wwpLeosTcePbtServiceFloodContProfileName, wwpLeosTcePbtTunnelActivateNotification=wwpLeosTcePbtTunnelActivateNotification, wwpLeosPbtVirtualCircuitIndex=wwpLeosPbtVirtualCircuitIndex, wwpLeosTcePbtEncapTnlGroupName=wwpLeosTcePbtEncapTnlGroupName, wwpLeosTcePbtDecapTnlGroupIndex=wwpLeosTcePbtDecapTnlGroupIndex, wwpLeosPbtVirtualCircuitTable=wwpLeosPbtVirtualCircuitTable, wwpLeosPbtMIBGroups=wwpLeosPbtMIBGroups, wwpLeosTcePbtEncapTnlRowStatus=wwpLeosTcePbtEncapTnlRowStatus, wwpLeosTcePbtEncapTnlLocalBridgeName=wwpLeosTcePbtEncapTnlLocalBridgeName, wwpLeosTcePbtEncapTnlAdminState=wwpLeosTcePbtEncapTnlAdminState, wwpLeosPbtMIB=wwpLeosPbtMIB, wwpLeosTcePbtEncapTnlFwdState=wwpLeosTcePbtEncapTnlFwdState, wwpLeosTcePbtDecapTnlResolvedCosMapIndex=wwpLeosTcePbtDecapTnlResolvedCosMapIndex, wwpLeosPbtLocalBridgeNameMacMapIndex=wwpLeosPbtLocalBridgeNameMacMapIndex, wwpLeosTcePbtServiceUserFrameL2TransformTagEtype=wwpLeosTcePbtServiceUserFrameL2TransformTagEtype, wwpLeosPbtGlobalAttrs=wwpLeosPbtGlobalAttrs, wwpLeosTcePbtTunnelReversionNotification=wwpLeosTcePbtTunnelReversionNotification, wwpLeosPbtTunnelFaultNotification=wwpLeosPbtTunnelFaultNotification, wwpLeosTcePbtTnlGroupRowStatus=wwpLeosTcePbtTnlGroupRowStatus, wwpLeosTcePbtServiceUserFrameL2TransformDirection=wwpLeosTcePbtServiceUserFrameL2TransformDirection, wwpLeosTcePbtDecapTnlIndex=wwpLeosTcePbtDecapTnlIndex, wwpLeosTcePbtEncapTnlPairedDecapIndex=wwpLeosTcePbtEncapTnlPairedDecapIndex, wwpLeosTcePbtEncapTnlPortName=wwpLeosTcePbtEncapTnlPortName, wwpLeosTcePbtDecapTnlTable=wwpLeosTcePbtDecapTnlTable, wwpLeosTcePbtServiceEntry=wwpLeosTcePbtServiceEntry, wwpLeosPbtVirtualCircuitRetainSTAG=wwpLeosPbtVirtualCircuitRetainSTAG, wwpLeosPbtBridgeNameMacMapBridgeName=wwpLeosPbtBridgeNameMacMapBridgeName, pbtReserveBvidGroup=pbtReserveBvidGroup, wwpLeosTcePbtDecapTnlPortName=wwpLeosTcePbtDecapTnlPortName, wwpLeosPbtTunnelReversionState=wwpLeosPbtTunnelReversionState, wwpLeosPbtMIBNotificationPrefix=wwpLeosPbtMIBNotificationPrefix, wwpLeosPbtAdminMode=wwpLeosPbtAdminMode, wwpLeosTcePbtDecapTnlName=wwpLeosTcePbtDecapTnlName, wwpLeosTcePbtEncapTnlFixedPcp=wwpLeosTcePbtEncapTnlFixedPcp, wwpLeosTcePbtEncapTnlWeight=wwpLeosTcePbtEncapTnlWeight, wwpLeosTcePbtServiceUserFrameL2TransformEntry=wwpLeosTcePbtServiceUserFrameL2TransformEntry, wwpLeosPbtBridgeNameMacMapMacAddr=wwpLeosPbtBridgeNameMacMapMacAddr, wwpLeosPbtTunnelReversionNotification=wwpLeosPbtTunnelReversionNotification, wwpLeosPbtVirtualCircuitRowStatus=wwpLeosPbtVirtualCircuitRowStatus, wwpLeosTcePbtDecapTnlPairedEncapName=wwpLeosTcePbtDecapTnlPairedEncapName, wwpLeosPbtReservedBVID=wwpLeosPbtReservedBVID, wwpLeosTcePbtTnlGroupEntry=wwpLeosTcePbtTnlGroupEntry, wwpLeosTcePbtServiceOperStatus=wwpLeosTcePbtServiceOperStatus, wwpLeosTcePbtServiceEgressIsId=wwpLeosTcePbtServiceEgressIsId, wwpLeosTcePbtServiceIngressMeterProfileName=wwpLeosTcePbtServiceIngressMeterProfileName, wwpLeosTcePbtServiceUserFrameL2TransformTable=wwpLeosTcePbtServiceUserFrameL2TransformTable, wwpLeosTcePbtServiceTable=wwpLeosTcePbtServiceTable, wwpLeosTcePbtServiceRowStatus=wwpLeosTcePbtServiceRowStatus, wwpLeosTcePbtDecapTnlRemoteBridgeName=wwpLeosTcePbtDecapTnlRemoteBridgeName, wwpLeosTcePbtDecapTnlPairIndex=wwpLeosTcePbtDecapTnlPairIndex, wwpLeosTcePbtDecapTnlRowStatus=wwpLeosTcePbtDecapTnlRowStatus, wwpLeosPbtVirtualCircuitDestBridgeIndex=wwpLeosPbtVirtualCircuitDestBridgeIndex, wwpLeosTcePbtEncapTnlEntry=wwpLeosTcePbtEncapTnlEntry, wwpLeosPbtVirtualCircuitName=wwpLeosPbtVirtualCircuitName, wwpLeosTcePbtEncapTnlStatsEnabled=wwpLeosTcePbtEncapTnlStatsEnabled, wwpLeosTcePbtServiceName=wwpLeosTcePbtServiceName, wwpLeosPbtOperMode=wwpLeosPbtOperMode, wwpLeosTcePbtServiceResolvedCosPolicy=wwpLeosTcePbtServiceResolvedCosPolicy)
