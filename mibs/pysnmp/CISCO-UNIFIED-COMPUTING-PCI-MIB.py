#
# PySNMP MIB module CISCO-UNIFIED-COMPUTING-PCI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-UNIFIED-COMPUTING-PCI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:00:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoAlarmSeverity, CiscoNetworkAddress, TimeIntervalSec, CiscoInetAddressMask, Unsigned64 = mibBuilder.importSymbols("CISCO-TC", "CiscoAlarmSeverity", "CiscoNetworkAddress", "TimeIntervalSec", "CiscoInetAddressMask", "Unsigned64")
ciscoUnifiedComputingMIBObjects, CucsManagedObjectId, CucsManagedObjectDn = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-MIB", "ciscoUnifiedComputingMIBObjects", "CucsManagedObjectId", "CucsManagedObjectDn")
CucsEquipmentOperability, CucsPciEquipSlotId, CucsEquipmentPowerState, CucsEquipmentDiscoveryState, CucsEquipmentSensorThresholdStatus, CucsEquipmentPresence = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-TC-MIB", "CucsEquipmentOperability", "CucsPciEquipSlotId", "CucsEquipmentPowerState", "CucsEquipmentDiscoveryState", "CucsEquipmentSensorThresholdStatus", "CucsEquipmentPresence")
InetAddressIPv6, InetAddressIPv4 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6", "InetAddressIPv4")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibIdentifier, iso, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, Integer32, Gauge32, ObjectIdentity, NotificationType, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "iso", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "Integer32", "Gauge32", "ObjectIdentity", "NotificationType", "IpAddress", "TimeTicks")
TruthValue, RowPointer, TextualConvention, TimeInterval, TimeStamp, DateAndTime, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowPointer", "TextualConvention", "TimeInterval", "TimeStamp", "DateAndTime", "DisplayString", "MacAddress")
cucsPciObjects = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36))
if mibBuilder.loadTexts: cucsPciObjects.setLastUpdated('201601180000Z')
if mibBuilder.loadTexts: cucsPciObjects.setOrganization('Cisco Systems Inc.')
cucsPciEquipSlotTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2), )
if mibBuilder.loadTexts: cucsPciEquipSlotTable.setStatus('current')
cucsPciEquipSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-PCI-MIB", "cucsPciEquipSlotInstanceId"))
if mibBuilder.loadTexts: cucsPciEquipSlotEntry.setStatus('current')
cucsPciEquipSlotInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsPciEquipSlotInstanceId.setStatus('current')
cucsPciEquipSlotDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotDn.setStatus('current')
cucsPciEquipSlotRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotRn.setStatus('current')
cucsPciEquipSlotControllerReported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotControllerReported.setStatus('current')
cucsPciEquipSlotDiscoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 5), CucsEquipmentDiscoveryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotDiscoveryState.setStatus('current')
cucsPciEquipSlotFltAggr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 6), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotFltAggr.setStatus('current')
cucsPciEquipSlotHostReported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotHostReported.setStatus('current')
cucsPciEquipSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 8), CucsPciEquipSlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotId.setStatus('current')
cucsPciEquipSlotMacLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotMacLeft.setStatus('current')
cucsPciEquipSlotMacRight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotMacRight.setStatus('current')
cucsPciEquipSlotModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotModel.setStatus('current')
cucsPciEquipSlotRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotRevision.setStatus('current')
cucsPciEquipSlotSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotSerial.setStatus('current')
cucsPciEquipSlotSmbiosId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotSmbiosId.setStatus('current')
cucsPciEquipSlotVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 2, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciEquipSlotVendor.setStatus('current')
cucsPciUnitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1), )
if mibBuilder.loadTexts: cucsPciUnitTable.setStatus('current')
cucsPciUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-PCI-MIB", "cucsPciUnitInstanceId"))
if mibBuilder.loadTexts: cucsPciUnitEntry.setStatus('current')
cucsPciUnitInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsPciUnitInstanceId.setStatus('current')
cucsPciUnitDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitDn.setStatus('current')
cucsPciUnitRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitRn.setStatus('current')
cucsPciUnitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitId.setStatus('current')
cucsPciUnitModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitModel.setStatus('current')
cucsPciUnitOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 6), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitOperState.setStatus('current')
cucsPciUnitOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 7), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitOperability.setStatus('current')
cucsPciUnitPciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitPciAddr.setStatus('current')
cucsPciUnitPciSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitPciSlot.setStatus('current')
cucsPciUnitPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 10), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitPerf.setStatus('current')
cucsPciUnitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 11), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitPower.setStatus('current')
cucsPciUnitPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 12), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitPresence.setStatus('current')
cucsPciUnitRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitRevision.setStatus('current')
cucsPciUnitSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitSerial.setStatus('current')
cucsPciUnitThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 15), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitThermal.setStatus('current')
cucsPciUnitVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitVendor.setStatus('current')
cucsPciUnitVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 17), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitVoltage.setStatus('current')
cucsPciUnitOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitOperQualifierReason.setStatus('current')
cucsPciUnitLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 36, 1, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsPciUnitLocationDn.setStatus('current')
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-PCI-MIB", cucsPciUnitPresence=cucsPciUnitPresence, cucsPciUnitPerf=cucsPciUnitPerf, cucsPciEquipSlotControllerReported=cucsPciEquipSlotControllerReported, cucsPciUnitRn=cucsPciUnitRn, cucsPciUnitTable=cucsPciUnitTable, cucsPciUnitModel=cucsPciUnitModel, cucsPciUnitOperState=cucsPciUnitOperState, cucsPciEquipSlotMacLeft=cucsPciEquipSlotMacLeft, cucsPciUnitRevision=cucsPciUnitRevision, cucsPciUnitSerial=cucsPciUnitSerial, cucsPciUnitPower=cucsPciUnitPower, cucsPciUnitPciAddr=cucsPciUnitPciAddr, cucsPciUnitOperability=cucsPciUnitOperability, cucsPciObjects=cucsPciObjects, cucsPciEquipSlotEntry=cucsPciEquipSlotEntry, cucsPciEquipSlotFltAggr=cucsPciEquipSlotFltAggr, cucsPciEquipSlotSmbiosId=cucsPciEquipSlotSmbiosId, cucsPciUnitId=cucsPciUnitId, cucsPciUnitOperQualifierReason=cucsPciUnitOperQualifierReason, cucsPciUnitDn=cucsPciUnitDn, cucsPciEquipSlotModel=cucsPciEquipSlotModel, cucsPciEquipSlotSerial=cucsPciEquipSlotSerial, cucsPciUnitThermal=cucsPciUnitThermal, cucsPciEquipSlotTable=cucsPciEquipSlotTable, cucsPciUnitInstanceId=cucsPciUnitInstanceId, cucsPciUnitLocationDn=cucsPciUnitLocationDn, cucsPciEquipSlotDiscoveryState=cucsPciEquipSlotDiscoveryState, PYSNMP_MODULE_ID=cucsPciObjects, cucsPciEquipSlotRn=cucsPciEquipSlotRn, cucsPciUnitPciSlot=cucsPciUnitPciSlot, cucsPciEquipSlotRevision=cucsPciEquipSlotRevision, cucsPciUnitEntry=cucsPciUnitEntry, cucsPciUnitVendor=cucsPciUnitVendor, cucsPciEquipSlotInstanceId=cucsPciEquipSlotInstanceId, cucsPciEquipSlotDn=cucsPciEquipSlotDn, cucsPciEquipSlotHostReported=cucsPciEquipSlotHostReported, cucsPciEquipSlotId=cucsPciEquipSlotId, cucsPciEquipSlotVendor=cucsPciEquipSlotVendor, cucsPciEquipSlotMacRight=cucsPciEquipSlotMacRight, cucsPciUnitVoltage=cucsPciUnitVoltage)
