#
# PySNMP MIB module HPN-ICF-LswMix-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-LswMix-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:27:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
hpnicfLswSlotIndex, hpnicfLswFrameIndex = mibBuilder.importSymbols("HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswSlotIndex", "hpnicfLswFrameIndex")
hpnicflswCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicflswCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter64, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, Unsigned32, Bits, IpAddress, Counter32, iso, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "Unsigned32", "Bits", "IpAddress", "Counter32", "iso", "NotificationType", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hpnicfLswMix = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17))
hpnicfLswMix.setRevisions(('2001-06-29 00:00',))
if mibBuilder.loadTexts: hpnicfLswMix.setLastUpdated('200106290000Z')
if mibBuilder.loadTexts: hpnicfLswMix.setOrganization('')
hpnicfLswLastSwitchDate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLswLastSwitchDate.setStatus('current')
hpnicfLswLastSwitchTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLswLastSwitchTime.setStatus('current')
hpnicfLswMpuSwitchsNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLswMpuSwitchsNum.setStatus('current')
hpnicfLswMpuSwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("switch", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfLswMpuSwitch.setStatus('current')
hpnicfLswXSlotTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 5), )
if mibBuilder.loadTexts: hpnicfLswXSlotTable.setStatus('current')
hpnicfLswXSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 5, 1), ).setIndexNames((0, "HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswFrameIndex"), (0, "HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswSlotIndex"))
if mibBuilder.loadTexts: hpnicfLswXSlotEntry.setStatus('current')
hpnicfLswMainCardBoardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("standby", 2), ("process", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLswMainCardBoardStatus.setStatus('current')
hpnicfLswCrossBarStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("standby", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLswCrossBarStatus.setStatus('current')
hpnicfsMixTrapMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 10))
hpnicfSlaveSwitchOver = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 17, 10, 1))
if mibBuilder.loadTexts: hpnicfSlaveSwitchOver.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-LswMix-MIB", hpnicfLswXSlotEntry=hpnicfLswXSlotEntry, hpnicfSlaveSwitchOver=hpnicfSlaveSwitchOver, hpnicfsMixTrapMib=hpnicfsMixTrapMib, hpnicfLswLastSwitchTime=hpnicfLswLastSwitchTime, hpnicfLswMix=hpnicfLswMix, hpnicfLswCrossBarStatus=hpnicfLswCrossBarStatus, hpnicfLswMpuSwitchsNum=hpnicfLswMpuSwitchsNum, PYSNMP_MODULE_ID=hpnicfLswMix, hpnicfLswMainCardBoardStatus=hpnicfLswMainCardBoardStatus, hpnicfLswLastSwitchDate=hpnicfLswLastSwitchDate, hpnicfLswXSlotTable=hpnicfLswXSlotTable, hpnicfLswMpuSwitch=hpnicfLswMpuSwitch)
