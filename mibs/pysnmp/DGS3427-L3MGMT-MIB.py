#
# PySNMP MIB module DGS3427-L3MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DGS3427-L3MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:31:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Counter32, Integer32, ObjectIdentity, IpAddress, MibIdentifier, Gauge32, TimeTicks, ModuleIdentity, Unsigned32, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "Integer32", "ObjectIdentity", "IpAddress", "MibIdentifier", "Gauge32", "TimeTicks", "ModuleIdentity", "Unsigned32", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
RowStatus, MacAddress, TimeStamp, DisplayString, TruthValue, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "TimeStamp", "DisplayString", "TruthValue", "PhysAddress", "TextualConvention")
dgs3427, = mibBuilder.importSymbols("SW34XXPRIMGMT-MIB", "dgs3427")
swL3MgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3))
if mibBuilder.loadTexts: swL3MgmtMIB.setLastUpdated('201203020000Z')
if mibBuilder.loadTexts: swL3MgmtMIB.setOrganization(' ')
swL3DevMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 1))
swL3IpMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2))
swL3RelayMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3))
swL3IpCtrlMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1))
swL3IpFdbMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 2))
swL3RelayDnsMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2))
class Ipv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

swL3DevCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 1, 1))
swL3DevCtrlRIPState = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3DevCtrlRIPState.setStatus('current')
swL3IpCtrlAllIpIfState = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlAllIpIfState.setStatus('current')
swL3IpCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3), )
if mibBuilder.loadTexts: swL3IpCtrlTable.setStatus('current')
swL3IpCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3IpCtrlInterfaceName"))
if mibBuilder.loadTexts: swL3IpCtrlEntry.setStatus('current')
swL3IpCtrlInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpCtrlInterfaceName.setStatus('current')
swL3IpCtrlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpCtrlIfIndex.setStatus('current')
swL3IpCtrlIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlIpAddr.setStatus('current')
swL3IpCtrlIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlIpSubnetMask.setStatus('current')
swL3IpCtrlVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlVlanName.setStatus('current')
swL3IpCtrlProxyArp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlProxyArp.setStatus('current')
swL3IpCtrlSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlSecondary.setStatus('current')
swL3IpCtrlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("bootp", 3), ("dhcp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlMode.setStatus('current')
swL3IpCtrlAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlAdminState.setStatus('current')
swL3IpCtrlIpv6LinkLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 14), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpCtrlIpv6LinkLocalAddress.setStatus('current')
swL3IpCtrlIpv6LinkLocalPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpCtrlIpv6LinkLocalPrefixLen.setStatus('current')
swL3IpCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3IpCtrlState.setStatus('current')
swL3IpCtrlIpv6LinkLocalAutoState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlIpv6LinkLocalAutoState.setStatus('current')
swL3IpCtrlLocalProxyArp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3IpCtrlLocalProxyArp.setStatus('current')
swL3IpCtrlDhcpv6ClientState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlDhcpv6ClientState.setStatus('current')
swL3IpCtrlIpDirectedBroadcastState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlIpDirectedBroadcastState.setStatus('current')
swL3IpCtrlIpDhcpOption12State = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlIpDhcpOption12State.setStatus('current')
swL3IpCtrlIpDhcpOption12HostName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlIpDhcpOption12HostName.setStatus('current')
swL3IpCtrlDhcpv6ClientPDState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlDhcpv6ClientPDState.setStatus('current')
swL3IpCtrlDhcpv6ClientPDPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpCtrlDhcpv6ClientPDPrefixName.setStatus('current')
swL3IpCtrlDhcpv6ClientPDPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 26), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpCtrlDhcpv6ClientPDPrefix.setStatus('current')
swL3IpCtrlDhcpv6ClientPDPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 3, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpCtrlDhcpv6ClientPDPrefixLen.setStatus('current')
swL3Ipv6CtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4), )
if mibBuilder.loadTexts: swL3Ipv6CtrlTable.setStatus('current')
swL3Ipv6CtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3Ipv6CtrlInterfaceName"))
if mibBuilder.loadTexts: swL3Ipv6CtrlEntry.setStatus('current')
swL3Ipv6CtrlInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6CtrlInterfaceName.setStatus('current')
swL3Ipv6CtrlMaxReassmblySize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6CtrlMaxReassmblySize.setStatus('current')
swL3Ipv6CtrlNsRetransTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlNsRetransTimer.setStatus('current')
swL3Ipv6CtrlRaState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaState.setStatus('current')
swL3Ipv6CtrlRaMinRtrAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1350))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaMinRtrAdvInterval.setStatus('current')
swL3Ipv6CtrlRaMaxRtrAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1800)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaMaxRtrAdvInterval.setStatus('current')
swL3Ipv6CtrlRaLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaLifeTime.setStatus('current')
swL3Ipv6CtrlRaReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaReachableTime.setStatus('current')
swL3Ipv6CtrlRaRetransTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaRetransTime.setStatus('current')
swL3Ipv6CtrlRaHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaHopLimit.setStatus('current')
swL3Ipv6CtrlRaManagedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaManagedFlag.setStatus('current')
swL3Ipv6CtrlRaOtherConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6CtrlRaOtherConfigFlag.setStatus('current')
swL3Ipv6AddressCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5), )
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlTable.setStatus('current')
swL3Ipv6AddressCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3Ipv6AddressCtrlInterfaceName"), (0, "DGS3427-L3MGMT-MIB", "swL3Ipv6Address"), (0, "DGS3427-L3MGMT-MIB", "swL3Ipv6AddressCtrlPrefixLen"))
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlEntry.setStatus('current')
swL3Ipv6AddressCtrlInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlInterfaceName.setStatus('current')
swL3Ipv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6Address.setStatus('current')
swL3Ipv6AddressCtrlPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlPrefixLen.setStatus('current')
swL3Ipv6AddressCtrlPreferredLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlPreferredLifeTime.setStatus('current')
swL3Ipv6AddressCtrlValidLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlValidLifeTime.setStatus('current')
swL3Ipv6AddressCtrlOnLinkFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlOnLinkFlag.setStatus('current')
swL3Ipv6AddressCtrlAutonomousFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlAutonomousFlag.setStatus('current')
swL3Ipv6AddressCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlState.setStatus('current')
swL3Ipv6AddressCtrlAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("dhcpv6", 2), ("stateless", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6AddressCtrlAddressType.setStatus('current')
swL3Ipv6DHCPv6CPDAddrCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 6), )
if mibBuilder.loadTexts: swL3Ipv6DHCPv6CPDAddrCtrlTable.setStatus('current')
swL3Ipv6DHCPv6CPDAddrCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 6, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3Ipv6DHCPv6CPDAddrCtrlInterfaceName"), (0, "DGS3427-L3MGMT-MIB", "swL3Ipv6DHCPv6CPDAddrCtrlPrefixName"), (0, "DGS3427-L3MGMT-MIB", "swL3Ipv6DHCPv6CPDAddrCtrlIPv6addr"), (0, "DGS3427-L3MGMT-MIB", "swL3Ipv6DHCPv6CPDAddrCtrlPrefixLen"))
if mibBuilder.loadTexts: swL3Ipv6DHCPv6CPDAddrCtrlEntry.setStatus('current')
swL3Ipv6DHCPv6CPDAddrCtrlInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6DHCPv6CPDAddrCtrlInterfaceName.setStatus('current')
swL3Ipv6DHCPv6CPDAddrCtrlPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6DHCPv6CPDAddrCtrlPrefixName.setStatus('current')
swL3Ipv6DHCPv6CPDAddrCtrlIPv6addr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 6, 1, 3), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6DHCPv6CPDAddrCtrlIPv6addr.setStatus('current')
swL3Ipv6DHCPv6CPDAddrCtrlPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3Ipv6DHCPv6CPDAddrCtrlPrefixLen.setStatus('current')
swL3Ipv6DHCPv6CPDAddrCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3Ipv6DHCPv6CPDAddrCtrlState.setStatus('current')
swL3IpFdbInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 2, 1), )
if mibBuilder.loadTexts: swL3IpFdbInfoTable.setStatus('current')
swL3IpFdbInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 2, 1, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3IpFdbInfoIpAddr"))
if mibBuilder.loadTexts: swL3IpFdbInfoEntry.setStatus('current')
swL3IpFdbInfoIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpFdbInfoIpAddr.setStatus('current')
swL3IpFdbInfoIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpFdbInfoIpSubnetMask.setStatus('current')
swL3IpFdbInfoPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpFdbInfoPort.setStatus('current')
swL3IpFdbInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("static", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpFdbInfoType.setStatus('current')
swL3IpArpAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3IpArpAgingTime.setStatus('current')
swL3IpStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5), )
if mibBuilder.loadTexts: swL3IpStaticRouteTable.setStatus('current')
swL3IpStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3IpStaticRouteDest"), (0, "DGS3427-L3MGMT-MIB", "swL3IpStaticRouteMask"), (0, "DGS3427-L3MGMT-MIB", "swL3IpStaticRouteNextHop"))
if mibBuilder.loadTexts: swL3IpStaticRouteEntry.setStatus('current')
swL3IpStaticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpStaticRouteDest.setStatus('current')
swL3IpStaticRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpStaticRouteMask.setStatus('current')
swL3IpStaticRouteBkupState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("backup", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3IpStaticRouteBkupState.setStatus('current')
swL3IpStaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3IpStaticRouteNextHop.setStatus('current')
swL3IpStaticRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3IpStaticRouteMetric.setStatus('current')
swL3IpStaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("valid", 3), ("active", 4), ("inActive", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3IpStaticRouteStatus.setStatus('current')
swL3RelayDhcpMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1))
swL3RelayDhcpState = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDhcpState.setStatus('current')
swL3RelayDhcpHopCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDhcpHopCount.setStatus('current')
swL3RelayDhcpTimeThreshold = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDhcpTimeThreshold.setStatus('current')
swL3RelayDhcpCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 4), )
if mibBuilder.loadTexts: swL3RelayDhcpCtrlTable.setStatus('current')
swL3RelayDhcpCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 4, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3RelayDhcpCtrlInterfaceName"), (0, "DGS3427-L3MGMT-MIB", "swL3RelayDhcpCtrlServer"))
if mibBuilder.loadTexts: swL3RelayDhcpCtrlEntry.setStatus('current')
swL3RelayDhcpCtrlInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3RelayDhcpCtrlInterfaceName.setStatus('current')
swL3RelayDhcpCtrlServer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3RelayDhcpCtrlServer.setStatus('current')
swL3RelayDhcpCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("valid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDhcpCtrlState.setStatus('current')
swL3RelayDhcpOption82State = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDhcpOption82State.setStatus('current')
swL3RelayDhcpOption82CheckState = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDhcpOption82CheckState.setStatus('current')
swL3RelayDhcpOption82Policy = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("replace", 0), ("drop", 1), ("keep", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDhcpOption82Policy.setStatus('current')
swL3RelayDnsState = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDnsState.setStatus('current')
swL3RelayDnsPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDnsPrimaryServer.setStatus('current')
swL3RelayDnsSecondaryServer = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDnsSecondaryServer.setStatus('current')
swL3RelayDnsCacheState = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDnsCacheState.setStatus('current')
swL3RelayDnsStaticTableState = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDnsStaticTableState.setStatus('current')
swL3RelayDnsCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 6), )
if mibBuilder.loadTexts: swL3RelayDnsCtrlTable.setStatus('current')
swL3RelayDnsCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 6, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3RelayDnsCtrlDomainName"), (0, "DGS3427-L3MGMT-MIB", "swL3RelayDnsCtrlIpAddr"))
if mibBuilder.loadTexts: swL3RelayDnsCtrlEntry.setStatus('current')
swL3RelayDnsCtrlDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3RelayDnsCtrlDomainName.setStatus('current')
swL3RelayDnsCtrlIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3RelayDnsCtrlIpAddr.setStatus('current')
swL3RelayDnsCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("valid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RelayDnsCtrlState.setStatus('current')
swL3DHCPRelayOption60 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8))
swL3DHCPRelayOption60State = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3DHCPRelayOption60State.setStatus('current')
swL3DHCPRelayOption60DefMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("relay", 1), ("drop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3DHCPRelayOption60DefMode.setStatus('current')
swL3DHCPRelayOption60DefTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 3), )
if mibBuilder.loadTexts: swL3DHCPRelayOption60DefTable.setStatus('current')
swL3DHCPRelayOption60DefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 3, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3DHCPRelayOption60DefRelayIp"))
if mibBuilder.loadTexts: swL3DHCPRelayOption60DefEntry.setStatus('current')
swL3DHCPRelayOption60DefRelayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3DHCPRelayOption60DefRelayIp.setStatus('current')
swL3DHCPRelayOption60DefRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3DHCPRelayOption60DefRowStatus.setStatus('current')
swL3DHCPRelayOption60Table = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 4), )
if mibBuilder.loadTexts: swL3DHCPRelayOption60Table.setStatus('current')
swL3DHCPRelayOption60Entry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 4, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3DHCPRelayOption60String"), (0, "DGS3427-L3MGMT-MIB", "swL3DHCPRelayOption60RelayIp"))
if mibBuilder.loadTexts: swL3DHCPRelayOption60Entry.setStatus('current')
swL3DHCPRelayOption60String = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3DHCPRelayOption60String.setStatus('current')
swL3DHCPRelayOption60RelayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3DHCPRelayOption60RelayIp.setStatus('current')
swL3DHCPRelayOption60MatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exact", 1), ("partial", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3DHCPRelayOption60MatchType.setStatus('current')
swL3DHCPRelayOption60RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 8, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3DHCPRelayOption60RowStatus.setStatus('current')
swL3DHCPRelayOption61 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9))
swL3DHCPRelayOption61State = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3DHCPRelayOption61State.setStatus('current')
swL3DHCPRelayOption61DefMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("relay", 1), ("drop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3DHCPRelayOption61DefMode.setStatus('current')
swL3DHCPRelayOption61DefRelayIp = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3DHCPRelayOption61DefRelayIp.setStatus('current')
swL3DHCPRelayOption61Table = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 4), )
if mibBuilder.loadTexts: swL3DHCPRelayOption61Table.setStatus('current')
swL3DHCPRelayOption61Entry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 4, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3DHCPRelayOption61ClientType"), (0, "DGS3427-L3MGMT-MIB", "swL3DHCPRelayOption61ClientID"))
if mibBuilder.loadTexts: swL3DHCPRelayOption61Entry.setStatus('current')
swL3DHCPRelayOption61ClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("string", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3DHCPRelayOption61ClientType.setStatus('current')
swL3DHCPRelayOption61ClientID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3DHCPRelayOption61ClientID.setStatus('current')
swL3DHCPRelayOption61Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("relay", 1), ("drop", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3DHCPRelayOption61Mode.setStatus('current')
swL3DHCPRelayOption61RelayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 4, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3DHCPRelayOption61RelayIp.setStatus('current')
swL3DHCPRelayOption61RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 3, 1, 9, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3DHCPRelayOption61RowStatus.setStatus('current')
swL3RouteRedistriTable = MibTable((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 5), )
if mibBuilder.loadTexts: swL3RouteRedistriTable.setStatus('current')
swL3RouteRedistriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 5, 1), ).setIndexNames((0, "DGS3427-L3MGMT-MIB", "swL3RouteRedistriSrcProtocol"), (0, "DGS3427-L3MGMT-MIB", "swL3RouteRedistriDstProtocol"))
if mibBuilder.loadTexts: swL3RouteRedistriEntry.setStatus('current')
swL3RouteRedistriSrcProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("static", 4), ("local", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3RouteRedistriSrcProtocol.setStatus('current')
swL3RouteRedistriDstProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("rip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3RouteRedistriDstProtocol.setStatus('current')
swL3RouteRedistriMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3RouteRedistriMetric.setStatus('current')
swL3RouteRedistriRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swL3RouteRedistriRowStatus.setStatus('current')
swL3RoutePreference = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 9))
swL3RoutePreferenceRIP = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RoutePreferenceRIP.setStatus('current')
swL3RoutePreferenceStatic = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RoutePreferenceStatic.setStatus('current')
swL3RoutePreferenceLocal = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 9, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swL3RoutePreferenceLocal.setStatus('current')
swL3RoutePreferenceDefault = MibScalar((1, 3, 6, 1, 4, 1, 171, 11, 70, 2, 3, 9, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swL3RoutePreferenceDefault.setStatus('current')
mibBuilder.exportSymbols("DGS3427-L3MGMT-MIB", swL3DHCPRelayOption61RowStatus=swL3DHCPRelayOption61RowStatus, swL3DHCPRelayOption60=swL3DHCPRelayOption60, swL3IpCtrlIpAddr=swL3IpCtrlIpAddr, swL3IpStaticRouteEntry=swL3IpStaticRouteEntry, swL3RelayDnsCtrlTable=swL3RelayDnsCtrlTable, swL3RouteRedistriEntry=swL3RouteRedistriEntry, swL3Ipv6DHCPv6CPDAddrCtrlState=swL3Ipv6DHCPv6CPDAddrCtrlState, swL3RelayDhcpHopCount=swL3RelayDhcpHopCount, swL3IpCtrlInterfaceName=swL3IpCtrlInterfaceName, swL3IpCtrlAdminState=swL3IpCtrlAdminState, swL3Ipv6CtrlRaHopLimit=swL3Ipv6CtrlRaHopLimit, swL3Ipv6CtrlRaOtherConfigFlag=swL3Ipv6CtrlRaOtherConfigFlag, swL3RouteRedistriMetric=swL3RouteRedistriMetric, swL3DHCPRelayOption60DefEntry=swL3DHCPRelayOption60DefEntry, swL3RelayDnsCtrlDomainName=swL3RelayDnsCtrlDomainName, swL3IpStaticRouteMetric=swL3IpStaticRouteMetric, swL3RouteRedistriRowStatus=swL3RouteRedistriRowStatus, swL3IpCtrlDhcpv6ClientPDState=swL3IpCtrlDhcpv6ClientPDState, swL3IpArpAgingTime=swL3IpArpAgingTime, swL3IpCtrlIpDirectedBroadcastState=swL3IpCtrlIpDirectedBroadcastState, swL3DHCPRelayOption61State=swL3DHCPRelayOption61State, swL3IpCtrlDhcpv6ClientState=swL3IpCtrlDhcpv6ClientState, swL3RelayDnsPrimaryServer=swL3RelayDnsPrimaryServer, swL3RoutePreference=swL3RoutePreference, swL3IpStaticRouteStatus=swL3IpStaticRouteStatus, swL3DevCtrlRIPState=swL3DevCtrlRIPState, swL3DHCPRelayOption60String=swL3DHCPRelayOption60String, swL3Ipv6CtrlRaReachableTime=swL3Ipv6CtrlRaReachableTime, swL3RelayDhcpCtrlState=swL3RelayDhcpCtrlState, swL3RelayMgmt=swL3RelayMgmt, swL3DHCPRelayOption61DefMode=swL3DHCPRelayOption61DefMode, swL3MgmtMIB=swL3MgmtMIB, swL3Ipv6CtrlRaManagedFlag=swL3Ipv6CtrlRaManagedFlag, swL3DHCPRelayOption60State=swL3DHCPRelayOption60State, swL3Ipv6AddressCtrlEntry=swL3Ipv6AddressCtrlEntry, swL3DHCPRelayOption60MatchType=swL3DHCPRelayOption60MatchType, swL3IpFdbInfoIpSubnetMask=swL3IpFdbInfoIpSubnetMask, swL3Ipv6DHCPv6CPDAddrCtrlEntry=swL3Ipv6DHCPv6CPDAddrCtrlEntry, swL3IpFdbInfoIpAddr=swL3IpFdbInfoIpAddr, swL3DHCPRelayOption61Table=swL3DHCPRelayOption61Table, swL3Ipv6AddressCtrlValidLifeTime=swL3Ipv6AddressCtrlValidLifeTime, swL3IpStaticRouteBkupState=swL3IpStaticRouteBkupState, swL3IpCtrlMode=swL3IpCtrlMode, swL3DHCPRelayOption60DefTable=swL3DHCPRelayOption60DefTable, swL3IpCtrlMgmt=swL3IpCtrlMgmt, swL3Ipv6CtrlEntry=swL3Ipv6CtrlEntry, swL3Ipv6DHCPv6CPDAddrCtrlPrefixName=swL3Ipv6DHCPv6CPDAddrCtrlPrefixName, swL3DHCPRelayOption60Table=swL3DHCPRelayOption60Table, swL3IpFdbMgmt=swL3IpFdbMgmt, swL3Ipv6CtrlInterfaceName=swL3Ipv6CtrlInterfaceName, swL3RelayDhcpOption82CheckState=swL3RelayDhcpOption82CheckState, swL3IpCtrlTable=swL3IpCtrlTable, swL3Ipv6DHCPv6CPDAddrCtrlTable=swL3Ipv6DHCPv6CPDAddrCtrlTable, swL3DHCPRelayOption60Entry=swL3DHCPRelayOption60Entry, swL3IpCtrlIpv6LinkLocalPrefixLen=swL3IpCtrlIpv6LinkLocalPrefixLen, swL3Ipv6DHCPv6CPDAddrCtrlPrefixLen=swL3Ipv6DHCPv6CPDAddrCtrlPrefixLen, swL3Ipv6AddressCtrlTable=swL3Ipv6AddressCtrlTable, swL3IpCtrlIpDhcpOption12HostName=swL3IpCtrlIpDhcpOption12HostName, swL3IpStaticRouteTable=swL3IpStaticRouteTable, swL3RelayDnsCtrlEntry=swL3RelayDnsCtrlEntry, swL3DHCPRelayOption60DefMode=swL3DHCPRelayOption60DefMode, swL3Ipv6CtrlNsRetransTimer=swL3Ipv6CtrlNsRetransTimer, swL3IpCtrlIfIndex=swL3IpCtrlIfIndex, swL3DHCPRelayOption60RowStatus=swL3DHCPRelayOption60RowStatus, swL3RelayDhcpCtrlServer=swL3RelayDhcpCtrlServer, PYSNMP_MODULE_ID=swL3MgmtMIB, swL3DevCtrl=swL3DevCtrl, swL3DHCPRelayOption61DefRelayIp=swL3DHCPRelayOption61DefRelayIp, swL3IpCtrlIpSubnetMask=swL3IpCtrlIpSubnetMask, Ipv6Address=Ipv6Address, swL3RouteRedistriTable=swL3RouteRedistriTable, swL3IpCtrlDhcpv6ClientPDPrefixName=swL3IpCtrlDhcpv6ClientPDPrefixName, swL3Ipv6AddressCtrlPrefixLen=swL3Ipv6AddressCtrlPrefixLen, swL3RelayDhcpMgmt=swL3RelayDhcpMgmt, swL3DHCPRelayOption61RelayIp=swL3DHCPRelayOption61RelayIp, swL3Ipv6CtrlRaRetransTime=swL3Ipv6CtrlRaRetransTime, swL3RelayDhcpCtrlTable=swL3RelayDhcpCtrlTable, swL3RelayDhcpOption82State=swL3RelayDhcpOption82State, swL3IpCtrlSecondary=swL3IpCtrlSecondary, swL3Ipv6AddressCtrlInterfaceName=swL3Ipv6AddressCtrlInterfaceName, swL3DHCPRelayOption61Mode=swL3DHCPRelayOption61Mode, swL3IpCtrlIpv6LinkLocalAddress=swL3IpCtrlIpv6LinkLocalAddress, swL3IpFdbInfoPort=swL3IpFdbInfoPort, swL3RelayDnsCtrlIpAddr=swL3RelayDnsCtrlIpAddr, swL3IpStaticRouteDest=swL3IpStaticRouteDest, swL3IpCtrlIpv6LinkLocalAutoState=swL3IpCtrlIpv6LinkLocalAutoState, swL3RoutePreferenceLocal=swL3RoutePreferenceLocal, swL3DHCPRelayOption60DefRelayIp=swL3DHCPRelayOption60DefRelayIp, swL3Ipv6CtrlTable=swL3Ipv6CtrlTable, swL3RouteRedistriDstProtocol=swL3RouteRedistriDstProtocol, swL3Ipv6CtrlMaxReassmblySize=swL3Ipv6CtrlMaxReassmblySize, swL3Ipv6CtrlRaState=swL3Ipv6CtrlRaState, swL3RelayDhcpOption82Policy=swL3RelayDhcpOption82Policy, swL3IpStaticRouteNextHop=swL3IpStaticRouteNextHop, swL3DHCPRelayOption60DefRowStatus=swL3DHCPRelayOption60DefRowStatus, swL3DHCPRelayOption61ClientType=swL3DHCPRelayOption61ClientType, swL3IpCtrlAllIpIfState=swL3IpCtrlAllIpIfState, swL3RelayDnsState=swL3RelayDnsState, swL3RelayDnsStaticTableState=swL3RelayDnsStaticTableState, swL3IpCtrlIpDhcpOption12State=swL3IpCtrlIpDhcpOption12State, swL3IpCtrlEntry=swL3IpCtrlEntry, swL3IpCtrlDhcpv6ClientPDPrefixLen=swL3IpCtrlDhcpv6ClientPDPrefixLen, swL3RelayDnsCacheState=swL3RelayDnsCacheState, swL3RelayDhcpTimeThreshold=swL3RelayDhcpTimeThreshold, swL3Ipv6AddressCtrlAutonomousFlag=swL3Ipv6AddressCtrlAutonomousFlag, swL3Ipv6DHCPv6CPDAddrCtrlIPv6addr=swL3Ipv6DHCPv6CPDAddrCtrlIPv6addr, swL3Ipv6DHCPv6CPDAddrCtrlInterfaceName=swL3Ipv6DHCPv6CPDAddrCtrlInterfaceName, swL3Ipv6Address=swL3Ipv6Address, swL3RelayDnsCtrlState=swL3RelayDnsCtrlState, swL3RelayDnsMgmt=swL3RelayDnsMgmt, swL3IpMgmt=swL3IpMgmt, swL3IpCtrlVlanName=swL3IpCtrlVlanName, swL3DHCPRelayOption61ClientID=swL3DHCPRelayOption61ClientID, swL3RelayDhcpCtrlEntry=swL3RelayDhcpCtrlEntry, swL3DevMgmt=swL3DevMgmt, swL3DHCPRelayOption60RelayIp=swL3DHCPRelayOption60RelayIp, swL3RoutePreferenceRIP=swL3RoutePreferenceRIP, swL3Ipv6CtrlRaMinRtrAdvInterval=swL3Ipv6CtrlRaMinRtrAdvInterval, swL3IpCtrlState=swL3IpCtrlState, swL3RelayDhcpState=swL3RelayDhcpState, swL3DHCPRelayOption61Entry=swL3DHCPRelayOption61Entry, swL3Ipv6AddressCtrlPreferredLifeTime=swL3Ipv6AddressCtrlPreferredLifeTime, swL3IpStaticRouteMask=swL3IpStaticRouteMask, swL3RelayDhcpCtrlInterfaceName=swL3RelayDhcpCtrlInterfaceName, swL3IpCtrlLocalProxyArp=swL3IpCtrlLocalProxyArp, swL3IpFdbInfoEntry=swL3IpFdbInfoEntry, swL3DHCPRelayOption61=swL3DHCPRelayOption61, swL3RouteRedistriSrcProtocol=swL3RouteRedistriSrcProtocol, swL3Ipv6CtrlRaMaxRtrAdvInterval=swL3Ipv6CtrlRaMaxRtrAdvInterval, swL3Ipv6AddressCtrlAddressType=swL3Ipv6AddressCtrlAddressType, swL3Ipv6CtrlRaLifeTime=swL3Ipv6CtrlRaLifeTime, swL3Ipv6AddressCtrlState=swL3Ipv6AddressCtrlState, swL3RoutePreferenceDefault=swL3RoutePreferenceDefault, swL3IpFdbInfoType=swL3IpFdbInfoType, swL3IpCtrlDhcpv6ClientPDPrefix=swL3IpCtrlDhcpv6ClientPDPrefix, swL3IpCtrlProxyArp=swL3IpCtrlProxyArp, swL3Ipv6AddressCtrlOnLinkFlag=swL3Ipv6AddressCtrlOnLinkFlag, swL3RoutePreferenceStatic=swL3RoutePreferenceStatic, swL3RelayDnsSecondaryServer=swL3RelayDnsSecondaryServer, swL3IpFdbInfoTable=swL3IpFdbInfoTable)
