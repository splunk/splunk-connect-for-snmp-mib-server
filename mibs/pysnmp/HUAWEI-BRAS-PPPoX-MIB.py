#
# PySNMP MIB module HUAWEI-BRAS-PPPoX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-PPPoX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:31:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter64, Bits, Gauge32, MibIdentifier, NotificationType, ModuleIdentity, TimeTicks, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "Bits", "Gauge32", "MibIdentifier", "NotificationType", "ModuleIdentity", "TimeTicks", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "iso")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hwBRASPPPoX = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2))
if mibBuilder.loadTexts: hwBRASPPPoX.setLastUpdated('200403031508Z')
if mibBuilder.loadTexts: hwBRASPPPoX.setOrganization('Huawei Technologies Co., Ltd. ')
hwPPPoXMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1))
hwPppConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1), )
if mibBuilder.loadTexts: hwPppConfigTable.setStatus('current')
hwPppConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-PPPoX-MIB", "hwVtIndex"))
if mibBuilder.loadTexts: hwPppConfigEntry.setStatus('current')
hwVtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVtIndex.setStatus('current')
hwPppAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pap", 0), ("chap", 1), ("auto", 2), ("mschapv1", 3), ("mschapv2", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthMode.setStatus('current')
hwPppNegTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppNegTimeout.setStatus('current')
hwPppKeepInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(20)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppKeepInterval.setStatus('current')
hwPppKeepRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppKeepRetransmit.setStatus('current')
hwPppCHAPUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppCHAPUserName.setStatus('current')
hwPppCHAPUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppCHAPUserPassword.setStatus('current')
hwPppPAPUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppPAPUserName.setStatus('current')
hwPppPAPUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppPAPUserPassword.setStatus('current')
hwPppServiceName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName1.setStatus('current')
hwPppServiceName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName2.setStatus('current')
hwPppServiceName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName3.setStatus('current')
hwPppServiceName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName4.setStatus('current')
hwPppServiceName5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName5.setStatus('current')
hwPppServiceName6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName6.setStatus('current')
hwPppServiceName7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName7.setStatus('current')
hwPppServiceName8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceName8.setStatus('current')
hwPppServiceNameType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exactMatch", 1), ("normalMatch", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppServiceNameType.setStatus('current')
hwPppAcName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAcName.setStatus('current')
hwPppVTBindTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2), )
if mibBuilder.loadTexts: hwPppVTBindTable.setStatus('current')
hwPppVTBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-PPPoX-MIB", "hwPppVTBindIfIndex"))
if mibBuilder.loadTexts: hwPppVTBindEntry.setStatus('current')
hwPppVTBindIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPppVTBindIfIndex.setStatus('current')
hwVtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1023), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVtNumber.setStatus('current')
hwPppConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2))
hwPppCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 1))
hwPppCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 1, 1)).setObjects(("HUAWEI-BRAS-PPPoX-MIB", "hwPppConfigGroup"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppVTBindGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppCompliance = hwPppCompliance.setStatus('current')
hwPppGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 2))
hwPppConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 2, 1)).setObjects(("HUAWEI-BRAS-PPPoX-MIB", "hwVtIndex"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppAuthMode"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppNegTimeout"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppKeepInterval"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppKeepRetransmit"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppCHAPUserName"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppCHAPUserPassword"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppPAPUserName"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppPAPUserPassword"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName1"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName2"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName3"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName4"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName5"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName6"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName7"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceName8"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppServiceNameType"), ("HUAWEI-BRAS-PPPoX-MIB", "hwPppAcName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppConfigGroup = hwPppConfigGroup.setStatus('current')
hwPppVTBindGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 2, 2, 2, 2)).setObjects(("HUAWEI-BRAS-PPPoX-MIB", "hwPppVTBindIfIndex"), ("HUAWEI-BRAS-PPPoX-MIB", "hwVtNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppVTBindGroup = hwPppVTBindGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-BRAS-PPPoX-MIB", hwPppKeepRetransmit=hwPppKeepRetransmit, hwPppServiceName4=hwPppServiceName4, hwPppConformance=hwPppConformance, hwPppConfigGroup=hwPppConfigGroup, hwPppKeepInterval=hwPppKeepInterval, hwPppAcName=hwPppAcName, hwPppPAPUserName=hwPppPAPUserName, hwVtNumber=hwVtNumber, hwPppConfigEntry=hwPppConfigEntry, hwPppVTBindIfIndex=hwPppVTBindIfIndex, hwPppCHAPUserPassword=hwPppCHAPUserPassword, hwPppServiceName5=hwPppServiceName5, hwPppNegTimeout=hwPppNegTimeout, hwPppServiceNameType=hwPppServiceNameType, PYSNMP_MODULE_ID=hwBRASPPPoX, hwPppServiceName3=hwPppServiceName3, hwPppPAPUserPassword=hwPppPAPUserPassword, hwVtIndex=hwVtIndex, hwPppServiceName8=hwPppServiceName8, hwPPPoXMibObjects=hwPPPoXMibObjects, hwPppServiceName6=hwPppServiceName6, hwPppServiceName1=hwPppServiceName1, hwPppCHAPUserName=hwPppCHAPUserName, hwPppServiceName7=hwPppServiceName7, hwPppVTBindEntry=hwPppVTBindEntry, hwPppVTBindTable=hwPppVTBindTable, hwPppConfigTable=hwPppConfigTable, hwPppCompliance=hwPppCompliance, hwPppVTBindGroup=hwPppVTBindGroup, hwPppGroups=hwPppGroups, hwBRASPPPoX=hwBRASPPPoX, hwPppCompliances=hwPppCompliances, hwPppAuthMode=hwPppAuthMode, hwPppServiceName2=hwPppServiceName2)
