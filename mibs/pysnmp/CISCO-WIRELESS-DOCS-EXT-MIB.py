#
# PySNMP MIB module CISCO-WIRELESS-DOCS-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WIRELESS-DOCS-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:05:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
cwdIfHeSuStatusIndex, cwdIfHeSuStatusIpAddress, cwdIfQosProfileEntry, cwdIfHeSuStatusEntry, cwdIfHeSuStatusDownChanIfIndex, cwdIfQosProfIndex, cwdIfHeMacEntry, cwdIfHeSuStatusServiceId, cwdIfHeSuStatusMacAddress, cwdIfHeSuStatusUpChanIfIndex, cwdIfHeServiceEntry = mibBuilder.importSymbols("CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfHeSuStatusIndex", "cwdIfHeSuStatusIpAddress", "cwdIfQosProfileEntry", "cwdIfHeSuStatusEntry", "cwdIfHeSuStatusDownChanIfIndex", "cwdIfQosProfIndex", "cwdIfHeMacEntry", "cwdIfHeSuStatusServiceId", "cwdIfHeSuStatusMacAddress", "cwdIfHeSuStatusUpChanIfIndex", "cwdIfHeServiceEntry")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Bits, Gauge32, ModuleIdentity, Counter32, NotificationType, Integer32, ObjectIdentity, Counter64, TimeTicks, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Bits", "Gauge32", "ModuleIdentity", "Counter32", "NotificationType", "Integer32", "ObjectIdentity", "Counter64", "TimeTicks", "iso", "MibIdentifier")
TimeStamp, TextualConvention, TimeInterval, RowStatus, TruthValue, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "TimeInterval", "RowStatus", "TruthValue", "MacAddress", "DisplayString")
ciscoWirelessDocsExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 169))
ciscoWirelessDocsExtMIB.setRevisions(('2000-07-17 10:03',))
if mibBuilder.loadTexts: ciscoWirelessDocsExtMIB.setLastUpdated('200007171003Z')
if mibBuilder.loadTexts: ciscoWirelessDocsExtMIB.setOrganization('Cisco Systems, Inc.')
ciscoWirelessDocsExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 1))
cwdxQosCtrlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1))
cwdxQosQueueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2))
cwdxHeSuCpeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3))
cwdxQosProfileExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4))
cwdxQosCtrlUpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 1), )
if mibBuilder.loadTexts: cwdxQosCtrlUpTable.setStatus('current')
cwdxQosCtrlUpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwdxQosCtrlUpEntry.setStatus('current')
cwdxQosCtrlUpAdmissionCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxQosCtrlUpAdmissionCtrl.setStatus('current')
cwdxQosCtrlUpMaxRsvdBWPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxQosCtrlUpMaxRsvdBWPercent.setStatus('current')
cwdxQosCtrlUpAdmissionRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxQosCtrlUpAdmissionRejects.setStatus('current')
cwdxQosCtrlUpReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 102400000))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxQosCtrlUpReservedBW.setStatus('current')
cwdxQosCtrlUpMaxVirtualBW = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 102400000))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxQosCtrlUpMaxVirtualBW.setStatus('current')
cwdxQosIfRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 2), )
if mibBuilder.loadTexts: cwdxQosIfRateLimitTable.setStatus('current')
cwdxQosIfRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwdxQosIfRateLimitEntry.setStatus('current')
cwdxQosIfRateLimitAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noRateLimit", 1), ("oneSecBurst", 2), ("carLike", 3), ("wgtExPacketDiscard", 4), ("shaping", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxQosIfRateLimitAlgo.setStatus('current')
cwdxQosIfRateLimitExpWgt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxQosIfRateLimitExpWgt.setStatus('current')
cwdxQosIfRateLimitShpMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("na", 1), ("msec128", 2), ("msec256", 3), ("msec512", 4), ("msec1024", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxQosIfRateLimitShpMaxDelay.setStatus('current')
cwdxQosIfRateLimitShpGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("na", 1), ("msec1", 2), ("msec2", 3), ("msec4", 4), ("msec8", 5), ("msec16", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxQosIfRateLimitShpGranularity.setStatus('current')
cwdxHeServiceExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 3), )
if mibBuilder.loadTexts: cwdxHeServiceExtTable.setStatus('current')
cwdxHeServiceExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 3, 1), )
cwdIfHeServiceEntry.registerAugmentions(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeServiceExtEntry"))
cwdxHeServiceExtEntry.setIndexNames(*cwdIfHeServiceEntry.getIndexNames())
if mibBuilder.loadTexts: cwdxHeServiceExtEntry.setStatus('current')
cwdxIfHeServiceOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeServiceOutOctets.setStatus('current')
cwdxIfHeServiceOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeServiceOutPackets.setStatus('current')
cwdxQosMaxUpBWExcessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxQosMaxUpBWExcessRequests.setStatus('current')
cwdxQosMaxDownBWExcessPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxQosMaxDownBWExcessPackets.setStatus('current')
cwdxBWQueueTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1), )
if mibBuilder.loadTexts: cwdxBWQueueTable.setStatus('current')
cwdxBWQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxBWQueueNameCode"))
if mibBuilder.loadTexts: cwdxBWQueueEntry.setStatus('current')
cwdxBWQueueNameCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cirQ", 1), ("tbeQ", 2))))
if mibBuilder.loadTexts: cwdxBWQueueNameCode.setStatus('current')
cwdxBWQueueOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxBWQueueOrder.setStatus('current')
cwdxBWQueueNumServedBeforeYield = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxBWQueueNumServedBeforeYield.setStatus('current')
cwdxBWQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("fifo", 3), ("priority", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxBWQueueType.setStatus('current')
cwdxBWQueueMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxBWQueueMaxDepth.setStatus('current')
cwdxBWQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxBWQueueDepth.setStatus('current')
cwdxBWQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxBWQueueDiscards.setStatus('current')
cwdxCpeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 1), )
if mibBuilder.loadTexts: cwdxCpeTable.setStatus('current')
cwdxCpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxCpeStatusIndex"), (0, "CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxCpeMacAddress"))
if mibBuilder.loadTexts: cwdxCpeEntry.setStatus('current')
cwdxCpeStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cwdxCpeStatusIndex.setStatus('current')
cwdxCpeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: cwdxCpeMacAddress.setStatus('current')
cwdxCpeIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxCpeIpAddress.setStatus('current')
cwdxCpeAccessGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxCpeAccessGroup.setStatus('current')
cwdxSuMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 2), )
if mibBuilder.loadTexts: cwdxSuMappingTable.setStatus('current')
cwdxSuMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxSuMappingMacAddress"))
if mibBuilder.loadTexts: cwdxSuMappingEntry.setStatus('current')
cwdxSuMappingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: cwdxSuMappingMacAddress.setStatus('current')
cwdxSuMappingStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxSuMappingStatusIndex.setStatus('current')
cwdxHeSuStatusExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3), )
if mibBuilder.loadTexts: cwdxHeSuStatusExtTable.setStatus('current')
cwdxHeSuStatusExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1), )
cwdIfHeSuStatusEntry.registerAugmentions(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuStatusExtEntry"))
cwdxHeSuStatusExtEntry.setIndexNames(*cwdIfHeSuStatusEntry.getIndexNames())
if mibBuilder.loadTexts: cwdxHeSuStatusExtEntry.setStatus('current')
cwdxHeSuStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("offline", 1), ("others", 2), ("initRangingRcvd", 3), ("initDhcpReqRcvd", 4), ("onlineNetAccessDisabled", 5), ("onlineKekAssigned", 6), ("onlineTekAssigned", 7), ("rejectBadMic", 8), ("rejectBadCos", 9), ("kekRejected", 10), ("tekRejected", 11), ("online", 12), ("initTftpPacketRcvd", 13), ("initTodRequestRcvd", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxHeSuStatusValue.setStatus('current')
cwdxIfHeSuStatusOnlineTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusOnlineTimes.setStatus('current')
cwdxIfHeSuStatusPercentOnline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusPercentOnline.setStatus('current')
cwdxIfHeSuStatusMinOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 4), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusMinOnlineTime.setStatus('current')
cwdxIfHeSuStatusAvgOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusAvgOnlineTime.setStatus('current')
cwdxIfHeSuStatusMaxOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusMaxOnlineTime.setStatus('current')
cwdxIfHeSuStatusMinOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 7), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusMinOfflineTime.setStatus('current')
cwdxIfHeSuStatusAvgOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 8), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusAvgOfflineTime.setStatus('current')
cwdxIfHeSuStatusMaxOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 9), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusMaxOfflineTime.setStatus('current')
cwdxIfHeSuStatusDynSidCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxIfHeSuStatusDynSidCount.setStatus('current')
cwdxHeMacExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 4), )
if mibBuilder.loadTexts: cwdxHeMacExtTable.setStatus('current')
cwdxHeMacExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 4, 1), )
cwdIfHeMacEntry.registerAugmentions(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeMacExtEntry"))
cwdxHeMacExtEntry.setIndexNames(*cwdIfHeMacEntry.getIndexNames())
if mibBuilder.loadTexts: cwdxHeMacExtEntry.setStatus('current')
cwdxHeSuOnOffTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 4, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxHeSuOnOffTrapEnable.setStatus('current')
cwdxHeSuOnOffTrapInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxHeSuOnOffTrapInterval.setStatus('current')
cwdxHeSuDefaultMaxCpes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxHeSuDefaultMaxCpes.setStatus('current')
cwdxHeTotalSusRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxHeTotalSusRegistered.setStatus('current')
cwdxHeTotalSusOffline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxHeTotalSusOffline.setStatus('current')
cwdxHeSuChOverTimeExpiration = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxHeSuChOverTimeExpiration.setStatus('current')
cwdxHeSuChOverTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6), )
if mibBuilder.loadTexts: cwdxHeSuChOverTable.setStatus('current')
cwdxHeSuChOverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1), ).setIndexNames((0, "CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverSerialNumber"))
if mibBuilder.loadTexts: cwdxHeSuChOverEntry.setStatus('current')
cwdxHeSuChOverSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cwdxHeSuChOverSerialNumber.setStatus('current')
cwdxHeSuChOverMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxHeSuChOverMacAddress.setStatus('current')
cwdxHeSuChOverDownFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxHeSuChOverDownFrequency.setStatus('current')
cwdxHeSuChOverUpChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxHeSuChOverUpChannelId.setStatus('current')
cwdxHeSuChOverTrapOnCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxHeSuChOverTrapOnCompletion.setStatus('current')
cwdxHeSuChOverOpInitiatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxHeSuChOverOpInitiatedTime.setStatus('current')
cwdxHeSuChOverState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("messageSent", 1), ("commandNotActive", 2), ("noOpNeeded", 3), ("suNotFound", 4), ("waitToSendMessage", 5), ("timeOut", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwdxHeSuChOverState.setStatus('current')
cwdxHeSuChOverRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 6, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxHeSuChOverRowStatus.setStatus('current')
cwdxHeSuTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 7), )
if mibBuilder.loadTexts: cwdxHeSuTable.setStatus('current')
cwdxHeSuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 7, 1), ).setIndexNames((0, "CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfHeSuStatusIndex"))
if mibBuilder.loadTexts: cwdxHeSuEntry.setStatus('current')
cwdxHeSuMaxCpeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxHeSuMaxCpeNumber.setStatus('current')
cwdxQosProfileExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 1), )
if mibBuilder.loadTexts: cwdxQosProfileExtTable.setStatus('current')
cwdxQosProfileExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 1, 1), )
cwdIfQosProfileEntry.registerAugmentions(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosProfileExtEntry"))
cwdxQosProfileExtEntry.setIndexNames(*cwdIfQosProfileEntry.getIndexNames())
if mibBuilder.loadTexts: cwdxQosProfileExtEntry.setStatus('current')
cwdxQosProfGrantInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxQosProfGrantInterval.setStatus('current')
cwdxQosProfGrantSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(229)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxQosProfGrantSize.setStatus('current')
cwdxQosProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxQosProfName.setStatus('current')
cwdxQosProfTosOverwriteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxQosProfTosOverwriteMask.setStatus('current')
cwdxQosProfTosOverwriteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwdxQosProfTosOverwriteValue.setStatus('current')
cwdxQosIpTosRatelimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 2), )
if mibBuilder.loadTexts: cwdxQosIpTosRatelimitTable.setStatus('current')
cwdxQosIpTosRatelimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfQosProfIndex"), (0, "CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosIpTosRatelimitIndex"))
if mibBuilder.loadTexts: cwdxQosIpTosRatelimitEntry.setStatus('current')
cwdxQosIpTosRatelimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cwdxQosIpTosRatelimitIndex.setStatus('current')
cwdxQosIpTosRatelimitMaxDownRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 169, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setUnits('bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwdxQosIpTosRatelimitMaxDownRate.setStatus('current')
ciscoWirelessDocsExtNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 2))
ciscoWirelessDocsExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 2, 0))
cwdxHeSuOnOffNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 169, 2, 0, 1)).setObjects(("CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfHeSuStatusMacAddress"), ("CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfHeSuStatusIpAddress"), ("CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfHeSuStatusDownChanIfIndex"), ("CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfHeSuStatusUpChanIfIndex"), ("CISCO-WIRELESS-DOCS-IF-MIB", "cwdIfHeSuStatusServiceId"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuStatusValue"))
if mibBuilder.loadTexts: cwdxHeSuOnOffNotification.setStatus('current')
cwdxHeSuChOverNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 169, 2, 0, 2)).setObjects(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverMacAddress"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverDownFrequency"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverUpChannelId"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverOpInitiatedTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverState"))
if mibBuilder.loadTexts: cwdxHeSuChOverNotification.setStatus('current')
ciscoWirelessDocsExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 3))
cwdxDocsExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 3, 1))
cwdxDocsExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 169, 3, 2))
cwdxDocsExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 169, 3, 1, 1)).setObjects(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosCtrlGroup"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosQueueGroup"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuCpeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwdxDocsExtCompliance = cwdxDocsExtCompliance.setStatus('current')
cwdxQosCtrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 169, 3, 2, 1)).setObjects(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosCtrlUpAdmissionCtrl"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosCtrlUpMaxRsvdBWPercent"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosCtrlUpAdmissionRejects"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosCtrlUpReservedBW"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosCtrlUpMaxVirtualBW"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosIfRateLimitAlgo"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosIfRateLimitExpWgt"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosIfRateLimitShpMaxDelay"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosIfRateLimitShpGranularity"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeServiceOutOctets"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeServiceOutPackets"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosMaxUpBWExcessRequests"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosMaxDownBWExcessPackets"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosProfGrantInterval"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosProfGrantSize"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosProfName"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosProfTosOverwriteMask"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosProfTosOverwriteValue"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxQosIpTosRatelimitMaxDownRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwdxQosCtrlGroup = cwdxQosCtrlGroup.setStatus('current')
cwdxQosQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 169, 3, 2, 2)).setObjects(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxBWQueueOrder"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxBWQueueNumServedBeforeYield"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxBWQueueType"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxBWQueueMaxDepth"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxBWQueueDepth"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxBWQueueDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwdxQosQueueGroup = cwdxQosQueueGroup.setStatus('current')
cwdxHeSuCpeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 169, 3, 2, 3)).setObjects(("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxCpeIpAddress"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxCpeAccessGroup"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxSuMappingStatusIndex"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuStatusValue"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusOnlineTimes"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusPercentOnline"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusMinOnlineTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusAvgOnlineTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusMaxOnlineTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusMinOfflineTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusAvgOfflineTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusMaxOfflineTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxIfHeSuStatusDynSidCount"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuOnOffTrapEnable"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuOnOffTrapInterval"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuDefaultMaxCpes"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeTotalSusRegistered"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeTotalSusOffline"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverTimeExpiration"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverMacAddress"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverDownFrequency"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverUpChannelId"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverTrapOnCompletion"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverOpInitiatedTime"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverState"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuChOverRowStatus"), ("CISCO-WIRELESS-DOCS-EXT-MIB", "cwdxHeSuMaxCpeNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwdxHeSuCpeGroup = cwdxHeSuCpeGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WIRELESS-DOCS-EXT-MIB", cwdxQosProfileExtObjects=cwdxQosProfileExtObjects, cwdxSuMappingEntry=cwdxSuMappingEntry, ciscoWirelessDocsExtMIB=ciscoWirelessDocsExtMIB, cwdxHeSuChOverTrapOnCompletion=cwdxHeSuChOverTrapOnCompletion, cwdxCpeMacAddress=cwdxCpeMacAddress, cwdxHeSuOnOffTrapInterval=cwdxHeSuOnOffTrapInterval, cwdxIfHeSuStatusPercentOnline=cwdxIfHeSuStatusPercentOnline, cwdxIfHeSuStatusDynSidCount=cwdxIfHeSuStatusDynSidCount, cwdxHeSuChOverRowStatus=cwdxHeSuChOverRowStatus, cwdxQosIpTosRatelimitTable=cwdxQosIpTosRatelimitTable, cwdxQosIfRateLimitShpMaxDelay=cwdxQosIfRateLimitShpMaxDelay, cwdxIfHeSuStatusMinOnlineTime=cwdxIfHeSuStatusMinOnlineTime, cwdxQosCtrlGroup=cwdxQosCtrlGroup, cwdxHeServiceExtTable=cwdxHeServiceExtTable, cwdxQosCtrlUpAdmissionRejects=cwdxQosCtrlUpAdmissionRejects, PYSNMP_MODULE_ID=ciscoWirelessDocsExtMIB, cwdxCpeAccessGroup=cwdxCpeAccessGroup, cwdxQosMaxUpBWExcessRequests=cwdxQosMaxUpBWExcessRequests, cwdxSuMappingTable=cwdxSuMappingTable, cwdxIfHeSuStatusMaxOfflineTime=cwdxIfHeSuStatusMaxOfflineTime, cwdxHeSuChOverMacAddress=cwdxHeSuChOverMacAddress, cwdxHeSuChOverState=cwdxHeSuChOverState, cwdxQosMaxDownBWExcessPackets=cwdxQosMaxDownBWExcessPackets, cwdxHeServiceExtEntry=cwdxHeServiceExtEntry, cwdxBWQueueTable=cwdxBWQueueTable, cwdxHeSuChOverNotification=cwdxHeSuChOverNotification, cwdxQosProfileExtTable=cwdxQosProfileExtTable, cwdxHeSuChOverTimeExpiration=cwdxHeSuChOverTimeExpiration, cwdxCpeTable=cwdxCpeTable, cwdxQosProfTosOverwriteValue=cwdxQosProfTosOverwriteValue, cwdxHeSuTable=cwdxHeSuTable, cwdxHeSuChOverTable=cwdxHeSuChOverTable, cwdxIfHeSuStatusAvgOfflineTime=cwdxIfHeSuStatusAvgOfflineTime, cwdxHeSuChOverEntry=cwdxHeSuChOverEntry, cwdxQosProfTosOverwriteMask=cwdxQosProfTosOverwriteMask, cwdxQosProfileExtEntry=cwdxQosProfileExtEntry, cwdxQosQueueGroup=cwdxQosQueueGroup, cwdxCpeStatusIndex=cwdxCpeStatusIndex, cwdxCpeEntry=cwdxCpeEntry, cwdxQosIfRateLimitEntry=cwdxQosIfRateLimitEntry, cwdxQosProfName=cwdxQosProfName, cwdxBWQueueDepth=cwdxBWQueueDepth, cwdxDocsExtGroups=cwdxDocsExtGroups, cwdxHeSuOnOffNotification=cwdxHeSuOnOffNotification, cwdxHeSuStatusExtEntry=cwdxHeSuStatusExtEntry, cwdxHeSuStatusValue=cwdxHeSuStatusValue, cwdxQosProfGrantSize=cwdxQosProfGrantSize, cwdxIfHeSuStatusOnlineTimes=cwdxIfHeSuStatusOnlineTimes, cwdxHeTotalSusOffline=cwdxHeTotalSusOffline, cwdxIfHeServiceOutOctets=cwdxIfHeServiceOutOctets, cwdxHeTotalSusRegistered=cwdxHeTotalSusRegistered, cwdxQosIfRateLimitShpGranularity=cwdxQosIfRateLimitShpGranularity, cwdxQosIpTosRatelimitIndex=cwdxQosIpTosRatelimitIndex, cwdxSuMappingStatusIndex=cwdxSuMappingStatusIndex, cwdxIfHeSuStatusMinOfflineTime=cwdxIfHeSuStatusMinOfflineTime, ciscoWirelessDocsExtNotifications=ciscoWirelessDocsExtNotifications, cwdxQosCtrlObjects=cwdxQosCtrlObjects, cwdxIfHeSuStatusAvgOnlineTime=cwdxIfHeSuStatusAvgOnlineTime, ciscoWirelessDocsExtNotificationsPrefix=ciscoWirelessDocsExtNotificationsPrefix, cwdxHeSuEntry=cwdxHeSuEntry, cwdxBWQueueOrder=cwdxBWQueueOrder, cwdxQosIfRateLimitExpWgt=cwdxQosIfRateLimitExpWgt, cwdxQosCtrlUpReservedBW=cwdxQosCtrlUpReservedBW, cwdxHeSuDefaultMaxCpes=cwdxHeSuDefaultMaxCpes, cwdxHeSuChOverUpChannelId=cwdxHeSuChOverUpChannelId, cwdxHeSuOnOffTrapEnable=cwdxHeSuOnOffTrapEnable, cwdxQosIfRateLimitTable=cwdxQosIfRateLimitTable, cwdxSuMappingMacAddress=cwdxSuMappingMacAddress, cwdxHeSuChOverSerialNumber=cwdxHeSuChOverSerialNumber, cwdxHeMacExtEntry=cwdxHeMacExtEntry, cwdxDocsExtCompliances=cwdxDocsExtCompliances, cwdxHeSuChOverDownFrequency=cwdxHeSuChOverDownFrequency, cwdxQosIfRateLimitAlgo=cwdxQosIfRateLimitAlgo, cwdxIfHeSuStatusMaxOnlineTime=cwdxIfHeSuStatusMaxOnlineTime, cwdxBWQueueNumServedBeforeYield=cwdxBWQueueNumServedBeforeYield, cwdxQosProfGrantInterval=cwdxQosProfGrantInterval, cwdxCpeIpAddress=cwdxCpeIpAddress, cwdxQosCtrlUpMaxVirtualBW=cwdxQosCtrlUpMaxVirtualBW, cwdxQosIpTosRatelimitMaxDownRate=cwdxQosIpTosRatelimitMaxDownRate, cwdxQosCtrlUpEntry=cwdxQosCtrlUpEntry, cwdxHeSuChOverOpInitiatedTime=cwdxHeSuChOverOpInitiatedTime, cwdxBWQueueEntry=cwdxBWQueueEntry, cwdxBWQueueMaxDepth=cwdxBWQueueMaxDepth, cwdxQosCtrlUpAdmissionCtrl=cwdxQosCtrlUpAdmissionCtrl, cwdxHeSuMaxCpeNumber=cwdxHeSuMaxCpeNumber, cwdxHeSuCpeGroup=cwdxHeSuCpeGroup, cwdxHeSuCpeObjects=cwdxHeSuCpeObjects, ciscoWirelessDocsExtConformance=ciscoWirelessDocsExtConformance, cwdxQosCtrlUpMaxRsvdBWPercent=cwdxQosCtrlUpMaxRsvdBWPercent, cwdxQosQueueObjects=cwdxQosQueueObjects, cwdxDocsExtCompliance=cwdxDocsExtCompliance, cwdxBWQueueNameCode=cwdxBWQueueNameCode, cwdxBWQueueType=cwdxBWQueueType, cwdxQosIpTosRatelimitEntry=cwdxQosIpTosRatelimitEntry, cwdxHeMacExtTable=cwdxHeMacExtTable, cwdxHeSuStatusExtTable=cwdxHeSuStatusExtTable, cwdxBWQueueDiscards=cwdxBWQueueDiscards, cwdxQosCtrlUpTable=cwdxQosCtrlUpTable, cwdxIfHeServiceOutPackets=cwdxIfHeServiceOutPackets, ciscoWirelessDocsExtMIBObjects=ciscoWirelessDocsExtMIBObjects)
