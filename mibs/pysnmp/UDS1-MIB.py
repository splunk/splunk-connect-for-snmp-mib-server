#
# PySNMP MIB module UDS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/UDS1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:21:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Counter64, Bits, iso, MibIdentifier, Counter32, NotificationType, experimental, Integer32, IpAddress, Unsigned32, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Counter64", "Bits", "iso", "MibIdentifier", "Counter32", "NotificationType", "experimental", "Integer32", "IpAddress", "Unsigned32", "ModuleIdentity", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
uds1 = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 4))
uds1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 4, 1), )
if mibBuilder.loadTexts: uds1ConfigTable.setStatus('mandatory')
uds1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1), ).setIndexNames((0, "UDS1-MIB", "uds1CfgIndex"))
if mibBuilder.loadTexts: uds1ConfigEntry.setStatus('mandatory')
uds1CfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CfgIndex.setStatus('mandatory')
uds1CfgRespToRemoteLoopbk = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ignore", 1), ("respond", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgRespToRemoteLoopbk.setStatus('mandatory')
uds1CfgJitterAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("attenJitterOnRcvr", 1), ("attenJitterOnTxmtr", 2), ("notApplicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgJitterAttenuation.setStatus('mandatory')
uds1CfgXmitLineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dB0", 1), ("dB7", 2), ("dB15", 3), ("dB22", 4), ("notApplicable", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgXmitLineBuildOut.setStatus('mandatory')
uds1CfgAutoBusyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgAutoBusyEnable.setStatus('mandatory')
uds1CfgDialInAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAddress", 1), ("dnis", 2), ("ani-dnis", 3), ("ani", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgDialInAdr.setStatus('mandatory')
uds1CfgZeroCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("zcs", 2), ("b8zs", 3), ("ami", 4), ("hdb3", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgZeroCoding.setStatus('mandatory')
uds1CfgDialInOutTrunkSt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wink", 1), ("immediate", 2), ("dialTone", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgDialInOutTrunkSt.setStatus('mandatory')
uds1CfgDialInAdrAckWinkEn = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgDialInAdrAckWinkEn.setStatus('mandatory')
uds1CfgDialOutAdrDly = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(70, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgDialOutAdrDly.setStatus('mandatory')
uds1CfgStuffByteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgStuffByteValue.setStatus('mandatory')
uds1CfgDialInOutTrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eAndMTypeII", 1), ("loopStart", 2), ("groundStart", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgDialInOutTrunkType.setStatus('mandatory')
uds1CfgPriSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("priSw4ESS", 1), ("priSw5ESS", 2), ("priSwDMS100", 3), ("priSwICTR4", 4), ("priSwVn4", 5), ("priSwNI2", 6), ("priSwINS1500", 7), ("priSwDASS2", 8), ("priSwTSO14", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgPriSwitchType.setStatus('mandatory')
uds1CfgIdleByte = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgIdleByte.setStatus('mandatory')
uds1CfgAnlgBlockErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgAnlgBlockErrCode.setStatus('mandatory')
uds1CfgDgtlBlockErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgDgtlBlockErrCode.setStatus('mandatory')
uds1CfgNoMdmAvailErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgNoMdmAvailErrCode.setStatus('mandatory')
uds1CfgNoIgwsAvailErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgNoIgwsAvailErrCode.setStatus('mandatory')
uds1CfgChanBlockErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgChanBlockErrCode.setStatus('mandatory')
uds1CfgBlockCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("blockNone", 2), ("blockAnalog", 3), ("blockDigital", 4), ("blockAll", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgBlockCallType.setStatus('mandatory')
uds1CfgNfasId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgNfasId.setStatus('mandatory')
uds1CfgNfasDChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("dchannel", 2), ("extraBchannel", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgNfasDChannel.setStatus('mandatory')
uds1CfgShrtHaulDist = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 1), ("len0thru133Ft", 2), ("len133thru266Ft", 3), ("len266thru399Ft", 4), ("len399thru533Ft", 5), ("len533thru655Ft", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgShrtHaulDist.setStatus('mandatory')
uds1CfgCallProceedingRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgCallProceedingRsp.setStatus('mandatory')
uds1CfgAlertingRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgAlertingRsp.setStatus('mandatory')
uds1CfgServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("inService", 2), ("localOutOfService", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgServiceState.setStatus('mandatory')
uds1CfgIcbKeyword = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgIcbKeyword.setStatus('mandatory')
uds1CfgOverlapRxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgOverlapRxMode.setStatus('mandatory')
uds1CfgEandMnoAddrTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 125))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgEandMnoAddrTimer.setStatus('mandatory')
uds1CfgSeizureWinkDly = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CfgSeizureWinkDly.setStatus('mandatory')
uds1IntervalTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 4, 2), )
if mibBuilder.loadTexts: uds1IntervalTable.setStatus('mandatory')
uds1IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 4, 2, 1), ).setIndexNames((0, "UDS1-MIB", "uds1IntIndex"), (0, "UDS1-MIB", "uds1IntNumber"))
if mibBuilder.loadTexts: uds1IntervalEntry.setStatus('mandatory')
uds1IntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1IntIndex.setStatus('mandatory')
uds1IntNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1IntNumber.setStatus('mandatory')
uds1IntBurstyErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1IntBurstyErrSeconds.setStatus('mandatory')
uds1IntFrameBitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1IntFrameBitErrors.setStatus('mandatory')
uds1IntDeltaFrameAlligns = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1IntDeltaFrameAlligns.setStatus('mandatory')
uds1IntExcessCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1IntExcessCRCErrors.setStatus('mandatory')
uds1CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 4, 3), )
if mibBuilder.loadTexts: uds1CurrentTable.setStatus('mandatory')
uds1CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 4, 3, 1), ).setIndexNames((0, "UDS1-MIB", "uds1CurrIndex"))
if mibBuilder.loadTexts: uds1CurrentEntry.setStatus('mandatory')
uds1CurrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CurrIndex.setStatus('mandatory')
uds1CurrBurstyErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CurrBurstyErrSeconds.setStatus('mandatory')
uds1CurrFrameBitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CurrFrameBitErrors.setStatus('mandatory')
uds1CurrDeltaFrameAlligns = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CurrDeltaFrameAlligns.setStatus('mandatory')
uds1CurrExcessCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CurrExcessCRCErrors.setStatus('mandatory')
uds1TotalTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 4, 4), )
if mibBuilder.loadTexts: uds1TotalTable.setStatus('mandatory')
uds1TotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 4, 4, 1), ).setIndexNames((0, "UDS1-MIB", "uds1TotIndex"))
if mibBuilder.loadTexts: uds1TotalEntry.setStatus('mandatory')
uds1TotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1TotIndex.setStatus('mandatory')
uds1TotBurstyErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1TotBurstyErrSeconds.setStatus('mandatory')
uds1TotFrameBitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1TotFrameBitErrors.setStatus('mandatory')
uds1TotDeltaFrameAlligns = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1TotDeltaFrameAlligns.setStatus('mandatory')
uds1TotExcessCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1TotExcessCRCErrors.setStatus('mandatory')
uds1StatTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 4, 5), )
if mibBuilder.loadTexts: uds1StatTable.setStatus('mandatory')
uds1StatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1), ).setIndexNames((0, "UDS1-MIB", "uds1StatIndex"))
if mibBuilder.loadTexts: uds1StatEntry.setStatus('mandatory')
uds1StatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatIndex.setStatus('mandatory')
uds1StatReceiverGain = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dB0", 1), ("dB7", 2), ("dB15", 3), ("dB22", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatReceiverGain.setStatus('mandatory')
uds1StatOutOfFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatOutOfFrame.setStatus('mandatory')
uds1StatLossOfSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatLossOfSignal.setStatus('mandatory')
uds1StatReceivingAIS = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatReceivingAIS.setStatus('mandatory')
uds1StatSwitchTypeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("priSw4ESS", 1), ("priSw5ESS", 2), ("priSwDMS100", 3), ("priSwICTR4", 4), ("priSwVn4", 5), ("priSwNI2", 6), ("priSwINS1500", 7), ("priSwDASS2", 8), ("priSwTSO14", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatSwitchTypeActive.setStatus('mandatory')
uds1StatDchanOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dChannelUp", 1), ("dChannelDown", 2), ("bChannel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatDchanOperational.setStatus('mandatory')
uds1StatE1ContCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatE1ContCrc.setStatus('mandatory')
uds1StatE1PhysicalState = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("psF1Operational", 1), ("psF2Fc1RaiTempCrcErrors", 2), ("psF3Fc2LossOfSignal", 3), ("psF4Fc3AlarmIndSignal", 4), ("psF5Fc4RaiContCrcErrors", 5), ("psF6PowerOn", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatE1PhysicalState.setStatus('mandatory')
uds1StatLoopBackInit = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("network", 2), ("command", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatLoopBackInit.setStatus('mandatory')
uds1StatNfasDChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("dchannel", 2), ("extraBchannel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatNfasDChannel.setStatus('mandatory')
uds1StatDChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("inService", 2), ("bChannel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatDChannel.setStatus('mandatory')
uds1StatDs0SrvcChngLst = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatDs0SrvcChngLst.setStatus('mandatory')
uds1StatMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatMultiFrame.setStatus('mandatory')
uds1StatRemMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatRemMultiFrame.setStatus('mandatory')
uds1StatServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("inService", 2), ("localOutOfService", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1StatServiceState.setStatus('mandatory')
uds1CmdTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 4, 6), )
if mibBuilder.loadTexts: uds1CmdTable.setStatus('mandatory')
uds1CmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1), ).setIndexNames((0, "UDS1-MIB", "uds1CmdIndex"))
if mibBuilder.loadTexts: uds1CmdEntry.setStatus('mandatory')
uds1CmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CmdIndex.setStatus('mandatory')
uds1CmdMgtStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CmdMgtStationId.setStatus('mandatory')
uds1CmdReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CmdReqId.setStatus('mandatory')
uds1CmdFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("noCommand", 1), ("forceReceiverReframe", 2), ("enterLoopback", 3), ("exitLoopback", 4), ("inService", 5), ("localOutOfService", 6), ("blockAnalogCalls", 7), ("blockDigitalCalls", 8), ("blockAllCalls", 9), ("blockNoCalls", 10), ("redAlarmOverride", 11), ("takeDownDChannel", 12), ("bringUpDChannel", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CmdFunction.setStatus('mandatory')
uds1CmdForce = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("force", 1), ("noForce", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CmdForce.setStatus('mandatory')
uds1CmdParam = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1CmdParam.setStatus('mandatory')
uds1CmdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("inProgress", 3), ("notSupported", 4), ("unAbleToRun", 5), ("aborted", 6), ("failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CmdResult.setStatus('mandatory')
uds1CmdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 8, 12, 20, 22, 73))).clone(namedValues=NamedValues(("noError", 1), ("unable", 2), ("unrecognizedCommand", 6), ("slotEmpty", 8), ("noResponse", 12), ("unsupportedCommand", 20), ("deviceDisabled", 22), ("pendingSoftwareDownload", 73)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1CmdCode.setStatus('mandatory')
uds1TrapEnaTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 4, 7), )
if mibBuilder.loadTexts: uds1TrapEnaTable.setStatus('mandatory')
uds1TrapEnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1), ).setIndexNames((0, "UDS1-MIB", "uds1TrapEnaIndex"))
if mibBuilder.loadTexts: uds1TrapEnaEntry.setStatus('mandatory')
uds1TrapEnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uds1TrapEnaIndex.setStatus('mandatory')
uds1TrapEnaYellowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaYellowAlarm.setStatus('mandatory')
uds1TrapEnaRedAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaRedAlarm.setStatus('mandatory')
uds1TrapEnaLossOfSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaLossOfSignal.setStatus('mandatory')
uds1TrapEnaAlarmIndSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaAlarmIndSignal.setStatus('mandatory')
uds1TrapEnaYellowAlarmClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaYellowAlarmClr.setStatus('mandatory')
uds1TrapEnaRedAlarmClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaRedAlarmClr.setStatus('mandatory')
uds1TrapEnaLossOfSgnlClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaLossOfSgnlClr.setStatus('mandatory')
uds1TrapEnaAlrmIndSgnlClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaAlrmIndSgnlClr.setStatus('mandatory')
uds1TrapEnaContCrcAlrm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaContCrcAlrm.setStatus('mandatory')
uds1TrapEnaContCrcAlrmClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaContCrcAlrmClr.setStatus('mandatory')
uds1TrapEnaPhysStateChng = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaPhysStateChng.setStatus('mandatory')
uds1TrapEnaDchanInSrvc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaDchanInSrvc.setStatus('mandatory')
uds1TrapEnaDchanOutOfSrvc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaDchanOutOfSrvc.setStatus('mandatory')
uds1TrapEnaDs0InSrvc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaDs0InSrvc.setStatus('mandatory')
uds1TrapEnaDs0OutOfSrvc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaDs0OutOfSrvc.setStatus('mandatory')
uds1TrapEnaMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaMultiFrame.setStatus('mandatory')
uds1TrapEnaRemMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaRemMultiFrame.setStatus('mandatory')
uds1TrapEnaMultiFrmClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaMultiFrmClr.setStatus('mandatory')
uds1TrapEnaRemMultiFrmClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 4, 7, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uds1TrapEnaRemMultiFrmClr.setStatus('mandatory')
mibBuilder.exportSymbols("UDS1-MIB", uds1CurrFrameBitErrors=uds1CurrFrameBitErrors, uds1TrapEnaRedAlarm=uds1TrapEnaRedAlarm, uds1StatLoopBackInit=uds1StatLoopBackInit, uds1CfgJitterAttenuation=uds1CfgJitterAttenuation, uds1CfgDialInAdr=uds1CfgDialInAdr, uds1StatMultiFrame=uds1StatMultiFrame, uds1IntervalTable=uds1IntervalTable, uds1StatServiceState=uds1StatServiceState, uds1CfgStuffByteValue=uds1CfgStuffByteValue, uds1StatDChannel=uds1StatDChannel, uds1TotalEntry=uds1TotalEntry, uds1CfgDgtlBlockErrCode=uds1CfgDgtlBlockErrCode, uds1TrapEnaEntry=uds1TrapEnaEntry, uds1CurrDeltaFrameAlligns=uds1CurrDeltaFrameAlligns, uds1CmdFunction=uds1CmdFunction, uds1ConfigTable=uds1ConfigTable, uds1CfgNoMdmAvailErrCode=uds1CfgNoMdmAvailErrCode, uds1TrapEnaAlarmIndSignal=uds1TrapEnaAlarmIndSignal, uds1CurrBurstyErrSeconds=uds1CurrBurstyErrSeconds, uds1CfgCallProceedingRsp=uds1CfgCallProceedingRsp, uds1TotFrameBitErrors=uds1TotFrameBitErrors, uds1TrapEnaMultiFrame=uds1TrapEnaMultiFrame, uds1CfgOverlapRxMode=uds1CfgOverlapRxMode, uds1CmdParam=uds1CmdParam, uds1CmdTable=uds1CmdTable, uds1StatReceiverGain=uds1StatReceiverGain, uds1TotIndex=uds1TotIndex, uds1TrapEnaDchanInSrvc=uds1TrapEnaDchanInSrvc, uds1StatTable=uds1StatTable, uds1StatE1ContCrc=uds1StatE1ContCrc, uds1CfgDialOutAdrDly=uds1CfgDialOutAdrDly, uds1CurrIndex=uds1CurrIndex, uds1TrapEnaAlrmIndSgnlClr=uds1TrapEnaAlrmIndSgnlClr, uds1CmdForce=uds1CmdForce, uds1CfgDialInAdrAckWinkEn=uds1CfgDialInAdrAckWinkEn, uds1StatIndex=uds1StatIndex, uds1CfgPriSwitchType=uds1CfgPriSwitchType, uds1TrapEnaDs0InSrvc=uds1TrapEnaDs0InSrvc, nas=nas, uds1CfgIndex=uds1CfgIndex, uds1TrapEnaLossOfSgnlClr=uds1TrapEnaLossOfSgnlClr, uds1StatOutOfFrame=uds1StatOutOfFrame, uds1StatRemMultiFrame=uds1StatRemMultiFrame, uds1TrapEnaRemMultiFrame=uds1TrapEnaRemMultiFrame, uds1TrapEnaRedAlarmClr=uds1TrapEnaRedAlarmClr, uds1=uds1, uds1StatDs0SrvcChngLst=uds1StatDs0SrvcChngLst, uds1CmdResult=uds1CmdResult, uds1CfgServiceState=uds1CfgServiceState, uds1CfgAlertingRsp=uds1CfgAlertingRsp, uds1TotExcessCRCErrors=uds1TotExcessCRCErrors, uds1TrapEnaContCrcAlrm=uds1TrapEnaContCrcAlrm, uds1TrapEnaTable=uds1TrapEnaTable, uds1TrapEnaLossOfSignal=uds1TrapEnaLossOfSignal, uds1IntExcessCRCErrors=uds1IntExcessCRCErrors, uds1CfgDialInOutTrunkSt=uds1CfgDialInOutTrunkSt, uds1CurrentTable=uds1CurrentTable, uds1TrapEnaRemMultiFrmClr=uds1TrapEnaRemMultiFrmClr, uds1TrapEnaYellowAlarmClr=uds1TrapEnaYellowAlarmClr, uds1IntIndex=uds1IntIndex, uds1TrapEnaDs0OutOfSrvc=uds1TrapEnaDs0OutOfSrvc, uds1CmdCode=uds1CmdCode, uds1CmdReqId=uds1CmdReqId, uds1TrapEnaDchanOutOfSrvc=uds1TrapEnaDchanOutOfSrvc, uds1TrapEnaMultiFrmClr=uds1TrapEnaMultiFrmClr, uds1CfgBlockCallType=uds1CfgBlockCallType, uds1CfgAutoBusyEnable=uds1CfgAutoBusyEnable, uds1CmdMgtStationId=uds1CmdMgtStationId, uds1CfgSeizureWinkDly=uds1CfgSeizureWinkDly, uds1TrapEnaIndex=uds1TrapEnaIndex, uds1CfgXmitLineBuildOut=uds1CfgXmitLineBuildOut, uds1IntBurstyErrSeconds=uds1IntBurstyErrSeconds, uds1StatNfasDChannel=uds1StatNfasDChannel, uds1CfgShrtHaulDist=uds1CfgShrtHaulDist, uds1TrapEnaPhysStateChng=uds1TrapEnaPhysStateChng, uds1ConfigEntry=uds1ConfigEntry, uds1CfgAnlgBlockErrCode=uds1CfgAnlgBlockErrCode, uds1TotBurstyErrSeconds=uds1TotBurstyErrSeconds, uds1CurrentEntry=uds1CurrentEntry, uds1CurrExcessCRCErrors=uds1CurrExcessCRCErrors, uds1StatE1PhysicalState=uds1StatE1PhysicalState, uds1CfgIcbKeyword=uds1CfgIcbKeyword, uds1CfgIdleByte=uds1CfgIdleByte, uds1CfgEandMnoAddrTimer=uds1CfgEandMnoAddrTimer, uds1TotalTable=uds1TotalTable, uds1CfgNfasDChannel=uds1CfgNfasDChannel, uds1CfgZeroCoding=uds1CfgZeroCoding, uds1IntNumber=uds1IntNumber, uds1CfgNoIgwsAvailErrCode=uds1CfgNoIgwsAvailErrCode, uds1CmdIndex=uds1CmdIndex, uds1CfgRespToRemoteLoopbk=uds1CfgRespToRemoteLoopbk, uds1StatSwitchTypeActive=uds1StatSwitchTypeActive, uds1StatDchanOperational=uds1StatDchanOperational, uds1CmdEntry=uds1CmdEntry, uds1StatLossOfSignal=uds1StatLossOfSignal, uds1CfgNfasId=uds1CfgNfasId, uds1IntFrameBitErrors=uds1IntFrameBitErrors, uds1IntervalEntry=uds1IntervalEntry, uds1IntDeltaFrameAlligns=uds1IntDeltaFrameAlligns, usr=usr, uds1TrapEnaYellowAlarm=uds1TrapEnaYellowAlarm, uds1CfgDialInOutTrunkType=uds1CfgDialInOutTrunkType, uds1StatReceivingAIS=uds1StatReceivingAIS, uds1TotDeltaFrameAlligns=uds1TotDeltaFrameAlligns, uds1StatEntry=uds1StatEntry, uds1TrapEnaContCrcAlrmClr=uds1TrapEnaContCrcAlrmClr, uds1CfgChanBlockErrCode=uds1CfgChanBlockErrCode)
