#
# PySNMP MIB module ZHONE-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:11:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, Counter64, ObjectIdentity, Bits, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, NotificationType, Unsigned32, iso, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "ObjectIdentity", "Bits", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "NotificationType", "Unsigned32", "iso", "MibIdentifier", "Gauge32")
DateAndTime, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue")
ipIfAddr, ipIfVci, ipIfLgId, ipIfVpi = mibBuilder.importSymbols("ZHONE-COM-IP-REC-MIB", "ipIfAddr", "ipIfVci", "ipIfLgId", "ipIfVpi")
zhoneShelfNumber, pportNumber, zhoneSlotNumber, subPortNumber = mibBuilder.importSymbols("ZHONE-INTERFACE-TRANSLATION-MIB", "zhoneShelfNumber", "pportNumber", "zhoneSlotNumber", "subPortNumber")
zhoneShelfIndex, zhoneSystem, zhoneModules, zhoneTrapModules, zhoneSlotIndex, zhone = mibBuilder.importSymbols("Zhone", "zhoneShelfIndex", "zhoneSystem", "zhoneModules", "zhoneTrapModules", "zhoneSlotIndex", "zhone")
ZhoneFileName, ZhoneRowStatus, ZhoneCardType, ZhoneAlarmSeverity, ZhoneCardLineType, ZhoneSlotValue, ZhoneAdminString, ZhoneIfType, ZhoneShelfValue, ZhoneAlarmTypeId, ZhoneCountryCode = mibBuilder.importSymbols("Zhone-TC", "ZhoneFileName", "ZhoneRowStatus", "ZhoneCardType", "ZhoneAlarmSeverity", "ZhoneCardLineType", "ZhoneSlotValue", "ZhoneAdminString", "ZhoneIfType", "ZhoneShelfValue", "ZhoneAlarmTypeId", "ZhoneCountryCode")
zhoneSystemModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 2))
zhoneSystemModule.setRevisions(('2014-06-17 05:22', '2014-03-23 21:31', '2014-02-03 03:29', '2013-11-26 22:45', '2013-06-21 15:44', '2013-05-16 17:23', '2012-12-27 04:29', '2012-10-18 13:11', '2012-04-10 11:28', '2012-03-26 09:32', '2012-03-20 16:00', '2011-12-20 17:56', '2011-12-08 12:00', '2011-02-17 13:34', '2011-02-08 06:55', '2010-05-18 10:00', '2009-04-23 14:48', '2009-04-20 09:28', '2009-04-14 17:07', '2008-10-23 22:57', '2008-10-07 12:38', '2008-09-17 13:20', '2008-07-10 20:15', '2008-06-08 11:15', '2007-12-14 15:20', '2007-11-02 11:10', '2007-03-26 16:24', '2006-11-29 15:11', '2006-10-17 14:57', '2006-06-16 13:14', '2006-05-22 09:52', '2006-05-17 16:34', '2006-03-15 12:36', '2005-05-12 09:13', '2005-01-18 14:43', '2004-07-02 12:30', '2004-02-18 15:00', '2003-12-04 14:18', '2003-11-08 14:30', '2003-04-23 16:26', '2003-03-19 10:35', '2003-02-20 11:00', '2002-11-19 11:15', '2002-10-29 15:33', '2002-10-24 18:36', '2002-10-18 16:03', '2002-09-23 15:36', '2002-06-11 17:04', '2002-06-11 14:01', '2002-06-03 08:57', '2002-05-24 12:40', '2002-05-09 17:42', '2002-03-22 15:12', '2002-01-10 16:09', '2002-01-10 16:04', '2001-11-26 15:59', '2001-11-16 18:19', '2001-11-01 17:14', '2001-10-29 12:19', '2001-10-25 20:09', '2001-10-22 17:10', '2001-10-19 11:37', '2001-10-18 10:30', '2001-10-17 13:51', '2001-10-05 12:08', '2001-10-02 11:19', '2001-09-25 14:50', '2001-08-30 17:45', '2001-08-22 14:43', '2001-08-10 13:37', '2001-08-01 16:20', '2001-08-01 16:20', '2001-07-30 15:32', '2001-06-06 17:53', '2001-05-25 15:31', '2001-05-17 09:59', '2001-04-27 11:16', '2001-02-18 15:55', '2001-02-16 13:12', '2001-02-12 19:06', '2001-01-22 14:14', '2001-01-16 13:44', '2000-12-01 12:16', '2000-11-11 12:27', '2000-11-07 12:09', '2000-10-17 19:36', '2000-09-15 17:07', '2000-09-12 18:02', '2000-09-12 18:01',))
if mibBuilder.loadTexts: zhoneSystemModule.setLastUpdated('201406171200Z')
if mibBuilder.loadTexts: zhoneSystemModule.setOrganization('Zhone Technologies, Inc.')
class ZhoneRedundancyWeight(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("neverActive", 1), ("noPreference", 2), ("slightPreference", 3), ("mediumPreference", 4), ("highPreference", 5))

class ZhoneLocalTimeZone(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))
    namedValues = NamedValues(("internationalDateLineWest", 1), ("nome", 2), ("hawaii", 3), ("yukon", 4), ("pacific", 5), ("mountain", 6), ("central", 7), ("eastern", 8), ("atlantic", 9), ("newfoundland", 10), ("brasilia", 11), ("azores", 12), ("westAfrica", 13), ("gmt", 14), ("centralEuropean", 15), ("easternEurope", 16), ("baghdad", 17), ("tehran", 18), ("uae", 19), ("afghanistan", 20), ("islamabad", 21), ("india", 22), ("kathmandu", 23), ("dhaka", 24), ("rangoon", 25), ("bangkok", 26), ("chinaCoast", 27), ("japan", 28), ("australia", 29), ("guam", 30), ("magadan", 31), ("newZealand", 32), ("rawakiIslands", 33), ("lineIslands", 34))

zhoneZms = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 1))
if mibBuilder.loadTexts: zhoneZms.setStatus('current')
zhoneZmsExists = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneZmsExists.setStatus('current')
zhoneZmsConnectionStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneZmsConnectionStatus.setStatus('current')
zhoneZmsIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneZmsIpAddress.setStatus('current')
zhoneZmsBlockCli = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneZmsBlockCli.setStatus('current')
zhoneTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2))
if mibBuilder.loadTexts: zhoneTraps.setStatus('current')
zhoneTrapsTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1), )
if mibBuilder.loadTexts: zhoneTrapsTable.setStatus('current')
zhoneTrapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneTrapsDestination"))
if mibBuilder.loadTexts: zhoneTrapsEntry.setStatus('current')
zhoneTrapsDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: zhoneTrapsDestination.setStatus('current')
zhoneTrapsCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 2), ZhoneAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsCommunityName.setStatus('current')
zhoneTrapsSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTrapsSequenceNumber.setStatus('current')
zhoneTrapsResendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsResendSequenceNumber.setStatus('current')
zhoneTrapsAckedSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsAckedSequenceNumber.setStatus('current')
zhoneTrapsSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("critical", 1), ("severe", 2), ("moderate", 3), ("low", 4))).clone('low')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsSeverity.setStatus('current')
zhoneTrapsAllowedCategories = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 7), Bits().clone(namedValues=NamedValues(("catAdmin", 0), ("catLine", 1), ("catVoice", 2), ("catIP", 3), ("catRip", 4), ("catRadio", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsAllowedCategories.setStatus('current')
zhoneTrapsAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsAdminStatus.setStatus('current')
zhoneTrapsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 9), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsRowStatus.setStatus('current')
zhoneTrapsGatewayTrapServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 1, 1, 10), ZhoneAdminString().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTrapsGatewayTrapServerAddress.setStatus('current')
zhoneTrapVersion = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("version1", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapVersion.setStatus('current')
zhoneTrapFlags = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 3), Bits().clone(namedValues=NamedValues(("trapAcknowledge", 0), ("trapOutOfSequence", 1), ("trapResetSequenceNumber", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapFlags.setStatus('current')
zhoneTrapShelf = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 4), ZhoneShelfValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapShelf.setStatus('current')
zhoneTrapSlot = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 5), ZhoneSlotValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapSlot.setStatus('current')
zhoneTrapPort = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapPort.setStatus('current')
zhoneTrapSubPort = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapSubPort.setStatus('current')
zhoneTrapProviderId = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 8), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapProviderId.setStatus('current')
zhoneTrapText = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapText.setStatus('current')
zhoneTrapPortType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 10), IANAifType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapPortType.setStatus('current')
zhoneTrapPortTypeExtension = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 11), ZhoneIfType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapPortTypeExtension.setStatus('current')
zhoneTrapAlarmAction = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("set", 1), ("clear", 2), ("informational", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapAlarmAction.setStatus('current')
zhoneTrapAlarmId = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 13), ZhoneAlarmTypeId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapAlarmId.setStatus('current')
zhoneTrapAlarmSeverity = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 14), ZhoneAlarmSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapAlarmSeverity.setStatus('current')
zhoneTrapConfigSyncResetInterval = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 15), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapConfigSyncResetInterval.setStatus('current')
zhoneTrapConfigSyncResetCount = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 16), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapConfigSyncResetCount.setStatus('current')
zhoneTrapConfigSyncResetLastFtpTime = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 17), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapConfigSyncResetLastFtpTime.setStatus('current')
zhoneTrapConfigSyncResetCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 18), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapConfigSyncResetCurrentTime.setStatus('current')
zhoneTrapUtcTime = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 2, 19), Unsigned32()).setUnits('seconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneTrapUtcTime.setStatus('current')
zhoneConfigSync = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3))
if mibBuilder.loadTexts: zhoneConfigSync.setStatus('current')
zhoneConfigSyncExists = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneConfigSyncExists.setStatus('current')
zhoneConfigSyncOverflow = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneConfigSyncOverflow.setStatus('current')
zhoneConfigSyncPriority = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("low", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneConfigSyncPriority.setStatus('current')
zhoneConfigSyncAction = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createList", 2), ("createFullList", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneConfigSyncAction.setStatus('current')
zhoneConfigSyncFileName = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 5), ZhoneFileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneConfigSyncFileName.setStatus('current')
zhoneConfigSyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("syncComplete", 1), ("syncPending", 2), ("syncError", 3), ("syncInitializing", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneConfigSyncStatus.setStatus('current')
zhoneConfigSyncUserName = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 7), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneConfigSyncUserName.setStatus('current')
zhoneConfigSyncUserPassword = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 3, 8), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneConfigSyncUserPassword.setStatus('current')
zhoneAdmin = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4))
if mibBuilder.loadTexts: zhoneAdmin.setStatus('current')
zhoneAdminCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 1), )
if mibBuilder.loadTexts: zhoneAdminCommunityTable.setStatus('current')
zhoneAdminCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 1, 1), ).setIndexNames((1, "ZHONE-SYSTEM-MIB", "zhoneAdminCommunityName"))
if mibBuilder.loadTexts: zhoneAdminCommunityEntry.setStatus('current')
zhoneAdminCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 1, 1, 1), ZhoneAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: zhoneAdminCommunityName.setStatus('current')
zhoneAdminCommunityAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAccess", 1), ("read", 2), ("readAndWrite", 3), ("admin", 4))).clone('read')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAdminCommunityAccess.setStatus('current')
zhoneAdminCommunityAccessListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50)).clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAdminCommunityAccessListIndex.setStatus('current')
zhoneAdminCommunityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 1, 1, 4), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAdminCommunityRowStatus.setStatus('current')
zhoneNextAdminAccessIndex = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneNextAdminAccessIndex.setStatus('current')
zhoneAdminAccessListTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 3), )
if mibBuilder.loadTexts: zhoneAdminAccessListTable.setStatus('current')
zhoneAdminAccessListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 3, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneAdminAccessListIndex"), (0, "ZHONE-SYSTEM-MIB", "zhoneAdminAccessListIpAddress"))
if mibBuilder.loadTexts: zhoneAdminAccessListEntry.setStatus('current')
zhoneAdminAccessListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)))
if mibBuilder.loadTexts: zhoneAdminAccessListIndex.setStatus('current')
zhoneAdminAccessListIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: zhoneAdminAccessListIpAddress.setStatus('current')
zhoneAdminAccessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 3, 1, 3), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAdminAccessRowStatus.setStatus('current')
zhoneUser = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4))
if mibBuilder.loadTexts: zhoneUser.setStatus('current')
zhoneUserIdNext = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneUserIdNext.setStatus('current')
zhoneUserTotalFailedLogins = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneUserTotalFailedLogins.setStatus('current')
zhoneUserTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3), )
if mibBuilder.loadTexts: zhoneUserTable.setStatus('current')
zhoneUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneUserId"))
if mibBuilder.loadTexts: zhoneUserEntry.setStatus('current')
zhoneUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: zhoneUserId.setStatus('current')
zhoneUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 2), ZhoneAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneUserName.setStatus('current')
zhoneUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 3), ZhoneAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneUserPassword.setStatus('current')
zhoneUserPrompt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 4), ZhoneAdminString().clone('zSH> ')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneUserPrompt.setStatus('current')
zhoneUserAccessLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 5), Bits().clone(namedValues=NamedValues(("userAccessAdmin", 0), ("userAccessVoice", 1), ("userAccessData", 2), ("userAccessManuf", 3), ("userAccessDatabase", 4), ("userAccessSystems", 5), ("userAccessTool", 6), ("userAccessDebug", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneUserAccessLevel.setStatus('current')
zhoneUserAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneUserAdmin.setStatus('current')
zhoneUserLogins = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneUserLogins.setStatus('current')
zhoneUserFailedLogins = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneUserFailedLogins.setStatus('current')
zhoneUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 4, 4, 3, 1, 9), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneUserRowStatus.setStatus('current')
zhoneSystemConfiguration = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5))
if mibBuilder.loadTexts: zhoneSystemConfiguration.setStatus('current')
zhoneSystemConfigurationNumShelves = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 1), Integer32()).setUnits('shelves').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSystemConfigurationNumShelves.setStatus('current')
zhoneSystemConfigurationShelvesArray = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSystemConfigurationShelvesArray.setStatus('current')
zhoneSystemConfigurationNumCards = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSystemConfigurationNumCards.setStatus('current')
zhoneSystemConfigurationIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationIpAddress.setStatus('current')
zhoneSystemConfigurationAlternateIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationAlternateIpAddress.setStatus('current')
zhoneSystemConfigurationDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 6), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationDateAndTime.setStatus('current')
zhoneSystemConfigurationCountryRegion = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 7), ZhoneCountryCode().clone('us')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationCountryRegion.setStatus('current')
zhonePrimaryClockSource = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 8), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhonePrimaryClockSource.setStatus('deprecated')
zhoneSystemConfigurationRingSource = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internalRingSourceLabel", 1), ("externalRingSourceLabel", 2))).clone('internalRingSourceLabel')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationRingSource.setStatus('current')
zhoneSystemCurrentClockSource = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 10), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSystemCurrentClockSource.setStatus('current')
zhoneSystemSecondaryClockSource = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 11), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSystemSecondaryClockSource.setStatus('current')
zhoneSystemClockTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 12), )
if mibBuilder.loadTexts: zhoneSystemClockTable.setStatus('current')
zhoneSystemClockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneSystemClockEntry.setStatus('current')
zhoneSystemClockEligibility = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 12, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemClockEligibility.setStatus('current')
zhoneSystemClockWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemClockWeight.setStatus('current')
zhoneSystemClockAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSystemClockAvailabilityStatus.setStatus('current')
zhoneSystemClockTxClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("provisionedTiming", 2), ("localTiming", 3), ("loopTiming", 4), ("throughTiming", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSystemClockTxClockMode.setStatus('current')
zhoneSystemConsoleLogging = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConsoleLogging.setStatus('current')
zhoneSystemRevertiveClockSource = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 14), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemRevertiveClockSource.setStatus('current')
zhoneSystemVoiceBandwidthCheck = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemVoiceBandwidthCheck.setStatus('current')
zhoneAlarmLevelsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 16), Bits().clone(namedValues=NamedValues(("critical", 0), ("major", 1), ("minor", 2), ("warning", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneAlarmLevelsEnabled.setStatus('current')
zhoneSystemUserAuthMethod = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("radius", 2), ("radiusThenLocal", 3), ("radiusThenCraft", 4))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemUserAuthMethod.setStatus('current')
zhoneSystemRadiusAuthIndex = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemRadiusAuthIndex.setStatus('current')
zhoneSystemSecureFTP = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemSecureFTP.setStatus('current')
zhoneSystemWebInterface = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemWebInterface.setStatus('current')
zhoneSystemConfigurationOptions = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 21), Bits().clone(namedValues=NamedValues(("cvlanonly", 0), ("nol3bridgetable", 1), ("ipg88bits", 2), ("disdefpktrules", 3), ("enablexcardlinkagg", 4), ("fiberlan", 5), ("cfmon", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationOptions.setStatus('current')
zhoneSystemConfigurationReservedVlanIdStart = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4090))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationReservedVlanIdStart.setStatus('current')
zhoneSystemConfigurationReservedVlanIdCount = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemConfigurationReservedVlanIdCount.setStatus('current')
zhoneSystemSnmpVersion = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("snmpv2", 1), ("snmpv3", 2), ("snmpv3includingZMS", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemSnmpVersion.setStatus('current')
zhoneSystemPersistentLogging = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemPersistentLogging.setStatus('current')
zhoneSystemOutletTemperatureHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(35, 75)).clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemOutletTemperatureHighThreshold.setStatus('current')
zhoneSystemOutletTemperatureLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 5, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 0)).clone(-12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSystemOutletTemperatureLowThreshold.setStatus('current')
zhoneSoftwareLoadTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 6), )
if mibBuilder.loadTexts: zhoneSoftwareLoadTable.setStatus('current')
zhoneSoftwareLoadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 6, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneSwCardType"))
if mibBuilder.loadTexts: zhoneSoftwareLoadEntry.setStatus('current')
zhoneSwCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 6, 1, 1), ZhoneCardType())
if mibBuilder.loadTexts: zhoneSwCardType.setStatus('current')
zhoneSwCardSwFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 6, 1, 2), ZhoneFileName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSwCardSwFileName.setStatus('current')
zhoneSwLoadRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 6, 1, 3), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSwLoadRowStatus.setStatus('current')
zhoneSnmpErrorTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 7), )
if mibBuilder.loadTexts: zhoneSnmpErrorTable.setStatus('current')
zhoneSnmpErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 7, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneSnmpErrorIpAddress"), (0, "ZHONE-SYSTEM-MIB", "zhoneSnmpErrorReqId"))
if mibBuilder.loadTexts: zhoneSnmpErrorEntry.setStatus('current')
zhoneSnmpErrorIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 7, 1, 1), IpAddress())
if mibBuilder.loadTexts: zhoneSnmpErrorIpAddress.setStatus('current')
zhoneSnmpErrorReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: zhoneSnmpErrorReqId.setStatus('current')
zhoneSnmpErrorDisplayString = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSnmpErrorDisplayString.setStatus('current')
zhoneSnmpErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 7, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSnmpErrorTime.setStatus('current')
zhoneSoftwareDownload = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8))
if mibBuilder.loadTexts: zhoneSoftwareDownload.setStatus('current')
zhoneSysSwLogin = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 1), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysSwLogin.setStatus('current')
zhoneSysSwPassword = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 2), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysSwPassword.setStatus('current')
zhoneSysSwPriLoadServer = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysSwPriLoadServer.setStatus('current')
zhoneSysSwSecLoadServer = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysSwSecLoadServer.setStatus('current')
zhoneSysSwRemoteFilePath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysSwRemoteFilePath.setStatus('current')
zhoneSysSwLocalFilePath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 6), ZhoneFileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysSwLocalFilePath.setStatus('current')
zhoneSysSwAdmin = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("downLoadSw", 1), ("abortDownLoadSw", 2), ("delete", 3), ("imageFlashActive", 4), ("imageFlashStandby", 5), ("downLoadFile", 6), ("upLoadFile", 7), ("dumpFile", 8), ("dumpNetwork", 9), ("restore", 10), ("configScriptActivate", 11), ("configDatabaseActivate", 12), ("backupDatabase", 13), ("restoreDatabase", 14)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysSwAdmin.setStatus('current')
zhoneSysSwStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("downLoadSwUnknown", 1), ("downLoadSwInProgress", 2), ("downLoadSwAborted", 3), ("downLoadSwFailed", 4), ("downLoadSwSuccessful", 5), ("deleteFileNotFound", 6), ("deleteFileInUse", 7), ("deleteSuccessful", 8), ("operationInProgress", 9), ("operationAborted", 10), ("operationFailed", 11), ("operationSuccessful", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSysSwStatus.setStatus('current')
zhoneSoftwareReboot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 9))
if mibBuilder.loadTexts: zhoneSoftwareReboot.setStatus('current')
zhoneSysRebootAdmin = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("systemReboot", 1), ("rebootByCardType", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysRebootAdmin.setStatus('current')
zhoneSysRebootCardType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 9, 2), ZhoneCardType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSysRebootCardType.setStatus('current')
zhoneSysCardSoftwareConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10), )
if mibBuilder.loadTexts: zhoneSysCardSoftwareConfigTable.setStatus('current')
zhoneSysCardSoftwareConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"), (0, "Zhone", "zhoneSlotIndex"))
if mibBuilder.loadTexts: zhoneSysCardSoftwareConfigEntry.setStatus('current')
zhoneSysCardSpecificSwFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 1), ZhoneFileName().clone(' ')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardSpecificSwFileName.setStatus('current')
zhoneSysCardSwSpecificVers = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 2), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSysCardSwSpecificVers.setStatus('current')
zhoneSysCardUpgradeSwFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 3), ZhoneFileName().clone('  ')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardUpgradeSwFileName.setStatus('current')
zhoneSysCardSwUpgradeVers = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 4), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSysCardSwUpgradeVers.setStatus('current')
zhoneSysCardSwType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 5), ZhoneCardType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardSwType.setStatus('current')
zhoneSysCardSwEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardSwEnable.setStatus('current')
zhoneSysCardSwUpgradeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardSwUpgradeEnable.setStatus('current')
zhoneSysCardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 8), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardRowStatus.setStatus('current')
zhoneSysCardLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 9), ZhoneCardLineType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardLineType.setStatus('current')
zhoneSysCardAtmConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 99))).clone(namedValues=NamedValues(("notApplicable", 1), ("cellRelayOnly", 2), ("cellRelayAndManagement", 3), ("dataTerm", 4), ("voiceGateway", 5), ("hybridLowAal5Data", 6), ("hybridDefault", 7), ("hybridHighAal5Data", 8), ("vbnrt95rt5", 9), ("vbnrt80rt15", 10), ("vbnrt65rt30", 11), ("vbnrt50rt45", 12), ("vbnrt35rt60", 13), ("vbnrt20rt75", 14), ("vbnrt5rt95", 15), ("vbnrt5rt95cbr", 16), ("manual", 99))).clone('notApplicable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardAtmConfiguration.setStatus('current')
zhoneSysCardLineVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("not-used", 1), ("lv-60-volts", 2), ("lv-68-volts", 3), ("lv-95-volts", 4), ("lv-100-volts", 5), ("lv-110-volts", 6))).clone('not-used')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardLineVoltage.setStatus('current')
zhoneSysCardVpiVciRange = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-applicable", 1), ("vpi-15-vci-63", 2), ("vpi-7-vci-127", 3), ("vpi-15-vci-127", 4))).clone('not-applicable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardVpiVciRange.setStatus('current')
zhoneSysCardInitString = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardInitString.setStatus('current')
zhoneSysCardWettingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("standard", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardWettingCurrent.setStatus('current')
zhoneCardRedundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11))
nextCardRedundancyGroupId = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nextCardRedundancyGroupId.setStatus('current')
zhoneSysCardRedundancyTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 2), )
if mibBuilder.loadTexts: zhoneSysCardRedundancyTable.setStatus('current')
zhoneSysCardRedundancyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 2, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyGroupId"), (0, "Zhone", "zhoneShelfIndex"), (0, "Zhone", "zhoneSlotIndex"))
if mibBuilder.loadTexts: zhoneSysCardRedundancyEntry.setStatus('current')
zhoneSysCardRedundancyGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneSysCardRedundancyGroupId.setStatus('current')
zhoneSysCardRedundancyWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 2, 1, 2), ZhoneRedundancyWeight().clone('noPreference')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardRedundancyWeight.setStatus('current')
zhoneSysCardRedundancyHoldActive = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardRedundancyHoldActive.setStatus('current')
zhoneSysCardRedundancyOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noStatus", 1), ("cardIsActive", 2), ("cardIsStandby", 3), ("cardIsNotRedundant", 4), ("cardIsStandbyWithActiveLinks", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSysCardRedundancyOperStatus.setStatus('current')
zhoneSysCardRedundancyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 11, 2, 1, 5), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneSysCardRedundancyRowStatus.setStatus('current')
zhoneSntpConfiguration = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 12))
if mibBuilder.loadTexts: zhoneSntpConfiguration.setStatus('current')
zhoneSntpPrimaryServerIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 12, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSntpPrimaryServerIpAddr.setStatus('current')
zhoneSntpSecondaryServerIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 12, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSntpSecondaryServerIpAddr.setStatus('current')
zhoneSntpLocalTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 12, 3), ZhoneLocalTimeZone().clone(14)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSntpLocalTimeZone.setStatus('current')
zhoneSntpDaylightSavingTime = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 12, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSntpDaylightSavingTime.setStatus('current')
zhoneSntpDaylightSavingStart = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 12, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setUnits('characters').setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSntpDaylightSavingStart.setStatus('current')
zhoneSntpDaylightSavingEnd = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 12, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setUnits('characters').setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSntpDaylightSavingEnd.setStatus('current')
zhoneAdslPotsBypassRelay = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 13))
if mibBuilder.loadTexts: zhoneAdslPotsBypassRelay.setStatus('current')
zhoneAdslPotsMaxActiveBypassRelays = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneAdslPotsMaxActiveBypassRelays.setStatus('current')
zhoneAdslPotsBypassRelayResetAll = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unchanged", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneAdslPotsBypassRelayResetAll.setStatus('current')
zhoneBulkStatsSystemConfiguration = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 14))
if mibBuilder.loadTexts: zhoneBulkStatsSystemConfiguration.setStatus('current')
zhoneBulkStatsSystemCollectionEnabled = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 14, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneBulkStatsSystemCollectionEnabled.setStatus('current')
zhoneBulkStatsSystemFtpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 14, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneBulkStatsSystemFtpAddress.setStatus('current')
zhoneBulkStatsSystemFtpLogin = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 14, 3), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneBulkStatsSystemFtpLogin.setStatus('current')
zhoneBulkStatsSystemFtpPassword = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 14, 4), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneBulkStatsSystemFtpPassword.setStatus('current')
zhoneBulkStatsSystemFtpDirPath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 14, 5), ZhoneFileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneBulkStatsSystemFtpDirPath.setStatus('current')
zhoneBulkStatsSystemOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 14, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("collectionInProgress", 1), ("collectionComplete", 2), ("collectionPeriodOverrun", 3), ("collectionAbortedNoDiskSpace", 4), ("collectionAbortedFileIoFailure", 5), ("collectionCompleteFtpFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneBulkStatsSystemOperStatus.setStatus('current')
zhoneBulkStatCollection = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15))
nextBulkStatCollectionId = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nextBulkStatCollectionId.setStatus('current')
zhoneBulkStatCollectionTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2), )
if mibBuilder.loadTexts: zhoneBulkStatCollectionTable.setStatus('current')
zhoneBulkStatCollectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneBulkStatCollectionId"))
if mibBuilder.loadTexts: zhoneBulkStatCollectionEntry.setStatus('current')
zhoneBulkStatCollectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767)))
if mibBuilder.loadTexts: zhoneBulkStatCollectionId.setStatus('current')
zhoneBulkStatEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1, 2), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneBulkStatEnabled.setStatus('current')
zhoneBulkStatOID = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneBulkStatOID.setStatus('current')
zhoneBulkStatInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1, 4), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneBulkStatInstance.setStatus('current')
zhoneBulkStatIncludeChildren = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneBulkStatIncludeChildren.setStatus('current')
zhoneBulkStatsCollectionInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1, 6), Integer32().clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneBulkStatsCollectionInterval.setStatus('current')
zhoneBulkStatCollectionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 15, 2, 1, 7), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneBulkStatCollectionRowStatus.setStatus('current')
zhoneVideoSystemConfiguration = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16))
if mibBuilder.loadTexts: zhoneVideoSystemConfiguration.setStatus('current')
zhoneVideoSystemConfigurationIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationIndexNext.setStatus('current')
zhoneVideoSystemConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2), )
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationTable.setStatus('current')
zhoneVideoSystemConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationIndex"))
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationEntry.setStatus('current')
zhoneVideoSystemConfigurationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationIndex.setStatus('current')
zhoneVideoSystemConfigurationNtpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationNtpServerAddress.setStatus('current')
zhoneVideoSystemConfigurationEpgServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationEpgServerAddress.setStatus('current')
zhoneVideoSystemConfigurationSettopBoxHeadEndServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationSettopBoxHeadEndServerAddress.setStatus('current')
zhoneVideoSystemConfigurationDefaultChannelAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationDefaultChannelAddress.setStatus('current')
zhoneVideoSystemConfigurationNoChannelAvailableAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationNoChannelAvailableAddress.setStatus('current')
zhoneVideoSystemConfigurationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 7), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationRowStatus.setStatus('current')
zhoneVideoSystemConfigurationEpgType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minerva", 1), ("myrio", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationEpgType.setStatus('current')
zhoneVideoSystemConfigurationEpgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationEpgPort.setStatus('current')
zhoneVideoSystemConfigurationEpgFtpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 16, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneVideoSystemConfigurationEpgFtpAddress.setStatus('current')
zhoneCallDetailRecConfig = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17))
if mibBuilder.loadTexts: zhoneCallDetailRecConfig.setStatus('current')
zhoneCallDetailRecEnabled = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecEnabled.setStatus('current')
zhoneCallDetailRecFlushLog = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecFlushLog.setStatus('current')
zhoneCallDetailRecCurrFtpServer = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("none", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneCallDetailRecCurrFtpServer.setStatus('current')
zhoneCallDetailRecPrimFtpIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecPrimFtpIpAddr.setStatus('current')
zhoneCallDetailRecSecFtpIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecSecFtpIpAddr.setStatus('current')
zhoneCallDetailRecFtpLogin = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 6), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecFtpLogin.setStatus('current')
zhoneCallDetailRecFtpPassword = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 7), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecFtpPassword.setStatus('current')
zhoneCallDetailRecFtpDirPath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 8), ZhoneFileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecFtpDirPath.setStatus('current')
zhoneCallDetailRecRepPeriod = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneCallDetailRecRepPeriod.setStatus('current')
zhoneCallDetailRecOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 17, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("ftpFailure", 2), ("overrun", 3), ("noConfig", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneCallDetailRecOperStatus.setStatus('current')
zhoneSoftwareUpgrade = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 19))
if mibBuilder.loadTexts: zhoneSoftwareUpgrade.setStatus('current')
zhoneSoftwareUpgradeAction = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sw-upgrade", 1), ("sw-upgrade-auto-swact", 2), ("swact", 3), ("swact-abort", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneSoftwareUpgradeAction.setStatus('current')
zhoneSoftwareUpgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("not-started", 1), ("standby-upgrade-started", 2), ("standby-upgrade-completed", 3), ("standby-upgrade-aborted", 4), ("swact-started", 5), ("swact-complete", 6), ("swact-aborted", 7))).clone('not-started')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSoftwareUpgradeStatus.setStatus('current')
zhoneSoftwareUpgradeTimeStarted = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 19, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSoftwareUpgradeTimeStarted.setStatus('current')
zhoneSoftwareUpgradeTimeCompleted = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 19, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneSoftwareUpgradeTimeCompleted.setStatus('current')
zhoneFileSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20))
if mibBuilder.loadTexts: zhoneFileSystem.setStatus('current')
zhoneFileAction = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("cd", 1), ("dir", 2), ("copy", 3), ("rm", 4), ("mkdir", 5), ("rmdir", 6), ("mv", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneFileAction.setStatus('current')
zhoneFileName1 = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 2), ZhoneFileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneFileName1.setStatus('current')
zhoneFileName2 = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 3), ZhoneFileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneFileName2.setStatus('current')
zhoneDirectoryPath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 4), ZhoneFileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneDirectoryPath.setStatus('current')
zhoneDirectoryBytesAvailable = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDirectoryBytesAvailable.setStatus('current')
zhoneBytesReservedForProvisioning = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneBytesReservedForProvisioning.setStatus('current')
zhoneFileTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7), )
if mibBuilder.loadTexts: zhoneFileTable.setStatus('current')
zhoneFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneFileIndex"))
if mibBuilder.loadTexts: zhoneFileEntry.setStatus('current')
zhoneFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767)))
if mibBuilder.loadTexts: zhoneFileIndex.setStatus('current')
zhoneFileDirectoryPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7, 1, 2), ZhoneFileName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneFileDirectoryPath.setStatus('current')
zhoneFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7, 1, 3), ZhoneFileName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneFileName.setStatus('current')
zhoneFilePrivilege = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneFilePrivilege.setStatus('current')
zhoneFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneFileSize.setStatus('current')
zhoneFileLastModified = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 20, 7, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneFileLastModified.setStatus('current')
cpeMgr = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21))
if mibBuilder.loadTexts: cpeMgr.setStatus('current')
zhoneEnhancedStatus = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 22))
if mibBuilder.loadTexts: zhoneEnhancedStatus.setStatus('current')
zhoneEnhancedStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 22, 1), )
if mibBuilder.loadTexts: zhoneEnhancedStatusTable.setStatus('current')
zhoneEnhancedStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 22, 1, 1), ).setIndexNames((0, "ZHONE-SYSTEM-MIB", "zhoneEnhancedStatusIndex"))
if mibBuilder.loadTexts: zhoneEnhancedStatusEntry.setStatus('current')
zhoneEnhancedStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: zhoneEnhancedStatusIndex.setStatus('current')
zhoneEnhancedStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEnhancedStatusCode.setStatus('current')
zhoneEnhancedStatusText = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 22, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEnhancedStatusText.setStatus('current')
zhoneTrapCpePoll = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 1))
if mibBuilder.loadTexts: zhoneTrapCpePoll.setStatus('current')
zhoneTrapCpePollV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 1, 0))
if mibBuilder.loadTexts: zhoneTrapCpePollV2Traps.setStatus('current')
zhoneTrapCpeConnectionDown = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 1, 0, 1)).setObjects(("ZHONE-INTERFACE-TRANSLATION-MIB", "zhoneShelfNumber"), ("ZHONE-INTERFACE-TRANSLATION-MIB", "zhoneSlotNumber"), ("ZHONE-INTERFACE-TRANSLATION-MIB", "pportNumber"), ("ZHONE-INTERFACE-TRANSLATION-MIB", "subPortNumber"), ("ZHONE-COM-IP-REC-MIB", "ipIfVpi"), ("ZHONE-COM-IP-REC-MIB", "ipIfVci"), ("ZHONE-COM-IP-REC-MIB", "ipIfLgId"), ("ZHONE-COM-IP-REC-MIB", "ipIfAddr"))
if mibBuilder.loadTexts: zhoneTrapCpeConnectionDown.setStatus('current')
zhoneTrapCpeConnectionUp = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 1, 0, 2)).setObjects(("ZHONE-INTERFACE-TRANSLATION-MIB", "zhoneShelfNumber"), ("ZHONE-INTERFACE-TRANSLATION-MIB", "zhoneSlotNumber"), ("ZHONE-INTERFACE-TRANSLATION-MIB", "pportNumber"), ("ZHONE-INTERFACE-TRANSLATION-MIB", "subPortNumber"), ("ZHONE-COM-IP-REC-MIB", "ipIfVpi"), ("ZHONE-COM-IP-REC-MIB", "ipIfVci"), ("ZHONE-COM-IP-REC-MIB", "ipIfLgId"), ("ZHONE-COM-IP-REC-MIB", "ipIfAddr"))
if mibBuilder.loadTexts: zhoneTrapCpeConnectionUp.setStatus('current')
zhoneTrapConfigSync = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 2))
if mibBuilder.loadTexts: zhoneTrapConfigSync.setStatus('current')
zhoneTrapConfigSyncV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 2, 0))
if mibBuilder.loadTexts: zhoneTrapConfigSyncV2Traps.setStatus('current')
zhoneTrapConfigSyncChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 2, 0, 1)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneConfigSyncAction"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncPriority"))
if mibBuilder.loadTexts: zhoneTrapConfigSyncChange.setStatus('current')
zhoneTrapConfigSyncReset = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 2, 0, 2)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetInterval"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetCount"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetLastFtpTime"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetCurrentTime"))
if mibBuilder.loadTexts: zhoneTrapConfigSyncReset.setStatus('current')
zhoneTrapSnmp = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 4))
if mibBuilder.loadTexts: zhoneTrapSnmp.setStatus('current')
zhoneTrapSnmpV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 4, 0))
if mibBuilder.loadTexts: zhoneTrapSnmpV2Traps.setStatus('current')
zhoneTrapSnmpSATimeout = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 4, 0, 1))
if mibBuilder.loadTexts: zhoneTrapSnmpSATimeout.setStatus('current')
zhoneTrapCardRedundancy = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 5))
if mibBuilder.loadTexts: zhoneTrapCardRedundancy.setStatus('current')
zhoneCardRedundancyV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 5, 0))
if mibBuilder.loadTexts: zhoneCardRedundancyV2Traps.setStatus('current')
zhoneCardRedundancyStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 5, 0, 1)).setObjects(("ZHONE-INTERFACE-TRANSLATION-MIB", "zhoneShelfNumber"), ("ZHONE-INTERFACE-TRANSLATION-MIB", "zhoneSlotNumber"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyGroupId"))
if mibBuilder.loadTexts: zhoneCardRedundancyStatusChange.setStatus('current')
zhoneCardRedundancyUnsafe = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 5, 0, 2)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyOperStatus"))
if mibBuilder.loadTexts: zhoneCardRedundancyUnsafe.setStatus('current')
zhoneTrapBulkStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 6))
if mibBuilder.loadTexts: zhoneTrapBulkStatistics.setStatus('current')
zhoneBulkStatisticsV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 6, 0))
if mibBuilder.loadTexts: zhoneBulkStatisticsV2Traps.setStatus('current')
zhoneBulkStatisticsIntervalFailure = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 6, 0, 1)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneBulkStatsSystemOperStatus"))
if mibBuilder.loadTexts: zhoneBulkStatisticsIntervalFailure.setStatus('current')
zhoneTrapZms = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 7))
if mibBuilder.loadTexts: zhoneTrapZms.setStatus('current')
zhoneTrapZmsV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 8, 7, 0))
if mibBuilder.loadTexts: zhoneTrapZmsV2Traps.setStatus('current')
zhoneZmsBlockCliChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 8, 7, 0, 1)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneZmsBlockCli"))
if mibBuilder.loadTexts: zhoneZmsBlockCliChange.setStatus('deprecated')
zhoneCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 8))
zhoneGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 8, 1))
zhoneSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 8, 1, 1)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneZmsExists"), ("ZHONE-SYSTEM-MIB", "zhoneZmsConnectionStatus"), ("ZHONE-SYSTEM-MIB", "zhoneZmsIpAddress"), ("ZHONE-SYSTEM-MIB", "zhoneZmsBlockCli"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsCommunityName"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsSequenceNumber"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsResendSequenceNumber"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsAckedSequenceNumber"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsSeverity"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsAllowedCategories"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsAdminStatus"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneTrapsGatewayTrapServerAddress"), ("ZHONE-SYSTEM-MIB", "zhoneTrapVersion"), ("ZHONE-SYSTEM-MIB", "zhoneTrapFlags"), ("ZHONE-SYSTEM-MIB", "zhoneTrapShelf"), ("ZHONE-SYSTEM-MIB", "zhoneTrapSlot"), ("ZHONE-SYSTEM-MIB", "zhoneTrapPort"), ("ZHONE-SYSTEM-MIB", "zhoneTrapSubPort"), ("ZHONE-SYSTEM-MIB", "zhoneTrapProviderId"), ("ZHONE-SYSTEM-MIB", "zhoneTrapText"), ("ZHONE-SYSTEM-MIB", "zhoneTrapPortType"), ("ZHONE-SYSTEM-MIB", "zhoneTrapPortTypeExtension"), ("ZHONE-SYSTEM-MIB", "zhoneTrapAlarmAction"), ("ZHONE-SYSTEM-MIB", "zhoneTrapAlarmId"), ("ZHONE-SYSTEM-MIB", "zhoneTrapAlarmSeverity"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetInterval"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetCount"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetLastFtpTime"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncResetCurrentTime"), ("ZHONE-SYSTEM-MIB", "zhoneTrapUtcTime"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncExists"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncOverflow"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncPriority"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncAction"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncFileName"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncStatus"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncUserName"), ("ZHONE-SYSTEM-MIB", "zhoneConfigSyncUserPassword"), ("ZHONE-SYSTEM-MIB", "zhoneAdminCommunityAccess"), ("ZHONE-SYSTEM-MIB", "zhoneAdminCommunityAccessListIndex"), ("ZHONE-SYSTEM-MIB", "zhoneAdminCommunityRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneNextAdminAccessIndex"), ("ZHONE-SYSTEM-MIB", "zhoneSwCardSwFileName"), ("ZHONE-SYSTEM-MIB", "zhoneSwLoadRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSnmpErrorDisplayString"), ("ZHONE-SYSTEM-MIB", "zhoneSnmpErrorTime"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwLogin"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwPassword"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwPriLoadServer"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwSecLoadServer"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwRemoteFilePath"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwLocalFilePath"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwAdmin"), ("ZHONE-SYSTEM-MIB", "zhoneSysSwStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSysRebootAdmin"), ("ZHONE-SYSTEM-MIB", "zhoneSysRebootCardType"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardSpecificSwFileName"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardSwSpecificVers"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardUpgradeSwFileName"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardSwUpgradeVers"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardSwType"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardSwEnable"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardSwUpgradeEnable"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardLineType"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardAtmConfiguration"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardLineVoltage"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardVpiVciRange"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardInitString"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardWettingCurrent"), ("ZHONE-SYSTEM-MIB", "nextCardRedundancyGroupId"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyGroupId"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyWeight"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatCollectionRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatInstance"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyHoldActive"), ("ZHONE-SYSTEM-MIB", "zhoneAdminAccessRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneUserIdNext"), ("ZHONE-SYSTEM-MIB", "zhoneUserTotalFailedLogins"), ("ZHONE-SYSTEM-MIB", "zhoneUserName"), ("ZHONE-SYSTEM-MIB", "zhoneUserPassword"), ("ZHONE-SYSTEM-MIB", "zhoneUserPrompt"), ("ZHONE-SYSTEM-MIB", "zhoneUserAccessLevel"), ("ZHONE-SYSTEM-MIB", "zhoneUserAdmin"), ("ZHONE-SYSTEM-MIB", "zhoneUserLogins"), ("ZHONE-SYSTEM-MIB", "zhoneUserFailedLogins"), ("ZHONE-SYSTEM-MIB", "zhoneUserRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationNumShelves"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationShelvesArray"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationNumCards"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationIpAddress"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationAlternateIpAddress"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationDateAndTime"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationCountryRegion"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationRingSource"), ("ZHONE-SYSTEM-MIB", "zhoneSystemCurrentClockSource"), ("ZHONE-SYSTEM-MIB", "zhoneSystemSecondaryClockSource"), ("ZHONE-SYSTEM-MIB", "zhoneSystemClockEligibility"), ("ZHONE-SYSTEM-MIB", "zhoneSystemClockWeight"), ("ZHONE-SYSTEM-MIB", "zhoneSystemClockAvailabilityStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSystemClockTxClockMode"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConsoleLogging"), ("ZHONE-SYSTEM-MIB", "zhoneSystemRevertiveClockSource"), ("ZHONE-SYSTEM-MIB", "zhoneSystemVoiceBandwidthCheck"), ("ZHONE-SYSTEM-MIB", "zhoneAlarmLevelsEnabled"), ("ZHONE-SYSTEM-MIB", "zhoneSystemUserAuthMethod"), ("ZHONE-SYSTEM-MIB", "zhoneSystemRadiusAuthIndex"), ("ZHONE-SYSTEM-MIB", "zhoneSystemSecureFTP"), ("ZHONE-SYSTEM-MIB", "zhoneSystemWebInterface"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationOptions"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationReservedVlanIdStart"), ("ZHONE-SYSTEM-MIB", "zhoneSystemConfigurationReservedVlanIdCount"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyOperStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSysCardRedundancyRowStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSntpPrimaryServerIpAddr"), ("ZHONE-SYSTEM-MIB", "zhoneSntpSecondaryServerIpAddr"), ("ZHONE-SYSTEM-MIB", "zhoneSntpLocalTimeZone"), ("ZHONE-SYSTEM-MIB", "zhoneSntpDaylightSavingTime"), ("ZHONE-SYSTEM-MIB", "zhoneAdslPotsMaxActiveBypassRelays"), ("ZHONE-SYSTEM-MIB", "zhoneAdslPotsBypassRelayResetAll"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatsSystemCollectionEnabled"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatsSystemFtpAddress"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatsSystemFtpLogin"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatsSystemFtpPassword"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatsSystemFtpDirPath"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatsSystemOperStatus"), ("ZHONE-SYSTEM-MIB", "nextBulkStatCollectionId"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatEnabled"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatOID"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatIncludeChildren"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatsCollectionInterval"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationIndexNext"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationNtpServerAddress"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationEpgServerAddress"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationSettopBoxHeadEndServerAddress"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationDefaultChannelAddress"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationNoChannelAvailableAddress"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationEpgType"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationEpgPort"), ("ZHONE-SYSTEM-MIB", "zhoneVideoSystemConfigurationEpgFtpAddress"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecEnabled"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecFlushLog"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecCurrFtpServer"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecPrimFtpIpAddr"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecSecFtpIpAddr"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecFtpLogin"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecFtpPassword"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecFtpDirPath"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecRepPeriod"), ("ZHONE-SYSTEM-MIB", "zhoneCallDetailRecOperStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSoftwareUpgradeAction"), ("ZHONE-SYSTEM-MIB", "zhoneSoftwareUpgradeStatus"), ("ZHONE-SYSTEM-MIB", "zhoneSoftwareUpgradeTimeStarted"), ("ZHONE-SYSTEM-MIB", "zhoneSoftwareUpgradeTimeCompleted"), ("ZHONE-SYSTEM-MIB", "zhoneFileAction"), ("ZHONE-SYSTEM-MIB", "zhoneFileName1"), ("ZHONE-SYSTEM-MIB", "zhoneFileName2"), ("ZHONE-SYSTEM-MIB", "zhoneDirectoryPath"), ("ZHONE-SYSTEM-MIB", "zhoneDirectoryBytesAvailable"), ("ZHONE-SYSTEM-MIB", "zhoneBytesReservedForProvisioning"), ("ZHONE-SYSTEM-MIB", "zhoneFileDirectoryPath"), ("ZHONE-SYSTEM-MIB", "zhoneFileName"), ("ZHONE-SYSTEM-MIB", "zhoneFilePrivilege"), ("ZHONE-SYSTEM-MIB", "zhoneFileSize"), ("ZHONE-SYSTEM-MIB", "zhoneFileLastModified"), ("ZHONE-SYSTEM-MIB", "zhoneEnhancedStatusCode"), ("ZHONE-SYSTEM-MIB", "zhoneEnhancedStatusText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneSystemGroup = zhoneSystemGroup.setStatus('current')
zhoneDeprecatedSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 8, 1, 2)).setObjects(("ZHONE-SYSTEM-MIB", "zhonePrimaryClockSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneDeprecatedSystemGroup = zhoneDeprecatedSystemGroup.setStatus('deprecated')
zhoneTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 8, 1, 3)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneTrapCpeConnectionDown"), ("ZHONE-SYSTEM-MIB", "zhoneTrapCpeConnectionUp"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncChange"), ("ZHONE-SYSTEM-MIB", "zhoneTrapConfigSyncReset"), ("ZHONE-SYSTEM-MIB", "zhoneTrapSnmpSATimeout"), ("ZHONE-SYSTEM-MIB", "zhoneCardRedundancyStatusChange"), ("ZHONE-SYSTEM-MIB", "zhoneCardRedundancyUnsafe"), ("ZHONE-SYSTEM-MIB", "zhoneBulkStatisticsIntervalFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneTrapGroup = zhoneTrapGroup.setStatus('current')
zhoneDeprecatedTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 8, 1, 4)).setObjects(("ZHONE-SYSTEM-MIB", "zhoneZmsBlockCliChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneDeprecatedTrapGroup = zhoneDeprecatedTrapGroup.setStatus('deprecated')
mibBuilder.exportSymbols("ZHONE-SYSTEM-MIB", zhoneSysCardRedundancyWeight=zhoneSysCardRedundancyWeight, ZhoneLocalTimeZone=ZhoneLocalTimeZone, zhoneFileName2=zhoneFileName2, zhoneNextAdminAccessIndex=zhoneNextAdminAccessIndex, zhoneBulkStatCollectionEntry=zhoneBulkStatCollectionEntry, zhoneSysCardRedundancyHoldActive=zhoneSysCardRedundancyHoldActive, zhoneCardRedundancyStatusChange=zhoneCardRedundancyStatusChange, zhoneZmsConnectionStatus=zhoneZmsConnectionStatus, zhoneTrapZmsV2Traps=zhoneTrapZmsV2Traps, zhoneSnmpErrorTime=zhoneSnmpErrorTime, zhoneSysCardRedundancyGroupId=zhoneSysCardRedundancyGroupId, zhoneSysRebootAdmin=zhoneSysRebootAdmin, zhoneEnhancedStatusEntry=zhoneEnhancedStatusEntry, zhoneSystemConfigurationAlternateIpAddress=zhoneSystemConfigurationAlternateIpAddress, nextBulkStatCollectionId=nextBulkStatCollectionId, zhoneTrapCpeConnectionDown=zhoneTrapCpeConnectionDown, zhoneSystemGroup=zhoneSystemGroup, zhoneFileSize=zhoneFileSize, zhoneAdminAccessRowStatus=zhoneAdminAccessRowStatus, zhoneSystemConfiguration=zhoneSystemConfiguration, zhoneAdminCommunityAccess=zhoneAdminCommunityAccess, zhoneCallDetailRecCurrFtpServer=zhoneCallDetailRecCurrFtpServer, zhoneSysSwLocalFilePath=zhoneSysSwLocalFilePath, zhoneSnmpErrorTable=zhoneSnmpErrorTable, zhoneUserLogins=zhoneUserLogins, zhoneBulkStatCollectionRowStatus=zhoneBulkStatCollectionRowStatus, zhoneSystemConfigurationReservedVlanIdStart=zhoneSystemConfigurationReservedVlanIdStart, zhoneTrapSnmpV2Traps=zhoneTrapSnmpV2Traps, zhoneAdminAccessListIndex=zhoneAdminAccessListIndex, zhoneAdminAccessListIpAddress=zhoneAdminAccessListIpAddress, zhoneAlarmLevelsEnabled=zhoneAlarmLevelsEnabled, zhoneConfigSyncOverflow=zhoneConfigSyncOverflow, zhoneTrapConfigSyncResetInterval=zhoneTrapConfigSyncResetInterval, zhoneSoftwareDownload=zhoneSoftwareDownload, zhoneSnmpErrorDisplayString=zhoneSnmpErrorDisplayString, zhoneTrapFlags=zhoneTrapFlags, zhoneSysCardSwUpgradeVers=zhoneSysCardSwUpgradeVers, zhoneSysCardSwEnable=zhoneSysCardSwEnable, zhoneBulkStatsSystemFtpDirPath=zhoneBulkStatsSystemFtpDirPath, zhoneVideoSystemConfigurationTable=zhoneVideoSystemConfigurationTable, zhoneTrapsRowStatus=zhoneTrapsRowStatus, zhoneSoftwareUpgradeStatus=zhoneSoftwareUpgradeStatus, zhoneFileDirectoryPath=zhoneFileDirectoryPath, zhoneSystemConsoleLogging=zhoneSystemConsoleLogging, zhoneTrapCpeConnectionUp=zhoneTrapCpeConnectionUp, zhonePrimaryClockSource=zhonePrimaryClockSource, zhoneSysSwSecLoadServer=zhoneSysSwSecLoadServer, zhoneFileLastModified=zhoneFileLastModified, cpeMgr=cpeMgr, zhoneSysCardInitString=zhoneSysCardInitString, zhoneSystemUserAuthMethod=zhoneSystemUserAuthMethod, zhoneTrapPort=zhoneTrapPort, zhoneVideoSystemConfigurationEntry=zhoneVideoSystemConfigurationEntry, zhoneZmsBlockCliChange=zhoneZmsBlockCliChange, zhoneTrapsAdminStatus=zhoneTrapsAdminStatus, zhoneSystemPersistentLogging=zhoneSystemPersistentLogging, zhoneSysCardSwUpgradeEnable=zhoneSysCardSwUpgradeEnable, zhoneTrapsResendSequenceNumber=zhoneTrapsResendSequenceNumber, zhoneSystemClockEntry=zhoneSystemClockEntry, zhoneSysCardUpgradeSwFileName=zhoneSysCardUpgradeSwFileName, zhoneUserAccessLevel=zhoneUserAccessLevel, zhoneTrapConfigSyncResetCount=zhoneTrapConfigSyncResetCount, zhoneSystemSecondaryClockSource=zhoneSystemSecondaryClockSource, zhoneGroups=zhoneGroups, zhoneUserFailedLogins=zhoneUserFailedLogins, zhoneFilePrivilege=zhoneFilePrivilege, zhoneVideoSystemConfigurationIndexNext=zhoneVideoSystemConfigurationIndexNext, zhoneSysCardSpecificSwFileName=zhoneSysCardSpecificSwFileName, zhoneSysCardVpiVciRange=zhoneSysCardVpiVciRange, zhoneDirectoryPath=zhoneDirectoryPath, zhoneSysCardSoftwareConfigTable=zhoneSysCardSoftwareConfigTable, zhoneTrapSlot=zhoneTrapSlot, zhoneSystemVoiceBandwidthCheck=zhoneSystemVoiceBandwidthCheck, nextCardRedundancyGroupId=nextCardRedundancyGroupId, zhoneAdminCommunityName=zhoneAdminCommunityName, zhoneTrapsSeverity=zhoneTrapsSeverity, zhoneAdminAccessListEntry=zhoneAdminAccessListEntry, zhoneCallDetailRecFlushLog=zhoneCallDetailRecFlushLog, zhoneSnmpErrorIpAddress=zhoneSnmpErrorIpAddress, zhoneSysCardWettingCurrent=zhoneSysCardWettingCurrent, zhoneSoftwareReboot=zhoneSoftwareReboot, zhoneSysCardRowStatus=zhoneSysCardRowStatus, zhoneUser=zhoneUser, zhoneSystemCurrentClockSource=zhoneSystemCurrentClockSource, zhoneSoftwareLoadTable=zhoneSoftwareLoadTable, zhoneSystemModule=zhoneSystemModule, zhoneCallDetailRecSecFtpIpAddr=zhoneCallDetailRecSecFtpIpAddr, zhoneBulkStatEnabled=zhoneBulkStatEnabled, zhoneSoftwareUpgradeTimeStarted=zhoneSoftwareUpgradeTimeStarted, zhoneBulkStatisticsIntervalFailure=zhoneBulkStatisticsIntervalFailure, zhoneTrapsEntry=zhoneTrapsEntry, zhoneSystemConfigurationCountryRegion=zhoneSystemConfigurationCountryRegion, zhoneSysRebootCardType=zhoneSysRebootCardType, zhoneBulkStatOID=zhoneBulkStatOID, zhoneSwCardSwFileName=zhoneSwCardSwFileName, zhoneTrapText=zhoneTrapText, zhoneTrapConfigSyncResetLastFtpTime=zhoneTrapConfigSyncResetLastFtpTime, zhoneSoftwareUpgrade=zhoneSoftwareUpgrade, zhoneBulkStatsSystemFtpLogin=zhoneBulkStatsSystemFtpLogin, zhoneTrapCardRedundancy=zhoneTrapCardRedundancy, zhoneBulkStatisticsV2Traps=zhoneBulkStatisticsV2Traps, zhoneSntpLocalTimeZone=zhoneSntpLocalTimeZone, zhoneFileName=zhoneFileName, zhoneEnhancedStatus=zhoneEnhancedStatus, zhoneTrapZms=zhoneTrapZms, zhoneUserIdNext=zhoneUserIdNext, PYSNMP_MODULE_ID=zhoneSystemModule, zhoneConfigSyncPriority=zhoneConfigSyncPriority, zhoneVideoSystemConfigurationNtpServerAddress=zhoneVideoSystemConfigurationNtpServerAddress, zhoneVideoSystemConfigurationDefaultChannelAddress=zhoneVideoSystemConfigurationDefaultChannelAddress, zhoneUserPassword=zhoneUserPassword, zhoneAdslPotsBypassRelay=zhoneAdslPotsBypassRelay, zhoneSystemConfigurationNumShelves=zhoneSystemConfigurationNumShelves, zhoneBulkStatIncludeChildren=zhoneBulkStatIncludeChildren, zhoneVideoSystemConfigurationEpgType=zhoneVideoSystemConfigurationEpgType, zhoneCallDetailRecFtpLogin=zhoneCallDetailRecFtpLogin, zhoneSystemClockTxClockMode=zhoneSystemClockTxClockMode, zhoneEnhancedStatusCode=zhoneEnhancedStatusCode, zhoneTrapConfigSyncReset=zhoneTrapConfigSyncReset, zhoneTrapsSequenceNumber=zhoneTrapsSequenceNumber, zhoneSysCardSoftwareConfigEntry=zhoneSysCardSoftwareConfigEntry, zhoneVideoSystemConfigurationEpgPort=zhoneVideoSystemConfigurationEpgPort, zhoneSystemConfigurationShelvesArray=zhoneSystemConfigurationShelvesArray, zhoneSystemClockAvailabilityStatus=zhoneSystemClockAvailabilityStatus, zhoneCardRedundancyV2Traps=zhoneCardRedundancyV2Traps, zhoneTrapSubPort=zhoneTrapSubPort, zhoneCardRedundancy=zhoneCardRedundancy, zhoneSystemConfigurationRingSource=zhoneSystemConfigurationRingSource, zhoneSystemConfigurationReservedVlanIdCount=zhoneSystemConfigurationReservedVlanIdCount, zhoneVideoSystemConfigurationIndex=zhoneVideoSystemConfigurationIndex, zhoneVideoSystemConfigurationEpgServerAddress=zhoneVideoSystemConfigurationEpgServerAddress, zhoneSystemConfigurationOptions=zhoneSystemConfigurationOptions, zhoneEnhancedStatusTable=zhoneEnhancedStatusTable, zhoneVideoSystemConfigurationNoChannelAvailableAddress=zhoneVideoSystemConfigurationNoChannelAvailableAddress, zhoneSystemOutletTemperatureHighThreshold=zhoneSystemOutletTemperatureHighThreshold, zhoneUserPrompt=zhoneUserPrompt, zhoneAdminCommunityAccessListIndex=zhoneAdminCommunityAccessListIndex, zhoneSystemSnmpVersion=zhoneSystemSnmpVersion, zhoneSysCardLineType=zhoneSysCardLineType, zhoneBulkStatCollection=zhoneBulkStatCollection, zhoneFileSystem=zhoneFileSystem, zhoneZmsExists=zhoneZmsExists, zhoneCompliances=zhoneCompliances, zhoneSystemClockWeight=zhoneSystemClockWeight, zhoneTrapCpePollV2Traps=zhoneTrapCpePollV2Traps, zhoneSntpConfiguration=zhoneSntpConfiguration, zhoneDeprecatedSystemGroup=zhoneDeprecatedSystemGroup, zhoneSntpPrimaryServerIpAddr=zhoneSntpPrimaryServerIpAddr, zhoneEnhancedStatusText=zhoneEnhancedStatusText, zhoneTrapsAllowedCategories=zhoneTrapsAllowedCategories, zhoneConfigSyncUserName=zhoneConfigSyncUserName, zhoneBulkStatsSystemFtpPassword=zhoneBulkStatsSystemFtpPassword, zhoneBulkStatCollectionTable=zhoneBulkStatCollectionTable, zhoneAdminCommunityTable=zhoneAdminCommunityTable, zhoneTrapsDestination=zhoneTrapsDestination, zhoneBulkStatInstance=zhoneBulkStatInstance, zhoneFileAction=zhoneFileAction, zhoneTrapShelf=zhoneTrapShelf, ZhoneRedundancyWeight=ZhoneRedundancyWeight, zhoneSysSwPriLoadServer=zhoneSysSwPriLoadServer, zhoneSystemConfigurationNumCards=zhoneSystemConfigurationNumCards, zhoneSysCardSwSpecificVers=zhoneSysCardSwSpecificVers, zhoneSysCardRedundancyEntry=zhoneSysCardRedundancyEntry, zhoneTrapConfigSyncResetCurrentTime=zhoneTrapConfigSyncResetCurrentTime, zhoneSoftwareUpgradeAction=zhoneSoftwareUpgradeAction, zhoneSoftwareUpgradeTimeCompleted=zhoneSoftwareUpgradeTimeCompleted, zhoneTraps=zhoneTraps, zhoneSysCardAtmConfiguration=zhoneSysCardAtmConfiguration, zhoneVideoSystemConfigurationEpgFtpAddress=zhoneVideoSystemConfigurationEpgFtpAddress, zhoneSysCardRedundancyTable=zhoneSysCardRedundancyTable, zhoneSystemSecureFTP=zhoneSystemSecureFTP, zhoneAdminAccessListTable=zhoneAdminAccessListTable, zhoneSysCardLineVoltage=zhoneSysCardLineVoltage, zhoneConfigSyncUserPassword=zhoneConfigSyncUserPassword, zhoneBulkStatsSystemConfiguration=zhoneBulkStatsSystemConfiguration, zhoneBytesReservedForProvisioning=zhoneBytesReservedForProvisioning, zhoneTrapVersion=zhoneTrapVersion, zhoneAdminCommunityEntry=zhoneAdminCommunityEntry, zhoneTrapConfigSyncChange=zhoneTrapConfigSyncChange, zhoneSysCardRedundancyOperStatus=zhoneSysCardRedundancyOperStatus, zhoneTrapProviderId=zhoneTrapProviderId, zhoneTrapAlarmId=zhoneTrapAlarmId, zhoneVideoSystemConfiguration=zhoneVideoSystemConfiguration, zhoneAdminCommunityRowStatus=zhoneAdminCommunityRowStatus, zhoneConfigSync=zhoneConfigSync, zhoneTrapCpePoll=zhoneTrapCpePoll, zhoneCallDetailRecEnabled=zhoneCallDetailRecEnabled, zhoneTrapPortType=zhoneTrapPortType, zhoneTrapAlarmSeverity=zhoneTrapAlarmSeverity, zhoneUserRowStatus=zhoneUserRowStatus, zhoneConfigSyncStatus=zhoneConfigSyncStatus, zhoneSystemClockTable=zhoneSystemClockTable, zhoneBulkStatsSystemFtpAddress=zhoneBulkStatsSystemFtpAddress, zhoneConfigSyncFileName=zhoneConfigSyncFileName, zhoneEnhancedStatusIndex=zhoneEnhancedStatusIndex, zhoneUserId=zhoneUserId, zhoneSysSwRemoteFilePath=zhoneSysSwRemoteFilePath, zhoneBulkStatsSystemOperStatus=zhoneBulkStatsSystemOperStatus, zhoneBulkStatCollectionId=zhoneBulkStatCollectionId, zhoneVideoSystemConfigurationSettopBoxHeadEndServerAddress=zhoneVideoSystemConfigurationSettopBoxHeadEndServerAddress, zhoneSystemWebInterface=zhoneSystemWebInterface, zhoneSysSwPassword=zhoneSysSwPassword, zhoneSnmpErrorEntry=zhoneSnmpErrorEntry, zhoneSntpSecondaryServerIpAddr=zhoneSntpSecondaryServerIpAddr, zhoneBulkStatsSystemCollectionEnabled=zhoneBulkStatsSystemCollectionEnabled, zhoneTrapConfigSyncV2Traps=zhoneTrapConfigSyncV2Traps, zhoneSnmpErrorReqId=zhoneSnmpErrorReqId, zhoneUserAdmin=zhoneUserAdmin, zhoneUserTable=zhoneUserTable, zhoneZmsIpAddress=zhoneZmsIpAddress, zhoneTrapBulkStatistics=zhoneTrapBulkStatistics, zhoneTrapGroup=zhoneTrapGroup, zhoneSwLoadRowStatus=zhoneSwLoadRowStatus, zhoneFileIndex=zhoneFileIndex, zhoneSysCardSwType=zhoneSysCardSwType, zhoneTrapPortTypeExtension=zhoneTrapPortTypeExtension, zhoneCallDetailRecOperStatus=zhoneCallDetailRecOperStatus, zhoneCallDetailRecFtpDirPath=zhoneCallDetailRecFtpDirPath, zhoneFileTable=zhoneFileTable, zhoneAdslPotsBypassRelayResetAll=zhoneAdslPotsBypassRelayResetAll, zhoneTrapsTable=zhoneTrapsTable, zhoneTrapUtcTime=zhoneTrapUtcTime, zhoneBulkStatsCollectionInterval=zhoneBulkStatsCollectionInterval, zhoneFileEntry=zhoneFileEntry, zhoneSystemRevertiveClockSource=zhoneSystemRevertiveClockSource, zhoneZms=zhoneZms, zhoneSntpDaylightSavingStart=zhoneSntpDaylightSavingStart, zhoneCallDetailRecFtpPassword=zhoneCallDetailRecFtpPassword, zhoneUserEntry=zhoneUserEntry, zhoneTrapSnmp=zhoneTrapSnmp, zhoneCallDetailRecRepPeriod=zhoneCallDetailRecRepPeriod, zhoneDirectoryBytesAvailable=zhoneDirectoryBytesAvailable, zhoneVideoSystemConfigurationRowStatus=zhoneVideoSystemConfigurationRowStatus, zhoneAdslPotsMaxActiveBypassRelays=zhoneAdslPotsMaxActiveBypassRelays, zhoneTrapConfigSync=zhoneTrapConfigSync, zhoneSystemOutletTemperatureLowThreshold=zhoneSystemOutletTemperatureLowThreshold, zhoneTrapsCommunityName=zhoneTrapsCommunityName, zhoneSystemConfigurationIpAddress=zhoneSystemConfigurationIpAddress, zhoneFileName1=zhoneFileName1, zhoneTrapSnmpSATimeout=zhoneTrapSnmpSATimeout, zhoneTrapsAckedSequenceNumber=zhoneTrapsAckedSequenceNumber, zhoneConfigSyncExists=zhoneConfigSyncExists, zhoneSysSwAdmin=zhoneSysSwAdmin, zhoneSntpDaylightSavingTime=zhoneSntpDaylightSavingTime, zhoneCallDetailRecConfig=zhoneCallDetailRecConfig, zhoneSysCardRedundancyRowStatus=zhoneSysCardRedundancyRowStatus, zhoneZmsBlockCli=zhoneZmsBlockCli, zhoneConfigSyncAction=zhoneConfigSyncAction, zhoneSystemConfigurationDateAndTime=zhoneSystemConfigurationDateAndTime, zhoneCallDetailRecPrimFtpIpAddr=zhoneCallDetailRecPrimFtpIpAddr, zhoneSystemClockEligibility=zhoneSystemClockEligibility, zhoneDeprecatedTrapGroup=zhoneDeprecatedTrapGroup, zhoneSysSwLogin=zhoneSysSwLogin, zhoneCardRedundancyUnsafe=zhoneCardRedundancyUnsafe)
mibBuilder.exportSymbols("ZHONE-SYSTEM-MIB", zhoneTrapAlarmAction=zhoneTrapAlarmAction, zhoneUserTotalFailedLogins=zhoneUserTotalFailedLogins, zhoneAdmin=zhoneAdmin, zhoneSysSwStatus=zhoneSysSwStatus, zhoneSwCardType=zhoneSwCardType, zhoneSntpDaylightSavingEnd=zhoneSntpDaylightSavingEnd, zhoneUserName=zhoneUserName, zhoneSystemRadiusAuthIndex=zhoneSystemRadiusAuthIndex, zhoneTrapsGatewayTrapServerAddress=zhoneTrapsGatewayTrapServerAddress, zhoneSoftwareLoadEntry=zhoneSoftwareLoadEntry)
