#
# PySNMP MIB module OLD-CISCO-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OLD-CISCO-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:08:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
local, = mibBuilder.importSymbols("CISCO-SMI", "local")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, MibIdentifier, Counter64, NotificationType, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, Bits, Integer32, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "MibIdentifier", "Counter64", "NotificationType", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "Bits", "Integer32", "ObjectIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
lsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 2, 1))
romId = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: romId.setStatus('mandatory')
whyReload = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: whyReload.setStatus('mandatory')
hostName = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostName.setStatus('mandatory')
domainName = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainName.setStatus('mandatory')
authAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: authAddr.setStatus('mandatory')
bootHost = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootHost.setStatus('mandatory')
netConfigAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 48), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netConfigAddr.setStatus('mandatory')
netConfigName = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netConfigName.setStatus('mandatory')
netConfigSet = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 50), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: netConfigSet.setStatus('mandatory')
hostConfigAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 51), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostConfigAddr.setStatus('obsolete')
hostConfigName = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostConfigName.setStatus('obsolete')
hostConfigSet = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 53), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hostConfigSet.setStatus('obsolete')
writeMem = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 54), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: writeMem.setStatus('mandatory')
writeNet = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 55), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: writeNet.setStatus('mandatory')
ciscoContactInfo = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 61), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoContactInfo.setStatus('mandatory')
netConfigProto = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netConfigProto.setStatus('mandatory')
hostConfigProto = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostConfigProto.setStatus('mandatory')
sysConfigAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 72), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysConfigAddr.setStatus('mandatory')
sysConfigName = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 73), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysConfigName.setStatus('mandatory')
sysConfigProto = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tftp", 1), ("rom", 2), ("flash", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysConfigProto.setStatus('mandatory')
sysClearARP = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 75), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: sysClearARP.setStatus('mandatory')
sysClearInt = MibScalar((1, 3, 6, 1, 4, 1, 9, 2, 1, 76), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: sysClearInt.setStatus('mandatory')
mibBuilder.exportSymbols("OLD-CISCO-SYSTEM-MIB", netConfigName=netConfigName, hostConfigProto=hostConfigProto, netConfigAddr=netConfigAddr, ciscoContactInfo=ciscoContactInfo, writeNet=writeNet, netConfigProto=netConfigProto, whyReload=whyReload, romId=romId, sysClearARP=sysClearARP, bootHost=bootHost, lsystem=lsystem, authAddr=authAddr, sysConfigAddr=sysConfigAddr, hostName=hostName, sysClearInt=sysClearInt, hostConfigAddr=hostConfigAddr, hostConfigName=hostConfigName, sysConfigProto=sysConfigProto, netConfigSet=netConfigSet, domainName=domainName, hostConfigSet=hostConfigSet, writeMem=writeMem, sysConfigName=sysConfigName)
