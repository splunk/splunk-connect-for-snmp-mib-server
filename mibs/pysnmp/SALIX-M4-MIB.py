#
# PySNMP MIB module SALIX-M4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SALIX-M4-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:52:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
atmfM4CellProtoHistIndex, atmfM4TcAdaptorEntry, atmfM4TrapAlarmSeverity, atmfM4EquipHolderEntry, atmfM4PlugInUnitEntry = mibBuilder.importSymbols("ATM-FORUM-M4-MIB", "atmfM4CellProtoHistIndex", "atmfM4TcAdaptorEntry", "atmfM4TrapAlarmSeverity", "atmfM4EquipHolderEntry", "atmfM4PlugInUnitEntry")
entPhysicalIndex, PhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "PhysicalIndex")
hrSWInstalledIndex, = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "hrSWInstalledIndex")
salixGeneric, = mibBuilder.importSymbols("SALIX-MIB", "salixGeneric")
SalixPlugInUnitType, = mibBuilder.importSymbols("SALIX-PRODUCT-PLUGIN-MIB", "SalixPlugInUnitType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, TimeTicks, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, NotificationType, Unsigned32, ObjectIdentity, MibIdentifier, Integer32, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "NotificationType", "Unsigned32", "ObjectIdentity", "MibIdentifier", "Integer32", "Counter32", "IpAddress")
DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
salixM4MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2158, 2, 5))
if mibBuilder.loadTexts: salixM4MIB.setLastUpdated('9810130000Z')
if mibBuilder.loadTexts: salixM4MIB.setOrganization('SALIX Technologies')
salixM4MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1))
salixM4MIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 5, 2))
salixM4MIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 5, 3))
salixM4MIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 5, 0))
salixAtmfM4EquipHolderTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 2), )
if mibBuilder.loadTexts: salixAtmfM4EquipHolderTable.setStatus('current')
salixAtmfM4EquipHolderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 2, 1), )
atmfM4EquipHolderEntry.registerAugmentions(("SALIX-M4-MIB", "salixAtmfM4EquipHolderEntry"))
salixAtmfM4EquipHolderEntry.setIndexNames(*atmfM4EquipHolderEntry.getIndexNames())
if mibBuilder.loadTexts: salixAtmfM4EquipHolderEntry.setStatus('current')
salixAtmfM4EquipHolderDownloadState = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("success", 3), ("aborted", 4), ("failed", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4EquipHolderDownloadState.setStatus('current')
salixAtmfM4EquipHolderDownloadStatusMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4EquipHolderDownloadStatusMessage.setStatus('current')
salixAtmfM4PlugInUnitTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3), )
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitTable.setStatus('current')
salixAtmfM4PlugInUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1), )
atmfM4PlugInUnitEntry.registerAugmentions(("SALIX-M4-MIB", "salixAtmfM4PlugInUnitEntry"))
salixAtmfM4PlugInUnitEntry.setIndexNames(*atmfM4PlugInUnitEntry.getIndexNames())
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitEntry.setStatus('current')
salixAtmfM4PlugInUnitSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitSerialNumber.setStatus('current')
salixAtmfM4PlugInUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 2), SalixPlugInUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitType.setStatus('current')
salixAtmfM4PlugInUnitReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("cold", 1), ("warm", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitReset.setStatus('current')
salixAtmfM4PlugInUnitHwRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitHwRevision.setStatus('current')
salixAtmfM4PlugInUnitLedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitLedStatus.setStatus('current')
salixAtmfM4PlugInUnitRedundancyConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("working", 1), ("protect", 2), ("none", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyConfig.setStatus('current')
salixAtmfM4PlugInUnitRedundancyPartnerModule = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 7), PhysicalIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyPartnerModule.setStatus('current')
salixAtmfM4PlugInUnitRedundancyPairStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("created", 2), ("configured", 3), ("active", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyPairStatus.setStatus('current')
salixAtmfM4PlugInUnitRedundancyStatusMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyStatusMessage.setStatus('current')
class SalixAtmfM4SwitchoverReasons(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("administrative", 1), ("pluginRemoved", 2), ("failure", 3))

salixAtmfM4TrapSwitchoverReason = MibScalar((1, 3, 6, 1, 4, 1, 2158, 2, 5, 1, 4), SalixAtmfM4SwitchoverReasons()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: salixAtmfM4TrapSwitchoverReason.setStatus('current')
salixAtmfM4HwSwDownloadSuccess = NotificationType((1, 3, 6, 1, 4, 1, 2158, 2, 5, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalIndex"), ("HOST-RESOURCES-MIB", "hrSWInstalledIndex"), ("ATM-FORUM-M4-MIB", "atmfM4TrapAlarmSeverity"))
if mibBuilder.loadTexts: salixAtmfM4HwSwDownloadSuccess.setStatus('current')
salixAtmfM4PlugInUnitRedundancyPairCreated = NotificationType((1, 3, 6, 1, 4, 1, 2158, 2, 5, 0, 2)).setObjects(("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"), ("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"))
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyPairCreated.setStatus('current')
salixAtmfM4PlugInUnitRedundancyPairDestroyed = NotificationType((1, 3, 6, 1, 4, 1, 2158, 2, 5, 0, 3)).setObjects(("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"), ("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"))
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyPairDestroyed.setStatus('current')
salixAtmfM4PlugInUnitRedundancyPairSwitchover = NotificationType((1, 3, 6, 1, 4, 1, 2158, 2, 5, 0, 4)).setObjects(("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"), ("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"), ("SALIX-M4-MIB", "salixAtmfM4TrapSwitchoverReason"))
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyPairSwitchover.setStatus('current')
salixAtmfM4PlugInUnitRedundancyPairStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 2158, 2, 5, 0, 5)).setObjects(("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"), ("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyConfig"), ("SALIX-M4-MIB", "salixAtmfM4PlugInUnitRedundancyPairStatus"))
if mibBuilder.loadTexts: salixAtmfM4PlugInUnitRedundancyPairStatusChange.setStatus('current')
salixM4Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 5, 3, 1))
salixM4Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 5, 3, 2))
salixM4Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2158, 2, 5, 3, 1, 1)).setObjects(("SALIX-M4-MIB", "salixAtmfM4EquipHolderDownloadState"), ("SALIX-M4-MIB", "salixAtmfM4EquipHolderDownloadStatusMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixM4Group = salixM4Group.setStatus('current')
salixM4Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2158, 2, 5, 3, 2, 1)).setObjects(("SALIX-M4-MIB", "salixM4Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixM4Compliance = salixM4Compliance.setStatus('current')
mibBuilder.exportSymbols("SALIX-M4-MIB", salixAtmfM4EquipHolderDownloadState=salixAtmfM4EquipHolderDownloadState, salixAtmfM4EquipHolderDownloadStatusMessage=salixAtmfM4EquipHolderDownloadStatusMessage, salixM4MIBTrapPrefix=salixM4MIBTrapPrefix, salixAtmfM4EquipHolderEntry=salixAtmfM4EquipHolderEntry, salixM4MIB=salixM4MIB, SalixAtmfM4SwitchoverReasons=SalixAtmfM4SwitchoverReasons, salixM4Group=salixM4Group, salixAtmfM4PlugInUnitRedundancyConfig=salixAtmfM4PlugInUnitRedundancyConfig, salixAtmfM4TrapSwitchoverReason=salixAtmfM4TrapSwitchoverReason, salixM4Compliances=salixM4Compliances, salixAtmfM4PlugInUnitRedundancyPairStatusChange=salixAtmfM4PlugInUnitRedundancyPairStatusChange, salixAtmfM4PlugInUnitRedundancyPairStatus=salixAtmfM4PlugInUnitRedundancyPairStatus, salixAtmfM4PlugInUnitHwRevision=salixAtmfM4PlugInUnitHwRevision, salixAtmfM4PlugInUnitRedundancyPartnerModule=salixAtmfM4PlugInUnitRedundancyPartnerModule, salixM4Compliance=salixM4Compliance, salixM4MIBTraps=salixM4MIBTraps, salixAtmfM4PlugInUnitRedundancyStatusMessage=salixAtmfM4PlugInUnitRedundancyStatusMessage, salixAtmfM4PlugInUnitTable=salixAtmfM4PlugInUnitTable, salixAtmfM4PlugInUnitRedundancyPairDestroyed=salixAtmfM4PlugInUnitRedundancyPairDestroyed, PYSNMP_MODULE_ID=salixM4MIB, salixAtmfM4PlugInUnitRedundancyPairSwitchover=salixAtmfM4PlugInUnitRedundancyPairSwitchover, salixAtmfM4PlugInUnitType=salixAtmfM4PlugInUnitType, salixM4MIBCompliance=salixM4MIBCompliance, salixM4MIBObjects=salixM4MIBObjects, salixAtmfM4PlugInUnitEntry=salixAtmfM4PlugInUnitEntry, salixAtmfM4PlugInUnitSerialNumber=salixAtmfM4PlugInUnitSerialNumber, salixAtmfM4PlugInUnitLedStatus=salixAtmfM4PlugInUnitLedStatus, salixAtmfM4EquipHolderTable=salixAtmfM4EquipHolderTable, salixAtmfM4HwSwDownloadSuccess=salixAtmfM4HwSwDownloadSuccess, salixAtmfM4PlugInUnitReset=salixAtmfM4PlugInUnitReset, salixAtmfM4PlugInUnitRedundancyPairCreated=salixAtmfM4PlugInUnitRedundancyPairCreated, salixM4Groups=salixM4Groups)
