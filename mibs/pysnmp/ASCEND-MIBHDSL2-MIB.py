#
# PySNMP MIB module ASCEND-MIBHDSL2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBHDSL2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:11:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter32, MibIdentifier, Integer32, IpAddress, NotificationType, Gauge32, Bits, ModuleIdentity, Unsigned32, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "MibIdentifier", "Integer32", "IpAddress", "NotificationType", "Gauge32", "Bits", "ModuleIdentity", "Unsigned32", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibhdsl2DslLineStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 159))
mibhdsl2DslLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 159, 1), )
if mibBuilder.loadTexts: mibhdsl2DslLineStatusTable.setStatus('mandatory')
mibhdsl2DslLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1), ).setIndexNames((0, "ASCEND-MIBHDSL2-MIB", "hdsl2DslLineStatus-Shelf-o"), (0, "ASCEND-MIBHDSL2-MIB", "hdsl2DslLineStatus-Slot-o"), (0, "ASCEND-MIBHDSL2-MIB", "hdsl2DslLineStatus-Item-o"))
if mibBuilder.loadTexts: mibhdsl2DslLineStatusEntry.setStatus('mandatory')
hdsl2DslLineStatus_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 1), Integer32()).setLabel("hdsl2DslLineStatus-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_Shelf_o.setStatus('mandatory')
hdsl2DslLineStatus_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 2), Integer32()).setLabel("hdsl2DslLineStatus-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_Slot_o.setStatus('mandatory')
hdsl2DslLineStatus_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 3), Integer32()).setLabel("hdsl2DslLineStatus-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_Item_o.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("hdsl2DslLineStatus-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalAddress_Shelf.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("hdsl2DslLineStatus-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalAddress_Slot.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 6), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalAddress_ItemNumber.setStatus('mandatory')
hdsl2DslLineStatus_LineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("doesNotExist", 1), ("disabled", 2), ("active", 3)))).setLabel("hdsl2DslLineStatus-LineState").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_LineState.setStatus('mandatory')
hdsl2DslLineStatus_SparePhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("hdsl2DslLineStatus-SparePhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2DslLineStatus_SparePhysicalAddress_Shelf.setStatus('mandatory')
hdsl2DslLineStatus_SparePhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("hdsl2DslLineStatus-SparePhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2DslLineStatus_SparePhysicalAddress_Slot.setStatus('mandatory')
hdsl2DslLineStatus_SparePhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 10), Integer32()).setLabel("hdsl2DslLineStatus-SparePhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2DslLineStatus_SparePhysicalAddress_ItemNumber.setStatus('mandatory')
hdsl2DslLineStatus_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5)))).setLabel("hdsl2DslLineStatus-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_SparingState.setStatus('mandatory')
hdsl2DslLineStatus_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("hdsl2DslLineStatus-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_SparingChangeReason.setStatus('mandatory')
hdsl2DslLineStatus_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 13), Integer32()).setLabel("hdsl2DslLineStatus-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_SparingChangeTime.setStatus('mandatory')
hdsl2DslLineStatus_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 14), Integer32()).setLabel("hdsl2DslLineStatus-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_SparingChangeCounter.setStatus('mandatory')
hdsl2DslLineStatus_VpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vpi01Vci321023", 6), ("vpi03Vci32511", 1), ("vpi07Vci32255", 2), ("vpi015Vci32127", 3), ("vpi031Vci3263", 4), ("notApplicable", 5)))).setLabel("hdsl2DslLineStatus-VpiVciRange").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_VpiVciRange.setStatus('mandatory')
hdsl2DslLineStatus_VpSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 16), Integer32()).setLabel("hdsl2DslLineStatus-VpSwitchingVpi").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_VpSwitchingVpi.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_IfGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 17), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatus-IfGroupIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_IfGroupIndex.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_UnitType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("coe", 1), ("cpe", 2)))).setLabel("hdsl2DslLineStatus-PhysicalStatus-UnitType").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_UnitType.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_InterfaceType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("gShdsl", 2), ("hdsl2", 3)))).setLabel("hdsl2DslLineStatus-PhysicalStatus-InterfaceType").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_InterfaceType.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_DevLineState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("portUp", 2), ("test", 3), ("startupHandshake", 4), ("startupTraining", 5), ("startupDownload", 6), ("idle", 7), ("down", 8), ("outOfService", 9), ("unknown", 10), ("analogLoopback", 11), ("digitalLoopback", 12)))).setLabel("hdsl2DslLineStatus-PhysicalStatus-DevLineState").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_DevLineState.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_OperationalRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 21), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatus-OperationalRate").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_OperationalRate.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_FirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 22), DisplayString()).setLabel("hdsl2DslLineStatus-PhysicalStatus-FirmwareVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_FirmwareVer.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_HardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 23), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatus-HardwareVer").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_HardwareVer.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatus_NetworkType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("hdsl2DslLineStatus-PhysicalStatus-NetworkType").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatus_NetworkType.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Days = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 24), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-LineUpTimer-Days").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Days.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Hours = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 25), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-LineUpTimer-Hours").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Hours.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Minutes = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 26), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-LineUpTimer-Minutes").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Minutes.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_RxSignalPresent = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2))).clone(namedValues=NamedValues(("yes", 3), ("no", 2)))).setLabel("hdsl2DslLineStatus-PhysicalStatistic-RxSignalPresent").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_RxSignalPresent.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_LineQuality = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 28), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-LineQuality").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_LineQuality.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_UpDwnCntr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 29), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-UpDwnCntr").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_UpDwnCntr.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_SelfTest = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passed", 1), ("selfTestFailed", 2), ("localLoopBackFailed", 3)))).setLabel("hdsl2DslLineStatus-PhysicalStatistic-SelfTest").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_SelfTest.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_TransmitPower = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 31), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-TransmitPower").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_TransmitPower.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_FramerSyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1))).clone(namedValues=NamedValues(("inSync", 2), ("outOfSync", 1)))).setLabel("hdsl2DslLineStatus-PhysicalStatistic-FramerSyncStatus").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_FramerSyncStatus.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_CodeViolations = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 33), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-CodeViolations").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_CodeViolations.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_ErroredSecond = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 34), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-ErroredSecond").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_ErroredSecond.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_SeverelyErroredSecond = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 35), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-SeverelyErroredSecond").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_SeverelyErroredSecond.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_LoswSecond = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 36), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-LoswSecond").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_LoswSecond.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_UnavailableSecond = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 37), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-UnavailableSecond").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_UnavailableSecond.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_LoopAttenuation = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 38), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-LoopAttenuation").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_LoopAttenuation.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_Snr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 40), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-Snr").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_Snr.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_SturLoopAttenuation = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 41), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-SturLoopAttenuation").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_SturLoopAttenuation.setStatus('mandatory')
hdsl2DslLineStatus_PhysicalStatistic_SturSnr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 42), Integer32()).setLabel("hdsl2DslLineStatus-PhysicalStatistic-SturSnr").setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2DslLineStatus_PhysicalStatistic_SturSnr.setStatus('mandatory')
hdsl2DslLineStatus_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 159, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("hdsl2DslLineStatus-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2DslLineStatus_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBHDSL2-MIB", hdsl2DslLineStatus_SparingState=hdsl2DslLineStatus_SparingState, hdsl2DslLineStatus_PhysicalStatistic_Snr=hdsl2DslLineStatus_PhysicalStatistic_Snr, hdsl2DslLineStatus_PhysicalStatistic_TransmitPower=hdsl2DslLineStatus_PhysicalStatistic_TransmitPower, DisplayString=DisplayString, hdsl2DslLineStatus_VpSwitchingVpi=hdsl2DslLineStatus_VpSwitchingVpi, hdsl2DslLineStatus_PhysicalStatistic_SturLoopAttenuation=hdsl2DslLineStatus_PhysicalStatistic_SturLoopAttenuation, hdsl2DslLineStatus_PhysicalStatistic_LoswSecond=hdsl2DslLineStatus_PhysicalStatistic_LoswSecond, hdsl2DslLineStatus_LineState=hdsl2DslLineStatus_LineState, hdsl2DslLineStatus_SparePhysicalAddress_Shelf=hdsl2DslLineStatus_SparePhysicalAddress_Shelf, hdsl2DslLineStatus_PhysicalStatus_HardwareVer=hdsl2DslLineStatus_PhysicalStatus_HardwareVer, mibhdsl2DslLineStatus=mibhdsl2DslLineStatus, hdsl2DslLineStatus_Slot_o=hdsl2DslLineStatus_Slot_o, hdsl2DslLineStatus_PhysicalStatus_DevLineState=hdsl2DslLineStatus_PhysicalStatus_DevLineState, hdsl2DslLineStatus_PhysicalStatistic_ErroredSecond=hdsl2DslLineStatus_PhysicalStatistic_ErroredSecond, hdsl2DslLineStatus_PhysicalStatistic_SeverelyErroredSecond=hdsl2DslLineStatus_PhysicalStatistic_SeverelyErroredSecond, hdsl2DslLineStatus_PhysicalStatistic_UnavailableSecond=hdsl2DslLineStatus_PhysicalStatistic_UnavailableSecond, hdsl2DslLineStatus_Shelf_o=hdsl2DslLineStatus_Shelf_o, hdsl2DslLineStatus_PhysicalStatus_FirmwareVer=hdsl2DslLineStatus_PhysicalStatus_FirmwareVer, hdsl2DslLineStatus_SparingChangeTime=hdsl2DslLineStatus_SparingChangeTime, hdsl2DslLineStatus_PhysicalStatus_InterfaceType=hdsl2DslLineStatus_PhysicalStatus_InterfaceType, mibhdsl2DslLineStatusEntry=mibhdsl2DslLineStatusEntry, hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Minutes=hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Minutes, hdsl2DslLineStatus_VpiVciRange=hdsl2DslLineStatus_VpiVciRange, hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Hours=hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Hours, hdsl2DslLineStatus_SparePhysicalAddress_ItemNumber=hdsl2DslLineStatus_SparePhysicalAddress_ItemNumber, hdsl2DslLineStatus_PhysicalStatistic_RxSignalPresent=hdsl2DslLineStatus_PhysicalStatistic_RxSignalPresent, hdsl2DslLineStatus_PhysicalStatus_NetworkType=hdsl2DslLineStatus_PhysicalStatus_NetworkType, hdsl2DslLineStatus_Item_o=hdsl2DslLineStatus_Item_o, hdsl2DslLineStatus_Action_o=hdsl2DslLineStatus_Action_o, hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Days=hdsl2DslLineStatus_PhysicalStatistic_LineUpTimer_Days, hdsl2DslLineStatus_PhysicalStatus_OperationalRate=hdsl2DslLineStatus_PhysicalStatus_OperationalRate, hdsl2DslLineStatus_PhysicalAddress_Slot=hdsl2DslLineStatus_PhysicalAddress_Slot, hdsl2DslLineStatus_PhysicalStatistic_UpDwnCntr=hdsl2DslLineStatus_PhysicalStatistic_UpDwnCntr, hdsl2DslLineStatus_PhysicalStatus_UnitType=hdsl2DslLineStatus_PhysicalStatus_UnitType, hdsl2DslLineStatus_SparingChangeReason=hdsl2DslLineStatus_SparingChangeReason, hdsl2DslLineStatus_SparePhysicalAddress_Slot=hdsl2DslLineStatus_SparePhysicalAddress_Slot, hdsl2DslLineStatus_PhysicalStatus_IfGroupIndex=hdsl2DslLineStatus_PhysicalStatus_IfGroupIndex, hdsl2DslLineStatus_PhysicalAddress_Shelf=hdsl2DslLineStatus_PhysicalAddress_Shelf, mibhdsl2DslLineStatusTable=mibhdsl2DslLineStatusTable, hdsl2DslLineStatus_PhysicalAddress_ItemNumber=hdsl2DslLineStatus_PhysicalAddress_ItemNumber, hdsl2DslLineStatus_PhysicalStatistic_SelfTest=hdsl2DslLineStatus_PhysicalStatistic_SelfTest, hdsl2DslLineStatus_PhysicalStatistic_CodeViolations=hdsl2DslLineStatus_PhysicalStatistic_CodeViolations, hdsl2DslLineStatus_PhysicalStatistic_LoopAttenuation=hdsl2DslLineStatus_PhysicalStatistic_LoopAttenuation, hdsl2DslLineStatus_SparingChangeCounter=hdsl2DslLineStatus_SparingChangeCounter, hdsl2DslLineStatus_PhysicalStatistic_LineQuality=hdsl2DslLineStatus_PhysicalStatistic_LineQuality, hdsl2DslLineStatus_PhysicalStatistic_FramerSyncStatus=hdsl2DslLineStatus_PhysicalStatistic_FramerSyncStatus, hdsl2DslLineStatus_PhysicalStatistic_SturSnr=hdsl2DslLineStatus_PhysicalStatistic_SturSnr)
