#
# PySNMP MIB module JNX-L2TP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JNX-L2TP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
jnxL2tpMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxL2tpMibRoot")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, Counter32, NotificationType, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, Integer32, ModuleIdentity, IpAddress, ObjectIdentity, Gauge32, transmission, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "NotificationType", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "Integer32", "ModuleIdentity", "IpAddress", "ObjectIdentity", "Gauge32", "transmission", "MibIdentifier")
RowStatus, StorageType, TruthValue, DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "StorageType", "TruthValue", "DisplayString", "DateAndTime", "TextualConvention")
jnxL2tp = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1))
jnxL2tp.setRevisions(('2007-01-11 00:00', '2012-06-08 00:00', '2013-09-19 00:00', '2013-11-21 00:00',))
if mibBuilder.loadTexts: jnxL2tp.setLastUpdated('201311210000Z')
if mibBuilder.loadTexts: jnxL2tp.setOrganization('Juniper Networks Inc.')
jnxL2tpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1))
jnxL2tpScalar = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1))
jnxL2tpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1))
jnxL2tpStatsTotalTunnels = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsTotalTunnels.setStatus('current')
jnxL2tpStatsTotalSessions = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsTotalSessions.setStatus('current')
jnxL2tpStatsControlRxOctets = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsControlRxOctets.setStatus('current')
jnxL2tpStatsControlRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsControlRxPkts.setStatus('current')
jnxL2tpStatsControlTxOctets = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsControlTxOctets.setStatus('current')
jnxL2tpStatsControlTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsControlTxPkts.setStatus('current')
jnxL2tpStatsPayloadRxOctets = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsPayloadRxOctets.setStatus('deprecated')
jnxL2tpStatsPayloadRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsPayloadRxPkts.setStatus('current')
jnxL2tpStatsPayloadTxOctets = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 9), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsPayloadTxOctets.setStatus('current')
jnxL2tpStatsPayloadTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsPayloadTxPkts.setStatus('current')
jnxL2tpStatsErrorTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 11), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsErrorTxPkts.setStatus('current')
jnxL2tpStatsErrorRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsErrorRxPkts.setStatus('current')
jnxL2tpStatsPayloadRxOctets64 = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 1, 1, 13), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpStatsPayloadRxOctets64.setStatus('current')
jnxL2tpTunnelGroupStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2), )
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsTable.setStatus('current')
jnxL2tpTunnelGroupStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2, 1), ).setIndexNames((1, "JNX-L2TP-MIB", "jnxL2tpTunnelGroupStatsTnlGrpName"))
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsEntry.setStatus('current')
jnxL2tpTunnelGroupStatsTnlGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)))
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsTnlGrpName.setStatus('current')
jnxL2tpTunnelGroupStatsGatewayAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsGatewayAddrType.setStatus('current')
jnxL2tpTunnelGroupStatsGatewayAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsGatewayAddr.setStatus('current')
jnxL2tpTunnelGroupStatsSvcIntfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsSvcIntfName.setStatus('current')
jnxL2tpTunnelGroupStatsTotalTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsTotalTunnels.setStatus('current')
jnxL2tpTunnelGroupStatsTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelGroupStatsTotalSessions.setStatus('current')
jnxL2tpTunnelStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3), )
if mibBuilder.loadTexts: jnxL2tpTunnelStatsTable.setStatus('current')
jnxL2tpTunnelStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1), ).setIndexNames((0, "JNX-L2TP-MIB", "jnxL2tpTunnelStatsLocalTID"))
if mibBuilder.loadTexts: jnxL2tpTunnelStatsEntry.setStatus('current')
jnxL2tpTunnelStatsLocalTID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: jnxL2tpTunnelStatsLocalTID.setStatus('current')
jnxL2tpTunnelStatsServiceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsServiceInterface.setStatus('current')
jnxL2tpTunnelStatsTunnelGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsTunnelGroup.setStatus('current')
jnxL2tpTunnelStatsRemoteTID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsRemoteTID.setStatus('current')
jnxL2tpTunnelStatsRemoteIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsRemoteIpAddrType.setStatus('current')
jnxL2tpTunnelStatsRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsRemoteIpAddress.setStatus('current')
jnxL2tpTunnelStatsRemoteUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsRemoteUdpPort.setStatus('current')
jnxL2tpTunnelStatsActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsActiveSessions.setStatus('current')
jnxL2tpTunnelStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("cc-responder-accept-new", 1), ("cc-responder-reject-new", 2), ("cc-responder-idle", 3), ("cc-responder-wait-ctl-conn", 4), ("cleanup", 5), ("closed", 6), ("destroyed", 7), ("established", 8), ("terminate", 9), ("unknown", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsState.setStatus('current')
jnxL2tpTunnelStatsLocalIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsLocalIpAddrType.setStatus('current')
jnxL2tpTunnelStatsLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsLocalIpAddress.setStatus('current')
jnxL2tpTunnelStatsLocalUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 12), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsLocalUdpPort.setStatus('current')
jnxL2tpTunnelStatsLocalHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsLocalHostName.setStatus('current')
jnxL2tpTunnelStatsRemoteHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsRemoteHostName.setStatus('current')
jnxL2tpTunnelMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelMaxSessions.setStatus('current')
jnxL2tpTunnelStatsWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsWindowSize.setStatus('current')
jnxL2tpTunnelStatsHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsHelloInterval.setStatus('current')
jnxL2tpTunnelStatsCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsCreationTime.setStatus('current')
jnxL2tpTunnelStatsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsUpTime.setStatus('current')
jnxL2tpTunnelStatsIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsIdleTime.setStatus('current')
jnxL2tpTunnelStatsCollectionStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsCollectionStart.setStatus('current')
jnxL2tpTunnelStatsControlTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsControlTxPkts.setStatus('current')
jnxL2tpTunnelStatsControlTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsControlTxBytes.setStatus('deprecated')
jnxL2tpTunnelStatsControlRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsControlRxPkts.setStatus('current')
jnxL2tpTunnelStatsControlRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsControlRxBytes.setStatus('deprecated')
jnxL2tpTunnelStatsDataTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsDataTxPkts.setStatus('deprecated')
jnxL2tpTunnelStatsDataTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsDataTxBytes.setStatus('current')
jnxL2tpTunnelStatsDataRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsDataRxPkts.setStatus('deprecated')
jnxL2tpTunnelStatsDataRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsDataRxBytes.setStatus('current')
jnxL2tpTunnelStatsErrorTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsErrorTxPkts.setStatus('current')
jnxL2tpTunnelStatsErrorRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsErrorRxPkts.setStatus('current')
jnxL2tpTunnelStatsControlTxBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsControlTxBytes32.setStatus('current')
jnxL2tpTunnelStatsControlRxBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsControlRxBytes32.setStatus('current')
jnxL2tpTunnelStatsDataTxPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsDataTxPkts64.setStatus('current')
jnxL2tpTunnelStatsDataRxPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpTunnelStatsDataRxPkts64.setStatus('current')
jnxL2tpSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4), )
if mibBuilder.loadTexts: jnxL2tpSessionStatsTable.setStatus('current')
jnxL2tpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1), ).setIndexNames((0, "JNX-L2TP-MIB", "jnxL2tpSessionStatsLocalTID"), (0, "JNX-L2TP-MIB", "jnxL2tpSessionStatsLocalSID"))
if mibBuilder.loadTexts: jnxL2tpSessionStatsEntry.setStatus('current')
jnxL2tpSessionStatsLocalTID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: jnxL2tpSessionStatsLocalTID.setStatus('current')
jnxL2tpSessionStatsLocalSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: jnxL2tpSessionStatsLocalSID.setStatus('current')
jnxL2tpSessionStatsServiceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsServiceInterface.setStatus('current')
jnxL2tpSessionStatsTunnelGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsTunnelGroup.setStatus('current')
jnxL2tpSessionStatsRemoteSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsRemoteSID.setStatus('current')
jnxL2tpSessionStatsInterfaceUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsInterfaceUnit.setStatus('current')
jnxL2tpSessionStatsEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ppp", 1), ("multilink-ppp", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsEncapType.setStatus('current')
jnxL2tpSessionStatsBundleID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsBundleID.setStatus('current')
jnxL2tpSessionStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("established", 1), ("closed", 2), ("destroyed", 3), ("cleanup", 4), ("lns-ic-accept-new", 5), ("lns-ic-idle", 6), ("lns-ic-reject-new", 7), ("lns-ic-wait-connect", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsState.setStatus('current')
jnxL2tpSessionStatsUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsUserName.setStatus('current')
jnxL2tpSessionStatsMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("shared", 1), ("dedicate", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsMode.setStatus('current')
jnxL2tpSessionStatsLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsLocalAddrType.setStatus('current')
jnxL2tpSessionStatsLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsLocalAddress.setStatus('current')
jnxL2tpSessionStatsLocalUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 14), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsLocalUdpPort.setStatus('current')
jnxL2tpSessionStatsRemoteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 15), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsRemoteAddrType.setStatus('current')
jnxL2tpSessionStatsRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 16), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsRemoteAddress.setStatus('current')
jnxL2tpSessionStatsRemoteUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 17), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsRemoteUdpPort.setStatus('current')
jnxL2tpSessionStatsLocalHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsLocalHostName.setStatus('current')
jnxL2tpSessionStatsRemoteHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsRemoteHostName.setStatus('current')
jnxL2tpSessionAssignedIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 20), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionAssignedIpAddrType.setStatus('current')
jnxL2tpSessionAssignedIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 21), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionAssignedIpAddress.setStatus('current')
jnxL2tpSessionLocalMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionLocalMRU.setStatus('current')
jnxL2tpSessionRemoteMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionRemoteMRU.setStatus('current')
jnxL2tpSessionStatsTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 24), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsTxSpeed.setStatus('current')
jnxL2tpSessionStatsRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 25), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsRxSpeed.setStatus('current')
jnxL2tpSessionStatsCallBearerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("digital", 2), ("analog", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsCallBearerType.setStatus('current')
jnxL2tpSessionStatsFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("sync", 2), ("async", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsFramingType.setStatus('current')
jnxL2tpSessionStatsLCPRenegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsLCPRenegotiation.setStatus('current')
jnxL2tpSessionStatsAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("text", 2), ("pppChap", 3), ("pppPap", 4), ("pppEap", 5), ("pppMsChapV1", 6), ("pppMsChapV2", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAuthMethod.setStatus('current')
jnxL2tpSessionStatsNasIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 30), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsNasIpAddrType.setStatus('current')
jnxL2tpSessionStatsNasIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 31), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsNasIpAddress.setStatus('current')
jnxL2tpSessionStatsNasIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 32), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsNasIpPort.setStatus('current')
jnxL2tpSessionStatsFramedProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 100))).clone(namedValues=NamedValues(("ppp", 1), ("slip", 2), ("arap", 3), ("gandalf", 4), ("xylogicsIPX-SLIP", 5), ("x75-sync", 6), ("none", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsFramedProtocol.setStatus('current')
jnxL2tpSessionStatsFramedIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 34), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsFramedIpAddrType.setStatus('current')
jnxL2tpSessionStatsFramedIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 35), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsFramedIpAddress.setStatus('current')
jnxL2tpSessionStatsCallingStationID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 36), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsCallingStationID.setStatus('current')
jnxL2tpSessionStatsCalledStationID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 37), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsCalledStationID.setStatus('current')
jnxL2tpSessionStatsAcctDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctDelayTime.setStatus('current')
jnxL2tpSessionStatsAcctSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 39), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctSessionID.setStatus('current')
jnxL2tpSessionStatsAcctMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("radius", 1), ("local", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctMethod.setStatus('current')
jnxL2tpSessionStatsAcctSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctSessionTime.setStatus('current')
jnxL2tpSessionStatsAcctNasPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("async", 1), ("sync", 2), ("isdn-sync", 3), ("isdn-asunc-v-120", 4), ("isdn-async-v-110", 5), ("virtual", 6), ("piafs", 7), ("hdlc-clear-channel", 8), ("x-25", 9), ("x-75", 10), ("g-3-fax", 11), ("sdsl", 12), ("adsl-cap", 13), ("adsl-dmt", 14), ("idsl", 15), ("ethernet", 16), ("xdsl", 17), ("cable", 18), ("wireless-other", 19), ("wireless-ieee-802-1", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctNasPortType.setStatus('current')
jnxL2tpSessionStatsAcctTnlClientEndPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctTnlClientEndPoint.setStatus('current')
jnxL2tpSessionStatsAcctTnlServerEndPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctTnlServerEndPoint.setStatus('current')
jnxL2tpSessionStatsAcctTnlClientAuthID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 45), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctTnlClientAuthID.setStatus('current')
jnxL2tpSessionStatsAcctTnlServerAuthID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 46), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsAcctTnlServerAuthID.setStatus('current')
jnxL2tpSessionStatsUserProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 47), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsUserProfileName.setStatus('current')
jnxL2tpSessionStatsInterfaceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 48), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsInterfaceID.setStatus('current')
jnxL2tpSessionStatsCallSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsCallSerialNumber.setStatus('current')
jnxL2tpSessionStatsCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 50), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsCreationTime.setStatus('current')
jnxL2tpSessionStatsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 51), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsUpTime.setStatus('current')
jnxL2tpSessionStatsIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 52), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsIdleTime.setStatus('current')
jnxL2tpSessionStatsCollectionStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 53), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsCollectionStart.setStatus('current')
jnxL2tpSessionStatsControlTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsControlTxPkts.setStatus('current')
jnxL2tpSessionStatsControlTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsControlTxBytes.setStatus('deprecated')
jnxL2tpSessionStatsControlRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsControlRxPkts.setStatus('current')
jnxL2tpSessionStatsControlRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsControlRxBytes.setStatus('deprecated')
jnxL2tpSessionStatsDataTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsDataTxPkts.setStatus('deprecated')
jnxL2tpSessionStatsDataTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsDataTxBytes.setStatus('current')
jnxL2tpSessionStatsDataRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsDataRxPkts.setStatus('deprecated')
jnxL2tpSessionStatsDataRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsDataRxBytes.setStatus('current')
jnxL2tpSessionStatsErrorTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsErrorTxPkts.setStatus('current')
jnxL2tpSessionStatsErrorRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsErrorRxPkts.setStatus('current')
jnxL2tpSessionStatsControlTxBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsControlTxBytes32.setStatus('current')
jnxL2tpSessionStatsControlRxBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsControlRxBytes32.setStatus('current')
jnxL2tpSessionStatsDataTxPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsDataTxPkts64.setStatus('current')
jnxL2tpSessionStatsDataRxPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 4, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpSessionStatsDataRxPkts64.setStatus('current')
jnxL2tpMlpppBundleStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 5), )
if mibBuilder.loadTexts: jnxL2tpMlpppBundleStatsTable.setStatus('current')
jnxL2tpMlpppBundleStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 5, 1), ).setIndexNames((0, "JNX-L2TP-MIB", "jnxL2tpMlpppBundleStatsBundleID"))
if mibBuilder.loadTexts: jnxL2tpMlpppBundleStatsEntry.setStatus('current')
jnxL2tpMlpppBundleStatsBundleID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: jnxL2tpMlpppBundleStatsBundleID.setStatus('current')
jnxL2tpMlpppBundleStatsNumLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpMlpppBundleStatsNumLinks.setStatus('current')
jnxL2tpMlpppBundleStatsEndpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 5, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpMlpppBundleStatsEndpoint.setStatus('current')
jnxL2tpMlpppBundleStatsInputMrru = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 4500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpMlpppBundleStatsInputMrru.setStatus('current')
jnxL2tpMlpppBundleStatsOutputMrru = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 49, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 4500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2tpMlpppBundleStatsOutputMrru.setStatus('current')
mibBuilder.exportSymbols("JNX-L2TP-MIB", jnxL2tpSessionStatsRemoteHostName=jnxL2tpSessionStatsRemoteHostName, jnxL2tpSessionStatsEntry=jnxL2tpSessionStatsEntry, jnxL2tpTunnelStatsDataTxBytes=jnxL2tpTunnelStatsDataTxBytes, jnxL2tpSessionStatsDataRxPkts=jnxL2tpSessionStatsDataRxPkts, jnxL2tpTunnelStatsTable=jnxL2tpTunnelStatsTable, jnxL2tpSessionStatsUpTime=jnxL2tpSessionStatsUpTime, jnxL2tpTunnelStatsDataRxBytes=jnxL2tpTunnelStatsDataRxBytes, jnxL2tpSessionStatsDataTxPkts64=jnxL2tpSessionStatsDataTxPkts64, jnxL2tpTunnelStatsIdleTime=jnxL2tpTunnelStatsIdleTime, jnxL2tpTunnelStatsLocalHostName=jnxL2tpTunnelStatsLocalHostName, jnxL2tpSessionStatsCreationTime=jnxL2tpSessionStatsCreationTime, jnxL2tpTunnelGroupStatsGatewayAddrType=jnxL2tpTunnelGroupStatsGatewayAddrType, jnxL2tpTunnelStatsLocalIpAddrType=jnxL2tpTunnelStatsLocalIpAddrType, jnxL2tpSessionStatsLocalUdpPort=jnxL2tpSessionStatsLocalUdpPort, jnxL2tpSessionStatsControlRxPkts=jnxL2tpSessionStatsControlRxPkts, jnxL2tpSessionStatsRemoteAddress=jnxL2tpSessionStatsRemoteAddress, jnxL2tpMlpppBundleStatsInputMrru=jnxL2tpMlpppBundleStatsInputMrru, jnxL2tpScalar=jnxL2tpScalar, jnxL2tpTunnelStatsDataRxPkts=jnxL2tpTunnelStatsDataRxPkts, jnxL2tpTunnelStatsCreationTime=jnxL2tpTunnelStatsCreationTime, jnxL2tpSessionStatsAcctTnlClientEndPoint=jnxL2tpSessionStatsAcctTnlClientEndPoint, jnxL2tpTunnelGroupStatsTotalSessions=jnxL2tpTunnelGroupStatsTotalSessions, jnxL2tpSessionStatsLocalSID=jnxL2tpSessionStatsLocalSID, jnxL2tpTunnelGroupStatsEntry=jnxL2tpTunnelGroupStatsEntry, jnxL2tpTunnelStatsRemoteHostName=jnxL2tpTunnelStatsRemoteHostName, jnxL2tpTunnelStatsLocalIpAddress=jnxL2tpTunnelStatsLocalIpAddress, jnxL2tpSessionStatsCollectionStart=jnxL2tpSessionStatsCollectionStart, jnxL2tpSessionStatsTxSpeed=jnxL2tpSessionStatsTxSpeed, jnxL2tpSessionStatsControlTxBytes=jnxL2tpSessionStatsControlTxBytes, jnxL2tpSessionStatsControlTxPkts=jnxL2tpSessionStatsControlTxPkts, jnxL2tpSessionStatsFramedIpAddress=jnxL2tpSessionStatsFramedIpAddress, jnxL2tpSessionStatsControlTxBytes32=jnxL2tpSessionStatsControlTxBytes32, jnxL2tpStats=jnxL2tpStats, jnxL2tpSessionStatsNasIpAddrType=jnxL2tpSessionStatsNasIpAddrType, jnxL2tpSessionLocalMRU=jnxL2tpSessionLocalMRU, jnxL2tpSessionStatsCalledStationID=jnxL2tpSessionStatsCalledStationID, jnxL2tpTunnelMaxSessions=jnxL2tpTunnelMaxSessions, jnxL2tpSessionStatsAcctSessionID=jnxL2tpSessionStatsAcctSessionID, jnxL2tpSessionStatsCallBearerType=jnxL2tpSessionStatsCallBearerType, jnxL2tpMlpppBundleStatsEndpoint=jnxL2tpMlpppBundleStatsEndpoint, jnxL2tpTunnelGroupStatsGatewayAddr=jnxL2tpTunnelGroupStatsGatewayAddr, jnxL2tpTunnelStatsRemoteIpAddrType=jnxL2tpTunnelStatsRemoteIpAddrType, jnxL2tpSessionStatsDataTxBytes=jnxL2tpSessionStatsDataTxBytes, jnxL2tpTunnelStatsEntry=jnxL2tpTunnelStatsEntry, PYSNMP_MODULE_ID=jnxL2tp, jnxL2tpSessionStatsControlRxBytes=jnxL2tpSessionStatsControlRxBytes, jnxL2tpSessionStatsLocalAddress=jnxL2tpSessionStatsLocalAddress, jnxL2tpSessionStatsBundleID=jnxL2tpSessionStatsBundleID, jnxL2tpSessionStatsTable=jnxL2tpSessionStatsTable, jnxL2tpSessionRemoteMRU=jnxL2tpSessionRemoteMRU, jnxL2tpSessionStatsControlRxBytes32=jnxL2tpSessionStatsControlRxBytes32, jnxL2tpStatsPayloadRxOctets64=jnxL2tpStatsPayloadRxOctets64, jnxL2tpSessionStatsServiceInterface=jnxL2tpSessionStatsServiceInterface, jnxL2tpStatsControlRxOctets=jnxL2tpStatsControlRxOctets, jnxL2tpSessionStatsAcctTnlServerEndPoint=jnxL2tpSessionStatsAcctTnlServerEndPoint, jnxL2tpTunnelStatsRemoteTID=jnxL2tpTunnelStatsRemoteTID, jnxL2tpTunnelStatsDataTxPkts64=jnxL2tpTunnelStatsDataTxPkts64, jnxL2tpTunnelStatsServiceInterface=jnxL2tpTunnelStatsServiceInterface, jnxL2tpSessionStatsAuthMethod=jnxL2tpSessionStatsAuthMethod, jnxL2tpSessionStatsNasIpPort=jnxL2tpSessionStatsNasIpPort, jnxL2tpStatsErrorRxPkts=jnxL2tpStatsErrorRxPkts, jnxL2tpMlpppBundleStatsOutputMrru=jnxL2tpMlpppBundleStatsOutputMrru, jnxL2tpTunnelStatsUpTime=jnxL2tpTunnelStatsUpTime, jnxL2tpTunnelStatsControlTxBytes=jnxL2tpTunnelStatsControlTxBytes, jnxL2tpTunnelStatsErrorRxPkts=jnxL2tpTunnelStatsErrorRxPkts, jnxL2tpStatsPayloadRxOctets=jnxL2tpStatsPayloadRxOctets, jnxL2tpStatsControlRxPkts=jnxL2tpStatsControlRxPkts, jnxL2tpSessionStatsDataTxPkts=jnxL2tpSessionStatsDataTxPkts, jnxL2tpSessionStatsEncapType=jnxL2tpSessionStatsEncapType, jnxL2tpMlpppBundleStatsBundleID=jnxL2tpMlpppBundleStatsBundleID, jnxL2tpSessionStatsLocalAddrType=jnxL2tpSessionStatsLocalAddrType, jnxL2tpTunnelStatsErrorTxPkts=jnxL2tpTunnelStatsErrorTxPkts, jnxL2tpTunnelStatsHelloInterval=jnxL2tpTunnelStatsHelloInterval, jnxL2tpSessionStatsMode=jnxL2tpSessionStatsMode, jnxL2tpSessionStatsAcctDelayTime=jnxL2tpSessionStatsAcctDelayTime, jnxL2tpSessionStatsAcctNasPortType=jnxL2tpSessionStatsAcctNasPortType, jnxL2tpSessionStatsLCPRenegotiation=jnxL2tpSessionStatsLCPRenegotiation, jnxL2tpMlpppBundleStatsEntry=jnxL2tpMlpppBundleStatsEntry, jnxL2tpSessionStatsRemoteUdpPort=jnxL2tpSessionStatsRemoteUdpPort, jnxL2tpTunnelGroupStatsTnlGrpName=jnxL2tpTunnelGroupStatsTnlGrpName, jnxL2tpTunnelStatsState=jnxL2tpTunnelStatsState, jnxL2tpSessionStatsLocalTID=jnxL2tpSessionStatsLocalTID, jnxL2tpSessionStatsAcctSessionTime=jnxL2tpSessionStatsAcctSessionTime, jnxL2tpTunnelGroupStatsTotalTunnels=jnxL2tpTunnelGroupStatsTotalTunnels, jnxL2tpSessionStatsUserName=jnxL2tpSessionStatsUserName, jnxL2tpTunnelStatsControlTxBytes32=jnxL2tpTunnelStatsControlTxBytes32, jnxL2tpSessionStatsRemoteAddrType=jnxL2tpSessionStatsRemoteAddrType, jnxL2tpMlpppBundleStatsTable=jnxL2tpMlpppBundleStatsTable, jnxL2tpStatsControlTxPkts=jnxL2tpStatsControlTxPkts, jnxL2tpSessionStatsRxSpeed=jnxL2tpSessionStatsRxSpeed, jnxL2tpSessionStatsInterfaceID=jnxL2tpSessionStatsInterfaceID, jnxL2tpStatsPayloadTxOctets=jnxL2tpStatsPayloadTxOctets, jnxL2tpSessionStatsAcctTnlServerAuthID=jnxL2tpSessionStatsAcctTnlServerAuthID, jnxL2tpTunnelStatsActiveSessions=jnxL2tpTunnelStatsActiveSessions, jnxL2tpStatsTotalTunnels=jnxL2tpStatsTotalTunnels, jnxL2tpTunnelStatsControlRxPkts=jnxL2tpTunnelStatsControlRxPkts, jnxL2tpSessionStatsCallingStationID=jnxL2tpSessionStatsCallingStationID, jnxL2tpTunnelStatsControlTxPkts=jnxL2tpTunnelStatsControlTxPkts, jnxL2tpTunnelStatsCollectionStart=jnxL2tpTunnelStatsCollectionStart, jnxL2tpTunnelStatsRemoteUdpPort=jnxL2tpTunnelStatsRemoteUdpPort, jnxL2tpTunnelStatsLocalTID=jnxL2tpTunnelStatsLocalTID, jnxL2tpTunnelStatsDataTxPkts=jnxL2tpTunnelStatsDataTxPkts, jnxL2tpTunnelStatsWindowSize=jnxL2tpTunnelStatsWindowSize, jnxL2tpSessionStatsDataRxPkts64=jnxL2tpSessionStatsDataRxPkts64, jnxL2tpSessionStatsDataRxBytes=jnxL2tpSessionStatsDataRxBytes, jnxL2tpStatsTotalSessions=jnxL2tpStatsTotalSessions, jnxL2tp=jnxL2tp, jnxL2tpTunnelGroupStatsSvcIntfName=jnxL2tpTunnelGroupStatsSvcIntfName, jnxL2tpTunnelStatsControlRxBytes32=jnxL2tpTunnelStatsControlRxBytes32, jnxL2tpSessionStatsNasIpAddress=jnxL2tpSessionStatsNasIpAddress, jnxL2tpTunnelStatsDataRxPkts64=jnxL2tpTunnelStatsDataRxPkts64, jnxL2tpSessionStatsTunnelGroup=jnxL2tpSessionStatsTunnelGroup, jnxL2tpSessionStatsFramedProtocol=jnxL2tpSessionStatsFramedProtocol, jnxL2tpSessionStatsLocalHostName=jnxL2tpSessionStatsLocalHostName, jnxL2tpTunnelGroupStatsTable=jnxL2tpTunnelGroupStatsTable, jnxL2tpStatsErrorTxPkts=jnxL2tpStatsErrorTxPkts, jnxL2tpSessionStatsAcctMethod=jnxL2tpSessionStatsAcctMethod, jnxL2tpSessionStatsState=jnxL2tpSessionStatsState, jnxL2tpStatsControlTxOctets=jnxL2tpStatsControlTxOctets, jnxL2tpSessionStatsErrorRxPkts=jnxL2tpSessionStatsErrorRxPkts, jnxL2tpTunnelStatsControlRxBytes=jnxL2tpTunnelStatsControlRxBytes, jnxL2tpSessionStatsFramedIpAddrType=jnxL2tpSessionStatsFramedIpAddrType, jnxL2tpTunnelStatsTunnelGroup=jnxL2tpTunnelStatsTunnelGroup, jnxL2tpMlpppBundleStatsNumLinks=jnxL2tpMlpppBundleStatsNumLinks, jnxL2tpStatsPayloadTxPkts=jnxL2tpStatsPayloadTxPkts, jnxL2tpSessionStatsAcctTnlClientAuthID=jnxL2tpSessionStatsAcctTnlClientAuthID, jnxL2tpSessionAssignedIpAddress=jnxL2tpSessionAssignedIpAddress, jnxL2tpTunnelStatsRemoteIpAddress=jnxL2tpTunnelStatsRemoteIpAddress, jnxL2tpSessionAssignedIpAddrType=jnxL2tpSessionAssignedIpAddrType, jnxL2tpSessionStatsErrorTxPkts=jnxL2tpSessionStatsErrorTxPkts, jnxL2tpSessionStatsFramingType=jnxL2tpSessionStatsFramingType, jnxL2tpStatsPayloadRxPkts=jnxL2tpStatsPayloadRxPkts, jnxL2tpSessionStatsRemoteSID=jnxL2tpSessionStatsRemoteSID, jnxL2tpSessionStatsUserProfileName=jnxL2tpSessionStatsUserProfileName, jnxL2tpSessionStatsIdleTime=jnxL2tpSessionStatsIdleTime, jnxL2tpSessionStatsCallSerialNumber=jnxL2tpSessionStatsCallSerialNumber, jnxL2tpTunnelStatsLocalUdpPort=jnxL2tpTunnelStatsLocalUdpPort, jnxL2tpSessionStatsInterfaceUnit=jnxL2tpSessionStatsInterfaceUnit, jnxL2tpObjects=jnxL2tpObjects)
