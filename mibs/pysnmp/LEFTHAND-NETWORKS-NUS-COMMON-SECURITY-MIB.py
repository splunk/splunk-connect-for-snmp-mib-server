#
# PySNMP MIB module LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
lhnModules, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-GLOBAL-REG", "lhnModules")
lhnNusCommonSecurity, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-NUS-COMMON-MIB", "lhnNusCommonSecurity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, iso, Integer32, ObjectIdentity, TimeTicks, Counter32, Unsigned32, Bits, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "iso", "Integer32", "ObjectIdentity", "TimeTicks", "Counter32", "Unsigned32", "Bits", "Counter64", "MibIdentifier")
TruthValue, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "RowStatus")
lhnNusCommonSecurityModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 1, 10))
if mibBuilder.loadTexts: lhnNusCommonSecurityModule.setLastUpdated('0106010000Z')
if mibBuilder.loadTexts: lhnNusCommonSecurityModule.setOrganization('LeftHand Networks, Inc.')
secUserCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secUserCount.setStatus('current')
secUserTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 2), )
if mibBuilder.loadTexts: secUserTable.setStatus('current')
secUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 2, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secUserIndex"))
if mibBuilder.loadTexts: secUserEntry.setStatus('current')
secUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 2, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secUserIndex.setStatus('current')
secUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 2, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secUserName.setStatus('current')
secUserDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserDesc.setStatus('current')
secUserPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 2, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserPasswd.setStatus('current')
secUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secUserRowStatus.setStatus('current')
secGroupCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secGroupCount.setStatus('current')
secGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 4), )
if mibBuilder.loadTexts: secGroupTable.setStatus('current')
secGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 4, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secGroupIndex"))
if mibBuilder.loadTexts: secGroupEntry.setStatus('current')
secGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 4, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secGroupIndex.setStatus('current')
secGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 4, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secGroupName.setStatus('current')
secGroupDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 4, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secGroupDesc.setStatus('current')
secGroupUserCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secGroupUserCount.setStatus('current')
secGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secGroupRowStatus.setStatus('current')
secGroupUserTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 5), )
if mibBuilder.loadTexts: secGroupUserTable.setStatus('current')
secGroupUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 5, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secGroupIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secGroupUserIndex"))
if mibBuilder.loadTexts: secGroupUserEntry.setStatus('current')
secGroupUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 5, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secGroupUserIndex.setStatus('current')
secGroupUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 5, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secGroupUserName.setStatus('current')
secGroupUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secGroupUserRowStatus.setStatus('current')
secAdminUserCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secAdminUserCount.setStatus('current')
secAdminUserTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 7), )
if mibBuilder.loadTexts: secAdminUserTable.setStatus('current')
secAdminUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 7, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secAdminUserIndex"))
if mibBuilder.loadTexts: secAdminUserEntry.setStatus('current')
secAdminUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 7, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminUserIndex.setStatus('current')
secAdminUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 7, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminUserName.setStatus('current')
secAdminUserDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 7, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secAdminUserDesc.setStatus('current')
secAdminUserPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 7, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secAdminUserPasswd.setStatus('current')
secAdminUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminUserRowStatus.setStatus('current')
secAdminGroupCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secAdminGroupCount.setStatus('current')
secAdminGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 9), )
if mibBuilder.loadTexts: secAdminGroupTable.setStatus('current')
secAdminGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 9, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secAdminGroupIndex"))
if mibBuilder.loadTexts: secAdminGroupEntry.setStatus('current')
secAdminGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 9, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupIndex.setStatus('current')
secAdminGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 9, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secAdminGroupName.setStatus('current')
secAdminGroupDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 9, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secAdminGroupDesc.setStatus('current')
secAdminGroupUserOrSubGroupCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 9, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secAdminGroupUserOrSubGroupCount.setStatus('current')
secAdminGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 9, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupRowStatus.setStatus('current')
secAdminGroupUserOrSubGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 10), )
if mibBuilder.loadTexts: secAdminGroupUserOrSubGroupTable.setStatus('current')
secAdminGroupUserOrSubGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 10, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secAdminGroupIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secAdminGroupUserOrSubGroupIndex"))
if mibBuilder.loadTexts: secAdminGroupUserOrSubGroupEntry.setStatus('current')
secAdminGroupUserOrSubGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 10, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupUserOrSubGroupIndex.setStatus('current')
secAdminGroupUserOrSubGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 10, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupUserOrSubGroupName.setStatus('current')
secAdminGroupUserOrSubGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupUserOrSubGroupRowStatus.setStatus('current')
secAdminGroupAccessTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 11), )
if mibBuilder.loadTexts: secAdminGroupAccessTable.setStatus('current')
secAdminGroupAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 11, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secAdminGroupIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", "secAdminGroupAccessIndex"))
if mibBuilder.loadTexts: secAdminGroupAccessEntry.setStatus('current')
secAdminGroupAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 11, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupAccessIndex.setStatus('current')
secAdminGroupAccessKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 11, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secAdminGroupAccessKey.setStatus('current')
secAdminGroupAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 11, 1, 3), Bits().clone(namedValues=NamedValues(("get", 0), ("set", 1), ("add", 2), ("delete", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupAccessMode.setStatus('current')
secAdminGroupAccessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 11, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secAdminGroupAccessRowStatus.setStatus('current')
mibBuilder.exportSymbols("LEFTHAND-NETWORKS-NUS-COMMON-SECURITY-MIB", secAdminUserPasswd=secAdminUserPasswd, secGroupRowStatus=secGroupRowStatus, secGroupTable=secGroupTable, secAdminGroupAccessTable=secAdminGroupAccessTable, secGroupUserCount=secGroupUserCount, secAdminUserEntry=secAdminUserEntry, secAdminGroupAccessMode=secAdminGroupAccessMode, secGroupUserRowStatus=secGroupUserRowStatus, secAdminGroupUserOrSubGroupTable=secAdminGroupUserOrSubGroupTable, secUserName=secUserName, secAdminGroupUserOrSubGroupCount=secAdminGroupUserOrSubGroupCount, secAdminGroupAccessRowStatus=secAdminGroupAccessRowStatus, secAdminUserRowStatus=secAdminUserRowStatus, PYSNMP_MODULE_ID=lhnNusCommonSecurityModule, secUserDesc=secUserDesc, secAdminGroupUserOrSubGroupRowStatus=secAdminGroupUserOrSubGroupRowStatus, secAdminGroupDesc=secAdminGroupDesc, secAdminGroupAccessIndex=secAdminGroupAccessIndex, secAdminUserTable=secAdminUserTable, secAdminGroupUserOrSubGroupIndex=secAdminGroupUserOrSubGroupIndex, secAdminUserName=secAdminUserName, secAdminGroupUserOrSubGroupName=secAdminGroupUserOrSubGroupName, secAdminGroupName=secAdminGroupName, lhnNusCommonSecurityModule=lhnNusCommonSecurityModule, secGroupIndex=secGroupIndex, secUserTable=secUserTable, secAdminGroupRowStatus=secAdminGroupRowStatus, secGroupUserEntry=secGroupUserEntry, secUserEntry=secUserEntry, secAdminGroupAccessKey=secAdminGroupAccessKey, secAdminGroupCount=secAdminGroupCount, secGroupUserName=secGroupUserName, secAdminUserCount=secAdminUserCount, secUserPasswd=secUserPasswd, secAdminUserDesc=secAdminUserDesc, secAdminUserIndex=secAdminUserIndex, secGroupDesc=secGroupDesc, secAdminGroupEntry=secAdminGroupEntry, secGroupName=secGroupName, secUserIndex=secUserIndex, secUserCount=secUserCount, secGroupUserIndex=secGroupUserIndex, secGroupEntry=secGroupEntry, secGroupCount=secGroupCount, secGroupUserTable=secGroupUserTable, secAdminGroupTable=secAdminGroupTable, secUserRowStatus=secUserRowStatus, secAdminGroupAccessEntry=secAdminGroupAccessEntry, secAdminGroupUserOrSubGroupEntry=secAdminGroupUserOrSubGroupEntry, secAdminGroupIndex=secAdminGroupIndex)
