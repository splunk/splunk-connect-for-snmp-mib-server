#
# PySNMP MIB module STN-PPTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-PPTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, ObjectIdentity, MibIdentifier, TimeTicks, ModuleIdentity, Gauge32, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, NotificationType, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "MibIdentifier", "TimeTicks", "ModuleIdentity", "Gauge32", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "NotificationType", "Unsigned32", "Bits")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
stnTmpProtocols, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnTmpProtocols")
StnDomainMapType, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-TC", "StnDomainMapType")
stnPptp = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10))
if mibBuilder.loadTexts: stnPptp.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnPptp.setOrganization('Spring Tide Networks, Inc.')
stnPptpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1))
stnPptpMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2))
stnPptpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3))
stnPptpScalar = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 1))
stnPptpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 1, 1))
stnPptpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 1, 2))
class MilliSeconds(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-3'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483646)

stnPptpAdminState = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("drain", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpAdminState.setStatus('current')
stnPptpProtocolVersion = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpProtocolVersion.setStatus('current')
stnPptpVendorName = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpVendorName.setStatus('current')
stnPptpFirmwareRev = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpFirmwareRev.setStatus('current')
stnPptpDomainConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2), )
if mibBuilder.loadTexts: stnPptpDomainConfigTable.setStatus('current')
stnPptpDomainConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpDomainConfigIdentifier"))
if mibBuilder.loadTexts: stnPptpDomainConfigEntry.setStatus('current')
stnPptpDomainConfigIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 1), DisplayString())
if mibBuilder.loadTexts: stnPptpDomainConfigIdentifier.setStatus('current')
stnPptpDomainConfigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("drain", 3))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigAdminState.setStatus('current')
stnPptpDomainConfigAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("simple", 2), ("challenge", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigAuthentication.setStatus('current')
stnPptpDomainConfigSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigSecret.setStatus('current')
stnPptpDomainConfigTunnelSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("ipSec", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigTunnelSecurity.setStatus('current')
stnPptpDomainConfigTunnelHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigTunnelHelloInterval.setStatus('current')
stnPptpDomainConfigTunnelIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigTunnelIdleTimeout.setStatus('current')
stnPptpDomainConfigControlRWS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigControlRWS.setStatus('current')
stnPptpDomainConfigControlRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigControlRetransmissions.setStatus('current')
stnPptpDomainConfigPayloadSequencing = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigPayloadSequencing.setStatus('current')
stnPptpDomainConfigPayloadRWS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigPayloadRWS.setStatus('current')
stnPptpDomainConfigDelayedAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 12), MilliSeconds()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigDelayedAckTimeout.setStatus('current')
stnPptpDomainConfigReassemblyTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 13), MilliSeconds()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigReassemblyTimeout.setStatus('current')
stnPptpDomainConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 2, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stnPptpDomainConfigStatus.setStatus('current')
stnPptpDomainStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3), )
if mibBuilder.loadTexts: stnPptpDomainStatsTable.setStatus('current')
stnPptpDomainStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpDomainStatsIdentifier"))
if mibBuilder.loadTexts: stnPptpDomainStatsEntry.setStatus('current')
stnPptpDomainStatsIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 1), DisplayString())
if mibBuilder.loadTexts: stnPptpDomainStatsIdentifier.setStatus('current')
stnPptpDomainStatsTotalTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsTotalTunnels.setStatus('current')
stnPptpDomainStatsFailedTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsFailedTunnels.setStatus('current')
stnPptpDomainStatsFailedAuthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsFailedAuthentications.setStatus('current')
stnPptpDomainStatsActiveTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsActiveTunnels.setStatus('current')
stnPptpDomainStatsTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsTotalSessions.setStatus('current')
stnPptpDomainStatsFailedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsFailedSessions.setStatus('current')
stnPptpDomainStatsActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsActiveSessions.setStatus('current')
stnPptpDomainStatsControlRecvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsControlRecvOctets.setStatus('current')
stnPptpDomainStatsControlRecvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsControlRecvPackets.setStatus('current')
stnPptpDomainStatsControlSendOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsControlSendOctets.setStatus('current')
stnPptpDomainStatsControlSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsControlSendPackets.setStatus('current')
stnPptpDomainStatsPayloadRecvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsPayloadRecvOctets.setStatus('current')
stnPptpDomainStatsPayloadRecvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsPayloadRecvPackets.setStatus('current')
stnPptpDomainStatsPayloadRecvDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsPayloadRecvDiscards.setStatus('current')
stnPptpDomainStatsPayloadSendOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsPayloadSendOctets.setStatus('current')
stnPptpDomainStatsPayloadSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainStatsPayloadSendPackets.setStatus('current')
stnPptpTunnelConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4), )
if mibBuilder.loadTexts: stnPptpTunnelConfigTable.setStatus('current')
stnPptpTunnelConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpTunnelConfigIfIndex"))
if mibBuilder.loadTexts: stnPptpTunnelConfigEntry.setStatus('current')
stnPptpTunnelConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelConfigIfIndex.setStatus('current')
stnPptpTunnelConfigAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("simple", 2), ("challenge", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigAuthentication.setStatus('current')
stnPptpTunnelConfigSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigSecret.setStatus('current')
stnPptpTunnelConfigSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("ipsec", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigSecurity.setStatus('current')
stnPptpTunnelConfigHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigHelloInterval.setStatus('current')
stnPptpTunnelConfigIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigIdleTimeout.setStatus('current')
stnPptpTunnelConfigControlRWS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigControlRWS.setStatus('current')
stnPptpTunnelConfigControlRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigControlRetransmissions.setStatus('current')
stnPptpTunnelConfigPayloadSequencing = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigPayloadSequencing.setStatus('current')
stnPptpTunnelConfigPayloadRWS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigPayloadRWS.setStatus('current')
stnPptpTunnelConfigDelayedAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 11), MilliSeconds()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigDelayedAckTimeout.setStatus('current')
stnPptpTunnelConfigReassemblyTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 12), MilliSeconds()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigReassemblyTimeout.setStatus('current')
stnPptpTunnelConfigTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ipGre", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnPptpTunnelConfigTransport.setStatus('current')
stnPptpTunnelStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5), )
if mibBuilder.loadTexts: stnPptpTunnelStatsTable.setStatus('current')
stnPptpTunnelStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpTunnelStatsIfIndex"))
if mibBuilder.loadTexts: stnPptpTunnelStatsEntry.setStatus('current')
stnPptpTunnelStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsIfIndex.setStatus('current')
stnPptpTunnelStatsLocalTID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsLocalTID.setStatus('current')
stnPptpTunnelStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tunnelIdle", 1), ("tunnelConnecting", 2), ("tunnelEstablished", 3), ("tunnelDisconnecting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsState.setStatus('current')
stnPptpTunnelStatsInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("locally", 1), ("remotely", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsInitiated.setStatus('current')
stnPptpTunnelStatsRemoteHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsRemoteHostName.setStatus('current')
stnPptpTunnelStatsRemoteVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsRemoteVendorName.setStatus('current')
stnPptpTunnelStatsRemoteFirmwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsRemoteFirmwareRevision.setStatus('current')
stnPptpTunnelStatsRemoteProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsRemoteProtocolVersion.setStatus('current')
stnPptpTunnelStatsBearerCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("digital", 2), ("analog", 3), ("digitalAnalog", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsBearerCapabilities.setStatus('current')
stnPptpTunnelStatsFramingCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("sync", 2), ("async", 3), ("syncAsync", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsFramingCapabilities.setStatus('current')
stnPptpTunnelStatsControlRecvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsControlRecvPackets.setStatus('current')
stnPptpTunnelStatsControlSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsControlSendPackets.setStatus('current')
stnPptpTunnelStatsTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsTotalSessions.setStatus('current')
stnPptpTunnelStatsFailedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsFailedSessions.setStatus('current')
stnPptpTunnelStatsActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsActiveSessions.setStatus('current')
stnPptpTunnelStatsLastResultCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsLastResultCode.setStatus('current')
stnPptpTunnelStatsLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsLastErrorCode.setStatus('current')
stnPptpTunnelStatsLastErrorMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 5, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelStatsLastErrorMessage.setStatus('current')
stnPptpSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7), )
if mibBuilder.loadTexts: stnPptpSessionStatsTable.setStatus('current')
stnPptpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpSessionStatsTunnelIfIndex"), (0, "STN-PPTP-MIB", "stnPptpSessionStatsLocalCID"))
if mibBuilder.loadTexts: stnPptpSessionStatsEntry.setStatus('current')
stnPptpSessionStatsTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsTunnelIfIndex.setStatus('current')
stnPptpSessionStatsHLIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsHLIfIndex.setStatus('current')
stnPptpSessionStatsLocalCID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsLocalCID.setStatus('current')
stnPptpSessionStatsRemoteCID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsRemoteCID.setStatus('current')
stnPptpSessionStatsUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsUserName.setStatus('current')
stnPptpSessionStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sessionIdle", 1), ("sessionConnecting", 2), ("sessionEstablished", 3), ("sessionDisconnecting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsState.setStatus('current')
stnPptpSessionStatsCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pacIncoming", 1), ("pnsIncoming", 2), ("pacOutgoing", 3), ("pnsOutgoing", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsCallType.setStatus('current')
stnPptpSessionStatsCallSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsCallSerialNumber.setStatus('current')
stnPptpSessionStatsTxConnectSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsTxConnectSpeed.setStatus('current')
stnPptpSessionStatsRxConnectSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsRxConnectSpeed.setStatus('current')
stnPptpSessionStatsCallBearerType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("digital", 2), ("analog", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsCallBearerType.setStatus('current')
stnPptpSessionStatsFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("sync", 2), ("async", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsFramingType.setStatus('current')
stnPptpSessionStatsPhysChanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsPhysChanId.setStatus('current')
stnPptpSessionStatsDNIS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsDNIS.setStatus('current')
stnPptpSessionStatsCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsCLID.setStatus('current')
stnPptpSessionStatsSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsSubAddress.setStatus('current')
stnPptpSessionStatsPrivateGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsPrivateGroupID.setStatus('current')
stnPptpSessionStatsLocalRWS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsLocalRWS.setStatus('current')
stnPptpSessionStatsRemoteInitialRWS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsRemoteInitialRWS.setStatus('current')
stnPptpSessionStatsRemotePPD = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsRemotePPD.setStatus('current')
stnPptpSessionStatsRecvZLB = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsRecvZLB.setStatus('current')
stnPptpSessionStatsOutSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsOutSequence.setStatus('current')
stnPptpSessionStatsSendZLB = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsSendZLB.setStatus('current')
stnPptpSessionStatsAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsAckTimeouts.setStatus('current')
stnPptpSesssionStatsCurrentRemoteRWS = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 25), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSesssionStatsCurrentRemoteRWS.setStatus('current')
stnPptpSessionStatsSendSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsSendSeq.setStatus('current')
stnPptpSessionStatsSendSeqAck = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsSendSeqAck.setStatus('current')
stnPptpSessionStatsRecvSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsRecvSeq.setStatus('current')
stnPptpSessionStatsRecvSeqAck = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 7, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionStatsRecvSeqAck.setStatus('current')
stnPptpTunnelMapTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 8), )
if mibBuilder.loadTexts: stnPptpTunnelMapTable.setStatus('current')
stnPptpTunnelMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 8, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpTunnelMapLocalTID"))
if mibBuilder.loadTexts: stnPptpTunnelMapEntry.setStatus('current')
stnPptpTunnelMapLocalTID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelMapLocalTID.setStatus('current')
stnPptpTunnelMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 8, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelMapIfIndex.setStatus('current')
stnPptpSessionMapTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 9), )
if mibBuilder.loadTexts: stnPptpSessionMapTable.setStatus('current')
stnPptpSessionMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 9, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpSessionMapHLIfIndex"))
if mibBuilder.loadTexts: stnPptpSessionMapEntry.setStatus('current')
stnPptpSessionMapHLIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 9, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionMapHLIfIndex.setStatus('current')
stnPptpSessionMapTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 9, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionMapTunnelIfIndex.setStatus('current')
stnPptpSessionMapLocalCID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpSessionMapLocalCID.setStatus('current')
stnPptpDomainMapTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 10), )
if mibBuilder.loadTexts: stnPptpDomainMapTable.setStatus('current')
stnPptpDomainMapTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 10, 1), ).setIndexNames((0, "STN-PPTP-MIB", "stnPptpDomainMapIdentifier"))
if mibBuilder.loadTexts: stnPptpDomainMapTableEntry.setStatus('current')
stnPptpDomainMapIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 10, 1, 1), DisplayString())
if mibBuilder.loadTexts: stnPptpDomainMapIdentifier.setStatus('current')
stnPptpDomainMapHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainMapHostName.setStatus('current')
stnPptpDomainMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 10, 1, 3), StnDomainMapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainMapType.setStatus('current')
stnPptpDomainMapTypeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpDomainMapTypeInfo.setStatus('current')
stnPptpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2, 1))
stnPptpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2, 2))
stnPptpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2, 2, 1)).setObjects(("STN-PPTP-MIB", "stnPptpConfigGroup"), ("STN-PPTP-MIB", "stnPptpStatsGroup"), ("STN-PPTP-MIB", "stnPptpDomainGroup"), ("STN-PPTP-MIB", "stnPptpMappingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stnPptpCompliance = stnPptpCompliance.setStatus('current')
stnPptpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2, 1, 1)).setObjects(("STN-PPTP-MIB", "stnPptpAdminState"), ("STN-PPTP-MIB", "stnPptpTunnelConfigAuthentication"), ("STN-PPTP-MIB", "stnPptpTunnelConfigSecret"), ("STN-PPTP-MIB", "stnPptpTunnelConfigSecurity"), ("STN-PPTP-MIB", "stnPptpTunnelConfigHelloInterval"), ("STN-PPTP-MIB", "stnPptpTunnelConfigIdleTimeout"), ("STN-PPTP-MIB", "stnPptpTunnelConfigControlRWS"), ("STN-PPTP-MIB", "stnPptpTunnelConfigControlRetransmissions"), ("STN-PPTP-MIB", "stnPptpTunnelConfigPayloadSequencing"), ("STN-PPTP-MIB", "stnPptpTunnelConfigPayloadRWS"), ("STN-PPTP-MIB", "stnPptpTunnelConfigDelayedAckTimeout"), ("STN-PPTP-MIB", "stnPptpTunnelConfigReassemblyTimeout"), ("STN-PPTP-MIB", "stnPptpTunnelConfigTransport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stnPptpConfigGroup = stnPptpConfigGroup.setStatus('current')
stnPptpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2, 1, 2)).setObjects(("STN-PPTP-MIB", "stnPptpProtocolVersion"), ("STN-PPTP-MIB", "stnPptpVendorName"), ("STN-PPTP-MIB", "stnPptpFirmwareRev"), ("STN-PPTP-MIB", "stnPptpTunnelStatsIfIndex"), ("STN-PPTP-MIB", "stnPptpTunnelStatsLocalTID"), ("STN-PPTP-MIB", "stnPptpTunnelStatsState"), ("STN-PPTP-MIB", "stnPptpTunnelStatsInitiated"), ("STN-PPTP-MIB", "stnPptpTunnelStatsRemoteHostName"), ("STN-PPTP-MIB", "stnPptpTunnelStatsRemoteVendorName"), ("STN-PPTP-MIB", "stnPptpTunnelStatsRemoteFirmwareRevision"), ("STN-PPTP-MIB", "stnPptpTunnelStatsRemoteProtocolVersion"), ("STN-PPTP-MIB", "stnPptpTunnelStatsBearerCapabilities"), ("STN-PPTP-MIB", "stnPptpTunnelStatsFramingCapabilities"), ("STN-PPTP-MIB", "stnPptpTunnelStatsControlRecvPackets"), ("STN-PPTP-MIB", "stnPptpTunnelStatsControlSendPackets"), ("STN-PPTP-MIB", "stnPptpTunnelStatsTotalSessions"), ("STN-PPTP-MIB", "stnPptpTunnelStatsFailedSessions"), ("STN-PPTP-MIB", "stnPptpTunnelStatsActiveSessions"), ("STN-PPTP-MIB", "stnPptpTunnelStatsLastResultCode"), ("STN-PPTP-MIB", "stnPptpTunnelStatsLastErrorCode"), ("STN-PPTP-MIB", "stnPptpTunnelStatsLastErrorMessage"), ("STN-PPTP-MIB", "stnPptpSessionStatsTunnelIfIndex"), ("STN-PPTP-MIB", "stnPptpSessionStatsHLIfIndex"), ("STN-PPTP-MIB", "stnPptpSessionStatsLocalCID"), ("STN-PPTP-MIB", "stnPptpSessionStatsRemoteCID"), ("STN-PPTP-MIB", "stnPptpSessionStatsUserName"), ("STN-PPTP-MIB", "stnPptpSessionStatsState"), ("STN-PPTP-MIB", "stnPptpSessionStatsCallType"), ("STN-PPTP-MIB", "stnPptpSessionStatsCallSerialNumber"), ("STN-PPTP-MIB", "stnPptpSessionStatsTxConnectSpeed"), ("STN-PPTP-MIB", "stnPptpSessionStatsRxConnectSpeed"), ("STN-PPTP-MIB", "stnPptpSessionStatsCallBearerType"), ("STN-PPTP-MIB", "stnPptpSessionStatsFramingType"), ("STN-PPTP-MIB", "stnPptpSessionStatsPhysChanId"), ("STN-PPTP-MIB", "stnPptpSessionStatsDNIS"), ("STN-PPTP-MIB", "stnPptpSessionStatsCLID"), ("STN-PPTP-MIB", "stnPptpSessionStatsSubAddress"), ("STN-PPTP-MIB", "stnPptpSessionStatsPrivateGroupID"), ("STN-PPTP-MIB", "stnPptpSessionStatsLocalRWS"), ("STN-PPTP-MIB", "stnPptpSessionStatsRemoteInitialRWS"), ("STN-PPTP-MIB", "stnPptpSessionStatsRemotePPD"), ("STN-PPTP-MIB", "stnPptpSessionStatsRecvZLB"), ("STN-PPTP-MIB", "stnPptpSessionStatsOutSequence"), ("STN-PPTP-MIB", "stnPptpSessionStatsSendZLB"), ("STN-PPTP-MIB", "stnPptpSessionStatsAckTimeouts"), ("STN-PPTP-MIB", "stnPptpSesssionStatsCurrentRemoteRWS"), ("STN-PPTP-MIB", "stnPptpSessionStatsSendSeq"), ("STN-PPTP-MIB", "stnPptpSessionStatsSendSeqAck"), ("STN-PPTP-MIB", "stnPptpSessionStatsRecvSeq"), ("STN-PPTP-MIB", "stnPptpSessionStatsRecvSeqAck"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stnPptpStatsGroup = stnPptpStatsGroup.setStatus('current')
stnPptpDomainGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2, 1, 4)).setObjects(("STN-PPTP-MIB", "stnPptpDomainConfigAdminState"), ("STN-PPTP-MIB", "stnPptpDomainConfigAuthentication"), ("STN-PPTP-MIB", "stnPptpDomainConfigSecret"), ("STN-PPTP-MIB", "stnPptpDomainConfigTunnelSecurity"), ("STN-PPTP-MIB", "stnPptpDomainConfigTunnelHelloInterval"), ("STN-PPTP-MIB", "stnPptpDomainConfigTunnelIdleTimeout"), ("STN-PPTP-MIB", "stnPptpDomainConfigControlRWS"), ("STN-PPTP-MIB", "stnPptpDomainConfigControlRetransmissions"), ("STN-PPTP-MIB", "stnPptpDomainConfigPayloadSequencing"), ("STN-PPTP-MIB", "stnPptpDomainConfigPayloadRWS"), ("STN-PPTP-MIB", "stnPptpDomainConfigDelayedAckTimeout"), ("STN-PPTP-MIB", "stnPptpDomainConfigReassemblyTimeout"), ("STN-PPTP-MIB", "stnPptpDomainConfigStatus"), ("STN-PPTP-MIB", "stnPptpDomainStatsTotalTunnels"), ("STN-PPTP-MIB", "stnPptpDomainStatsFailedTunnels"), ("STN-PPTP-MIB", "stnPptpDomainStatsFailedAuthentications"), ("STN-PPTP-MIB", "stnPptpDomainStatsActiveTunnels"), ("STN-PPTP-MIB", "stnPptpDomainStatsTotalSessions"), ("STN-PPTP-MIB", "stnPptpDomainStatsFailedSessions"), ("STN-PPTP-MIB", "stnPptpDomainStatsActiveSessions"), ("STN-PPTP-MIB", "stnPptpDomainStatsControlRecvOctets"), ("STN-PPTP-MIB", "stnPptpDomainStatsControlRecvPackets"), ("STN-PPTP-MIB", "stnPptpDomainStatsControlSendOctets"), ("STN-PPTP-MIB", "stnPptpDomainStatsControlSendPackets"), ("STN-PPTP-MIB", "stnPptpDomainStatsPayloadRecvOctets"), ("STN-PPTP-MIB", "stnPptpDomainStatsPayloadRecvPackets"), ("STN-PPTP-MIB", "stnPptpDomainStatsPayloadRecvDiscards"), ("STN-PPTP-MIB", "stnPptpDomainStatsPayloadSendOctets"), ("STN-PPTP-MIB", "stnPptpDomainStatsPayloadSendPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stnPptpDomainGroup = stnPptpDomainGroup.setStatus('current')
stnPptpMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 2, 1, 5)).setObjects(("STN-PPTP-MIB", "stnPptpTunnelMapLocalTID"), ("STN-PPTP-MIB", "stnPptpTunnelMapIfIndex"), ("STN-PPTP-MIB", "stnPptpSessionMapHLIfIndex"), ("STN-PPTP-MIB", "stnPptpSessionMapTunnelIfIndex"), ("STN-PPTP-MIB", "stnPptpSessionMapLocalCID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stnPptpMappingGroup = stnPptpMappingGroup.setStatus('current')
mibBuilder.exportSymbols("STN-PPTP-MIB", stnPptpSessionStatsCallSerialNumber=stnPptpSessionStatsCallSerialNumber, stnPptpSessionStatsState=stnPptpSessionStatsState, stnPptpVendorName=stnPptpVendorName, stnPptpSessionStatsRecvSeq=stnPptpSessionStatsRecvSeq, stnPptpTunnelMapIfIndex=stnPptpTunnelMapIfIndex, stnPptpDomainStatsEntry=stnPptpDomainStatsEntry, stnPptpTunnelConfigPayloadRWS=stnPptpTunnelConfigPayloadRWS, stnPptp=stnPptp, stnPptpSessionStatsRecvSeqAck=stnPptpSessionStatsRecvSeqAck, stnPptpDomainStatsFailedSessions=stnPptpDomainStatsFailedSessions, stnPptpDomainConfigAuthentication=stnPptpDomainConfigAuthentication, stnPptpCompliance=stnPptpCompliance, stnPptpDomainMapTable=stnPptpDomainMapTable, stnPptpProtocolVersion=stnPptpProtocolVersion, stnPptpTunnelStatsIfIndex=stnPptpTunnelStatsIfIndex, stnPptpDomainStatsControlRecvPackets=stnPptpDomainStatsControlRecvPackets, stnPptpSessionMapTunnelIfIndex=stnPptpSessionMapTunnelIfIndex, stnPptpTunnelStatsLastResultCode=stnPptpTunnelStatsLastResultCode, stnPptpTunnelConfigSecret=stnPptpTunnelConfigSecret, stnPptpTunnelMapLocalTID=stnPptpTunnelMapLocalTID, stnPptpDomainConfigDelayedAckTimeout=stnPptpDomainConfigDelayedAckTimeout, stnPptpDomainStatsPayloadRecvOctets=stnPptpDomainStatsPayloadRecvOctets, stnPptpTunnelStatsBearerCapabilities=stnPptpTunnelStatsBearerCapabilities, stnPptpConfigGroup=stnPptpConfigGroup, stnPptpSessionStatsLocalCID=stnPptpSessionStatsLocalCID, stnPptpDomainConfigIdentifier=stnPptpDomainConfigIdentifier, stnPptpDomainConfigControlRWS=stnPptpDomainConfigControlRWS, stnPptpTunnelStatsTotalSessions=stnPptpTunnelStatsTotalSessions, stnPptpDomainMapTableEntry=stnPptpDomainMapTableEntry, stnPptpConfig=stnPptpConfig, stnPptpSessionMapHLIfIndex=stnPptpSessionMapHLIfIndex, stnPptpSessionStatsOutSequence=stnPptpSessionStatsOutSequence, stnPptpSessionStatsUserName=stnPptpSessionStatsUserName, stnPptpTunnelStatsRemoteProtocolVersion=stnPptpTunnelStatsRemoteProtocolVersion, stnPptpAdminState=stnPptpAdminState, stnPptpDomainConfigReassemblyTimeout=stnPptpDomainConfigReassemblyTimeout, stnPptpDomainStatsFailedTunnels=stnPptpDomainStatsFailedTunnels, stnPptpMibConformance=stnPptpMibConformance, stnPptpDomainStatsPayloadSendPackets=stnPptpDomainStatsPayloadSendPackets, stnPptpTunnelStatsControlRecvPackets=stnPptpTunnelStatsControlRecvPackets, stnPptpSessionStatsRemotePPD=stnPptpSessionStatsRemotePPD, stnPptpSessionStatsDNIS=stnPptpSessionStatsDNIS, stnPptpDomainStatsFailedAuthentications=stnPptpDomainStatsFailedAuthentications, stnPptpSessionStatsSubAddress=stnPptpSessionStatsSubAddress, stnPptpDomainMapHostName=stnPptpDomainMapHostName, stnPptpCompliances=stnPptpCompliances, stnPptpDomainConfigAdminState=stnPptpDomainConfigAdminState, stnPptpDomainStatsTotalSessions=stnPptpDomainStatsTotalSessions, MilliSeconds=MilliSeconds, stnPptpSessionStatsCLID=stnPptpSessionStatsCLID, stnPptpDomainConfigPayloadSequencing=stnPptpDomainConfigPayloadSequencing, stnPptpTunnelMapEntry=stnPptpTunnelMapEntry, stnPptpTunnelStatsTable=stnPptpTunnelStatsTable, stnPptpSessionStatsRemoteCID=stnPptpSessionStatsRemoteCID, stnPptpSessionStatsTxConnectSpeed=stnPptpSessionStatsTxConnectSpeed, stnPptpTunnelStatsLastErrorCode=stnPptpTunnelStatsLastErrorCode, stnPptpTunnelConfigIdleTimeout=stnPptpTunnelConfigIdleTimeout, stnPptpDomainConfigTunnelHelloInterval=stnPptpDomainConfigTunnelHelloInterval, stnPptpDomainStatsIdentifier=stnPptpDomainStatsIdentifier, stnPptpTunnelConfigHelloInterval=stnPptpTunnelConfigHelloInterval, stnPptpMappingGroup=stnPptpMappingGroup, stnPptpDomainStatsControlSendPackets=stnPptpDomainStatsControlSendPackets, stnPptpDomainStatsControlRecvOctets=stnPptpDomainStatsControlRecvOctets, stnPptpSessionStatsRecvZLB=stnPptpSessionStatsRecvZLB, stnPptpDomainConfigControlRetransmissions=stnPptpDomainConfigControlRetransmissions, stnPptpTraps=stnPptpTraps, stnPptpDomainConfigEntry=stnPptpDomainConfigEntry, stnPptpSessionStatsAckTimeouts=stnPptpSessionStatsAckTimeouts, stnPptpDomainStatsControlSendOctets=stnPptpDomainStatsControlSendOctets, stnPptpSessionStatsHLIfIndex=stnPptpSessionStatsHLIfIndex, stnPptpDomainStatsPayloadRecvPackets=stnPptpDomainStatsPayloadRecvPackets, stnPptpSessionStatsLocalRWS=stnPptpSessionStatsLocalRWS, stnPptpTunnelStatsControlSendPackets=stnPptpTunnelStatsControlSendPackets, stnPptpSessionStatsTable=stnPptpSessionStatsTable, stnPptpDomainMapIdentifier=stnPptpDomainMapIdentifier, stnPptpSessionStatsTunnelIfIndex=stnPptpSessionStatsTunnelIfIndex, stnPptpTunnelConfigTransport=stnPptpTunnelConfigTransport, PYSNMP_MODULE_ID=stnPptp, stnPptpSessionStatsCallType=stnPptpSessionStatsCallType, stnPptpDomainGroup=stnPptpDomainGroup, stnPptpDomainStatsActiveSessions=stnPptpDomainStatsActiveSessions, stnPptpTunnelConfigIfIndex=stnPptpTunnelConfigIfIndex, stnPptpSessionStatsFramingType=stnPptpSessionStatsFramingType, stnPptpDomainStatsActiveTunnels=stnPptpDomainStatsActiveTunnels, stnPptpDomainConfigTable=stnPptpDomainConfigTable, stnPptpFirmwareRev=stnPptpFirmwareRev, stnPptpDomainConfigTunnelIdleTimeout=stnPptpDomainConfigTunnelIdleTimeout, stnPptpTunnelStatsLocalTID=stnPptpTunnelStatsLocalTID, stnPptpTunnelStatsLastErrorMessage=stnPptpTunnelStatsLastErrorMessage, stnPptpDomainStatsPayloadSendOctets=stnPptpDomainStatsPayloadSendOctets, stnPptpSessionStatsSendSeq=stnPptpSessionStatsSendSeq, stnPptpTunnelStatsActiveSessions=stnPptpTunnelStatsActiveSessions, stnPptpSessionStatsRemoteInitialRWS=stnPptpSessionStatsRemoteInitialRWS, stnPptpTunnelStatsFailedSessions=stnPptpTunnelStatsFailedSessions, stnPptpTunnelConfigControlRetransmissions=stnPptpTunnelConfigControlRetransmissions, stnPptpSessionStatsEntry=stnPptpSessionStatsEntry, stnPptpTunnelStatsRemoteFirmwareRevision=stnPptpTunnelStatsRemoteFirmwareRevision, stnPptpTunnelStatsRemoteVendorName=stnPptpTunnelStatsRemoteVendorName, stnPptpGroups=stnPptpGroups, stnPptpDomainConfigPayloadRWS=stnPptpDomainConfigPayloadRWS, stnPptpSessionMapEntry=stnPptpSessionMapEntry, stnPptpDomainConfigTunnelSecurity=stnPptpDomainConfigTunnelSecurity, stnPptpSessionMapTable=stnPptpSessionMapTable, stnPptpSessionStatsPhysChanId=stnPptpSessionStatsPhysChanId, stnPptpSessionStatsSendSeqAck=stnPptpSessionStatsSendSeqAck, stnPptpDomainConfigSecret=stnPptpDomainConfigSecret, stnPptpTunnelStatsEntry=stnPptpTunnelStatsEntry, stnPptpSessionMapLocalCID=stnPptpSessionMapLocalCID, stnPptpTunnelConfigReassemblyTimeout=stnPptpTunnelConfigReassemblyTimeout, stnPptpDomainMapTypeInfo=stnPptpDomainMapTypeInfo, stnPptpDomainStatsTable=stnPptpDomainStatsTable, stnPptpTunnelStatsInitiated=stnPptpTunnelStatsInitiated, stnPptpDomainConfigStatus=stnPptpDomainConfigStatus, stnPptpTunnelMapTable=stnPptpTunnelMapTable, stnPptpSessionStatsSendZLB=stnPptpSessionStatsSendZLB, stnPptpTunnelConfigEntry=stnPptpTunnelConfigEntry, stnPptpSessionStatsPrivateGroupID=stnPptpSessionStatsPrivateGroupID, stnPptpSessionStatsCallBearerType=stnPptpSessionStatsCallBearerType, stnPptpTunnelStatsRemoteHostName=stnPptpTunnelStatsRemoteHostName, stnPptpTunnelStatsFramingCapabilities=stnPptpTunnelStatsFramingCapabilities, stnPptpDomainStatsPayloadRecvDiscards=stnPptpDomainStatsPayloadRecvDiscards, stnPptpTunnelConfigAuthentication=stnPptpTunnelConfigAuthentication, stnPptpSessionStatsRxConnectSpeed=stnPptpSessionStatsRxConnectSpeed, stnPptpTunnelConfigSecurity=stnPptpTunnelConfigSecurity, stnPptpTunnelStatsState=stnPptpTunnelStatsState, stnPptpDomainMapType=stnPptpDomainMapType, stnPptpTunnelConfigDelayedAckTimeout=stnPptpTunnelConfigDelayedAckTimeout, stnPptpSesssionStatsCurrentRemoteRWS=stnPptpSesssionStatsCurrentRemoteRWS, stnPptpObjects=stnPptpObjects, stnPptpScalar=stnPptpScalar, stnPptpDomainStatsTotalTunnels=stnPptpDomainStatsTotalTunnels, stnPptpTunnelConfigTable=stnPptpTunnelConfigTable, stnPptpTunnelConfigControlRWS=stnPptpTunnelConfigControlRWS, stnPptpTunnelConfigPayloadSequencing=stnPptpTunnelConfigPayloadSequencing, stnPptpStatsGroup=stnPptpStatsGroup, stnPptpStats=stnPptpStats)
