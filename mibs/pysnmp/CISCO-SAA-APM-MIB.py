#
# PySNMP MIB module CISCO-SAA-APM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SAA-APM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:54:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
OwnerString, = mibBuilder.importSymbols("IF-MIB", "OwnerString")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, ModuleIdentity, Bits, IpAddress, MibIdentifier, Unsigned32, iso, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "Bits", "IpAddress", "MibIdentifier", "Unsigned32", "iso", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "TimeTicks", "NotificationType")
RowStatus, TruthValue, TimeStamp, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TimeStamp", "DisplayString", "TextualConvention")
ciscoSaaApmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 177))
ciscoSaaApmMIB.setRevisions(('2000-10-10 00:00',))
if mibBuilder.loadTexts: ciscoSaaApmMIB.setLastUpdated('200010100000Z')
if mibBuilder.loadTexts: ciscoSaaApmMIB.setOrganization('Cisco Systems, Inc.')
class SaaApmOperErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("noError", 1), ("ftpDnldErr", 2), ("targetDown", 3), ("scriptErr", 4), ("socketErr", 5), ("internalErr", 6), ("digestErr", 7), ("fileHeaderErr", 8), ("fileFormatErr", 9), ("cacheFull", 10), ("lowMem", 11))

class SaaApmDataTransErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noError", 1), ("ftpErr", 2), ("timeoutErr", 3))

ciscoSaaApmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 1))
saaApmAppl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 1))
saaApmCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2))
saaApmOper = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 3))
saaApmApplMajorVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmApplMajorVersion.setStatus('current')
saaApmApplMinorVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmApplMinorVersion.setStatus('current')
saaApmApplMaxOper = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmApplMaxOper.setStatus('current')
saaApmApplFreeMemLowWaterMark = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saaApmApplFreeMemLowWaterMark.setStatus('current')
saaApmApplOperCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmApplOperCapacity.setStatus('current')
saaApmCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1), )
if mibBuilder.loadTexts: saaApmCtrlTable.setStatus('current')
saaApmCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SAA-APM-MIB", "saaApmCtrlIndex"))
if mibBuilder.loadTexts: saaApmCtrlEntry.setStatus('current')
saaApmCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: saaApmCtrlIndex.setStatus('current')
saaApmCtrlScriptCfgURL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saaApmCtrlScriptCfgURL.setStatus('current')
saaApmCtrlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 3), OwnerString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saaApmCtrlOwner.setStatus('current')
saaApmCtrlInitDataTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saaApmCtrlInitDataTrans.setStatus('current')
saaApmCtrlDataTransTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmCtrlDataTransTime.setStatus('current')
saaApmCtrlDataTransStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 6), SaaApmDataTransErrorCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmCtrlDataTransStatus.setStatus('current')
saaApmCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saaApmCtrlStatus.setStatus('current')
saaApmCtrlNvgen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 2, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saaApmCtrlNvgen.setStatus('current')
saaApmOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 3, 1), )
if mibBuilder.loadTexts: saaApmOperTable.setStatus('current')
saaApmOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 3, 1, 1), )
saaApmCtrlEntry.registerAugmentions(("CISCO-SAA-APM-MIB", "saaApmOperEntry"))
saaApmOperEntry.setIndexNames(*saaApmCtrlEntry.getIndexNames())
if mibBuilder.loadTexts: saaApmOperEntry.setStatus('current')
saaApmOperLastStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 3, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmOperLastStartTime.setStatus('current')
saaApmOperLastEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 3, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmOperLastEndTime.setStatus('current')
saaApmOperLastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 177, 1, 3, 1, 1, 3), SaaApmOperErrorCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saaApmOperLastStatus.setStatus('current')
ciscoSaaApmMIBNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 2))
ciscoSaaApmMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 2, 0))
ciscoSaaApmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 3))
ciscoSaaApmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 3, 1))
ciscoSaaApmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 177, 3, 2))
ciscoSaaApmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 177, 3, 1, 1)).setObjects(("CISCO-SAA-APM-MIB", "ciscoSaaApmApplGroup"), ("CISCO-SAA-APM-MIB", "ciscoSaaApmCtrlGroup"), ("CISCO-SAA-APM-MIB", "ciscoSaaApmOperGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSaaApmMIBCompliance = ciscoSaaApmMIBCompliance.setStatus('current')
ciscoSaaApmApplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 177, 3, 2, 1)).setObjects(("CISCO-SAA-APM-MIB", "saaApmApplMajorVersion"), ("CISCO-SAA-APM-MIB", "saaApmApplMinorVersion"), ("CISCO-SAA-APM-MIB", "saaApmApplMaxOper"), ("CISCO-SAA-APM-MIB", "saaApmApplFreeMemLowWaterMark"), ("CISCO-SAA-APM-MIB", "saaApmApplOperCapacity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSaaApmApplGroup = ciscoSaaApmApplGroup.setStatus('current')
ciscoSaaApmCtrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 177, 3, 2, 2)).setObjects(("CISCO-SAA-APM-MIB", "saaApmCtrlScriptCfgURL"), ("CISCO-SAA-APM-MIB", "saaApmCtrlOwner"), ("CISCO-SAA-APM-MIB", "saaApmCtrlInitDataTrans"), ("CISCO-SAA-APM-MIB", "saaApmCtrlDataTransTime"), ("CISCO-SAA-APM-MIB", "saaApmCtrlDataTransStatus"), ("CISCO-SAA-APM-MIB", "saaApmCtrlStatus"), ("CISCO-SAA-APM-MIB", "saaApmCtrlNvgen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSaaApmCtrlGroup = ciscoSaaApmCtrlGroup.setStatus('current')
ciscoSaaApmOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 177, 3, 2, 3)).setObjects(("CISCO-SAA-APM-MIB", "saaApmOperLastStartTime"), ("CISCO-SAA-APM-MIB", "saaApmOperLastEndTime"), ("CISCO-SAA-APM-MIB", "saaApmOperLastStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSaaApmOperGroup = ciscoSaaApmOperGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SAA-APM-MIB", PYSNMP_MODULE_ID=ciscoSaaApmMIB, saaApmCtrlDataTransStatus=saaApmCtrlDataTransStatus, ciscoSaaApmCtrlGroup=ciscoSaaApmCtrlGroup, ciscoSaaApmMIBNotifPrefix=ciscoSaaApmMIBNotifPrefix, ciscoSaaApmMIBNotifs=ciscoSaaApmMIBNotifs, saaApmCtrl=saaApmCtrl, SaaApmDataTransErrorCode=SaaApmDataTransErrorCode, saaApmApplMaxOper=saaApmApplMaxOper, saaApmApplMajorVersion=saaApmApplMajorVersion, ciscoSaaApmMIB=ciscoSaaApmMIB, ciscoSaaApmMIBGroups=ciscoSaaApmMIBGroups, saaApmCtrlStatus=saaApmCtrlStatus, saaApmApplFreeMemLowWaterMark=saaApmApplFreeMemLowWaterMark, saaApmOper=saaApmOper, saaApmCtrlTable=saaApmCtrlTable, saaApmOperTable=saaApmOperTable, ciscoSaaApmMIBCompliance=ciscoSaaApmMIBCompliance, saaApmCtrlEntry=saaApmCtrlEntry, ciscoSaaApmMIBObjects=ciscoSaaApmMIBObjects, ciscoSaaApmOperGroup=ciscoSaaApmOperGroup, ciscoSaaApmMIBConformance=ciscoSaaApmMIBConformance, saaApmCtrlInitDataTrans=saaApmCtrlInitDataTrans, saaApmOperLastEndTime=saaApmOperLastEndTime, saaApmCtrlOwner=saaApmCtrlOwner, saaApmCtrlIndex=saaApmCtrlIndex, saaApmOperLastStatus=saaApmOperLastStatus, saaApmApplMinorVersion=saaApmApplMinorVersion, ciscoSaaApmApplGroup=ciscoSaaApmApplGroup, saaApmCtrlDataTransTime=saaApmCtrlDataTransTime, saaApmAppl=saaApmAppl, saaApmCtrlNvgen=saaApmCtrlNvgen, saaApmOperEntry=saaApmOperEntry, saaApmOperLastStartTime=saaApmOperLastStartTime, saaApmApplOperCapacity=saaApmApplOperCapacity, SaaApmOperErrorCode=SaaApmOperErrorCode, ciscoSaaApmMIBCompliances=ciscoSaaApmMIBCompliances, saaApmCtrlScriptCfgURL=saaApmCtrlScriptCfgURL)
