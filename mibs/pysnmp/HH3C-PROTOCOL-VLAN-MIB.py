#
# PySNMP MIB module HH3C-PROTOCOL-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-PROTOCOL-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, ObjectIdentity, IpAddress, Unsigned32, MibIdentifier, iso, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, TimeTicks, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Unsigned32", "MibIdentifier", "iso", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "TimeTicks", "Integer32", "Bits")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
hh3cProtocolVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 16))
hh3cProtocolVlan.setRevisions(('2004-08-31 19:38',))
if mibBuilder.loadTexts: hh3cProtocolVlan.setLastUpdated('200408311800Z')
if mibBuilder.loadTexts: hh3cProtocolVlan.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class Hh3cvProtocolVlanProtocolType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 101, 102, 103))
    namedValues = NamedValues(("ip", 1), ("ipx", 2), ("at", 3), ("ipv6", 4), ("mode-llc", 101), ("mode-snap", 102), ("mode-ethernetii", 103))

class Hh3cvProtocolVlanProtocolSubType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("notused", 1), ("ethernetii", 2), ("llc", 3), ("raw", 4), ("snap", 5), ("etype", 6))

hh3cProtocolVlanOperate = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1))
hh3cProtocolNumAllVlan = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cProtocolNumAllVlan.setStatus('current')
hh3cProtocolNumPerVlan = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cProtocolNumPerVlan.setStatus('current')
hh3cProtocolNumAllPort = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cProtocolNumAllPort.setStatus('current')
hh3cProtocolNumPerPort = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cProtocolNumPerPort.setStatus('current')
hh3cProtocolVlanTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5), )
if mibBuilder.loadTexts: hh3cProtocolVlanTable.setStatus('current')
hh3cProtocolVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5, 1), ).setIndexNames((0, "HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanVlanId"), (0, "HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanProtocolIndex"))
if mibBuilder.loadTexts: hh3cProtocolVlanEntry.setStatus('current')
hh3cProtocolVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cProtocolVlanVlanId.setStatus('current')
hh3cProtocolVlanProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: hh3cProtocolVlanProtocolIndex.setStatus('current')
hh3cProtocolVlanProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5, 1, 3), Hh3cvProtocolVlanProtocolType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cProtocolVlanProtocolType.setStatus('current')
hh3cProtocolVlanProtocolSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5, 1, 4), Hh3cvProtocolVlanProtocolSubType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cProtocolVlanProtocolSubType.setStatus('current')
hh3cProtocolVlanProtocolTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cProtocolVlanProtocolTypeValue.setStatus('current')
hh3cProtocolVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cProtocolVlanRowStatus.setStatus('current')
hh3cProtocolVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6), )
if mibBuilder.loadTexts: hh3cProtocolVlanPortTable.setStatus('current')
hh3cProtocolVlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1), ).setIndexNames((0, "HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortIndex"), (0, "HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortVlanId"), (0, "HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortProtocolId"))
if mibBuilder.loadTexts: hh3cProtocolVlanPortEntry.setStatus('current')
hh3cProtocolVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cProtocolVlanPortIndex.setStatus('current')
hh3cProtocolVlanPortVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1, 2), Integer32())
if mibBuilder.loadTexts: hh3cProtocolVlanPortVlanId.setStatus('current')
hh3cProtocolVlanPortProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1, 3), Integer32())
if mibBuilder.loadTexts: hh3cProtocolVlanPortProtocolId.setStatus('current')
hh3cProtocolVlanPortProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1, 4), Hh3cvProtocolVlanProtocolType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cProtocolVlanPortProtocolType.setStatus('current')
hh3cProtocolVlanPortProtocolSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1, 5), Hh3cvProtocolVlanProtocolSubType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cProtocolVlanPortProtocolSubType.setStatus('current')
hh3cProtocolVlanPortTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cProtocolVlanPortTypeValue.setStatus('current')
hh3cProtocolVlanPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cProtocolVlanPortRowStatus.setStatus('current')
hh3cDifferentProtocolNumAllPort = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 16, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDifferentProtocolNumAllPort.setStatus('current')
hh3cProtocolVlanConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 16, 2))
hh3cProtocolVlanCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 16, 2, 1))
hh3cProtocolVlanCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 2, 16, 2, 1, 1)).setObjects(("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanOperateGroup"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanProtocolGroup"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cProtocolVlanCompliance = hh3cProtocolVlanCompliance.setStatus('current')
hh3cProtocolVlanGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 16, 2, 2))
hh3cProtocolVlanOperateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 16, 2, 2, 1)).setObjects(("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolNumAllVlan"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolNumPerVlan"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolNumAllPort"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolNumPerPort"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cDifferentProtocolNumAllPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cProtocolVlanOperateGroup = hh3cProtocolVlanOperateGroup.setStatus('current')
hh3cProtocolVlanProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 16, 2, 2, 2)).setObjects(("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanProtocolType"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanProtocolSubType"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanProtocolTypeValue"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cProtocolVlanProtocolGroup = hh3cProtocolVlanProtocolGroup.setStatus('current')
hh3cProtocolVlanPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 16, 2, 2, 3)).setObjects(("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortProtocolType"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortProtocolSubType"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortTypeValue"), ("HH3C-PROTOCOL-VLAN-MIB", "hh3cProtocolVlanPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cProtocolVlanPortGroup = hh3cProtocolVlanPortGroup.setStatus('current')
mibBuilder.exportSymbols("HH3C-PROTOCOL-VLAN-MIB", hh3cProtocolVlanConformance=hh3cProtocolVlanConformance, PYSNMP_MODULE_ID=hh3cProtocolVlan, hh3cProtocolVlanCompliances=hh3cProtocolVlanCompliances, hh3cDifferentProtocolNumAllPort=hh3cDifferentProtocolNumAllPort, hh3cProtocolNumPerPort=hh3cProtocolNumPerPort, hh3cProtocolVlan=hh3cProtocolVlan, hh3cProtocolVlanPortEntry=hh3cProtocolVlanPortEntry, hh3cProtocolVlanProtocolGroup=hh3cProtocolVlanProtocolGroup, hh3cProtocolVlanOperateGroup=hh3cProtocolVlanOperateGroup, hh3cProtocolVlanProtocolTypeValue=hh3cProtocolVlanProtocolTypeValue, hh3cProtocolVlanVlanId=hh3cProtocolVlanVlanId, hh3cProtocolNumPerVlan=hh3cProtocolNumPerVlan, hh3cProtocolVlanPortProtocolId=hh3cProtocolVlanPortProtocolId, Hh3cvProtocolVlanProtocolSubType=Hh3cvProtocolVlanProtocolSubType, hh3cProtocolVlanRowStatus=hh3cProtocolVlanRowStatus, hh3cProtocolVlanPortRowStatus=hh3cProtocolVlanPortRowStatus, hh3cProtocolVlanGroups=hh3cProtocolVlanGroups, hh3cProtocolVlanPortVlanId=hh3cProtocolVlanPortVlanId, hh3cProtocolNumAllVlan=hh3cProtocolNumAllVlan, Hh3cvProtocolVlanProtocolType=Hh3cvProtocolVlanProtocolType, hh3cProtocolVlanProtocolIndex=hh3cProtocolVlanProtocolIndex, hh3cProtocolVlanPortIndex=hh3cProtocolVlanPortIndex, hh3cProtocolVlanTable=hh3cProtocolVlanTable, hh3cProtocolVlanPortGroup=hh3cProtocolVlanPortGroup, hh3cProtocolVlanPortTypeValue=hh3cProtocolVlanPortTypeValue, hh3cProtocolVlanProtocolType=hh3cProtocolVlanProtocolType, hh3cProtocolVlanOperate=hh3cProtocolVlanOperate, hh3cProtocolVlanPortProtocolSubType=hh3cProtocolVlanPortProtocolSubType, hh3cProtocolVlanPortTable=hh3cProtocolVlanPortTable, hh3cProtocolVlanCompliance=hh3cProtocolVlanCompliance, hh3cProtocolVlanPortProtocolType=hh3cProtocolVlanPortProtocolType, hh3cProtocolNumAllPort=hh3cProtocolNumAllPort, hh3cProtocolVlanEntry=hh3cProtocolVlanEntry, hh3cProtocolVlanProtocolSubType=hh3cProtocolVlanProtocolSubType)
