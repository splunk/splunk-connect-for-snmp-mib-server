#
# PySNMP MIB module MLD-SNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MLD-SNOOPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:03:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, iso, Counter64, IpAddress, Gauge32, ModuleIdentity, Integer32, NotificationType, TimeTicks, Unsigned32, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "iso", "Counter64", "IpAddress", "Gauge32", "ModuleIdentity", "Integer32", "NotificationType", "TimeTicks", "Unsigned32", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "DisplayString", "TextualConvention")
swMldSnpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 34))
if mibBuilder.loadTexts: swMldSnpMIB.setLastUpdated('0802020000Z')
if mibBuilder.loadTexts: swMldSnpMIB.setOrganization('D-Link Crop.')
class Ipv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

class PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

swMldSnpCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 34, 1))
swMldSnpInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 34, 2))
swMldSnpMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 34, 3))
swMldSnoopingGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 34, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingGlobalState.setStatus('current')
swMldSnoopingMcstRTOnly = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 34, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingMcstRTOnly.setStatus('current')
swMldSnoopingMaxSupportedVlans = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingMaxSupportedVlans.setStatus('current')
swMldSnoopingCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2), )
if mibBuilder.loadTexts: swMldSnoopingCtrlTable.setStatus('current')
swMldSnoopingCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1), ).setIndexNames((0, "MLD-SNOOPING-MIB", "swMldSnoopingCtrlVid"))
if mibBuilder.loadTexts: swMldSnoopingCtrlEntry.setStatus('current')
swMldSnoopingCtrlVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingCtrlVid.setStatus('current')
swMldSnoopingQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(125)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingQueryInterval.setStatus('current')
swMldSnoopingMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingMaxResponseTime.setStatus('current')
swMldSnoopingRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingRobustness.setStatus('current')
swMldSnoopingLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingLastMemberQueryInterval.setStatus('current')
swMldSnoopingHostTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16711450)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingHostTimeout.setStatus('current')
swMldSnoopingRouteTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16711450)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingRouteTimeout.setStatus('current')
swMldSnoopingDoneTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16711450)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingDoneTimer.setStatus('current')
swMldSnoopingQueryState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingQueryState.setStatus('current')
swMldSnoopingCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("querier", 2), ("non-querier", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingCurrentState.setStatus('current')
swMldSnoopingCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingCtrlState.setStatus('current')
swMldSnoopingFastDoneState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingFastDoneState.setStatus('current')
swMldSnoopingVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version-1", 1), ("version-2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnoopingVersion.setStatus('current')
swMldSnoopingGroupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 3), )
if mibBuilder.loadTexts: swMldSnoopingGroupInfoTable.setStatus('obsolete')
swMldSnoopingGroupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 3, 1), ).setIndexNames((0, "MLD-SNOOPING-MIB", "swMldSnoopingGroupInfoVid"), (0, "MLD-SNOOPING-MIB", "swMldSnoopingGroupInfoIpAddr"))
if mibBuilder.loadTexts: swMldSnoopingGroupInfoEntry.setStatus('obsolete')
swMldSnoopingGroupInfoVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupInfoVid.setStatus('obsolete')
swMldSnoopingGroupInfoIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 3, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupInfoIpAddr.setStatus('obsolete')
swMldSnoopingGroupInfoMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupInfoMacAddr.setStatus('obsolete')
swMldSnoopingGroupInfoPortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 3, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupInfoPortMap.setStatus('obsolete')
swMldSnoopingGroupInfoReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupInfoReportCount.setStatus('obsolete')
swMldSnpRouterPortsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 4), )
if mibBuilder.loadTexts: swMldSnpRouterPortsTable.setStatus('current')
swMldSnpRouterPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 4, 1), ).setIndexNames((0, "MLD-SNOOPING-MIB", "swMldSnpRouterPortsVid"))
if mibBuilder.loadTexts: swMldSnpRouterPortsEntry.setStatus('current')
swMldSnpRouterPortsVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnpRouterPortsVid.setStatus('current')
swMldSnpRouterStaticPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 4, 1, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnpRouterStaticPortList.setStatus('current')
swMldSnpRouterDynamicPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 4, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnpRouterDynamicPortList.setStatus('current')
swMldSnpRouterForbiddenPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 4, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMldSnpRouterForbiddenPortList.setStatus('current')
swMldSnoopingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 5), )
if mibBuilder.loadTexts: swMldSnoopingGroupTable.setStatus('current')
swMldSnoopingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 5, 1), ).setIndexNames((0, "MLD-SNOOPING-MIB", "swMldSnoopingGroupVid"), (0, "MLD-SNOOPING-MIB", "swMldSnoopingGroupGroupAddr"), (0, "MLD-SNOOPING-MIB", "swMldSnoopingGroupSourceAddr"))
if mibBuilder.loadTexts: swMldSnoopingGroupEntry.setStatus('current')
swMldSnoopingGroupVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupVid.setStatus('current')
swMldSnoopingGroupGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 5, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupGroupAddr.setStatus('current')
swMldSnoopingGroupSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 5, 1, 3), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupSourceAddr.setStatus('current')
swMldSnoopingGroupIncludePortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 5, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupIncludePortMap.setStatus('current')
swMldSnoopingGroupExcludePortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 5, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnoopingGroupExcludePortMap.setStatus('current')
swMldSnpForwardingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 6), )
if mibBuilder.loadTexts: swMldSnpForwardingTable.setStatus('current')
swMldSnpForwardingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 6, 1), ).setIndexNames((0, "MLD-SNOOPING-MIB", "swMldSnpVid"), (0, "MLD-SNOOPING-MIB", "swMldSnpSourceIpAddr"), (0, "MLD-SNOOPING-MIB", "swMldSnpMutiGroupIpAddr"))
if mibBuilder.loadTexts: swMldSnpForwardingEntry.setStatus('current')
swMldSnpVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnpVid.setStatus('current')
swMldSnpSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 6, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnpSourceIpAddr.setStatus('current')
swMldSnpMutiGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 6, 1, 3), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnpMutiGroupIpAddr.setStatus('current')
swMldSnpForwardingListenPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 34, 3, 6, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMldSnpForwardingListenPort.setStatus('current')
mibBuilder.exportSymbols("MLD-SNOOPING-MIB", swMldSnpRouterPortsTable=swMldSnpRouterPortsTable, swMldSnoopingCtrlState=swMldSnoopingCtrlState, swMldSnoopingCurrentState=swMldSnoopingCurrentState, swMldSnoopingMaxResponseTime=swMldSnoopingMaxResponseTime, swMldSnpRouterPortsEntry=swMldSnpRouterPortsEntry, swMldSnoopingGroupInfoTable=swMldSnoopingGroupInfoTable, swMldSnoopingQueryState=swMldSnoopingQueryState, swMldSnpSourceIpAddr=swMldSnpSourceIpAddr, swMldSnoopingGroupInfoIpAddr=swMldSnoopingGroupInfoIpAddr, swMldSnoopingRobustness=swMldSnoopingRobustness, swMldSnoopingVersion=swMldSnoopingVersion, swMldSnpRouterStaticPortList=swMldSnpRouterStaticPortList, swMldSnpMIB=swMldSnpMIB, swMldSnoopingCtrlEntry=swMldSnoopingCtrlEntry, swMldSnoopingGroupExcludePortMap=swMldSnoopingGroupExcludePortMap, swMldSnoopingHostTimeout=swMldSnoopingHostTimeout, swMldSnoopingMcstRTOnly=swMldSnoopingMcstRTOnly, swMldSnpRouterDynamicPortList=swMldSnpRouterDynamicPortList, swMldSnoopingGroupInfoEntry=swMldSnoopingGroupInfoEntry, swMldSnoopingGroupVid=swMldSnoopingGroupVid, swMldSnoopingGroupSourceAddr=swMldSnoopingGroupSourceAddr, swMldSnpForwardingListenPort=swMldSnpForwardingListenPort, swMldSnoopingGroupInfoPortMap=swMldSnoopingGroupInfoPortMap, swMldSnpInfo=swMldSnpInfo, swMldSnoopingGroupGroupAddr=swMldSnoopingGroupGroupAddr, swMldSnoopingGroupInfoReportCount=swMldSnoopingGroupInfoReportCount, swMldSnpRouterForbiddenPortList=swMldSnpRouterForbiddenPortList, swMldSnoopingCtrlTable=swMldSnoopingCtrlTable, PortList=PortList, PYSNMP_MODULE_ID=swMldSnpMIB, swMldSnoopingRouteTimeout=swMldSnoopingRouteTimeout, swMldSnoopingGroupTable=swMldSnoopingGroupTable, swMldSnoopingGroupInfoVid=swMldSnoopingGroupInfoVid, swMldSnoopingLastMemberQueryInterval=swMldSnoopingLastMemberQueryInterval, swMldSnoopingGlobalState=swMldSnoopingGlobalState, swMldSnoopingGroupEntry=swMldSnoopingGroupEntry, swMldSnoopingGroupIncludePortMap=swMldSnoopingGroupIncludePortMap, swMldSnpRouterPortsVid=swMldSnpRouterPortsVid, Ipv6Address=Ipv6Address, swMldSnpForwardingEntry=swMldSnpForwardingEntry, swMldSnoopingFastDoneState=swMldSnoopingFastDoneState, swMldSnpMgmt=swMldSnpMgmt, swMldSnpVid=swMldSnpVid, swMldSnoopingQueryInterval=swMldSnoopingQueryInterval, swMldSnoopingDoneTimer=swMldSnoopingDoneTimer, swMldSnoopingGroupInfoMacAddr=swMldSnoopingGroupInfoMacAddr, swMldSnoopingCtrlVid=swMldSnoopingCtrlVid, swMldSnpForwardingTable=swMldSnpForwardingTable, swMldSnoopingMaxSupportedVlans=swMldSnoopingMaxSupportedVlans, swMldSnpMutiGroupIpAddr=swMldSnpMutiGroupIpAddr, swMldSnpCtrl=swMldSnpCtrl)
