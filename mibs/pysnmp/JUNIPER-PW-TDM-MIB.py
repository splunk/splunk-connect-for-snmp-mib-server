#
# PySNMP MIB module JUNIPER-PW-TDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-PW-TDM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
jnxMibs, jnxPwTdmMibRoot = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs", "jnxPwTdmMibRoot")
jnxVpnPwIndex, jnxVpnPwVpnName, jnxVpnPwVpnType = mibBuilder.importSymbols("JUNIPER-VPN-MIB", "jnxVpnPwIndex", "jnxVpnPwVpnName", "jnxVpnPwVpnType")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, TimeTicks, iso, Integer32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, NotificationType, MibIdentifier, Counter64, Gauge32, ObjectIdentity, transmission, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "iso", "Integer32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "NotificationType", "MibIdentifier", "Counter64", "Gauge32", "ObjectIdentity", "transmission", "Unsigned32")
TextualConvention, DisplayString, RowStatus, StorageType, TimeStamp, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "StorageType", "TimeStamp", "TruthValue")
jnxPWTdmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1))
jnxPWTdmMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: jnxPWTdmMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: jnxPWTdmMIB.setOrganization('Pseudo-Wire Emulation Edge-to-Edge (PWE3) Working Group')
class JnxPwTDMCfgIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class JnxPwCfgIndexOrzero(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

jnxpwTDMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1))
jnxpwTDMNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 2))
jnxpwTDMConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3))
jnxpwTDMTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1), )
if mibBuilder.loadTexts: jnxpwTDMTable.setStatus('current')
jnxpwTDMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1), ).setIndexNames((0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnType"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnName"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwIndex"))
if mibBuilder.loadTexts: jnxpwTDMEntry.setStatus('current')
jnxpwTDMRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 1), Integer32().clone(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMRate.setStatus('current')
jnxpwTDMIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMIfIndex.setStatus('current')
jnxpwGenTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 3), JnxPwCfgIndexOrzero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwGenTDMCfgIndex.setStatus('current')
jnxpwRelTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 4), JnxPwCfgIndexOrzero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwRelTDMCfgIndex.setStatus('current')
jnxpwTDMConfigError = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("notApplicable", 0), ("tdmTypeIncompatible", 1), ("peerRtpIncompatible", 2), ("peerPayloadSizeIncompatible", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMConfigError.setStatus('current')
jnxpwTDMTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMTimeElapsed.setStatus('current')
jnxpwTDMValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMValidIntervals.setStatus('current')
jnxpwTDMValidDayIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMValidDayIntervals.setStatus('current')
jnxpwTDMLastEsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMLastEsTimeStamp.setStatus('current')
jnxpwTDMCfgIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgIndexNext.setStatus('current')
jnxpwTDMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3), )
if mibBuilder.loadTexts: jnxpwTDMCfgTable.setStatus('current')
jnxpwTDMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1), ).setIndexNames((0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnType"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnName"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwIndex"))
if mibBuilder.loadTexts: jnxpwTDMCfgEntry.setStatus('current')
jnxpwTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 1), JnxPwTDMCfgIndex())
if mibBuilder.loadTexts: jnxpwTDMCfgIndex.setStatus('current')
jnxpwTDMCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgRowStatus.setStatus('current')
jnxpwTDMCfgPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgPayloadSize.setStatus('current')
jnxpwTDMCfgPktReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgPktReorder.setStatus('current')
jnxpwTDMCfgRtpHdrUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgRtpHdrUsed.setStatus('current')
jnxpwTDMCfgJtrBfrDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 7), Unsigned32().clone(3000)).setUnits('microsecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgJtrBfrDepth.setStatus('current')
jnxpwTDMCfgPayloadSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgPayloadSuppression.setStatus('current')
jnxpwTDMCfgConsecPktsInSynch = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 9), Unsigned32().clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgConsecPktsInSynch.setStatus('current')
jnxpwTDMCfgConsecMissPktsOutSynch = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 10), Unsigned32().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgConsecMissPktsOutSynch.setStatus('current')
jnxpwTDMCfgSetUp2SynchTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 11), Unsigned32().clone(5000)).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgSetUp2SynchTimeOut.setStatus('current')
jnxpwTDMCfgPktReplacePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allOnes", 1), ("implementationSpecific", 2), ("filler", 3))).clone('allOnes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgPktReplacePolicy.setStatus('current')
jnxpwTDMCfgAvePktLossTimeWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 13), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgAvePktLossTimeWindow.setStatus('current')
jnxpwTDMCfgExcessivePktLossThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 14), Unsigned32()).setUnits('Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgExcessivePktLossThreshold.setStatus('current')
jnxpwTDMCfgAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 15), Unsigned32().clone(2500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgAlarmThreshold.setStatus('current')
jnxpwTDMCfgClearAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 16), Unsigned32().clone(10000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgClearAlarmThreshold.setStatus('current')
jnxpwTDMCfgMissingPktsToSes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 17), Unsigned32().clone(30)).setUnits('Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgMissingPktsToSes.setStatus('current')
jnxpwTDMCfgTimestampMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("absolute", 2), ("differential", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgTimestampMode.setStatus('current')
jnxpwTDMCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 19), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgStorageType.setStatus('current')
jnxpwTDMCfgPktFiller = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgPktFiller.setStatus('current')
jnxpwTDMCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 3, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMCfgName.setStatus('current')
jnxpwTDMPerfCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5), )
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentTable.setStatus('current')
jnxpwTDMPerfCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1), ).setIndexNames((0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnType"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnName"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwIndex"))
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentEntry.setStatus('current')
jnxpwTDMPerfCurrentMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 1), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentMissingPkts.setStatus('current')
jnxpwTDMPerfCurrentPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 2), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentPktsReOrder.setStatus('current')
jnxpwTDMPerfCurrentJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 3), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentJtrBfrUnderruns.setStatus('current')
jnxpwTDMPerfCurrentMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 4), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentMisOrderDropped.setStatus('current')
jnxpwTDMPerfCurrentMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 5), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentMalformedPkt.setStatus('current')
jnxpwTDMPerfCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 6), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentESs.setStatus('current')
jnxpwTDMPerfCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 7), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentSESs.setStatus('current')
jnxpwTDMPerfCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 8), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentUASs.setStatus('current')
jnxpwTDMPerfCurrentFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 5, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfCurrentFC.setStatus('current')
jnxpwTDMPerfIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6), )
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalTable.setStatus('current')
jnxpwTDMPerfIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1), ).setIndexNames((0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnType"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnName"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwIndex"), (0, "JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalNumber"))
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalEntry.setStatus('current')
jnxpwTDMPerfIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalNumber.setStatus('current')
jnxpwTDMPerfIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalValidData.setStatus('current')
jnxpwTDMPerfIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalDuration.setStatus('current')
jnxpwTDMPerfIntervalMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 4), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalMissingPkts.setStatus('current')
jnxpwTDMPerfIntervalPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalPktsReOrder.setStatus('current')
jnxpwTDMPerfIntervalJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 6), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalJtrBfrUnderruns.setStatus('current')
jnxpwTDMPerfIntervalMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 7), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalMisOrderDropped.setStatus('current')
jnxpwTDMPerfIntervalMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 8), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalMalformedPkt.setStatus('current')
jnxpwTDMPerfIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 9), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalESs.setStatus('current')
jnxpwTDMPerfIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 10), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalSESs.setStatus('current')
jnxpwTDMPerfIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 11), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalUASs.setStatus('current')
jnxpwTDMPerfIntervalFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 6, 1, 12), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerfIntervalFC.setStatus('current')
jnxpwTDMPerf1DayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7), )
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalTable.setStatus('current')
jnxpwTDMPerf1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1), ).setIndexNames((0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnType"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwVpnName"), (0, "JUNIPER-VPN-MIB", "jnxVpnPwIndex"), (0, "JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalNumber"))
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalEntry.setStatus('current')
jnxpwTDMPerf1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalNumber.setStatus('current')
jnxpwTDMPerf1DayIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalValidData.setStatus('current')
jnxpwTDMPerf1DayIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalDuration.setStatus('current')
jnxpwTDMPerf1DayIntervalMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalMissingPkts.setStatus('current')
jnxpwTDMPerf1DayIntervalPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalPktsReOrder.setStatus('current')
jnxpwTDMPerf1DayIntervalJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalJtrBfrUnderruns.setStatus('current')
jnxpwTDMPerf1DayIntervalMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalMisOrderDropped.setStatus('current')
jnxpwTDMPerf1DayIntervalMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalMalformedPkt.setStatus('current')
jnxpwTDMPerf1DayIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalESs.setStatus('current')
jnxpwTDMPerf1DayIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalSESs.setStatus('current')
jnxpwTDMPerf1DayIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalUASs.setStatus('current')
jnxpwTDMPerf1DayIntervalFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 1, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxpwTDMPerf1DayIntervalFC.setStatus('current')
jnxpwTDMGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3, 1))
jnxpwTDMCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3, 2))
jnxpwTDMModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3, 2, 1)).setObjects(("JUNIPER-PW-TDM-MIB", "jnxpwTDMGroup"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentGroup"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalGroup"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxpwTDMModuleCompliance = jnxpwTDMModuleCompliance.setStatus('current')
jnxpwTDMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3, 1, 1)).setObjects(("JUNIPER-PW-TDM-MIB", "jnxpwTDMRate"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMIfIndex"), ("JUNIPER-PW-TDM-MIB", "jnxpwGenTDMCfgIndex"), ("JUNIPER-PW-TDM-MIB", "jnxpwRelTDMCfgIndex"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMConfigError"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMTimeElapsed"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMValidIntervals"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMValidDayIntervals"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMLastEsTimeStamp"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgIndexNext"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgRowStatus"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgPayloadSize"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgPktReorder"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgRtpHdrUsed"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgJtrBfrDepth"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgPayloadSuppression"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgConsecPktsInSynch"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgConsecMissPktsOutSynch"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgSetUp2SynchTimeOut"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgPktReplacePolicy"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgAvePktLossTimeWindow"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgExcessivePktLossThreshold"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgAlarmThreshold"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgClearAlarmThreshold"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgMissingPktsToSes"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgTimestampMode"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgStorageType"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgPktFiller"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMCfgName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxpwTDMGroup = jnxpwTDMGroup.setStatus('current')
jnxpwTDMPerfCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3, 1, 2)).setObjects(("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentMissingPkts"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentPktsReOrder"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentJtrBfrUnderruns"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentMisOrderDropped"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentMalformedPkt"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentESs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentSESs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentUASs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfCurrentFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxpwTDMPerfCurrentGroup = jnxpwTDMPerfCurrentGroup.setStatus('current')
jnxpwTDMPerfIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3, 1, 3)).setObjects(("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalValidData"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalDuration"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalMissingPkts"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalPktsReOrder"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalJtrBfrUnderruns"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalMisOrderDropped"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalMalformedPkt"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalESs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalSESs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalUASs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerfIntervalFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxpwTDMPerfIntervalGroup = jnxpwTDMPerfIntervalGroup.setStatus('current')
jnxpwTDMPerf1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 3, 54, 1, 3, 1, 4)).setObjects(("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalValidData"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalDuration"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalMissingPkts"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalPktsReOrder"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalJtrBfrUnderruns"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalMisOrderDropped"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalMalformedPkt"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalESs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalSESs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalUASs"), ("JUNIPER-PW-TDM-MIB", "jnxpwTDMPerf1DayIntervalFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxpwTDMPerf1DayIntervalGroup = jnxpwTDMPerf1DayIntervalGroup.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-PW-TDM-MIB", jnxpwTDMCfgTimestampMode=jnxpwTDMCfgTimestampMode, jnxpwTDMPerfCurrentMalformedPkt=jnxpwTDMPerfCurrentMalformedPkt, jnxpwTDMPerf1DayIntervalPktsReOrder=jnxpwTDMPerf1DayIntervalPktsReOrder, jnxpwTDMCompliances=jnxpwTDMCompliances, jnxpwTDMCfgName=jnxpwTDMCfgName, jnxpwTDMPerfIntervalTable=jnxpwTDMPerfIntervalTable, jnxPWTdmMIB=jnxPWTdmMIB, jnxpwRelTDMCfgIndex=jnxpwRelTDMCfgIndex, jnxpwTDMPerfCurrentJtrBfrUnderruns=jnxpwTDMPerfCurrentJtrBfrUnderruns, jnxpwTDMPerfIntervalNumber=jnxpwTDMPerfIntervalNumber, jnxpwTDMCfgPktReplacePolicy=jnxpwTDMCfgPktReplacePolicy, jnxpwTDMPerfIntervalValidData=jnxpwTDMPerfIntervalValidData, jnxpwTDMIfIndex=jnxpwTDMIfIndex, PYSNMP_MODULE_ID=jnxPWTdmMIB, jnxpwTDMPerf1DayIntervalMalformedPkt=jnxpwTDMPerf1DayIntervalMalformedPkt, jnxpwTDMPerfIntervalPktsReOrder=jnxpwTDMPerfIntervalPktsReOrder, jnxpwTDMPerfCurrentGroup=jnxpwTDMPerfCurrentGroup, jnxpwTDMLastEsTimeStamp=jnxpwTDMLastEsTimeStamp, JnxPwCfgIndexOrzero=JnxPwCfgIndexOrzero, jnxpwTDMPerfCurrentSESs=jnxpwTDMPerfCurrentSESs, jnxpwTDMPerf1DayIntervalTable=jnxpwTDMPerf1DayIntervalTable, jnxpwTDMCfgAvePktLossTimeWindow=jnxpwTDMCfgAvePktLossTimeWindow, jnxpwTDMCfgRtpHdrUsed=jnxpwTDMCfgRtpHdrUsed, jnxpwTDMPerf1DayIntervalUASs=jnxpwTDMPerf1DayIntervalUASs, jnxpwTDMObjects=jnxpwTDMObjects, jnxpwTDMTimeElapsed=jnxpwTDMTimeElapsed, jnxpwTDMCfgTable=jnxpwTDMCfgTable, jnxpwTDMCfgExcessivePktLossThreshold=jnxpwTDMCfgExcessivePktLossThreshold, jnxpwTDMCfgEntry=jnxpwTDMCfgEntry, jnxpwTDMCfgPktReorder=jnxpwTDMCfgPktReorder, jnxpwTDMGroup=jnxpwTDMGroup, jnxpwTDMCfgIndexNext=jnxpwTDMCfgIndexNext, jnxpwTDMPerfIntervalSESs=jnxpwTDMPerfIntervalSESs, jnxpwTDMPerfIntervalGroup=jnxpwTDMPerfIntervalGroup, jnxpwTDMCfgStorageType=jnxpwTDMCfgStorageType, jnxpwTDMValidDayIntervals=jnxpwTDMValidDayIntervals, jnxpwTDMPerfCurrentPktsReOrder=jnxpwTDMPerfCurrentPktsReOrder, jnxpwTDMPerf1DayIntervalGroup=jnxpwTDMPerf1DayIntervalGroup, jnxpwTDMPerfIntervalJtrBfrUnderruns=jnxpwTDMPerfIntervalJtrBfrUnderruns, jnxpwTDMPerf1DayIntervalESs=jnxpwTDMPerf1DayIntervalESs, jnxpwTDMPerf1DayIntervalMissingPkts=jnxpwTDMPerf1DayIntervalMissingPkts, jnxpwTDMConfigError=jnxpwTDMConfigError, jnxpwTDMPerf1DayIntervalSESs=jnxpwTDMPerf1DayIntervalSESs, jnxpwTDMPerfIntervalMisOrderDropped=jnxpwTDMPerfIntervalMisOrderDropped, jnxpwTDMCfgSetUp2SynchTimeOut=jnxpwTDMCfgSetUp2SynchTimeOut, jnxpwTDMPerfIntervalMissingPkts=jnxpwTDMPerfIntervalMissingPkts, jnxpwTDMCfgConsecPktsInSynch=jnxpwTDMCfgConsecPktsInSynch, jnxpwTDMValidIntervals=jnxpwTDMValidIntervals, jnxpwTDMCfgIndex=jnxpwTDMCfgIndex, jnxpwTDMRate=jnxpwTDMRate, jnxpwTDMPerfCurrentUASs=jnxpwTDMPerfCurrentUASs, jnxpwTDMCfgRowStatus=jnxpwTDMCfgRowStatus, jnxpwTDMPerfIntervalEntry=jnxpwTDMPerfIntervalEntry, jnxpwTDMPerf1DayIntervalValidData=jnxpwTDMPerf1DayIntervalValidData, jnxpwTDMPerfCurrentFC=jnxpwTDMPerfCurrentFC, jnxpwTDMPerfCurrentEntry=jnxpwTDMPerfCurrentEntry, jnxpwTDMPerf1DayIntervalJtrBfrUnderruns=jnxpwTDMPerf1DayIntervalJtrBfrUnderruns, jnxpwTDMPerf1DayIntervalMisOrderDropped=jnxpwTDMPerf1DayIntervalMisOrderDropped, jnxpwTDMPerfIntervalDuration=jnxpwTDMPerfIntervalDuration, jnxpwTDMTable=jnxpwTDMTable, jnxpwTDMPerfCurrentTable=jnxpwTDMPerfCurrentTable, jnxpwTDMCfgConsecMissPktsOutSynch=jnxpwTDMCfgConsecMissPktsOutSynch, jnxpwTDMPerf1DayIntervalDuration=jnxpwTDMPerf1DayIntervalDuration, jnxpwTDMPerf1DayIntervalEntry=jnxpwTDMPerf1DayIntervalEntry, jnxpwTDMNotifications=jnxpwTDMNotifications, jnxpwTDMCfgPayloadSize=jnxpwTDMCfgPayloadSize, jnxpwTDMPerfCurrentMisOrderDropped=jnxpwTDMPerfCurrentMisOrderDropped, jnxpwGenTDMCfgIndex=jnxpwGenTDMCfgIndex, jnxpwTDMPerf1DayIntervalNumber=jnxpwTDMPerf1DayIntervalNumber, jnxpwTDMCfgPayloadSuppression=jnxpwTDMCfgPayloadSuppression, jnxpwTDMCfgAlarmThreshold=jnxpwTDMCfgAlarmThreshold, jnxpwTDMGroups=jnxpwTDMGroups, jnxpwTDMPerfIntervalUASs=jnxpwTDMPerfIntervalUASs, jnxpwTDMConformance=jnxpwTDMConformance, jnxpwTDMPerfIntervalESs=jnxpwTDMPerfIntervalESs, jnxpwTDMPerfCurrentMissingPkts=jnxpwTDMPerfCurrentMissingPkts, jnxpwTDMEntry=jnxpwTDMEntry, jnxpwTDMPerf1DayIntervalFC=jnxpwTDMPerf1DayIntervalFC, jnxpwTDMPerfIntervalMalformedPkt=jnxpwTDMPerfIntervalMalformedPkt, JnxPwTDMCfgIndex=JnxPwTDMCfgIndex, jnxpwTDMCfgMissingPktsToSes=jnxpwTDMCfgMissingPktsToSes, jnxpwTDMPerfIntervalFC=jnxpwTDMPerfIntervalFC, jnxpwTDMModuleCompliance=jnxpwTDMModuleCompliance, jnxpwTDMPerfCurrentESs=jnxpwTDMPerfCurrentESs, jnxpwTDMCfgPktFiller=jnxpwTDMCfgPktFiller, jnxpwTDMCfgClearAlarmThreshold=jnxpwTDMCfgClearAlarmThreshold, jnxpwTDMCfgJtrBfrDepth=jnxpwTDMCfgJtrBfrDepth)
