#
# PySNMP MIB module Wellfleet-WFDOT1D-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-WFDOT1D-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Opaque, Unsigned32, Counter32, NotificationType, TimeTicks, IpAddress, iso, NotificationType, Bits, MibIdentifier, mib_2, mgmt, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Gauge32, Integer32, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Opaque", "Unsigned32", "Counter32", "NotificationType", "TimeTicks", "IpAddress", "iso", "NotificationType", "Bits", "MibIdentifier", "mib-2", "mgmt", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Gauge32", "Integer32", "Counter64", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfBridgeGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfBridgeGroup")
wfDot1d = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6))
wfDot1dBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 1))
wfDot1dStaticGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 5))
wfDot1dBaseBridgeAddress = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDot1dBaseBridgeAddress.setStatus('mandatory')
wfDot1dBaseNumPorts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDot1dBaseNumPorts.setStatus('mandatory')
wfDot1dBaseType = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unk", 1), ("only", 2), ("sr", 3), ("srt", 4))).clone('only')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDot1dBaseType.setStatus('mandatory')
wfDot1dStaticTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 5, 1), )
if mibBuilder.loadTexts: wfDot1dStaticTable.setStatus('mandatory')
wfDot1dStaticTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 5, 1, 1), ).setIndexNames((0, "Wellfleet-WFDOT1D-MIB", "wfDot1dStaticAddress"), (0, "Wellfleet-WFDOT1D-MIB", "wfDot1dStaticReceivePort"))
if mibBuilder.loadTexts: wfDot1dStaticTableEntry.setStatus('mandatory')
wfDot1dStaticAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 5, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1dStaticAddress.setStatus('mandatory')
wfDot1dStaticReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 5, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1dStaticReceivePort.setStatus('mandatory')
wfDot1dStaticAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 5, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1dStaticAllowedToGoTo.setStatus('mandatory')
wfDot1dStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 6, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("reset", 4), ("timeout", 5))).clone('invalid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1dStaticStatus.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-WFDOT1D-MIB", wfDot1dBaseBridgeAddress=wfDot1dBaseBridgeAddress, wfDot1dStaticStatus=wfDot1dStaticStatus, wfDot1dStaticAddress=wfDot1dStaticAddress, wfDot1dStaticTableEntry=wfDot1dStaticTableEntry, wfDot1dBaseGroup=wfDot1dBaseGroup, wfDot1dStaticAllowedToGoTo=wfDot1dStaticAllowedToGoTo, wfDot1dStaticGroup=wfDot1dStaticGroup, wfDot1dBaseNumPorts=wfDot1dBaseNumPorts, wfDot1dStaticTable=wfDot1dStaticTable, wfDot1dStaticReceivePort=wfDot1dStaticReceivePort, wfDot1dBaseType=wfDot1dBaseType, wfDot1d=wfDot1d)
