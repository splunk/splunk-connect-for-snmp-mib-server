#
# PySNMP MIB module STN-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, Counter64, NotificationType, iso, Counter32, TimeTicks, Gauge32, ObjectIdentity, Bits, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "Counter64", "NotificationType", "iso", "Counter32", "TimeTicks", "Gauge32", "ObjectIdentity", "Bits", "ModuleIdentity", "IpAddress")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
stnSystems, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnSystems")
stnSystemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 4))
if mibBuilder.loadTexts: stnSystemMIB.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnSystemMIB.setOrganization('Spring Tide Networks, Inc.')
stnSystemMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1))
stnSystemMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 4, 2))
stnSysTimeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 1))
stnSysAttrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 2))
stnSysServersGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 3))
stnSysCfgCtrlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 4))
stnUTCOffset = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnUTCOffset.setStatus('current')
stnDaylightTime = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 1, 2), TruthValue().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnDaylightTime.setStatus('current')
stnTimeSource = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("internal", 1), ("external-NTP", 2), ("external-RC868", 3), ("all", 4))).clone('all')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnTimeSource.setStatus('current')
stnRFC868Server = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnRFC868Server.setStatus('current')
stnNTPServer = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNTPServer.setStatus('current')
stnQueryTime = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnQueryTime.setStatus('current')
stnDeviceIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 2, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnDeviceIPAddress.setStatus('current')
stnDeviceSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 2, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnDeviceSubnetMask.setStatus('current')
stnSocketDelay = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSocketDelay.setStatus('current')
stnDumpMode = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("core", 2), ("context", 3), ("log", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnDumpMode.setStatus('current')
stnTelnetServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 3, 1), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnTelnetServerEnabled.setStatus('current')
stnFTPServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 3, 2), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnFTPServerEnabled.setStatus('current')
stnDNSServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 3, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnDNSServerEnabled.setStatus('current')
stnSysCfgCtrlNfsHost = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 4, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSysCfgCtrlNfsHost.setStatus('current')
stnSysCfgCtrlNfsPath = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSysCfgCtrlNfsPath.setStatus('current')
stnSysCfgCtrlCommitToFlashTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 4, 1, 4, 3), Integer32().clone(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSysCfgCtrlCommitToFlashTimeout.setStatus('current')
mibBuilder.exportSymbols("STN-SYSTEM-MIB", stnDeviceSubnetMask=stnDeviceSubnetMask, stnSystemMIB=stnSystemMIB, stnDaylightTime=stnDaylightTime, stnNTPServer=stnNTPServer, stnSysTimeGroup=stnSysTimeGroup, stnSystemMIBObjects=stnSystemMIBObjects, stnTimeSource=stnTimeSource, stnSystemMIBConformance=stnSystemMIBConformance, stnQueryTime=stnQueryTime, PYSNMP_MODULE_ID=stnSystemMIB, stnSysCfgCtrlNfsHost=stnSysCfgCtrlNfsHost, stnSysAttrGroup=stnSysAttrGroup, stnSysCfgCtrlNfsPath=stnSysCfgCtrlNfsPath, stnDeviceIPAddress=stnDeviceIPAddress, stnTelnetServerEnabled=stnTelnetServerEnabled, stnRFC868Server=stnRFC868Server, stnFTPServerEnabled=stnFTPServerEnabled, stnDNSServerEnabled=stnDNSServerEnabled, stnSysCfgCtrlCommitToFlashTimeout=stnSysCfgCtrlCommitToFlashTimeout, stnUTCOffset=stnUTCOffset, stnSysCfgCtrlGroup=stnSysCfgCtrlGroup, stnDumpMode=stnDumpMode, stnSysServersGroup=stnSysServersGroup, stnSocketDelay=stnSocketDelay)
