#
# PySNMP MIB module UDPLITE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/UDPLITE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:21:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, TimeTicks, IpAddress, NotificationType, Counter32, ObjectIdentity, MibIdentifier, Unsigned32, Counter64, Gauge32, iso, Bits, mib_2, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "IpAddress", "NotificationType", "Counter32", "ObjectIdentity", "MibIdentifier", "Unsigned32", "Counter64", "Gauge32", "iso", "Bits", "mib-2", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp")
udpliteMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 170))
udpliteMIB.setRevisions(('2007-12-18 00:00',))
if mibBuilder.loadTexts: udpliteMIB.setLastUpdated('200712180000Z')
if mibBuilder.loadTexts: udpliteMIB.setOrganization('IETF TSV Working Group (TSVWG)')
udplite = MibIdentifier((1, 3, 6, 1, 2, 1, 170, 1))
udpliteInDatagrams = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteInDatagrams.setStatus('current')
udpliteInPartialCov = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteInPartialCov.setStatus('current')
udpliteNoPorts = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteNoPorts.setStatus('current')
udpliteInErrors = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteInErrors.setStatus('current')
udpliteInBadChecksum = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteInBadChecksum.setStatus('current')
udpliteOutDatagrams = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteOutDatagrams.setStatus('current')
udpliteOutPartialCov = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteOutPartialCov.setStatus('current')
udpliteEndpointTable = MibTable((1, 3, 6, 1, 2, 1, 170, 1, 8), )
if mibBuilder.loadTexts: udpliteEndpointTable.setStatus('current')
udpliteEndpointEntry = MibTableRow((1, 3, 6, 1, 2, 1, 170, 1, 8, 1), ).setIndexNames((0, "UDPLITE-MIB", "udpliteEndpointLocalAddressType"), (0, "UDPLITE-MIB", "udpliteEndpointLocalAddress"), (0, "UDPLITE-MIB", "udpliteEndpointLocalPort"), (0, "UDPLITE-MIB", "udpliteEndpointRemoteAddressType"), (0, "UDPLITE-MIB", "udpliteEndpointRemoteAddress"), (0, "UDPLITE-MIB", "udpliteEndpointRemotePort"), (0, "UDPLITE-MIB", "udpliteEndpointInstance"))
if mibBuilder.loadTexts: udpliteEndpointEntry.setStatus('current')
udpliteEndpointLocalAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: udpliteEndpointLocalAddressType.setStatus('current')
udpliteEndpointLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 2), InetAddress())
if mibBuilder.loadTexts: udpliteEndpointLocalAddress.setStatus('current')
udpliteEndpointLocalPort = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: udpliteEndpointLocalPort.setStatus('current')
udpliteEndpointRemoteAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 4), InetAddressType())
if mibBuilder.loadTexts: udpliteEndpointRemoteAddressType.setStatus('current')
udpliteEndpointRemoteAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 5), InetAddress())
if mibBuilder.loadTexts: udpliteEndpointRemoteAddress.setStatus('current')
udpliteEndpointRemotePort = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 6), InetPortNumber())
if mibBuilder.loadTexts: udpliteEndpointRemotePort.setStatus('current')
udpliteEndpointInstance = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: udpliteEndpointInstance.setStatus('current')
udpliteEndpointProcess = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteEndpointProcess.setStatus('current')
udpliteEndpointMinCoverage = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteEndpointMinCoverage.setStatus('current')
udpliteEndpointViolCoverage = MibTableColumn((1, 3, 6, 1, 2, 1, 170, 1, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteEndpointViolCoverage.setStatus('current')
udpliteStatsDiscontinuityTime = MibScalar((1, 3, 6, 1, 2, 1, 170, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpliteStatsDiscontinuityTime.setStatus('current')
udpliteMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 170, 2))
udpliteMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 170, 2, 1)).setObjects(("UDPLITE-MIB", "udpliteBaseGroup"), ("UDPLITE-MIB", "udplitePartialCsumGroup"), ("UDPLITE-MIB", "udpliteEndpointGroup"), ("UDPLITE-MIB", "udpliteAppGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udpliteMIBCompliance = udpliteMIBCompliance.setStatus('current')
udpliteMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 170, 2, 2))
udpliteBaseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 170, 2, 2, 1)).setObjects(("UDPLITE-MIB", "udpliteInDatagrams"), ("UDPLITE-MIB", "udpliteNoPorts"), ("UDPLITE-MIB", "udpliteInErrors"), ("UDPLITE-MIB", "udpliteOutDatagrams"), ("UDPLITE-MIB", "udpliteStatsDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udpliteBaseGroup = udpliteBaseGroup.setStatus('current')
udplitePartialCsumGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 170, 2, 2, 2)).setObjects(("UDPLITE-MIB", "udpliteInPartialCov"), ("UDPLITE-MIB", "udpliteInBadChecksum"), ("UDPLITE-MIB", "udpliteOutPartialCov"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udplitePartialCsumGroup = udplitePartialCsumGroup.setStatus('current')
udpliteEndpointGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 170, 2, 2, 3)).setObjects(("UDPLITE-MIB", "udpliteEndpointProcess"), ("UDPLITE-MIB", "udpliteEndpointMinCoverage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udpliteEndpointGroup = udpliteEndpointGroup.setStatus('current')
udpliteAppGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 170, 2, 2, 4)).setObjects(("UDPLITE-MIB", "udpliteEndpointViolCoverage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udpliteAppGroup = udpliteAppGroup.setStatus('current')
mibBuilder.exportSymbols("UDPLITE-MIB", udpliteEndpointViolCoverage=udpliteEndpointViolCoverage, udpliteEndpointMinCoverage=udpliteEndpointMinCoverage, udpliteMIBGroups=udpliteMIBGroups, udpliteInPartialCov=udpliteInPartialCov, udpliteOutPartialCov=udpliteOutPartialCov, udpliteEndpointInstance=udpliteEndpointInstance, udpliteAppGroup=udpliteAppGroup, udpliteInDatagrams=udpliteInDatagrams, PYSNMP_MODULE_ID=udpliteMIB, udpliteMIB=udpliteMIB, udpliteEndpointTable=udpliteEndpointTable, udpliteEndpointLocalPort=udpliteEndpointLocalPort, udpliteInErrors=udpliteInErrors, udpliteInBadChecksum=udpliteInBadChecksum, udpliteEndpointRemoteAddress=udpliteEndpointRemoteAddress, udpliteEndpointProcess=udpliteEndpointProcess, udpliteOutDatagrams=udpliteOutDatagrams, udpliteEndpointLocalAddress=udpliteEndpointLocalAddress, udpliteMIBConformance=udpliteMIBConformance, udpliteNoPorts=udpliteNoPorts, udpliteMIBCompliance=udpliteMIBCompliance, udpliteEndpointRemotePort=udpliteEndpointRemotePort, udplite=udplite, udplitePartialCsumGroup=udplitePartialCsumGroup, udpliteBaseGroup=udpliteBaseGroup, udpliteEndpointEntry=udpliteEndpointEntry, udpliteEndpointLocalAddressType=udpliteEndpointLocalAddressType, udpliteEndpointGroup=udpliteEndpointGroup, udpliteStatsDiscontinuityTime=udpliteStatsDiscontinuityTime, udpliteEndpointRemoteAddressType=udpliteEndpointRemoteAddressType)
