#
# PySNMP MIB module Nortel-Magellan-Passport-BridgeMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-BridgeMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
MacAddress, DisplayString, Unsigned32, RowStatus, Gauge32, StorageType, BridgeId, Counter32, InterfaceIndex, Integer32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "MacAddress", "DisplayString", "Unsigned32", "RowStatus", "Gauge32", "StorageType", "BridgeId", "Counter32", "InterfaceIndex", "Integer32")
Hex, AsciiString, Link, NonReplicated, DashedHexString, HexString, AsciiStringIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Hex", "AsciiString", "Link", "NonReplicated", "DashedHexString", "HexString", "AsciiStringIndex")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
vrPpIndex, vrIndex, vr, vrPp = mibBuilder.importSymbols("Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex", "vrIndex", "vr", "vrPp")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, Unsigned32, Gauge32, ObjectIdentity, MibIdentifier, ModuleIdentity, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Unsigned32", "Gauge32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "TimeTicks", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bridgeMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25))
vrPpTbcl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2))
vrPpTbclRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 1), )
if mibBuilder.loadTexts: vrPpTbclRowStatusTable.setStatus('mandatory')
vrPpTbclRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclRowStatusEntry.setStatus('mandatory')
vrPpTbclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclRowStatus.setStatus('mandatory')
vrPpTbclComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclComponentName.setStatus('mandatory')
vrPpTbclStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclStorageType.setStatus('mandatory')
vrPpTbclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpTbclIndex.setStatus('mandatory')
vrPpTbclProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10), )
if mibBuilder.loadTexts: vrPpTbclProvTable.setStatus('mandatory')
vrPpTbclProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclProvEntry.setStatus('mandatory')
vrPpTbclTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclTranslateIpx.setStatus('mandatory')
vrPpTbclFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclFragmentIp.setStatus('mandatory')
vrPpTbclServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclServiceClass.setStatus('mandatory')
vrPpTbclConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclConvertArpMacAddress.setStatus('mandatory')
vrPpTbclPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclPortNum.setStatus('mandatory')
vrPpTbclOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclOutboundFrameMediaType.setStatus('mandatory')
vrPpTbclTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 11), )
if mibBuilder.loadTexts: vrPpTbclTbProvTable.setStatus('mandatory')
vrPpTbclTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclTbProvEntry.setStatus('mandatory')
vrPpTbclSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclSecureOption.setStatus('mandatory')
vrPpTbclStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12), )
if mibBuilder.loadTexts: vrPpTbclStpProvTable.setStatus('mandatory')
vrPpTbclStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclStpProvEntry.setStatus('mandatory')
vrPpTbclAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclAdminStatus.setStatus('mandatory')
vrPpTbclPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclPortStateStpControl.setStatus('mandatory')
vrPpTbclStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclStpTypeProv.setStatus('mandatory')
vrPpTbclPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclPortPriority.setStatus('mandatory')
vrPpTbclPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclPathCost.setStatus('mandatory')
vrPpTbclPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclPathCostMethod.setStatus('mandatory')
vrPpTbclDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 13), )
if mibBuilder.loadTexts: vrPpTbclDIProvTable.setStatus('mandatory')
vrPpTbclDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclDIProvEntry.setStatus('mandatory')
vrPpTbclDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclDomainNum.setStatus('mandatory')
vrPpTbclPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclPreserveDomain.setStatus('mandatory')
vrPpTbclStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 14), )
if mibBuilder.loadTexts: vrPpTbclStateTable.setStatus('mandatory')
vrPpTbclStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclStateEntry.setStatus('mandatory')
vrPpTbclAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclAdminState.setStatus('mandatory')
vrPpTbclOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclOperationalState.setStatus('mandatory')
vrPpTbclUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclUsageState.setStatus('mandatory')
vrPpTbclOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 15), )
if mibBuilder.loadTexts: vrPpTbclOperStatusTable.setStatus('mandatory')
vrPpTbclOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclOperStatusEntry.setStatus('mandatory')
vrPpTbclSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclSnmpOperStatus.setStatus('mandatory')
vrPpTbclOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16), )
if mibBuilder.loadTexts: vrPpTbclOperTable.setStatus('mandatory')
vrPpTbclOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclOperEntry.setStatus('mandatory')
vrPpTbclPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclPortName.setStatus('mandatory')
vrPpTbclUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclUpTime.setStatus('mandatory')
vrPpTbclDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclDownTime.setStatus('mandatory')
vrPpTbclBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclBridgingMode.setStatus('mandatory')
vrPpTbclBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclBridgePortConfig.setStatus('mandatory')
vrPpTbclBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclBridgePortType.setStatus('mandatory')
vrPpTbclIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclIfIndex.setStatus('mandatory')
vrPpTbclDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclDelayExceededDiscards.setStatus('mandatory')
vrPpTbclMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclMtuExceededDiscards.setStatus('mandatory')
vrPpTbclTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17), )
if mibBuilder.loadTexts: vrPpTbclTbOperTable.setStatus('mandatory')
vrPpTbclTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclTbOperEntry.setStatus('mandatory')
vrPpTbclMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclMaxInfo.setStatus('mandatory')
vrPpTbclBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclBadVerifyDiscards.setStatus('mandatory')
vrPpTbclUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclUnicastNoMatches.setStatus('mandatory')
vrPpTbclStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclStaticEntryDiscards.setStatus('mandatory')
vrPpTbclDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclDynamicEntryDiscards.setStatus('mandatory')
vrPpTbclLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclLearningDiscards.setStatus('mandatory')
vrPpTbclInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclInDiscards.setStatus('mandatory')
vrPpTbclInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclInFrames.setStatus('mandatory')
vrPpTbclOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclOutFrames.setStatus('mandatory')
vrPpTbclStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18), )
if mibBuilder.loadTexts: vrPpTbclStpOperTable.setStatus('mandatory')
vrPpTbclStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclStpOperEntry.setStatus('mandatory')
vrPpTbclStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclStpPortState.setStatus('mandatory')
vrPpTbclStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclStpTypeOper.setStatus('mandatory')
vrPpTbclDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclDesignatedCost.setStatus('mandatory')
vrPpTbclPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclPathCostOper.setStatus('mandatory')
vrPpTbclDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclDesignatedBridge.setStatus('mandatory')
vrPpTbclDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclDesignatedPort.setStatus('mandatory')
vrPpTbclForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclForwardTransitions.setStatus('mandatory')
vrPpTbclBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclBlockingDiscards.setStatus('mandatory')
vrPpTbclDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclDesignatedRoot.setStatus('mandatory')
vrPpTbclStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 19), )
if mibBuilder.loadTexts: vrPpTbclStatsTable.setStatus('mandatory')
vrPpTbclStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"))
if mibBuilder.loadTexts: vrPpTbclStatsEntry.setStatus('mandatory')
vrPpTbclBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclBadAbstractDiscards.setStatus('mandatory')
vrPpTbclTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclTinygramFramesIn.setStatus('mandatory')
vrPpTbclTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclTinygramFramesOut.setStatus('mandatory')
vrPpTbclInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclInFilterDiscards.setStatus('mandatory')
vrPpTbclOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclOutFilterDiscards.setStatus('mandatory')
vrPpTbclNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2))
vrPpTbclNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 1), )
if mibBuilder.loadTexts: vrPpTbclNsRowStatusTable.setStatus('mandatory')
vrPpTbclNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclNsIndex"))
if mibBuilder.loadTexts: vrPpTbclNsRowStatusEntry.setStatus('mandatory')
vrPpTbclNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclNsRowStatus.setStatus('mandatory')
vrPpTbclNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclNsComponentName.setStatus('mandatory')
vrPpTbclNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbclNsStorageType.setStatus('mandatory')
vrPpTbclNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpTbclNsIndex.setStatus('mandatory')
vrPpTbclNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 10), )
if mibBuilder.loadTexts: vrPpTbclNsProvTable.setStatus('mandatory')
vrPpTbclNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbclNsIndex"))
if mibBuilder.loadTexts: vrPpTbclNsProvEntry.setStatus('mandatory')
vrPpTbclNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclNsIncomingFilter.setStatus('mandatory')
vrPpTbclNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 2, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbclNsOutgoingFilter.setStatus('mandatory')
vrPpFddiETB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3))
vrPpFddiETBRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 1), )
if mibBuilder.loadTexts: vrPpFddiETBRowStatusTable.setStatus('mandatory')
vrPpFddiETBRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBRowStatusEntry.setStatus('mandatory')
vrPpFddiETBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBRowStatus.setStatus('mandatory')
vrPpFddiETBComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBComponentName.setStatus('mandatory')
vrPpFddiETBStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBStorageType.setStatus('mandatory')
vrPpFddiETBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpFddiETBIndex.setStatus('mandatory')
vrPpFddiETBProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10), )
if mibBuilder.loadTexts: vrPpFddiETBProvTable.setStatus('mandatory')
vrPpFddiETBProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBProvEntry.setStatus('mandatory')
vrPpFddiETBTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBTranslateIpx.setStatus('mandatory')
vrPpFddiETBFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBFragmentIp.setStatus('mandatory')
vrPpFddiETBServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBServiceClass.setStatus('mandatory')
vrPpFddiETBConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBConvertArpMacAddress.setStatus('mandatory')
vrPpFddiETBPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBPortNum.setStatus('mandatory')
vrPpFddiETBOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBOutboundFrameMediaType.setStatus('mandatory')
vrPpFddiETBTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 11), )
if mibBuilder.loadTexts: vrPpFddiETBTbProvTable.setStatus('mandatory')
vrPpFddiETBTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBTbProvEntry.setStatus('mandatory')
vrPpFddiETBSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBSecureOption.setStatus('mandatory')
vrPpFddiETBStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12), )
if mibBuilder.loadTexts: vrPpFddiETBStpProvTable.setStatus('mandatory')
vrPpFddiETBStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBStpProvEntry.setStatus('mandatory')
vrPpFddiETBAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBAdminStatus.setStatus('mandatory')
vrPpFddiETBPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBPortStateStpControl.setStatus('mandatory')
vrPpFddiETBStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBStpTypeProv.setStatus('mandatory')
vrPpFddiETBPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBPortPriority.setStatus('mandatory')
vrPpFddiETBPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBPathCost.setStatus('mandatory')
vrPpFddiETBPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBPathCostMethod.setStatus('mandatory')
vrPpFddiETBDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 13), )
if mibBuilder.loadTexts: vrPpFddiETBDIProvTable.setStatus('mandatory')
vrPpFddiETBDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBDIProvEntry.setStatus('mandatory')
vrPpFddiETBDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBDomainNum.setStatus('mandatory')
vrPpFddiETBPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBPreserveDomain.setStatus('mandatory')
vrPpFddiETBStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 14), )
if mibBuilder.loadTexts: vrPpFddiETBStateTable.setStatus('mandatory')
vrPpFddiETBStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBStateEntry.setStatus('mandatory')
vrPpFddiETBAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBAdminState.setStatus('mandatory')
vrPpFddiETBOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBOperationalState.setStatus('mandatory')
vrPpFddiETBUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBUsageState.setStatus('mandatory')
vrPpFddiETBOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 15), )
if mibBuilder.loadTexts: vrPpFddiETBOperStatusTable.setStatus('mandatory')
vrPpFddiETBOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBOperStatusEntry.setStatus('mandatory')
vrPpFddiETBSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBSnmpOperStatus.setStatus('mandatory')
vrPpFddiETBOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16), )
if mibBuilder.loadTexts: vrPpFddiETBOperTable.setStatus('mandatory')
vrPpFddiETBOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBOperEntry.setStatus('mandatory')
vrPpFddiETBPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBPortName.setStatus('mandatory')
vrPpFddiETBUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBUpTime.setStatus('mandatory')
vrPpFddiETBDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBDownTime.setStatus('mandatory')
vrPpFddiETBBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBBridgingMode.setStatus('mandatory')
vrPpFddiETBBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBBridgePortConfig.setStatus('mandatory')
vrPpFddiETBBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBBridgePortType.setStatus('mandatory')
vrPpFddiETBIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBIfIndex.setStatus('mandatory')
vrPpFddiETBDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBDelayExceededDiscards.setStatus('mandatory')
vrPpFddiETBMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBMtuExceededDiscards.setStatus('mandatory')
vrPpFddiETBTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17), )
if mibBuilder.loadTexts: vrPpFddiETBTbOperTable.setStatus('mandatory')
vrPpFddiETBTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBTbOperEntry.setStatus('mandatory')
vrPpFddiETBMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBMaxInfo.setStatus('mandatory')
vrPpFddiETBBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBBadVerifyDiscards.setStatus('mandatory')
vrPpFddiETBUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBUnicastNoMatches.setStatus('mandatory')
vrPpFddiETBStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBStaticEntryDiscards.setStatus('mandatory')
vrPpFddiETBDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBDynamicEntryDiscards.setStatus('mandatory')
vrPpFddiETBLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBLearningDiscards.setStatus('mandatory')
vrPpFddiETBInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBInDiscards.setStatus('mandatory')
vrPpFddiETBInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBInFrames.setStatus('mandatory')
vrPpFddiETBOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBOutFrames.setStatus('mandatory')
vrPpFddiETBStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18), )
if mibBuilder.loadTexts: vrPpFddiETBStpOperTable.setStatus('mandatory')
vrPpFddiETBStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBStpOperEntry.setStatus('mandatory')
vrPpFddiETBStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBStpPortState.setStatus('mandatory')
vrPpFddiETBStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBStpTypeOper.setStatus('mandatory')
vrPpFddiETBDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBDesignatedCost.setStatus('mandatory')
vrPpFddiETBPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBPathCostOper.setStatus('mandatory')
vrPpFddiETBDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBDesignatedBridge.setStatus('mandatory')
vrPpFddiETBDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBDesignatedPort.setStatus('mandatory')
vrPpFddiETBForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBForwardTransitions.setStatus('mandatory')
vrPpFddiETBBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBBlockingDiscards.setStatus('mandatory')
vrPpFddiETBDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBDesignatedRoot.setStatus('mandatory')
vrPpFddiETBStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 19), )
if mibBuilder.loadTexts: vrPpFddiETBStatsTable.setStatus('mandatory')
vrPpFddiETBStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"))
if mibBuilder.loadTexts: vrPpFddiETBStatsEntry.setStatus('mandatory')
vrPpFddiETBBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBBadAbstractDiscards.setStatus('mandatory')
vrPpFddiETBTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBTinygramFramesIn.setStatus('mandatory')
vrPpFddiETBTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBTinygramFramesOut.setStatus('mandatory')
vrPpFddiETBInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBInFilterDiscards.setStatus('mandatory')
vrPpFddiETBOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBOutFilterDiscards.setStatus('mandatory')
vrPpFddiETBNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2))
vrPpFddiETBNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 1), )
if mibBuilder.loadTexts: vrPpFddiETBNsRowStatusTable.setStatus('mandatory')
vrPpFddiETBNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBNsIndex"))
if mibBuilder.loadTexts: vrPpFddiETBNsRowStatusEntry.setStatus('mandatory')
vrPpFddiETBNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBNsRowStatus.setStatus('mandatory')
vrPpFddiETBNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBNsComponentName.setStatus('mandatory')
vrPpFddiETBNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpFddiETBNsStorageType.setStatus('mandatory')
vrPpFddiETBNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpFddiETBNsIndex.setStatus('mandatory')
vrPpFddiETBNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 10), )
if mibBuilder.loadTexts: vrPpFddiETBNsProvTable.setStatus('mandatory')
vrPpFddiETBNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpFddiETBNsIndex"))
if mibBuilder.loadTexts: vrPpFddiETBNsProvEntry.setStatus('mandatory')
vrPpFddiETBNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBNsIncomingFilter.setStatus('mandatory')
vrPpFddiETBNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 3, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpFddiETBNsOutgoingFilter.setStatus('mandatory')
vrPpTbp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4))
vrPpTbpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 1), )
if mibBuilder.loadTexts: vrPpTbpRowStatusTable.setStatus('mandatory')
vrPpTbpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpRowStatusEntry.setStatus('mandatory')
vrPpTbpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpRowStatus.setStatus('mandatory')
vrPpTbpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpComponentName.setStatus('mandatory')
vrPpTbpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpStorageType.setStatus('mandatory')
vrPpTbpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpTbpIndex.setStatus('mandatory')
vrPpTbpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10), )
if mibBuilder.loadTexts: vrPpTbpProvTable.setStatus('mandatory')
vrPpTbpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpProvEntry.setStatus('mandatory')
vrPpTbpTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpTranslateIpx.setStatus('mandatory')
vrPpTbpFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpFragmentIp.setStatus('mandatory')
vrPpTbpServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpServiceClass.setStatus('mandatory')
vrPpTbpConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpConvertArpMacAddress.setStatus('mandatory')
vrPpTbpPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpPortNum.setStatus('mandatory')
vrPpTbpOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpOutboundFrameMediaType.setStatus('mandatory')
vrPpTbpTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 11), )
if mibBuilder.loadTexts: vrPpTbpTbProvTable.setStatus('mandatory')
vrPpTbpTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpTbProvEntry.setStatus('mandatory')
vrPpTbpSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpSecureOption.setStatus('mandatory')
vrPpTbpStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12), )
if mibBuilder.loadTexts: vrPpTbpStpProvTable.setStatus('mandatory')
vrPpTbpStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpStpProvEntry.setStatus('mandatory')
vrPpTbpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpAdminStatus.setStatus('mandatory')
vrPpTbpPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpPortStateStpControl.setStatus('mandatory')
vrPpTbpStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpStpTypeProv.setStatus('mandatory')
vrPpTbpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpPortPriority.setStatus('mandatory')
vrPpTbpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpPathCost.setStatus('mandatory')
vrPpTbpPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpPathCostMethod.setStatus('mandatory')
vrPpTbpDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 13), )
if mibBuilder.loadTexts: vrPpTbpDIProvTable.setStatus('mandatory')
vrPpTbpDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpDIProvEntry.setStatus('mandatory')
vrPpTbpDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpDomainNum.setStatus('mandatory')
vrPpTbpPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpPreserveDomain.setStatus('mandatory')
vrPpTbpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 14), )
if mibBuilder.loadTexts: vrPpTbpStateTable.setStatus('mandatory')
vrPpTbpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpStateEntry.setStatus('mandatory')
vrPpTbpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpAdminState.setStatus('mandatory')
vrPpTbpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpOperationalState.setStatus('mandatory')
vrPpTbpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpUsageState.setStatus('mandatory')
vrPpTbpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 15), )
if mibBuilder.loadTexts: vrPpTbpOperStatusTable.setStatus('mandatory')
vrPpTbpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpOperStatusEntry.setStatus('mandatory')
vrPpTbpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpSnmpOperStatus.setStatus('mandatory')
vrPpTbpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16), )
if mibBuilder.loadTexts: vrPpTbpOperTable.setStatus('mandatory')
vrPpTbpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpOperEntry.setStatus('mandatory')
vrPpTbpPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpPortName.setStatus('mandatory')
vrPpTbpUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpUpTime.setStatus('mandatory')
vrPpTbpDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpDownTime.setStatus('mandatory')
vrPpTbpBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpBridgingMode.setStatus('mandatory')
vrPpTbpBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpBridgePortConfig.setStatus('mandatory')
vrPpTbpBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpBridgePortType.setStatus('mandatory')
vrPpTbpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpIfIndex.setStatus('mandatory')
vrPpTbpDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpDelayExceededDiscards.setStatus('mandatory')
vrPpTbpMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpMtuExceededDiscards.setStatus('mandatory')
vrPpTbpTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17), )
if mibBuilder.loadTexts: vrPpTbpTbOperTable.setStatus('mandatory')
vrPpTbpTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpTbOperEntry.setStatus('mandatory')
vrPpTbpMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpMaxInfo.setStatus('mandatory')
vrPpTbpBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpBadVerifyDiscards.setStatus('mandatory')
vrPpTbpUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpUnicastNoMatches.setStatus('mandatory')
vrPpTbpStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpStaticEntryDiscards.setStatus('mandatory')
vrPpTbpDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpDynamicEntryDiscards.setStatus('mandatory')
vrPpTbpLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpLearningDiscards.setStatus('mandatory')
vrPpTbpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpInDiscards.setStatus('mandatory')
vrPpTbpInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpInFrames.setStatus('mandatory')
vrPpTbpOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpOutFrames.setStatus('mandatory')
vrPpTbpStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18), )
if mibBuilder.loadTexts: vrPpTbpStpOperTable.setStatus('mandatory')
vrPpTbpStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpStpOperEntry.setStatus('mandatory')
vrPpTbpStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpStpPortState.setStatus('mandatory')
vrPpTbpStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpStpTypeOper.setStatus('mandatory')
vrPpTbpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpDesignatedCost.setStatus('mandatory')
vrPpTbpPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpPathCostOper.setStatus('mandatory')
vrPpTbpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpDesignatedBridge.setStatus('mandatory')
vrPpTbpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpDesignatedPort.setStatus('mandatory')
vrPpTbpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpForwardTransitions.setStatus('mandatory')
vrPpTbpBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpBlockingDiscards.setStatus('mandatory')
vrPpTbpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpDesignatedRoot.setStatus('mandatory')
vrPpTbpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 19), )
if mibBuilder.loadTexts: vrPpTbpStatsTable.setStatus('mandatory')
vrPpTbpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"))
if mibBuilder.loadTexts: vrPpTbpStatsEntry.setStatus('mandatory')
vrPpTbpBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpBadAbstractDiscards.setStatus('mandatory')
vrPpTbpTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpTinygramFramesIn.setStatus('mandatory')
vrPpTbpTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpTinygramFramesOut.setStatus('mandatory')
vrPpTbpInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpInFilterDiscards.setStatus('mandatory')
vrPpTbpOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpOutFilterDiscards.setStatus('mandatory')
vrPpTbpNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2))
vrPpTbpNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 1), )
if mibBuilder.loadTexts: vrPpTbpNsRowStatusTable.setStatus('mandatory')
vrPpTbpNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpNsIndex"))
if mibBuilder.loadTexts: vrPpTbpNsRowStatusEntry.setStatus('mandatory')
vrPpTbpNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpNsRowStatus.setStatus('mandatory')
vrPpTbpNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpNsComponentName.setStatus('mandatory')
vrPpTbpNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbpNsStorageType.setStatus('mandatory')
vrPpTbpNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpTbpNsIndex.setStatus('mandatory')
vrPpTbpNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 10), )
if mibBuilder.loadTexts: vrPpTbpNsProvTable.setStatus('mandatory')
vrPpTbpNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbpNsIndex"))
if mibBuilder.loadTexts: vrPpTbpNsProvEntry.setStatus('mandatory')
vrPpTbpNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpNsIncomingFilter.setStatus('mandatory')
vrPpTbpNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 4, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbpNsOutgoingFilter.setStatus('mandatory')
vrPpSrBp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8))
vrPpSrBpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 1), )
if mibBuilder.loadTexts: vrPpSrBpRowStatusTable.setStatus('mandatory')
vrPpSrBpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpRowStatusEntry.setStatus('mandatory')
vrPpSrBpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpRowStatus.setStatus('mandatory')
vrPpSrBpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpComponentName.setStatus('mandatory')
vrPpSrBpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpStorageType.setStatus('mandatory')
vrPpSrBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrBpIndex.setStatus('mandatory')
vrPpSrBpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10), )
if mibBuilder.loadTexts: vrPpSrBpProvTable.setStatus('mandatory')
vrPpSrBpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpProvEntry.setStatus('mandatory')
vrPpSrBpTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpTranslateIpx.setStatus('mandatory')
vrPpSrBpFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpFragmentIp.setStatus('mandatory')
vrPpSrBpServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpServiceClass.setStatus('mandatory')
vrPpSrBpConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpConvertArpMacAddress.setStatus('mandatory')
vrPpSrBpPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpPortNum.setStatus('mandatory')
vrPpSrBpOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpOutboundFrameMediaType.setStatus('mandatory')
vrPpSrBpStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12), )
if mibBuilder.loadTexts: vrPpSrBpStpProvTable.setStatus('mandatory')
vrPpSrBpStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpStpProvEntry.setStatus('mandatory')
vrPpSrBpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpAdminStatus.setStatus('mandatory')
vrPpSrBpPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpPortStateStpControl.setStatus('mandatory')
vrPpSrBpStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpStpTypeProv.setStatus('mandatory')
vrPpSrBpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpPortPriority.setStatus('mandatory')
vrPpSrBpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpPathCost.setStatus('mandatory')
vrPpSrBpPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpPathCostMethod.setStatus('mandatory')
vrPpSrBpDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 13), )
if mibBuilder.loadTexts: vrPpSrBpDIProvTable.setStatus('mandatory')
vrPpSrBpDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpDIProvEntry.setStatus('mandatory')
vrPpSrBpDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpDomainNum.setStatus('mandatory')
vrPpSrBpPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpPreserveDomain.setStatus('mandatory')
vrPpSrBpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 14), )
if mibBuilder.loadTexts: vrPpSrBpStateTable.setStatus('mandatory')
vrPpSrBpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpStateEntry.setStatus('mandatory')
vrPpSrBpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpAdminState.setStatus('mandatory')
vrPpSrBpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpOperationalState.setStatus('mandatory')
vrPpSrBpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpUsageState.setStatus('mandatory')
vrPpSrBpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 15), )
if mibBuilder.loadTexts: vrPpSrBpOperStatusTable.setStatus('mandatory')
vrPpSrBpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpOperStatusEntry.setStatus('mandatory')
vrPpSrBpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpSnmpOperStatus.setStatus('mandatory')
vrPpSrBpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16), )
if mibBuilder.loadTexts: vrPpSrBpOperTable.setStatus('mandatory')
vrPpSrBpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpOperEntry.setStatus('mandatory')
vrPpSrBpPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpPortName.setStatus('mandatory')
vrPpSrBpUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpUpTime.setStatus('mandatory')
vrPpSrBpDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDownTime.setStatus('mandatory')
vrPpSrBpBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpBridgingMode.setStatus('mandatory')
vrPpSrBpBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpBridgePortConfig.setStatus('mandatory')
vrPpSrBpBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpBridgePortType.setStatus('mandatory')
vrPpSrBpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpIfIndex.setStatus('mandatory')
vrPpSrBpDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDelayExceededDiscards.setStatus('mandatory')
vrPpSrBpMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpMtuExceededDiscards.setStatus('mandatory')
vrPpSrBpStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18), )
if mibBuilder.loadTexts: vrPpSrBpStpOperTable.setStatus('mandatory')
vrPpSrBpStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpStpOperEntry.setStatus('mandatory')
vrPpSrBpStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpStpPortState.setStatus('mandatory')
vrPpSrBpStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpStpTypeOper.setStatus('mandatory')
vrPpSrBpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDesignatedCost.setStatus('mandatory')
vrPpSrBpPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpPathCostOper.setStatus('mandatory')
vrPpSrBpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDesignatedBridge.setStatus('mandatory')
vrPpSrBpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDesignatedPort.setStatus('mandatory')
vrPpSrBpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpForwardTransitions.setStatus('mandatory')
vrPpSrBpBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpBlockingDiscards.setStatus('mandatory')
vrPpSrBpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDesignatedRoot.setStatus('mandatory')
vrPpSrBpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 19), )
if mibBuilder.loadTexts: vrPpSrBpStatsTable.setStatus('mandatory')
vrPpSrBpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpStatsEntry.setStatus('mandatory')
vrPpSrBpBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpBadAbstractDiscards.setStatus('mandatory')
vrPpSrBpTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpTinygramFramesIn.setStatus('mandatory')
vrPpSrBpTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpTinygramFramesOut.setStatus('mandatory')
vrPpSrBpInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpInFilterDiscards.setStatus('mandatory')
vrPpSrBpOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpOutFilterDiscards.setStatus('mandatory')
vrPpSrBpSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20), )
if mibBuilder.loadTexts: vrPpSrBpSrProvTable.setStatus('mandatory')
vrPpSrBpSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpSrProvEntry.setStatus('mandatory')
vrPpSrBpHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpHopCount.setStatus('mandatory')
vrPpSrBpExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpExploreFrameTreatment.setStatus('mandatory')
vrPpSrBpLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpLanId.setStatus('mandatory')
vrPpSrBpInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpInternalLanId.setStatus('mandatory')
vrPpSrBpBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpBridgeNum.setStatus('mandatory')
vrPpSrBpLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpLargestFrame.setStatus('mandatory')
vrPpSrBpSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpSteSpanMode.setStatus('mandatory')
vrPpSrBpAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpAreRdLimit.setStatus('mandatory')
vrPpSrBpSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpSteRdLimit.setStatus('mandatory')
vrPpSrBpSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21), )
if mibBuilder.loadTexts: vrPpSrBpSrStatsTable.setStatus('mandatory')
vrPpSrBpSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"))
if mibBuilder.loadTexts: vrPpSrBpSrStatsEntry.setStatus('mandatory')
vrPpSrBpSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpSpecInFrames.setStatus('mandatory')
vrPpSrBpSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpSpecOutFrames.setStatus('mandatory')
vrPpSrBpApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpApeInFrames.setStatus('mandatory')
vrPpSrBpApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpApeOutFrames.setStatus('mandatory')
vrPpSrBpSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpSteInFrames.setStatus('mandatory')
vrPpSrBpSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpSteOutFrames.setStatus('mandatory')
vrPpSrBpSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpSegmentMismatchDiscards.setStatus('mandatory')
vrPpSrBpDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDupSegmentDiscards.setStatus('mandatory')
vrPpSrBpHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpHopCountExceededDiscards.setStatus('mandatory')
vrPpSrBpDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDupLanIdOrTreeErrors.setStatus('mandatory')
vrPpSrBpLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpLanIdMismatches.setStatus('mandatory')
vrPpSrBpStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpStaticDiscards.setStatus('mandatory')
vrPpSrBpDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpDynamicDiscards.setStatus('mandatory')
vrPpSrBpNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2))
vrPpSrBpNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 1), )
if mibBuilder.loadTexts: vrPpSrBpNsRowStatusTable.setStatus('mandatory')
vrPpSrBpNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpNsIndex"))
if mibBuilder.loadTexts: vrPpSrBpNsRowStatusEntry.setStatus('mandatory')
vrPpSrBpNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpNsRowStatus.setStatus('mandatory')
vrPpSrBpNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpNsComponentName.setStatus('mandatory')
vrPpSrBpNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrBpNsStorageType.setStatus('mandatory')
vrPpSrBpNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrBpNsIndex.setStatus('mandatory')
vrPpSrBpNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 10), )
if mibBuilder.loadTexts: vrPpSrBpNsProvTable.setStatus('mandatory')
vrPpSrBpNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrBpNsIndex"))
if mibBuilder.loadTexts: vrPpSrBpNsProvEntry.setStatus('mandatory')
vrPpSrBpNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpNsIncomingFilter.setStatus('mandatory')
vrPpSrBpNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 8, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrBpNsOutgoingFilter.setStatus('mandatory')
vrPpSrtBp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9))
vrPpSrtBpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 1), )
if mibBuilder.loadTexts: vrPpSrtBpRowStatusTable.setStatus('mandatory')
vrPpSrtBpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpRowStatusEntry.setStatus('mandatory')
vrPpSrtBpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpRowStatus.setStatus('mandatory')
vrPpSrtBpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpComponentName.setStatus('mandatory')
vrPpSrtBpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpStorageType.setStatus('mandatory')
vrPpSrtBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrtBpIndex.setStatus('mandatory')
vrPpSrtBpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10), )
if mibBuilder.loadTexts: vrPpSrtBpProvTable.setStatus('mandatory')
vrPpSrtBpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpProvEntry.setStatus('mandatory')
vrPpSrtBpTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpTranslateIpx.setStatus('mandatory')
vrPpSrtBpFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpFragmentIp.setStatus('mandatory')
vrPpSrtBpServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpServiceClass.setStatus('mandatory')
vrPpSrtBpConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpConvertArpMacAddress.setStatus('mandatory')
vrPpSrtBpPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpPortNum.setStatus('mandatory')
vrPpSrtBpOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpOutboundFrameMediaType.setStatus('mandatory')
vrPpSrtBpTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 11), )
if mibBuilder.loadTexts: vrPpSrtBpTbProvTable.setStatus('mandatory')
vrPpSrtBpTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpTbProvEntry.setStatus('mandatory')
vrPpSrtBpSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpSecureOption.setStatus('mandatory')
vrPpSrtBpStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12), )
if mibBuilder.loadTexts: vrPpSrtBpStpProvTable.setStatus('mandatory')
vrPpSrtBpStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpStpProvEntry.setStatus('mandatory')
vrPpSrtBpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpAdminStatus.setStatus('mandatory')
vrPpSrtBpPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpPortStateStpControl.setStatus('mandatory')
vrPpSrtBpStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpStpTypeProv.setStatus('mandatory')
vrPpSrtBpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpPortPriority.setStatus('mandatory')
vrPpSrtBpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpPathCost.setStatus('mandatory')
vrPpSrtBpPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpPathCostMethod.setStatus('mandatory')
vrPpSrtBpDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 13), )
if mibBuilder.loadTexts: vrPpSrtBpDIProvTable.setStatus('mandatory')
vrPpSrtBpDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpDIProvEntry.setStatus('mandatory')
vrPpSrtBpDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpDomainNum.setStatus('mandatory')
vrPpSrtBpPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpPreserveDomain.setStatus('mandatory')
vrPpSrtBpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 14), )
if mibBuilder.loadTexts: vrPpSrtBpStateTable.setStatus('mandatory')
vrPpSrtBpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpStateEntry.setStatus('mandatory')
vrPpSrtBpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpAdminState.setStatus('mandatory')
vrPpSrtBpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpOperationalState.setStatus('mandatory')
vrPpSrtBpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpUsageState.setStatus('mandatory')
vrPpSrtBpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 15), )
if mibBuilder.loadTexts: vrPpSrtBpOperStatusTable.setStatus('mandatory')
vrPpSrtBpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpOperStatusEntry.setStatus('mandatory')
vrPpSrtBpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpSnmpOperStatus.setStatus('mandatory')
vrPpSrtBpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16), )
if mibBuilder.loadTexts: vrPpSrtBpOperTable.setStatus('mandatory')
vrPpSrtBpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpOperEntry.setStatus('mandatory')
vrPpSrtBpPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpPortName.setStatus('mandatory')
vrPpSrtBpUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpUpTime.setStatus('mandatory')
vrPpSrtBpDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDownTime.setStatus('mandatory')
vrPpSrtBpBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpBridgingMode.setStatus('mandatory')
vrPpSrtBpBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpBridgePortConfig.setStatus('mandatory')
vrPpSrtBpBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpBridgePortType.setStatus('mandatory')
vrPpSrtBpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpIfIndex.setStatus('mandatory')
vrPpSrtBpDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDelayExceededDiscards.setStatus('mandatory')
vrPpSrtBpMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpMtuExceededDiscards.setStatus('mandatory')
vrPpSrtBpTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17), )
if mibBuilder.loadTexts: vrPpSrtBpTbOperTable.setStatus('mandatory')
vrPpSrtBpTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpTbOperEntry.setStatus('mandatory')
vrPpSrtBpMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpMaxInfo.setStatus('mandatory')
vrPpSrtBpBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpBadVerifyDiscards.setStatus('mandatory')
vrPpSrtBpUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpUnicastNoMatches.setStatus('mandatory')
vrPpSrtBpStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpStaticEntryDiscards.setStatus('mandatory')
vrPpSrtBpDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDynamicEntryDiscards.setStatus('mandatory')
vrPpSrtBpLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpLearningDiscards.setStatus('mandatory')
vrPpSrtBpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpInDiscards.setStatus('mandatory')
vrPpSrtBpInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpInFrames.setStatus('mandatory')
vrPpSrtBpOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpOutFrames.setStatus('mandatory')
vrPpSrtBpStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18), )
if mibBuilder.loadTexts: vrPpSrtBpStpOperTable.setStatus('mandatory')
vrPpSrtBpStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpStpOperEntry.setStatus('mandatory')
vrPpSrtBpStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpStpPortState.setStatus('mandatory')
vrPpSrtBpStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpStpTypeOper.setStatus('mandatory')
vrPpSrtBpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDesignatedCost.setStatus('mandatory')
vrPpSrtBpPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpPathCostOper.setStatus('mandatory')
vrPpSrtBpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDesignatedBridge.setStatus('mandatory')
vrPpSrtBpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDesignatedPort.setStatus('mandatory')
vrPpSrtBpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpForwardTransitions.setStatus('mandatory')
vrPpSrtBpBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpBlockingDiscards.setStatus('mandatory')
vrPpSrtBpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDesignatedRoot.setStatus('mandatory')
vrPpSrtBpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 19), )
if mibBuilder.loadTexts: vrPpSrtBpStatsTable.setStatus('mandatory')
vrPpSrtBpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpStatsEntry.setStatus('mandatory')
vrPpSrtBpBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpBadAbstractDiscards.setStatus('mandatory')
vrPpSrtBpTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpTinygramFramesIn.setStatus('mandatory')
vrPpSrtBpTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpTinygramFramesOut.setStatus('mandatory')
vrPpSrtBpInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpInFilterDiscards.setStatus('mandatory')
vrPpSrtBpOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpOutFilterDiscards.setStatus('mandatory')
vrPpSrtBpSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20), )
if mibBuilder.loadTexts: vrPpSrtBpSrProvTable.setStatus('mandatory')
vrPpSrtBpSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpSrProvEntry.setStatus('mandatory')
vrPpSrtBpHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpHopCount.setStatus('mandatory')
vrPpSrtBpExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpExploreFrameTreatment.setStatus('mandatory')
vrPpSrtBpLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpLanId.setStatus('mandatory')
vrPpSrtBpInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpInternalLanId.setStatus('mandatory')
vrPpSrtBpBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpBridgeNum.setStatus('mandatory')
vrPpSrtBpLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpLargestFrame.setStatus('mandatory')
vrPpSrtBpSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpSteSpanMode.setStatus('mandatory')
vrPpSrtBpAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpAreRdLimit.setStatus('mandatory')
vrPpSrtBpSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpSteRdLimit.setStatus('mandatory')
vrPpSrtBpSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21), )
if mibBuilder.loadTexts: vrPpSrtBpSrStatsTable.setStatus('mandatory')
vrPpSrtBpSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"))
if mibBuilder.loadTexts: vrPpSrtBpSrStatsEntry.setStatus('mandatory')
vrPpSrtBpSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpSpecInFrames.setStatus('mandatory')
vrPpSrtBpSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpSpecOutFrames.setStatus('mandatory')
vrPpSrtBpApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpApeInFrames.setStatus('mandatory')
vrPpSrtBpApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpApeOutFrames.setStatus('mandatory')
vrPpSrtBpSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpSteInFrames.setStatus('mandatory')
vrPpSrtBpSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpSteOutFrames.setStatus('mandatory')
vrPpSrtBpSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpSegmentMismatchDiscards.setStatus('mandatory')
vrPpSrtBpDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDupSegmentDiscards.setStatus('mandatory')
vrPpSrtBpHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpHopCountExceededDiscards.setStatus('mandatory')
vrPpSrtBpDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDupLanIdOrTreeErrors.setStatus('mandatory')
vrPpSrtBpLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpLanIdMismatches.setStatus('mandatory')
vrPpSrtBpStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpStaticDiscards.setStatus('mandatory')
vrPpSrtBpDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpDynamicDiscards.setStatus('mandatory')
vrPpSrtBpNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2))
vrPpSrtBpNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 1), )
if mibBuilder.loadTexts: vrPpSrtBpNsRowStatusTable.setStatus('mandatory')
vrPpSrtBpNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpNsIndex"))
if mibBuilder.loadTexts: vrPpSrtBpNsRowStatusEntry.setStatus('mandatory')
vrPpSrtBpNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpNsRowStatus.setStatus('mandatory')
vrPpSrtBpNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpNsComponentName.setStatus('mandatory')
vrPpSrtBpNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrtBpNsStorageType.setStatus('mandatory')
vrPpSrtBpNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrtBpNsIndex.setStatus('mandatory')
vrPpSrtBpNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 10), )
if mibBuilder.loadTexts: vrPpSrtBpNsProvTable.setStatus('mandatory')
vrPpSrtBpNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrtBpNsIndex"))
if mibBuilder.loadTexts: vrPpSrtBpNsProvEntry.setStatus('mandatory')
vrPpSrtBpNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpNsIncomingFilter.setStatus('mandatory')
vrPpSrtBpNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 9, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrtBpNsOutgoingFilter.setStatus('mandatory')
vrPpSrse = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10))
vrPpSrseRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 1), )
if mibBuilder.loadTexts: vrPpSrseRowStatusTable.setStatus('mandatory')
vrPpSrseRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseRowStatusEntry.setStatus('mandatory')
vrPpSrseRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseRowStatus.setStatus('mandatory')
vrPpSrseComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseComponentName.setStatus('mandatory')
vrPpSrseStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseStorageType.setStatus('mandatory')
vrPpSrseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrseIndex.setStatus('mandatory')
vrPpSrseProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10), )
if mibBuilder.loadTexts: vrPpSrseProvTable.setStatus('mandatory')
vrPpSrseProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseProvEntry.setStatus('mandatory')
vrPpSrseTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseTranslateIpx.setStatus('mandatory')
vrPpSrseFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseFragmentIp.setStatus('mandatory')
vrPpSrseServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseServiceClass.setStatus('mandatory')
vrPpSrseConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseConvertArpMacAddress.setStatus('mandatory')
vrPpSrsePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsePortNum.setStatus('mandatory')
vrPpSrseOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseOutboundFrameMediaType.setStatus('mandatory')
vrPpSrseStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12), )
if mibBuilder.loadTexts: vrPpSrseStpProvTable.setStatus('mandatory')
vrPpSrseStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseStpProvEntry.setStatus('mandatory')
vrPpSrseAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseAdminStatus.setStatus('mandatory')
vrPpSrsePortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsePortStateStpControl.setStatus('mandatory')
vrPpSrseStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseStpTypeProv.setStatus('mandatory')
vrPpSrsePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsePortPriority.setStatus('mandatory')
vrPpSrsePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsePathCost.setStatus('mandatory')
vrPpSrsePathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsePathCostMethod.setStatus('mandatory')
vrPpSrseDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 13), )
if mibBuilder.loadTexts: vrPpSrseDIProvTable.setStatus('mandatory')
vrPpSrseDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseDIProvEntry.setStatus('mandatory')
vrPpSrseDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseDomainNum.setStatus('mandatory')
vrPpSrsePreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsePreserveDomain.setStatus('mandatory')
vrPpSrseStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 14), )
if mibBuilder.loadTexts: vrPpSrseStateTable.setStatus('mandatory')
vrPpSrseStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseStateEntry.setStatus('mandatory')
vrPpSrseAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseAdminState.setStatus('mandatory')
vrPpSrseOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseOperationalState.setStatus('mandatory')
vrPpSrseUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseUsageState.setStatus('mandatory')
vrPpSrseOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 15), )
if mibBuilder.loadTexts: vrPpSrseOperStatusTable.setStatus('mandatory')
vrPpSrseOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseOperStatusEntry.setStatus('mandatory')
vrPpSrseSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseSnmpOperStatus.setStatus('mandatory')
vrPpSrseOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16), )
if mibBuilder.loadTexts: vrPpSrseOperTable.setStatus('mandatory')
vrPpSrseOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseOperEntry.setStatus('mandatory')
vrPpSrsePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsePortName.setStatus('mandatory')
vrPpSrseUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseUpTime.setStatus('mandatory')
vrPpSrseDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDownTime.setStatus('mandatory')
vrPpSrseBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseBridgingMode.setStatus('mandatory')
vrPpSrseBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseBridgePortConfig.setStatus('mandatory')
vrPpSrseBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseBridgePortType.setStatus('mandatory')
vrPpSrseIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseIfIndex.setStatus('mandatory')
vrPpSrseDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDelayExceededDiscards.setStatus('mandatory')
vrPpSrseMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseMtuExceededDiscards.setStatus('mandatory')
vrPpSrseStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18), )
if mibBuilder.loadTexts: vrPpSrseStpOperTable.setStatus('mandatory')
vrPpSrseStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseStpOperEntry.setStatus('mandatory')
vrPpSrseStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseStpPortState.setStatus('mandatory')
vrPpSrseStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseStpTypeOper.setStatus('mandatory')
vrPpSrseDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDesignatedCost.setStatus('mandatory')
vrPpSrsePathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsePathCostOper.setStatus('mandatory')
vrPpSrseDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDesignatedBridge.setStatus('mandatory')
vrPpSrseDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDesignatedPort.setStatus('mandatory')
vrPpSrseForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseForwardTransitions.setStatus('mandatory')
vrPpSrseBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseBlockingDiscards.setStatus('mandatory')
vrPpSrseDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDesignatedRoot.setStatus('mandatory')
vrPpSrseStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 19), )
if mibBuilder.loadTexts: vrPpSrseStatsTable.setStatus('mandatory')
vrPpSrseStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseStatsEntry.setStatus('mandatory')
vrPpSrseBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseBadAbstractDiscards.setStatus('mandatory')
vrPpSrseTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseTinygramFramesIn.setStatus('mandatory')
vrPpSrseTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseTinygramFramesOut.setStatus('mandatory')
vrPpSrseInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseInFilterDiscards.setStatus('mandatory')
vrPpSrseOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseOutFilterDiscards.setStatus('mandatory')
vrPpSrseSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20), )
if mibBuilder.loadTexts: vrPpSrseSrProvTable.setStatus('mandatory')
vrPpSrseSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseSrProvEntry.setStatus('mandatory')
vrPpSrseHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseHopCount.setStatus('mandatory')
vrPpSrseExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseExploreFrameTreatment.setStatus('mandatory')
vrPpSrseLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseLanId.setStatus('mandatory')
vrPpSrseInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseInternalLanId.setStatus('mandatory')
vrPpSrseBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseBridgeNum.setStatus('mandatory')
vrPpSrseLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseLargestFrame.setStatus('mandatory')
vrPpSrseSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseSteSpanMode.setStatus('mandatory')
vrPpSrseAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseAreRdLimit.setStatus('mandatory')
vrPpSrseSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrseSteRdLimit.setStatus('mandatory')
vrPpSrseSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21), )
if mibBuilder.loadTexts: vrPpSrseSrStatsTable.setStatus('mandatory')
vrPpSrseSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrseIndex"))
if mibBuilder.loadTexts: vrPpSrseSrStatsEntry.setStatus('mandatory')
vrPpSrseSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseSpecInFrames.setStatus('mandatory')
vrPpSrseSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseSpecOutFrames.setStatus('mandatory')
vrPpSrseApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseApeInFrames.setStatus('mandatory')
vrPpSrseApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseApeOutFrames.setStatus('mandatory')
vrPpSrseSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseSteInFrames.setStatus('mandatory')
vrPpSrseSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseSteOutFrames.setStatus('mandatory')
vrPpSrseSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseSegmentMismatchDiscards.setStatus('mandatory')
vrPpSrseDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDupSegmentDiscards.setStatus('mandatory')
vrPpSrseHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseHopCountExceededDiscards.setStatus('mandatory')
vrPpSrseDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDupLanIdOrTreeErrors.setStatus('mandatory')
vrPpSrseLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseLanIdMismatches.setStatus('mandatory')
vrPpSrseStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseStaticDiscards.setStatus('mandatory')
vrPpSrseDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 10, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrseDynamicDiscards.setStatus('mandatory')
vrPpTbse = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11))
vrPpTbseRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 1), )
if mibBuilder.loadTexts: vrPpTbseRowStatusTable.setStatus('mandatory')
vrPpTbseRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseRowStatusEntry.setStatus('mandatory')
vrPpTbseRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseRowStatus.setStatus('mandatory')
vrPpTbseComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseComponentName.setStatus('mandatory')
vrPpTbseStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseStorageType.setStatus('mandatory')
vrPpTbseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpTbseIndex.setStatus('mandatory')
vrPpTbseProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10), )
if mibBuilder.loadTexts: vrPpTbseProvTable.setStatus('mandatory')
vrPpTbseProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseProvEntry.setStatus('mandatory')
vrPpTbseTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseTranslateIpx.setStatus('mandatory')
vrPpTbseFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseFragmentIp.setStatus('mandatory')
vrPpTbseServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseServiceClass.setStatus('mandatory')
vrPpTbseConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseConvertArpMacAddress.setStatus('mandatory')
vrPpTbsePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsePortNum.setStatus('mandatory')
vrPpTbseOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseOutboundFrameMediaType.setStatus('mandatory')
vrPpTbseTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 11), )
if mibBuilder.loadTexts: vrPpTbseTbProvTable.setStatus('mandatory')
vrPpTbseTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseTbProvEntry.setStatus('mandatory')
vrPpTbseSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseSecureOption.setStatus('mandatory')
vrPpTbseStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12), )
if mibBuilder.loadTexts: vrPpTbseStpProvTable.setStatus('mandatory')
vrPpTbseStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseStpProvEntry.setStatus('mandatory')
vrPpTbseAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseAdminStatus.setStatus('mandatory')
vrPpTbsePortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsePortStateStpControl.setStatus('mandatory')
vrPpTbseStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseStpTypeProv.setStatus('mandatory')
vrPpTbsePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsePortPriority.setStatus('mandatory')
vrPpTbsePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsePathCost.setStatus('mandatory')
vrPpTbsePathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsePathCostMethod.setStatus('mandatory')
vrPpTbseDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 13), )
if mibBuilder.loadTexts: vrPpTbseDIProvTable.setStatus('mandatory')
vrPpTbseDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseDIProvEntry.setStatus('mandatory')
vrPpTbseDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbseDomainNum.setStatus('mandatory')
vrPpTbsePreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsePreserveDomain.setStatus('mandatory')
vrPpTbseStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 14), )
if mibBuilder.loadTexts: vrPpTbseStateTable.setStatus('mandatory')
vrPpTbseStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseStateEntry.setStatus('mandatory')
vrPpTbseAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseAdminState.setStatus('mandatory')
vrPpTbseOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseOperationalState.setStatus('mandatory')
vrPpTbseUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseUsageState.setStatus('mandatory')
vrPpTbseOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 15), )
if mibBuilder.loadTexts: vrPpTbseOperStatusTable.setStatus('mandatory')
vrPpTbseOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseOperStatusEntry.setStatus('mandatory')
vrPpTbseSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseSnmpOperStatus.setStatus('mandatory')
vrPpTbseOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16), )
if mibBuilder.loadTexts: vrPpTbseOperTable.setStatus('mandatory')
vrPpTbseOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseOperEntry.setStatus('mandatory')
vrPpTbsePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsePortName.setStatus('mandatory')
vrPpTbseUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseUpTime.setStatus('mandatory')
vrPpTbseDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseDownTime.setStatus('mandatory')
vrPpTbseBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseBridgingMode.setStatus('mandatory')
vrPpTbseBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseBridgePortConfig.setStatus('mandatory')
vrPpTbseBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseBridgePortType.setStatus('mandatory')
vrPpTbseIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseIfIndex.setStatus('mandatory')
vrPpTbseDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseDelayExceededDiscards.setStatus('mandatory')
vrPpTbseMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseMtuExceededDiscards.setStatus('mandatory')
vrPpTbseTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17), )
if mibBuilder.loadTexts: vrPpTbseTbOperTable.setStatus('mandatory')
vrPpTbseTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseTbOperEntry.setStatus('mandatory')
vrPpTbseMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseMaxInfo.setStatus('mandatory')
vrPpTbseBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseBadVerifyDiscards.setStatus('mandatory')
vrPpTbseUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseUnicastNoMatches.setStatus('mandatory')
vrPpTbseStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseStaticEntryDiscards.setStatus('mandatory')
vrPpTbseDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseDynamicEntryDiscards.setStatus('mandatory')
vrPpTbseLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseLearningDiscards.setStatus('mandatory')
vrPpTbseInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseInDiscards.setStatus('mandatory')
vrPpTbseInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseInFrames.setStatus('mandatory')
vrPpTbseOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseOutFrames.setStatus('mandatory')
vrPpTbseStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18), )
if mibBuilder.loadTexts: vrPpTbseStpOperTable.setStatus('mandatory')
vrPpTbseStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseStpOperEntry.setStatus('mandatory')
vrPpTbseStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseStpPortState.setStatus('mandatory')
vrPpTbseStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseStpTypeOper.setStatus('mandatory')
vrPpTbseDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseDesignatedCost.setStatus('mandatory')
vrPpTbsePathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsePathCostOper.setStatus('mandatory')
vrPpTbseDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseDesignatedBridge.setStatus('mandatory')
vrPpTbseDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseDesignatedPort.setStatus('mandatory')
vrPpTbseForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseForwardTransitions.setStatus('mandatory')
vrPpTbseBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseBlockingDiscards.setStatus('mandatory')
vrPpTbseDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseDesignatedRoot.setStatus('mandatory')
vrPpTbseStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 19), )
if mibBuilder.loadTexts: vrPpTbseStatsTable.setStatus('mandatory')
vrPpTbseStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbseIndex"))
if mibBuilder.loadTexts: vrPpTbseStatsEntry.setStatus('mandatory')
vrPpTbseBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseBadAbstractDiscards.setStatus('mandatory')
vrPpTbseTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseTinygramFramesIn.setStatus('mandatory')
vrPpTbseTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseTinygramFramesOut.setStatus('mandatory')
vrPpTbseInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseInFilterDiscards.setStatus('mandatory')
vrPpTbseOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 11, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbseOutFilterDiscards.setStatus('mandatory')
vrPpSrsg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12))
vrPpSrsgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 1), )
if mibBuilder.loadTexts: vrPpSrsgRowStatusTable.setStatus('mandatory')
vrPpSrsgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgRowStatusEntry.setStatus('mandatory')
vrPpSrsgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgRowStatus.setStatus('mandatory')
vrPpSrsgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgComponentName.setStatus('mandatory')
vrPpSrsgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgStorageType.setStatus('mandatory')
vrPpSrsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrsgIndex.setStatus('mandatory')
vrPpSrsgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10), )
if mibBuilder.loadTexts: vrPpSrsgProvTable.setStatus('mandatory')
vrPpSrsgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgProvEntry.setStatus('mandatory')
vrPpSrsgTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgTranslateIpx.setStatus('mandatory')
vrPpSrsgFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgFragmentIp.setStatus('mandatory')
vrPpSrsgServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgServiceClass.setStatus('mandatory')
vrPpSrsgConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgConvertArpMacAddress.setStatus('mandatory')
vrPpSrsgPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgPortNum.setStatus('mandatory')
vrPpSrsgOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgOutboundFrameMediaType.setStatus('mandatory')
vrPpSrsgStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12), )
if mibBuilder.loadTexts: vrPpSrsgStpProvTable.setStatus('mandatory')
vrPpSrsgStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgStpProvEntry.setStatus('mandatory')
vrPpSrsgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgAdminStatus.setStatus('mandatory')
vrPpSrsgPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgPortStateStpControl.setStatus('mandatory')
vrPpSrsgStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgStpTypeProv.setStatus('mandatory')
vrPpSrsgPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgPortPriority.setStatus('mandatory')
vrPpSrsgPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgPathCost.setStatus('mandatory')
vrPpSrsgPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgPathCostMethod.setStatus('mandatory')
vrPpSrsgDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 13), )
if mibBuilder.loadTexts: vrPpSrsgDIProvTable.setStatus('mandatory')
vrPpSrsgDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgDIProvEntry.setStatus('mandatory')
vrPpSrsgDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgDomainNum.setStatus('mandatory')
vrPpSrsgPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgPreserveDomain.setStatus('mandatory')
vrPpSrsgStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 14), )
if mibBuilder.loadTexts: vrPpSrsgStateTable.setStatus('mandatory')
vrPpSrsgStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgStateEntry.setStatus('mandatory')
vrPpSrsgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgAdminState.setStatus('mandatory')
vrPpSrsgOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgOperationalState.setStatus('mandatory')
vrPpSrsgUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgUsageState.setStatus('mandatory')
vrPpSrsgOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 15), )
if mibBuilder.loadTexts: vrPpSrsgOperStatusTable.setStatus('mandatory')
vrPpSrsgOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgOperStatusEntry.setStatus('mandatory')
vrPpSrsgSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgSnmpOperStatus.setStatus('mandatory')
vrPpSrsgOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16), )
if mibBuilder.loadTexts: vrPpSrsgOperTable.setStatus('mandatory')
vrPpSrsgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgOperEntry.setStatus('mandatory')
vrPpSrsgPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgPortName.setStatus('mandatory')
vrPpSrsgUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgUpTime.setStatus('mandatory')
vrPpSrsgDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDownTime.setStatus('mandatory')
vrPpSrsgBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgBridgingMode.setStatus('mandatory')
vrPpSrsgBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgBridgePortConfig.setStatus('mandatory')
vrPpSrsgBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgBridgePortType.setStatus('mandatory')
vrPpSrsgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgIfIndex.setStatus('mandatory')
vrPpSrsgDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDelayExceededDiscards.setStatus('mandatory')
vrPpSrsgMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgMtuExceededDiscards.setStatus('mandatory')
vrPpSrsgStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18), )
if mibBuilder.loadTexts: vrPpSrsgStpOperTable.setStatus('mandatory')
vrPpSrsgStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgStpOperEntry.setStatus('mandatory')
vrPpSrsgStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgStpPortState.setStatus('mandatory')
vrPpSrsgStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgStpTypeOper.setStatus('mandatory')
vrPpSrsgDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDesignatedCost.setStatus('mandatory')
vrPpSrsgPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgPathCostOper.setStatus('mandatory')
vrPpSrsgDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDesignatedBridge.setStatus('mandatory')
vrPpSrsgDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDesignatedPort.setStatus('mandatory')
vrPpSrsgForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgForwardTransitions.setStatus('mandatory')
vrPpSrsgBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgBlockingDiscards.setStatus('mandatory')
vrPpSrsgDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDesignatedRoot.setStatus('mandatory')
vrPpSrsgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 19), )
if mibBuilder.loadTexts: vrPpSrsgStatsTable.setStatus('mandatory')
vrPpSrsgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgStatsEntry.setStatus('mandatory')
vrPpSrsgBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgBadAbstractDiscards.setStatus('mandatory')
vrPpSrsgTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgTinygramFramesIn.setStatus('mandatory')
vrPpSrsgTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgTinygramFramesOut.setStatus('mandatory')
vrPpSrsgInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgInFilterDiscards.setStatus('mandatory')
vrPpSrsgOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgOutFilterDiscards.setStatus('mandatory')
vrPpSrsgSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20), )
if mibBuilder.loadTexts: vrPpSrsgSrProvTable.setStatus('mandatory')
vrPpSrsgSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgSrProvEntry.setStatus('mandatory')
vrPpSrsgHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgHopCount.setStatus('mandatory')
vrPpSrsgExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgExploreFrameTreatment.setStatus('mandatory')
vrPpSrsgLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgLanId.setStatus('mandatory')
vrPpSrsgInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgInternalLanId.setStatus('mandatory')
vrPpSrsgBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgBridgeNum.setStatus('mandatory')
vrPpSrsgLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgLargestFrame.setStatus('mandatory')
vrPpSrsgSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgSteSpanMode.setStatus('mandatory')
vrPpSrsgAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgAreRdLimit.setStatus('mandatory')
vrPpSrsgSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrsgSteRdLimit.setStatus('mandatory')
vrPpSrsgSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21), )
if mibBuilder.loadTexts: vrPpSrsgSrStatsTable.setStatus('mandatory')
vrPpSrsgSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrsgIndex"))
if mibBuilder.loadTexts: vrPpSrsgSrStatsEntry.setStatus('mandatory')
vrPpSrsgSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgSpecInFrames.setStatus('mandatory')
vrPpSrsgSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgSpecOutFrames.setStatus('mandatory')
vrPpSrsgApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgApeInFrames.setStatus('mandatory')
vrPpSrsgApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgApeOutFrames.setStatus('mandatory')
vrPpSrsgSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgSteInFrames.setStatus('mandatory')
vrPpSrsgSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgSteOutFrames.setStatus('mandatory')
vrPpSrsgSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgSegmentMismatchDiscards.setStatus('mandatory')
vrPpSrsgDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDupSegmentDiscards.setStatus('mandatory')
vrPpSrsgHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgHopCountExceededDiscards.setStatus('mandatory')
vrPpSrsgDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDupLanIdOrTreeErrors.setStatus('mandatory')
vrPpSrsgLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgLanIdMismatches.setStatus('mandatory')
vrPpSrsgStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgStaticDiscards.setStatus('mandatory')
vrPpSrsgDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 12, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrsgDynamicDiscards.setStatus('mandatory')
vrPpTbsg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13))
vrPpTbsgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 1), )
if mibBuilder.loadTexts: vrPpTbsgRowStatusTable.setStatus('mandatory')
vrPpTbsgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgRowStatusEntry.setStatus('mandatory')
vrPpTbsgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgRowStatus.setStatus('mandatory')
vrPpTbsgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgComponentName.setStatus('mandatory')
vrPpTbsgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgStorageType.setStatus('mandatory')
vrPpTbsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpTbsgIndex.setStatus('mandatory')
vrPpTbsgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10), )
if mibBuilder.loadTexts: vrPpTbsgProvTable.setStatus('mandatory')
vrPpTbsgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgProvEntry.setStatus('mandatory')
vrPpTbsgTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgTranslateIpx.setStatus('mandatory')
vrPpTbsgFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgFragmentIp.setStatus('mandatory')
vrPpTbsgServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgServiceClass.setStatus('mandatory')
vrPpTbsgConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgConvertArpMacAddress.setStatus('mandatory')
vrPpTbsgPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgPortNum.setStatus('mandatory')
vrPpTbsgOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgOutboundFrameMediaType.setStatus('mandatory')
vrPpTbsgTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 11), )
if mibBuilder.loadTexts: vrPpTbsgTbProvTable.setStatus('mandatory')
vrPpTbsgTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgTbProvEntry.setStatus('mandatory')
vrPpTbsgSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgSecureOption.setStatus('mandatory')
vrPpTbsgStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12), )
if mibBuilder.loadTexts: vrPpTbsgStpProvTable.setStatus('mandatory')
vrPpTbsgStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgStpProvEntry.setStatus('mandatory')
vrPpTbsgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgAdminStatus.setStatus('mandatory')
vrPpTbsgPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgPortStateStpControl.setStatus('mandatory')
vrPpTbsgStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgStpTypeProv.setStatus('mandatory')
vrPpTbsgPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgPortPriority.setStatus('mandatory')
vrPpTbsgPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgPathCost.setStatus('mandatory')
vrPpTbsgPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgPathCostMethod.setStatus('mandatory')
vrPpTbsgDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 13), )
if mibBuilder.loadTexts: vrPpTbsgDIProvTable.setStatus('mandatory')
vrPpTbsgDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgDIProvEntry.setStatus('mandatory')
vrPpTbsgDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgDomainNum.setStatus('mandatory')
vrPpTbsgPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpTbsgPreserveDomain.setStatus('mandatory')
vrPpTbsgStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 14), )
if mibBuilder.loadTexts: vrPpTbsgStateTable.setStatus('mandatory')
vrPpTbsgStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgStateEntry.setStatus('mandatory')
vrPpTbsgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgAdminState.setStatus('mandatory')
vrPpTbsgOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgOperationalState.setStatus('mandatory')
vrPpTbsgUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgUsageState.setStatus('mandatory')
vrPpTbsgOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 15), )
if mibBuilder.loadTexts: vrPpTbsgOperStatusTable.setStatus('mandatory')
vrPpTbsgOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgOperStatusEntry.setStatus('mandatory')
vrPpTbsgSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgSnmpOperStatus.setStatus('mandatory')
vrPpTbsgOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16), )
if mibBuilder.loadTexts: vrPpTbsgOperTable.setStatus('mandatory')
vrPpTbsgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgOperEntry.setStatus('mandatory')
vrPpTbsgPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgPortName.setStatus('mandatory')
vrPpTbsgUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgUpTime.setStatus('mandatory')
vrPpTbsgDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgDownTime.setStatus('mandatory')
vrPpTbsgBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgBridgingMode.setStatus('mandatory')
vrPpTbsgBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgBridgePortConfig.setStatus('mandatory')
vrPpTbsgBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgBridgePortType.setStatus('mandatory')
vrPpTbsgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgIfIndex.setStatus('mandatory')
vrPpTbsgDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgDelayExceededDiscards.setStatus('mandatory')
vrPpTbsgMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgMtuExceededDiscards.setStatus('mandatory')
vrPpTbsgTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17), )
if mibBuilder.loadTexts: vrPpTbsgTbOperTable.setStatus('mandatory')
vrPpTbsgTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgTbOperEntry.setStatus('mandatory')
vrPpTbsgMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgMaxInfo.setStatus('mandatory')
vrPpTbsgBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgBadVerifyDiscards.setStatus('mandatory')
vrPpTbsgUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgUnicastNoMatches.setStatus('mandatory')
vrPpTbsgStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgStaticEntryDiscards.setStatus('mandatory')
vrPpTbsgDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgDynamicEntryDiscards.setStatus('mandatory')
vrPpTbsgLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgLearningDiscards.setStatus('mandatory')
vrPpTbsgInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgInDiscards.setStatus('mandatory')
vrPpTbsgInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgInFrames.setStatus('mandatory')
vrPpTbsgOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgOutFrames.setStatus('mandatory')
vrPpTbsgStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18), )
if mibBuilder.loadTexts: vrPpTbsgStpOperTable.setStatus('mandatory')
vrPpTbsgStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgStpOperEntry.setStatus('mandatory')
vrPpTbsgStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgStpPortState.setStatus('mandatory')
vrPpTbsgStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgStpTypeOper.setStatus('mandatory')
vrPpTbsgDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgDesignatedCost.setStatus('mandatory')
vrPpTbsgPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgPathCostOper.setStatus('mandatory')
vrPpTbsgDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgDesignatedBridge.setStatus('mandatory')
vrPpTbsgDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgDesignatedPort.setStatus('mandatory')
vrPpTbsgForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgForwardTransitions.setStatus('mandatory')
vrPpTbsgBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgBlockingDiscards.setStatus('mandatory')
vrPpTbsgDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgDesignatedRoot.setStatus('mandatory')
vrPpTbsgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 19), )
if mibBuilder.loadTexts: vrPpTbsgStatsTable.setStatus('mandatory')
vrPpTbsgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpTbsgIndex"))
if mibBuilder.loadTexts: vrPpTbsgStatsEntry.setStatus('mandatory')
vrPpTbsgBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgBadAbstractDiscards.setStatus('mandatory')
vrPpTbsgTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgTinygramFramesIn.setStatus('mandatory')
vrPpTbsgTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgTinygramFramesOut.setStatus('mandatory')
vrPpTbsgInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgInFilterDiscards.setStatus('mandatory')
vrPpTbsgOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 13, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpTbsgOutFilterDiscards.setStatus('mandatory')
vrPpSrcl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14))
vrPpSrclRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 1), )
if mibBuilder.loadTexts: vrPpSrclRowStatusTable.setStatus('mandatory')
vrPpSrclRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclRowStatusEntry.setStatus('mandatory')
vrPpSrclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclRowStatus.setStatus('mandatory')
vrPpSrclComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclComponentName.setStatus('mandatory')
vrPpSrclStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclStorageType.setStatus('mandatory')
vrPpSrclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrclIndex.setStatus('mandatory')
vrPpSrclProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10), )
if mibBuilder.loadTexts: vrPpSrclProvTable.setStatus('mandatory')
vrPpSrclProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclProvEntry.setStatus('mandatory')
vrPpSrclTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclTranslateIpx.setStatus('mandatory')
vrPpSrclFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclFragmentIp.setStatus('mandatory')
vrPpSrclServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclServiceClass.setStatus('mandatory')
vrPpSrclConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclConvertArpMacAddress.setStatus('mandatory')
vrPpSrclPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclPortNum.setStatus('mandatory')
vrPpSrclOutboundFrameMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unaltered", 1), ("ethernetConv", 2))).clone('unaltered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclOutboundFrameMediaType.setStatus('mandatory')
vrPpSrclStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12), )
if mibBuilder.loadTexts: vrPpSrclStpProvTable.setStatus('mandatory')
vrPpSrclStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclStpProvEntry.setStatus('mandatory')
vrPpSrclAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclAdminStatus.setStatus('mandatory')
vrPpSrclPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclPortStateStpControl.setStatus('mandatory')
vrPpSrclStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclStpTypeProv.setStatus('mandatory')
vrPpSrclPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclPortPriority.setStatus('mandatory')
vrPpSrclPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclPathCost.setStatus('mandatory')
vrPpSrclPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclPathCostMethod.setStatus('mandatory')
vrPpSrclDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 13), )
if mibBuilder.loadTexts: vrPpSrclDIProvTable.setStatus('mandatory')
vrPpSrclDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclDIProvEntry.setStatus('mandatory')
vrPpSrclDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclDomainNum.setStatus('mandatory')
vrPpSrclPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclPreserveDomain.setStatus('mandatory')
vrPpSrclStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 14), )
if mibBuilder.loadTexts: vrPpSrclStateTable.setStatus('mandatory')
vrPpSrclStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclStateEntry.setStatus('mandatory')
vrPpSrclAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclAdminState.setStatus('mandatory')
vrPpSrclOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclOperationalState.setStatus('mandatory')
vrPpSrclUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclUsageState.setStatus('mandatory')
vrPpSrclOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 15), )
if mibBuilder.loadTexts: vrPpSrclOperStatusTable.setStatus('mandatory')
vrPpSrclOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclOperStatusEntry.setStatus('mandatory')
vrPpSrclSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclSnmpOperStatus.setStatus('mandatory')
vrPpSrclOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16), )
if mibBuilder.loadTexts: vrPpSrclOperTable.setStatus('mandatory')
vrPpSrclOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclOperEntry.setStatus('mandatory')
vrPpSrclPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclPortName.setStatus('mandatory')
vrPpSrclUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclUpTime.setStatus('mandatory')
vrPpSrclDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDownTime.setStatus('mandatory')
vrPpSrclBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclBridgingMode.setStatus('mandatory')
vrPpSrclBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclBridgePortConfig.setStatus('mandatory')
vrPpSrclBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclBridgePortType.setStatus('mandatory')
vrPpSrclIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclIfIndex.setStatus('mandatory')
vrPpSrclDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDelayExceededDiscards.setStatus('mandatory')
vrPpSrclMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclMtuExceededDiscards.setStatus('mandatory')
vrPpSrclStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18), )
if mibBuilder.loadTexts: vrPpSrclStpOperTable.setStatus('mandatory')
vrPpSrclStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclStpOperEntry.setStatus('mandatory')
vrPpSrclStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclStpPortState.setStatus('mandatory')
vrPpSrclStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclStpTypeOper.setStatus('mandatory')
vrPpSrclDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDesignatedCost.setStatus('mandatory')
vrPpSrclPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclPathCostOper.setStatus('mandatory')
vrPpSrclDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDesignatedBridge.setStatus('mandatory')
vrPpSrclDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDesignatedPort.setStatus('mandatory')
vrPpSrclForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclForwardTransitions.setStatus('mandatory')
vrPpSrclBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclBlockingDiscards.setStatus('mandatory')
vrPpSrclDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDesignatedRoot.setStatus('mandatory')
vrPpSrclStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 19), )
if mibBuilder.loadTexts: vrPpSrclStatsTable.setStatus('mandatory')
vrPpSrclStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclStatsEntry.setStatus('mandatory')
vrPpSrclBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclBadAbstractDiscards.setStatus('mandatory')
vrPpSrclTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclTinygramFramesIn.setStatus('mandatory')
vrPpSrclTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclTinygramFramesOut.setStatus('mandatory')
vrPpSrclInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclInFilterDiscards.setStatus('mandatory')
vrPpSrclOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclOutFilterDiscards.setStatus('mandatory')
vrPpSrclSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20), )
if mibBuilder.loadTexts: vrPpSrclSrProvTable.setStatus('mandatory')
vrPpSrclSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclSrProvEntry.setStatus('mandatory')
vrPpSrclHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclHopCount.setStatus('mandatory')
vrPpSrclExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclExploreFrameTreatment.setStatus('mandatory')
vrPpSrclLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclLanId.setStatus('mandatory')
vrPpSrclInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclInternalLanId.setStatus('mandatory')
vrPpSrclBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclBridgeNum.setStatus('mandatory')
vrPpSrclLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclLargestFrame.setStatus('mandatory')
vrPpSrclSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclSteSpanMode.setStatus('mandatory')
vrPpSrclAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclAreRdLimit.setStatus('mandatory')
vrPpSrclSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclSteRdLimit.setStatus('mandatory')
vrPpSrclSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21), )
if mibBuilder.loadTexts: vrPpSrclSrStatsTable.setStatus('mandatory')
vrPpSrclSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"))
if mibBuilder.loadTexts: vrPpSrclSrStatsEntry.setStatus('mandatory')
vrPpSrclSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclSpecInFrames.setStatus('mandatory')
vrPpSrclSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclSpecOutFrames.setStatus('mandatory')
vrPpSrclApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclApeInFrames.setStatus('mandatory')
vrPpSrclApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclApeOutFrames.setStatus('mandatory')
vrPpSrclSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclSteInFrames.setStatus('mandatory')
vrPpSrclSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclSteOutFrames.setStatus('mandatory')
vrPpSrclSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclSegmentMismatchDiscards.setStatus('mandatory')
vrPpSrclDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDupSegmentDiscards.setStatus('mandatory')
vrPpSrclHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclHopCountExceededDiscards.setStatus('mandatory')
vrPpSrclDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDupLanIdOrTreeErrors.setStatus('mandatory')
vrPpSrclLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclLanIdMismatches.setStatus('mandatory')
vrPpSrclStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclStaticDiscards.setStatus('mandatory')
vrPpSrclDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclDynamicDiscards.setStatus('mandatory')
vrPpSrclNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2))
vrPpSrclNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 1), )
if mibBuilder.loadTexts: vrPpSrclNsRowStatusTable.setStatus('mandatory')
vrPpSrclNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclNsIndex"))
if mibBuilder.loadTexts: vrPpSrclNsRowStatusEntry.setStatus('mandatory')
vrPpSrclNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclNsRowStatus.setStatus('mandatory')
vrPpSrclNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclNsComponentName.setStatus('mandatory')
vrPpSrclNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSrclNsStorageType.setStatus('mandatory')
vrPpSrclNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSrclNsIndex.setStatus('mandatory')
vrPpSrclNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 10), )
if mibBuilder.loadTexts: vrPpSrclNsProvTable.setStatus('mandatory')
vrPpSrclNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrPpSrclNsIndex"))
if mibBuilder.loadTexts: vrPpSrclNsProvEntry.setStatus('mandatory')
vrPpSrclNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclNsIncomingFilter.setStatus('mandatory')
vrPpSrclNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 14, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSrclNsOutgoingFilter.setStatus('mandatory')
vrBr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5))
vrBrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 1), )
if mibBuilder.loadTexts: vrBrRowStatusTable.setStatus('mandatory')
vrBrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"))
if mibBuilder.loadTexts: vrBrRowStatusEntry.setStatus('mandatory')
vrBrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrRowStatus.setStatus('mandatory')
vrBrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrComponentName.setStatus('mandatory')
vrBrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrStorageType.setStatus('mandatory')
vrBrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrBrIndex.setStatus('mandatory')
vrBrAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 10), )
if mibBuilder.loadTexts: vrBrAdminControlTable.setStatus('mandatory')
vrBrAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"))
if mibBuilder.loadTexts: vrBrAdminControlEntry.setStatus('mandatory')
vrBrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrAdminStatus.setStatus('mandatory')
vrBrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 12), )
if mibBuilder.loadTexts: vrBrStateTable.setStatus('mandatory')
vrBrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"))
if mibBuilder.loadTexts: vrBrStateEntry.setStatus('mandatory')
vrBrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrAdminState.setStatus('mandatory')
vrBrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrOperationalState.setStatus('mandatory')
vrBrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrUsageState.setStatus('mandatory')
vrBrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 13), )
if mibBuilder.loadTexts: vrBrOperStatusTable.setStatus('mandatory')
vrBrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"))
if mibBuilder.loadTexts: vrBrOperStatusEntry.setStatus('mandatory')
vrBrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSnmpOperStatus.setStatus('mandatory')
vrBrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 14), )
if mibBuilder.loadTexts: vrBrOperTable.setStatus('mandatory')
vrBrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"))
if mibBuilder.loadTexts: vrBrOperEntry.setStatus('mandatory')
vrBrBridgeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 14, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrBridgeAddress.setStatus('mandatory')
vrBrNumPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 14, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrNumPorts.setStatus('mandatory')
vrBrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("transparentOnly", 2), ("sourceRouteOnly", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrType.setStatus('mandatory')
vrBrPte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2))
vrBrPteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1), )
if mibBuilder.loadTexts: vrBrPteRowStatusTable.setStatus('mandatory')
vrBrPteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPteDomainNumIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPtePortNameIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPteModeIndex"))
if mibBuilder.loadTexts: vrBrPteRowStatusEntry.setStatus('mandatory')
vrBrPteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteRowStatus.setStatus('mandatory')
vrBrPteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteComponentName.setStatus('mandatory')
vrBrPteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteStorageType.setStatus('mandatory')
vrBrPteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: vrBrPteDomainNumIndex.setStatus('mandatory')
vrBrPtePortNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1, 1, 11), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(0, 29)))
if mibBuilder.loadTexts: vrBrPtePortNameIndex.setStatus('mandatory')
vrBrPteModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("tb", 2), ("sr", 3), ("srt", 4))))
if mibBuilder.loadTexts: vrBrPteModeIndex.setStatus('mandatory')
vrBrPteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 10), )
if mibBuilder.loadTexts: vrBrPteOperTable.setStatus('mandatory')
vrBrPteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPteDomainNumIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPtePortNameIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPteModeIndex"))
if mibBuilder.loadTexts: vrBrPteOperEntry.setStatus('mandatory')
vrBrPteMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernet", 0), ("tokenRing", 1), ("fddiBridgePort", 2), ("tokenBus", 3), ("fddiEncapsulating", 4), ("vns", 5), ("frameRelay", 6), ("ppp", 7), ("smds", 8), ("vcp", 9), ("x25", 10), ("srEncapSr", 11), ("srEncapTb", 12), ("sourceGateSr", 13), ("sourceGateTb", 14), ("srtb", 15), ("tbsr", 16), ("clusterSr", 17), ("clusterTb", 18), ("unknown", 19), ("atmMpe", 20), ("snaDlr", 21), ("lecEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteMacType.setStatus('mandatory')
vrBrPteStpState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteStpState.setStatus('mandatory')
vrBrPteStpType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteStpType.setStatus('mandatory')
vrBrPteFilterPoints = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("in", 1), ("out", 2), ("inOut", 3), ("none", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteFilterPoints.setStatus('mandatory')
vrBrPtePortPointsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("rootBridge", 2), ("designatedBridge", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPtePortPointsTo.setStatus('mandatory')
vrBrPteSpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 11), )
if mibBuilder.loadTexts: vrBrPteSpOperTable.setStatus('mandatory')
vrBrPteSpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPteDomainNumIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPtePortNameIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrPteModeIndex"))
if mibBuilder.loadTexts: vrBrPteSpOperEntry.setStatus('mandatory')
vrBrPteLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteLanId.setStatus('mandatory')
vrBrPteInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteInternalLanId.setStatus('mandatory')
vrBrPteBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrPteBridgeNum.setStatus('mandatory')
vrBrNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3))
vrBrNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 1), )
if mibBuilder.loadTexts: vrBrNsRowStatusTable.setStatus('mandatory')
vrBrNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrNsIndex"))
if mibBuilder.loadTexts: vrBrNsRowStatusEntry.setStatus('mandatory')
vrBrNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsRowStatus.setStatus('mandatory')
vrBrNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrNsComponentName.setStatus('mandatory')
vrBrNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrNsStorageType.setStatus('mandatory')
vrBrNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrBrNsIndex.setStatus('mandatory')
vrBrNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 10), )
if mibBuilder.loadTexts: vrBrNsProvTable.setStatus('mandatory')
vrBrNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrNsIndex"))
if mibBuilder.loadTexts: vrBrNsProvEntry.setStatus('mandatory')
vrBrNsFirstFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsFirstFilter.setStatus('mandatory')
vrBrNsLastFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsLastFilter.setStatus('mandatory')
vrBrNsAte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2))
vrBrNsAteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 1), )
if mibBuilder.loadTexts: vrBrNsAteRowStatusTable.setStatus('mandatory')
vrBrNsAteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrNsIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrNsAteEntryNumberIndex"))
if mibBuilder.loadTexts: vrBrNsAteRowStatusEntry.setStatus('mandatory')
vrBrNsAteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteRowStatus.setStatus('mandatory')
vrBrNsAteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrNsAteComponentName.setStatus('mandatory')
vrBrNsAteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrNsAteStorageType.setStatus('mandatory')
vrBrNsAteEntryNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: vrBrNsAteEntryNumberIndex.setStatus('mandatory')
vrBrNsAteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10), )
if mibBuilder.loadTexts: vrBrNsAteProvTable.setStatus('mandatory')
vrBrNsAteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrNsIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrNsAteEntryNumberIndex"))
if mibBuilder.loadTexts: vrBrNsAteProvEntry.setStatus('mandatory')
vrBrNsAteDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967293))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteDomainNum.setStatus('mandatory')
vrBrNsAteFirstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteFirstMacAddress.setStatus('mandatory')
vrBrNsAteFirstMacAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1, 3), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="ffffffffffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteFirstMacAddressMask.setStatus('mandatory')
vrBrNsAteSecondMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteSecondMacAddress.setStatus('mandatory')
vrBrNsAteSecondMacAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1, 5), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="ffffffffffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteSecondMacAddressMask.setStatus('mandatory')
vrBrNsAteDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("to", 0), ("from", 1), ("toFrom", 2))).clone('toFrom')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteDirection.setStatus('mandatory')
vrBrNsAteFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 3, 2, 10, 1, 7), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrNsAteFilterName.setStatus('mandatory')
vrBrTb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4))
vrBrTbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 1), )
if mibBuilder.loadTexts: vrBrTbRowStatusTable.setStatus('mandatory')
vrBrTbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"))
if mibBuilder.loadTexts: vrBrTbRowStatusEntry.setStatus('mandatory')
vrBrTbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbRowStatus.setStatus('mandatory')
vrBrTbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbComponentName.setStatus('mandatory')
vrBrTbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStorageType.setStatus('mandatory')
vrBrTbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrBrTbIndex.setStatus('mandatory')
vrBrTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 10), )
if mibBuilder.loadTexts: vrBrTbProvTable.setStatus('mandatory')
vrBrTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"))
if mibBuilder.loadTexts: vrBrTbProvEntry.setStatus('mandatory')
vrBrTbFwdTableNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbFwdTableNumEntries.setStatus('mandatory')
vrBrTbAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbAgingTime.setStatus('mandatory')
vrBrTbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 11), )
if mibBuilder.loadTexts: vrBrTbStatsTable.setStatus('mandatory')
vrBrTbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"))
if mibBuilder.loadTexts: vrBrTbStatsEntry.setStatus('mandatory')
vrBrTbLearnedEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbLearnedEntryDiscards.setStatus('mandatory')
vrBrTbTotalForwardingTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbTotalForwardingTableEntries.setStatus('mandatory')
vrBrTbNumFtEntriesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNumFtEntriesFree.setStatus('mandatory')
vrBrTbNumFtEntriesDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNumFtEntriesDenied.setStatus('mandatory')
vrBrTbStp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2))
vrBrTbStpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 1), )
if mibBuilder.loadTexts: vrBrTbStpRowStatusTable.setStatus('mandatory')
vrBrTbStpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbStpIndex"))
if mibBuilder.loadTexts: vrBrTbStpRowStatusEntry.setStatus('mandatory')
vrBrTbStpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbStpRowStatus.setStatus('mandatory')
vrBrTbStpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpComponentName.setStatus('mandatory')
vrBrTbStpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpStorageType.setStatus('mandatory')
vrBrTbStpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: vrBrTbStpIndex.setStatus('mandatory')
vrBrTbStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10), )
if mibBuilder.loadTexts: vrBrTbStpProvTable.setStatus('mandatory')
vrBrTbStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbStpIndex"))
if mibBuilder.loadTexts: vrBrTbStpProvEntry.setStatus('mandatory')
vrBrTbStpStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2))).clone('access')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbStpStpMode.setStatus('mandatory')
vrBrTbStpProtocolSpec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("dec", 2), ("ieee8021d", 3))).clone('ieee8021d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbStpProtocolSpec.setStatus('mandatory')
vrBrTbStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbStpPriority.setStatus('mandatory')
vrBrTbStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbStpBridgeMaxAge.setStatus('mandatory')
vrBrTbStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbStpBridgeHelloTime.setStatus('mandatory')
vrBrTbStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbStpBridgeForwardDelay.setStatus('mandatory')
vrBrTbStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11), )
if mibBuilder.loadTexts: vrBrTbStpOperTable.setStatus('mandatory')
vrBrTbStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbStpIndex"))
if mibBuilder.loadTexts: vrBrTbStpOperEntry.setStatus('mandatory')
vrBrTbStpBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 1), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpBridgeId.setStatus('mandatory')
vrBrTbStpRootPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpRootPortName.setStatus('mandatory')
vrBrTbStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpTimeSinceTopologyChange.setStatus('mandatory')
vrBrTbStpTopologyChangeDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpTopologyChangeDetect.setStatus('mandatory')
vrBrTbStpTopologyChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpTopologyChanges.setStatus('mandatory')
vrBrTbStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpDesignatedRoot.setStatus('mandatory')
vrBrTbStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpRootCost.setStatus('mandatory')
vrBrTbStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpMaxAge.setStatus('mandatory')
vrBrTbStpAgingTimeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpAgingTimeOper.setStatus('mandatory')
vrBrTbStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpHelloTime.setStatus('mandatory')
vrBrTbStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 100)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpHoldTime.setStatus('mandatory')
vrBrTbStpFwdDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 2, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbStpFwdDelay.setStatus('mandatory')
vrBrTbSte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3))
vrBrTbSteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 1), )
if mibBuilder.loadTexts: vrBrTbSteRowStatusTable.setStatus('mandatory')
vrBrTbSteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbSteAddressIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbSteReceivePortIndex"))
if mibBuilder.loadTexts: vrBrTbSteRowStatusEntry.setStatus('mandatory')
vrBrTbSteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbSteRowStatus.setStatus('mandatory')
vrBrTbSteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbSteComponentName.setStatus('mandatory')
vrBrTbSteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbSteStorageType.setStatus('mandatory')
vrBrTbSteAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: vrBrTbSteAddressIndex.setStatus('mandatory')
vrBrTbSteReceivePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 1, 1, 11), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 29)))
if mibBuilder.loadTexts: vrBrTbSteReceivePortIndex.setStatus('mandatory')
vrBrTbSteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 10), )
if mibBuilder.loadTexts: vrBrTbSteProvTable.setStatus('mandatory')
vrBrTbSteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbSteAddressIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbSteReceivePortIndex"))
if mibBuilder.loadTexts: vrBrTbSteProvEntry.setStatus('mandatory')
vrBrTbSteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("permanent", 3))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbSteStatus.setStatus('mandatory')
vrBrTbSteAtgtTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 271), )
if mibBuilder.loadTexts: vrBrTbSteAtgtTable.setStatus('mandatory')
vrBrTbSteAtgtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 271, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbSteAddressIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbSteReceivePortIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbSteAtgtValue"))
if mibBuilder.loadTexts: vrBrTbSteAtgtEntry.setStatus('mandatory')
vrBrTbSteAtgtValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 271, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrTbSteAtgtValue.setStatus('mandatory')
vrBrTbSteAtgtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 3, 271, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vrBrTbSteAtgtRowStatus.setStatus('mandatory')
vrBrTbFte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4))
vrBrTbFteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 1), )
if mibBuilder.loadTexts: vrBrTbFteRowStatusTable.setStatus('mandatory')
vrBrTbFteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbFteAddressIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbFteDomainNumIndex"))
if mibBuilder.loadTexts: vrBrTbFteRowStatusEntry.setStatus('mandatory')
vrBrTbFteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbFteRowStatus.setStatus('mandatory')
vrBrTbFteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbFteComponentName.setStatus('mandatory')
vrBrTbFteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbFteStorageType.setStatus('mandatory')
vrBrTbFteAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: vrBrTbFteAddressIndex.setStatus('mandatory')
vrBrTbFteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: vrBrTbFteDomainNumIndex.setStatus('mandatory')
vrBrTbFteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 10), )
if mibBuilder.loadTexts: vrBrTbFteOperTable.setStatus('mandatory')
vrBrTbFteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbFteAddressIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbFteDomainNumIndex"))
if mibBuilder.loadTexts: vrBrTbFteOperEntry.setStatus('mandatory')
vrBrTbFtePort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbFtePort.setStatus('mandatory')
vrBrTbFteAgeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 10, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbFteAgeOfEntry.setStatus('mandatory')
vrBrTbFtePeerAddressInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 10, 1, 5), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbFtePeerAddressInfo.setStatus('mandatory')
vrBrTbFteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbFteStatus.setStatus('mandatory')
vrBrTbNcFte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5))
vrBrTbNcFteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 1), )
if mibBuilder.loadTexts: vrBrTbNcFteRowStatusTable.setStatus('mandatory')
vrBrTbNcFteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbNcFteAddressIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbNcFteDomainNumIndex"))
if mibBuilder.loadTexts: vrBrTbNcFteRowStatusEntry.setStatus('mandatory')
vrBrTbNcFteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNcFteRowStatus.setStatus('mandatory')
vrBrTbNcFteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNcFteComponentName.setStatus('mandatory')
vrBrTbNcFteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNcFteStorageType.setStatus('mandatory')
vrBrTbNcFteAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: vrBrTbNcFteAddressIndex.setStatus('mandatory')
vrBrTbNcFteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: vrBrTbNcFteDomainNumIndex.setStatus('mandatory')
vrBrTbNcFteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 10), )
if mibBuilder.loadTexts: vrBrTbNcFteOperTable.setStatus('mandatory')
vrBrTbNcFteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbNcFteAddressIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrTbNcFteDomainNumIndex"))
if mibBuilder.loadTexts: vrBrTbNcFteOperEntry.setStatus('mandatory')
vrBrTbNcFtePort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNcFtePort.setStatus('mandatory')
vrBrTbNcFteAgeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 10, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNcFteAgeOfEntry.setStatus('mandatory')
vrBrTbNcFtePeerAddressInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 10, 1, 5), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNcFtePeerAddressInfo.setStatus('mandatory')
vrBrTbNcFteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 4, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrTbNcFteStatus.setStatus('mandatory')
vrBrSrb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5))
vrBrSrbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 1), )
if mibBuilder.loadTexts: vrBrSrbRowStatusTable.setStatus('mandatory')
vrBrSrbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"))
if mibBuilder.loadTexts: vrBrSrbRowStatusEntry.setStatus('mandatory')
vrBrSrbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbRowStatus.setStatus('mandatory')
vrBrSrbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbComponentName.setStatus('mandatory')
vrBrSrbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStorageType.setStatus('mandatory')
vrBrSrbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrBrSrbIndex.setStatus('mandatory')
vrBrSrbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 10), )
if mibBuilder.loadTexts: vrBrSrbProvTable.setStatus('mandatory')
vrBrSrbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"))
if mibBuilder.loadTexts: vrBrSrbProvEntry.setStatus('mandatory')
vrBrSrbLanIdTableNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 65535)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbLanIdTableNumEntries.setStatus('mandatory')
vrBrSrbAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbAgingTime.setStatus('mandatory')
vrBrSrbBridgeLfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mode3", 1), ("mode6", 2))).clone('mode3')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbBridgeLfMode.setStatus('mandatory')
vrBrSrbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 11), )
if mibBuilder.loadTexts: vrBrSrbStatsTable.setStatus('mandatory')
vrBrSrbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"))
if mibBuilder.loadTexts: vrBrSrbStatsEntry.setStatus('mandatory')
vrBrSrbTotalLanIdTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbTotalLanIdTableEntries.setStatus('mandatory')
vrBrSrbNumLanIdtEntriesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbNumLanIdtEntriesFree.setStatus('mandatory')
vrBrSrbNumLanIdtEntriesDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbNumLanIdtEntriesDenied.setStatus('mandatory')
vrBrSrbStp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2))
vrBrSrbStpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 1), )
if mibBuilder.loadTexts: vrBrSrbStpRowStatusTable.setStatus('mandatory')
vrBrSrbStpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbStpIndex"))
if mibBuilder.loadTexts: vrBrSrbStpRowStatusEntry.setStatus('mandatory')
vrBrSrbStpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbStpRowStatus.setStatus('mandatory')
vrBrSrbStpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpComponentName.setStatus('mandatory')
vrBrSrbStpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpStorageType.setStatus('mandatory')
vrBrSrbStpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: vrBrSrbStpIndex.setStatus('mandatory')
vrBrSrbStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10), )
if mibBuilder.loadTexts: vrBrSrbStpProvTable.setStatus('mandatory')
vrBrSrbStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbStpIndex"))
if mibBuilder.loadTexts: vrBrSrbStpProvEntry.setStatus('mandatory')
vrBrSrbStpStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2))).clone('access')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbStpStpMode.setStatus('mandatory')
vrBrSrbStpProtocolSpec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("dec", 2), ("ieee8021d", 3))).clone('ieee8021d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbStpProtocolSpec.setStatus('mandatory')
vrBrSrbStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbStpPriority.setStatus('mandatory')
vrBrSrbStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbStpBridgeMaxAge.setStatus('mandatory')
vrBrSrbStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbStpBridgeHelloTime.setStatus('mandatory')
vrBrSrbStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrBrSrbStpBridgeForwardDelay.setStatus('mandatory')
vrBrSrbStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11), )
if mibBuilder.loadTexts: vrBrSrbStpOperTable.setStatus('mandatory')
vrBrSrbStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbStpIndex"))
if mibBuilder.loadTexts: vrBrSrbStpOperEntry.setStatus('mandatory')
vrBrSrbStpBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 1), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpBridgeId.setStatus('mandatory')
vrBrSrbStpRootPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpRootPortName.setStatus('mandatory')
vrBrSrbStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpTimeSinceTopologyChange.setStatus('mandatory')
vrBrSrbStpTopologyChangeDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpTopologyChangeDetect.setStatus('mandatory')
vrBrSrbStpTopologyChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpTopologyChanges.setStatus('mandatory')
vrBrSrbStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpDesignatedRoot.setStatus('mandatory')
vrBrSrbStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpRootCost.setStatus('mandatory')
vrBrSrbStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpMaxAge.setStatus('mandatory')
vrBrSrbStpAgingTimeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpAgingTimeOper.setStatus('mandatory')
vrBrSrbStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpHelloTime.setStatus('mandatory')
vrBrSrbStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 100)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpHoldTime.setStatus('mandatory')
vrBrSrbStpFwdDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 2, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbStpFwdDelay.setStatus('mandatory')
vrBrSrbLte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3))
vrBrSrbLteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 1), )
if mibBuilder.loadTexts: vrBrSrbLteRowStatusTable.setStatus('mandatory')
vrBrSrbLteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbLteLanIdIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbLteDomainNumIndex"))
if mibBuilder.loadTexts: vrBrSrbLteRowStatusEntry.setStatus('mandatory')
vrBrSrbLteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbLteRowStatus.setStatus('mandatory')
vrBrSrbLteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbLteComponentName.setStatus('mandatory')
vrBrSrbLteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbLteStorageType.setStatus('mandatory')
vrBrSrbLteLanIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), )))
if mibBuilder.loadTexts: vrBrSrbLteLanIdIndex.setStatus('mandatory')
vrBrSrbLteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: vrBrSrbLteDomainNumIndex.setStatus('mandatory')
vrBrSrbLteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 10), )
if mibBuilder.loadTexts: vrBrSrbLteOperTable.setStatus('mandatory')
vrBrSrbLteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbLteLanIdIndex"), (0, "Nortel-Magellan-Passport-BridgeMIB", "vrBrSrbLteDomainNumIndex"))
if mibBuilder.loadTexts: vrBrSrbLteOperEntry.setStatus('mandatory')
vrBrSrbLtePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbLtePortName.setStatus('mandatory')
vrBrSrbLteAgeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbLteAgeOfEntry.setStatus('mandatory')
vrBrSrbLtePeerMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 10, 1, 3), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbLtePeerMACAddress.setStatus('mandatory')
vrBrSrbLteTypeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 5, 5, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("static", 0), ("dynamic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrBrSrbLteTypeOfEntry.setStatus('mandatory')
cB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103))
cBRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 1), )
if mibBuilder.loadTexts: cBRowStatusTable.setStatus('mandatory')
cBRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "cBIndex"))
if mibBuilder.loadTexts: cBRowStatusEntry.setStatus('mandatory')
cBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBRowStatus.setStatus('mandatory')
cBComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBComponentName.setStatus('mandatory')
cBStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBStorageType.setStatus('mandatory')
cBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: cBIndex.setStatus('mandatory')
cBAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 10), )
if mibBuilder.loadTexts: cBAdminControlTable.setStatus('mandatory')
cBAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "cBIndex"))
if mibBuilder.loadTexts: cBAdminControlEntry.setStatus('mandatory')
cBSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBSnmpAdminStatus.setStatus('obsolete')
cBIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 11), )
if mibBuilder.loadTexts: cBIfEntryTable.setStatus('mandatory')
cBIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "cBIndex"))
if mibBuilder.loadTexts: cBIfEntryEntry.setStatus('mandatory')
cBIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBIfAdminStatus.setStatus('mandatory')
cBIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBIfIndex.setStatus('mandatory')
cBMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 12), )
if mibBuilder.loadTexts: cBMpTable.setStatus('mandatory')
cBMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "cBIndex"))
if mibBuilder.loadTexts: cBMpEntry.setStatus('mandatory')
cBLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 12, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cBLinkToProtocolPort.setStatus('mandatory')
cBOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 13), )
if mibBuilder.loadTexts: cBOperTable.setStatus('mandatory')
cBOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "cBIndex"))
if mibBuilder.loadTexts: cBOperEntry.setStatus('mandatory')
cBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 13, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBMacAddress.setStatus('mandatory')
cBStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 14), )
if mibBuilder.loadTexts: cBStateTable.setStatus('mandatory')
cBStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "cBIndex"))
if mibBuilder.loadTexts: cBStateEntry.setStatus('mandatory')
cBAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBAdminState.setStatus('mandatory')
cBOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBOperationalState.setStatus('mandatory')
cBUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBUsageState.setStatus('mandatory')
cBOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 15), )
if mibBuilder.loadTexts: cBOperStatusTable.setStatus('mandatory')
cBOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "cBIndex"))
if mibBuilder.loadTexts: cBOperStatusEntry.setStatus('mandatory')
cBSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 103, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cBSnmpOperStatus.setStatus('mandatory')
pB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104))
pBRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 1), )
if mibBuilder.loadTexts: pBRowStatusTable.setStatus('mandatory')
pBRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "pBIndex"))
if mibBuilder.loadTexts: pBRowStatusEntry.setStatus('mandatory')
pBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pBRowStatus.setStatus('mandatory')
pBComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBComponentName.setStatus('mandatory')
pBStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBStorageType.setStatus('mandatory')
pBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: pBIndex.setStatus('mandatory')
pBAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 10), )
if mibBuilder.loadTexts: pBAdminControlTable.setStatus('mandatory')
pBAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "pBIndex"))
if mibBuilder.loadTexts: pBAdminControlEntry.setStatus('mandatory')
pBSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pBSnmpAdminStatus.setStatus('obsolete')
pBIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 11), )
if mibBuilder.loadTexts: pBIfEntryTable.setStatus('mandatory')
pBIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "pBIndex"))
if mibBuilder.loadTexts: pBIfEntryEntry.setStatus('mandatory')
pBIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pBIfAdminStatus.setStatus('mandatory')
pBIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBIfIndex.setStatus('mandatory')
pBMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 12), )
if mibBuilder.loadTexts: pBMpTable.setStatus('mandatory')
pBMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "pBIndex"))
if mibBuilder.loadTexts: pBMpEntry.setStatus('mandatory')
pBLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 12, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pBLinkToProtocolPort.setStatus('mandatory')
pBOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 13), )
if mibBuilder.loadTexts: pBOperTable.setStatus('mandatory')
pBOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "pBIndex"))
if mibBuilder.loadTexts: pBOperEntry.setStatus('mandatory')
pBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 13, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBMacAddress.setStatus('mandatory')
pBStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 14), )
if mibBuilder.loadTexts: pBStateTable.setStatus('mandatory')
pBStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "pBIndex"))
if mibBuilder.loadTexts: pBStateEntry.setStatus('mandatory')
pBAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBAdminState.setStatus('mandatory')
pBOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBOperationalState.setStatus('mandatory')
pBUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBUsageState.setStatus('mandatory')
pBOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 15), )
if mibBuilder.loadTexts: pBOperStatusTable.setStatus('mandatory')
pBOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BridgeMIB", "pBIndex"))
if mibBuilder.loadTexts: pBOperStatusEntry.setStatus('mandatory')
pBSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 104, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pBSnmpOperStatus.setStatus('mandatory')
bridgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 1))
bridgeGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 1, 5))
bridgeGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 1, 5, 2))
bridgeGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 1, 5, 2, 2))
bridgeCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 3))
bridgeCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 3, 5))
bridgeCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 3, 5, 2))
bridgeCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 25, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BridgeMIB", vrPpTbseTranslateIpx=vrPpTbseTranslateIpx, vrPpSrclSteOutFrames=vrPpSrclSteOutFrames, vrPpSrseDesignatedCost=vrPpSrseDesignatedCost, vrPpTbclBridgePortConfig=vrPpTbclBridgePortConfig, vrPpSrseUpTime=vrPpSrseUpTime, vrPpSrclNs=vrPpSrclNs, vrBrTbRowStatusTable=vrBrTbRowStatusTable, vrBrSrbStpProvTable=vrBrSrbStpProvTable, vrPpSrsgDesignatedBridge=vrPpSrsgDesignatedBridge, vrPpSrseOperTable=vrPpSrseOperTable, vrPpSrBpDomainNum=vrPpSrBpDomainNum, vrPpSrsgBridgePortType=vrPpSrsgBridgePortType, vrBrTbRowStatus=vrBrTbRowStatus, vrBrOperTable=vrBrOperTable, vrPpSrtBpTranslateIpx=vrPpSrtBpTranslateIpx, vrPpSrtBpIfIndex=vrPpSrtBpIfIndex, pBOperTable=pBOperTable, vrPpSrseStpPortState=vrPpSrseStpPortState, vrPpFddiETBDesignatedBridge=vrPpFddiETBDesignatedBridge, vrPpTbclSecureOption=vrPpTbclSecureOption, vrPpTbseOperationalState=vrPpTbseOperationalState, vrPpTbsgProvTable=vrPpTbsgProvTable, vrPpSrtBpOperStatusEntry=vrPpSrtBpOperStatusEntry, vrPpSrsgDomainNum=vrPpSrsgDomainNum, vrPpTbsgConvertArpMacAddress=vrPpTbsgConvertArpMacAddress, vrPpTbpLearningDiscards=vrPpTbpLearningDiscards, vrPpTbpStatsTable=vrPpTbpStatsTable, vrPpSrclRowStatusEntry=vrPpSrclRowStatusEntry, vrPpSrBpDIProvEntry=vrPpSrBpDIProvEntry, vrPpSrclStpTypeProv=vrPpSrclStpTypeProv, vrPpTbsgStpProvTable=vrPpTbsgStpProvTable, vrBrTbNcFteOperTable=vrBrTbNcFteOperTable, cBIfEntryEntry=cBIfEntryEntry, vrPpSrclOperationalState=vrPpSrclOperationalState, vrPpTbpDesignatedPort=vrPpTbpDesignatedPort, vrPpTbclNsStorageType=vrPpTbclNsStorageType, vrPpSrseRowStatusTable=vrPpSrseRowStatusTable, vrPpSrclStateEntry=vrPpSrclStateEntry, vrBrTbSteProvEntry=vrBrTbSteProvEntry, vrBrSrbStpStpMode=vrBrSrbStpStpMode, vrPpSrclSteRdLimit=vrPpSrclSteRdLimit, vrPpSrBpTinygramFramesIn=vrPpSrBpTinygramFramesIn, vrPpSrBpStatsEntry=vrPpSrBpStatsEntry, vrPpSrtBpAreRdLimit=vrPpSrtBpAreRdLimit, vrBrNsIndex=vrBrNsIndex, vrPpSrclDIProvEntry=vrPpSrclDIProvEntry, vrPpSrtBpRowStatusTable=vrPpSrtBpRowStatusTable, vrPpTbseStorageType=vrPpTbseStorageType, vrBrPteStpType=vrBrPteStpType, vrPpSrsgStpOperEntry=vrPpSrsgStpOperEntry, vrPpSrBpSteSpanMode=vrPpSrBpSteSpanMode, vrBrNsComponentName=vrBrNsComponentName, vrPpSrclDesignatedRoot=vrPpSrclDesignatedRoot, vrPpTbclBridgePortType=vrPpTbclBridgePortType, vrBrAdminState=vrBrAdminState, vrPpTbpOutboundFrameMediaType=vrPpTbpOutboundFrameMediaType, pBUsageState=pBUsageState, vrPpSrtBpPortNum=vrPpSrtBpPortNum, vrPpSrsg=vrPpSrsg, vrPpSrtBpSnmpOperStatus=vrPpSrtBpSnmpOperStatus, vrPpSrtBpAdminStatus=vrPpSrtBpAdminStatus, vrPpSrseDomainNum=vrPpSrseDomainNum, vrPpTbseDownTime=vrPpTbseDownTime, vrPpSrseDupSegmentDiscards=vrPpSrseDupSegmentDiscards, vrPpSrtBpStpProvEntry=vrPpSrtBpStpProvEntry, vrPpSrseAreRdLimit=vrPpSrseAreRdLimit, vrPpSrtBpStateTable=vrPpSrtBpStateTable, vrPpSrtBpSrProvEntry=vrPpSrtBpSrProvEntry, vrPpFddiETBNsComponentName=vrPpFddiETBNsComponentName, vrBrSrbStpAgingTimeOper=vrBrSrbStpAgingTimeOper, vrPpSrseApeOutFrames=vrPpSrseApeOutFrames, vrPpSrsgStpOperTable=vrPpSrsgStpOperTable, vrBrTbStpOperEntry=vrBrTbStpOperEntry, vrPpTbclBridgingMode=vrPpTbclBridgingMode, vrPpTbseStatsEntry=vrPpTbseStatsEntry, pBStateTable=pBStateTable, vrPpSrBpTinygramFramesOut=vrPpSrBpTinygramFramesOut, vrPpSrseDownTime=vrPpSrseDownTime, vrPpTbpInDiscards=vrPpTbpInDiscards, vrPpTbpTranslateIpx=vrPpTbpTranslateIpx, vrPpSrclAdminStatus=vrPpSrclAdminStatus, vrPpSrclTranslateIpx=vrPpSrclTranslateIpx, vrPpSrsgApeInFrames=vrPpSrsgApeInFrames, cBIfAdminStatus=cBIfAdminStatus, vrPpTbsgDesignatedCost=vrPpTbsgDesignatedCost, vrPpTbsgStpTypeProv=vrPpTbsgStpTypeProv, vrPpSrBpForwardTransitions=vrPpSrBpForwardTransitions, vrPpSrBpOperStatusTable=vrPpSrBpOperStatusTable, vrPpTbpStpOperEntry=vrPpTbpStpOperEntry, vrPpSrclApeInFrames=vrPpSrclApeInFrames, vrPpSrBpStpTypeProv=vrPpSrBpStpTypeProv, vrPpSrtBpPortPriority=vrPpSrtBpPortPriority, cBStateTable=cBStateTable, vrPpSrBpSrStatsTable=vrPpSrBpSrStatsTable, vrPpTbclStateEntry=vrPpTbclStateEntry, vrBrSrbAgingTime=vrBrSrbAgingTime, vrPpSrsgDownTime=vrPpSrsgDownTime, vrPpSrsgSteSpanMode=vrPpSrsgSteSpanMode, vrBrSrbStp=vrBrSrbStp, vrPpSrsgOperationalState=vrPpSrsgOperationalState, vrPpSrsgSrStatsEntry=vrPpSrsgSrStatsEntry, vrBrNsAteProvTable=vrBrNsAteProvTable, vrPpTbpNsProvTable=vrPpTbpNsProvTable, vrPpSrtBpForwardTransitions=vrPpSrtBpForwardTransitions, vrPpTbpNsOutgoingFilter=vrPpTbpNsOutgoingFilter, vrBrTbStpRowStatusEntry=vrBrTbStpRowStatusEntry, vrPpTbseServiceClass=vrPpTbseServiceClass, vrPpSrtBpDesignatedBridge=vrPpSrtBpDesignatedBridge, vrBrUsageState=vrBrUsageState, vrBrNsAteRowStatus=vrBrNsAteRowStatus, vrPpSrclSteInFrames=vrPpSrclSteInFrames, vrPpTbpNsRowStatus=vrPpTbpNsRowStatus, vrPpSrclSrStatsEntry=vrPpSrclSrStatsEntry, vrPpTbpStpProvTable=vrPpTbpStpProvTable, vrPpSrseStpTypeProv=vrPpSrseStpTypeProv, vrPpTbsgMaxInfo=vrPpTbsgMaxInfo, vrPpSrsePortPriority=vrPpSrsePortPriority, vrBrTbStpProvEntry=vrBrTbStpProvEntry, vrBrSrbLteRowStatus=vrBrSrbLteRowStatus, vrPpFddiETBNsRowStatus=vrPpFddiETBNsRowStatus, vrPpSrsgBadAbstractDiscards=vrPpSrsgBadAbstractDiscards, vrPpTbsgRowStatusEntry=vrPpTbsgRowStatusEntry, vrPpFddiETBDelayExceededDiscards=vrPpFddiETBDelayExceededDiscards, vrPpTbsgDIProvEntry=vrPpTbsgDIProvEntry, vrBrTb=vrBrTb, vrPpSrseBridgeNum=vrPpSrseBridgeNum, vrBrTbNcFteAgeOfEntry=vrBrTbNcFteAgeOfEntry, vrPpSrtBpOutboundFrameMediaType=vrPpSrtBpOutboundFrameMediaType, vrPpSrclAreRdLimit=vrPpSrclAreRdLimit, vrPpTbpBlockingDiscards=vrPpTbpBlockingDiscards, vrPpSrtBpPortName=vrPpSrtBpPortName, vrPpTbpDesignatedRoot=vrPpTbpDesignatedRoot, vrPpTbclStpProvTable=vrPpTbclStpProvTable, vrPpTbsgRowStatusTable=vrPpTbsgRowStatusTable, vrPpSrBpDynamicDiscards=vrPpSrBpDynamicDiscards, vrPpSrBpPathCostMethod=vrPpSrBpPathCostMethod, vrPpTbclDesignatedRoot=vrPpTbclDesignatedRoot, vrBr=vrBr, vrPpTbse=vrPpTbse, vrPpFddiETBNsOutgoingFilter=vrPpFddiETBNsOutgoingFilter, vrPpTbsgTbProvEntry=vrPpTbsgTbProvEntry, vrPpSrseBadAbstractDiscards=vrPpSrseBadAbstractDiscards, vrPpSrsgDesignatedRoot=vrPpSrsgDesignatedRoot, vrPpTbclTinygramFramesOut=vrPpTbclTinygramFramesOut, vrPpSrtBpApeInFrames=vrPpSrtBpApeInFrames, vrPpSrclNsIndex=vrPpSrclNsIndex, vrBrNsRowStatusTable=vrBrNsRowStatusTable, vrPpTbpServiceClass=vrPpTbpServiceClass, vrBrRowStatus=vrBrRowStatus, vrBrPteStpState=vrBrPteStpState, vrPpSrseLanId=vrPpSrseLanId, vrPpTbseTinygramFramesOut=vrPpTbseTinygramFramesOut, vrPpTbsgRowStatus=vrPpTbsgRowStatus, vrPpFddiETBPathCost=vrPpFddiETBPathCost, vrPpSrtBpNsOutgoingFilter=vrPpSrtBpNsOutgoingFilter, vrPpTbsgOutFilterDiscards=vrPpTbsgOutFilterDiscards, vrPpSrsgExploreFrameTreatment=vrPpSrsgExploreFrameTreatment, vrBrSrbLte=vrBrSrbLte, vrPpTbclOperStatusTable=vrPpTbclOperStatusTable, vrPpFddiETBStpTypeProv=vrPpFddiETBStpTypeProv, vrPpTbsgIfIndex=vrPpTbsgIfIndex, vrPpFddiETBOperStatusEntry=vrPpFddiETBOperStatusEntry, vrPpSrseUsageState=vrPpSrseUsageState, vrPpSrBpConvertArpMacAddress=vrPpSrBpConvertArpMacAddress, vrPpTbsgUsageState=vrPpTbsgUsageState, vrPpTbsePortPriority=vrPpTbsePortPriority, vrPpSrclBridgePortType=vrPpSrclBridgePortType, vrPpSrclPathCost=vrPpSrclPathCost, vrPpSrtBpNsProvTable=vrPpSrtBpNsProvTable, vrPpSrsgOperStatusEntry=vrPpSrsgOperStatusEntry, vrPpFddiETBProvTable=vrPpFddiETBProvTable, vrBrPteStorageType=vrBrPteStorageType, vrPpTbpStpOperTable=vrPpTbpStpOperTable, vrPpSrBpDesignatedBridge=vrPpSrBpDesignatedBridge, vrPpSrseStateTable=vrPpSrseStateTable, vrPpTbclNsOutgoingFilter=vrPpTbclNsOutgoingFilter, vrPpSrtBpPathCostMethod=vrPpSrtBpPathCostMethod, vrPpSrtBpSteInFrames=vrPpSrtBpSteInFrames, vrBrStateTable=vrBrStateTable, vrPpTbclStaticEntryDiscards=vrPpTbclStaticEntryDiscards, vrPpSrtBpNsComponentName=vrPpSrtBpNsComponentName, vrPpTbclMaxInfo=vrPpTbclMaxInfo, vrPpSrBpFragmentIp=vrPpSrBpFragmentIp, vrPpTbsgBlockingDiscards=vrPpTbsgBlockingDiscards, vrPpSrseDesignatedRoot=vrPpSrseDesignatedRoot, vrPpTbclStateTable=vrPpTbclStateTable, vrPpSrBpNsProvEntry=vrPpSrBpNsProvEntry, vrBrTbFteComponentName=vrBrTbFteComponentName, vrPpTbpSecureOption=vrPpTbpSecureOption, cBOperEntry=cBOperEntry, vrPpSrtBpSpecInFrames=vrPpSrtBpSpecInFrames, vrPpFddiETBNsIncomingFilter=vrPpFddiETBNsIncomingFilter, vrPpSrseSrProvEntry=vrPpSrseSrProvEntry, vrBrNsAteEntryNumberIndex=vrBrNsAteEntryNumberIndex, vrPpTbsgTbOperEntry=vrPpTbsgTbOperEntry, vrBrSrbStpRowStatusEntry=vrBrSrbStpRowStatusEntry, vrPpTbclNsComponentName=vrPpTbclNsComponentName, vrPpSrtBpOperEntry=vrPpSrtBpOperEntry, vrPpTbclOperTable=vrPpTbclOperTable, vrBrTbFtePort=vrBrTbFtePort, vrBrSrbLteDomainNumIndex=vrBrSrbLteDomainNumIndex, cBIfEntryTable=cBIfEntryTable, vrPpSrseServiceClass=vrPpSrseServiceClass, vrBrSrbStpBridgeId=vrBrSrbStpBridgeId, vrPpTbsgStpPortState=vrPpTbsgStpPortState, vrBrSrbTotalLanIdTableEntries=vrBrSrbTotalLanIdTableEntries, vrBrTbStpHelloTime=vrBrTbStpHelloTime, vrPpFddiETBDesignatedCost=vrPpFddiETBDesignatedCost, vrPpTbseOperStatusTable=vrPpTbseOperStatusTable, vrPpSrtBpTbOperTable=vrPpSrtBpTbOperTable, vrPpTbsgDIProvTable=vrPpTbsgDIProvTable, vrPpSrsgSrProvTable=vrPpSrsgSrProvTable, vrPpTbsgIndex=vrPpTbsgIndex, vrPpSrseDelayExceededDiscards=vrPpSrseDelayExceededDiscards, vrBrTbSte=vrBrTbSte, vrBrSrbNumLanIdtEntriesDenied=vrBrSrbNumLanIdtEntriesDenied, vrBrRowStatusEntry=vrBrRowStatusEntry, vrPpSrseOperStatusEntry=vrPpSrseOperStatusEntry, vrPpSrtBpStatsEntry=vrPpSrtBpStatsEntry, vrPpSrsgDelayExceededDiscards=vrPpSrsgDelayExceededDiscards, vrBrTbStpStorageType=vrBrTbStpStorageType, vrPpSrclStpProvTable=vrPpSrclStpProvTable, pBLinkToProtocolPort=pBLinkToProtocolPort, vrPpTbclTbOperTable=vrPpTbclTbOperTable, vrPpSrclForwardTransitions=vrPpSrclForwardTransitions, vrPpSrsgSegmentMismatchDiscards=vrPpSrsgSegmentMismatchDiscards, vrPpSrclNsRowStatus=vrPpSrclNsRowStatus, vrPpSrtBpStpOperEntry=vrPpSrtBpStpOperEntry, vrPpTbseStpOperTable=vrPpTbseStpOperTable, vrPpTbpUnicastNoMatches=vrPpTbpUnicastNoMatches, vrPpFddiETBFragmentIp=vrPpFddiETBFragmentIp, vrPpSrtBpApeOutFrames=vrPpSrtBpApeOutFrames, vrPpTbclStatsEntry=vrPpTbclStatsEntry, vrPpSrBpNsIncomingFilter=vrPpSrBpNsIncomingFilter, vrPpSrsgConvertArpMacAddress=vrPpSrsgConvertArpMacAddress, vrPpSrsgSrStatsTable=vrPpSrsgSrStatsTable, vrPpTbpStateEntry=vrPpTbpStateEntry, vrPpSrtBpLearningDiscards=vrPpSrtBpLearningDiscards, vrPpSrsgTinygramFramesOut=vrPpSrsgTinygramFramesOut, vrPpSrclLargestFrame=vrPpSrclLargestFrame, vrBrTbStpRowStatusTable=vrBrTbStpRowStatusTable, vrPpTbsePortName=vrPpTbsePortName, vrPpTbseDelayExceededDiscards=vrPpTbseDelayExceededDiscards, vrPpSrBpProvEntry=vrPpSrBpProvEntry, vrPpFddiETBNsIndex=vrPpFddiETBNsIndex, vrPpSrBpAreRdLimit=vrPpSrBpAreRdLimit, vrPpTbseStpTypeOper=vrPpTbseStpTypeOper, vrPpSrclDupLanIdOrTreeErrors=vrPpSrclDupLanIdOrTreeErrors, vrPpSrclInFilterDiscards=vrPpSrclInFilterDiscards, vrPpSrclLanIdMismatches=vrPpSrclLanIdMismatches, vrPpSrtBpBridgingMode=vrPpSrtBpBridgingMode, vrPpSrseTinygramFramesOut=vrPpSrseTinygramFramesOut, vrPpTbsgBadAbstractDiscards=vrPpTbsgBadAbstractDiscards, vrPpSrtBpStatsTable=vrPpSrtBpStatsTable)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BridgeMIB", vrPpSrsgOperStatusTable=vrPpSrsgOperStatusTable, vrPpFddiETBBridgePortType=vrPpFddiETBBridgePortType, cBMpTable=cBMpTable, vrPpSrsgLanId=vrPpSrsgLanId, vrPpTbseDIProvEntry=vrPpTbseDIProvEntry, vrBrPteRowStatusTable=vrBrPteRowStatusTable, vrBrSrbStpProtocolSpec=vrBrSrbStpProtocolSpec, vrBrNsRowStatus=vrBrNsRowStatus, vrPpFddiETBRowStatusTable=vrPpFddiETBRowStatusTable, cBMacAddress=cBMacAddress, vrPpSrclProvEntry=vrPpSrclProvEntry, vrBrNsProvTable=vrBrNsProvTable, vrBrNumPorts=vrBrNumPorts, vrPpTbsgPathCostOper=vrPpTbsgPathCostOper, vrPpFddiETBRowStatus=vrPpFddiETBRowStatus, vrPpSrseDesignatedPort=vrPpSrseDesignatedPort, vrPpSrtBpNsStorageType=vrPpSrtBpNsStorageType, vrPpSrseOperationalState=vrPpSrseOperationalState, vrPpSrtBpInFrames=vrPpSrtBpInFrames, vrPpTbclDIProvEntry=vrPpTbclDIProvEntry, vrPpFddiETBTranslateIpx=vrPpFddiETBTranslateIpx, vrPpSrtBpTbProvTable=vrPpSrtBpTbProvTable, vrPpSrseInFilterDiscards=vrPpSrseInFilterDiscards, vrPpSrseSegmentMismatchDiscards=vrPpSrseSegmentMismatchDiscards, vrPpSrBpUpTime=vrPpSrBpUpTime, vrPpTbseProvTable=vrPpTbseProvTable, vrPpTbclLearningDiscards=vrPpTbclLearningDiscards, vrBrTbFteAgeOfEntry=vrBrTbFteAgeOfEntry, vrPpTbpBadAbstractDiscards=vrPpTbpBadAbstractDiscards, vrPpTbseMtuExceededDiscards=vrPpTbseMtuExceededDiscards, vrPpSrclAdminState=vrPpSrclAdminState, vrPpSrtBpLargestFrame=vrPpSrtBpLargestFrame, vrBrSrbStpBridgeForwardDelay=vrBrSrbStpBridgeForwardDelay, vrBrSrbStpHelloTime=vrBrSrbStpHelloTime, vrPpSrtBpOutFilterDiscards=vrPpSrtBpOutFilterDiscards, vrPpTbclOutboundFrameMediaType=vrPpTbclOutboundFrameMediaType, vrPpFddiETBOutFrames=vrPpFddiETBOutFrames, vrPpSrBpDupLanIdOrTreeErrors=vrPpSrBpDupLanIdOrTreeErrors, bridgeMIB=bridgeMIB, vrPpSrtBpStaticDiscards=vrPpSrtBpStaticDiscards, vrPpTbseDesignatedPort=vrPpTbseDesignatedPort, vrPpSrsgDupSegmentDiscards=vrPpSrsgDupSegmentDiscards, vrPpTbpNs=vrPpTbpNs, vrBrNsAteDirection=vrBrNsAteDirection, cBIfIndex=cBIfIndex, vrPpSrseExploreFrameTreatment=vrPpSrseExploreFrameTreatment, vrPpTbclUpTime=vrPpTbclUpTime, vrPpSrBpStpPortState=vrPpSrBpStpPortState, vrPpTbsgMtuExceededDiscards=vrPpTbsgMtuExceededDiscards, vrBrTbSteRowStatusEntry=vrBrTbSteRowStatusEntry, vrPpSrBpOperationalState=vrPpSrBpOperationalState, vrBrSrbStpTopologyChanges=vrBrSrbStpTopologyChanges, vrBrSrbStpDesignatedRoot=vrBrSrbStpDesignatedRoot, vrBrSrbStatsEntry=vrBrSrbStatsEntry, vrPpSrseDynamicDiscards=vrPpSrseDynamicDiscards, pBAdminState=pBAdminState, vrPpSrsgSnmpOperStatus=vrPpSrsgSnmpOperStatus, vrPpTbclBlockingDiscards=vrPpTbclBlockingDiscards, vrPpSrclExploreFrameTreatment=vrPpSrclExploreFrameTreatment, vrPpSrBpPortStateStpControl=vrPpSrBpPortStateStpControl, vrBrTbNcFteComponentName=vrBrTbNcFteComponentName, vrBrTbNcFteStorageType=vrBrTbNcFteStorageType, vrPpSrsgPortName=vrPpSrsgPortName, vrPpSrtBpDynamicDiscards=vrPpSrtBpDynamicDiscards, vrPpTbseInFilterDiscards=vrPpTbseInFilterDiscards, vrPpSrtBpRowStatus=vrPpSrtBpRowStatus, vrBrPteMacType=vrBrPteMacType, vrBrSrbStpProvEntry=vrBrSrbStpProvEntry, vrBrNsProvEntry=vrBrNsProvEntry, vrBrTbNcFteAddressIndex=vrBrTbNcFteAddressIndex, vrPpSrclPortNum=vrPpSrclPortNum, vrBrSrbStpIndex=vrBrSrbStpIndex, vrBrNsAteSecondMacAddress=vrBrNsAteSecondMacAddress, vrPpSrBpDesignatedRoot=vrPpSrBpDesignatedRoot, vrBrSrbProvTable=vrBrSrbProvTable, bridgeGroupBE01A=bridgeGroupBE01A, vrPpTbpPortName=vrPpTbpPortName, vrPpTbclUnicastNoMatches=vrPpTbclUnicastNoMatches, vrPpSrBpExploreFrameTreatment=vrPpSrBpExploreFrameTreatment, vrPpTbseStpProvEntry=vrPpTbseStpProvEntry, vrPpTbseDesignatedRoot=vrPpTbseDesignatedRoot, vrPpTbpOperStatusEntry=vrPpTbpOperStatusEntry, vrPpTbsg=vrPpTbsg, vrBrTbSteComponentName=vrBrTbSteComponentName, pBOperStatusTable=pBOperStatusTable, vrPpFddiETBDomainNum=vrPpFddiETBDomainNum, vrPpSrsgMtuExceededDiscards=vrPpSrsgMtuExceededDiscards, vrPpFddiETBTinygramFramesOut=vrPpFddiETBTinygramFramesOut, vrPpSrBpOutFilterDiscards=vrPpSrBpOutFilterDiscards, vrPpSrsgAdminStatus=vrPpSrsgAdminStatus, vrPpTbsgSecureOption=vrPpTbsgSecureOption, vrBrSrbStpTopologyChangeDetect=vrBrSrbStpTopologyChangeDetect, vrPpSrclStorageType=vrPpSrclStorageType, vrPpSrseSnmpOperStatus=vrPpSrseSnmpOperStatus, vrPpTbseStateTable=vrPpTbseStateTable, vrBrSrbLanIdTableNumEntries=vrBrSrbLanIdTableNumEntries, vrPpSrsgStorageType=vrPpSrsgStorageType, vrBrTbNcFteRowStatus=vrBrTbNcFteRowStatus, pBAdminControlTable=pBAdminControlTable, cBSnmpOperStatus=cBSnmpOperStatus, vrBrNsAte=vrBrNsAte, vrPpSrBpBridgingMode=vrPpSrBpBridgingMode, vrBrTbSteStorageType=vrBrTbSteStorageType, vrBrTbNcFte=vrBrTbNcFte, pBComponentName=pBComponentName, vrPpTbsgForwardTransitions=vrPpTbsgForwardTransitions, vrPpTbclRowStatusEntry=vrPpTbclRowStatusEntry, vrPpTbclFragmentIp=vrPpTbclFragmentIp, vrPpSrsgInFilterDiscards=vrPpSrsgInFilterDiscards, vrPpSrclStpOperTable=vrPpSrclStpOperTable, vrBrPtePortPointsTo=vrBrPtePortPointsTo, vrBrTbStorageType=vrBrTbStorageType, vrPpSrsgSrProvEntry=vrPpSrsgSrProvEntry, vrPpTbsgComponentName=vrPpTbsgComponentName, vrBrSrb=vrBrSrb, vrPpTbclPortNum=vrPpTbclPortNum, vrBrNsAteDomainNum=vrBrNsAteDomainNum, vrPpSrseHopCountExceededDiscards=vrPpSrseHopCountExceededDiscards, vrPpTbpStpPortState=vrPpTbpStpPortState, vrPpFddiETBNsProvTable=vrPpFddiETBNsProvTable, pBAdminControlEntry=pBAdminControlEntry, vrPpFddiETBIndex=vrPpFddiETBIndex, vrPpSrclNsIncomingFilter=vrPpSrclNsIncomingFilter, vrPpSrseStpOperTable=vrPpSrseStpOperTable, vrPpTbpDomainNum=vrPpTbpDomainNum, vrPpTbsgTinygramFramesOut=vrPpTbsgTinygramFramesOut, vrPpTbsgStpOperEntry=vrPpTbsgStpOperEntry, vrPpSrBpDIProvTable=vrPpSrBpDIProvTable, vrPpTbp=vrPpTbp, vrBrOperationalState=vrBrOperationalState, vrPpSrtBpComponentName=vrPpSrtBpComponentName, vrPpSrclPortPriority=vrPpSrclPortPriority, vrBrPteDomainNumIndex=vrBrPteDomainNumIndex, vrPpTbseDIProvTable=vrPpTbseDIProvTable, vrPpSrclDownTime=vrPpSrclDownTime, vrBrPteSpOperTable=vrBrPteSpOperTable, vrPpFddiETBPathCostOper=vrPpFddiETBPathCostOper, vrPpSrclFragmentIp=vrPpSrclFragmentIp, vrPpTbclStatsTable=vrPpTbclStatsTable, vrPpTbseOperEntry=vrPpTbseOperEntry, vrPpTbsgPortName=vrPpTbsgPortName, vrPpTbpConvertArpMacAddress=vrPpTbpConvertArpMacAddress, vrPpFddiETB=vrPpFddiETB, vrPpTbclBadAbstractDiscards=vrPpTbclBadAbstractDiscards, vrPpSrBpDownTime=vrPpSrBpDownTime, cBAdminControlEntry=cBAdminControlEntry, vrPpSrsgStpTypeOper=vrPpSrsgStpTypeOper, vrPpTbseTinygramFramesIn=vrPpTbseTinygramFramesIn, vrPpSrtBpBridgePortConfig=vrPpSrtBpBridgePortConfig, vrPpSrtBpTinygramFramesOut=vrPpSrtBpTinygramFramesOut, vrBrTbStpHoldTime=vrBrTbStpHoldTime, vrPpTbpOperationalState=vrPpTbpOperationalState, vrPpSrseSteSpanMode=vrPpSrseSteSpanMode, vrPpTbsgOperationalState=vrPpTbsgOperationalState, vrBrTbFwdTableNumEntries=vrBrTbFwdTableNumEntries, vrPpSrsgBlockingDiscards=vrPpSrsgBlockingDiscards, vrPpSrclIndex=vrPpSrclIndex, vrBrTbFteRowStatusTable=vrBrTbFteRowStatusTable, vrPpSrseProvEntry=vrPpSrseProvEntry, vrBrTbFteStatus=vrBrTbFteStatus, vrPpSrsePathCostOper=vrPpSrsePathCostOper, vrPpSrtBpTinygramFramesIn=vrPpSrtBpTinygramFramesIn, vrBrTbStatsTable=vrBrTbStatsTable, vrPpTbpPathCostOper=vrPpTbpPathCostOper, vrPpSrBpAdminStatus=vrPpSrBpAdminStatus, vrPpSrtBpHopCountExceededDiscards=vrPpSrtBpHopCountExceededDiscards, vrPpSrclDIProvTable=vrPpSrclDIProvTable, vrPpSrclLanId=vrPpSrclLanId, vrPpTbsgPortNum=vrPpTbsgPortNum, vrPpSrtBpFragmentIp=vrPpSrtBpFragmentIp, vrPpSrclOutFilterDiscards=vrPpSrclOutFilterDiscards, vrPpSrBpComponentName=vrPpSrBpComponentName, vrBrTbFteOperEntry=vrBrTbFteOperEntry, vrPpFddiETBPathCostMethod=vrPpFddiETBPathCostMethod, vrPpSrBpNsRowStatus=vrPpSrBpNsRowStatus, vrPpTbseRowStatusEntry=vrPpTbseRowStatusEntry, vrPpSrsgTinygramFramesIn=vrPpSrsgTinygramFramesIn, vrPpSrsgDupLanIdOrTreeErrors=vrPpSrsgDupLanIdOrTreeErrors, vrPpTbclNsRowStatusEntry=vrPpTbclNsRowStatusEntry, vrPpSrseStateEntry=vrPpSrseStateEntry, vrPpSrsgDIProvTable=vrPpSrsgDIProvTable, vrPpSrBpSteOutFrames=vrPpSrBpSteOutFrames, vrBrTbStpRowStatus=vrBrTbStpRowStatus, vrPpSrsgStatsEntry=vrPpSrsgStatsEntry, vrPpTbseSecureOption=vrPpTbseSecureOption, vrBrOperStatusEntry=vrBrOperStatusEntry, vrPpTbclForwardTransitions=vrPpTbclForwardTransitions, vrPpTbpMtuExceededDiscards=vrPpTbpMtuExceededDiscards, vrPpFddiETBTbProvTable=vrPpFddiETBTbProvTable, vrBrTbFte=vrBrTbFte, vrPpSrtBpInFilterDiscards=vrPpSrtBpInFilterDiscards, vrBrSrbLteRowStatusEntry=vrBrSrbLteRowStatusEntry, vrPpSrsgPortStateStpControl=vrPpSrsgPortStateStpControl, vrPpTbseIndex=vrPpTbseIndex, vrPpSrclDesignatedCost=vrPpSrclDesignatedCost, vrPpTbpUpTime=vrPpTbpUpTime, vrPpSrBpInFilterDiscards=vrPpSrBpInFilterDiscards, vrPpSrsgServiceClass=vrPpSrsgServiceClass, vrPpSrtBpBridgePortType=vrPpSrtBpBridgePortType, vrBrSrbStpFwdDelay=vrBrSrbStpFwdDelay, pBRowStatus=pBRowStatus, vrPpFddiETBStatsTable=vrPpFddiETBStatsTable, vrPpTbclStpOperTable=vrPpTbclStpOperTable, vrPpTbclInFilterDiscards=vrPpTbclInFilterDiscards, vrPpSrsgDIProvEntry=vrPpSrsgDIProvEntry, vrPpSrsgStatsTable=vrPpSrsgStatsTable, vrBrNsAteFilterName=vrBrNsAteFilterName, vrBrSrbStpStorageType=vrBrSrbStpStorageType, vrPpTbsgStatsTable=vrPpTbsgStatsTable, vrBrNsAteStorageType=vrBrNsAteStorageType, vrPpSrseAdminState=vrPpSrseAdminState, vrPpTbpNsIndex=vrPpTbpNsIndex, vrPpFddiETBStateTable=vrPpFddiETBStateTable, vrBrOperEntry=vrBrOperEntry, vrPpSrtBpSteSpanMode=vrPpSrtBpSteSpanMode, vrPpSrBpRowStatus=vrPpSrBpRowStatus, vrPpSrseTranslateIpx=vrPpSrseTranslateIpx, pB=pB, vrPpTbsgInFrames=vrPpTbsgInFrames, vrPpTbpPathCost=vrPpTbpPathCost, vrBrSrbStpOperEntry=vrBrSrbStpOperEntry, vrPpSrclInternalLanId=vrPpSrclInternalLanId, vrPpTbpBridgingMode=vrPpTbpBridgingMode, vrBrSrbLteAgeOfEntry=vrBrSrbLteAgeOfEntry, vrBrPteLanId=vrBrPteLanId, vrBrSrbStpRootPortName=vrBrSrbStpRootPortName, pBIfEntryEntry=pBIfEntryEntry, vrPpSrBpStorageType=vrPpSrBpStorageType, vrPpSrBpPathCostOper=vrPpSrBpPathCostOper, vrPpSrtBpRowStatusEntry=vrPpSrtBpRowStatusEntry, vrPpTbclPortName=vrPpTbclPortName, vrPpSrtBpSegmentMismatchDiscards=vrPpSrtBpSegmentMismatchDiscards, vrPpTbsgFragmentIp=vrPpTbsgFragmentIp, vrPpTbclConvertArpMacAddress=vrPpTbclConvertArpMacAddress, vrPpTbpNsRowStatusEntry=vrPpTbpNsRowStatusEntry, vrBrTbStpPriority=vrBrTbStpPriority, vrPpTbsgInDiscards=vrPpTbsgInDiscards, vrPpSrtBpBlockingDiscards=vrPpSrtBpBlockingDiscards, vrPpFddiETBOperStatusTable=vrPpFddiETBOperStatusTable, vrPpSrsgOutboundFrameMediaType=vrPpSrsgOutboundFrameMediaType, vrPpSrclIfIndex=vrPpSrclIfIndex, vrBrSrbRowStatus=vrBrSrbRowStatus, vrPpSrtBpStaticEntryDiscards=vrPpSrtBpStaticEntryDiscards, vrPpSrsgUpTime=vrPpSrsgUpTime, vrPpSrtBpNsIncomingFilter=vrPpSrtBpNsIncomingFilter, vrBrSrbLteOperTable=vrBrSrbLteOperTable, vrPpSrsePortName=vrPpSrsePortName, vrPpTbseOperTable=vrPpTbseOperTable, vrPpSrBpRowStatusEntry=vrPpSrBpRowStatusEntry, bridgeCapabilitiesBE01=bridgeCapabilitiesBE01, vrPpFddiETBTbOperTable=vrPpFddiETBTbOperTable, vrPpSrBpTranslateIpx=vrPpSrBpTranslateIpx, vrBrPteRowStatusEntry=vrBrPteRowStatusEntry, cBStorageType=cBStorageType)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BridgeMIB", vrPpTbpProvTable=vrPpTbpProvTable, vrPpFddiETBNsStorageType=vrPpFddiETBNsStorageType, pBMpEntry=pBMpEntry, vrPpTbclDynamicEntryDiscards=vrPpTbclDynamicEntryDiscards, vrPpTbclDesignatedCost=vrPpTbclDesignatedCost, vrBrSrbComponentName=vrBrSrbComponentName, vrBrSrbStpBridgeHelloTime=vrBrSrbStpBridgeHelloTime, cBLinkToProtocolPort=cBLinkToProtocolPort, vrBrTbProvEntry=vrBrTbProvEntry, vrPpSrsgPathCostMethod=vrPpSrsgPathCostMethod, vrPpSrtBpDesignatedCost=vrPpSrtBpDesignatedCost, vrPpSrsgOutFilterDiscards=vrPpSrsgOutFilterDiscards, vrPpSrBpSegmentMismatchDiscards=vrPpSrBpSegmentMismatchDiscards, vrPpTbseStpProvTable=vrPpTbseStpProvTable, vrPpSrclSrProvTable=vrPpSrclSrProvTable, vrPpSrclUsageState=vrPpSrclUsageState, vrPpSrBpDesignatedPort=vrPpSrBpDesignatedPort, vrPpSrsgBridgingMode=vrPpSrsgBridgingMode, vrBrTbSteProvTable=vrBrTbSteProvTable, vrBrSrbStatsTable=vrBrSrbStatsTable, vrPpTbseUnicastNoMatches=vrPpTbseUnicastNoMatches, vrPpTbpDIProvTable=vrPpTbpDIProvTable, vrPpFddiETBNsRowStatusEntry=vrPpFddiETBNsRowStatusEntry, vrPpSrBpIfIndex=vrPpSrBpIfIndex, vrPpTbsgSnmpOperStatus=vrPpTbsgSnmpOperStatus, vrPpTbclProvTable=vrPpTbclProvTable, vrPpSrseApeInFrames=vrPpSrseApeInFrames, vrPpSrtBpLanId=vrPpSrtBpLanId, vrPpTbseUpTime=vrPpTbseUpTime, vrPpSrBpOutboundFrameMediaType=vrPpSrBpOutboundFrameMediaType, cBRowStatus=cBRowStatus, vrPpSrtBpOperationalState=vrPpSrtBpOperationalState, vrPpTbclTbProvTable=vrPpTbclTbProvTable, vrPpSrsgDesignatedPort=vrPpSrsgDesignatedPort, vrPpTbsgPathCostMethod=vrPpTbsgPathCostMethod, vrPpSrclStatsEntry=vrPpSrclStatsEntry, vrPpFddiETBRowStatusEntry=vrPpFddiETBRowStatusEntry, vrBrOperStatusTable=vrBrOperStatusTable, vrPpTbsgStatsEntry=vrPpTbsgStatsEntry, vrPpTbseComponentName=vrPpTbseComponentName, vrPpSrsgPathCost=vrPpSrsgPathCost, vrPpTbsgServiceClass=vrPpTbsgServiceClass, vrBrSrbStpRowStatus=vrBrSrbStpRowStatus, vrPpTbclDomainNum=vrPpTbclDomainNum, vrPpSrBpInternalLanId=vrPpSrBpInternalLanId, pBIfIndex=pBIfIndex, vrPpTbpOperEntry=vrPpTbpOperEntry, vrPpTbpNsStorageType=vrPpTbpNsStorageType, vrPpTbsePortNum=vrPpTbsePortNum, vrPpSrclStpOperEntry=vrPpSrclStpOperEntry, vrPpSrtBpSrStatsTable=vrPpSrtBpSrStatsTable, vrPpSrsgStaticDiscards=vrPpSrsgStaticDiscards, vrPpTbsgDelayExceededDiscards=vrPpTbsgDelayExceededDiscards, vrPpTbpInFrames=vrPpTbpInFrames, cBComponentName=cBComponentName, vrPpTbpDownTime=vrPpTbpDownTime, vrPpTbseOperStatusEntry=vrPpTbseOperStatusEntry, vrPpSrtBpSteRdLimit=vrPpSrtBpSteRdLimit, vrPpSrtBpExploreFrameTreatment=vrPpSrtBpExploreFrameTreatment, vrPpSrseOperStatusTable=vrPpSrseOperStatusTable, vrPpSrBpStatsTable=vrPpSrBpStatsTable, vrPpSrseStaticDiscards=vrPpSrseStaticDiscards, vrPpSrcl=vrPpSrcl, vrPpTbseMaxInfo=vrPpTbseMaxInfo, vrPpTbpPathCostMethod=vrPpTbpPathCostMethod, vrPpSrBpRowStatusTable=vrPpSrBpRowStatusTable, vrPpTbclTinygramFramesIn=vrPpTbclTinygramFramesIn, vrPpSrtBpMaxInfo=vrPpSrtBpMaxInfo, vrBrAdminControlEntry=vrBrAdminControlEntry, vrPpFddiETBOperationalState=vrPpFddiETBOperationalState, vrPpTbpNsIncomingFilter=vrPpTbpNsIncomingFilter, vrPpSrBpNsRowStatusEntry=vrPpSrBpNsRowStatusEntry, vrPpSrseForwardTransitions=vrPpSrseForwardTransitions, vrPpTbseStpTypeProv=vrPpTbseStpTypeProv, vrPpTbsgTbProvTable=vrPpTbsgTbProvTable, vrPpFddiETBStorageType=vrPpFddiETBStorageType, vrPpTbpStpProvEntry=vrPpTbpStpProvEntry, vrPpTbsgBridgingMode=vrPpTbsgBridgingMode, vrPpTbpPortPriority=vrPpTbpPortPriority, vrBrSrbLteStorageType=vrBrSrbLteStorageType, vrPpSrclRowStatus=vrPpSrclRowStatus, vrPpTbsgDomainNum=vrPpTbsgDomainNum, vrBrTbSteAtgtValue=vrBrTbSteAtgtValue, vrPpSrsgPortPriority=vrPpSrsgPortPriority, vrPpSrtBpOperStatusTable=vrPpSrtBpOperStatusTable, vrPpSrBpNsRowStatusTable=vrPpSrBpNsRowStatusTable, vrPpTbclDesignatedPort=vrPpTbclDesignatedPort, vrPpSrsgDesignatedCost=vrPpSrsgDesignatedCost, vrPpTbsgUpTime=vrPpTbsgUpTime, cBStateEntry=cBStateEntry, bridgeGroupBE=bridgeGroupBE, vrPpSrBpOperEntry=vrPpSrBpOperEntry, vrPpSrBpStpProvEntry=vrPpSrBpStpProvEntry, vrPpTbclNsRowStatus=vrPpTbclNsRowStatus, vrPpSrBpSrProvEntry=vrPpSrBpSrProvEntry, vrPpTbclOutFilterDiscards=vrPpTbclOutFilterDiscards, vrPpSrtBpOutFrames=vrPpSrtBpOutFrames, vrPpTbsgOperStatusTable=vrPpTbsgOperStatusTable, vrPpTbsgTbOperTable=vrPpTbsgTbOperTable, vrPpTbclNsIndex=vrPpTbclNsIndex, vrPpFddiETBPreserveDomain=vrPpFddiETBPreserveDomain, vrPpTbpRowStatusEntry=vrPpTbpRowStatusEntry, vrPpSrseIndex=vrPpSrseIndex, vrPpSrclBridgePortConfig=vrPpSrclBridgePortConfig, vrBrPtePortNameIndex=vrBrPtePortNameIndex, vrBrNsAteComponentName=vrBrNsAteComponentName, vrPpFddiETBOperEntry=vrPpFddiETBOperEntry, vrPpSrBpSnmpOperStatus=vrPpSrBpSnmpOperStatus, vrPpTbclTbOperEntry=vrPpTbclTbOperEntry, vrBrNsAteFirstMacAddressMask=vrBrNsAteFirstMacAddressMask, cBUsageState=cBUsageState, vrPpTbpIfIndex=vrPpTbpIfIndex, vrPpSrseSteRdLimit=vrPpSrseSteRdLimit, vrBrSrbIndex=vrBrSrbIndex, vrPpTbpComponentName=vrPpTbpComponentName, vrPpSrtBpDesignatedRoot=vrPpSrtBpDesignatedRoot, vrPpSrclStpProvEntry=vrPpSrclStpProvEntry, vrBrSrbStpComponentName=vrBrSrbStpComponentName, vrPpFddiETBStpPortState=vrPpFddiETBStpPortState, vrPpSrtBpStpProvTable=vrPpSrtBpStpProvTable, vrPpTbsgPortPriority=vrPpTbsgPortPriority, vrPpTbclStpProvEntry=vrPpTbclStpProvEntry, vrPpTbseFragmentIp=vrPpTbseFragmentIp, vrPpSrtBpTbOperEntry=vrPpSrtBpTbOperEntry, vrPpTbclIfIndex=vrPpTbclIfIndex, vrPpSrsePathCost=vrPpSrsePathCost, vrBrNsRowStatusEntry=vrBrNsRowStatusEntry, cBMpEntry=cBMpEntry, vrPpSrtBpProvTable=vrPpSrtBpProvTable, vrPpSrclProvTable=vrPpSrclProvTable, vrPpSrBpDesignatedCost=vrPpSrBpDesignatedCost, vrPpFddiETBConvertArpMacAddress=vrPpFddiETBConvertArpMacAddress, vrPpSrclNsRowStatusEntry=vrPpSrclNsRowStatusEntry, vrPpSrclBadAbstractDiscards=vrPpSrclBadAbstractDiscards, bridgeCapabilities=bridgeCapabilities, vrPpSrclHopCountExceededDiscards=vrPpSrclHopCountExceededDiscards, vrPpSrsgIfIndex=vrPpSrsgIfIndex, vrPpTbclDownTime=vrPpTbclDownTime, vrPpSrseOperEntry=vrPpSrseOperEntry, vrBrNsStorageType=vrBrNsStorageType, vrBrTbStpBridgeId=vrBrTbStpBridgeId, vrPpSrBpLanId=vrPpSrBpLanId, vrPpFddiETBBridgePortConfig=vrPpFddiETBBridgePortConfig, vrPpSrsgOperTable=vrPpSrsgOperTable, vrPpFddiETBTinygramFramesIn=vrPpFddiETBTinygramFramesIn, vrPpTbsgStateEntry=vrPpTbsgStateEntry, vrBrNsAteProvEntry=vrBrNsAteProvEntry, vrBrTbFteRowStatusEntry=vrBrTbFteRowStatusEntry, cBAdminState=cBAdminState, vrPpTbsgOperTable=vrPpTbsgOperTable, vrPpSrclPathCostOper=vrPpSrclPathCostOper, vrPpSrBpBridgePortType=vrPpSrBpBridgePortType, vrPpTbsgStpOperTable=vrPpTbsgStpOperTable, vrPpTbclIndex=vrPpTbclIndex, vrPpTbsgBadVerifyDiscards=vrPpTbsgBadVerifyDiscards, vrPpSrtBpPortStateStpControl=vrPpSrtBpPortStateStpControl, vrPpFddiETBInFilterDiscards=vrPpFddiETBInFilterDiscards, vrPpSrtBpDynamicEntryDiscards=vrPpSrtBpDynamicEntryDiscards, vrPpSrseSpecInFrames=vrPpSrseSpecInFrames, vrPpTbsgOperStatusEntry=vrPpTbsgOperStatusEntry, vrBrTbStpStpMode=vrBrTbStpStpMode, vrPpTbsgOperEntry=vrPpTbsgOperEntry, vrPpFddiETBDIProvTable=vrPpFddiETBDIProvTable, vrPpSrsgPortNum=vrPpSrsgPortNum, vrPpTbpFragmentIp=vrPpTbpFragmentIp, vrPpSrclPortStateStpControl=vrPpSrclPortStateStpControl, vrBrPteOperTable=vrBrPteOperTable, vrPpSrBpBridgePortConfig=vrPpSrBpBridgePortConfig, vrPpTbcl=vrPpTbcl, vrPpSrBpSpecInFrames=vrPpSrBpSpecInFrames, vrPpTbpRowStatusTable=vrPpTbpRowStatusTable, vrPpTbsgStaticEntryDiscards=vrPpTbsgStaticEntryDiscards, vrPpSrsgOperEntry=vrPpSrsgOperEntry, pBRowStatusTable=pBRowStatusTable, vrPpTbclComponentName=vrPpTbclComponentName, vrPpSrclDelayExceededDiscards=vrPpSrclDelayExceededDiscards, vrPpTbpAdminState=vrPpTbpAdminState, vrPpSrtBpPreserveDomain=vrPpSrtBpPreserveDomain, vrPpFddiETBPortStateStpControl=vrPpFddiETBPortStateStpControl, vrPpTbpForwardTransitions=vrPpTbpForwardTransitions, vrPpSrtBpNsRowStatus=vrPpSrtBpNsRowStatus, vrPpTbpAdminStatus=vrPpTbpAdminStatus, vrPpSrseSrStatsEntry=vrPpSrseSrStatsEntry, vrPpTbsePathCost=vrPpTbsePathCost, vrPpTbseTbOperTable=vrPpTbseTbOperTable, vrPpSrsgHopCount=vrPpSrsgHopCount, vrPpFddiETBStatsEntry=vrPpFddiETBStatsEntry, vrPpTbclOperStatusEntry=vrPpTbclOperStatusEntry, vrPpTbsgOutboundFrameMediaType=vrPpTbsgOutboundFrameMediaType, vrPpSrclUpTime=vrPpSrclUpTime, vrBrNsAteFirstMacAddress=vrBrNsAteFirstMacAddress, vrPpFddiETBLearningDiscards=vrPpFddiETBLearningDiscards, vrPpTbclNs=vrPpTbclNs, vrPpTbpDelayExceededDiscards=vrPpTbpDelayExceededDiscards, cBIndex=cBIndex, vrPpSrBpNsStorageType=vrPpSrBpNsStorageType, vrPpSrclRowStatusTable=vrPpSrclRowStatusTable, vrBrNs=vrBrNs, vrPpSrsePathCostMethod=vrPpSrsePathCostMethod, vrPpTbpOperStatusTable=vrPpTbpOperStatusTable, vrBrNsAteRowStatusTable=vrBrNsAteRowStatusTable, vrBrTbStpTopologyChangeDetect=vrBrTbStpTopologyChangeDetect, vrPpSrsgProvEntry=vrPpSrsgProvEntry, vrPpSrclOutboundFrameMediaType=vrPpSrclOutboundFrameMediaType, vrBrTbStatsEntry=vrBrTbStatsEntry, vrPpFddiETBInDiscards=vrPpFddiETBInDiscards, vrBrComponentName=vrBrComponentName, vrPpSrBpStaticDiscards=vrPpSrBpStaticDiscards, vrPpSrsgStpTypeProv=vrPpSrsgStpTypeProv, vrBrTbFteDomainNumIndex=vrBrTbFteDomainNumIndex, pBOperStatusEntry=pBOperStatusEntry, vrPpFddiETBDIProvEntry=vrPpFddiETBDIProvEntry, vrPpTbclInFrames=vrPpTbclInFrames, vrPpFddiETBMaxInfo=vrPpFddiETBMaxInfo, vrPpTbseBlockingDiscards=vrPpTbseBlockingDiscards, vrPpTbsgProvEntry=vrPpTbsgProvEntry, vrBrSrbStpTimeSinceTopologyChange=vrBrSrbStpTimeSinceTopologyChange, vrPpTbseBridgePortConfig=vrPpTbseBridgePortConfig, vrPpSrclBridgingMode=vrPpSrclBridgingMode, vrBrType=vrBrType, vrBrTbSteRowStatus=vrBrTbSteRowStatus, vrBrSrbBridgeLfMode=vrBrSrbBridgeLfMode, vrBrTbComponentName=vrBrTbComponentName, vrBrSrbLteComponentName=vrBrSrbLteComponentName, pBMpTable=pBMpTable, vrBrSrbLtePeerMACAddress=vrBrSrbLtePeerMACAddress, cBOperTable=cBOperTable, vrBrSrbStpOperTable=vrBrSrbStpOperTable, vrPpTbclMtuExceededDiscards=vrPpTbclMtuExceededDiscards, vrPpSrBpNsIndex=vrPpSrBpNsIndex, vrBrTbStp=vrBrTbStp, vrPpTbpUsageState=vrPpTbpUsageState, pBStorageType=pBStorageType, vrPpSrsgBridgeNum=vrPpSrsgBridgeNum, vrPpSrBpStateTable=vrPpSrBpStateTable, vrBrTbStpMaxAge=vrBrTbStpMaxAge, vrPpFddiETBTbOperEntry=vrPpFddiETBTbOperEntry, pBRowStatusEntry=pBRowStatusEntry, vrPpTbpNsComponentName=vrPpTbpNsComponentName, vrPpTbpTbProvTable=vrPpTbpTbProvTable, vrPpSrBpPortName=vrPpSrBpPortName, vrPpSrtBpStateEntry=vrPpSrtBpStateEntry, vrPpTbclNsProvEntry=vrPpTbclNsProvEntry, vrBrPte=vrBrPte, vrPpTbseStaticEntryDiscards=vrPpTbseStaticEntryDiscards, vrPpSrtBpStpOperTable=vrPpSrtBpStpOperTable, vrPpSrsgSpecInFrames=vrPpSrsgSpecInFrames, vrPpSrBpApeInFrames=vrPpSrBpApeInFrames, vrBrTbLearnedEntryDiscards=vrBrTbLearnedEntryDiscards, vrPpFddiETBDesignatedRoot=vrPpFddiETBDesignatedRoot, vrPpTbsgPreserveDomain=vrPpTbsgPreserveDomain, vrPpSrtBp=vrPpSrtBp, vrBrTbTotalForwardingTableEntries=vrBrTbTotalForwardingTableEntries, vrBrSrbStpRootCost=vrBrSrbStpRootCost)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BridgeMIB", vrBrTbStpFwdDelay=vrBrTbStpFwdDelay, pBIfAdminStatus=pBIfAdminStatus, vrBrNsAteRowStatusEntry=vrBrNsAteRowStatusEntry, vrPpTbsgLearningDiscards=vrPpTbsgLearningDiscards, vrPpSrtBpDupLanIdOrTreeErrors=vrPpSrtBpDupLanIdOrTreeErrors, vrBrTbStpBridgeHelloTime=vrBrTbStpBridgeHelloTime, vrPpSrBpLargestFrame=vrPpSrBpLargestFrame, vrPpSrtBpDIProvTable=vrPpSrtBpDIProvTable, vrPpSrclDesignatedPort=vrPpSrclDesignatedPort, vrPpSrclStateTable=vrPpSrclStateTable, vrPpFddiETBStpOperTable=vrPpFddiETBStpOperTable, vrPpTbpPortStateStpControl=vrPpTbpPortStateStpControl, vrPpTbsgDesignatedRoot=vrPpTbsgDesignatedRoot, vrPpFddiETBUpTime=vrPpFddiETBUpTime, vrPpTbclProvEntry=vrPpTbclProvEntry, vrBrPteBridgeNum=vrBrPteBridgeNum, pBSnmpAdminStatus=pBSnmpAdminStatus, vrPpTbsePathCostMethod=vrPpTbsePathCostMethod, vrBrTbNumFtEntriesDenied=vrBrTbNumFtEntriesDenied, vrBrTbIndex=vrBrTbIndex, vrPpTbseForwardTransitions=vrPpTbseForwardTransitions, vrPpFddiETBNsRowStatusTable=vrPpFddiETBNsRowStatusTable, vrPpSrseComponentName=vrPpSrseComponentName, vrPpTbpBadVerifyDiscards=vrPpTbpBadVerifyDiscards, vrPpSrseStpOperEntry=vrPpSrseStpOperEntry, vrPpSrclSegmentMismatchDiscards=vrPpSrclSegmentMismatchDiscards, vrPpSrclOperTable=vrPpSrclOperTable, vrPpTbseRowStatus=vrPpTbseRowStatus, vrPpSrclDomainNum=vrPpSrclDomainNum, vrBrSrbRowStatusEntry=vrBrSrbRowStatusEntry, vrPpSrBpNsOutgoingFilter=vrPpSrBpNsOutgoingFilter, vrPpSrtBpOperTable=vrPpSrtBpOperTable, vrPpTbseLearningDiscards=vrPpTbseLearningDiscards, vrPpSrsgLanIdMismatches=vrPpSrsgLanIdMismatches, vrPpSrBpPortPriority=vrPpSrBpPortPriority, vrPpSrsgStpPortState=vrPpSrsgStpPortState, vrBrTbStpTimeSinceTopologyChange=vrBrTbStpTimeSinceTopologyChange, vrPpSrBpDelayExceededDiscards=vrPpSrBpDelayExceededDiscards, vrBrNsAteSecondMacAddressMask=vrBrNsAteSecondMacAddressMask, vrPpSrseStatsEntry=vrPpSrseStatsEntry, vrPpSrseDIProvTable=vrPpSrseDIProvTable, vrPpSrsePreserveDomain=vrPpSrsePreserveDomain, vrPpTbseAdminStatus=vrPpTbseAdminStatus, vrPpSrclDesignatedBridge=vrPpSrclDesignatedBridge, vrPpSrtBpInDiscards=vrPpSrtBpInDiscards, vrPpSrclStaticDiscards=vrPpSrclStaticDiscards, vrPpSrBpOperStatusEntry=vrPpSrBpOperStatusEntry, vrPpTbsgStpTypeOper=vrPpTbsgStpTypeOper, vrPpTbpTinygramFramesIn=vrPpTbpTinygramFramesIn, vrPpSrBpPortNum=vrPpSrBpPortNum, vrPpSrclStatsTable=vrPpSrclStatsTable, vrPpSrBpHopCount=vrPpSrBpHopCount, vrPpSrtBpBridgeNum=vrPpSrtBpBridgeNum, vrPpSrseStorageType=vrPpSrseStorageType, vrPpSrsgSpecOutFrames=vrPpSrsgSpecOutFrames, vrBrTbProvTable=vrBrTbProvTable, cBRowStatusEntry=cBRowStatusEntry, vrPpTbseTbProvEntry=vrPpTbseTbProvEntry, vrPpSrclNsRowStatusTable=vrPpSrclNsRowStatusTable, vrPpSrclNsProvTable=vrPpSrclNsProvTable, vrBrTbStpComponentName=vrBrTbStpComponentName, cBOperStatusEntry=cBOperStatusEntry, vrPpFddiETBBridgingMode=vrPpFddiETBBridgingMode, vrPpTbclAdminState=vrPpTbclAdminState, vrPpSrseStpProvTable=vrPpSrseStpProvTable, vrBrSrbNumLanIdtEntriesFree=vrBrSrbNumLanIdtEntriesFree, vrPpSrclSrStatsTable=vrPpSrclSrStatsTable, vrPpTbseStpPortState=vrPpTbseStpPortState, vrPpSrseStpProvEntry=vrPpSrseStpProvEntry, vrPpSrtBpPathCost=vrPpSrtBpPathCost, vrPpSrsgComponentName=vrPpSrsgComponentName, vrBrIndex=vrBrIndex, vrPpTbsgStpProvEntry=vrPpTbsgStpProvEntry, vrPpSrclTinygramFramesIn=vrPpSrclTinygramFramesIn, vrBrTbFtePeerAddressInfo=vrBrTbFtePeerAddressInfo, vrBrSrbRowStatusTable=vrBrSrbRowStatusTable, vrBrTbSteAtgtEntry=vrBrTbSteAtgtEntry, vrBrTbNcFtePort=vrBrTbNcFtePort, vrPpSrBpMtuExceededDiscards=vrPpSrBpMtuExceededDiscards, cBOperationalState=cBOperationalState, vrPpFddiETBPortNum=vrPpFddiETBPortNum, vrPpSrseHopCount=vrPpSrseHopCount, vrBrPteOperEntry=vrBrPteOperEntry, vrBrAdminStatus=vrBrAdminStatus, vrPpSrBpStateEntry=vrPpSrBpStateEntry, vrPpSrseBridgePortType=vrPpSrseBridgePortType, vrPpTbseBadVerifyDiscards=vrPpTbseBadVerifyDiscards, vrPpTbseConvertArpMacAddress=vrPpTbseConvertArpMacAddress, vrPpTbsgAdminStatus=vrPpTbsgAdminStatus, vrPpSrclDynamicDiscards=vrPpSrclDynamicDiscards, vrPpSrclPortName=vrPpSrclPortName, vrPpTbclPortPriority=vrPpTbclPortPriority, vrPpTbseStatsTable=vrPpTbseStatsTable, vrBrTbNumFtEntriesFree=vrBrTbNumFtEntriesFree, vrPpSrtBpDesignatedPort=vrPpSrtBpDesignatedPort, vrPpSrseDesignatedBridge=vrPpSrseDesignatedBridge, vrPpSrsePortStateStpControl=vrPpSrsePortStateStpControl, vrBrTbStpProvTable=vrBrTbStpProvTable, vrPpSrtBpSrStatsEntry=vrPpSrtBpSrStatsEntry, vrPpTbsePreserveDomain=vrPpTbsePreserveDomain, vrPpSrsgIndex=vrPpSrsgIndex, vrPpTbclStpTypeProv=vrPpTbclStpTypeProv, vrPpSrtBpStpTypeProv=vrPpSrtBpStpTypeProv, vrPpSrseSteOutFrames=vrPpSrseSteOutFrames, vrPpSrtBpBadAbstractDiscards=vrPpSrtBpBadAbstractDiscards, vrPpSrclStpTypeOper=vrPpSrclStpTypeOper, vrPpSrseConvertArpMacAddress=vrPpSrseConvertArpMacAddress, vrPpTbsgTranslateIpx=vrPpTbsgTranslateIpx, vrBrSrbStpPriority=vrBrSrbStpPriority, pBOperEntry=pBOperEntry, vrPpTbclStpOperEntry=vrPpTbclStpOperEntry, vrPpTbpPortNum=vrPpTbpPortNum, vrPpSrseSrProvTable=vrPpSrseSrProvTable, vrPpSrBpSrStatsEntry=vrPpSrBpSrStatsEntry, vrPpSrseMtuExceededDiscards=vrPpSrseMtuExceededDiscards, vrPpSrtBpStorageType=vrPpSrtBpStorageType, vrPpTbseDomainNum=vrPpTbseDomainNum, vrPpTbpStorageType=vrPpTbpStorageType, vrPpTbseStpOperEntry=vrPpTbseStpOperEntry, vrPpSrclTinygramFramesOut=vrPpSrclTinygramFramesOut, vrPpSrclSpecOutFrames=vrPpSrclSpecOutFrames, pBIndex=pBIndex, vrPpTbsgAdminState=vrPpTbsgAdminState, vrPpSrsgStateTable=vrPpSrsgStateTable, vrBrSrbStpMaxAge=vrBrSrbStpMaxAge, vrPpSrseSteInFrames=vrPpSrseSteInFrames, vrPpSrseBlockingDiscards=vrPpSrseBlockingDiscards, vrPpTbclAdminStatus=vrPpTbclAdminStatus, bridgeGroupBE01=bridgeGroupBE01, vrPpTbclTbProvEntry=vrPpTbclTbProvEntry, vrPpSrtBpSrProvTable=vrPpSrtBpSrProvTable, vrPpSrBpNsComponentName=vrPpSrBpNsComponentName, vrPpSrtBpNsProvEntry=vrPpSrtBpNsProvEntry, vrPpSrBpBlockingDiscards=vrPpSrBpBlockingDiscards, vrPpSrseSpecOutFrames=vrPpSrseSpecOutFrames, vrPpTbpDIProvEntry=vrPpTbpDIProvEntry, vrPpTbpBridgePortConfig=vrPpTbpBridgePortConfig, vrBrNsLastFilter=vrBrNsLastFilter, vrPpSrclSteSpanMode=vrPpSrclSteSpanMode, vrBrTbStpRootCost=vrBrTbStpRootCost, vrBrBridgeAddress=vrBrBridgeAddress, vrPpSrseSrStatsTable=vrPpSrseSrStatsTable, vrPpTbseBridgingMode=vrPpTbseBridgingMode, vrBrTbSteReceivePortIndex=vrBrTbSteReceivePortIndex, vrPpSrsgStateEntry=vrPpSrsgStateEntry, vrPpSrtBpPathCostOper=vrPpSrtBpPathCostOper, vrPpFddiETBOutFilterDiscards=vrPpFddiETBOutFilterDiscards, vrPpSrBpStpProvTable=vrPpSrBpStpProvTable, vrPpSrseBridgePortConfig=vrPpSrseBridgePortConfig, vrPpSrsgTranslateIpx=vrPpSrsgTranslateIpx, vrPpTbpSnmpOperStatus=vrPpTbpSnmpOperStatus, vrPpFddiETBStpTypeOper=vrPpFddiETBStpTypeOper, vrPpTbseInDiscards=vrPpTbseInDiscards, vrPpTbsgBridgePortType=vrPpTbsgBridgePortType, vrPpTbsgDynamicEntryDiscards=vrPpTbsgDynamicEntryDiscards, vrPpFddiETBOperTable=vrPpFddiETBOperTable, vrPpSrseOutFilterDiscards=vrPpSrseOutFilterDiscards, vrPpSrtBpBadVerifyDiscards=vrPpSrtBpBadVerifyDiscards, vrPpSrsePortNum=vrPpSrsePortNum, vrPpSrclOperEntry=vrPpSrclOperEntry, vrBrPteFilterPoints=vrBrPteFilterPoints, vrPpSrsgBridgePortConfig=vrPpSrsgBridgePortConfig, vrPpTbseOutFilterDiscards=vrPpTbseOutFilterDiscards, vrPpSrclConvertArpMacAddress=vrPpSrclConvertArpMacAddress, vrPpSrclDupSegmentDiscards=vrPpSrclDupSegmentDiscards, vrBrSnmpOperStatus=vrBrSnmpOperStatus, vrPpTbclBadVerifyDiscards=vrPpTbclBadVerifyDiscards, vrPpTbpOutFilterDiscards=vrPpTbpOutFilterDiscards, vrPpSrBpSteInFrames=vrPpSrBpSteInFrames, vrPpSrtBpServiceClass=vrPpSrtBpServiceClass, vrPpTbsgBridgePortConfig=vrPpTbsgBridgePortConfig, vrBrPteModeIndex=vrBrPteModeIndex, vrPpTbsgInFilterDiscards=vrPpTbsgInFilterDiscards, vrBrSrbStorageType=vrBrSrbStorageType, vrPpSrtBpNsIndex=vrPpSrtBpNsIndex, vrPpSrclServiceClass=vrPpSrclServiceClass, vrPpSrtBpDIProvEntry=vrPpSrtBpDIProvEntry, vrPpTbclPathCostMethod=vrPpTbclPathCostMethod, vrPpSrsgRowStatus=vrPpSrsgRowStatus, vrPpTbclStorageType=vrPpTbclStorageType, vrPpSrBpHopCountExceededDiscards=vrPpSrBpHopCountExceededDiscards, vrPpFddiETBDynamicEntryDiscards=vrPpFddiETBDynamicEntryDiscards, vrBrTbNcFteRowStatusTable=vrBrTbNcFteRowStatusTable, vrPpSrtBpDupSegmentDiscards=vrPpSrtBpDupSegmentDiscards, vrPpSrtBpDomainNum=vrPpSrtBpDomainNum, vrBrTbSteRowStatusTable=vrBrTbSteRowStatusTable, vrPpTbpTbProvEntry=vrPpTbpTbProvEntry, cB=cB, vrPpTbclRowStatus=vrPpTbclRowStatus, vrPpTbsgDesignatedPort=vrPpTbsgDesignatedPort, vrBrTbStpDesignatedRoot=vrBrTbStpDesignatedRoot, vrPpFddiETBStpOperEntry=vrPpFddiETBStpOperEntry, vrBrStorageType=vrBrStorageType, vrPpSrtBpMtuExceededDiscards=vrPpSrtBpMtuExceededDiscards, vrPpSrtBpUpTime=vrPpSrtBpUpTime, bridgeCapabilitiesBE01A=bridgeCapabilitiesBE01A, vrPpTbpMaxInfo=vrPpTbpMaxInfo, vrPpSrsgLargestFrame=vrPpSrsgLargestFrame, vrPpSrtBpDownTime=vrPpSrtBpDownTime, vrPpFddiETBAdminState=vrPpFddiETBAdminState, vrPpSrtBpDelayExceededDiscards=vrPpSrtBpDelayExceededDiscards, vrPpTbclRowStatusTable=vrPpTbclRowStatusTable, vrPpFddiETBIfIndex=vrPpFddiETBIfIndex, vrPpSrBpApeOutFrames=vrPpSrBpApeOutFrames, vrPpTbpBridgePortType=vrPpTbpBridgePortType, cBAdminControlTable=cBAdminControlTable, vrPpTbclNsRowStatusTable=vrPpTbclNsRowStatusTable, vrPpSrclSnmpOperStatus=vrPpSrclSnmpOperStatus, vrPpSrtBpConvertArpMacAddress=vrPpSrtBpConvertArpMacAddress, vrPpTbpRowStatus=vrPpTbpRowStatus, vrPpTbsgOutFrames=vrPpTbsgOutFrames, vrPpTbclPreserveDomain=vrPpTbclPreserveDomain, vrPpSrtBpSpecOutFrames=vrPpSrtBpSpecOutFrames, vrBrTbNcFteOperEntry=vrBrTbNcFteOperEntry, vrPpSrtBpStpTypeOper=vrPpSrtBpStpTypeOper, vrPpTbseTbOperEntry=vrPpTbseTbOperEntry, vrPpTbseDynamicEntryDiscards=vrPpTbseDynamicEntryDiscards, cBSnmpAdminStatus=cBSnmpAdminStatus, vrPpTbsgUnicastNoMatches=vrPpTbsgUnicastNoMatches, vrBrTbNcFteDomainNumIndex=vrBrTbNcFteDomainNumIndex, pBIfEntryTable=pBIfEntryTable, vrPpSrseOutboundFrameMediaType=vrPpSrseOutboundFrameMediaType, vrPpTbsgDesignatedBridge=vrPpTbsgDesignatedBridge, vrPpSrsgSteInFrames=vrPpSrsgSteInFrames, vrPpSrseDupLanIdOrTreeErrors=vrPpSrseDupLanIdOrTreeErrors, vrPpTbpDynamicEntryDiscards=vrPpTbpDynamicEntryDiscards, vrBrNsFirstFilter=vrBrNsFirstFilter, vrPpFddiETBAdminStatus=vrPpFddiETBAdminStatus, vrPpSrBpAdminState=vrPpSrBpAdminState, vrBrTbRowStatusEntry=vrBrTbRowStatusEntry, vrPpSrtBpHopCount=vrPpSrtBpHopCount, vrPpSrtBpIndex=vrPpSrtBpIndex, vrPpTbseOutFrames=vrPpTbseOutFrames, vrPpSrtBpProvEntry=vrPpSrtBpProvEntry, vrPpSrclPathCostMethod=vrPpSrclPathCostMethod, vrPpFddiETBUnicastNoMatches=vrPpFddiETBUnicastNoMatches, vrPpSrclNsComponentName=vrPpSrclNsComponentName, vrBrTbFteOperTable=vrBrTbFteOperTable, vrPpSrtBpTbProvEntry=vrPpSrtBpTbProvEntry, vrPpSrsgRowStatusTable=vrPpSrsgRowStatusTable, vrBrTbNcFteRowStatusEntry=vrBrTbNcFteRowStatusEntry, cBRowStatusTable=cBRowStatusTable, vrPpSrsgForwardTransitions=vrPpSrsgForwardTransitions, vrPpSrBpNs=vrPpSrBpNs, vrPpFddiETBBadVerifyDiscards=vrPpFddiETBBadVerifyDiscards, vrPpSrtBpStpPortState=vrPpSrtBpStpPortState, vrPpTbpStpTypeOper=vrPpTbpStpTypeOper, vrBrSrbStpBridgeMaxAge=vrBrSrbStpBridgeMaxAge, vrBrTbNcFtePeerAddressInfo=vrBrTbNcFtePeerAddressInfo, vrPpSrBpProvTable=vrPpSrBpProvTable, vrPpSrtBpSteOutFrames=vrPpSrtBpSteOutFrames, vrPpFddiETBPortPriority=vrPpFddiETBPortPriority, vrPpTbpNsProvEntry=vrPpTbpNsProvEntry, vrPpSrseStpTypeOper=vrPpSrseStpTypeOper)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BridgeMIB", vrPpSrBpPreserveDomain=vrPpSrBpPreserveDomain, vrPpSrsgSteRdLimit=vrPpSrsgSteRdLimit, vrPpSrseIfIndex=vrPpSrseIfIndex, vrPpTbsgStateTable=vrPpTbsgStateTable, vrBrTbStpProtocolSpec=vrBrTbStpProtocolSpec, vrPpSrBpOperTable=vrPpSrBpOperTable, vrPpFddiETBSecureOption=vrPpFddiETBSecureOption, vrPpSrBpIndex=vrPpSrBpIndex, vrBrTbSteAddressIndex=vrBrTbSteAddressIndex, vrPpTbclDelayExceededDiscards=vrPpTbclDelayExceededDiscards, vrPpTbclStpTypeOper=vrPpTbclStpTypeOper, vrPpFddiETBNsProvEntry=vrPpFddiETBNsProvEntry, vrPpSrclMtuExceededDiscards=vrPpSrclMtuExceededDiscards, vrPpTbpOperTable=vrPpTbpOperTable, vrPpFddiETBStpProvEntry=vrPpFddiETBStpProvEntry, vrPpSrsgStpProvTable=vrPpSrsgStpProvTable, vrPpTbpDesignatedBridge=vrPpTbpDesignatedBridge, vrPpSrBpBadAbstractDiscards=vrPpSrBpBadAbstractDiscards, vrPpTbclSnmpOperStatus=vrPpTbclSnmpOperStatus, bridgeGroup=bridgeGroup, vrBrTbFteAddressIndex=vrBrTbFteAddressIndex, vrPpSrseProvTable=vrPpSrseProvTable, vrPpSrsgRowStatusEntry=vrPpSrsgRowStatusEntry, vrPpSrtBpLanIdMismatches=vrPpSrtBpLanIdMismatches, vrBrSrbProvEntry=vrBrSrbProvEntry, vrPpTbclDIProvTable=vrPpTbclDIProvTable, vrPpSrsgUsageState=vrPpSrsgUsageState, vrPpSrclOperStatusEntry=vrPpSrclOperStatusEntry, vrBrTbStpBridgeMaxAge=vrBrTbStpBridgeMaxAge, vrPpFddiETBTbProvEntry=vrPpFddiETBTbProvEntry, vrPpTbpTbOperTable=vrPpTbpTbOperTable, vrPpFddiETBMtuExceededDiscards=vrPpFddiETBMtuExceededDiscards, vrPpTbpStatsEntry=vrPpTbpStatsEntry, vrPpFddiETBStateEntry=vrPpFddiETBStateEntry, vrPpFddiETBSnmpOperStatus=vrPpFddiETBSnmpOperStatus, vrPpSrseBridgingMode=vrPpSrseBridgingMode, vrPpTbclNsProvTable=vrPpTbclNsProvTable, vrPpFddiETBInFrames=vrPpFddiETBInFrames, vrPpSrsgPreserveDomain=vrPpSrsgPreserveDomain, vrPpFddiETBServiceClass=vrPpFddiETBServiceClass, vrPpTbclOperEntry=vrPpTbclOperEntry, vrBrTbSteAtgtRowStatus=vrBrTbSteAtgtRowStatus, vrPpSrseLargestFrame=vrPpSrseLargestFrame, vrPpSrclApeOutFrames=vrPpSrclApeOutFrames, vrPpSrsgPathCostOper=vrPpSrsgPathCostOper, vrBrTbSteAtgtTable=vrBrTbSteAtgtTable, vrPpSrtBpAdminState=vrPpSrtBpAdminState, vrPpTbpInFilterDiscards=vrPpTbpInFilterDiscards, vrPpTbclOutFrames=vrPpTbclOutFrames, vrPpTbseBridgePortType=vrPpTbseBridgePortType, vrPpFddiETBNs=vrPpFddiETBNs, vrPpFddiETBStpProvTable=vrPpFddiETBStpProvTable, vrPpTbseDesignatedBridge=vrPpTbseDesignatedBridge, vrBrPteComponentName=vrBrPteComponentName, vrBrSrbStpRowStatusTable=vrBrSrbStpRowStatusTable, vrPpFddiETBOutboundFrameMediaType=vrPpFddiETBOutboundFrameMediaType, vrBrTbStpOperTable=vrBrTbStpOperTable, vrPpSrseDIProvEntry=vrPpSrseDIProvEntry, vrPpTbsgPathCost=vrPpTbsgPathCost, vrBrTbStpAgingTimeOper=vrBrTbStpAgingTimeOper, vrPpSrsgDynamicDiscards=vrPpSrsgDynamicDiscards, vrPpSrclPreserveDomain=vrPpSrclPreserveDomain, pBMacAddress=pBMacAddress, vrBrAdminControlTable=vrBrAdminControlTable, vrPpTbsgPortStateStpControl=vrPpTbsgPortStateStpControl, vrPpSrBpStpTypeOper=vrPpSrBpStpTypeOper, vrPpSrBpServiceClass=vrPpSrBpServiceClass, vrPpTbseTbProvTable=vrPpTbseTbProvTable, vrPpTbclInDiscards=vrPpTbclInDiscards, vrBrSrbLteTypeOfEntry=vrBrSrbLteTypeOfEntry, vrPpSrtBpNs=vrPpSrtBpNs, vrPpSrsgAdminState=vrPpSrsgAdminState, vrBrSrbLteOperEntry=vrBrSrbLteOperEntry, vrPpTbpStpTypeProv=vrPpTbpStpTypeProv, vrPpFddiETBUsageState=vrPpFddiETBUsageState, vrPpTbclPortStateStpControl=vrPpTbclPortStateStpControl, vrPpTbseIfIndex=vrPpTbseIfIndex, vrBrTbNcFteStatus=vrBrTbNcFteStatus, vrPpSrclNsOutgoingFilter=vrPpSrclNsOutgoingFilter, vrBrSrbLtePortName=vrBrSrbLtePortName, bridgeCapabilitiesBE=bridgeCapabilitiesBE, vrPpSrBpUsageState=vrPpSrBpUsageState, vrPpSrclBridgeNum=vrPpSrclBridgeNum, vrPpSrsgHopCountExceededDiscards=vrPpSrsgHopCountExceededDiscards, vrPpTbclUsageState=vrPpTbclUsageState, vrPpSrsgAreRdLimit=vrPpSrsgAreRdLimit, vrPpSrclSrProvEntry=vrPpSrclSrProvEntry, vrBrSrbLteLanIdIndex=vrBrSrbLteLanIdIndex, vrPpTbclNsIncomingFilter=vrPpTbclNsIncomingFilter, vrPpSrBpDupSegmentDiscards=vrPpSrBpDupSegmentDiscards, vrPpFddiETBForwardTransitions=vrPpFddiETBForwardTransitions, vrPpTbpIndex=vrPpTbpIndex, vrPpTbclPathCost=vrPpTbclPathCost, pBOperationalState=pBOperationalState, vrBrSrbStpHoldTime=vrBrSrbStpHoldTime, vrPpTbclStpPortState=vrPpTbclStpPortState, vrPpSrclBlockingDiscards=vrPpSrclBlockingDiscards, vrPpTbclTranslateIpx=vrPpTbclTranslateIpx, vrPpSrsgSteOutFrames=vrPpSrsgSteOutFrames, vrBrStateEntry=vrBrStateEntry, vrPpFddiETBProvEntry=vrPpFddiETBProvEntry, vrPpTbseStateEntry=vrPpTbseStateEntry, vrPpTbpStaticEntryDiscards=vrPpTbpStaticEntryDiscards, vrPpTbpTbOperEntry=vrPpTbpTbOperEntry, vrPpFddiETBStaticEntryDiscards=vrPpFddiETBStaticEntryDiscards, vrPpTbseAdminState=vrPpTbseAdminState, vrPpSrseFragmentIp=vrPpSrseFragmentIp, vrPpTbseDesignatedCost=vrPpTbseDesignatedCost, vrPpTbclServiceClass=vrPpTbclServiceClass, vrPpSrBpStpOperEntry=vrPpSrBpStpOperEntry, vrPpTbseSnmpOperStatus=vrPpTbseSnmpOperStatus, vrPpSrBpBridgeNum=vrPpSrBpBridgeNum, vrPpSrtBpUnicastNoMatches=vrPpSrtBpUnicastNoMatches, vrPpTbsgTinygramFramesIn=vrPpTbsgTinygramFramesIn, vrPpSrseStatsTable=vrPpSrseStatsTable, vrPpFddiETBBlockingDiscards=vrPpFddiETBBlockingDiscards, vrPpSrseLanIdMismatches=vrPpSrseLanIdMismatches, vrPpSrclOperStatusTable=vrPpSrclOperStatusTable, vrBrTbStpTopologyChanges=vrBrTbStpTopologyChanges, vrPpSrsgApeOutFrames=vrPpSrsgApeOutFrames, vrPpSrclSpecInFrames=vrPpSrclSpecInFrames, vrPpTbsePortStateStpControl=vrPpTbsePortStateStpControl, vrPpTbsgDownTime=vrPpTbsgDownTime, vrPpSrclStpPortState=vrPpSrclStpPortState, vrPpTbpPreserveDomain=vrPpTbpPreserveDomain, vrPpSrBpLanIdMismatches=vrPpSrBpLanIdMismatches, vrPpSrtBpNsRowStatusEntry=vrPpSrtBpNsRowStatusEntry, vrPpSrclHopCount=vrPpSrclHopCount, vrPpSrBp=vrPpSrBp, vrPpTbclDesignatedBridge=vrPpTbclDesignatedBridge, vrPpTbpStateTable=vrPpTbpStateTable, vrBrTbStpBridgeForwardDelay=vrBrTbStpBridgeForwardDelay, vrPpSrtBpNsRowStatusTable=vrPpSrtBpNsRowStatusTable, vrPpSrseAdminStatus=vrPpSrseAdminStatus, vrPpSrsgProvTable=vrPpSrsgProvTable, vrPpSrsgFragmentIp=vrPpSrsgFragmentIp, vrPpTbclOperationalState=vrPpTbclOperationalState, vrPpSrBpStpOperTable=vrPpSrBpStpOperTable, vrPpTbpDesignatedCost=vrPpTbpDesignatedCost, vrPpTbpNsRowStatusTable=vrPpTbpNsRowStatusTable, cBOperStatusTable=cBOperStatusTable, vrPpTbseRowStatusTable=vrPpTbseRowStatusTable, vrBrTbStpIndex=vrBrTbStpIndex, vrBrPteRowStatus=vrBrPteRowStatus, vrPpFddiETBPortName=vrPpFddiETBPortName, vrBrPteInternalLanId=vrBrPteInternalLanId, vrBrTbStpRootPortName=vrBrTbStpRootPortName, vrPpSrBpSteRdLimit=vrPpSrBpSteRdLimit, vrPpSrseTinygramFramesIn=vrPpSrseTinygramFramesIn, vrPpTbsePathCostOper=vrPpTbsePathCostOper, vrBrTbFteRowStatus=vrBrTbFteRowStatus, pBStateEntry=pBStateEntry, vrPpSrseInternalLanId=vrPpSrseInternalLanId, vrPpSrtBpInternalLanId=vrPpSrtBpInternalLanId, vrPpSrclNsStorageType=vrPpSrclNsStorageType, vrPpTbsgStorageType=vrPpTbsgStorageType, vrBrSrbLteRowStatusTable=vrBrSrbLteRowStatusTable, vrPpSrclComponentName=vrPpSrclComponentName, vrPpFddiETBBadAbstractDiscards=vrPpFddiETBBadAbstractDiscards, vrPpTbpTinygramFramesOut=vrPpTbpTinygramFramesOut, vrPpSrBpSrProvTable=vrPpSrBpSrProvTable, vrPpTbseUsageState=vrPpTbseUsageState, vrPpFddiETBDesignatedPort=vrPpFddiETBDesignatedPort, vrBrPteSpOperEntry=vrBrPteSpOperEntry, vrPpSrtBpSecureOption=vrPpSrtBpSecureOption, vrPpTbseBadAbstractDiscards=vrPpTbseBadAbstractDiscards, vrPpSrseRowStatus=vrPpSrseRowStatus, vrPpTbpOutFrames=vrPpTbpOutFrames, vrBrRowStatusTable=vrBrRowStatusTable, vrBrTbSteStatus=vrBrTbSteStatus, vrPpTbpProvEntry=vrPpTbpProvEntry, vrPpSrsgStpProvEntry=vrPpSrsgStpProvEntry, vrPpSrtBpUsageState=vrPpSrtBpUsageState, vrBrTbFteStorageType=vrBrTbFteStorageType, vrPpSrseRowStatusEntry=vrPpSrseRowStatusEntry, vrPpTbseOutboundFrameMediaType=vrPpTbseOutboundFrameMediaType, vrPpFddiETBDownTime=vrPpFddiETBDownTime, vrPpTbclPathCostOper=vrPpTbclPathCostOper, pBSnmpOperStatus=pBSnmpOperStatus, vrPpSrBpSpecOutFrames=vrPpSrBpSpecOutFrames, vrPpSrse=vrPpSrse, vrPpTbseProvEntry=vrPpTbseProvEntry, vrPpSrclNsProvEntry=vrPpSrclNsProvEntry, vrPpTbseInFrames=vrPpTbseInFrames, vrPpSrBpNsProvTable=vrPpSrBpNsProvTable, vrPpFddiETBComponentName=vrPpFddiETBComponentName, vrPpSrsgInternalLanId=vrPpSrsgInternalLanId, vrPpSrBpPathCost=vrPpSrBpPathCost, vrBrTbAgingTime=vrBrTbAgingTime)
