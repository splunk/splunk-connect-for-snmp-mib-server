#
# PySNMP MIB module H3C-LPBKDT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-LPBKDT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:09:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, iso, Bits, Counter64, Counter32, ModuleIdentity, NotificationType, Integer32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "iso", "Bits", "Counter64", "Counter32", "ModuleIdentity", "NotificationType", "Integer32", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cLpbkdt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95))
h3cLpbkdt.setRevisions(('2009-03-30 17:41', '2008-09-27 15:04',))
if mibBuilder.loadTexts: h3cLpbkdt.setLastUpdated('200903301741Z')
if mibBuilder.loadTexts: h3cLpbkdt.setOrganization('H3C Technologies Co., Ltd.')
h3cLpbkdtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 1))
h3cLpbkdtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 2))
h3cLpbkdtTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 1, 0))
h3cLpbkdtTrapLoopbacked = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 1, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: h3cLpbkdtTrapLoopbacked.setStatus('current')
h3cLpbkdtTrapRecovered = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 1, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: h3cLpbkdtTrapRecovered.setStatus('current')
h3cLpbkdtTrapPerVlanLoopbacked = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 1, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("H3C-LPBKDT-MIB", "h3cLpbkdtVlanID"))
if mibBuilder.loadTexts: h3cLpbkdtTrapPerVlanLoopbacked.setStatus('current')
h3cLpbkdtTrapPerVlanRecovered = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 1, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("H3C-LPBKDT-MIB", "h3cLpbkdtVlanID"))
if mibBuilder.loadTexts: h3cLpbkdtTrapPerVlanRecovered.setStatus('current')
h3cLpbkdtVlanID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 95, 2, 1), VlanId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cLpbkdtVlanID.setStatus('current')
mibBuilder.exportSymbols("H3C-LPBKDT-MIB", h3cLpbkdt=h3cLpbkdt, h3cLpbkdtTrapLoopbacked=h3cLpbkdtTrapLoopbacked, h3cLpbkdtTrapRecovered=h3cLpbkdtTrapRecovered, h3cLpbkdtVlanID=h3cLpbkdtVlanID, h3cLpbkdtTrapPerVlanLoopbacked=h3cLpbkdtTrapPerVlanLoopbacked, h3cLpbkdtNotifications=h3cLpbkdtNotifications, h3cLpbkdtTrapPerVlanRecovered=h3cLpbkdtTrapPerVlanRecovered, h3cLpbkdtTrapPrefix=h3cLpbkdtTrapPrefix, PYSNMP_MODULE_ID=h3cLpbkdt, h3cLpbkdtObjects=h3cLpbkdtObjects)
