#
# PySNMP MIB module TPLINK-DLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-DLDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:17:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, ObjectIdentity, Counter32, NotificationType, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, TimeTicks, ModuleIdentity, Counter64, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "Counter32", "NotificationType", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "TimeTicks", "ModuleIdentity", "Counter64", "iso", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkDldpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 58))
tplinkDldpMIB.setRevisions(('2013-07-03 00:00',))
if mibBuilder.loadTexts: tplinkDldpMIB.setLastUpdated('201307030000Z')
if mibBuilder.loadTexts: tplinkDldpMIB.setOrganization('TP-LINK')
tplinkDldpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1))
tplinkDldpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 58, 2))
tpDldpEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpDldpEnable.setStatus('current')
tpDldpInterval = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpDldpInterval.setStatus('current')
tpDldpShutmode = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("manual", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpDldpShutmode.setStatus('current')
tpDldpCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 4), )
if mibBuilder.loadTexts: tpDldpCtrlTable.setStatus('current')
tpDldpCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 4, 1), ).setIndexNames((0, "TPLINK-DLDP-MIB", "tpDldpPortId"))
if mibBuilder.loadTexts: tpDldpCtrlEntry.setStatus('current')
tpDldpPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpDldpPortId.setStatus('current')
tpDldpState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpDldpState.setStatus('current')
tpDldpProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("initial", 0), ("inactive", 1), ("active", 2), ("probe", 3), ("adver", 4), ("disable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpDldpProtocolState.setStatus('current')
tpDldpLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpDldpLinkState.setStatus('current')
tpDldpNeighborState = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 58, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("unidirectional", 1), ("bidirectional", 2), ("aging", 3), ("notAccess", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpDldpNeighborState.setStatus('current')
mibBuilder.exportSymbols("TPLINK-DLDP-MIB", tplinkDldpNotifications=tplinkDldpNotifications, tpDldpShutmode=tpDldpShutmode, PYSNMP_MODULE_ID=tplinkDldpMIB, tplinkDldpMIB=tplinkDldpMIB, tpDldpEnable=tpDldpEnable, tpDldpInterval=tpDldpInterval, tpDldpCtrlTable=tpDldpCtrlTable, tpDldpPortId=tpDldpPortId, tplinkDldpMIBObjects=tplinkDldpMIBObjects, tpDldpProtocolState=tpDldpProtocolState, tpDldpLinkState=tpDldpLinkState, tpDldpNeighborState=tpDldpNeighborState, tpDldpCtrlEntry=tpDldpCtrlEntry, tpDldpState=tpDldpState)
