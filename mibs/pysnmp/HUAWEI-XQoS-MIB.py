#
# PySNMP MIB module HUAWEI-XQoS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-XQoS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:38:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, ModuleIdentity, Integer32, MibIdentifier, Unsigned32, Counter32, ObjectIdentity, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "ModuleIdentity", "Integer32", "MibIdentifier", "Unsigned32", "Counter32", "ObjectIdentity", "iso", "IpAddress")
TextualConvention, RowStatus, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "MacAddress", "DisplayString")
class BaType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("vlan8021p", 1), ("dscp", 2), ("mplsExp", 3), ("ipPri", 4), ("hqosVlan8021p", 5), ("hqosDscp", 6), ("hqosMplsExp", 7), ("hqosIpPri", 8), ("vlan8021pInbound", 9))

hwXQoSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4))
if mibBuilder.loadTexts: hwXQoSMIB.setLastUpdated('200409150000Z')
if mibBuilder.loadTexts: hwXQoSMIB.setOrganization('Huawei Technologies co.,Ltd.')
class XQosQueueType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6))

class ResetFlag(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("disable", 0), ("reset", 1), ("enable", 2))

class CosType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))
    namedValues = NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("all", 9), ("queue10", 10), ("queue11", 11), ("queue12", 12), ("queue13", 13), ("queue14", 14), ("queue15", 15), ("queue16", 16), ("queue17", 17), ("queue18", 18), ("queue19", 19), ("queue20", 20), ("queue21", 21), ("queue22", 22), ("queue23", 23), ("queue24", 24))

class CarAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("pass", 1), ("discard", 2), ("remarkIpPrec", 3), ("remarkDscp", 4), ("remarkMplsExp", 5), ("remark", 6), ("remark8021p", 7))

class DirectionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class UrpfCtrlType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("strict", 1), ("loose", 2))

class SampleType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("fix-packets", 1), ("fix-time", 2), ("random-packets", 3), ("random-time", 4))

class IPCARRuleType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ipv4Acl", 1), ("ipv4SrcIp", 2), ("ipv4DstIp", 3))

hwQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32))
hwXQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1))
hwXQoSConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2))
hwXQoSBaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1))
hwXQoSBaCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 1), )
if mibBuilder.loadTexts: hwXQoSBaCfgInfoTable.setStatus('current')
hwXQoSBaCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"))
if mibBuilder.loadTexts: hwXQoSBaCfgInfoEntry.setStatus('current')
hwXQoSBaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaIndex.setStatus('current')
hwXQoSBaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaName.setStatus('current')
hwXQoSBaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaRowStatus.setStatus('current')
hwXQoSBa8021pPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 2), )
if mibBuilder.loadTexts: hwXQoSBa8021pPhbCfgInfoTable.setStatus('current')
hwXQoSBa8021pPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 2, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBa8021pPhbIndex"))
if mibBuilder.loadTexts: hwXQoSBa8021pPhbCfgInfoEntry.setStatus('current')
hwXQoSBa8021pPhbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBa8021pPhbIndex.setStatus('current')
hwXQoSBa8021pPhbPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBa8021pPhbPri.setStatus('current')
hwXQoSBa8021pPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBa8021pPhbCos.setStatus('current')
hwXQoSBa8021pPhbColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBa8021pPhbColour.setStatus('current')
hwXQoSBa8021pPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBa8021pPhbRowStatus.setStatus('current')
hwXQoSBa8021pMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 3), )
if mibBuilder.loadTexts: hwXQoSBa8021pMapCfgInfoTable.setStatus('current')
hwXQoSBa8021pMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 3, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBa8021pMapIndex"))
if mibBuilder.loadTexts: hwXQoSBa8021pMapCfgInfoEntry.setStatus('current')
hwXQoSBa8021pMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBa8021pMapIndex.setStatus('current')
hwXQoSBa8021pMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBa8021pMapCos.setStatus('current')
hwXQoSBa8021pMapColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBa8021pMapColour.setStatus('current')
hwXQoSBa8021pMapPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBa8021pMapPri.setStatus('current')
hwXQoSBa8021pMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBa8021pMapRowStatus.setStatus('current')
hwXQoSBaDscpPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 4), )
if mibBuilder.loadTexts: hwXQoSBaDscpPhbCfgInfoTable.setStatus('current')
hwXQoSBaDscpPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 4, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaDscpPhbIndex"))
if mibBuilder.loadTexts: hwXQoSBaDscpPhbCfgInfoEntry.setStatus('current')
hwXQoSBaDscpPhbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaDscpPhbIndex.setStatus('current')
hwXQoSBaDscpPhbPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaDscpPhbPri.setStatus('current')
hwXQoSBaDscpPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaDscpPhbCos.setStatus('current')
hwXQoSBaDscpPhbColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaDscpPhbColour.setStatus('current')
hwXQoSBaDscpPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaDscpPhbRowStatus.setStatus('current')
hwXQoSBaDscpMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 5), )
if mibBuilder.loadTexts: hwXQoSBaDscpMapCfgInfoTable.setStatus('current')
hwXQoSBaDscpMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 5, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaDscpMapIndex"))
if mibBuilder.loadTexts: hwXQoSBaDscpMapCfgInfoEntry.setStatus('current')
hwXQoSBaDscpMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaDscpMapIndex.setStatus('current')
hwXQoSBaDscpMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaDscpMapCos.setStatus('current')
hwXQoSBaDscpMapColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaDscpMapColour.setStatus('current')
hwXQoSBaDscpMapPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaDscpMapPri.setStatus('current')
hwXQoSBaDscpMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaDscpMapRowStatus.setStatus('current')
hwXQoSBaExpPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 6), )
if mibBuilder.loadTexts: hwXQoSBaExpPhbCfgInfoTable.setStatus('current')
hwXQoSBaExpPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 6, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaExpPhbIndex"))
if mibBuilder.loadTexts: hwXQoSBaExpPhbCfgInfoEntry.setStatus('current')
hwXQoSBaExpPhbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaExpPhbIndex.setStatus('current')
hwXQoSBaExpPhbPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaExpPhbPri.setStatus('current')
hwXQoSBaExpPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaExpPhbCos.setStatus('current')
hwXQoSBaExpPhbColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaExpPhbColour.setStatus('current')
hwXQoSBaExpPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaExpPhbRowStatus.setStatus('current')
hwXQoSBaExpMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 7), )
if mibBuilder.loadTexts: hwXQoSBaExpMapCfgInfoTable.setStatus('current')
hwXQoSBaExpMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaExpMapIndex"))
if mibBuilder.loadTexts: hwXQoSBaExpMapCfgInfoEntry.setStatus('current')
hwXQoSBaExpMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaExpMapIndex.setStatus('current')
hwXQoSBaExpMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaExpMapCos.setStatus('current')
hwXQoSBaExpMapColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaExpMapColour.setStatus('current')
hwXQoSBaExpMapPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 7, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaExpMapPri.setStatus('current')
hwXQoSBaExpMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaExpMapRowStatus.setStatus('current')
hwXQoSIfDiffDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 8), )
if mibBuilder.loadTexts: hwXQoSIfDiffDomainTable.setStatus('current')
hwXQoSIfDiffDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 8, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainVlanId"))
if mibBuilder.loadTexts: hwXQoSIfDiffDomainEntry.setStatus('current')
hwXQoSIfDiffDomainIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfDiffDomainIfIndex.setStatus('current')
hwXQoSIfDiffDomainVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfDiffDomainVlanId.setStatus('current')
hwXQoSIfDiffDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfDiffDomainName.setStatus('current')
hwXQoSIfDiffDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfDiffDomainRowStatus.setStatus('current')
hwXQoSIfDiffDomainVlanId2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfDiffDomainVlanId2.setStatus('current')
hwXQoSIfTrust8021pTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 9), )
if mibBuilder.loadTexts: hwXQoSIfTrust8021pTable.setStatus('current')
hwXQoSIfTrust8021pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 9, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfTrust8021pIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfTrust8021pVlanID"))
if mibBuilder.loadTexts: hwXQoSIfTrust8021pEntry.setStatus('current')
hwXQoSIfTrust8021pIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfTrust8021pIfIndex.setStatus('current')
hwXQoSIfTrust8021pVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfTrust8021pVlanID.setStatus('current')
hwXQoSIfTrust8021pAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("distrust", 1), ("trust", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfTrust8021pAction.setStatus('current')
hwXQoSIfTrust8021pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfTrust8021pRowStatus.setStatus('current')
hwXQoSBaAtmQosPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 10), )
if mibBuilder.loadTexts: hwXQoSBaAtmQosPhbCfgInfoTable.setStatus('current')
hwXQoSBaAtmQosPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 10, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaAtmQosPhbServType"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaAtmQosPhbClp"))
if mibBuilder.loadTexts: hwXQoSBaAtmQosPhbCfgInfoEntry.setStatus('current')
hwXQoSBaAtmQosPhbServType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaAtmQosPhbServType.setStatus('current')
hwXQoSBaAtmQosPhbClp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaAtmQosPhbClp.setStatus('current')
hwXQoSBaAtmQosPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 10, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaAtmQosPhbCos.setStatus('current')
hwXQoSBaAtmQosPhbColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 10, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaAtmQosPhbColour.setStatus('current')
hwXQoSBaAtmQosPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaAtmQosPhbRowStatus.setStatus('current')
hwXQoSBaAtmQosMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 11), )
if mibBuilder.loadTexts: hwXQoSBaAtmQosMapCfgInfoTable.setStatus('current')
hwXQoSBaAtmQosMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 11, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaAtmQosMapIndex"))
if mibBuilder.loadTexts: hwXQoSBaAtmQosMapCfgInfoEntry.setStatus('current')
hwXQoSBaAtmQosMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaAtmQosMapIndex.setStatus('current')
hwXQoSBaAtmQosMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaAtmQosMapCos.setStatus('current')
hwXQoSBaAtmQosMapColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSBaAtmQosMapColour.setStatus('current')
hwXQoSBaAtmQosMapClp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 11, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSBaAtmQosMapClp.setStatus('current')
hwXQoSBaAtmQosMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 11, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaAtmQosMapRowStatus.setStatus('current')
hwXQoSAtmPvcDiffDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 12), )
if mibBuilder.loadTexts: hwXQoSAtmPvcDiffDomainTable.setStatus('current')
hwXQoSAtmPvcDiffDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 12, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvcDiffDomainIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvcVpi"), (0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvcVci"))
if mibBuilder.loadTexts: hwXQoSAtmPvcDiffDomainEntry.setStatus('current')
hwXQoSAtmPvcDiffDomainIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSAtmPvcDiffDomainIfIndex.setStatus('current')
hwXQoSAtmPvcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSAtmPvcVpi.setStatus('current')
hwXQoSAtmPvcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSAtmPvcVci.setStatus('current')
hwXQoSAtmPvcDiffDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 12, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcDiffDomainName.setStatus('current')
hwXQoSAtmPvcDiffDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 12, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcDiffDomainRowStatus.setStatus('current')
hwXQoSAtmPvpDiffDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 13), )
if mibBuilder.loadTexts: hwXQoSAtmPvpDiffDomainTable.setStatus('current')
hwXQoSAtmPvpDiffDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 13, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvpDiffDomainIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvpVpi"))
if mibBuilder.loadTexts: hwXQoSAtmPvpDiffDomainEntry.setStatus('current')
hwXQoSAtmPvpDiffDomainIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSAtmPvpDiffDomainIfIndex.setStatus('current')
hwXQoSAtmPvpVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSAtmPvpVpi.setStatus('current')
hwXQoSAtmPvpDiffDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 13, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvpDiffDomainName.setStatus('current')
hwXQoSAtmPvpDiffDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 13, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvpDiffDomainRowStatus.setStatus('current')
hwXQoSBaPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 14), )
if mibBuilder.loadTexts: hwXQoSBaPhbCfgInfoTable.setStatus('current')
hwXQoSBaPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 14, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaPhbType"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaPhbPri"))
if mibBuilder.loadTexts: hwXQoSBaPhbCfgInfoEntry.setStatus('current')
hwXQoSBaPhbType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 14, 1, 1), BaType())
if mibBuilder.loadTexts: hwXQoSBaPhbType.setStatus('current')
hwXQoSBaPhbPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 14, 1, 2), Integer32())
if mibBuilder.loadTexts: hwXQoSBaPhbPri.setStatus('current')
hwXQoSBaPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 14, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaPhbCos.setStatus('current')
hwXQoSBaPhbColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaPhbColour.setStatus('current')
hwXQoSBaPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 14, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaPhbRowStatus.setStatus('current')
hwXQoSBaMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 15), )
if mibBuilder.loadTexts: hwXQoSBaMapCfgInfoTable.setStatus('current')
hwXQoSBaMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 15, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaMapType"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaMapCos"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaMapColour"))
if mibBuilder.loadTexts: hwXQoSBaMapCfgInfoEntry.setStatus('current')
hwXQoSBaMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 15, 1, 1), BaType())
if mibBuilder.loadTexts: hwXQoSBaMapType.setStatus('current')
hwXQoSBaMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 15, 1, 2), Integer32())
if mibBuilder.loadTexts: hwXQoSBaMapCos.setStatus('current')
hwXQoSBaMapColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3))))
if mibBuilder.loadTexts: hwXQoSBaMapColour.setStatus('current')
hwXQoSBaMapPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 15, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaMapPri.setStatus('current')
hwXQoSBaMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 15, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSBaMapRowStatus.setStatus('current')
hwXQoSIfTrustTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16), )
if mibBuilder.loadTexts: hwXQoSIfTrustTable.setStatus('current')
hwXQoSIfTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfTrustIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfTrustVlanID1"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfTrustVlanID2"), (0, "HUAWEI-XQoS-MIB", "hwXQoSBaType"))
if mibBuilder.loadTexts: hwXQoSIfTrustEntry.setStatus('current')
hwXQoSIfTrustIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSIfTrustIfIndex.setStatus('current')
hwXQoSIfTrustVlanID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), )))
if mibBuilder.loadTexts: hwXQoSIfTrustVlanID1.setStatus('current')
hwXQoSIfTrustVlanID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), )))
if mibBuilder.loadTexts: hwXQoSIfTrustVlanID2.setStatus('current')
hwXQoSBaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16, 1, 4), BaType())
if mibBuilder.loadTexts: hwXQoSBaType.setStatus('current')
hwXQoSIfTrustAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("distrust", 1), ("trust", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfTrustAction.setStatus('current')
hwXQoSIfTrustRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 16, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfTrustRowStatus.setStatus('current')
hwXQoSDeiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 17), )
if mibBuilder.loadTexts: hwXQoSDeiTable.setStatus('current')
hwXQoSDeiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 17, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSDeiIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSDeiVlanID1"), (0, "HUAWEI-XQoS-MIB", "hwXQoSDeiVlanID2"))
if mibBuilder.loadTexts: hwXQoSDeiEntry.setStatus('current')
hwXQoSDeiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 17, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSDeiIfIndex.setStatus('current')
hwXQoSDeiVlanID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), )))
if mibBuilder.loadTexts: hwXQoSDeiVlanID1.setStatus('current')
hwXQoSDeiVlanID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), )))
if mibBuilder.loadTexts: hwXQoSDeiVlanID2.setStatus('current')
hwXQoSIfEnableDeiAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("unenabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfEnableDeiAction.setStatus('current')
hwXQoSDeiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 17, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSDeiRowStatus.setStatus('current')
hwXQoSRemarkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 18), )
if mibBuilder.loadTexts: hwXQoSRemarkTable.setStatus('current')
hwXQoSRemarkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 18, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSRemarkIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSRemarkVlanID1"), (0, "HUAWEI-XQoS-MIB", "hwXQoSRemarkVlanID2"))
if mibBuilder.loadTexts: hwXQoSRemarkEntry.setStatus('current')
hwXQoSRemarkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 18, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSRemarkIfIndex.setStatus('current')
hwXQoSRemarkVlanID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), )))
if mibBuilder.loadTexts: hwXQoSRemarkVlanID1.setStatus('current')
hwXQoSRemarkVlanID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), )))
if mibBuilder.loadTexts: hwXQoSRemarkVlanID2.setStatus('current')
hwXQoSIfEnableRemarkAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("unenabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfEnableRemarkAction.setStatus('current')
hwXQoSRemarkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 18, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSRemarkRowStatus.setStatus('current')
hwXQoSPhbEnableTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 19), )
if mibBuilder.loadTexts: hwXQoSPhbEnableTable.setStatus('current')
hwXQoSPhbEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 19, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSPhbEnableIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSPhbEnableVlanID1"), (0, "HUAWEI-XQoS-MIB", "hwXQoSPhbEnableVlanID2"))
if mibBuilder.loadTexts: hwXQoSPhbEnableEntry.setStatus('current')
hwXQoSPhbEnableIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 19, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSPhbEnableIfIndex.setStatus('current')
hwXQoSPhbEnableVlanID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), )))
if mibBuilder.loadTexts: hwXQoSPhbEnableVlanID1.setStatus('current')
hwXQoSPhbEnableVlanID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), )))
if mibBuilder.loadTexts: hwXQoSPhbEnableVlanID2.setStatus('current')
hwXQoSPhbEnableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 19, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPhbEnableRowStatus.setStatus('current')
hwXQoSCommonInboundTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 20), )
if mibBuilder.loadTexts: hwXQoSCommonInboundTable.setStatus('current')
hwXQoSCommonInboundEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 20, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCommonInboundPhbIndex"))
if mibBuilder.loadTexts: hwXQoSCommonInboundEntry.setStatus('current')
hwXQoSCommonInboundPhbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCommonInboundPhbIndex.setStatus('current')
hwXQoSCommonInboundPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCommonInboundPhbCos.setStatus('current')
hwXQoSCommonInboundPhbColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 20, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCommonInboundPhbColor.setStatus('current')
hwXQoSCommonInboundPhbPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCommonInboundPhbPri.setStatus('current')
hwXQoSCommonInboundRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 20, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCommonInboundRowStatus.setStatus('current')
hwXQoSPppInboundTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 21), )
if mibBuilder.loadTexts: hwXQoSPppInboundTable.setStatus('current')
hwXQoSPppInboundEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 21, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSBaIndex"))
if mibBuilder.loadTexts: hwXQoSPppInboundEntry.setStatus('current')
hwXQoSPppInboundCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPppInboundCos.setStatus('current')
hwXQoSPppInboundColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPppInboundColor.setStatus('current')
hwXQoSPppInboundRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 21, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPppInboundRowStatus.setStatus('current')
hwXQoSServiceclassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 22), )
if mibBuilder.loadTexts: hwXQoSServiceclassTable.setStatus('current')
hwXQoSServiceclassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 22, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSServiceclassPort"))
if mibBuilder.loadTexts: hwXQoSServiceclassEntry.setStatus('current')
hwXQoSServiceclassPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 22, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSServiceclassPort.setStatus('current')
hwXQoSServiceclass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSServiceclass.setStatus('current')
hwXQoSServiceclassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 22, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSServiceclassRowStatus.setStatus('current')
hwXQoSPhbTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 23), )
if mibBuilder.loadTexts: hwXQoSPhbTable.setStatus('current')
hwXQoSPhbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 23, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSPhbPort"))
if mibBuilder.loadTexts: hwXQoSPhbEntry.setStatus('current')
hwXQoSPhbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 23, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPhbPort.setStatus('current')
hwXQoSPhbEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPhbEnable.setStatus('current')
hwXQoSPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 23, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPhbRowStatus.setStatus('current')
hwXQoSFieldDeiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 24), )
if mibBuilder.loadTexts: hwXQoSFieldDeiTable.setStatus('current')
hwXQoSFieldDeiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 24, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSFieldDeiInterface"), (0, "HUAWEI-XQoS-MIB", "hwXQoSFieldDeiVlanId"))
if mibBuilder.loadTexts: hwXQoSFieldDeiEntry.setStatus('current')
hwXQoSFieldDeiInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 24, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSFieldDeiInterface.setStatus('current')
hwXQoSFieldDeiVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSFieldDeiVlanId.setStatus('current')
hwXQoSFieldDeiEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 24, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSFieldDeiEnabled.setStatus('current')
hwXQoSFieldDeiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 24, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSFieldDeiRowStatus.setStatus('current')
hwXQoSPicForwardingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 25), )
if mibBuilder.loadTexts: hwXQoSPicForwardingTable.setStatus('current')
hwXQoSPicForwardingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 25, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSPicForwardingInterface"))
if mibBuilder.loadTexts: hwXQoSPicForwardingEntry.setStatus('current')
hwXQoSPicForwardingInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 25, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPicForwardingInterface.setStatus('current')
hwXQoSPicForwarding8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPicForwarding8021pValue.setStatus('current')
hwXQoSPicForwardingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("high", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPicForwardingPriority.setStatus('current')
hwXQoSPicForwardingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 25, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPicForwardingRowStatus.setStatus('current')
hwXQoSCarTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26), )
if mibBuilder.loadTexts: hwXQoSCarTable.setStatus('current')
hwXQoSCarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCarInterfaceIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCarDirection"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCarVlanID"))
if mibBuilder.loadTexts: hwXQoSCarEntry.setStatus('current')
hwXQoSCarInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarInterfaceIndex.setStatus('current')
hwXQoSCarDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarDirection.setStatus('current')
hwXQoSCarVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarVlanID.setStatus('current')
hwXQoSCarCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarCirValue.setStatus('current')
hwXQoSCarPirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(100, 10000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarPirValue.setStatus('current')
hwXQoSCarCbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 33554432))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarCbsValue.setStatus('current')
hwXQoSCarPbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 33554432))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarPbsValue.setStatus('current')
hwXQoSCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pass", 1), ("discard", 2), ("null", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarGreenAction.setStatus('current')
hwXQoSCarGreenServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("null", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarGreenServiceClass.setStatus('current')
hwXQoSCarGreenColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3), ("null", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarGreenColor.setStatus('current')
hwXQoSCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pass", 1), ("discard", 2), ("null", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarYellowAction.setStatus('current')
hwXQoSCarYellowServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("null", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarYellowServiceClass.setStatus('current')
hwXQoSCarYellowColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3), ("null", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarYellowColor.setStatus('current')
hwXQoSCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pass", 1), ("discard", 2), ("null", 3))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarRedAction.setStatus('current')
hwXQoSCarRedServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("null", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarRedServiceClass.setStatus('current')
hwXQoSCarRedColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3), ("null", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarRedColor.setStatus('current')
hwXQoSCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 26, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarRowStatus.setStatus('current')
hwXQoSPortShapingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 27), )
if mibBuilder.loadTexts: hwXQoSPortShapingTable.setStatus('current')
hwXQoSPortShapingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 27, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSPortShapingInterface"))
if mibBuilder.loadTexts: hwXQoSPortShapingEntry.setStatus('current')
hwXQoSPortShapingInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 27, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortShapingInterface.setStatus('current')
hwXQoSPortShapingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 27, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPortShapingValue.setStatus('current')
hwXQoSPortShapingPbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 27, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 262144))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPortShapingPbsValue.setStatus('current')
hwXQoSPortShapingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 27, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPortShapingRowStatus.setStatus('current')
hwXQoSQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28), )
if mibBuilder.loadTexts: hwXQoSQueueTable.setStatus('current')
hwXQoSQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSQueueInterfaceIndex"))
if mibBuilder.loadTexts: hwXQoSQueueEntry.setStatus('current')
hwXQoSQueueInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQueueInterfaceIndex.setStatus('current')
hwXQoSQueueServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSQueueServiceClass.setStatus('current')
hwXQoSQueueCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSQueueCirValue.setStatus('current')
hwXQoSQueueCirPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSQueueCirPercentage.setStatus('current')
hwXQoSQueueDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSQueueDirection.setStatus('current')
hwXQoSQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 28, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSQueueRowStatus.setStatus('current')
hwXQoSCarStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29), )
if mibBuilder.loadTexts: hwXQoSCarStatisticsTable.setStatus('current')
hwXQoSCarStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsInterfaceIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsDirection"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsVlanid"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsSlotNumber"))
if mibBuilder.loadTexts: hwXQoSCarStatisticsEntry.setStatus('current')
hwXQoSCarStatisticsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsInterfaceIndex.setStatus('current')
hwXQoSCarStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsDirection.setStatus('current')
hwXQoSCarStatisticsVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsVlanid.setStatus('current')
hwXQoSCarStatisticsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsSlotNumber.setStatus('current')
hwXQoSCarStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCarStatisticsReset.setStatus('current')
hwXQoSCarStatisticsPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsPassPackets.setStatus('current')
hwXQoSCarStatisticsPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsPassBytes.setStatus('current')
hwXQoSCarStatisticsDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsDropPackets.setStatus('current')
hwXQoSCarStatisticsDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsDropBytes.setStatus('current')
hwXQoSCarStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsPassPacketsRate.setStatus('current')
hwXQoSCarStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsPassBytesRate.setStatus('current')
hwXQoSCarStatisticsDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsDropPacketsRate.setStatus('current')
hwXQoSCarStatisticsDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 29, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCarStatisticsDropBytesRate.setStatus('current')
hwXQoSCpRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30), )
if mibBuilder.loadTexts: hwXQoSCpRateLimitTable.setStatus('current')
hwXQoSCpRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitPeVidValue"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitCeVidBegin"))
if mibBuilder.loadTexts: hwXQoSCpRateLimitEntry.setStatus('current')
hwXQoSCpRateLimitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpRateLimitIfIndex.setStatus('current')
hwXQoSCpRateLimitPeVidValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpRateLimitPeVidValue.setStatus('current')
hwXQoSCpRateLimitCeVidBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpRateLimitCeVidBegin.setStatus('current')
hwXQoSCpRateLimitCeVidEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpRateLimitCeVidEnd.setStatus('current')
hwXQoSCpRateLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("igmp", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpRateLimitType.setStatus('current')
hwXQoSCpRateLimitIgmpCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(32, 1000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpRateLimitIgmpCir.setStatus('current')
hwXQoSCpRateLimitIgmpCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 33554432))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpRateLimitIgmpCbs.setStatus('current')
hwXQoSCpRateLimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 30, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpRateLimitRowStatus.setStatus('current')
hwXQoSPortQueueStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31), )
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsTable.setStatus('current')
hwXQoSPortQueueStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsInterfaceIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDirection"), (0, "HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsEntry.setStatus('current')
hwXQoSPortQueueStatisticsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsInterfaceIndex.setStatus('current')
hwXQoSPortQueueStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsDirection.setStatus('current')
hwXQoSPortQueueStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsQueueIndex.setStatus('current')
hwXQoSPortQueueStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsReset.setStatus('current')
hwXQoSPortQueueStatisticsTotalPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsTotalPassPackets.setStatus('current')
hwXQoSPortQueueStatisticsTotalPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsTotalPassBytes.setStatus('current')
hwXQoSPortQueueStatisticsTotalDiscardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsTotalDiscardPackets.setStatus('current')
hwXQoSPortQueueStatisticsTotalDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsTotalDiscardBytes.setStatus('current')
hwXQoSPortQueueStatisticsDropTailDiscardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsDropTailDiscardPackets.setStatus('current')
hwXQoSPortQueueStatisticsDropTailDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsDropTailDiscardBytes.setStatus('current')
hwXQoSPortQueueStatisticsWredDiscardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsWredDiscardPackets.setStatus('current')
hwXQoSPortQueueStatisticsWredDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsWredDiscardBytes.setStatus('current')
hwXQoSPortQueueStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsPassPacketsRate.setStatus('current')
hwXQoSPortQueueStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsPassBytesRate.setStatus('current')
hwXQoSPortQueueStatisticsDiscardPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsDiscardPacketsRate.setStatus('current')
hwXQoSPortQueueStatisticsDiscardBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsDiscardBytesRate.setStatus('current')
hwXQoSPortQueueStatisticsDropTailDiscardPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsDropTailDiscardPacketsRate.setStatus('current')
hwXQoSPortQueueStatisticsDropTailDiscardBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsDropTailDiscardBytesRate.setStatus('current')
hwXQoSPortQueueStatisticsWredDiscardPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsWredDiscardPacketsRate.setStatus('current')
hwXQoSPortQueueStatisticsWredDiscardBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 31, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortQueueStatisticsWredDiscardBytesRate.setStatus('current')
hwXQoSMulBa8021pPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 32), )
if mibBuilder.loadTexts: hwXQoSMulBa8021pPhbCfgInfoTable.setStatus('current')
hwXQoSMulBa8021pPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 32, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSMulBa8021pPhbIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSMulBa8021pPri"))
if mibBuilder.loadTexts: hwXQoSMulBa8021pPhbCfgInfoEntry.setStatus('current')
hwXQoSMulBa8021pPhbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 32, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSMulBa8021pPhbIndex.setStatus('current')
hwXQoSMulBa8021pPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 32, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSMulBa8021pPri.setStatus('current')
hwXQoSMulBa8021pPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 32, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSMulBa8021pPhbCos.setStatus('current')
hwXQoSMulBa8021pPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 32, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSMulBa8021pPhbRowStatus.setStatus('current')
hwXQoSMulDscpPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 33), )
if mibBuilder.loadTexts: hwXQoSMulDscpPhbCfgInfoTable.setStatus('current')
hwXQoSMulDscpPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 33, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSMulBaDscpPhbIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSMulBaDscpPri"))
if mibBuilder.loadTexts: hwXQoSMulDscpPhbCfgInfoEntry.setStatus('current')
hwXQoSMulBaDscpPhbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 33, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSMulBaDscpPhbIndex.setStatus('current')
hwXQoSMulBaDscpPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 33, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSMulBaDscpPri.setStatus('current')
hwXQoSMulBaDscpPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 33, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSMulBaDscpPhbCos.setStatus('current')
hwXQoSMulBaDscpPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 33, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSMulBaDscpPhbRowStatus.setStatus('current')
hwXQoSBaUserPriPhbCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 34), )
if mibBuilder.loadTexts: hwXQoSBaUserPriPhbCfgInfoTable.setStatus('current')
hwXQoSBaUserPriPhbCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 34, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSDSUserPriIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSUserPriPhbPri"))
if mibBuilder.loadTexts: hwXQoSBaUserPriPhbCfgInfoEntry.setStatus('current')
hwXQoSDSUserPriIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 34, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSDSUserPriIndex.setStatus('current')
hwXQoSUserPriPhbPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 34, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSUserPriPhbPri.setStatus('current')
hwXQoSUserPriPhbCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 34, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSUserPriPhbCos.setStatus('current')
hwXQoSUserPriPhbColour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 34, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSUserPriPhbColour.setStatus('current')
hwXQoSUserPriPhbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 34, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSUserPriPhbRowStatus.setStatus('current')
hwXQoSAAATrustCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 35), )
if mibBuilder.loadTexts: hwXQoSAAATrustCfgInfoTable.setStatus('current')
hwXQoSAAATrustCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 35, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSAaaDomainName"))
if mibBuilder.loadTexts: hwXQoSAAATrustCfgInfoEntry.setStatus('current')
hwXQoSAaaDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 35, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSAaaDomainName.setStatus('current')
hwXQoSAAADsDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 35, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSAAADsDomainName.setStatus('current')
hwXQoSAAADsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 35, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAAADsRowStatus.setStatus('current')
hwXQoSAAATrust8021pInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 36), )
if mibBuilder.loadTexts: hwXQoSAAATrust8021pInfoTable.setStatus('current')
hwXQoSAAATrust8021pInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 36, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSAaaDomainName"))
if mibBuilder.loadTexts: hwXQoSAAATrust8021pInfoEntry.setStatus('current')
hwXQoSAAADs8021P = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSAAADs8021P.setStatus('current')
hwXQoSAAADs8021pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 36, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAAADs8021pRowStatus.setStatus('current')
hwXQoSIfActionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2))
hwXQoSIfCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1), )
if mibBuilder.loadTexts: hwXQoSIfCarCfgInfoTable.setStatus('current')
hwXQoSIfCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfCarCfgIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfCarVlanID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfCarDirection"))
if mibBuilder.loadTexts: hwXQoSIfCarCfgInfoEntry.setStatus('current')
hwXQoSIfCarCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarCfgIfIndex.setStatus('current')
hwXQoSIfCarVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarVlanID.setStatus('current')
hwXQoSIfCarDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarDirection.setStatus('current')
hwXQoSIfCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarCir.setStatus('current')
hwXQoSIfCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarCbs.setStatus('current')
hwXQoSIfCarEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarEbs.setStatus('current')
hwXQoSIfCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarPir.setStatus('current')
hwXQoSIfCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarPbs.setStatus('current')
hwXQoSIfCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 9), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarGreenAction.setStatus('current')
hwXQoSIfCarGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarGreenRemarkValue.setStatus('current')
hwXQoSIfCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 11), CarAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarYellowAction.setStatus('current')
hwXQoSIfCarYellowRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarYellowRemarkValue.setStatus('current')
hwXQoSIfCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 13), CarAction().clone('discard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarRedAction.setStatus('current')
hwXQoSIfCarRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarRedRemarkValue.setStatus('current')
hwXQoSIfCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfCarRowStatus.setStatus('current')
hwXQoSIfMirrorCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 2), )
if mibBuilder.loadTexts: hwXQoSIfMirrorCfgInfoTable.setStatus('current')
hwXQoSIfMirrorCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfMirrorCfgIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfMirrorCfgVlanID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfMirrorDirection"))
if mibBuilder.loadTexts: hwXQoSIfMirrorCfgInfoEntry.setStatus('current')
hwXQoSIfMirrorCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMirrorCfgIfIndex.setStatus('current')
hwXQoSIfMirrorCfgVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMirrorCfgVlanID.setStatus('current')
hwXQoSIfMirrorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 2, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMirrorDirection.setStatus('current')
hwXQoSIfMirrorObserveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfMirrorObserveIndex.setStatus('current')
hwXQoSIfMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfMirrorRowStatus.setStatus('current')
hwXQoSIfUrpfCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 3), )
if mibBuilder.loadTexts: hwXQoSIfUrpfCfgInfoTable.setStatus('current')
hwXQoSIfUrpfCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 3, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfUrpfCfgIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfUrpfCfgVlanID"))
if mibBuilder.loadTexts: hwXQoSIfUrpfCfgInfoEntry.setStatus('current')
hwXQoSIfUrpfCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfUrpfCfgIfIndex.setStatus('current')
hwXQoSIfUrpfCfgVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfUrpfCfgVlanID.setStatus('current')
hwXQoSIfUrpfCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 3, 1, 3), UrpfCtrlType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfUrpfCtrlType.setStatus('current')
hwXQoSIfUrpfAllowDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfUrpfAllowDefault.setStatus('current')
hwXQoSIfUrpfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfUrpfRowStatus.setStatus('current')
hwXQoSIfSamplingCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4), )
if mibBuilder.loadTexts: hwXQoSIfSamplingCfgInfoTable.setStatus('current')
hwXQoSIfSamplingCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfSamplingIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfSamplingVlanID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfSamplingDirection"))
if mibBuilder.loadTexts: hwXQoSIfSamplingCfgInfoEntry.setStatus('current')
hwXQoSIfSamplingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfSamplingIfIndex.setStatus('current')
hwXQoSIfSamplingVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfSamplingVlanID.setStatus('current')
hwXQoSIfSamplingDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfSamplingDirection.setStatus('current')
hwXQoSIfSamplingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4, 1, 4), SampleType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSamplingType.setStatus('current')
hwXQoSIfSamplingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSamplingNum.setStatus('current')
hwXQoSIfSamplingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSamplingRowStatus.setStatus('current')
hwXQoSIfLrCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5), )
if mibBuilder.loadTexts: hwXQoSIfLrCfgInfoTable.setStatus('current')
hwXQoSIfLrCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfLrCfgIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfLrCfgVlanID"))
if mibBuilder.loadTexts: hwXQoSIfLrCfgInfoEntry.setStatus('current')
hwXQoSIfLrCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrCfgIfIndex.setStatus('current')
hwXQoSIfLrCfgVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrCfgVlanID.setStatus('current')
hwXQoSIfLrCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfLrCir.setStatus('current')
hwXQoSIfLrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfLrRowStatus.setStatus('current')
hwXQoSIfLrCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfLrCbs.setStatus('current')
hwXQoSIfInPhyBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfInPhyBandwidth.setStatus('current')
hwXQoSIfOutPhyBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfOutPhyBandwidth.setStatus('current')
hwXQoSIfInActualBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfInActualBandwidth.setStatus('current')
hwXQoSIfOutActualBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfOutActualBandwidth.setStatus('current')
hwXQoSIfQueueCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6), )
if mibBuilder.loadTexts: hwXQoSIfQueueCfgInfoTable.setStatus('current')
hwXQoSIfQueueCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueueCfgIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueueCfgVlanID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueueDirection"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueueCfgCosType"))
if mibBuilder.loadTexts: hwXQoSIfQueueCfgInfoEntry.setStatus('current')
hwXQoSIfQueueCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueCfgIfIndex.setStatus('current')
hwXQoSIfQueueCfgVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueCfgVlanID.setStatus('current')
hwXQoSIfQueueDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueDirection.setStatus('current')
hwXQoSIfQueueCfgCosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 4), CosType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueCfgCosType.setStatus('current')
hwXQoSIfQueuePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfQueuePriority.setStatus('current')
hwXQoSIfQueueCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfQueueCir.setStatus('current')
hwXQoSIfQueuePir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfQueuePir.setStatus('current')
hwXQoSIfQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfQueueWeight.setStatus('current')
hwXQoSIfQueueMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5, 6))).clone(namedValues=NamedValues(("pq", 1), ("wrr", 3), ("wfq", 4), ("default", 5), ("drr", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfQueueMode.setStatus('current')
hwXQoSIfQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 6, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfQueueRowStatus.setStatus('current')
hwXQoSIfObserveCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 7), )
if mibBuilder.loadTexts: hwXQoSIfObserveCfgInfoTable.setStatus('current')
hwXQoSIfObserveCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 7, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfObserveIndex"))
if mibBuilder.loadTexts: hwXQoSIfObserveCfgInfoEntry.setStatus('current')
hwXQoSIfObserveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfObserveIndex.setStatus('current')
hwXQoSIfObserveIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 7, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfObserveIfIndex.setStatus('current')
hwXQoSIfObserveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfObserveRowStatus.setStatus('current')
hwXQoSIfWredCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8), )
if mibBuilder.loadTexts: hwXQoSIfWredCfgInfoTable.setStatus('current')
hwXQoSIfWredCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfWredQueueIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfWredDirection"))
if mibBuilder.loadTexts: hwXQoSIfWredCfgInfoEntry.setStatus('current')
hwXQoSIfWredQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfWredQueueIndex.setStatus('current')
hwXQoSIfWredDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 2), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfWredDirection.setStatus('current')
hwXQoSIfWredType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip-Prec", 1), ("dscp", 2))).clone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfWredType.setStatus('current')
hwXQoSIfWredLowlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfWredLowlimit.setStatus('current')
hwXQoSIfWredHighlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfWredHighlimit.setStatus('current')
hwXQoSIfWredDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfWredDiscardProbability.setStatus('current')
hwXQoSIfWredHighDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfWredHighDiscardProbability.setStatus('current')
hwXQoSIfWredRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 8, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfWredRowStatus.setStatus('current')
hwXQoSIf8021PMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 9), )
if mibBuilder.loadTexts: hwXQoSIf8021PMapCfgInfoTable.setStatus('current')
hwXQoSIf8021PMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 9, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIf8021PMap8021PValue"))
if mibBuilder.loadTexts: hwXQoSIf8021PMapCfgInfoEntry.setStatus('current')
hwXQoSIf8021PMap8021PValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIf8021PMap8021PValue.setStatus('current')
hwXQoSIf8021PMapLocalPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIf8021PMapLocalPrecedence.setStatus('current')
hwXQoSIf8021PMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIf8021PMapRowStatus.setStatus('current')
hwXQoSIfMplsExpMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 10), )
if mibBuilder.loadTexts: hwXQoSIfMplsExpMapCfgInfoTable.setStatus('current')
hwXQoSIfMplsExpMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 10, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfMplsExpMapIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfMplsExpMapInbound"))
if mibBuilder.loadTexts: hwXQoSIfMplsExpMapCfgInfoEntry.setStatus('current')
hwXQoSIfMplsExpMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMplsExpMapIfIndex.setStatus('current')
hwXQoSIfMplsExpMapInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMplsExpMapInbound.setStatus('current')
hwXQoSIfMplsExpMapOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfMplsExpMapOutbound.setStatus('current')
hwXQoSIfMplsExpMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfMplsExpMapRowStatus.setStatus('current')
hwXQoSIfDefaultPriorityCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 11), )
if mibBuilder.loadTexts: hwXQoSIfDefaultPriorityCfgInfoTable.setStatus('current')
hwXQoSIfDefaultPriorityCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 11, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfDefaultPriorityIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfDefaultPriorityVlanID"))
if mibBuilder.loadTexts: hwXQoSIfDefaultPriorityCfgInfoEntry.setStatus('current')
hwXQoSIfDefaultPriorityIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfDefaultPriorityIfIndex.setStatus('current')
hwXQoSIfDefaultPriorityVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfDefaultPriorityVlanID.setStatus('current')
hwXQoSIfDefaultPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfDefaultPriorityValue.setStatus('current')
hwXQoSIfDefaultPriorityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfDefaultPriorityRowStatus.setStatus('current')
hwXQoSIfSoftCarTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 12), )
if mibBuilder.loadTexts: hwXQoSIfSoftCarTable.setStatus('current')
hwXQoSIfSoftCarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 12, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfSoftCarIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfSoftCarDirection"))
if mibBuilder.loadTexts: hwXQoSIfSoftCarEntry.setStatus('current')
hwXQoSIfSoftCarIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 12, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSIfSoftCarIfIndex.setStatus('current')
hwXQoSIfSoftCarDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 12, 1, 2), DirectionType())
if mibBuilder.loadTexts: hwXQoSIfSoftCarDirection.setStatus('current')
hwXQoSIfSoftCarCarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSoftCarCarIndex.setStatus('current')
hwXQoSIfSoftCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 12, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSoftCarRowStatus.setStatus('current')
hwXQoSIfLocalPrecedenceQueueMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 13), )
if mibBuilder.loadTexts: hwXQoSIfLocalPrecedenceQueueMapTable.setStatus('current')
hwXQoSIfLocalPrecedenceQueueMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 13, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfLocPreQueMapIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfLocPreQueMapPreValue"))
if mibBuilder.loadTexts: hwXQoSIfLocalPrecedenceQueueMapEntry.setStatus('current')
hwXQoSIfLocPreQueMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLocPreQueMapIfIndex.setStatus('current')
hwXQoSIfLocPreQueMapPreValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLocPreQueMapPreValue.setStatus('current')
hwXQoSIfLocPreQueMapCosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 13, 1, 3), CosType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfLocPreQueMapCosType.setStatus('current')
hwXQoSIfLocPreQueMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 13, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfLocPreQueMapRowStatus.setStatus('current')
hwXQoSIfScheduleModeCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 14), )
if mibBuilder.loadTexts: hwXQoSIfScheduleModeCfgInfoTable.setStatus('current')
hwXQoSIfScheduleModeCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 14, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfScheduleModeIfIndex"))
if mibBuilder.loadTexts: hwXQoSIfScheduleModeCfgInfoEntry.setStatus('current')
hwXQoSIfScheduleModeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 14, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSIfScheduleModeIfIndex.setStatus('current')
hwXQoSIfModeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pqWfq", 1), ("pq", 2), ("wfq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfModeType.setStatus('current')
hwXQoSIfScheduleModeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 14, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfScheduleModeRowStatus.setStatus('current')
hwXQoSIfHQOSPriCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 15), )
if mibBuilder.loadTexts: hwXQoSIfHQOSPriCfgInfoTable.setStatus('current')
hwXQoSIfHQOSPriCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 15, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfHqosPriIfIndex"))
if mibBuilder.loadTexts: hwXQoSIfHQOSPriCfgInfoEntry.setStatus('current')
hwXQoSIfHqosPriIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSIfHqosPriIfIndex.setStatus('current')
hwXQoSIfHqosPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfHqosPriority.setStatus('current')
hwXQoSIfHqosPriRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 15, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfHqosPriRowStatus.setStatus('current')
hwXQoSIfOutboundMulticastCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 16), )
if mibBuilder.loadTexts: hwXQoSIfOutboundMulticastCfgInfoTable.setStatus('current')
hwXQoSIfOutboundMulticastCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 16, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfOutMulticastIfIndex"))
if mibBuilder.loadTexts: hwXQoSIfOutboundMulticastCfgInfoEntry.setStatus('current')
hwXQoSIfOutMulticastIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSIfOutMulticastIfIndex.setStatus('current')
hwXQoSIfUnicastWeightValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfUnicastWeightValue.setStatus('current')
hwXQoSIfMulticastWeightValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfMulticastWeightValue.setStatus('current')
hwXQoSIfOutMulticastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 16, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfOutMulticastRowStatus.setStatus('current')
hwXQoSIfSredCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17), )
if mibBuilder.loadTexts: hwXQoSIfSredCfgInfoTable.setStatus('current')
hwXQoSIfSredCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfSredQueueIndex"))
if mibBuilder.loadTexts: hwXQoSIfSredCfgInfoEntry.setStatus('current')
hwXQoSIfSredQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))))
if mibBuilder.loadTexts: hwXQoSIfSredQueueIndex.setStatus('current')
hwXQoSIfSredRedStartDiscardPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSredRedStartDiscardPoint.setStatus('current')
hwXQoSIfSredRedDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("drop1", 1), ("drop2", 2), ("drop3", 3), ("drop4", 4), ("drop5", 5), ("drop6", 6), ("drop7", 7), ("drop8", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSredRedDiscardProbability.setStatus('current')
hwXQoSIfSredYellowStartDiscardPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSredYellowStartDiscardPoint.setStatus('current')
hwXQoSIfSredYellowDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("drop1", 1), ("drop2", 2), ("drop3", 3), ("drop4", 4), ("drop5", 5), ("drop6", 6), ("drop7", 7), ("drop8", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSredYellowDiscardProbability.setStatus('current')
hwXQoSIfSredRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 17, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfSredRowStatus.setStatus('current')
hwXQosAtmTrafficQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 18), )
if mibBuilder.loadTexts: hwXQosAtmTrafficQueueTable.setStatus('current')
hwXQosAtmTrafficQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 18, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSAtmTrafficQueueIfIndex"))
if mibBuilder.loadTexts: hwXQosAtmTrafficQueueEntry.setStatus('current')
hwXQoSAtmTrafficQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 18, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwXQoSAtmTrafficQueueIfIndex.setStatus('current')
hwXQoSAtmTrafficQueueServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 18, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmTrafficQueueServiceClass.setStatus('current')
hwXQoSAtmTrafficQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 18, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmTrafficQueueRowStatus.setStatus('current')
hwXQoSAtmPvcServiceTypeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19), )
if mibBuilder.loadTexts: hwXQoSAtmPvcServiceTypeTable.setStatus('current')
hwXQoSAtmPvcServiceTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvcServiceTypeVpiIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvcServiceTypeVciIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSAtmPvcServiceTypeIfIndex"))
if mibBuilder.loadTexts: hwXQoSAtmPvcServiceTypeEntry.setStatus('current')
hwXQoSAtmPvcServiceTypeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwXQoSAtmPvcServiceTypeIfIndex.setStatus('current')
hwXQoSAtmPvcServiceTypeVpiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwXQoSAtmPvcServiceTypeVpiIndex.setStatus('current')
hwXQoSAtmPvcServiceTypeVciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwXQoSAtmPvcServiceTypeVciIndex.setStatus('current')
hwXQoSAtmPvcNameServiceTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSAtmPvcNameServiceTypeIndex.setStatus('current')
hwXQoSAtmPvcServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcServiceType.setStatus('current')
hwXQoSAtmPvcPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcPcr.setStatus('current')
hwXQoSAtmPvcCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcCdvt.setStatus('current')
hwXQoSAtmPvcVbrScr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcVbrScr.setStatus('current')
hwXQoSAtmPvcVbrMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcVbrMbs.setStatus('current')
hwXQoSAtmPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 19, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSAtmPvcRowStatus.setStatus('current')
hwXQoSIfShapingCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 20), )
if mibBuilder.loadTexts: hwXQoSIfShapingCfgInfoTable.setStatus('current')
hwXQoSIfShapingCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 20, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfShapingIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfShapingQueueIndex"))
if mibBuilder.loadTexts: hwXQoSIfShapingCfgInfoEntry.setStatus('current')
hwXQoSIfShapingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 20, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSIfShapingIfIndex.setStatus('current')
hwXQoSIfShapingQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))))
if mibBuilder.loadTexts: hwXQoSIfShapingQueueIndex.setStatus('current')
hwXQoSIfShapingQueueCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 20, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfShapingQueueCir.setStatus('current')
hwXQoSIfShapingQueuePir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 20, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfShapingQueuePir.setStatus('current')
hwXQoSIfShapingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 20, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfShapingRowStatus.setStatus('current')
hwXQoSIfPppoeCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 21), )
if mibBuilder.loadTexts: hwXQoSIfPppoeCfgInfoTable.setStatus('current')
hwXQoSIfPppoeCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 21, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfPppoeIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfPppoeMatchType"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfPppoeSourceMac"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfPppoeDestMac"))
if mibBuilder.loadTexts: hwXQoSIfPppoeCfgInfoEntry.setStatus('current')
hwXQoSIfPppoeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwXQoSIfPppoeIfIndex.setStatus('current')
hwXQoSIfPppoeMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: hwXQoSIfPppoeMatchType.setStatus('current')
hwXQoSIfPppoeSourceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 21, 1, 3), MacAddress())
if mibBuilder.loadTexts: hwXQoSIfPppoeSourceMac.setStatus('current')
hwXQoSIfPppoeDestMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 21, 1, 4), MacAddress())
if mibBuilder.loadTexts: hwXQoSIfPppoeDestMac.setStatus('current')
hwXQoSIfPppoeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 21, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfPppoeRowStatus.setStatus('current')
hwXQoSIfScheduleCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 22), )
if mibBuilder.loadTexts: hwXQoSIfScheduleCfgInfoTable.setStatus('current')
hwXQoSIfScheduleCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 22, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfScheduleIfIndex"))
if mibBuilder.loadTexts: hwXQoSIfScheduleCfgInfoEntry.setStatus('current')
hwXQoSIfScheduleIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwXQoSIfScheduleIfIndex.setStatus('current')
hwXQoSIfScheduleProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 22, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfScheduleProfile.setStatus('current')
hwXQoSIfScheduleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 22, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfScheduleRowStatus.setStatus('current')
hwXQoSIfIPCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23), )
if mibBuilder.loadTexts: hwXQoSIfIPCarCfgInfoTable.setStatus('current')
hwXQoSIfIPCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfIPCarCfgIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfIPCarDirection"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIPCarRuleIndex"))
if mibBuilder.loadTexts: hwXQoSIfIPCarCfgInfoEntry.setStatus('current')
hwXQoSIfIPCarCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfIPCarCfgIfIndex.setStatus('current')
hwXQoSIfIPCarDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 2), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfIPCarDirection.setStatus('current')
hwXQoSIPCarRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIPCarRuleIndex.setStatus('current')
hwXQoSIPCarRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 4), IPCARRuleType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIPCarRuleType.setStatus('current')
hwXBQoSIPCarIntValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXBQoSIPCarIntValue.setStatus('current')
hwXQoSIfIPCarStartIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarStartIp.setStatus('current')
hwXQoSIfIPCarEndIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarEndIp.setStatus('current')
hwXQoSIfIPCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarCir.setStatus('current')
hwXQoSIfIPCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarCbs.setStatus('current')
hwXQoSIfIPCarEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarEbs.setStatus('current')
hwXQoSIfIPCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarPir.setStatus('current')
hwXQoSIfIPCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarPbs.setStatus('current')
hwXQoSIfIPCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 13), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarGreenAction.setStatus('current')
hwXQoSIfIPCarGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarGreenRemarkValue.setStatus('current')
hwXQoSIfIPCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 15), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarYellowAction.setStatus('current')
hwXQoSIfIPCarYellowRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarYellowRemarkValue.setStatus('current')
hwXQoSIfIPCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 17), CarAction().clone('discard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarRedAction.setStatus('current')
hwXQoSIfIPCarRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarRedRemarkValue.setStatus('current')
hwXQoSIfIPCarAggregation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aggregationCar", 1), ("noneAggregationCar", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarAggregation.setStatus('current')
hwXQoSIfIPCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 2, 23, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfIPCarRowStatus.setStatus('current')
hwXQoSCpcarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3))
hwXQoSCpcarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 1), )
if mibBuilder.loadTexts: hwXQoSCpcarCfgInfoTable.setStatus('current')
hwXQoSCpcarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpcarIndex"))
if mibBuilder.loadTexts: hwXQoSCpcarCfgInfoEntry.setStatus('current')
hwXQoSCpcarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpcarIndex.setStatus('current')
hwXQoSCpcarName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpcarName.setStatus('current')
hwXQoSCpcarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpcarRowStatus.setStatus('current')
hwXQoSCpCarFilterCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 2), )
if mibBuilder.loadTexts: hwXQoSCpCarFilterCfgInfoTable.setStatus('current')
hwXQoSCpCarFilterCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 2, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpcarIndex"))
if mibBuilder.loadTexts: hwXQoSCpCarFilterCfgInfoEntry.setStatus('current')
hwXQoSCpCarFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pass", 1), ("drop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarFilterAction.setStatus('current')
hwXQoSCpCarFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarFilterRowStatus.setStatus('current')
hwXQoSCpCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3), )
if mibBuilder.loadTexts: hwXQoSCpCarCfgInfoTable.setStatus('current')
hwXQoSCpCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpcarIndex"))
if mibBuilder.loadTexts: hwXQoSCpCarCfgInfoEntry.setStatus('current')
hwXQoSCpCarSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarSlotId.setStatus('current')
hwXQoSCpCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarCir.setStatus('current')
hwXQoSCpCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 19375000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarCbs.setStatus('current')
hwXQoSCpCarEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 19375000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarEbs.setStatus('current')
hwXQoSCpCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(100, 10000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarPir.setStatus('current')
hwXQoSCpCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 4000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarPbs.setStatus('current')
hwXQoSCpCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 7), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarGreenAction.setStatus('current')
hwXQoSCpCarGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarGreenRemarkValue.setStatus('current')
hwXQoSCpCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 9), CarAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarYellowAction.setStatus('current')
hwXQoSCpCarYellowRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarYellowRemarkValue.setStatus('current')
hwXQoSCpCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 11), CarAction().clone('discard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarRedAction.setStatus('current')
hwXQoSCpCarRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarRedRemarkValue.setStatus('current')
hwXQoSCpCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpCarRowStatus.setStatus('current')
hwXQoSCpApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 4), )
if mibBuilder.loadTexts: hwXQoSCpApplyPolicyTable.setStatus('current')
hwXQoSCpApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 4, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpcarIndex"))
if mibBuilder.loadTexts: hwXQoSCpApplyPolicyEntry.setStatus('current')
hwXQoSCpApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpApplyPolicyName.setStatus('current')
hwXQoSCpApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSCpApplyPolicyRowStatus.setStatus('current')
hwXQoSCpCarActionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5), )
if mibBuilder.loadTexts: hwXQoSCpCarActionTable.setStatus('current')
hwXQoSCpCarActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpCarActionSlotIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCpCarActionPacketType"))
if mibBuilder.loadTexts: hwXQoSCpCarActionEntry.setStatus('current')
hwXQoSCpCarActionSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSCpCarActionSlotIndex.setStatus('current')
hwXQoSCpCarActionPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: hwXQoSCpCarActionPacketType.setStatus('current')
hwXQoSCpCarActionPacketTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarActionPacketTypeName.setStatus('current')
hwXQoSCpCarActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 4), Bits().clone(namedValues=NamedValues(("pass", 0), ("discard", 1), ("car", 2), ("traffic-policy", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionType.setStatus('current')
hwXQoSCpCarActionPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionPolicyName.setStatus('current')
hwXQoSCpCarActionCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 6), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionCarCir.setStatus('current')
hwXQoSCpCarActionCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 7), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionCarCbs.setStatus('current')
hwXQoSCpCarActionCarEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 8), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionCarEbs.setStatus('current')
hwXQoSCpCarActionCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 9), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionCarPir.setStatus('current')
hwXQoSCpCarActionCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 10), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionCarPbs.setStatus('current')
hwXQoSCpCarActionGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 11), CarAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionGreenAction.setStatus('current')
hwXQoSCpCarActionGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionGreenRemarkValue.setStatus('current')
hwXQoSCpCarActionYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 13), CarAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionYellowAction.setStatus('current')
hwXQoSCpCarActionYellowRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionYellowRemarkValue.setStatus('current')
hwXQoSCpCarActionRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 15), CarAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionRedAction.setStatus('current')
hwXQoSCpCarActionRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionRedRemarkValue.setStatus('current')
hwXQoSCpCarActionSetDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 3, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSCpCarActionSetDefault.setStatus('current')
hwXQoSStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4))
hwXQoSCpcarStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2))
hwXQoSCpcarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1), )
if mibBuilder.loadTexts: hwXQoSCpcarRunInfoTable.setStatus('current')
hwXQoSCpcarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpcarIndex"))
if mibBuilder.loadTexts: hwXQoSCpcarRunInfoEntry.setStatus('current')
hwXQoSCpcarPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpcarPassedPackets.setStatus('current')
hwXQoSCpcarPassededBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpcarPassededBytes.setStatus('current')
hwXQoSCpcarTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpcarTotalPackets.setStatus('current')
hwXQoSCpcarTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpcarTotalBytes.setStatus('current')
hwXQoSCpcarDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpcarDiscardedPackets.setStatus('current')
hwXQoSCpcarDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpcarDiscardedBytes.setStatus('current')
hwXQoSCpCarSlotStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2), )
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatTable.setStatus('current')
hwXQoSCpCarSlotStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpCarSlotStatSlotIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCpCarSlotStatPacketType"))
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatEntry.setStatus('current')
hwXQoSCpCarSlotStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatSlotIndex.setStatus('current')
hwXQoSCpCarSlotStatPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatPacketType.setStatus('current')
hwXQoSCpCarSlotStatDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatDiscardedPackets.setStatus('current')
hwXQoSCpCarSlotStatDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatDiscardedBytes.setStatus('current')
hwXQoSCpCarSlotStatPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatPassedPackets.setStatus('current')
hwXQoSCpCarSlotStatPassededBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatPassededBytes.setStatus('current')
hwXQoSCpCarSlotStatTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatTotalPackets.setStatus('current')
hwXQoSCpCarSlotStatTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpCarSlotStatTotalBytes.setStatus('current')
hwXQoSIfStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3))
hwXQoSIfCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1), )
if mibBuilder.loadTexts: hwXQoSIfCarRunInfoTable.setStatus('current')
hwXQoSIfCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfCarIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfVlanID"))
if mibBuilder.loadTexts: hwXQoSIfCarRunInfoEntry.setStatus('current')
hwXQoSIfCarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarIndex.setStatus('current')
hwXQoSIfVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfVlanID.setStatus('current')
hwXQoSIfCarGreenPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarGreenPassedPackets.setStatus('current')
hwXQoSIfCarGreenPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarGreenPassedBytes.setStatus('current')
hwXQoSIfCarGreenRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarGreenRemarkedPackets.setStatus('current')
hwXQoSIfCarGreenRemarkedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarGreenRemarkedBytes.setStatus('current')
hwXQoSIfCarGreenDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarGreenDiscardedPackets.setStatus('current')
hwXQoSIfCarGreenDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarGreenDiscardedBytes.setStatus('current')
hwXQoSIfCarYellowPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarYellowPassedPackets.setStatus('current')
hwXQoSIfCarYellowPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarYellowPassedBytes.setStatus('current')
hwXQoSIfCarYellowRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarYellowRemarkedPackets.setStatus('current')
hwXQoSIfCarYellowRemarkedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarYellowRemarkedBytes.setStatus('current')
hwXQoSIfCarYellowDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarYellowDiscardedPackets.setStatus('current')
hwXQoSIfCarYellowDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarYellowDiscardedBytes.setStatus('current')
hwXQoSIfCarRedPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarRedPassedPackets.setStatus('current')
hwXQoSIfCarRedPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarRedPassedBytes.setStatus('current')
hwXQoSIfCarRedRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarRedRemarkedPackets.setStatus('current')
hwXQoSIfCarRedRemarkedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarRedRemarkedBytes.setStatus('current')
hwXQoSIfCarRedDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarRedDiscardedPackets.setStatus('current')
hwXQoSIfCarRedDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarRedDiscardedBytes.setStatus('current')
hwXQoSIfCarTotalDiscardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarTotalDiscardPackets.setStatus('current')
hwXQoSIfCarInBoundDiscardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarInBoundDiscardPackets.setStatus('current')
hwXQoSIfCarOutBoundDiscardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarOutBoundDiscardPackets.setStatus('current')
hwXQoSIfQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3), )
if mibBuilder.loadTexts: hwXQoSIfQueueRunInfoTable.setStatus('current')
hwXQoSIfQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueueIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueueVlanID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueueCosType"))
if mibBuilder.loadTexts: hwXQoSIfQueueRunInfoEntry.setStatus('current')
hwXQoSIfQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueIfIndex.setStatus('current')
hwXQoSIfQueueVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueVlanID.setStatus('current')
hwXQoSIfQueueCosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 3), CosType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueCosType.setStatus('current')
hwXQoSIfQueuePassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueuePassedPackets.setStatus('current')
hwXQoSIfQueuePassededBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueuePassededBytes.setStatus('current')
hwXQoSIfQueueTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueTotalPackets.setStatus('current')
hwXQoSIfQueueTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueTotalBytes.setStatus('current')
hwXQoSIfQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueDiscardedPackets.setStatus('current')
hwXQoSIfQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueDiscardedBytes.setStatus('current')
hwXQoSIfQueuePassedPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueuePassedPacketRate.setStatus('current')
hwXQoSIfQueuePassedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueuePassedByteRate.setStatus('current')
hwXQoSIfQueueDiscardedPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueDiscardedPacketRate.setStatus('current')
hwXQoSIfQueueDiscardedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueDiscardedByteRate.setStatus('current')
hwXQoSIfQueueResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 14), ResetFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSIfQueueResetFlag.setStatus('current')
hwXQoSIfQueueUsagePercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueueUsagePercentage.setStatus('current')
hwXQoSIfWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 4), )
if mibBuilder.loadTexts: hwXQoSIfWredRunInfoTable.setStatus('current')
hwXQoSIfWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 4, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfWredIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfWredVlanID"))
if mibBuilder.loadTexts: hwXQoSIfWredRunInfoEntry.setStatus('current')
hwXQoSIfWredIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfWredIfIndex.setStatus('current')
hwXQoSIfWredVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfWredVlanID.setStatus('current')
hwXQoSIfWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfWredRandomDiscardedPackets.setStatus('current')
hwXQoSIfWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfWredTailDiscardedPackets.setStatus('current')
hwXQoSIfWredDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfWredDiscardedPackets.setStatus('current')
hwXQoSIfLrRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5), )
if mibBuilder.loadTexts: hwXQoSIfLrRunInfoTable.setStatus('current')
hwXQoSIfLrRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfLrIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfLrVlanID"))
if mibBuilder.loadTexts: hwXQoSIfLrRunInfoEntry.setStatus('current')
hwXQoSIfLrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrIfIndex.setStatus('current')
hwXQoSIfLrVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrVlanID.setStatus('current')
hwXQoSIfLrPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrPassedPackets.setStatus('current')
hwXQoSIfLrPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrPassedBytes.setStatus('current')
hwXQoSIfLrDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrDiscardedPackets.setStatus('current')
hwXQoSIfLrDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrDiscardedBytes.setStatus('current')
hwXQoSIfLrDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrDelayedPackets.setStatus('current')
hwXQoSIfLrDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfLrDelayedBytes.setStatus('current')
hwXQoSIfMirrorRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 6), )
if mibBuilder.loadTexts: hwXQoSIfMirrorRunInfoTable.setStatus('current')
hwXQoSIfMirrorRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 6, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfMirrorIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfMirrorVlanID"))
if mibBuilder.loadTexts: hwXQoSIfMirrorRunInfoEntry.setStatus('current')
hwXQoSIfMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMirrorIfIndex.setStatus('current')
hwXQoSIfMirrorVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMirrorVlanID.setStatus('current')
hwXQoSIfMirroredPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfMirroredPackets.setStatus('current')
hwXQoSIfUrpfRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 7), )
if mibBuilder.loadTexts: hwXQoSIfUrpfRunInfoTable.setStatus('current')
hwXQoSIfUrpfRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 7, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfUrpfIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfUrpfVlanID"))
if mibBuilder.loadTexts: hwXQoSIfUrpfRunInfoEntry.setStatus('current')
hwXQoSIfUrpfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfUrpfIfIndex.setStatus('current')
hwXQoSIfUrpfVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfUrpfVlanID.setStatus('current')
hwXQoSIfUrpfPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfUrpfPassedPackets.setStatus('current')
hwXQoSIfUrpfDroppdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfUrpfDroppdPackets.setStatus('current')
hwXQoSIfSampleRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 8), )
if mibBuilder.loadTexts: hwXQoSIfSampleRunInfoTable.setStatus('current')
hwXQoSIfSampleRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 8, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfSampleIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfSampleVlanID"))
if mibBuilder.loadTexts: hwXQoSIfSampleRunInfoEntry.setStatus('current')
hwXQoSIfSampleIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfSampleIfIndex.setStatus('current')
hwXQoSIfSampleVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfSampleVlanID.setStatus('current')
hwXQoSIfSampledPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfSampledPackets.setStatus('current')
hwXQoSIfCarStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9), )
if mibBuilder.loadTexts: hwXQoSIfCarStatisticsTable.setStatus('current')
hwXQoSIfCarStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfCarCfgIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfCarVlanID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfCarDirection"))
if mibBuilder.loadTexts: hwXQoSIfCarStatisticsEntry.setStatus('current')
hwXQoSIfCarConformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarConformedPackets.setStatus('current')
hwXQoSIfCarConformedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarConformedBytes.setStatus('current')
hwXQoSIfCarConformedPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarConformedPacketRate.setStatus('current')
hwXQoSIfCarConformedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarConformedByteRate.setStatus('current')
hwXQoSIfCarExceededPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarExceededPackets.setStatus('current')
hwXQoSIfCarExceededBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarExceededBytes.setStatus('current')
hwXQoSIfCarExceededPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarExceededPacketRate.setStatus('current')
hwXQoSIfCarExceededByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarExceededByteRate.setStatus('current')
hwXQoSIfCarOverflowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarOverflowPackets.setStatus('current')
hwXQoSIfCarOverflowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarOverflowBytes.setStatus('current')
hwXQoSIfCarOverflowPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarOverflowPacketRate.setStatus('current')
hwXQoSIfCarOverflowByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarOverflowByteRate.setStatus('current')
hwXQoSIfCarPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarPassedPackets.setStatus('current')
hwXQoSIfCarPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarPassedBytes.setStatus('current')
hwXQoSIfCarDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarDiscardedPackets.setStatus('current')
hwXQoSIfCarDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 9, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfCarDiscardedBytes.setStatus('current')
hwXQoSIfOutboundQueueStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 10), )
if mibBuilder.loadTexts: hwXQoSIfOutboundQueueStatisticTable.setStatus('current')
hwXQoSIfOutboundQueueStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 10, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfExtIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfQueIndex"))
if mibBuilder.loadTexts: hwXQoSIfOutboundQueueStatisticEntry.setStatus('current')
hwXQoSIfExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 10, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwXQoSIfExtIndex.setStatus('current')
hwXQoSIfQueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 10, 1, 2), OctetString())
if mibBuilder.loadTexts: hwXQoSIfQueIndex.setStatus('current')
hwXQoSIfQueDiscardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 3, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfQueDiscardPackets.setStatus('current')
hwXQoSVlanStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4))
hwXQosVlanStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1), )
if mibBuilder.loadTexts: hwXQosVlanStatTable.setStatus('current')
hwXQosVlanStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQosVlanStatVlanId"))
if mibBuilder.loadTexts: hwXQosVlanStatEntry.setStatus('current')
hwXQosVlanStatVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), )))
if mibBuilder.loadTexts: hwXQosVlanStatVlanId.setStatus('current')
hwXQosVlanStatInTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInTotalPkts.setStatus('current')
hwXQosVlanStatInTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInTotalBytes.setStatus('current')
hwXQosVlanStatOutTotalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutTotalPkts.setStatus('current')
hwXQosVlanStatOutTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutTotalBytes.setStatus('current')
hwXQosVlanStatInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInUcastPkts.setStatus('current')
hwXQosVlanStatInUcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInUcastBytes.setStatus('current')
hwXQosVlanStatOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutUcastPkts.setStatus('current')
hwXQosVlanStatOutUcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutUcastBytes.setStatus('current')
hwXQosVlanStatInMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInMcastPkts.setStatus('current')
hwXQosVlanStatInMcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInMcastBytes.setStatus('current')
hwXQosVlanStatOutMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutMcastPkts.setStatus('current')
hwXQosVlanStatOutMcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutMcastBytes.setStatus('current')
hwXQosVlanStatInBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInBcastPkts.setStatus('current')
hwXQosVlanStatInBcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInBcastBytes.setStatus('current')
hwXQosVlanStatOutBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutBcastPkts.setStatus('current')
hwXQosVlanStatOutBcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatOutBcastBytes.setStatus('current')
hwXQosVlanStatInUnknownUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInUnknownUcastPkts.setStatus('current')
hwXQosVlanStatInUnknownUcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosVlanStatInUnknownUcastBytes.setStatus('current')
hwXQosVlanStatResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 4, 4, 1, 1, 20), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQosVlanStatResetFlag.setStatus('current')
hwXQoSGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5))
hwXQoSSoftCarCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 1), )
if mibBuilder.loadTexts: hwXQoSSoftCarCfgTable.setStatus('current')
hwXQoSSoftCarCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSSoftCarIndex"))
if mibBuilder.loadTexts: hwXQoSSoftCarCfgEntry.setStatus('current')
hwXQoSSoftCarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534)))
if mibBuilder.loadTexts: hwXQoSSoftCarIndex.setStatus('current')
hwXQoSSoftCarName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSSoftCarName.setStatus('current')
hwXQoSSoftCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSSoftCarCir.setStatus('current')
hwXQoSSoftCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSSoftCarCbs.setStatus('current')
hwXQoSSoftCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSSoftCarRowStatus.setStatus('current')
hwXQoSGlobalWredClassCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 2), )
if mibBuilder.loadTexts: hwXQoSGlobalWredClassCfgTable.setStatus('current')
hwXQoSGlobalWredClassCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 2, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSGlobalWredClassIndex"))
if mibBuilder.loadTexts: hwXQoSGlobalWredClassCfgEntry.setStatus('current')
hwXQoSGlobalWredClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwXQoSGlobalWredClassIndex.setStatus('current')
hwXQoSGlobalWredClassLowlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredClassLowlimit.setStatus('current')
hwXQoSGlobalWredClassHighlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredClassHighlimit.setStatus('current')
hwXQoSGlobalWredClassDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredClassDiscardProbability.setStatus('current')
hwXQoSGlobalWredClassSetDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredClassSetDefault.setStatus('current')
hwXQoSGlobalWredTypeCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3), )
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeCfgTable.setStatus('current')
hwXQoSGlobalWredTypeCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSGlobalWredTypeIndex"))
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeCfgEntry.setStatus('current')
hwXQoSGlobalWredTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeIndex.setStatus('current')
hwXQoSGlobalWredTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeName.setStatus('current')
hwXQoSGlobalWredTypeLowlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeLowlimit.setStatus('current')
hwXQoSGlobalWredTypeHighlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeHighlimit.setStatus('current')
hwXQoSGlobalWredTypeDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeDiscardProbability.setStatus('current')
hwXQoSGlobalWredTypeSetDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSGlobalWredTypeSetDefault.setStatus('current')
hwXQoSVlanBcastSuppressTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 4), )
if mibBuilder.loadTexts: hwXQoSVlanBcastSuppressTable.setStatus('current')
hwXQoSVlanBcastSuppressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 4, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSVlanBcastSuppressVlanId"))
if mibBuilder.loadTexts: hwXQoSVlanBcastSuppressEntry.setStatus('current')
hwXQoSVlanBcastSuppressVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwXQoSVlanBcastSuppressVlanId.setStatus('current')
hwXQoSVlanBcastSuppressValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSVlanBcastSuppressValue.setStatus('current')
hwXQoSVlanBcastSuppressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSVlanBcastSuppressRowStatus.setStatus('current')
hwXQoSScheduleProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5), )
if mibBuilder.loadTexts: hwXQoSScheduleProfileTable.setStatus('current')
hwXQoSScheduleProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSScheduleProfileName"))
if mibBuilder.loadTexts: hwXQoSScheduleProfileEntry.setStatus('current')
hwXQoSScheduleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwXQoSScheduleProfileName.setStatus('current')
hwXQoSScheduleQueueMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5, 6))).clone(namedValues=NamedValues(("pq", 1), ("wrr", 3), ("wfq", 4), ("default", 5), ("drr", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueMode.setStatus('current')
hwXQoSScheduleQueueBeWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueBeWeight.setStatus('current')
hwXQoSScheduleQueueAf1Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueAf1Weight.setStatus('current')
hwXQoSScheduleQueueAf2Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueAf2Weight.setStatus('current')
hwXQoSScheduleQueueAf3Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueAf3Weight.setStatus('current')
hwXQoSScheduleQueueAf4Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueAf4Weight.setStatus('current')
hwXQoSScheduleQueueCs6Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueCs6Weight.setStatus('current')
hwXQoSScheduleQueueCs7Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueCs7Weight.setStatus('current')
hwXQoSScheduleQueueEfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSScheduleQueueEfWeight.setStatus('current')
hwXQoSScheduleProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 5, 5, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSScheduleProfileRowStatus.setStatus('current')
hwXQoSCpDefendObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6))
hwXQoSCpDefendStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1), )
if mibBuilder.loadTexts: hwXQoSCpDefendStatisticsTable.setStatus('current')
hwXQoSCpDefendStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCpDefendChassisID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCpDefendSlotId"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCpDefendObjectIndex"))
if mibBuilder.loadTexts: hwXQoSCpDefendStatisticsEntry.setStatus('current')
hwXQoSCpDefendSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hwXQoSCpDefendSlotId.setStatus('current')
hwXQoSCpDefendObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511)))
if mibBuilder.loadTexts: hwXQoSCpDefendObjectIndex.setStatus('current')
hwXQoSCpDefendPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendPassedPackets.setStatus('current')
hwXQoSCpDefendPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendPassedBytes.setStatus('current')
hwXQoSCpDefendPassedPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendPassedPacketRate.setStatus('current')
hwXQoSCpDefendPassedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendPassedByteRate.setStatus('current')
hwXQoSCpDefendDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedPackets.setStatus('current')
hwXQoSCpDefendDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedBytes.setStatus('current')
hwXQoSCpDefendDiscardedPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedPacketRate.setStatus('current')
hwXQoSCpDefendDiscardedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedByteRate.setStatus('current')
hwXQoSCpDefendDiscardedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedThreshold.setStatus('current')
hwXQoSCpDefendChassisID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hwXQoSCpDefendChassisID.setStatus('current')
hwXQoSUrpfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 7))
hwXQoSUrpfDiscardStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 7, 1), )
if mibBuilder.loadTexts: hwXQoSUrpfDiscardStatisticsTable.setStatus('current')
hwXQoSUrpfDiscardStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 7, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSUrpfSlotPhysicalIndex"))
if mibBuilder.loadTexts: hwXQoSUrpfDiscardStatisticsEntry.setStatus('current')
hwXQoSUrpfSlotPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 7, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwXQoSUrpfSlotPhysicalIndex.setStatus('current')
hwXQoSUrpfDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 7, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSUrpfDiscardedPackets.setStatus('current')
hwXQoSVlanCfgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 8))
hwXQoSVlanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 8, 1), )
if mibBuilder.loadTexts: hwXQoSVlanCfgTable.setStatus('current')
hwXQoSVlanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 8, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQosVlanStatVlanId"))
if mibBuilder.loadTexts: hwXQoSVlanCfgEntry.setStatus('current')
hwXQoSVlanStatEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 8, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSVlanStatEnable.setStatus('current')
hwXQoSRedirectNextHopObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 9))
hwXQoSRedirectNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 9, 1), )
if mibBuilder.loadTexts: hwXQoSRedirectNextHopTable.setStatus('current')
hwXQoSRedirectNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 9, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopBehaviorName"))
if mibBuilder.loadTexts: hwXQoSRedirectNextHopEntry.setStatus('current')
hwXQoSRedirectNextHopBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 9, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hwXQoSRedirectNextHopBehaviorName.setStatus('current')
hwXQoSRedirectNextHopOldIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 9, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSRedirectNextHopOldIp.setStatus('current')
hwXQoSRedirectNextHopNewIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 9, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSRedirectNextHopNewIp.setStatus('current')
hwXQoSIrsmDefendObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10))
hwXQoSIrsmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1), )
if mibBuilder.loadTexts: hwXQoSIrsmTable.setStatus('current')
hwXQoSIrsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIrsmSourceAddress"))
if mibBuilder.loadTexts: hwXQoSIrsmEntry.setStatus('current')
hwXQoSIrsmSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmSourceAddress.setStatus('current')
hwXQoSIrsmGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmGroupAddress.setStatus('current')
hwXQoSIrsmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmTime.setStatus('current')
hwXQoSIrsmDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmDelay.setStatus('current')
hwXQoSIrsmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmThreshold.setStatus('current')
hwXQoSIrsmUpstream = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmUpstream.setStatus('current')
hwXQoSIrsmLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmLocal.setStatus('current')
hwXQoSIrsmTotalPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmTotalPacket.setStatus('current')
hwXQoSIrsmDropPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 10, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIrsmDropPacket.setStatus('current')
hwXQoSNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11))
hwXQoSCpDefendDiscardedRateAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 1)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedPacketRate"))
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedRateAlarm.setStatus('current')
hwXQoSQueueDiscardThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 2)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSFrameId"), ("HUAWEI-XQoS-MIB", "hwXQoSSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSPortId"), ("HUAWEI-XQoS-MIB", "hwXQoSTrapIfName"), ("HUAWEI-XQoS-MIB", "hwXQoSTrapQueueId"), ("HUAWEI-XQoS-MIB", "hwXQoSTrapDiscardPackets"))
if mibBuilder.loadTexts: hwXQoSQueueDiscardThresholdTrap.setStatus('current')
hwXQoSCpDefendDiscardedPacketAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 3)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpDefendSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendObjectIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedThreshold"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendChassisID"))
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedPacketAlarm.setStatus('current')
hwXQoSCpDefendDiscardedPacketAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 4)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpDefendSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendObjectIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedThreshold"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendChassisID"))
if mibBuilder.loadTexts: hwXQoSCpDefendDiscardedPacketAlarmClear.setStatus('current')
hwXQoSCprlDiscardedPacketAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 5)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitPeVidValue"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitCeVidBegin"))
if mibBuilder.loadTexts: hwXQoSCprlDiscardedPacketAlarm.setStatus('current')
hwXQoSCprlDiscardedPacketAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 6)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitPeVidValue"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitCeVidBegin"))
if mibBuilder.loadTexts: hwXQoSCprlDiscardedPacketAlarmClear.setStatus('current')
hwXQoSRedirectNextHopChangedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 7)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopBehaviorName"), ("HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopOldIp"), ("HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopNewIp"))
if mibBuilder.loadTexts: hwXQoSRedirectNextHopChangedAlarm.setStatus('current')
hwXQoSIrsmDelayAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 8)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIrsmSourceAddress"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmGroupAddress"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmTime"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmDelay"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmThreshold"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmUpstream"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmLocal"))
if mibBuilder.loadTexts: hwXQoSIrsmDelayAlarm.setStatus('current')
hwXQoSIrsmDropPacketAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 9)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIrsmSourceAddress"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmGroupAddress"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmTime"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmTotalPacket"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmDropPacket"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmUpstream"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmLocal"))
if mibBuilder.loadTexts: hwXQoSIrsmDropPacketAlarm.setStatus('current')
hwXQoSIrsmSynFrameDropAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 10)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIrsmSourceAddress"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmGroupAddress"), ("HUAWEI-XQoS-MIB", "hwXQoSIrsmTime"))
if mibBuilder.loadTexts: hwXQoSIrsmSynFrameDropAlarm.setStatus('current')
hwXQoSRuleFaileAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 11)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSRuleFailInfo"))
if mibBuilder.loadTexts: hwXQoSRuleFaileAlarm.setStatus('current')
hwXQoSProfileUsedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 12)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSProfileName"))
if mibBuilder.loadTexts: hwXQoSProfileUsedAlarm.setStatus('current')
hwXQoSPortQueueAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 13)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPortQueueAlarmIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueAlarmQueue"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueAlarmTrunkIndex"))
if mibBuilder.loadTexts: hwXQoSPortQueueAlarm.setStatus('current')
hwXQoSPortQueueAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 14)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPortQueueAlarmIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueAlarmQueue"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueAlarmTrunkIndex"))
if mibBuilder.loadTexts: hwXQoSPortQueueAlarmClear.setStatus('current')
hwXQoSSecurityStormControlInterfaceTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 15)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSSecurityStormControlInterfaceChassisId"), ("HUAWEI-XQoS-MIB", "hwXQoSSecurityStormControlInterfaceSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSSecurityStormControlInterfaceName"), ("HUAWEI-XQoS-MIB", "hwXQoSSecurityStormControlInterfaceVlan"))
if mibBuilder.loadTexts: hwXQoSSecurityStormControlInterfaceTrap.setStatus('current')
hwXQoSResouceNotEnoughAlarmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22))
hwXQoSStatResouceNotEnoughAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 16)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSStatResouceNotEnoughSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSStatResouceNotEnoughStatType"))
if mibBuilder.loadTexts: hwXQoSStatResouceNotEnoughAlarm.setStatus('current')
hwXQoSCARResouceNotEnoughAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 11, 17)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCARResouceNotEnoughSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSCARResouceNotEnoughCARType"))
if mibBuilder.loadTexts: hwXQoSCARResouceNotEnoughAlarm.setStatus('current')
hwXQoSGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 12))
hwXQoSFrameId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSFrameId.setStatus('current')
hwXQoSSlotId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSSlotId.setStatus('current')
hwXQoSPortId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortId.setStatus('current')
hwXQoSTrapIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 12, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSTrapIfName.setStatus('current')
hwXQoSTrapQueueId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSTrapQueueId.setStatus('current')
hwXQoSTrapDiscardPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 12, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSTrapDiscardPackets.setStatus('current')
hwXQoSStormControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13))
hwXQoSStormControlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1), )
if mibBuilder.loadTexts: hwXQoSStormControlTable.setStatus('current')
hwXQoSStormControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSStormControlIfIndex"))
if mibBuilder.loadTexts: hwXQoSStormControlEntry.setStatus('current')
hwXQoSStormControlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwXQoSStormControlIfIndex.setStatus('current')
hwXQoSStormControlBroadcastMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14881000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlBroadcastMinRate.setStatus('current')
hwXQoSStormControlBroadcastMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14881000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlBroadcastMaxRate.setStatus('current')
hwXQoSStormControlMulticastMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14881000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlMulticastMinRate.setStatus('current')
hwXQoSStormControlMulticastMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14881000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlMulticastMaxRate.setStatus('current')
hwXQoSStormControlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("block", 2), ("shutdown", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlAction.setStatus('current')
hwXQoSStormControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 180)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlInterval.setStatus('current')
hwXQoSStormControlTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 8), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlTrapEnable.setStatus('current')
hwXQoSStormControlLogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 9), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlLogEnable.setStatus('current')
hwXQoSStormControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("normal", 1), ("broadcastBlocked", 2), ("multicastBlocked", 3), ("bothBlocked", 4), ("shutdown", 5), ("unicastBlocked", 6), ("allBlocked", 7), ("bcmcBlocked", 8), ("bcucBlocked", 9), ("ucmcBlocked", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSStormControlStatus.setStatus('current')
hwXQoSStormControlUnicastMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14881000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlUnicastMinRate.setStatus('current')
hwXQoSStormControlUnicastMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14881000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlUnicastMaxRate.setStatus('current')
hwXQoSStormControlBcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("pps", 0), ("kbps", 1), ("percent", 2), ("none", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlBcMode.setStatus('current')
hwXQoSStormControlMcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("pps", 0), ("kbps", 1), ("percent", 2), ("none", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlMcMode.setStatus('current')
hwXQoSStormControlUcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("pps", 0), ("kbps", 1), ("percent", 2), ("none", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSStormControlUcMode.setStatus('current')
hwXQoSStormControlNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 14))
hwXQoSStormControlTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 14, 1)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSStormControlBroadcastMinRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlBroadcastMaxRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlMulticastMinRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlMulticastMaxRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlAction"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlInterval"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlStatus"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlUnicastMinRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlUnicastMaxRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlBcMode"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlMcMode"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlUcMode"))
if mibBuilder.loadTexts: hwXQoSStormControlTrap.setStatus('current')
hwXQoSQueueStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15))
hwXQoSQueueStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1), )
if mibBuilder.loadTexts: hwXQoSQueueStatisticsTable.setStatus('current')
hwXQoSQueueStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsIngressIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsEgressIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwXQoSQueueStatisticsEntry.setStatus('current')
hwXQoSQueueStatisticsIngressIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwXQoSQueueStatisticsIngressIfIndex.setStatus('current')
hwXQoSQueueStatisticsEgressIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwXQoSQueueStatisticsEgressIfIndex.setStatus('current')
hwXQoSQueueStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))))
if mibBuilder.loadTexts: hwXQoSQueueStatisticsQueueIndex.setStatus('current')
hwXQoSQueueStatisticsPassedPacketsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQueueStatisticsPassedPacketsCount.setStatus('current')
hwXQosQueueStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQosQueueStatisticsReset.setStatus('current')
hwXQoSQueueStatisticsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 15, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSQueueStatisticsRowStatus.setStatus('current')
hwXQoSPortStatisticsDropObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 16))
hwXQoSPortStatisticsDropTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 16, 1), )
if mibBuilder.loadTexts: hwXQoSPortStatisticsDropTable.setStatus('current')
hwXQoSPortStatisticsDropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 16, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSPortStatisticsDropIfIndex"))
if mibBuilder.loadTexts: hwXQoSPortStatisticsDropEntry.setStatus('current')
hwXQoSPortStatisticsDropIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 16, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwXQoSPortStatisticsDropIfIndex.setStatus('current')
hwXQoSPortStatisticsDropPacketsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 16, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSPortStatisticsDropPacketsCount.setStatus('current')
hwXQosPortStatisticsDropReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQosPortStatisticsDropReset.setStatus('current')
hwXQosPortStatisticsDropResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 16, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosPortStatisticsDropResetTime.setStatus('current')
hwXQoSQueueStatisticsDropObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17))
hwXQoSQueueStatisticsDropTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17, 1), )
if mibBuilder.loadTexts: hwXQoSQueueStatisticsDropTable.setStatus('current')
hwXQoSQueueStatisticsDropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsDropIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsDropQueueIndex"))
if mibBuilder.loadTexts: hwXQoSQueueStatisticsDropEntry.setStatus('current')
hwXQoSQueueStatisticsDropIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwXQoSQueueStatisticsDropIfIndex.setStatus('current')
hwXQoSQueueStatisticsDropQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))))
if mibBuilder.loadTexts: hwXQoSQueueStatisticsDropQueueIndex.setStatus('current')
hwXQoSQueueStatisticsDropPacketsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQueueStatisticsDropPacketsCount.setStatus('current')
hwXQosQueueStatisticsDropReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQosQueueStatisticsDropReset.setStatus('current')
hwXQosQueueStatisticsDropResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 17, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQosQueueStatisticsDropResetTime.setStatus('current')
hwXQoSRuleFailObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 18))
hwXQoSRuleFailTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 18, 1), )
if mibBuilder.loadTexts: hwXQoSRuleFailTable.setStatus('current')
hwXQoSRuleFailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 18, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSRuleFailInfo"))
if mibBuilder.loadTexts: hwXQoSRuleFailEntry.setStatus('current')
hwXQoSRuleFailInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 18, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hwXQoSRuleFailInfo.setStatus('current')
hwXQoSProfileObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 19))
hwXQoSProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 19, 1), )
if mibBuilder.loadTexts: hwXQoSProfileTable.setStatus('current')
hwXQoSProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 19, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSProfileName"))
if mibBuilder.loadTexts: hwXQoSProfileEntry.setStatus('current')
hwXQoSProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 19, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwXQoSProfileName.setStatus('current')
hwXQoSPortQueueAlarmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 20))
hwXQoSPortQueueAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 20, 1), )
if mibBuilder.loadTexts: hwXQoSPortQueueAlarmTable.setStatus('current')
hwXQoSPortQueueAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 20, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSPortQueueAlarmIfIndex"))
if mibBuilder.loadTexts: hwXQoSPortQueueAlarmEntry.setStatus('current')
hwXQoSPortQueueAlarmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 20, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwXQoSPortQueueAlarmIfIndex.setStatus('current')
hwXQoSPortQueueAlarmQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 20, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSPortQueueAlarmQueue.setStatus('current')
hwXQoSPortQueueAlarmTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 20, 1, 1, 3), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSPortQueueAlarmTrunkIndex.setStatus('current')
hwXQoSStatResouceNotEnoughAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 1), )
if mibBuilder.loadTexts: hwXQoSStatResouceNotEnoughAlarmTable.setStatus('current')
hwXQoSStatResouceNotEnoughAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSStatResouceNotEnoughSlotId"), (0, "HUAWEI-XQoS-MIB", "hwXQoSStatResouceNotEnoughStatType"))
if mibBuilder.loadTexts: hwXQoSStatResouceNotEnoughAlarmEntry.setStatus('current')
hwXQoSStatResouceNotEnoughSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwXQoSStatResouceNotEnoughSlotId.setStatus('current')
hwXQoSStatResouceNotEnoughStatType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511)))
if mibBuilder.loadTexts: hwXQoSStatResouceNotEnoughStatType.setStatus('current')
hwXQoSCARResouceNotEnoughAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 2), )
if mibBuilder.loadTexts: hwXQoSCARResouceNotEnoughAlarmTable.setStatus('current')
hwXQoSCARResouceNotEnoughAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 2, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSCARResouceNotEnoughSlotId"), (0, "HUAWEI-XQoS-MIB", "hwXQoSCARResouceNotEnoughCARType"))
if mibBuilder.loadTexts: hwXQoSCARResouceNotEnoughAlarmEntry.setStatus('current')
hwXQoSCARResouceNotEnoughSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwXQoSCARResouceNotEnoughSlotId.setStatus('current')
hwXQoSCARResouceNotEnoughCARType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 22, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511)))
if mibBuilder.loadTexts: hwXQoSCARResouceNotEnoughCARType.setStatus('current')
hwXQoSQppbPolicyStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37), )
if mibBuilder.loadTexts: hwXQoSQppbPolicyStatisticsTable.setStatus('current')
hwXQoSQppbPolicyStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyLocalID"), (0, "HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyDirection"), (0, "HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyStatisticsInterfaceIndex"))
if mibBuilder.loadTexts: hwXQoSQppbPolicyStatisticsEntry.setStatus('current')
hwXQoSQppbPolicyLocalID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyLocalID.setStatus('current')
hwXQoSQppbPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyDirection.setStatus('current')
hwXQoSQppbPolicyStatisticsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyStatisticsInterfaceIndex.setStatus('current')
hwXQoSQppbPolicyStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwXQoSQppbPolicyStatisticsReset.setStatus('current')
hwXQoSQppbPolicyMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyMatchedPackets.setStatus('current')
hwXQoSQppbPolicyMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyMatchedBytes.setStatus('current')
hwXQoSQppbPolicyPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyPassedPackets.setStatus('current')
hwXQoSQppbPolicyPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyPassedBytes.setStatus('current')
hwXQoSQppbPolicyDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyDropedPackets.setStatus('current')
hwXQoSQppbPolicyDropedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyDropedBytes.setStatus('current')
hwXQoSQppbPolicyMatchPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyMatchPacketsRate.setStatus('current')
hwXQoSQppbPolicyMatchBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 37, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSQppbPolicyMatchBytesRate.setStatus('current')
hwXQoSIfPhbEnableTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 38), )
if mibBuilder.loadTexts: hwXQoSIfPhbEnableTable.setStatus('current')
hwXQoSIfPhbEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 38, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfPhbEnableIfIndex"), (0, "HUAWEI-XQoS-MIB", "hwXQoSIfPhbEnableVlanId"))
if mibBuilder.loadTexts: hwXQoSIfPhbEnableEntry.setStatus('current')
hwXQoSIfPhbEnableIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 38, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfPhbEnableIfIndex.setStatus('current')
hwXQoSIfPhbEnableVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 38, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfPhbEnableVlanId.setStatus('current')
hwXQoSIfPhbEnableDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 38, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfPhbEnableDomainName.setStatus('current')
hwXQoSIfPhbEnableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 38, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfPhbEnableRowStatus.setStatus('current')
hwXQoSIfRemarkDscpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 39), )
if mibBuilder.loadTexts: hwXQoSIfRemarkDscpTable.setStatus('current')
hwXQoSIfRemarkDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 39, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSIfRemarkDscpIfIndex"))
if mibBuilder.loadTexts: hwXQoSIfRemarkDscpEntry.setStatus('current')
hwXQoSIfRemarkDscpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 39, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSIfRemarkDscpIfIndex.setStatus('current')
hwXQoSIfRemarkDscpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 1, 39, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwXQoSIfRemarkDscpRowStatus.setStatus('current')
hwXQoSCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 1))
hwXQoSGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2))
hwXQoSCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 1, 1)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfQueueGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarStatisticsGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendStatisticsGroup"), ("HUAWEI-XQoS-MIB", "hwNotificationExtGroup"), ("HUAWEI-XQoS-MIB", "hwXQosAtmTrafficQueueGroup"), ("HUAWEI-XQoS-MIB", "hwXQosAtmPvcServiceTypeGroup"), ("HUAWEI-XQoS-MIB", "hwXQosIfOutboundQueueStatisticGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSBaGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pPhbGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pMapGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpPhbGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpMapGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpPhbGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpMapGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrust8021pGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSCommonInboundGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSPppInboundGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSServiceclassGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSPhbGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSFieldDeiGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSPicForwardingGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSCarTableGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSPortShapingGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsGroup"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSCompliance = hwXQoSCompliance.setStatus('current')
hwXQoSIfQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 1)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfQueueIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueVlanID"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueCosType"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueuePassedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueuePassededBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueTotalPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueTotalBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueDiscardedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueDiscardedBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueuePassedPacketRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueuePassedByteRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueDiscardedPacketRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueDiscardedByteRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueResetFlag"), ("HUAWEI-XQoS-MIB", "hwXQoSIfQueueUsagePercentage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSIfQueueGroup = hwXQoSIfQueueGroup.setStatus('current')
hwXQoSIfCarStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 2)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfCarConformedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarConformedBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarConformedPacketRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarConformedByteRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarExceededPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarExceededBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarExceededPacketRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarExceededByteRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarOverflowPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarOverflowBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarOverflowPacketRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarOverflowByteRate"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarPassedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarPassedBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarDiscardedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSIfCarDiscardedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSIfCarStatisticsGroup = hwXQoSIfCarStatisticsGroup.setStatus('current')
hwXQoSCpDefendStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 3)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpDefendSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendObjectIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendPassedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendPassedBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendPassedPacketRate"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendPassedByteRate"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedPacketRate"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedByteRate"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedThreshold"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendChassisID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSCpDefendStatisticsGroup = hwXQoSCpDefendStatisticsGroup.setStatus('current')
hwNotificationExtGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 4)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedRateAlarm"), ("HUAWEI-XQoS-MIB", "hwXQoSCpDefendDiscardedPacketAlarm"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueDiscardThresholdTrap"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlTrap"), ("HUAWEI-XQoS-MIB", "hwXQoSCprlDiscardedPacketAlarm"), ("HUAWEI-XQoS-MIB", "hwXQoSCprlDiscardedPacketAlarmClear"), ("HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopChangedAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwNotificationExtGroup = hwNotificationExtGroup.setStatus('current')
hwXQoSGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 5)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSFrameId"), ("HUAWEI-XQoS-MIB", "hwXQoSSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSPortId"), ("HUAWEI-XQoS-MIB", "hwXQoSTrapIfName"), ("HUAWEI-XQoS-MIB", "hwXQoSTrapQueueId"), ("HUAWEI-XQoS-MIB", "hwXQoSTrapDiscardPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSGeneralGroup = hwXQoSGeneralGroup.setStatus('current')
hwXQoSSredGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 6)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfSredQueueIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSIfSredRedStartDiscardPoint"), ("HUAWEI-XQoS-MIB", "hwXQoSIfSredRedDiscardProbability"), ("HUAWEI-XQoS-MIB", "hwXQoSIfSredYellowStartDiscardPoint"), ("HUAWEI-XQoS-MIB", "hwXQoSIfSredYellowDiscardProbability"), ("HUAWEI-XQoS-MIB", "hwXQoSIfSredRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSSredGroup = hwXQoSSredGroup.setStatus('current')
hwXQosAtmTrafficQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 7)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSAtmTrafficQueueServiceClass"), ("HUAWEI-XQoS-MIB", "hwXQoSAtmTrafficQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQosAtmTrafficQueueGroup = hwXQosAtmTrafficQueueGroup.setStatus('current')
hwXQosAtmPvcServiceTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 8)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSAtmPvcNameServiceTypeIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSAtmPvcServiceType"), ("HUAWEI-XQoS-MIB", "hwXQoSAtmPvcPcr"), ("HUAWEI-XQoS-MIB", "hwXQoSAtmPvcCdvt"), ("HUAWEI-XQoS-MIB", "hwXQoSAtmPvcVbrScr"), ("HUAWEI-XQoS-MIB", "hwXQoSAtmPvcVbrMbs"), ("HUAWEI-XQoS-MIB", "hwXQoSAtmPvcRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQosAtmPvcServiceTypeGroup = hwXQosAtmPvcServiceTypeGroup.setStatus('current')
hwXQosIfOutboundQueueStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 9)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfQueDiscardPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQosIfOutboundQueueStatisticGroup = hwXQosIfOutboundQueueStatisticGroup.setStatus('current')
hwXQoSShapingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 10)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfShapingIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSIfShapingQueueIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSIfShapingQueueCir"), ("HUAWEI-XQoS-MIB", "hwXQoSIfShapingQueuePir"), ("HUAWEI-XQoS-MIB", "hwXQoSIfShapingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSShapingGroup = hwXQoSShapingGroup.setStatus('current')
hwXQoSUrpfDiscardStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 11)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSUrpfSlotPhysicalIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSUrpfDiscardedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSUrpfDiscardStatisticsGroup = hwXQoSUrpfDiscardStatisticsGroup.setStatus('current')
hwXQoSBaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 12)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBaIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSBaName"), ("HUAWEI-XQoS-MIB", "hwXQoSBaRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBaGroup = hwXQoSBaGroup.setStatus('current')
hwXQoSBa8021pPhbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 13)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBa8021pPhbIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pPhbPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pPhbCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pPhbColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pPhbRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBa8021pPhbGroup = hwXQoSBa8021pPhbGroup.setStatus('current')
hwXQoSBa8021pMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 14)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBa8021pMapIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pMapCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pMapColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pMapPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBa8021pMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBa8021pMapGroup = hwXQoSBa8021pMapGroup.setStatus('current')
hwXQoSBaDscpPhbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 15)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBaDscpPhbIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpPhbPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpPhbCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpPhbColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpPhbRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBaDscpPhbGroup = hwXQoSBaDscpPhbGroup.setStatus('current')
hwXQoSBaDscpMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 16)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBaDscpMapIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpMapCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpMapColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpMapPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBaDscpMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBaDscpMapGroup = hwXQoSBaDscpMapGroup.setStatus('current')
hwXQoSBaExpPhbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 17)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBaExpPhbIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpPhbPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpPhbCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpPhbColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpPhbRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBaExpPhbGroup = hwXQoSBaExpPhbGroup.setStatus('current')
hwXQoSBaExpMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 18)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBaExpMapIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpMapCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpMapColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpMapPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBaExpMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBaExpMapGroup = hwXQoSBaExpMapGroup.setStatus('current')
hwXQoSIfDiffDomainGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 19)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainVlanId"), ("HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainName"), ("HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainRowStatus"), ("HUAWEI-XQoS-MIB", "hwXQoSIfDiffDomainVlanId2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSIfDiffDomainGroup = hwXQoSIfDiffDomainGroup.setStatus('current')
hwXQoSBaPhbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 20)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBaPhbType"), ("HUAWEI-XQoS-MIB", "hwXQoSBaPhbPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBaPhbCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBaPhbColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBaPhbRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBaPhbGroup = hwXQoSBaPhbGroup.setStatus('current')
hwXQoSBaMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 21)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSBaMapType"), ("HUAWEI-XQoS-MIB", "hwXQoSBaMapCos"), ("HUAWEI-XQoS-MIB", "hwXQoSBaMapColour"), ("HUAWEI-XQoS-MIB", "hwXQoSBaMapPri"), ("HUAWEI-XQoS-MIB", "hwXQoSBaMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSBaMapGroup = hwXQoSBaMapGroup.setStatus('current')
hwXQoSIfTrustGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 22)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfTrustIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrustVlanID1"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrustVlanID2"), ("HUAWEI-XQoS-MIB", "hwXQoSBaType"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrustAction"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrustRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSIfTrustGroup = hwXQoSIfTrustGroup.setStatus('current')
hwXQosVlanStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 23)).setObjects(("HUAWEI-XQoS-MIB", "hwXQosVlanStatInTotalPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInTotalBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutTotalPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutTotalBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInUcastPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInUcastBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutUcastPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutUcastBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInMcastPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInMcastBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutMcastPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutMcastBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInBcastPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInBcastBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutBcastPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatOutBcastBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInUnknownUcastPkts"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatInUnknownUcastBytes"), ("HUAWEI-XQoS-MIB", "hwXQosVlanStatResetFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQosVlanStatGroup = hwXQosVlanStatGroup.setStatus('current')
hwXQoSVlanCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 24)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSVlanStatEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSVlanCfgGroup = hwXQoSVlanCfgGroup.setStatus('current')
hwXQoSStormControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 25)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSStormControlBroadcastMinRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlBroadcastMaxRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlMulticastMinRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlMulticastMaxRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlAction"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlInterval"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlTrapEnable"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlLogEnable"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlStatus"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlUnicastMinRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlUnicastMaxRate"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlBcMode"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlMcMode"), ("HUAWEI-XQoS-MIB", "hwXQoSStormControlUcMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSStormControlGroup = hwXQoSStormControlGroup.setStatus('current')
hwXQoSQueueStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 26)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsPassedPacketsCount"), ("HUAWEI-XQoS-MIB", "hwXQosQueueStatisticsReset"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSQueueStatisticsGroup = hwXQoSQueueStatisticsGroup.setStatus('current')
hwXQoSIfPppoeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 27)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfPppoeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSIfPppoeGroup = hwXQoSIfPppoeGroup.setStatus('current')
hwXQoSVlanBcastSuppressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 28)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSVlanBcastSuppressValue"), ("HUAWEI-XQoS-MIB", "hwXQoSVlanBcastSuppressRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSVlanBcastSuppressGroup = hwXQoSVlanBcastSuppressGroup.setStatus('current')
hwXQoSRedirectNextHopGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 29)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopBehaviorName"), ("HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopOldIp"), ("HUAWEI-XQoS-MIB", "hwXQoSRedirectNextHopNewIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSRedirectNextHopGroup = hwXQoSRedirectNextHopGroup.setStatus('current')
hwXQoSIfTrust8021pGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 30)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfTrust8021pIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrust8021pVlanID"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrust8021pAction"), ("HUAWEI-XQoS-MIB", "hwXQoSIfTrust8021pRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSIfTrust8021pGroup = hwXQoSIfTrust8021pGroup.setStatus('current')
hwXQoSCommonInboundGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 31)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCommonInboundPhbIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCommonInboundPhbCos"), ("HUAWEI-XQoS-MIB", "hwXQoSCommonInboundPhbColor"), ("HUAWEI-XQoS-MIB", "hwXQoSCommonInboundPhbPri"), ("HUAWEI-XQoS-MIB", "hwXQoSCommonInboundRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSCommonInboundGroup = hwXQoSCommonInboundGroup.setStatus('current')
hwXQoSPppInboundGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 32)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPppInboundCos"), ("HUAWEI-XQoS-MIB", "hwXQoSPppInboundColor"), ("HUAWEI-XQoS-MIB", "hwXQoSPppInboundRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSPppInboundGroup = hwXQoSPppInboundGroup.setStatus('current')
hwXQoSServiceclassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 33)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSServiceclassPort"), ("HUAWEI-XQoS-MIB", "hwXQoSServiceclass"), ("HUAWEI-XQoS-MIB", "hwXQoSServiceclassRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSServiceclassGroup = hwXQoSServiceclassGroup.setStatus('current')
hwXQoSPhbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 34)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPhbPort"), ("HUAWEI-XQoS-MIB", "hwXQoSPhbEnable"), ("HUAWEI-XQoS-MIB", "hwXQoSPhbRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSPhbGroup = hwXQoSPhbGroup.setStatus('current')
hwXQoSFieldDeiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 35)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSFieldDeiInterface"), ("HUAWEI-XQoS-MIB", "hwXQoSFieldDeiVlanId"), ("HUAWEI-XQoS-MIB", "hwXQoSFieldDeiEnabled"), ("HUAWEI-XQoS-MIB", "hwXQoSFieldDeiRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSFieldDeiGroup = hwXQoSFieldDeiGroup.setStatus('current')
hwXQoSPicForwardingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 36)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPicForwardingInterface"), ("HUAWEI-XQoS-MIB", "hwXQoSPicForwarding8021pValue"), ("HUAWEI-XQoS-MIB", "hwXQoSPicForwardingPriority"), ("HUAWEI-XQoS-MIB", "hwXQoSPicForwardingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSPicForwardingGroup = hwXQoSPicForwardingGroup.setStatus('current')
hwXQoSCarTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 37)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCarInterfaceIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCarDirection"), ("HUAWEI-XQoS-MIB", "hwXQoSCarVlanID"), ("HUAWEI-XQoS-MIB", "hwXQoSCarCirValue"), ("HUAWEI-XQoS-MIB", "hwXQoSCarPirValue"), ("HUAWEI-XQoS-MIB", "hwXQoSCarCbsValue"), ("HUAWEI-XQoS-MIB", "hwXQoSCarPbsValue"), ("HUAWEI-XQoS-MIB", "hwXQoSCarGreenAction"), ("HUAWEI-XQoS-MIB", "hwXQoSCarGreenServiceClass"), ("HUAWEI-XQoS-MIB", "hwXQoSCarGreenColor"), ("HUAWEI-XQoS-MIB", "hwXQoSCarYellowAction"), ("HUAWEI-XQoS-MIB", "hwXQoSCarYellowServiceClass"), ("HUAWEI-XQoS-MIB", "hwXQoSCarYellowColor"), ("HUAWEI-XQoS-MIB", "hwXQoSCarRedAction"), ("HUAWEI-XQoS-MIB", "hwXQoSCarRedServiceClass"), ("HUAWEI-XQoS-MIB", "hwXQoSCarRedColor"), ("HUAWEI-XQoS-MIB", "hwXQoSCarRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSCarTableGroup = hwXQoSCarTableGroup.setStatus('current')
hwXQoSPortShapingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 38)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPortShapingInterface"), ("HUAWEI-XQoS-MIB", "hwXQoSPortShapingValue"), ("HUAWEI-XQoS-MIB", "hwXQoSPortShapingPbsValue"), ("HUAWEI-XQoS-MIB", "hwXQoSPortShapingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSPortShapingGroup = hwXQoSPortShapingGroup.setStatus('current')
hwXQoSQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 39)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSQueueInterfaceIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueServiceClass"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueCirValue"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueCirPercentage"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueDirection"), ("HUAWEI-XQoS-MIB", "hwXQoSQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSQueueGroup = hwXQoSQueueGroup.setStatus('current')
hwXQoSCarStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 40)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsInterfaceIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsDirection"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsVlanid"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsSlotNumber"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsReset"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsPassPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsPassBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsDropPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsDropBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsPassPacketsRate"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsPassBytesRate"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsDropPacketsRate"), ("HUAWEI-XQoS-MIB", "hwXQoSCarStatisticsDropBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSCarStatisticsGroup = hwXQoSCarStatisticsGroup.setStatus('current')
hwXQoSCpRateLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 41)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitIfIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitPeVidValue"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitCeVidBegin"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitCeVidEnd"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitType"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitIgmpCir"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitIgmpCbs"), ("HUAWEI-XQoS-MIB", "hwXQoSCpRateLimitRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSCpRateLimitGroup = hwXQoSCpRateLimitGroup.setStatus('current')
hwXQoSPortQueueStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 42)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsInterfaceIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDirection"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsQueueIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsReset"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsTotalPassPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsTotalPassBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsTotalDiscardPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsTotalDiscardBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDropTailDiscardPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDropTailDiscardBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsWredDiscardPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsWredDiscardBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsPassPacketsRate"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsPassBytesRate"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDiscardPacketsRate"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDiscardBytesRate"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDropTailDiscardPacketsRate"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsDropTailDiscardBytesRate"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsWredDiscardPacketsRate"), ("HUAWEI-XQoS-MIB", "hwXQoSPortQueueStatisticsWredDiscardBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSPortQueueStatisticsGroup = hwXQoSPortQueueStatisticsGroup.setStatus('current')
hwXQoSPortStatisticsDropGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 43)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSPortStatisticsDropPacketsCount"), ("HUAWEI-XQoS-MIB", "hwXQosPortStatisticsDropReset"), ("HUAWEI-XQoS-MIB", "hwXQosPortStatisticsDropResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSPortStatisticsDropGroup = hwXQoSPortStatisticsDropGroup.setStatus('current')
hwXQoSQueueStatisticsDropGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 44)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSQueueStatisticsDropPacketsCount"), ("HUAWEI-XQoS-MIB", "hwXQosQueueStatisticsDropReset"), ("HUAWEI-XQoS-MIB", "hwXQosQueueStatisticsDropResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSQueueStatisticsDropGroup = hwXQoSQueueStatisticsDropGroup.setStatus('current')
hwXQoSIfScheduleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 45)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSIfScheduleProfile"), ("HUAWEI-XQoS-MIB", "hwXQoSIfScheduleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSIfScheduleGroup = hwXQoSIfScheduleGroup.setStatus('current')
hwXQoSScheduleProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 46)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueMode"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueBeWeight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueAf1Weight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueAf2Weight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueAf3Weight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueAf4Weight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueCs6Weight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueCs7Weight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleQueueEfWeight"), ("HUAWEI-XQoS-MIB", "hwXQoSScheduleProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSScheduleProfileGroup = hwXQoSScheduleProfileGroup.setStatus('current')
hwXQoSQppbPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 47)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyStatisticsInterfaceIndex"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyDirection"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyLocalID"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyStatisticsReset"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyMatchedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyMatchedBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyPassedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyPassedBytes"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyDropedPackets"), ("HUAWEI-XQoS-MIB", "hwXQoSQppbPolicyDropedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSQppbPolicyGroup = hwXQoSQppbPolicyGroup.setStatus('current')
hwXQoSStatResouceNotEnoughAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 48)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSStatResouceNotEnoughSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSStatResouceNotEnoughStatType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSStatResouceNotEnoughAlarmGroup = hwXQoSStatResouceNotEnoughAlarmGroup.setStatus('current')
hwXQoSCARResouceNotEnoughAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 2, 2, 49)).setObjects(("HUAWEI-XQoS-MIB", "hwXQoSCARResouceNotEnoughSlotId"), ("HUAWEI-XQoS-MIB", "hwXQoSCARResouceNotEnoughCARType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwXQoSCARResouceNotEnoughAlarmGroup = hwXQoSCARResouceNotEnoughAlarmGroup.setStatus('current')
hwXQoSSecurityStormControlInterfaceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 21))
hwXQoSSecurityStormControlInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 21, 1), )
if mibBuilder.loadTexts: hwXQoSSecurityStormControlInterfaceTable.setStatus('current')
hwXQoSSecurityStormControlInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 21, 1, 1), ).setIndexNames((0, "HUAWEI-XQoS-MIB", "hwXQoSSecurityStormControlInterfaceChassisId"), (0, "HUAWEI-XQoS-MIB", "hwXQoSSecurityStormControlInterfaceSlotId"))
if mibBuilder.loadTexts: hwXQoSSecurityStormControlInterfaceEntry.setStatus('current')
hwXQoSSecurityStormControlInterfaceChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 21, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwXQoSSecurityStormControlInterfaceChassisId.setStatus('current')
hwXQoSSecurityStormControlInterfaceSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwXQoSSecurityStormControlInterfaceSlotId.setStatus('current')
hwXQoSSecurityStormControlInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 21, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSSecurityStormControlInterfaceName.setStatus('current')
hwXQoSSecurityStormControlInterfaceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 4, 1, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwXQoSSecurityStormControlInterfaceVlan.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-XQoS-MIB", hwXQoSIfSampledPackets=hwXQoSIfSampledPackets, hwXQoSCarYellowAction=hwXQoSCarYellowAction, hwXQoSCpRateLimitCeVidEnd=hwXQoSCpRateLimitCeVidEnd, hwXQoSIfModeType=hwXQoSIfModeType, hwXQoSIfCarStatisticsGroup=hwXQoSIfCarStatisticsGroup, hwXQoSQppbPolicyMatchPacketsRate=hwXQoSQppbPolicyMatchPacketsRate, hwXQoSIfScheduleCfgInfoTable=hwXQoSIfScheduleCfgInfoTable, hwXQoSPortQueueStatisticsWredDiscardPacketsRate=hwXQoSPortQueueStatisticsWredDiscardPacketsRate, hwXQosAtmTrafficQueueEntry=hwXQosAtmTrafficQueueEntry, hwXQoSIfMirrorCfgIfIndex=hwXQoSIfMirrorCfgIfIndex, hwXQoSIfPppoeMatchType=hwXQoSIfPppoeMatchType, hwXQosVlanStatInBcastPkts=hwXQosVlanStatInBcastPkts, hwXQoSIfWredVlanID=hwXQoSIfWredVlanID, hwXQoSPhbGroup=hwXQoSPhbGroup, hwXQoSCpDefendPassedPackets=hwXQoSCpDefendPassedPackets, hwXQosVlanStatInUnknownUcastBytes=hwXQosVlanStatInUnknownUcastBytes, hwXQoSIfUnicastWeightValue=hwXQoSIfUnicastWeightValue, hwXQoSRedirectNextHopTable=hwXQoSRedirectNextHopTable, hwXQoSQppbPolicyPassedPackets=hwXQoSQppbPolicyPassedPackets, hwXQosVlanStatResetFlag=hwXQosVlanStatResetFlag, hwXQoSCpDefendObjects=hwXQoSCpDefendObjects, hwXQoSBaPhbGroup=hwXQoSBaPhbGroup, hwXQoSCommonInboundEntry=hwXQoSCommonInboundEntry, hwXQoSCarCirValue=hwXQoSCarCirValue, hwXQoSDeiIfIndex=hwXQoSDeiIfIndex, hwXQoSQueueDirection=hwXQoSQueueDirection, hwXQosVlanStatOutMcastBytes=hwXQosVlanStatOutMcastBytes, hwXQoSIfCarTotalDiscardPackets=hwXQoSIfCarTotalDiscardPackets, hwXQoSBaExpMapCfgInfoTable=hwXQoSBaExpMapCfgInfoTable, hwXQoSStatResouceNotEnoughAlarmGroup=hwXQoSStatResouceNotEnoughAlarmGroup, hwXQoSGroups=hwXQoSGroups, hwXQoSBaExpMapGroup=hwXQoSBaExpMapGroup, hwXQoSGeneralGroup=hwXQoSGeneralGroup, hwXQoSIfIPCarPbs=hwXQoSIfIPCarPbs, hwXQoSCpDefendStatisticsTable=hwXQoSCpDefendStatisticsTable, hwXQoSIfShapingCfgInfoTable=hwXQoSIfShapingCfgInfoTable, hwXQoSIfCarRedRemarkedBytes=hwXQoSIfCarRedRemarkedBytes, hwXQoSStormControlAction=hwXQoSStormControlAction, hwXQoSBaPhbColour=hwXQoSBaPhbColour, hwXQoSIfCarInBoundDiscardPackets=hwXQoSIfCarInBoundDiscardPackets, hwXQoSIrsmTotalPacket=hwXQoSIrsmTotalPacket, hwXQoSSecurityStormControlInterfaceObjects=hwXQoSSecurityStormControlInterfaceObjects, hwXQoSCarStatisticsDropBytes=hwXQoSCarStatisticsDropBytes, hwXQoSIfIPCarYellowRemarkValue=hwXQoSIfIPCarYellowRemarkValue, hwXQoSAAATrust8021pInfoTable=hwXQoSAAATrust8021pInfoTable, hwXQoSIf8021PMap8021PValue=hwXQoSIf8021PMap8021PValue, hwXQoSFrameId=hwXQoSFrameId, hwXQoSIfLrVlanID=hwXQoSIfLrVlanID, hwXQoSRemarkRowStatus=hwXQoSRemarkRowStatus, hwXQoSIfQueueCfgIfIndex=hwXQoSIfQueueCfgIfIndex, hwXQoSCpDefendStatisticsEntry=hwXQoSCpDefendStatisticsEntry, hwXQoSIfIPCarRedRemarkValue=hwXQoSIfIPCarRedRemarkValue, hwXQoSCpCarActionGreenAction=hwXQoSCpCarActionGreenAction, hwXQoSCpcarTotalBytes=hwXQoSCpcarTotalBytes, hwXQoSGlobalWredClassCfgTable=hwXQoSGlobalWredClassCfgTable, hwXQoSAtmPvcVci=hwXQoSAtmPvcVci, hwXQoSPppInboundEntry=hwXQoSPppInboundEntry, hwXQoSPortQueueStatisticsTotalPassPackets=hwXQoSPortQueueStatisticsTotalPassPackets, hwXQoSIfCarConformedBytes=hwXQoSIfCarConformedBytes, hwXQoSPortQueueAlarmIfIndex=hwXQoSPortQueueAlarmIfIndex, hwXQoSMIB=hwXQoSMIB, hwXQoSQueueDiscardThresholdTrap=hwXQoSQueueDiscardThresholdTrap, hwXQoSIfIPCarYellowAction=hwXQoSIfIPCarYellowAction, hwXQoSPortQueueStatisticsDropTailDiscardPacketsRate=hwXQoSPortQueueStatisticsDropTailDiscardPacketsRate, hwXQoSIrsmTime=hwXQoSIrsmTime, hwXQoSIfCarGreenPassedBytes=hwXQoSIfCarGreenPassedBytes, hwXQoSIfSamplingNum=hwXQoSIfSamplingNum, hwXQoSIfCarCbs=hwXQoSIfCarCbs, hwXQoSAtmPvcPcr=hwXQoSAtmPvcPcr, hwXQoSIfWredDiscardProbability=hwXQoSIfWredDiscardProbability, hwXQoSBaDscpPhbRowStatus=hwXQoSBaDscpPhbRowStatus, hwXQoSCpDefendStatisticsGroup=hwXQoSCpDefendStatisticsGroup, hwXQoSPortQueueStatisticsTotalPassBytes=hwXQoSPortQueueStatisticsTotalPassBytes, hwXQoSIfWredRunInfoEntry=hwXQoSIfWredRunInfoEntry, hwXQoSGlobalWredClassCfgEntry=hwXQoSGlobalWredClassCfgEntry, hwXQoSScheduleProfileEntry=hwXQoSScheduleProfileEntry, hwXQoSPortQueueAlarmClear=hwXQoSPortQueueAlarmClear, hwXQoSQueueStatisticsDropTable=hwXQoSQueueStatisticsDropTable, hwXQoSBaMapCos=hwXQoSBaMapCos, hwXQoSUrpfDiscardedPackets=hwXQoSUrpfDiscardedPackets, hwXQoSIfMirrorCfgInfoTable=hwXQoSIfMirrorCfgInfoTable, hwXQoSVlanCfgGroup=hwXQoSVlanCfgGroup, hwXQoSAtmPvpDiffDomainTable=hwXQoSAtmPvpDiffDomainTable, hwXQoSCpCarActionEntry=hwXQoSCpCarActionEntry, hwXQoSBaAtmQosPhbCfgInfoEntry=hwXQoSBaAtmQosPhbCfgInfoEntry, hwXQoSCarStatisticsDropBytesRate=hwXQoSCarStatisticsDropBytesRate, hwXQoSCpApplyPolicyTable=hwXQoSCpApplyPolicyTable, hwXQoSVlanCfgTable=hwXQoSVlanCfgTable, hwXQoSProfileTable=hwXQoSProfileTable, hwXQoSMulBaDscpPri=hwXQoSMulBaDscpPri, hwXQoSIfSampleVlanID=hwXQoSIfSampleVlanID, hwXQoSIfIPCarCbs=hwXQoSIfIPCarCbs, hwXQoSIfCarOverflowPacketRate=hwXQoSIfCarOverflowPacketRate, hwXQoSCpCarCfgInfoTable=hwXQoSCpCarCfgInfoTable, hwXQoSIfQueueResetFlag=hwXQoSIfQueueResetFlag, hwXQoSCarStatisticsGroup=hwXQoSCarStatisticsGroup, hwXQoSServiceclassTable=hwXQoSServiceclassTable, hwXQoSIfCarConformedByteRate=hwXQoSIfCarConformedByteRate, hwXQoSVlanCfgObjects=hwXQoSVlanCfgObjects, hwXQoSIfOutPhyBandwidth=hwXQoSIfOutPhyBandwidth, hwXQoSIfQueueCfgInfoEntry=hwXQoSIfQueueCfgInfoEntry, hwXQoSSecurityStormControlInterfaceName=hwXQoSSecurityStormControlInterfaceName, hwXQoSIfSoftCarRowStatus=hwXQoSIfSoftCarRowStatus, hwXQoSIfCarOutBoundDiscardPackets=hwXQoSIfCarOutBoundDiscardPackets, hwXQoSQueueCirPercentage=hwXQoSQueueCirPercentage, hwXQoSPortShapingTable=hwXQoSPortShapingTable, hwXQoSIfUrpfIfIndex=hwXQoSIfUrpfIfIndex, hwXQoSRemarkVlanID1=hwXQoSRemarkVlanID1, hwXQoSBaType=hwXQoSBaType, hwXQoSPortQueueAlarmObjects=hwXQoSPortQueueAlarmObjects, hwXQoSScheduleQueueAf1Weight=hwXQoSScheduleQueueAf1Weight, hwXQoSBaExpMapIndex=hwXQoSBaExpMapIndex, hwXQoSIfIPCarDirection=hwXQoSIfIPCarDirection, hwXQoSSecurityStormControlInterfaceVlan=hwXQoSSecurityStormControlInterfaceVlan, hwXQoSGlobalWredClassSetDefault=hwXQoSGlobalWredClassSetDefault, hwXQoSCarStatisticsSlotNumber=hwXQoSCarStatisticsSlotNumber, hwXQoSIfMplsExpMapCfgInfoTable=hwXQoSIfMplsExpMapCfgInfoTable, hwXQoSBaDscpPhbCos=hwXQoSBaDscpPhbCos, hwXQoSIfQueueDiscardedPacketRate=hwXQoSIfQueueDiscardedPacketRate, hwXQoSIfUrpfDroppdPackets=hwXQoSIfUrpfDroppdPackets, hwXQoSAAADsRowStatus=hwXQoSAAADsRowStatus, hwXQoSIfQueueMode=hwXQoSIfQueueMode, hwXQoSCpDefendDiscardedPacketAlarm=hwXQoSCpDefendDiscardedPacketAlarm, hwXQosQueueStatisticsReset=hwXQosQueueStatisticsReset, hwXQoSIfLrCfgIfIndex=hwXQoSIfLrCfgIfIndex, hwXQoSBaAtmQosMapCfgInfoEntry=hwXQoSBaAtmQosMapCfgInfoEntry, hwXQoSPortQueueStatisticsEntry=hwXQoSPortQueueStatisticsEntry, hwXQoSIfDefaultPriorityValue=hwXQoSIfDefaultPriorityValue, hwXQoSProfileName=hwXQoSProfileName, hwXQoSIfCarExceededPackets=hwXQoSIfCarExceededPackets, hwXQoSQueueStatisticsIngressIfIndex=hwXQoSQueueStatisticsIngressIfIndex, hwXQoSCpCarGreenRemarkValue=hwXQoSCpCarGreenRemarkValue, hwXQoSIfSredQueueIndex=hwXQoSIfSredQueueIndex, hwXQoSIfQueIndex=hwXQoSIfQueIndex, hwXQoSSoftCarCfgTable=hwXQoSSoftCarCfgTable, hwXQoSPortId=hwXQoSPortId, hwXQoSPicForwardingEntry=hwXQoSPicForwardingEntry, hwXQoSScheduleProfileGroup=hwXQoSScheduleProfileGroup, hwNotificationExtGroup=hwNotificationExtGroup, hwXQoSRuleFailEntry=hwXQoSRuleFailEntry, hwXQoSPortQueueStatisticsDirection=hwXQoSPortQueueStatisticsDirection, hwXQoSRedirectNextHopNewIp=hwXQoSRedirectNextHopNewIp, hwXQoSBaDscpPhbIndex=hwXQoSBaDscpPhbIndex, hwXQoSCpCarActionTable=hwXQoSCpCarActionTable, hwXQoSIfLrCfgVlanID=hwXQoSIfLrCfgVlanID, hwXQoSCpDefendChassisID=hwXQoSCpDefendChassisID, hwXQoSIfCarPbs=hwXQoSIfCarPbs, hwXQoSIfPppoeCfgInfoTable=hwXQoSIfPppoeCfgInfoTable, hwXQoSBa8021pPhbIndex=hwXQoSBa8021pPhbIndex, hwXQoSMulBa8021pPhbIndex=hwXQoSMulBa8021pPhbIndex, hwXQoSAtmPvcServiceTypeIfIndex=hwXQoSAtmPvcServiceTypeIfIndex, hwXQoSScheduleProfileTable=hwXQoSScheduleProfileTable, hwXQoSCarEntry=hwXQoSCarEntry, hwXQoSBa8021pPhbColour=hwXQoSBa8021pPhbColour, hwXQoSCpCarPbs=hwXQoSCpCarPbs, hwXQoSIfTrust8021pRowStatus=hwXQoSIfTrust8021pRowStatus, hwXQoSIfUrpfVlanID=hwXQoSIfUrpfVlanID, hwXQoSIfCarPassedPackets=hwXQoSIfCarPassedPackets, hwXQoSCpRateLimitEntry=hwXQoSCpRateLimitEntry, hwXQoSGlobalWredTypeIndex=hwXQoSGlobalWredTypeIndex, hwXQoSSoftCarCir=hwXQoSSoftCarCir, hwXQoSPhbEnableRowStatus=hwXQoSPhbEnableRowStatus, hwXQoSIrsmThreshold=hwXQoSIrsmThreshold, hwXQoSAAADsDomainName=hwXQoSAAADsDomainName, hwXQoSCpDefendDiscardedPacketAlarmClear=hwXQoSCpDefendDiscardedPacketAlarmClear, hwXQoSBa8021pMapPri=hwXQoSBa8021pMapPri, hwXQoSPortQueueStatisticsWredDiscardBytesRate=hwXQoSPortQueueStatisticsWredDiscardBytesRate, hwXQoSScheduleQueueAf2Weight=hwXQoSScheduleQueueAf2Weight, hwXQoSDeiVlanID2=hwXQoSDeiVlanID2, hwXQoSRedirectNextHopOldIp=hwXQoSRedirectNextHopOldIp, hwXQoSDeiEntry=hwXQoSDeiEntry, hwXQoSPicForwardingPriority=hwXQoSPicForwardingPriority, hwXQoSBa8021pMapIndex=hwXQoSBa8021pMapIndex, hwXQoSQueueEntry=hwXQoSQueueEntry, hwXQoSIfWredLowlimit=hwXQoSIfWredLowlimit, hwXQoSIfSoftCarDirection=hwXQoSIfSoftCarDirection, hwXQoSCpRateLimitGroup=hwXQoSCpRateLimitGroup, hwXQoSCpCarSlotStatDiscardedPackets=hwXQoSCpCarSlotStatDiscardedPackets, hwXQoSIfRemarkDscpIfIndex=hwXQoSIfRemarkDscpIfIndex, hwXQoSIfSredCfgInfoEntry=hwXQoSIfSredCfgInfoEntry, hwXQoSCpCarSlotStatTotalBytes=hwXQoSCpCarSlotStatTotalBytes, hwXQoSPicForwarding8021pValue=hwXQoSPicForwarding8021pValue, hwXQoSCpCarFilterRowStatus=hwXQoSCpCarFilterRowStatus, hwXQoSPortQueueStatisticsDropTailDiscardPackets=hwXQoSPortQueueStatisticsDropTailDiscardPackets, hwXQoSAtmPvcCdvt=hwXQoSAtmPvcCdvt, hwXQoSMulBa8021pPhbCfgInfoTable=hwXQoSMulBa8021pPhbCfgInfoTable, hwXQoSAtmPvcServiceTypeVciIndex=hwXQoSAtmPvcServiceTypeVciIndex, hwXQoSPhbEnableTable=hwXQoSPhbEnableTable, hwXQoSAtmPvcDiffDomainName=hwXQoSAtmPvcDiffDomainName, hwXQoSIfShapingQueueIndex=hwXQoSIfShapingQueueIndex, hwXQoSPhbTable=hwXQoSPhbTable, hwXQoSIfWredTailDiscardedPackets=hwXQoSIfWredTailDiscardedPackets, hwXQoSIfShapingRowStatus=hwXQoSIfShapingRowStatus, hwXQoSIfMirrorCfgInfoEntry=hwXQoSIfMirrorCfgInfoEntry, hwXQoSCpDefendSlotId=hwXQoSCpDefendSlotId, hwXQoSIfMplsExpMapInbound=hwXQoSIfMplsExpMapInbound, hwXQoSBaDscpMapIndex=hwXQoSBaDscpMapIndex, hwXQoSVlanBcastSuppressVlanId=hwXQoSVlanBcastSuppressVlanId, hwXQoSBaExpMapCfgInfoEntry=hwXQoSBaExpMapCfgInfoEntry, hwXQoSPppInboundCos=hwXQoSPppInboundCos, hwXQoSPortQueueStatisticsWredDiscardBytes=hwXQoSPortQueueStatisticsWredDiscardBytes, hwXQoSIfQueueUsagePercentage=hwXQoSIfQueueUsagePercentage, hwXQoSCommonInboundPhbPri=hwXQoSCommonInboundPhbPri, hwXQoSCpcarIndex=hwXQoSCpcarIndex, hwXQoSIfCarStatisticsEntry=hwXQoSIfCarStatisticsEntry, hwXQoSStormControlInterval=hwXQoSStormControlInterval, hwXQoSScheduleQueueMode=hwXQoSScheduleQueueMode, hwXQoSStormControlIfIndex=hwXQoSStormControlIfIndex, hwXQoSIfQueuePriority=hwXQoSIfQueuePriority, hwXQoSStatResouceNotEnoughAlarm=hwXQoSStatResouceNotEnoughAlarm, hwXQoSCpcarRunInfoTable=hwXQoSCpcarRunInfoTable, hwXQoSIfQueueCir=hwXQoSIfQueueCir, hwXQoSCARResouceNotEnoughAlarmGroup=hwXQoSCARResouceNotEnoughAlarmGroup, hwXQoSIf8021PMapLocalPrecedence=hwXQoSIf8021PMapLocalPrecedence, hwXQoSIfHqosPriIfIndex=hwXQoSIfHqosPriIfIndex, hwXQoSIrsmTable=hwXQoSIrsmTable, hwXQoSIfLocPreQueMapRowStatus=hwXQoSIfLocPreQueMapRowStatus, hwXQoSBaPhbCfgInfoEntry=hwXQoSBaPhbCfgInfoEntry, hwXQoSIfTrustGroup=hwXQoSIfTrustGroup, hwXQoSStatResouceNotEnoughSlotId=hwXQoSStatResouceNotEnoughSlotId, hwXQoSIfIPCarPir=hwXQoSIfIPCarPir, hwXQoSIfPhbEnableEntry=hwXQoSIfPhbEnableEntry, hwXQosVlanStatInMcastPkts=hwXQosVlanStatInMcastPkts, hwXQoSIfScheduleProfile=hwXQoSIfScheduleProfile, hwXQoSIfTrustEntry=hwXQoSIfTrustEntry, hwXQoSIfTrustVlanID1=hwXQoSIfTrustVlanID1, hwXQoSBa8021pMapGroup=hwXQoSBa8021pMapGroup, hwXQoSGlobalWredTypeSetDefault=hwXQoSGlobalWredTypeSetDefault, hwXQoSIfWredIfIndex=hwXQoSIfWredIfIndex, hwXQoSBaDscpMapGroup=hwXQoSBaDscpMapGroup, hwXQoSIfDiffDomainTable=hwXQoSIfDiffDomainTable, hwXQoSMulDscpPhbCfgInfoTable=hwXQoSMulDscpPhbCfgInfoTable, hwXQoSUrpfDiscardStatisticsEntry=hwXQoSUrpfDiscardStatisticsEntry, hwXQoSIfCarDiscardedBytes=hwXQoSIfCarDiscardedBytes, hwXQoSIfCarPir=hwXQoSIfCarPir, hwXQoSIfCarCir=hwXQoSIfCarCir, hwXQoSCpCarActionSlotIndex=hwXQoSCpCarActionSlotIndex, hwXQoSIfPppoeRowStatus=hwXQoSIfPppoeRowStatus, hwXQoSIfLrIfIndex=hwXQoSIfLrIfIndex, hwXQoSVlanCfgEntry=hwXQoSVlanCfgEntry, hwXQoSBaCfgInfoEntry=hwXQoSBaCfgInfoEntry, hwXQosVlanStatInUcastBytes=hwXQosVlanStatInUcastBytes, hwXQoSIrsmUpstream=hwXQoSIrsmUpstream, hwXQoSBaUserPriPhbCfgInfoEntry=hwXQoSBaUserPriPhbCfgInfoEntry, hwXQoSQueueStatisticsDropEntry=hwXQoSQueueStatisticsDropEntry, hwXQoSAAADs8021P=hwXQoSAAADs8021P, hwXQoSCpCarSlotStatTable=hwXQoSCpCarSlotStatTable, hwXQoSBaAtmQosMapIndex=hwXQoSBaAtmQosMapIndex, hwXQoSCpcarName=hwXQoSCpcarName, hwXQoSCpRateLimitIgmpCir=hwXQoSCpRateLimitIgmpCir, hwXQoSIfHQOSPriCfgInfoTable=hwXQoSIfHQOSPriCfgInfoTable, hwXQoSPortQueueStatisticsTotalDiscardPackets=hwXQoSPortQueueStatisticsTotalDiscardPackets, hwXQoSIfSamplingRowStatus=hwXQoSIfSamplingRowStatus, hwXQoSIfHqosPriRowStatus=hwXQoSIfHqosPriRowStatus)
mibBuilder.exportSymbols("HUAWEI-XQoS-MIB", hwXQoSIfLrDiscardedBytes=hwXQoSIfLrDiscardedBytes, hwXQoSIfQueuePassedPacketRate=hwXQoSIfQueuePassedPacketRate, hwXQoSCpCarActionPolicyName=hwXQoSCpCarActionPolicyName, hwXQoSIfLocalPrecedenceQueueMapTable=hwXQoSIfLocalPrecedenceQueueMapTable, hwXQoSIfQueueRowStatus=hwXQoSIfQueueRowStatus, hwXQoSRuleFailInfo=hwXQoSRuleFailInfo, hwXQoSIfMplsExpMapIfIndex=hwXQoSIfMplsExpMapIfIndex, hwXQoSIfWredType=hwXQoSIfWredType, hwXQoSPicForwardingGroup=hwXQoSPicForwardingGroup, hwXQoSPortQueueStatisticsGroup=hwXQoSPortQueueStatisticsGroup, hwXQoSIfLrDelayedBytes=hwXQoSIfLrDelayedBytes, hwXQoSIfScheduleModeCfgInfoEntry=hwXQoSIfScheduleModeCfgInfoEntry, hwXQoSQueueStatisticsObjects=hwXQoSQueueStatisticsObjects, hwXQoSCarVlanID=hwXQoSCarVlanID, hwXQoSIfSoftCarCarIndex=hwXQoSIfSoftCarCarIndex, hwXQoSBa8021pPhbCfgInfoEntry=hwXQoSBa8021pPhbCfgInfoEntry, hwXQoSBaExpPhbColour=hwXQoSBaExpPhbColour, hwXQosVlanStatInTotalPkts=hwXQosVlanStatInTotalPkts, hwXQoSIfMirrorRunInfoTable=hwXQoSIfMirrorRunInfoTable, hwXQosVlanStatInBcastBytes=hwXQosVlanStatInBcastBytes, hwXQoSBa8021pPhbCos=hwXQoSBa8021pPhbCos, hwXQoSIfQueueCfgCosType=hwXQoSIfQueueCfgCosType, hwXQoSCpCarRedAction=hwXQoSCpCarRedAction, hwXQoSScheduleQueueEfWeight=hwXQoSScheduleQueueEfWeight, hwXQoSIrsmDefendObjects=hwXQoSIrsmDefendObjects, hwXQoSCarInterfaceIndex=hwXQoSCarInterfaceIndex, hwXQoSIfCarYellowAction=hwXQoSIfCarYellowAction, hwXQoSCarStatisticsPassPacketsRate=hwXQoSCarStatisticsPassPacketsRate, hwXQoSIfCarYellowPassedPackets=hwXQoSIfCarYellowPassedPackets, hwXQoSResouceNotEnoughAlarmObjects=hwXQoSResouceNotEnoughAlarmObjects, hwXQoSIfCarDiscardedPackets=hwXQoSIfCarDiscardedPackets, hwXQoSPortQueueStatisticsDropTailDiscardBytes=hwXQoSPortQueueStatisticsDropTailDiscardBytes, hwXQoSUserPriPhbPri=hwXQoSUserPriPhbPri, hwXQoSIfCarYellowDiscardedPackets=hwXQoSIfCarYellowDiscardedPackets, hwXQoSIfExtIndex=hwXQoSIfExtIndex, hwXQoSScheduleQueueCs6Weight=hwXQoSScheduleQueueCs6Weight, hwXQoSIfVlanID=hwXQoSIfVlanID, hwXQoSCompliance=hwXQoSCompliance, hwXQoSIfEnableDeiAction=hwXQoSIfEnableDeiAction, hwXQoSPhbEnableVlanID2=hwXQoSPhbEnableVlanID2, hwXQosVlanStatOutTotalPkts=hwXQosVlanStatOutTotalPkts, hwXQoSIfCarGreenDiscardedBytes=hwXQoSIfCarGreenDiscardedBytes, SampleType=SampleType, hwXQoSIfWredCfgInfoTable=hwXQoSIfWredCfgInfoTable, hwXQoSCarGreenServiceClass=hwXQoSCarGreenServiceClass, hwXQoSPortQueueAlarmQueue=hwXQoSPortQueueAlarmQueue, hwXQoSCpDefendDiscardedThreshold=hwXQoSCpDefendDiscardedThreshold, hwXQoSPhbEnable=hwXQoSPhbEnable, hwXQoSBa8021pMapColour=hwXQoSBa8021pMapColour, hwXQoSMulBa8021pPhbCos=hwXQoSMulBa8021pPhbCos, hwXQoSIfCarGreenRemarkValue=hwXQoSIfCarGreenRemarkValue, hwXQoSCpCarActionYellowAction=hwXQoSCpCarActionYellowAction, hwXQoSIfMirrorObserveIndex=hwXQoSIfMirrorObserveIndex, hwXQoSIfOutMulticastRowStatus=hwXQoSIfOutMulticastRowStatus, hwXQoSQppbPolicyMatchBytesRate=hwXQoSQppbPolicyMatchBytesRate, hwXQosVlanStatEntry=hwXQosVlanStatEntry, hwXQoSIfScheduleGroup=hwXQoSIfScheduleGroup, hwXQoSBaUserPriPhbCfgInfoTable=hwXQoSBaUserPriPhbCfgInfoTable, hwXQoSIfCarRedPassedPackets=hwXQoSIfCarRedPassedPackets, hwXQoSIfScheduleRowStatus=hwXQoSIfScheduleRowStatus, hwXQoSPhbEnableEntry=hwXQoSPhbEnableEntry, hwXQoSAtmPvcDiffDomainEntry=hwXQoSAtmPvcDiffDomainEntry, hwXQoSCpcarCfgInfoEntry=hwXQoSCpcarCfgInfoEntry, hwXQoSIfQueueRunInfoTable=hwXQoSIfQueueRunInfoTable, hwXQoSIfTrust8021pTable=hwXQoSIfTrust8021pTable, hwXQoSSoftCarCbs=hwXQoSSoftCarCbs, hwXQoSUserPriPhbCos=hwXQoSUserPriPhbCos, hwXQoSIfQueueIfIndex=hwXQoSIfQueueIfIndex, hwXQoSCpcarPassededBytes=hwXQoSCpcarPassededBytes, hwXQoSCpDefendPassedBytes=hwXQoSCpDefendPassedBytes, hwXQoSPortQueueStatisticsReset=hwXQoSPortQueueStatisticsReset, hwXQoSIfLrPassedPackets=hwXQoSIfLrPassedPackets, hwXQoSIrsmDropPacketAlarm=hwXQoSIrsmDropPacketAlarm, hwXQoSIfSampleIfIndex=hwXQoSIfSampleIfIndex, hwXQoSRedirectNextHopBehaviorName=hwXQoSRedirectNextHopBehaviorName, hwXQoSPortStatisticsDropObjects=hwXQoSPortStatisticsDropObjects, hwXQoSBaDscpPhbColour=hwXQoSBaDscpPhbColour, hwXQoSIfQueuePir=hwXQoSIfQueuePir, hwXQoSBaAtmQosMapCos=hwXQoSBaAtmQosMapCos, hwXQoSBaExpPhbCos=hwXQoSBaExpPhbCos, hwXQoSScheduleQueueBeWeight=hwXQoSScheduleQueueBeWeight, hwXQoSRedirectNextHopGroup=hwXQoSRedirectNextHopGroup, hwXQoSIfDefaultPriorityRowStatus=hwXQoSIfDefaultPriorityRowStatus, hwXQoSIfCarStatisticsTable=hwXQoSIfCarStatisticsTable, hwXQoSAtmPvcServiceTypeEntry=hwXQoSAtmPvcServiceTypeEntry, hwXQoSBaDscpMapCfgInfoEntry=hwXQoSBaDscpMapCfgInfoEntry, hwXQoSAaaDomainName=hwXQoSAaaDomainName, hwXQoSCpCarActionRedAction=hwXQoSCpCarActionRedAction, hwXQoSIfIPCarGreenRemarkValue=hwXQoSIfIPCarGreenRemarkValue, hwXQoSCpApplyPolicyEntry=hwXQoSCpApplyPolicyEntry, hwXQoSIfCarGreenRemarkedBytes=hwXQoSIfCarGreenRemarkedBytes, hwXQoSIrsmEntry=hwXQoSIrsmEntry, hwXQoSBaDscpMapPri=hwXQoSBaDscpMapPri, hwXQosVlanStatInMcastBytes=hwXQosVlanStatInMcastBytes, hwXQoSBaPhbType=hwXQoSBaPhbType, hwXQoSStormControlTrap=hwXQoSStormControlTrap, hwXQoSQueueStatisticsGroup=hwXQoSQueueStatisticsGroup, hwXQoSPortShapingRowStatus=hwXQoSPortShapingRowStatus, hwXQoSIfCarRunInfoEntry=hwXQoSIfCarRunInfoEntry, hwXQoSCpCarActionSetDefault=hwXQoSCpCarActionSetDefault, hwXQosVlanStatGroup=hwXQosVlanStatGroup, hwXQoSCpCarYellowRemarkValue=hwXQoSCpCarYellowRemarkValue, hwXQoSScheduleProfileName=hwXQoSScheduleProfileName, hwXQoSCommonInboundPhbCos=hwXQoSCommonInboundPhbCos, hwXQoSIfQueueDiscardedByteRate=hwXQoSIfQueueDiscardedByteRate, hwXQoSIfIPCarEndIp=hwXQoSIfIPCarEndIp, hwXQoSCpDefendDiscardedPackets=hwXQoSCpDefendDiscardedPackets, hwXQoSSecurityStormControlInterfaceTrap=hwXQoSSecurityStormControlInterfaceTrap, hwXQoSIfDefaultPriorityCfgInfoTable=hwXQoSIfDefaultPriorityCfgInfoTable, hwXQoSStormControlGroup=hwXQoSStormControlGroup, hwXQoSCarCbsValue=hwXQoSCarCbsValue, hwXQoSBaExpPhbRowStatus=hwXQoSBaExpPhbRowStatus, hwXQoSPhbEnableIfIndex=hwXQoSPhbEnableIfIndex, hwXQoSPppInboundRowStatus=hwXQoSPppInboundRowStatus, hwXQoSPortQueueStatisticsWredDiscardPackets=hwXQoSPortQueueStatisticsWredDiscardPackets, hwXQoSAtmPvpDiffDomainRowStatus=hwXQoSAtmPvpDiffDomainRowStatus, hwXQoSSecurityStormControlInterfaceSlotId=hwXQoSSecurityStormControlInterfaceSlotId, hwXQoSIfQueueWeight=hwXQoSIfQueueWeight, hwXQoSRuleFailTable=hwXQoSRuleFailTable, hwXQoSQppbPolicyDropedPackets=hwXQoSQppbPolicyDropedPackets, hwXQoSRedirectNextHopChangedAlarm=hwXQoSRedirectNextHopChangedAlarm, hwXQoSIfQueueCosType=hwXQoSIfQueueCosType, hwXQoSBa8021pMapCfgInfoEntry=hwXQoSBa8021pMapCfgInfoEntry, hwXQoSStormControlBroadcastMaxRate=hwXQoSStormControlBroadcastMaxRate, hwXQoSIfCarYellowRemarkedBytes=hwXQoSIfCarYellowRemarkedBytes, hwXQoSIfIPCarRowStatus=hwXQoSIfIPCarRowStatus, hwXQoSBaObjects=hwXQoSBaObjects, hwXQoSIfUrpfCfgInfoTable=hwXQoSIfUrpfCfgInfoTable, hwXQoSIfDiffDomainVlanId=hwXQoSIfDiffDomainVlanId, hwXQoSMulBaDscpPhbIndex=hwXQoSMulBaDscpPhbIndex, hwXQoSIfLrPassedBytes=hwXQoSIfLrPassedBytes, hwXQoSIfObserveIfIndex=hwXQoSIfObserveIfIndex, hwXQoSIfTrustVlanID2=hwXQoSIfTrustVlanID2, hwXQoSFieldDeiEntry=hwXQoSFieldDeiEntry, hwXQoSIfInPhyBandwidth=hwXQoSIfInPhyBandwidth, hwXQoSIfUrpfRunInfoTable=hwXQoSIfUrpfRunInfoTable, hwXQoSIfLrDelayedPackets=hwXQoSIfLrDelayedPackets, hwXBQoSIPCarIntValue=hwXBQoSIPCarIntValue, hwXQoSCarStatisticsDropPackets=hwXQoSCarStatisticsDropPackets, hwXQoSIfPppoeGroup=hwXQoSIfPppoeGroup, hwXQoSCpCarActionType=hwXQoSCpCarActionType, hwXQoSServiceclassEntry=hwXQoSServiceclassEntry, hwXQoSIf8021PMapCfgInfoTable=hwXQoSIf8021PMapCfgInfoTable, hwXQoSBaExpPhbCfgInfoTable=hwXQoSBaExpPhbCfgInfoTable, hwXQoSBa8021pPhbCfgInfoTable=hwXQoSBa8021pPhbCfgInfoTable, hwXQoSPortQueueStatisticsInterfaceIndex=hwXQoSPortQueueStatisticsInterfaceIndex, hwXQoSCpCarFilterAction=hwXQoSCpCarFilterAction, hwXQoSCpDefendDiscardedRateAlarm=hwXQoSCpDefendDiscardedRateAlarm, hwXQoSPortShapingPbsValue=hwXQoSPortShapingPbsValue, hwXQoSUrpfDiscardStatisticsGroup=hwXQoSUrpfDiscardStatisticsGroup, hwXQoSIfCarGreenPassedPackets=hwXQoSIfCarGreenPassedPackets, hwXQoSQppbPolicyStatisticsReset=hwXQoSQppbPolicyStatisticsReset, hwXQoSIfLrCir=hwXQoSIfLrCir, hwXQoSPppInboundGroup=hwXQoSPppInboundGroup, hwXQoSGlobalWredTypeCfgEntry=hwXQoSGlobalWredTypeCfgEntry, hwXQoSAtmPvpVpi=hwXQoSAtmPvpVpi, hwXQoSQueueStatisticsRowStatus=hwXQoSQueueStatisticsRowStatus, hwXQoSServiceclass=hwXQoSServiceclass, hwXQoSAtmPvcVbrMbs=hwXQoSAtmPvcVbrMbs, hwXQoSAtmPvcRowStatus=hwXQoSAtmPvcRowStatus, hwXQoSPortStatisticsDropIfIndex=hwXQoSPortStatisticsDropIfIndex, hwXQoSIfCarOverflowPackets=hwXQoSIfCarOverflowPackets, hwXQoSCARResouceNotEnoughAlarmEntry=hwXQoSCARResouceNotEnoughAlarmEntry, hwXQoSPortQueueAlarmTable=hwXQoSPortQueueAlarmTable, hwXQoSCarStatisticsDropPacketsRate=hwXQoSCarStatisticsDropPacketsRate, hwXQoSIfCarOverflowBytes=hwXQoSIfCarOverflowBytes, hwXQoSPortShapingInterface=hwXQoSPortShapingInterface, hwXQoSCpRateLimitPeVidValue=hwXQoSCpRateLimitPeVidValue, hwXQoSIfDiffDomainRowStatus=hwXQoSIfDiffDomainRowStatus, hwXQoSBaRowStatus=hwXQoSBaRowStatus, hwXQosQueueStatisticsDropResetTime=hwXQosQueueStatisticsDropResetTime, hwXQoSIfScheduleCfgInfoEntry=hwXQoSIfScheduleCfgInfoEntry, hwXQoSIfObserveCfgInfoEntry=hwXQoSIfObserveCfgInfoEntry, hwXQoSIfSoftCarEntry=hwXQoSIfSoftCarEntry, hwXQoSPortQueueAlarm=hwXQoSPortQueueAlarm, hwXQoSCarPirValue=hwXQoSCarPirValue, hwXQoSCpDefendDiscardedByteRate=hwXQoSCpDefendDiscardedByteRate, hwXQoSCpCarYellowAction=hwXQoSCpCarYellowAction, hwXQoSQueueStatisticsDropGroup=hwXQoSQueueStatisticsDropGroup, hwXQoSStatResouceNotEnoughStatType=hwXQoSStatResouceNotEnoughStatType, hwXQoSFieldDeiGroup=hwXQoSFieldDeiGroup, hwXQoSAtmPvcServiceTypeTable=hwXQoSAtmPvcServiceTypeTable, hwXQoSBaAtmQosMapRowStatus=hwXQoSBaAtmQosMapRowStatus, hwXQoSIfWredCfgInfoEntry=hwXQoSIfWredCfgInfoEntry, hwXQoSQppbPolicyDropedBytes=hwXQoSQppbPolicyDropedBytes, hwXQoSIfQueuePassedByteRate=hwXQoSIfQueuePassedByteRate, hwXQoSIfScheduleModeCfgInfoTable=hwXQoSIfScheduleModeCfgInfoTable, hwXQoSStatResouceNotEnoughAlarmEntry=hwXQoSStatResouceNotEnoughAlarmEntry, hwXQoSCarStatisticsVlanid=hwXQoSCarStatisticsVlanid, hwXQoSIfCarExceededByteRate=hwXQoSIfCarExceededByteRate, hwXQoSIfTrust8021pAction=hwXQoSIfTrust8021pAction, hwXQoSIfSredRowStatus=hwXQoSIfSredRowStatus, hwXQoSIfWredDirection=hwXQoSIfWredDirection, hwXQoSSredGroup=hwXQoSSredGroup, hwXQoSIfIPCarAggregation=hwXQoSIfIPCarAggregation, hwXQoSUserPriPhbRowStatus=hwXQoSUserPriPhbRowStatus, hwXQoSIfCarExceededPacketRate=hwXQoSIfCarExceededPacketRate, hwXQoSIfRemarkDscpRowStatus=hwXQoSIfRemarkDscpRowStatus, hwXQoSStormControlStatus=hwXQoSStormControlStatus, hwXQoSPhbPort=hwXQoSPhbPort, hwXQoSIfDefaultPriorityIfIndex=hwXQoSIfDefaultPriorityIfIndex, hwXQoSIfMirroredPackets=hwXQoSIfMirroredPackets, hwXQoSCpcarCfgInfoTable=hwXQoSCpcarCfgInfoTable, XQosQueueType=XQosQueueType, hwXQoSVlanBcastSuppressValue=hwXQoSVlanBcastSuppressValue, hwXQoSIfShapingQueueCir=hwXQoSIfShapingQueueCir, hwXQoSServiceclassPort=hwXQoSServiceclassPort, hwXQoSStormControlUnicastMaxRate=hwXQoSStormControlUnicastMaxRate, hwXQoSQueueStatisticsDropPacketsCount=hwXQoSQueueStatisticsDropPacketsCount, hwXQoSIfCarYellowDiscardedBytes=hwXQoSIfCarYellowDiscardedBytes, hwXQoSIfPhbEnableTable=hwXQoSIfPhbEnableTable, hwXQoSCarStatisticsInterfaceIndex=hwXQoSCarStatisticsInterfaceIndex, hwXQosAtmTrafficQueueTable=hwXQosAtmTrafficQueueTable, hwXQoSBa8021pMapRowStatus=hwXQoSBa8021pMapRowStatus, hwXQoSMulBaDscpPhbCos=hwXQoSMulBaDscpPhbCos, hwXQoSCpCarActionCarPbs=hwXQoSCpCarActionCarPbs, hwXQoSBaDscpMapRowStatus=hwXQoSBaDscpMapRowStatus, hwXQoSBaAtmQosPhbRowStatus=hwXQoSBaAtmQosPhbRowStatus, hwXQoSPicForwardingInterface=hwXQoSPicForwardingInterface, hwXQoSBaMapGroup=hwXQoSBaMapGroup, hwXQoSIfSamplingIfIndex=hwXQoSIfSamplingIfIndex, hwXQoSCpcarPassedPackets=hwXQoSCpcarPassedPackets, hwXQoSAtmPvcVpi=hwXQoSAtmPvcVpi, hwXQoSCpRateLimitCeVidBegin=hwXQoSCpRateLimitCeVidBegin, hwXQosVlanStatInUnknownUcastPkts=hwXQosVlanStatInUnknownUcastPkts, hwXQoSIfWredQueueIndex=hwXQoSIfWredQueueIndex, hwXQoSIfDefaultPriorityCfgInfoEntry=hwXQoSIfDefaultPriorityCfgInfoEntry, hwXQoSStormControlMulticastMaxRate=hwXQoSStormControlMulticastMaxRate, hwXQoSSoftCarName=hwXQoSSoftCarName, hwXQoSIfTrustTable=hwXQoSIfTrustTable, hwXQoSStormControlBcMode=hwXQoSStormControlBcMode, hwXQoSCpCarPir=hwXQoSCpCarPir, hwXQoSCprlDiscardedPacketAlarm=hwXQoSCprlDiscardedPacketAlarm, hwXQoSIfTrustRowStatus=hwXQoSIfTrustRowStatus, hwXQoSIfLrDiscardedPackets=hwXQoSIfLrDiscardedPackets, hwXQoSIfActionObjects=hwXQoSIfActionObjects, hwXQoSScheduleQueueCs7Weight=hwXQoSScheduleQueueCs7Weight, hwXQoSTrapQueueId=hwXQoSTrapQueueId, hwXQoSIfSredYellowDiscardProbability=hwXQoSIfSredYellowDiscardProbability, hwXQoSBa8021pPhbRowStatus=hwXQoSBa8021pPhbRowStatus, hwXQoSIfUrpfCtrlType=hwXQoSIfUrpfCtrlType, hwXQosVlanStatOutUcastBytes=hwXQosVlanStatOutUcastBytes, hwXQoSStatisticsObjects=hwXQoSStatisticsObjects, hwXQoSPicForwardingTable=hwXQoSPicForwardingTable, hwXQoSIrsmDropPacket=hwXQoSIrsmDropPacket, hwXQoSIfDiffDomainGroup=hwXQoSIfDiffDomainGroup, hwXQoSIfUrpfAllowDefault=hwXQoSIfUrpfAllowDefault, hwXQoSBaExpPhbCfgInfoEntry=hwXQoSBaExpPhbCfgInfoEntry, hwXQoSIfPppoeDestMac=hwXQoSIfPppoeDestMac, hwXQoSQueueStatisticsTable=hwXQoSQueueStatisticsTable, hwXQoSPppInboundTable=hwXQoSPppInboundTable, hwXQoSAAADs8021pRowStatus=hwXQoSAAADs8021pRowStatus, hwXQoSIfCarRedDiscardedPackets=hwXQoSIfCarRedDiscardedPackets, hwXQoSPortStatisticsDropEntry=hwXQoSPortStatisticsDropEntry)
mibBuilder.exportSymbols("HUAWEI-XQoS-MIB", hwXQoSIfRemarkDscpTable=hwXQoSIfRemarkDscpTable, hwXQoSIfSamplingCfgInfoTable=hwXQoSIfSamplingCfgInfoTable, hwXQoSIfLocalPrecedenceQueueMapEntry=hwXQoSIfLocalPrecedenceQueueMapEntry, hwXQoSRuleFailObjects=hwXQoSRuleFailObjects, hwXQoSBaAtmQosPhbServType=hwXQoSBaAtmQosPhbServType, hwXQoSIfTrust8021pGroup=hwXQoSIfTrust8021pGroup, hwXQoSCpCarSlotStatEntry=hwXQoSCpCarSlotStatEntry, hwXQoSIfCarRunInfoTable=hwXQoSIfCarRunInfoTable, hwXQoSFieldDeiInterface=hwXQoSFieldDeiInterface, hwXQoSCpCarCfgInfoEntry=hwXQoSCpCarCfgInfoEntry, hwXQoSBaExpPhbPri=hwXQoSBaExpPhbPri, hwXQoSIfCarRowStatus=hwXQoSIfCarRowStatus, hwXQoSCpcarObjects=hwXQoSCpcarObjects, hwXQoSCpCarActionCarEbs=hwXQoSCpCarActionCarEbs, hwXQoSIfQueueDiscardedBytes=hwXQoSIfQueueDiscardedBytes, hwXQoSStormControlUcMode=hwXQoSStormControlUcMode, hwXQoSCpRateLimitIgmpCbs=hwXQoSCpRateLimitIgmpCbs, hwXQoSIf8021PMapCfgInfoEntry=hwXQoSIf8021PMapCfgInfoEntry, hwXQoSIfQueuePassededBytes=hwXQoSIfQueuePassededBytes, hwXQoSIfMirrorIfIndex=hwXQoSIfMirrorIfIndex, hwXQoSVlanBcastSuppressGroup=hwXQoSVlanBcastSuppressGroup, hwXQoSPicForwardingRowStatus=hwXQoSPicForwardingRowStatus, hwXQoSIfCarConformedPacketRate=hwXQoSIfCarConformedPacketRate, hwXQoSIfQueueDiscardedPackets=hwXQoSIfQueueDiscardedPackets, hwXQoSQppbPolicyStatisticsEntry=hwXQoSQppbPolicyStatisticsEntry, hwXQoSGlobalWredClassIndex=hwXQoSGlobalWredClassIndex, hwXQoSCpRateLimitRowStatus=hwXQoSCpRateLimitRowStatus, hwXQoSBaDscpMapCfgInfoTable=hwXQoSBaDscpMapCfgInfoTable, hwXQoSIfMirrorVlanID=hwXQoSIfMirrorVlanID, hwXQoSQueueStatisticsEntry=hwXQoSQueueStatisticsEntry, hwXQoSIfObserveRowStatus=hwXQoSIfObserveRowStatus, hwXQoSCarGreenColor=hwXQoSCarGreenColor, hwXQoSCARResouceNotEnoughSlotId=hwXQoSCARResouceNotEnoughSlotId, hwXQoSIfPhbEnableIfIndex=hwXQoSIfPhbEnableIfIndex, hwXQoSPortQueueStatisticsDiscardPacketsRate=hwXQoSPortQueueStatisticsDiscardPacketsRate, hwXQoSServiceclassRowStatus=hwXQoSServiceclassRowStatus, hwXQoSMulBaDscpPhbRowStatus=hwXQoSMulBaDscpPhbRowStatus, hwXQoSIfSoftCarTable=hwXQoSIfSoftCarTable, hwXQoSIfShapingIfIndex=hwXQoSIfShapingIfIndex, hwXQoSShapingGroup=hwXQoSShapingGroup, hwXQoSUrpfDiscardStatisticsTable=hwXQoSUrpfDiscardStatisticsTable, hwXQosPortStatisticsDropResetTime=hwXQosPortStatisticsDropResetTime, hwXQoSRemarkVlanID2=hwXQoSRemarkVlanID2, hwXQoSProfileEntry=hwXQoSProfileEntry, hwXQoSIfPhbEnableVlanId=hwXQoSIfPhbEnableVlanId, hwXQoSIfObserveCfgInfoTable=hwXQoSIfObserveCfgInfoTable, hwXQoSIfIPCarCfgInfoTable=hwXQoSIfIPCarCfgInfoTable, hwXQoSBaName=hwXQoSBaName, hwXQoSIfOutMulticastIfIndex=hwXQoSIfOutMulticastIfIndex, hwXQoSCarTable=hwXQoSCarTable, hwXQoSBaMapCfgInfoTable=hwXQoSBaMapCfgInfoTable, hwXQoSAtmPvcDiffDomainIfIndex=hwXQoSAtmPvcDiffDomainIfIndex, hwXQoSIrsmGroupAddress=hwXQoSIrsmGroupAddress, hwXQoSCommonInboundGroup=hwXQoSCommonInboundGroup, hwXQoSQppbPolicyGroup=hwXQoSQppbPolicyGroup, hwXQoSIfTrustIfIndex=hwXQoSIfTrustIfIndex, hwXQoSIfUrpfRowStatus=hwXQoSIfUrpfRowStatus, hwXQosIfOutboundQueueStatisticGroup=hwXQosIfOutboundQueueStatisticGroup, hwXQoSCarGreenAction=hwXQoSCarGreenAction, hwXQoSCpCarFilterCfgInfoEntry=hwXQoSCpCarFilterCfgInfoEntry, hwXQoSConformance=hwXQoSConformance, hwXQoSIfIPCarCir=hwXQoSIfIPCarCir, hwXQoSIfWredHighlimit=hwXQoSIfWredHighlimit, hwXQoSIfQueueTotalBytes=hwXQoSIfQueueTotalBytes, hwXQoSStormControlUnicastMinRate=hwXQoSStormControlUnicastMinRate, hwXQoSCarRowStatus=hwXQoSCarRowStatus, hwXQoSAtmPvcServiceType=hwXQoSAtmPvcServiceType, hwXQoSCpcarRowStatus=hwXQoSCpcarRowStatus, hwXQosVlanStatInTotalBytes=hwXQosVlanStatInTotalBytes, hwXQoSIfIPCarGreenAction=hwXQoSIfIPCarGreenAction, hwXQoSIfCarVlanID=hwXQoSIfCarVlanID, hwXQoSIfHqosPriority=hwXQoSIfHqosPriority, hwXQoSIfSoftCarIfIndex=hwXQoSIfSoftCarIfIndex, hwXQoSIfIPCarStartIp=hwXQoSIfIPCarStartIp, hwXQoSIfCarDirection=hwXQoSIfCarDirection, hwXQoSCpcarDiscardedBytes=hwXQoSCpcarDiscardedBytes, hwXQoSAtmPvpDiffDomainName=hwXQoSAtmPvpDiffDomainName, hwXQoSPppInboundColor=hwXQoSPppInboundColor, hwXQoSScheduleQueueAf4Weight=hwXQoSScheduleQueueAf4Weight, hwXQoSIfScheduleModeIfIndex=hwXQoSIfScheduleModeIfIndex, hwXQosVlanStatInUcastPkts=hwXQosVlanStatInUcastPkts, hwXQoSGeneral=hwXQoSGeneral, hwXQoSBa8021pPhbGroup=hwXQoSBa8021pPhbGroup, hwXQoSCarRedColor=hwXQoSCarRedColor, hwXQoSPortStatisticsDropTable=hwXQoSPortStatisticsDropTable, hwXQoSIfMirrorRowStatus=hwXQoSIfMirrorRowStatus, UrpfCtrlType=UrpfCtrlType, hwXQoSIfSredCfgInfoTable=hwXQoSIfSredCfgInfoTable, hwXQoSIfCarIndex=hwXQoSIfCarIndex, hwXQoSCpDefendPassedByteRate=hwXQoSCpDefendPassedByteRate, hwXQoSIfDiffDomainName=hwXQoSIfDiffDomainName, hwXQoSPortQueueStatisticsQueueIndex=hwXQoSPortQueueStatisticsQueueIndex, hwXQoSSecurityStormControlInterfaceChassisId=hwXQoSSecurityStormControlInterfaceChassisId, hwXQoSCpCarGreenAction=hwXQoSCpCarGreenAction, hwXQoSGlobalWredTypeCfgTable=hwXQoSGlobalWredTypeCfgTable, hwXQoSIfLrCfgInfoEntry=hwXQoSIfLrCfgInfoEntry, hwXQoSGlobalWredClassDiscardProbability=hwXQoSGlobalWredClassDiscardProbability, hwXQoSIfTrust8021pEntry=hwXQoSIfTrust8021pEntry, hwXQoSIfCarGreenDiscardedPackets=hwXQoSIfCarGreenDiscardedPackets, hwXQoSIfLrCbs=hwXQoSIfLrCbs, hwXQoSIrsmDelayAlarm=hwXQoSIrsmDelayAlarm, hwXQoSRemarkIfIndex=hwXQoSRemarkIfIndex, hwXQoSBaGroup=hwXQoSBaGroup, hwXQoSQueueInterfaceIndex=hwXQoSQueueInterfaceIndex, hwXQoSIfSamplingCfgInfoEntry=hwXQoSIfSamplingCfgInfoEntry, hwXQoSGlobalWredTypeHighlimit=hwXQoSGlobalWredTypeHighlimit, hwXQoSTrapIfName=hwXQoSTrapIfName, hwXQoSQppbPolicyLocalID=hwXQoSQppbPolicyLocalID, hwXQoSBaPhbCos=hwXQoSBaPhbCos, hwXQoSIfQueueCfgInfoTable=hwXQoSIfQueueCfgInfoTable, hwXQoSAtmTrafficQueueIfIndex=hwXQoSAtmTrafficQueueIfIndex, hwXQoSQueueStatisticsDropQueueIndex=hwXQoSQueueStatisticsDropQueueIndex, hwXQoSIfCarRedPassedBytes=hwXQoSIfCarRedPassedBytes, hwXQoSFieldDeiEnabled=hwXQoSFieldDeiEnabled, hwXQoSCarTableGroup=hwXQoSCarTableGroup, hwXQoSStormControlMulticastMinRate=hwXQoSStormControlMulticastMinRate, hwXQoSRedirectNextHopObjects=hwXQoSRedirectNextHopObjects, hwXQoSCommonInboundPhbColor=hwXQoSCommonInboundPhbColor, hwXQoSCpCarCbs=hwXQoSCpCarCbs, hwXQoSCARResouceNotEnoughCARType=hwXQoSCARResouceNotEnoughCARType, hwXQoSCarStatisticsEntry=hwXQoSCarStatisticsEntry, IPCARRuleType=IPCARRuleType, hwXQoSIfCarRedRemarkedPackets=hwXQoSIfCarRedRemarkedPackets, hwXQoSDeiTable=hwXQoSDeiTable, hwXQoSIfOutboundMulticastCfgInfoEntry=hwXQoSIfOutboundMulticastCfgInfoEntry, hwXQoSIfPppoeCfgInfoEntry=hwXQoSIfPppoeCfgInfoEntry, hwXQoSIfShapingQueuePir=hwXQoSIfShapingQueuePir, hwXQoSIfEnableRemarkAction=hwXQoSIfEnableRemarkAction, hwXQoSBaDscpPhbPri=hwXQoSBaDscpPhbPri, hwXQoSCpcarStaticsObjects=hwXQoSCpcarStaticsObjects, hwXQoSBaAtmQosPhbCos=hwXQoSBaAtmQosPhbCos, hwXQoSPortQueueAlarmEntry=hwXQoSPortQueueAlarmEntry, hwXQoSCpCarEbs=hwXQoSCpCarEbs, hwXQoSMulBa8021pPhbCfgInfoEntry=hwXQoSMulBa8021pPhbCfgInfoEntry, hwXQoSIfLocPreQueMapIfIndex=hwXQoSIfLocPreQueMapIfIndex, hwXQoSVlanStatisticsObjects=hwXQoSVlanStatisticsObjects, hwXQoSCpRateLimitIfIndex=hwXQoSCpRateLimitIfIndex, hwXQoSAtmPvcDiffDomainRowStatus=hwXQoSAtmPvcDiffDomainRowStatus, hwXQoSProfileObjects=hwXQoSProfileObjects, hwXQoSBaExpPhbGroup=hwXQoSBaExpPhbGroup, hwXQoSCarRedServiceClass=hwXQoSCarRedServiceClass, hwXQoSPortQueueStatisticsTotalDiscardBytes=hwXQoSPortQueueStatisticsTotalDiscardBytes, hwXQoSPhbRowStatus=hwXQoSPhbRowStatus, hwXQoSPortShapingValue=hwXQoSPortShapingValue, hwXQoSQueueStatisticsDropIfIndex=hwXQoSQueueStatisticsDropIfIndex, PYSNMP_MODULE_ID=hwXQoSMIB, hwXQoSCommonInboundRowStatus=hwXQoSCommonInboundRowStatus, hwXQoSIfQueueDirection=hwXQoSIfQueueDirection, hwXQoSIrsmDelay=hwXQoSIrsmDelay, hwXQoSProfileUsedAlarm=hwXQoSProfileUsedAlarm, hwXQoSCARResouceNotEnoughAlarmTable=hwXQoSCARResouceNotEnoughAlarmTable, hwXQoSIfMirrorCfgVlanID=hwXQoSIfMirrorCfgVlanID, hwXQoSMulBa8021pPhbRowStatus=hwXQoSMulBa8021pPhbRowStatus, hwXQoSGlobalWredTypeDiscardProbability=hwXQoSGlobalWredTypeDiscardProbability, hwXQoSIfMirrorRunInfoEntry=hwXQoSIfMirrorRunInfoEntry, hwXQoSIfWredHighDiscardProbability=hwXQoSIfWredHighDiscardProbability, hwXQoSBaExpMapColour=hwXQoSBaExpMapColour, hwXQoSIfQueueRunInfoEntry=hwXQoSIfQueueRunInfoEntry, hwXQoSCpDefendDiscardedPacketRate=hwXQoSCpDefendDiscardedPacketRate, hwXQoSIfWredDiscardedPackets=hwXQoSIfWredDiscardedPackets, hwXQoSIfCarGreenAction=hwXQoSIfCarGreenAction, hwXQoSVlanBcastSuppressEntry=hwXQoSVlanBcastSuppressEntry, hwXQoSIfQueueGroup=hwXQoSIfQueueGroup, hwXQoSIfOutActualBandwidth=hwXQoSIfOutActualBandwidth, hwXQoSPortQueueStatisticsPassPacketsRate=hwXQoSPortQueueStatisticsPassPacketsRate, hwXQoSGlobalObjects=hwXQoSGlobalObjects, hwXQoSIfMulticastWeightValue=hwXQoSIfMulticastWeightValue, hwXQoSIfCarYellowRemarkedPackets=hwXQoSIfCarYellowRemarkedPackets, hwXQoSCpRateLimitTable=hwXQoSCpRateLimitTable, hwXQoSBaCfgInfoTable=hwXQoSBaCfgInfoTable, hwXQoSIfDiffDomainIfIndex=hwXQoSIfDiffDomainIfIndex, hwXQoSIfCarRedRemarkValue=hwXQoSIfCarRedRemarkValue, hwXQoSIfCarYellowPassedBytes=hwXQoSIfCarYellowPassedBytes, hwXQoSCpCarActionCarPir=hwXQoSCpCarActionCarPir, hwXQoSPortQueueAlarmTrunkIndex=hwXQoSPortQueueAlarmTrunkIndex, hwXQoSCarDirection=hwXQoSCarDirection, hwXQoSBaDscpPhbCfgInfoTable=hwXQoSBaDscpPhbCfgInfoTable, hwXQoSBaExpMapRowStatus=hwXQoSBaExpMapRowStatus, hwXQoSNotifications=hwXQoSNotifications, hwXQoSCarStatisticsPassPackets=hwXQoSCarStatisticsPassPackets, hwXQoSBaDscpPhbCfgInfoEntry=hwXQoSBaDscpPhbCfgInfoEntry, hwXQoSPhbEnableVlanID1=hwXQoSPhbEnableVlanID1, hwXQoSDeiRowStatus=hwXQoSDeiRowStatus, hwXQoSIfWredRowStatus=hwXQoSIfWredRowStatus, hwXQoSIfQueDiscardPackets=hwXQoSIfQueDiscardPackets, hwXQoSAtmPvcServiceTypeVpiIndex=hwXQoSAtmPvcServiceTypeVpiIndex, hwXQoSIfCarExceededBytes=hwXQoSIfCarExceededBytes, hwXQoSIfCarPassedBytes=hwXQoSIfCarPassedBytes, hwXQosQueueStatisticsDropReset=hwXQosQueueStatisticsDropReset, hwXQoSIfLrRowStatus=hwXQoSIfLrRowStatus, hwXQoSSecurityStormControlInterfaceTable=hwXQoSSecurityStormControlInterfaceTable, hwXQosVlanStatOutUcastPkts=hwXQosVlanStatOutUcastPkts, hwXQoSServiceclassGroup=hwXQoSServiceclassGroup, hwXQoSIfTrustAction=hwXQoSIfTrustAction, hwXQoSStatResouceNotEnoughAlarmTable=hwXQoSStatResouceNotEnoughAlarmTable, hwXQoSIfSredRedDiscardProbability=hwXQoSIfSredRedDiscardProbability, hwXQoSQueueStatisticsEgressIfIndex=hwXQoSQueueStatisticsEgressIfIndex, hwXQoSQppbPolicyStatisticsTable=hwXQoSQppbPolicyStatisticsTable, hwXQosAtmPvcServiceTypeGroup=hwXQosAtmPvcServiceTypeGroup, hwXQoSRuleFaileAlarm=hwXQoSRuleFaileAlarm, hwXQoSIfTrust8021pVlanID=hwXQoSIfTrust8021pVlanID, ResetFlag=ResetFlag, hwXQoSIfPppoeSourceMac=hwXQoSIfPppoeSourceMac, hwXQoSCpCarActionGreenRemarkValue=hwXQoSCpCarActionGreenRemarkValue, hwXQoSIfQueueVlanID=hwXQoSIfQueueVlanID, hwXQoSPortShapingEntry=hwXQoSPortShapingEntry, hwXQoSBaPhbPri=hwXQoSBaPhbPri, hwXQoSIfDiffDomainVlanId2=hwXQoSIfDiffDomainVlanId2, hwXQoSIfIPCarCfgInfoEntry=hwXQoSIfIPCarCfgInfoEntry, hwXQoSIfCarRedDiscardedBytes=hwXQoSIfCarRedDiscardedBytes, hwXQoSAtmPvcNameServiceTypeIndex=hwXQoSAtmPvcNameServiceTypeIndex, hwXQoSCpCarSlotStatPassedPackets=hwXQoSCpCarSlotStatPassedPackets, hwXQoSStormControlObjects=hwXQoSStormControlObjects, hwXQoSIfLrCfgInfoTable=hwXQoSIfLrCfgInfoTable, hwXQoSStormControlBroadcastMinRate=hwXQoSStormControlBroadcastMinRate, hwXQoSGlobalWredTypeLowlimit=hwXQoSGlobalWredTypeLowlimit, hwXQoSCARResouceNotEnoughAlarm=hwXQoSCARResouceNotEnoughAlarm, hwXQoSBaIndex=hwXQoSBaIndex, hwXQoSIfIPCarCfgIfIndex=hwXQoSIfIPCarCfgIfIndex, hwXQoSGlobalWredClassHighlimit=hwXQoSGlobalWredClassHighlimit, hwXQoSQueueGroup=hwXQoSQueueGroup, hwXQosVlanStatOutMcastPkts=hwXQosVlanStatOutMcastPkts, hwXQoSPortShapingGroup=hwXQoSPortShapingGroup, hwXQoSCpcarRunInfoEntry=hwXQoSCpcarRunInfoEntry, hwXQoSStormControlLogEnable=hwXQoSStormControlLogEnable, hwXQoSIfCarConformedPackets=hwXQoSIfCarConformedPackets, hwXQoSIfCarEbs=hwXQoSIfCarEbs, hwXQoSIfOutboundMulticastCfgInfoTable=hwXQoSIfOutboundMulticastCfgInfoTable, hwXQoSBaExpMapPri=hwXQoSBaExpMapPri, hwXQoSIfSamplingDirection=hwXQoSIfSamplingDirection, hwXQoSPhbEntry=hwXQoSPhbEntry, hwXQoSMulDscpPhbCfgInfoEntry=hwXQoSMulDscpPhbCfgInfoEntry, DirectionType=DirectionType, hwXQoSIfCarCfgInfoTable=hwXQoSIfCarCfgInfoTable, hwXQoSIfCarCfgInfoEntry=hwXQoSIfCarCfgInfoEntry, hwXQoSIfHQOSPriCfgInfoEntry=hwXQoSIfHQOSPriCfgInfoEntry, hwXQoSIPCarRuleType=hwXQoSIPCarRuleType, hwXQoSBaExpPhbIndex=hwXQoSBaExpPhbIndex, hwXQoSIfUrpfCfgIfIndex=hwXQoSIfUrpfCfgIfIndex, hwXQoSSlotId=hwXQoSSlotId, hwXQoSStormControlTable=hwXQoSStormControlTable, hwXQoSQppbPolicyStatisticsInterfaceIndex=hwXQoSQppbPolicyStatisticsInterfaceIndex, hwXQoSQppbPolicyMatchedPackets=hwXQoSQppbPolicyMatchedPackets, hwXQoSBa8021pMapCfgInfoTable=hwXQoSBa8021pMapCfgInfoTable, hwXQoSBaAtmQosPhbClp=hwXQoSBaAtmQosPhbClp, hwXQoSCarStatisticsPassBytes=hwXQoSCarStatisticsPassBytes, hwXQoSIfPppoeIfIndex=hwXQoSIfPppoeIfIndex, hwXQoSIfIPCarRedAction=hwXQoSIfIPCarRedAction, hwXQoSIfDiffDomainEntry=hwXQoSIfDiffDomainEntry, hwXQoSGlobalWredClassLowlimit=hwXQoSGlobalWredClassLowlimit, hwXQoSBaMapPri=hwXQoSBaMapPri, hwXQoSBaDscpPhbGroup=hwXQoSBaDscpPhbGroup, hwXQoSSoftCarIndex=hwXQoSSoftCarIndex, hwXQoSRemarkEntry=hwXQoSRemarkEntry)
mibBuilder.exportSymbols("HUAWEI-XQoS-MIB", hwXQoSTrapDiscardPackets=hwXQoSTrapDiscardPackets, hwXQoSIfUrpfCfgInfoEntry=hwXQoSIfUrpfCfgInfoEntry, hwXQoSAtmPvcVbrScr=hwXQoSAtmPvcVbrScr, hwXQoSIfQueueTotalPackets=hwXQoSIfQueueTotalPackets, hwXQoSCarYellowColor=hwXQoSCarYellowColor, hwXQoSCpcarDiscardedPackets=hwXQoSCpcarDiscardedPackets, hwXQoSBaPhbCfgInfoTable=hwXQoSBaPhbCfgInfoTable, hwXQoSCpDefendObjectIndex=hwXQoSCpDefendObjectIndex, hwXQoSUrpfSlotPhysicalIndex=hwXQoSUrpfSlotPhysicalIndex, hwXQoSQueueCirValue=hwXQoSQueueCirValue, hwXQoSBa8021pPhbPri=hwXQoSBa8021pPhbPri, hwXQoSCarStatisticsTable=hwXQoSCarStatisticsTable, hwXQoSIfSamplingType=hwXQoSIfSamplingType, hwXQoSBaMapCfgInfoEntry=hwXQoSBaMapCfgInfoEntry, hwXQoSCarStatisticsPassBytesRate=hwXQoSCarStatisticsPassBytesRate, hwXQoSIfCarOverflowByteRate=hwXQoSIfCarOverflowByteRate, hwXQoSIfPhbEnableDomainName=hwXQoSIfPhbEnableDomainName, hwXQoSIfSredYellowStartDiscardPoint=hwXQoSIfSredYellowStartDiscardPoint, hwXQoSCpCarActionPacketType=hwXQoSCpCarActionPacketType, hwXQoSCommonInboundTable=hwXQoSCommonInboundTable, hwXQoSAtmTrafficQueueRowStatus=hwXQoSAtmTrafficQueueRowStatus, hwXQoSCpCarActionRedRemarkValue=hwXQoSCpCarActionRedRemarkValue, hwXQoSObjects=hwXQoSObjects, hwXQoSSoftCarRowStatus=hwXQoSSoftCarRowStatus, hwXQoSIfSampleRunInfoTable=hwXQoSIfSampleRunInfoTable, hwXQoSCpCarRowStatus=hwXQoSCpCarRowStatus, hwXQoSRedirectNextHopEntry=hwXQoSRedirectNextHopEntry, hwXQoSCpCarSlotStatPacketType=hwXQoSCpCarSlotStatPacketType, hwXQoSCpCarRedRemarkValue=hwXQoSCpCarRedRemarkValue, hwXQosAtmTrafficQueueGroup=hwXQosAtmTrafficQueueGroup, hwXQoSCarStatisticsDirection=hwXQoSCarStatisticsDirection, hwXQoSIfLocPreQueMapCosType=hwXQoSIfLocPreQueMapCosType, hwXQoSCommonInboundPhbIndex=hwXQoSCommonInboundPhbIndex, hwXQoSUserPriPhbColour=hwXQoSUserPriPhbColour, hwXQoSBaAtmQosMapClp=hwXQoSBaAtmQosMapClp, hwXQoSAAATrustCfgInfoTable=hwXQoSAAATrustCfgInfoTable, hwXQoSIfWredRunInfoTable=hwXQoSIfWredRunInfoTable, hwXQosVlanStatOutBcastBytes=hwXQosVlanStatOutBcastBytes, hwXQoSPortStatisticsDropGroup=hwXQoSPortStatisticsDropGroup, hwXQoSDeiVlanID1=hwXQoSDeiVlanID1, hwXQoSScheduleQueueAf3Weight=hwXQoSScheduleQueueAf3Weight, hwXQoSRemarkTable=hwXQoSRemarkTable, hwXQoSCpCarCir=hwXQoSCpCarCir, CarAction=CarAction, hwXQoSIfInActualBandwidth=hwXQoSIfInActualBandwidth, hwXQoSIfStatisticsObjects=hwXQoSIfStatisticsObjects, hwXQoSBaAtmQosMapColour=hwXQoSBaAtmQosMapColour, hwXQoSPortQueueStatisticsDiscardBytesRate=hwXQoSPortQueueStatisticsDiscardBytesRate, hwXQoSIfSredRedStartDiscardPoint=hwXQoSIfSredRedStartDiscardPoint, hwXQosVlanStatVlanId=hwXQosVlanStatVlanId, hwXQoSCompliances=hwXQoSCompliances, hwXQoSPortQueueStatisticsTable=hwXQoSPortQueueStatisticsTable, hwXQoSVlanStatEnable=hwXQoSVlanStatEnable, hwXQoSCarYellowServiceClass=hwXQoSCarYellowServiceClass, hwXQoSBaAtmQosMapCfgInfoTable=hwXQoSBaAtmQosMapCfgInfoTable, hwXQoSQueueStatisticsQueueIndex=hwXQoSQueueStatisticsQueueIndex, hwXQoSCpRateLimitType=hwXQoSCpRateLimitType, hwXQoSBaMapRowStatus=hwXQoSBaMapRowStatus, hwXQoSAtmTrafficQueueServiceClass=hwXQoSAtmTrafficQueueServiceClass, hwXQoSPortStatisticsDropPacketsCount=hwXQoSPortStatisticsDropPacketsCount, hwXQoSBaDscpMapColour=hwXQoSBaDscpMapColour, hwXQoSCpCarActionYellowRemarkValue=hwXQoSCpCarActionYellowRemarkValue, hwXQoSCpApplyPolicyName=hwXQoSCpApplyPolicyName, hwXQoSIfQueuePassedPackets=hwXQoSIfQueuePassedPackets, hwXQoSScheduleProfileRowStatus=hwXQoSScheduleProfileRowStatus, hwXQoSIfTrust8021pIfIndex=hwXQoSIfTrust8021pIfIndex, hwXQoSIfObserveIndex=hwXQoSIfObserveIndex, hwXQoSIfLrRunInfoEntry=hwXQoSIfLrRunInfoEntry, hwXQoSCpApplyPolicyRowStatus=hwXQoSCpApplyPolicyRowStatus, hwXQoSIfUrpfRunInfoEntry=hwXQoSIfUrpfRunInfoEntry, hwXQoSIfCarGreenRemarkedPackets=hwXQoSIfCarGreenRemarkedPackets, hwXQoSAAATrust8021pInfoEntry=hwXQoSAAATrust8021pInfoEntry, hwXQoSVlanBcastSuppressRowStatus=hwXQoSVlanBcastSuppressRowStatus, hwXQoSIfLocPreQueMapPreValue=hwXQoSIfLocPreQueMapPreValue, hwXQoSBaDscpMapCos=hwXQoSBaDscpMapCos, hwXQoSIfSampleRunInfoEntry=hwXQoSIfSampleRunInfoEntry, hwXQoSQueueRowStatus=hwXQoSQueueRowStatus, hwXQoSStormControlEntry=hwXQoSStormControlEntry, hwXQoSStormControlTrapEnable=hwXQoSStormControlTrapEnable, hwXQoSIPCarRuleIndex=hwXQoSIPCarRuleIndex, hwXQoSCpCarActionCarCbs=hwXQoSCpCarActionCarCbs, hwXQoSCpCarSlotStatTotalPackets=hwXQoSCpCarSlotStatTotalPackets, hwXQoSIf8021PMapRowStatus=hwXQoSIf8021PMapRowStatus, hwXQoSStormControlMcMode=hwXQoSStormControlMcMode, hwXQoSIfOutboundQueueStatisticEntry=hwXQoSIfOutboundQueueStatisticEntry, hwXQoSPortQueueStatisticsDropTailDiscardBytesRate=hwXQoSPortQueueStatisticsDropTailDiscardBytesRate, hwXQosVlanStatTable=hwXQosVlanStatTable, hwXQoSIfDefaultPriorityVlanID=hwXQoSIfDefaultPriorityVlanID, hwXQoSAtmPvpDiffDomainIfIndex=hwXQoSAtmPvpDiffDomainIfIndex, hwXQoSCarRedAction=hwXQoSCarRedAction, hwXQoSQppbPolicyPassedBytes=hwXQoSQppbPolicyPassedBytes, CosType=CosType, hwXQoSCpCarSlotStatPassededBytes=hwXQoSCpCarSlotStatPassededBytes, hwXQoSFieldDeiVlanId=hwXQoSFieldDeiVlanId, hwXQoSIfScheduleIfIndex=hwXQoSIfScheduleIfIndex, hwXQoSIfMirrorDirection=hwXQoSIfMirrorDirection, hwXQoSBaMapColour=hwXQoSBaMapColour, hwXQosVlanStatOutTotalBytes=hwXQosVlanStatOutTotalBytes, hwXQoSPortQueueStatisticsPassBytesRate=hwXQoSPortQueueStatisticsPassBytesRate, hwXQoSIfMplsExpMapCfgInfoEntry=hwXQoSIfMplsExpMapCfgInfoEntry, hwXQoSCpcarTotalPackets=hwXQoSCpcarTotalPackets, hwXQoSCpCarSlotStatDiscardedBytes=hwXQoSCpCarSlotStatDiscardedBytes, hwXQoSAAATrustCfgInfoEntry=hwXQoSAAATrustCfgInfoEntry, hwXQoSQueueStatisticsDropObjects=hwXQoSQueueStatisticsDropObjects, hwXQoSBaAtmQosPhbColour=hwXQoSBaAtmQosPhbColour, hwXQoSIfMplsExpMapRowStatus=hwXQoSIfMplsExpMapRowStatus, hwXQoSIfCarCfgIfIndex=hwXQoSIfCarCfgIfIndex, hwXQoSIfWredRandomDiscardedPackets=hwXQoSIfWredRandomDiscardedPackets, hwXQoSBaExpMapCos=hwXQoSBaExpMapCos, hwXQoSDSUserPriIndex=hwXQoSDSUserPriIndex, hwXQoSIfQueueCfgVlanID=hwXQoSIfQueueCfgVlanID, hwXQoSBaAtmQosPhbCfgInfoTable=hwXQoSBaAtmQosPhbCfgInfoTable, hwXQoSIfSamplingVlanID=hwXQoSIfSamplingVlanID, hwXQoSAtmPvpDiffDomainEntry=hwXQoSAtmPvpDiffDomainEntry, hwXQoSIfUrpfPassedPackets=hwXQoSIfUrpfPassedPackets, hwXQoSCpCarSlotStatSlotIndex=hwXQoSCpCarSlotStatSlotIndex, hwXQoSCpCarActionCarCir=hwXQoSCpCarActionCarCir, hwQoS=hwQoS, hwXQoSQueueTable=hwXQoSQueueTable, hwXQoSCpCarFilterCfgInfoTable=hwXQoSCpCarFilterCfgInfoTable, hwXQoSIfLrRunInfoTable=hwXQoSIfLrRunInfoTable, hwXQoSQueueServiceClass=hwXQoSQueueServiceClass, hwXQoSFieldDeiTable=hwXQoSFieldDeiTable, hwXQoSUrpfObjects=hwXQoSUrpfObjects, hwXQoSQppbPolicyMatchedBytes=hwXQoSQppbPolicyMatchedBytes, hwXQoSIfRemarkDscpEntry=hwXQoSIfRemarkDscpEntry, hwXQoSBaMapType=hwXQoSBaMapType, hwXQoSGlobalWredTypeName=hwXQoSGlobalWredTypeName, hwXQoSSecurityStormControlInterfaceEntry=hwXQoSSecurityStormControlInterfaceEntry, hwXQoSBaPhbRowStatus=hwXQoSBaPhbRowStatus, hwXQoSCpDefendPassedPacketRate=hwXQoSCpDefendPassedPacketRate, hwXQoSMulBa8021pPri=hwXQoSMulBa8021pPri, hwXQoSIfCarYellowRemarkValue=hwXQoSIfCarYellowRemarkValue, hwXQoSCpCarSlotId=hwXQoSCpCarSlotId, BaType=BaType, hwXQosVlanStatOutBcastPkts=hwXQosVlanStatOutBcastPkts, hwXQoSSoftCarCfgEntry=hwXQoSSoftCarCfgEntry, hwXQoSVlanBcastSuppressTable=hwXQoSVlanBcastSuppressTable, hwXQoSBa8021pMapCos=hwXQoSBa8021pMapCos, hwXQoSIrsmSourceAddress=hwXQoSIrsmSourceAddress, hwXQoSStormControlNotification=hwXQoSStormControlNotification, hwXQoSCpCarActionPacketTypeName=hwXQoSCpCarActionPacketTypeName, hwXQoSCpDefendDiscardedBytes=hwXQoSCpDefendDiscardedBytes, hwXQoSIfIPCarEbs=hwXQoSIfIPCarEbs, hwXQoSCarPbsValue=hwXQoSCarPbsValue, hwXQoSIfShapingCfgInfoEntry=hwXQoSIfShapingCfgInfoEntry, hwXQoSIfOutboundQueueStatisticTable=hwXQoSIfOutboundQueueStatisticTable, hwXQoSCprlDiscardedPacketAlarmClear=hwXQoSCprlDiscardedPacketAlarmClear, hwXQosPortStatisticsDropReset=hwXQosPortStatisticsDropReset, hwXQoSQueueStatisticsPassedPacketsCount=hwXQoSQueueStatisticsPassedPacketsCount, hwXQoSQppbPolicyDirection=hwXQoSQppbPolicyDirection, hwXQoSIfScheduleModeRowStatus=hwXQoSIfScheduleModeRowStatus, hwXQoSIfMplsExpMapOutbound=hwXQoSIfMplsExpMapOutbound, hwXQoSIfUrpfCfgVlanID=hwXQoSIfUrpfCfgVlanID, hwXQoSIrsmLocal=hwXQoSIrsmLocal, hwXQoSAtmPvcDiffDomainTable=hwXQoSAtmPvcDiffDomainTable, hwXQoSIfPhbEnableRowStatus=hwXQoSIfPhbEnableRowStatus, hwXQoSIfCarRedAction=hwXQoSIfCarRedAction, hwXQoSFieldDeiRowStatus=hwXQoSFieldDeiRowStatus, hwXQoSCarStatisticsReset=hwXQoSCarStatisticsReset, hwXQoSIrsmSynFrameDropAlarm=hwXQoSIrsmSynFrameDropAlarm)
