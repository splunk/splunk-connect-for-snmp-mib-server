#
# PySNMP MIB module SUN-SNMP-NETRA-CT-RSC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SUN-SNMP-NETRA-CT-RSC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, IpAddress, Unsigned32, TimeTicks, ObjectIdentity, enterprises, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, MibIdentifier, iso, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "Unsigned32", "TimeTicks", "ObjectIdentity", "enterprises", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "MibIdentifier", "iso", "Counter32", "Counter64")
DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress")
netraCtRscMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 2, 65, 2))
netraCtRscMIB.setRevisions(('1900-04-18 12:00',))
if mibBuilder.loadTexts: netraCtRscMIB.setLastUpdated('0004181200Z')
if mibBuilder.loadTexts: netraCtRscMIB.setOrganization('')
netraCtRscObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1))
netraCtRscEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 2))
netraCtRscExpmnt = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 3))
netraCtRscAdminObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 1))
netraCtRscConfigObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2))
netraCtRscSerial2Objs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3))
netraCtRscModemObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 4))
netraCtRscEnetObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5))
netraCtRscEnvObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6))
netraCtRscLogObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7))
netraCtRscRccConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 3, 1))
netraCtRscTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 2, 0))
class DateAndTime(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(11, 11)
    fixedLength = 11

netraCtRscAdminRscReset = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("set", 1), ("clear", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscAdminRscReset.setStatus('current')
netraCtRscAdminHostReset = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("set", 1), ("clear", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscAdminHostReset.setStatus('current')
netraCtRscAdminXir = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("set", 1), ("clear", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscAdminXir.setStatus('current')
netraCtRscAdminNmi = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("set", 1), ("clear", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscAdminNmi.setStatus('current')
netraCtRscAdminBreak = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("set", 1), ("clear", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscAdminBreak.setStatus('current')
netraCtRscGlobalPageFlag = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscGlobalPageFlag.setStatus('current')
netraCtRscGlobalEmailFlag = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscGlobalEmailFlag.setStatus('current')
netraCtRscGlobalIPModeFlag = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("disabled", 1), ("config", 2), ("dhcp", 3), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscGlobalIPModeFlag.setStatus('current')
netraCtRscGlobalPPPFlag = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscGlobalPPPFlag.setStatus('current')
netraCtRscHostname = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscHostname.setStatus('current')
netraCtRscCustomerInfo = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscCustomerInfo.setStatus('current')
netraCtRscVersionBootMajor = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionBootMajor.setStatus('current')
netraCtRscVersionBootMinor = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionBootMinor.setStatus('current')
netraCtRscVersionBootMicro = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionBootMicro.setStatus('current')
netraCtRscVersionMainMajor = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionMainMajor.setStatus('current')
netraCtRscVersionMainMinor = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionMainMinor.setStatus('current')
netraCtRscVersionMainMicro = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionMainMicro.setStatus('current')
netraCtRscVersionFirmwareMajor = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionFirmwareMajor.setStatus('current')
netraCtRscVersionFirmwareMinor = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionFirmwareMinor.setStatus('current')
netraCtRscVersionFirmwareMicro = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscVersionFirmwareMicro.setStatus('current')
netraCtRscTOD = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 16), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscTOD.setStatus('current')
netraCtRscEscape = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscEscape.setStatus('current')
netraCtRscHostWatchDogReboot = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscHostWatchDogReboot.setStatus('current')
netraCtRscHostWatchDogTimeout = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscHostWatchDogTimeout.setStatus('current')
netraCtRscPanicDump = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscPanicDump.setStatus('current')
netraCtRscSerial2Mode = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 2147483647))).clone(namedValues=NamedValues(("rcc", 1), ("modem", 2), ("tty", 3), ("disabled", 4), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2Mode.setStatus('current')
netraCtRscSerial2Parity = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2Parity.setStatus('current')
netraCtRscSerial2Stop = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2Stop.setStatus('current')
netraCtRscSerial2Data = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("seven", 1), ("eight", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2Data.setStatus('current')
netraCtRscSerial2Baud = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2147483647))).clone(namedValues=NamedValues(("b300", 1), ("b1200", 2), ("b1800", 3), ("b2400", 4), ("b4800", 5), ("b9600", 6), ("b19200", 7), ("b38400", 8), ("b57600", 9), ("b115200", 10), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2Baud.setStatus('current')
netraCtRscSerial2HwFlowcontrol = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2HwFlowcontrol.setStatus('current')
netraCtRscSerial2Inactivity = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2Inactivity.setStatus('current')
netraCtRscSerial2PagerOneConfig = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerOneConfig.setStatus('current')
netraCtRscSerial2PagerTwoConfig = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerTwoConfig.setStatus('current')
netraCtRscSerial2PagerOneBaud = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 2147483647))).clone(namedValues=NamedValues(("b300", 1), ("b1200", 2), ("b2400", 3), ("b4800", 4), ("b9600", 5), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerOneBaud.setStatus('current')
netraCtRscSerial2PagerTwoBaud = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 2147483647))).clone(namedValues=NamedValues(("b300", 1), ("b1200", 2), ("b2400", 3), ("b4800", 4), ("b9600", 5), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerTwoBaud.setStatus('current')
netraCtRscSerial2PagerOneParity = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerOneParity.setStatus('current')
netraCtRscSerial2PagerTwoParity = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerTwoParity.setStatus('current')
netraCtRscSerial2PagerOneStop = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerOneStop.setStatus('current')
netraCtRscSerial2PagerTwoStop = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerTwoStop.setStatus('current')
netraCtRscSerial2PagerOneData = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("seven", 1), ("eight", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerOneData.setStatus('current')
netraCtRscSerial2PagerTwoData = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("seven", 1), ("eight", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerTwoData.setStatus('current')
netraCtRscSerial2PagerOneInit = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerOneInit.setStatus('current')
netraCtRscSerial2PagerTwoInit = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerTwoInit.setStatus('current')
netraCtRscSerial2PagerOnePassword = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerOnePassword.setStatus('current')
netraCtRscSerial2PagerTwoPassword = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 3, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSerial2PagerTwoPassword.setStatus('current')
netraCtRscModemParity = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscModemParity.setStatus('current')
netraCtRscModemStop = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscModemStop.setStatus('current')
netraCtRscModemData = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("seven", 1), ("eight", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscModemData.setStatus('current')
netraCtRscCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscCountryCode.setStatus('current')
netraCtRscModemModel = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscModemModel.setStatus('current')
netraCtRscMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscMacAddress.setStatus('current')
netraCtRscEnetTpeLinkTest = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscEnetTpeLinkTest.setStatus('current')
netraCtRscIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscIPAddress.setStatus('current')
netraCtRscIpMask = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscIpMask.setStatus('current')
netraCtRscIpGateway = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscIpGateway.setStatus('current')
netraCtRscSNMPHostAddress = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscSNMPHostAddress.setStatus('current')
netraCtRscMailHostAddress = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscMailHostAddress.setStatus('current')
netraCtRscMailUser = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscMailUser.setStatus('current')
netraCtRscPPPLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscPPPLocalIP.setStatus('current')
netraCtRscPPPRemoteIP = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscPPPRemoteIP.setStatus('current')
netraCtRscMailHostAddressBackup = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 5, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscMailHostAddressBackup.setStatus('current')
netraCtRscSystemType = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscSystemType.setStatus('current')
netraCtRscPowerSupplyCount = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscPowerSupplyCount.setStatus('current')
netraCtRscPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 3), )
if mibBuilder.loadTexts: netraCtRscPowerSupplyTable.setStatus('current')
netraCtRscPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 3, 1), ).setIndexNames((0, "SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscPowerSupplyIndex"))
if mibBuilder.loadTexts: netraCtRscPowerSupplyEntry.setStatus('current')
netraCtRscPowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscPowerSupplyIndex.setStatus('current')
netraCtRscPowerSupplyPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("unknown", 3), ("notimpl", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscPowerSupplyPresent.setStatus('current')
netraCtRscPowerSupplyOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 2147483647))).clone(namedValues=NamedValues(("okay", 1), ("failed", 2), ("unknown", 3), ("offline", 4), ("notimpl", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscPowerSupplyOperState.setStatus('current')
netraCtRscPowerSupplyAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscPowerSupplyAdminState.setStatus('current')
netraCtRscAlarmCount = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscAlarmCount.setStatus('current')
netraCtRscAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 5), )
if mibBuilder.loadTexts: netraCtRscAlarmTable.setStatus('current')
netraCtRscAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 5, 1), ).setIndexNames((0, "SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscAlarmIndex"))
if mibBuilder.loadTexts: netraCtRscAlarmEntry.setStatus('current')
netraCtRscAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: netraCtRscAlarmIndex.setStatus('current')
netraCtRscAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscAlarmID.setStatus('current')
netraCtRscAlarmOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscAlarmOperState.setStatus('current')
netraCtRscAlarmAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscAlarmAdminState.setStatus('current')
netraCtRscAlarmPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscAlarmPrefix.setStatus('current')
netraCtRscFanCount = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscFanCount.setStatus('current')
netraCtRscFanTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 7), )
if mibBuilder.loadTexts: netraCtRscFanTable.setStatus('current')
netraCtRscFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 7, 1), ).setIndexNames((0, "SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscFanIndex"))
if mibBuilder.loadTexts: netraCtRscFanEntry.setStatus('current')
netraCtRscFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscFanIndex.setStatus('current')
netraCtRscFanPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("unknown", 3), ("notimpl", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscFanPresent.setStatus('current')
netraCtRscFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 2147483647))).clone(namedValues=NamedValues(("okay", 1), ("failed", 2), ("unknown", 3), ("notimpl", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscFanStatus.setStatus('current')
netraCtRscTemperatureCount = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscTemperatureCount.setStatus('current')
netraCtRscTemperatureTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9), )
if mibBuilder.loadTexts: netraCtRscTemperatureTable.setStatus('current')
netraCtRscTemperatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9, 1), ).setIndexNames((0, "SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscTemperatureIndex"))
if mibBuilder.loadTexts: netraCtRscTemperatureEntry.setStatus('current')
netraCtRscTemperatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscTemperatureIndex.setStatus('current')
netraCtRscTemperatureValid = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscTemperatureValid.setStatus('current')
netraCtRscTemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscTemperatureValue.setStatus('current')
netraCtRscTemperatureLowWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscTemperatureLowWarn.setStatus('current')
netraCtRscTemperatureHighWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscTemperatureHighWarn.setStatus('current')
netraCtRscTemperatureDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 6, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscTemperatureDesc.setStatus('current')
netraCtRscEventLogCount = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscEventLogCount.setStatus('current')
netraCtRscEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 2), )
if mibBuilder.loadTexts: netraCtRscEventLogTable.setStatus('current')
netraCtRscEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 2, 1), ).setIndexNames((0, "SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscEventLogIndex"))
if mibBuilder.loadTexts: netraCtRscEventLogEntry.setStatus('current')
netraCtRscEventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscEventLogIndex.setStatus('current')
netraCtRscEventLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 2, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscEventLogTimeStamp.setStatus('current')
netraCtRscEventLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscEventLogMessage.setStatus('current')
netraCtRscOrigConsoleLogCount = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscOrigConsoleLogCount.setStatus('current')
netraCtRscOrigConsoleLogTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 4), )
if mibBuilder.loadTexts: netraCtRscOrigConsoleLogTable.setStatus('current')
netraCtRscOrigConsoleLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 4, 1), ).setIndexNames((0, "SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscOrigConsoleLogIndex"))
if mibBuilder.loadTexts: netraCtRscOrigConsoleLogEntry.setStatus('current')
netraCtRscOrigConsoleLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscOrigConsoleLogIndex.setStatus('current')
netraCtRscOrigConsoleLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscOrigConsoleLogTimeStamp.setStatus('current')
netraCtRscOrigConsoleLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscOrigConsoleLogMessage.setStatus('current')
netraCtRscConsoleLogCount = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscConsoleLogCount.setStatus('current')
netraCtRscConsoleLogTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 6), )
if mibBuilder.loadTexts: netraCtRscConsoleLogTable.setStatus('current')
netraCtRscConsoleLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 6, 1), ).setIndexNames((0, "SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscConsoleLogIndex"))
if mibBuilder.loadTexts: netraCtRscConsoleLogEntry.setStatus('current')
netraCtRscConsoleLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscConsoleLogIndex.setStatus('current')
netraCtRscConsoleLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 6, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscConsoleLogTimeStamp.setStatus('current')
netraCtRscConsoleLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netraCtRscConsoleLogMessage.setStatus('current')
netraCtRscConsoleReset = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 1, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscConsoleReset.setStatus('current')
netraCtRscRCCPowerOnEnable = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscRCCPowerOnEnable.setStatus('current')
netraCtRscRCCPowerOffEnable = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscRCCPowerOffEnable.setStatus('current')
netraCtRscRCCResetEnable = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("notimpl", 2147483647)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscRCCResetEnable.setStatus('current')
netraCtRscRCCLinkNum = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netraCtRscRCCLinkNum.setStatus('current')
netraCtRscEvent = NotificationType((1, 3, 6, 1, 4, 1, 42, 2, 65, 2, 2, 0, 1)).setObjects(("SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscAlarmID"), ("SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscAlarmOperState"), ("SUN-SNMP-NETRA-CT-RSC-MIB", "netraCtRscAlarmPrefix"))
if mibBuilder.loadTexts: netraCtRscEvent.setStatus('current')
mibBuilder.exportSymbols("SUN-SNMP-NETRA-CT-RSC-MIB", netraCtRscOrigConsoleLogTimeStamp=netraCtRscOrigConsoleLogTimeStamp, netraCtRscAlarmTable=netraCtRscAlarmTable, netraCtRscVersionBootMinor=netraCtRscVersionBootMinor, netraCtRscAdminRscReset=netraCtRscAdminRscReset, netraCtRscHostWatchDogTimeout=netraCtRscHostWatchDogTimeout, netraCtRscSerial2PagerTwoStop=netraCtRscSerial2PagerTwoStop, netraCtRscEventLogTable=netraCtRscEventLogTable, netraCtRscAlarmID=netraCtRscAlarmID, netraCtRscVersionMainMajor=netraCtRscVersionMainMajor, netraCtRscTemperatureValid=netraCtRscTemperatureValid, netraCtRscExpmnt=netraCtRscExpmnt, netraCtRscRccConfig=netraCtRscRccConfig, netraCtRscPowerSupplyCount=netraCtRscPowerSupplyCount, netraCtRscSystemType=netraCtRscSystemType, netraCtRscTrapPrefix=netraCtRscTrapPrefix, netraCtRscAlarmEntry=netraCtRscAlarmEntry, netraCtRscObjs=netraCtRscObjs, netraCtRscSerial2PagerOneParity=netraCtRscSerial2PagerOneParity, netraCtRscFanIndex=netraCtRscFanIndex, netraCtRscSerial2PagerTwoParity=netraCtRscSerial2PagerTwoParity, netraCtRscAdminXir=netraCtRscAdminXir, netraCtRscTemperatureTable=netraCtRscTemperatureTable, netraCtRscSerial2PagerOneData=netraCtRscSerial2PagerOneData, netraCtRscOrigConsoleLogEntry=netraCtRscOrigConsoleLogEntry, netraCtRscOrigConsoleLogIndex=netraCtRscOrigConsoleLogIndex, netraCtRscVersionBootMicro=netraCtRscVersionBootMicro, netraCtRscSerial2HwFlowcontrol=netraCtRscSerial2HwFlowcontrol, netraCtRscTemperatureLowWarn=netraCtRscTemperatureLowWarn, PYSNMP_MODULE_ID=netraCtRscMIB, netraCtRscSerial2Mode=netraCtRscSerial2Mode, netraCtRscLogObjs=netraCtRscLogObjs, netraCtRscPowerSupplyIndex=netraCtRscPowerSupplyIndex, netraCtRscModemParity=netraCtRscModemParity, netraCtRscConsoleLogMessage=netraCtRscConsoleLogMessage, netraCtRscModemStop=netraCtRscModemStop, netraCtRscVersionFirmwareMinor=netraCtRscVersionFirmwareMinor, netraCtRscCustomerInfo=netraCtRscCustomerInfo, netraCtRscAlarmAdminState=netraCtRscAlarmAdminState, netraCtRscConsoleLogEntry=netraCtRscConsoleLogEntry, netraCtRscAlarmCount=netraCtRscAlarmCount, netraCtRscAdminObjs=netraCtRscAdminObjs, netraCtRscOrigConsoleLogMessage=netraCtRscOrigConsoleLogMessage, netraCtRscTemperatureEntry=netraCtRscTemperatureEntry, netraCtRscFanPresent=netraCtRscFanPresent, netraCtRscSerial2Parity=netraCtRscSerial2Parity, netraCtRscMailUser=netraCtRscMailUser, netraCtRscVersionMainMinor=netraCtRscVersionMainMinor, netraCtRscSerial2Objs=netraCtRscSerial2Objs, netraCtRscEventLogIndex=netraCtRscEventLogIndex, netraCtRscEventLogTimeStamp=netraCtRscEventLogTimeStamp, netraCtRscEvents=netraCtRscEvents, netraCtRscGlobalPageFlag=netraCtRscGlobalPageFlag, netraCtRscVersionFirmwareMajor=netraCtRscVersionFirmwareMajor, netraCtRscMacAddress=netraCtRscMacAddress, netraCtRscOrigConsoleLogTable=netraCtRscOrigConsoleLogTable, netraCtRscEnetTpeLinkTest=netraCtRscEnetTpeLinkTest, netraCtRscSerial2Inactivity=netraCtRscSerial2Inactivity, netraCtRscCountryCode=netraCtRscCountryCode, netraCtRscVersionFirmwareMicro=netraCtRscVersionFirmwareMicro, netraCtRscRCCPowerOnEnable=netraCtRscRCCPowerOnEnable, netraCtRscAlarmOperState=netraCtRscAlarmOperState, netraCtRscMIB=netraCtRscMIB, netraCtRscConsoleLogIndex=netraCtRscConsoleLogIndex, netraCtRscFanCount=netraCtRscFanCount, netraCtRscModemModel=netraCtRscModemModel, netraCtRscOrigConsoleLogCount=netraCtRscOrigConsoleLogCount, netraCtRscPowerSupplyAdminState=netraCtRscPowerSupplyAdminState, netraCtRscSerial2PagerOneInit=netraCtRscSerial2PagerOneInit, netraCtRscFanStatus=netraCtRscFanStatus, netraCtRscEvent=netraCtRscEvent, netraCtRscEnetObjs=netraCtRscEnetObjs, netraCtRscEscape=netraCtRscEscape, netraCtRscSerial2PagerTwoBaud=netraCtRscSerial2PagerTwoBaud, netraCtRscAdminBreak=netraCtRscAdminBreak, netraCtRscVersionBootMajor=netraCtRscVersionBootMajor, netraCtRscTemperatureIndex=netraCtRscTemperatureIndex, netraCtRscConsoleLogTable=netraCtRscConsoleLogTable, netraCtRscRCCPowerOffEnable=netraCtRscRCCPowerOffEnable, netraCtRscPowerSupplyOperState=netraCtRscPowerSupplyOperState, netraCtRscPowerSupplyEntry=netraCtRscPowerSupplyEntry, netraCtRscConfigObjs=netraCtRscConfigObjs, netraCtRscSerial2PagerOneStop=netraCtRscSerial2PagerOneStop, netraCtRscGlobalIPModeFlag=netraCtRscGlobalIPModeFlag, netraCtRscGlobalPPPFlag=netraCtRscGlobalPPPFlag, DateAndTime=DateAndTime, netraCtRscSerial2PagerTwoPassword=netraCtRscSerial2PagerTwoPassword, netraCtRscHostWatchDogReboot=netraCtRscHostWatchDogReboot, netraCtRscFanEntry=netraCtRscFanEntry, netraCtRscIpMask=netraCtRscIpMask, netraCtRscSerial2PagerTwoInit=netraCtRscSerial2PagerTwoInit, netraCtRscAdminNmi=netraCtRscAdminNmi, netraCtRscEnvObjs=netraCtRscEnvObjs, netraCtRscSerial2PagerTwoData=netraCtRscSerial2PagerTwoData, netraCtRscAdminHostReset=netraCtRscAdminHostReset, netraCtRscMailHostAddressBackup=netraCtRscMailHostAddressBackup, netraCtRscSerial2PagerOnePassword=netraCtRscSerial2PagerOnePassword, netraCtRscPowerSupplyPresent=netraCtRscPowerSupplyPresent, netraCtRscConsoleLogTimeStamp=netraCtRscConsoleLogTimeStamp, netraCtRscEventLogCount=netraCtRscEventLogCount, netraCtRscTOD=netraCtRscTOD, netraCtRscIpGateway=netraCtRscIpGateway, netraCtRscEventLogEntry=netraCtRscEventLogEntry, netraCtRscRCCLinkNum=netraCtRscRCCLinkNum, netraCtRscPowerSupplyTable=netraCtRscPowerSupplyTable, netraCtRscConsoleLogCount=netraCtRscConsoleLogCount, netraCtRscSerial2Data=netraCtRscSerial2Data, netraCtRscAlarmIndex=netraCtRscAlarmIndex, netraCtRscConsoleReset=netraCtRscConsoleReset, netraCtRscVersionMainMicro=netraCtRscVersionMainMicro, netraCtRscSerial2Stop=netraCtRscSerial2Stop, netraCtRscPPPRemoteIP=netraCtRscPPPRemoteIP, netraCtRscAlarmPrefix=netraCtRscAlarmPrefix, netraCtRscPPPLocalIP=netraCtRscPPPLocalIP, netraCtRscModemObjs=netraCtRscModemObjs, netraCtRscSNMPHostAddress=netraCtRscSNMPHostAddress, netraCtRscHostname=netraCtRscHostname, netraCtRscModemData=netraCtRscModemData, netraCtRscTemperatureDesc=netraCtRscTemperatureDesc, netraCtRscEventLogMessage=netraCtRscEventLogMessage, netraCtRscMailHostAddress=netraCtRscMailHostAddress, netraCtRscSerial2Baud=netraCtRscSerial2Baud, netraCtRscFanTable=netraCtRscFanTable, netraCtRscTemperatureValue=netraCtRscTemperatureValue, netraCtRscTemperatureCount=netraCtRscTemperatureCount, netraCtRscGlobalEmailFlag=netraCtRscGlobalEmailFlag, netraCtRscSerial2PagerOneBaud=netraCtRscSerial2PagerOneBaud, netraCtRscTemperatureHighWarn=netraCtRscTemperatureHighWarn, netraCtRscSerial2PagerOneConfig=netraCtRscSerial2PagerOneConfig, netraCtRscRCCResetEnable=netraCtRscRCCResetEnable, netraCtRscIPAddress=netraCtRscIPAddress, netraCtRscSerial2PagerTwoConfig=netraCtRscSerial2PagerTwoConfig, netraCtRscPanicDump=netraCtRscPanicDump)
