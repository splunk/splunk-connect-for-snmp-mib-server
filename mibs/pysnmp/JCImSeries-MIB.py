#
# PySNMP MIB module JCImSeries-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JCImSeries-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
mSeries, = mibBuilder.importSymbols("JCIControlsGroup-MIB", "mSeries")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, ObjectIdentity, IpAddress, Integer32, Unsigned32, TimeTicks, iso, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Integer32", "Unsigned32", "TimeTicks", "iso", "Counter64", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jcimSeriesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 1))
if mibBuilder.loadTexts: jcimSeriesMIB.setLastUpdated('0110251448Z')
if mibBuilder.loadTexts: jcimSeriesMIB.setOrganization('Johnson Controls')
opcTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2))
opcTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3))
opcN1Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1))
opcBacnetTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2))
opcStandardTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 3))
opcSeverity = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcSeverity.setStatus('current')
opcSource = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcSource.setStatus('current')
opcTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcTimeStamp.setStatus('current')
opcMessage = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcMessage.setStatus('current')
opcEventCategory = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcEventCategory.setStatus('current')
opcEventCategoryText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcEventCategoryText.setStatus('current')
opcEventType = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("simpleEvent", 1), ("trackingEvent", 2), ("conditionEvent", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcEventType.setStatus('current')
opcEventTypeText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcEventTypeText.setStatus('current')
opcCondition = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcCondition.setStatus('current')
opcSubCondition = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcSubCondition.setStatus('current')
opcActiveTime = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcActiveTime.setStatus('current')
opcQuality = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcQuality.setStatus('current')
opcQualityText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcQualityText.setStatus('current')
opcNewState = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("opcConditionEnabled", 1), ("opcConditionActive", 2), ("opcConditionAcked", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcNewState.setStatus('current')
opcNewStateText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcNewStateText.setStatus('current')
opcAckRequired = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcAckRequired.setStatus('current')
opcAckRequiredText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcAckRequiredText.setStatus('current')
opcCookie = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcCookie.setStatus('current')
opcChangeMask = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcChangeMask.setStatus('current')
opcChangeMaskText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcChangeMaskText.setStatus('current')
opcActorID = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: opcActorID.setStatus('current')
originalDate = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: originalDate.setStatus('current')
originalTime = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: originalTime.setStatus('current')
networkName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkName.setStatus('current')
ncmName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmName.setStatus('current')
systemID = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemID.setStatus('current')
id = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: id.setStatus('current')
expandedID = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: expandedID.setStatus('current')
presentvalue = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: presentvalue.setStatus('current')
units = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: units.setStatus('current')
reportType = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportType.setStatus('current')
alarmType = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmType.setStatus('current')
availattribute1 = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: availattribute1.setStatus('current')
alarmPriority = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPriority.setStatus('current')
featureStatus = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 60), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: featureStatus.setStatus('current')
reportDate = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 61), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportDate.setStatus('current')
reportTime = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 62), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportTime.setStatus('current')
transactionType = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("logonLogoff", 1), ("object", 2), ("feature", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transactionType.setStatus('current')
transactionTypeText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 64), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transactionTypeText.setStatus('current')
location = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 65), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: location.setStatus('current')
deviceName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 66), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceName.setStatus('current')
userID = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 67), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userID.setStatus('current')
accssLevel = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 68), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: accssLevel.setStatus('current')
transactionText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 69), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transactionText.setStatus('current')
firstName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 70), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: firstName.setStatus('current')
lastName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 71), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastName.setStatus('current')
spclText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 72), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spclText.setStatus('current')
cardNumber = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 73), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardNumber.setStatus('current')
deviceTimePresent = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 74), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceTimePresent.setStatus('current')
esjAckComment = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 75), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esjAckComment.setStatus('current')
propertyValue = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 100), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: propertyValue.setStatus('current')
unit = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unit.setStatus('current')
propertyName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 102), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: propertyName.setStatus('current')
fromState = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fromState.setStatus('current')
vendorIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 104), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vendorIdentifier.setStatus('current')
areas = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 105), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: areas.setStatus('current')
bacnetEventType = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 106), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bacnetEventType.setStatus('current')
ackComment = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 107), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ackComment.setStatus('current')
completeAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 108), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: completeAcknowledge.setStatus('current')
badgeNumber = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 109), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: badgeNumber.setStatus('current')
badgeTrace = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 110), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: badgeTrace.setStatus('current')
issueLevel = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 111), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: issueLevel.setStatus('current')
timedOverride = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 112), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timedOverride.setStatus('current')
facilityCode = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 113), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityCode.setStatus('current')
direction = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 114), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: direction.setStatus('current')
functionKey = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 115), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: functionKey.setStatus('current')
barcodeAttach = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 116), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: barcodeAttach.setStatus('current')
terminalName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 117), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: terminalName.setStatus('current')
userName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 118), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userName.setStatus('current')
auditItemName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 119), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: auditItemName.setStatus('current')
pegasysEventName = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 120), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pegasysEventName.setStatus('current')
errorLogType = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 121), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorLogType.setStatus('current')
triggerCode = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 122), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: triggerCode.setStatus('current')
triggerText = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 123), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: triggerText.setStatus('current')
triggerValue = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 124), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: triggerValue.setStatus('current')
reliability = MibScalar((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 2, 125), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reliability.setStatus('current')
n1HvacActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 1)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1HvacActiveConditionalEvent.setStatus('current')
n1HvacInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 2)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1HvacInactiveConditionalEvent.setStatus('current')
n1HvacConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 3)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "esjAckComment"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1HvacConditionalEventAcknowledged.setStatus('current')
n1FireActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 4)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1FireActiveConditionalEvent.setStatus('current')
n1FireInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 5)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1FireInactiveConditionalEvent.setStatus('current')
n1FireConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 6)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "esjAckComment"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1FireConditionalEventAcknowledged.setStatus('current')
n1ServicesActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 7)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1ServicesActiveConditionalEvent.setStatus('current')
n1ServicesInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 8)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1ServicesInactiveConditionalEvent.setStatus('current')
n1ServicesConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 9)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "esjAckComment"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1ServicesConditionalEventAcknowledged.setStatus('current')
n1SecurityActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 10)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1SecurityActiveConditionalEvent.setStatus('current')
n1SecurityInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 11)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "lastName"), ("JCImSeries-MIB", "firstName"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "cardNumber"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "featureStatus"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1SecurityInactiveConditionalEvent.setStatus('current')
n1SecurityConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 12)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "lastName"), ("JCImSeries-MIB", "firstName"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "cardNumber"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "featureStatus"), ("JCImSeries-MIB", "esjAckComment"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1SecurityConditionalEventAcknowledged.setStatus('current')
n1AdminActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 13)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1AdminActiveConditionalEvent.setStatus('current')
n1AdminInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 14)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1AdminInactiveConditionalEvent.setStatus('current')
n1AdminConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 15)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "esjAckComment"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1AdminConditionalEventAcknowledged.setStatus('current')
n1GeneralActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 16)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1GeneralActiveConditionalEvent.setStatus('current')
n1GeneralInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 17)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1GeneralInactiveConditionalEvent.setStatus('current')
n1GeneralConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 18)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "esjAckComment"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1GeneralConditionalEventAcknowledged.setStatus('current')
n1HvacSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 19)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1HvacSimpleEvent.setStatus('current')
n1FireSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 20)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1FireSimpleEvent.setStatus('current')
n1ServicesSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 21)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1ServicesSimpleEvent.setStatus('current')
n1SecuritySimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 22)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1SecuritySimpleEvent.setStatus('current')
n1AdminSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 23)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1AdminSimpleEvent.setStatus('current')
n1GeneralSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 24)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1GeneralSimpleEvent.setStatus('current')
n1HvacTrackingEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 25)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "originalDate"), ("JCImSeries-MIB", "originalTime"), ("JCImSeries-MIB", "featureStatus"), ("JCImSeries-MIB", "reportDate"), ("JCImSeries-MIB", "reportTime"), ("JCImSeries-MIB", "location"), ("JCImSeries-MIB", "deviceName"), ("JCImSeries-MIB", "userID"), ("JCImSeries-MIB", "accssLevel"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1HvacTrackingEvent.setStatus('current')
n1FireTrackingEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 26)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "featureStatus"), ("JCImSeries-MIB", "reportDate"), ("JCImSeries-MIB", "reportTime"), ("JCImSeries-MIB", "location"), ("JCImSeries-MIB", "deviceName"), ("JCImSeries-MIB", "userID"), ("JCImSeries-MIB", "accssLevel"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1FireTrackingEvent.setStatus('current')
n1ServicesTrackingEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 27)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "originalDate"), ("JCImSeries-MIB", "originalTime"), ("JCImSeries-MIB", "featureStatus"), ("JCImSeries-MIB", "reportDate"), ("JCImSeries-MIB", "reportTime"), ("JCImSeries-MIB", "location"), ("JCImSeries-MIB", "deviceName"), ("JCImSeries-MIB", "userID"), ("JCImSeries-MIB", "accssLevel"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1ServicesTrackingEvent.setStatus('current')
n1SecurityTrackingEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 28)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "lastName"), ("JCImSeries-MIB", "firstName"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "cardNumber"), ("JCImSeries-MIB", "featureStatus"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1SecurityTrackingEvent.setStatus('current')
n1AdminTrackingEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 29)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "originalDate"), ("JCImSeries-MIB", "originalTime"), ("JCImSeries-MIB", "featureStatus"), ("JCImSeries-MIB", "reportDate"), ("JCImSeries-MIB", "reportTime"), ("JCImSeries-MIB", "location"), ("JCImSeries-MIB", "deviceName"), ("JCImSeries-MIB", "userID"), ("JCImSeries-MIB", "accssLevel"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1AdminTrackingEvent.setStatus('current')
n1GeneralTrackingEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 1, 0, 30)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "presentvalue"), ("JCImSeries-MIB", "units"), ("JCImSeries-MIB", "spclText"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "expandedID"), ("JCImSeries-MIB", "originalDate"), ("JCImSeries-MIB", "originalTime"), ("JCImSeries-MIB", "featureStatus"), ("JCImSeries-MIB", "reportDate"), ("JCImSeries-MIB", "reportTime"), ("JCImSeries-MIB", "location"), ("JCImSeries-MIB", "deviceName"), ("JCImSeries-MIB", "userID"), ("JCImSeries-MIB", "accssLevel"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: n1GeneralTrackingEvent.setStatus('current')
bacnetDeviceFailureActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 1)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetDeviceFailureActiveConditionalEvent.setStatus('current')
bacnetDeviceFailureInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 2)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetDeviceFailureInactiveConditionalEvent.setStatus('current')
bacnetDeviceFailureConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 3)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetDeviceFailureConditionalEventAcknowledged.setStatus('current')
bacnetHvacActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 4)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHvacActiveConditionalEvent.setStatus('current')
bacnetHvacInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 5)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHvacInactiveConditionalEvent.setStatus('current')
bacnetHvacConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 6)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHvacConditionalEventAcknowledged.setStatus('current')
bacnetFireActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 7)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetFireActiveConditionalEvent.setStatus('current')
bacnetFireInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 8)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetFireInactiveConditionalEvent.setStatus('current')
bacnetFireConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 9)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetFireConditionalEventAcknowledged.setStatus('current')
bacnetSecurityActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 10)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetSecurityActiveConditionalEvent.setStatus('current')
bacnetSecurityInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 11)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetSecurityInactiveConditionalEvent.setStatus('current')
bacnetSecurityConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 12)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetSecurityConditionalEventAcknowledged.setStatus('current')
bacnetServicesActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 13)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetServicesActiveConditionalEvent.setStatus('current')
bacnetServicesInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 14)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetServicesInactiveConditionalEvent.setStatus('current')
bacnetServicesConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 15)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetServicesConditionalEventAcknowledged.setStatus('current')
bacnetAdminActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 16)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetAdminActiveConditionalEvent.setStatus('current')
bacnetAdminInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 17)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetAdminInactiveConditionalEvent.setStatus('current')
bacnetAdminConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 18)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetAdminConditionalEventAcknowledged.setStatus('current')
bacnetGeneralAlarmActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 19)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetGeneralAlarmActiveConditionalEvent.setStatus('current')
bacnetGeneralAlarmInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 20)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetGeneralAlarmInactiveConditionalEvent.setStatus('current')
bacnetGeneralAlarmConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 21)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetGeneralAlarmConditionalEventAcknowledged.setStatus('current')
bacnetGeneralEventActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 22)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetGeneralEventActiveConditionalEvent.setStatus('current')
bacnetGeneralEventInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 23)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetGeneralEventInactiveConditionalEvent.setStatus('current')
bacnetGeneralEventConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 24)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "deviceTimePresent"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetGeneralEventConditionalEventAcknowledged.setStatus('current')
bacnetPanelEventActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 25)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelEventActiveConditionalEvent.setStatus('current')
bacnetPanelEventInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 26)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelEventInactiveConditionalEvent.setStatus('current')
bacnetPanelEventConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 27)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelEventConditionalEventAcknowledged.setStatus('current')
bacnetPanelHWStatusActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 28)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelHWStatusActiveConditionalEvent.setStatus('current')
bacnetPanelHWStatusInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 29)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelHWStatusInactiveConditionalEvent.setStatus('current')
bacnetPanelHWStatusConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 30)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelHWStatusConditionalEventAcknowledged.setStatus('current')
bacnetHostLogActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 31)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "userName"), ("JCImSeries-MIB", "auditItemName"), ("JCImSeries-MIB", "pegasysEventName"), ("JCImSeries-MIB", "errorLogType"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHostLogActiveConditionalEvent.setStatus('current')
bacnetHostLogInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 32)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "userName"), ("JCImSeries-MIB", "auditItemName"), ("JCImSeries-MIB", "pegasysEventName"), ("JCImSeries-MIB", "errorLogType"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHostLogInactiveConditionalEvent.setStatus('current')
bacnetHostLogConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 33)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "userName"), ("JCImSeries-MIB", "auditItemName"), ("JCImSeries-MIB", "pegasysEventName"), ("JCImSeries-MIB", "errorLogType"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHostLogConditionalEventAcknowledged.setStatus('current')
bacnetOutputPointStatusActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 34)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetOutputPointStatusActiveConditionalEvent.setStatus('current')
bacnetOutputPointStatusInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 35)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetOutputPointStatusInactiveConditionalEvent.setStatus('current')
bacnetOutputPointStatusConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 36)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetOutputPointStatusConditionalEventAcknowledged.setStatus('current')
bacnetInputPointStatusActiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 37)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetInputPointStatusActiveConditionalEvent.setStatus('current')
bacnetInputPointStatusInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 38)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetInputPointStatusInactiveConditionalEvent.setStatus('current')
bacnetInputPointStatusConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 39)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "ackComment"), ("JCImSeries-MIB", "completeAcknowledge"), ("JCImSeries-MIB", "reliability"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetInputPointStatusConditionalEventAcknowledged.setStatus('current')
bacnetHvacSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 40)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHvacSimpleEvent.setStatus('current')
bacnetFireSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 41)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetFireSimpleEvent.setStatus('current')
bacnetSecuritySimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 42)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetSecuritySimpleEvent.setStatus('current')
bacnetServicesSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 43)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetServicesSimpleEvent.setStatus('current')
bacnetAdminSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 44)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "propertyName"), ("JCImSeries-MIB", "unit"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetAdminSimpleEvent.setStatus('current')
bacnetAccessGrantSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 45)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "badgeTrace"), ("JCImSeries-MIB", "badgeNumber"), ("JCImSeries-MIB", "lastName"), ("JCImSeries-MIB", "firstName"), ("JCImSeries-MIB", "issueLevel"), ("JCImSeries-MIB", "timedOverride"), ("JCImSeries-MIB", "facilityCode"), ("JCImSeries-MIB", "direction"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetAccessGrantSimpleEvent.setStatus('current')
bacnetAccessDenySimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 46)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "badgeTrace"), ("JCImSeries-MIB", "badgeNumber"), ("JCImSeries-MIB", "lastName"), ("JCImSeries-MIB", "firstName"), ("JCImSeries-MIB", "issueLevel"), ("JCImSeries-MIB", "timedOverride"), ("JCImSeries-MIB", "facilityCode"), ("JCImSeries-MIB", "direction"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetAccessDenySimpleEvent.setStatus('current')
bacnetCardTraceSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 47)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "badgeTrace"), ("JCImSeries-MIB", "badgeNumber"), ("JCImSeries-MIB", "lastName"), ("JCImSeries-MIB", "firstName"), ("JCImSeries-MIB", "issueLevel"), ("JCImSeries-MIB", "timedOverride"), ("JCImSeries-MIB", "facilityCode"), ("JCImSeries-MIB", "direction"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetCardTraceSimpleEvent.setStatus('current')
bacnetTAAccessGrantSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 48)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "badgeTrace"), ("JCImSeries-MIB", "badgeNumber"), ("JCImSeries-MIB", "lastName"), ("JCImSeries-MIB", "firstName"), ("JCImSeries-MIB", "timedOverride"), ("JCImSeries-MIB", "direction"), ("JCImSeries-MIB", "functionKey"), ("JCImSeries-MIB", "barcodeAttach"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetTAAccessGrantSimpleEvent.setStatus('current')
bacnetOutputPointStatusSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 49)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetOutputPointStatusSimpleEvent.setStatus('current')
bacnetInputPointStatusSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 50)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "propertyValue"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetInputPointStatusSimpleEvent.setStatus('current')
bacnetAuditSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 51)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "userName"), ("JCImSeries-MIB", "auditItemName"), ("JCImSeries-MIB", "pegasysEventName"), ("JCImSeries-MIB", "errorLogType"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetAuditSimpleEvent.setStatus('current')
bacnetHostEventSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 52)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "userName"), ("JCImSeries-MIB", "auditItemName"), ("JCImSeries-MIB", "pegasysEventName"), ("JCImSeries-MIB", "errorLogType"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHostEventSimpleEvent.setStatus('current')
bacnetHostLogSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 53)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "userName"), ("JCImSeries-MIB", "auditItemName"), ("JCImSeries-MIB", "pegasysEventName"), ("JCImSeries-MIB", "errorLogType"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHostLogSimpleEvent.setStatus('current')
bacnetHostLogicSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 54)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "triggerCode"), ("JCImSeries-MIB", "triggerText"), ("JCImSeries-MIB", "triggerValue"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetHostLogicSimpleEvent.setStatus('current')
bacnetPanelEventSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 55)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelEventSimpleEvent.setStatus('current')
bacnetPanelHWStatusSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 56)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "bacnetEventType"), ("JCImSeries-MIB", "vendorIdentifier"), ("JCImSeries-MIB", "areas"), ("JCImSeries-MIB", "fromState"), ("JCImSeries-MIB", "terminalName"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetPanelHWStatusSimpleEvent.setStatus('current')
bacnetCommErrorSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 57)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetCommErrorSimpleEvent.setStatus('current')
bacnetGeneralSimpleEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 2, 0, 58)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bacnetGeneralSimpleEvent.setStatus('current')
opcStandardActiveGeneralConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 3, 0, 1)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: opcStandardActiveGeneralConditionalEvent.setStatus('current')
opcStandardInactiveConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 3, 0, 2)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: opcStandardInactiveConditionalEvent.setStatus('current')
opcStandardGeneralConditionalEventAcknowledged = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 3, 0, 3)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcSubCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcActorID"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: opcStandardGeneralConditionalEventAcknowledged.setStatus('current')
opcStandardSimpleNotification = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 3, 0, 4)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: opcStandardSimpleNotification.setStatus('current')
opcStandardTrackingEvent = NotificationType((1, 3, 6, 1, 4, 1, 4399, 2, 1, 10, 3, 3, 0, 5)).setObjects(("JCImSeries-MIB", "opcSeverity"), ("JCImSeries-MIB", "opcCondition"), ("JCImSeries-MIB", "opcSource"), ("JCImSeries-MIB", "opcMessage"), ("JCImSeries-MIB", "opcTimeStamp"), ("JCImSeries-MIB", "opcEventTypeText"), ("JCImSeries-MIB", "opcEventCategoryText"), ("JCImSeries-MIB", "opcActiveTime"), ("JCImSeries-MIB", "opcQualityText"), ("JCImSeries-MIB", "opcNewStateText"), ("JCImSeries-MIB", "opcChangeMaskText"), ("JCImSeries-MIB", "opcAckRequired"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: opcStandardTrackingEvent.setStatus('current')
mibBuilder.exportSymbols("JCImSeries-MIB", bacnetSecurityActiveConditionalEvent=bacnetSecurityActiveConditionalEvent, n1SecurityTrackingEvent=n1SecurityTrackingEvent, bacnetOutputPointStatusInactiveConditionalEvent=bacnetOutputPointStatusInactiveConditionalEvent, presentvalue=presentvalue, alarmPriority=alarmPriority, n1ServicesActiveConditionalEvent=n1ServicesActiveConditionalEvent, ncmName=ncmName, opcEventCategoryText=opcEventCategoryText, n1GeneralInactiveConditionalEvent=n1GeneralInactiveConditionalEvent, n1SecuritySimpleEvent=n1SecuritySimpleEvent, propertyValue=propertyValue, bacnetAdminConditionalEventAcknowledged=bacnetAdminConditionalEventAcknowledged, n1ServicesSimpleEvent=n1ServicesSimpleEvent, triggerValue=triggerValue, bacnetServicesInactiveConditionalEvent=bacnetServicesInactiveConditionalEvent, opcQuality=opcQuality, bacnetSecurityConditionalEventAcknowledged=bacnetSecurityConditionalEventAcknowledged, bacnetEventType=bacnetEventType, opcEventType=opcEventType, bacnetPanelHWStatusInactiveConditionalEvent=bacnetPanelHWStatusInactiveConditionalEvent, transactionTypeText=transactionTypeText, bacnetGeneralSimpleEvent=bacnetGeneralSimpleEvent, opcStandardActiveGeneralConditionalEvent=opcStandardActiveGeneralConditionalEvent, pegasysEventName=pegasysEventName, bacnetCardTraceSimpleEvent=bacnetCardTraceSimpleEvent, opcSeverity=opcSeverity, bacnetHvacActiveConditionalEvent=bacnetHvacActiveConditionalEvent, bacnetHostLogSimpleEvent=bacnetHostLogSimpleEvent, n1AdminInactiveConditionalEvent=n1AdminInactiveConditionalEvent, n1GeneralTrackingEvent=n1GeneralTrackingEvent, n1GeneralConditionalEventAcknowledged=n1GeneralConditionalEventAcknowledged, completeAcknowledge=completeAcknowledge, n1ServicesConditionalEventAcknowledged=n1ServicesConditionalEventAcknowledged, bacnetOutputPointStatusActiveConditionalEvent=bacnetOutputPointStatusActiveConditionalEvent, userName=userName, triggerCode=triggerCode, opcBacnetTraps=opcBacnetTraps, bacnetHostLogConditionalEventAcknowledged=bacnetHostLogConditionalEventAcknowledged, userID=userID, cardNumber=cardNumber, bacnetGeneralEventConditionalEventAcknowledged=bacnetGeneralEventConditionalEventAcknowledged, opcStandardGeneralConditionalEventAcknowledged=opcStandardGeneralConditionalEventAcknowledged, n1FireActiveConditionalEvent=n1FireActiveConditionalEvent, bacnetAuditSimpleEvent=bacnetAuditSimpleEvent, reliability=reliability, opcSubCondition=opcSubCondition, triggerText=triggerText, bacnetInputPointStatusSimpleEvent=bacnetInputPointStatusSimpleEvent, n1HvacConditionalEventAcknowledged=n1HvacConditionalEventAcknowledged, PYSNMP_MODULE_ID=jcimSeriesMIB, fromState=fromState, bacnetPanelEventInactiveConditionalEvent=bacnetPanelEventInactiveConditionalEvent, opcEventCategory=opcEventCategory, n1SecurityConditionalEventAcknowledged=n1SecurityConditionalEventAcknowledged, n1AdminTrackingEvent=n1AdminTrackingEvent, bacnetAdminInactiveConditionalEvent=bacnetAdminInactiveConditionalEvent, opcNewState=opcNewState, n1FireInactiveConditionalEvent=n1FireInactiveConditionalEvent, opcMessage=opcMessage, n1AdminSimpleEvent=n1AdminSimpleEvent, n1FireTrackingEvent=n1FireTrackingEvent, bacnetHvacSimpleEvent=bacnetHvacSimpleEvent, n1ServicesTrackingEvent=n1ServicesTrackingEvent, bacnetFireSimpleEvent=bacnetFireSimpleEvent, bacnetOutputPointStatusSimpleEvent=bacnetOutputPointStatusSimpleEvent, originalDate=originalDate, opcChangeMask=opcChangeMask, opcN1Traps=opcN1Traps, deviceName=deviceName, bacnetPanelHWStatusConditionalEventAcknowledged=bacnetPanelHWStatusConditionalEventAcknowledged, facilityCode=facilityCode, reportTime=reportTime, bacnetHvacInactiveConditionalEvent=bacnetHvacInactiveConditionalEvent, location=location, opcTraps=opcTraps, transactionText=transactionText, systemID=systemID, n1SecurityInactiveConditionalEvent=n1SecurityInactiveConditionalEvent, bacnetDeviceFailureInactiveConditionalEvent=bacnetDeviceFailureInactiveConditionalEvent, bacnetPanelEventSimpleEvent=bacnetPanelEventSimpleEvent, firstName=firstName, bacnetGeneralAlarmInactiveConditionalEvent=bacnetGeneralAlarmInactiveConditionalEvent, opcStandardTraps=opcStandardTraps, opcEventTypeText=opcEventTypeText, barcodeAttach=barcodeAttach, bacnetPanelHWStatusSimpleEvent=bacnetPanelHWStatusSimpleEvent, transactionType=transactionType, bacnetGeneralEventInactiveConditionalEvent=bacnetGeneralEventInactiveConditionalEvent, bacnetOutputPointStatusConditionalEventAcknowledged=bacnetOutputPointStatusConditionalEventAcknowledged, esjAckComment=esjAckComment, errorLogType=errorLogType, networkName=networkName, opcStandardInactiveConditionalEvent=opcStandardInactiveConditionalEvent, originalTime=originalTime, spclText=spclText, bacnetAdminSimpleEvent=bacnetAdminSimpleEvent, n1HvacSimpleEvent=n1HvacSimpleEvent, opcStandardSimpleNotification=opcStandardSimpleNotification, opcTypes=opcTypes, bacnetGeneralAlarmConditionalEventAcknowledged=bacnetGeneralAlarmConditionalEventAcknowledged, bacnetGeneralAlarmActiveConditionalEvent=bacnetGeneralAlarmActiveConditionalEvent, bacnetHostEventSimpleEvent=bacnetHostEventSimpleEvent, unit=unit, n1SecurityActiveConditionalEvent=n1SecurityActiveConditionalEvent, jcimSeriesMIB=jcimSeriesMIB, opcNewStateText=opcNewStateText, bacnetFireActiveConditionalEvent=bacnetFireActiveConditionalEvent, opcTimeStamp=opcTimeStamp, direction=direction, bacnetAccessGrantSimpleEvent=bacnetAccessGrantSimpleEvent, propertyName=propertyName, bacnetAccessDenySimpleEvent=bacnetAccessDenySimpleEvent, n1AdminActiveConditionalEvent=n1AdminActiveConditionalEvent, opcAckRequiredText=opcAckRequiredText, vendorIdentifier=vendorIdentifier, bacnetSecuritySimpleEvent=bacnetSecuritySimpleEvent, id=id, reportDate=reportDate, n1ServicesInactiveConditionalEvent=n1ServicesInactiveConditionalEvent, opcActiveTime=opcActiveTime, featureStatus=featureStatus, lastName=lastName, bacnetHostLogicSimpleEvent=bacnetHostLogicSimpleEvent, bacnetFireConditionalEventAcknowledged=bacnetFireConditionalEventAcknowledged, opcCondition=opcCondition, bacnetFireInactiveConditionalEvent=bacnetFireInactiveConditionalEvent, opcStandardTrackingEvent=opcStandardTrackingEvent, n1HvacActiveConditionalEvent=n1HvacActiveConditionalEvent, terminalName=terminalName, opcQualityText=opcQualityText, bacnetPanelHWStatusActiveConditionalEvent=bacnetPanelHWStatusActiveConditionalEvent, units=units, bacnetServicesSimpleEvent=bacnetServicesSimpleEvent, n1GeneralActiveConditionalEvent=n1GeneralActiveConditionalEvent, opcAckRequired=opcAckRequired, deviceTimePresent=deviceTimePresent, bacnetServicesConditionalEventAcknowledged=bacnetServicesConditionalEventAcknowledged, accssLevel=accssLevel, bacnetDeviceFailureActiveConditionalEvent=bacnetDeviceFailureActiveConditionalEvent, opcChangeMaskText=opcChangeMaskText, n1HvacTrackingEvent=n1HvacTrackingEvent, bacnetServicesActiveConditionalEvent=bacnetServicesActiveConditionalEvent, opcSource=opcSource, n1FireSimpleEvent=n1FireSimpleEvent, bacnetInputPointStatusConditionalEventAcknowledged=bacnetInputPointStatusConditionalEventAcknowledged, areas=areas, alarmType=alarmType, bacnetHvacConditionalEventAcknowledged=bacnetHvacConditionalEventAcknowledged, n1FireConditionalEventAcknowledged=n1FireConditionalEventAcknowledged, bacnetAdminActiveConditionalEvent=bacnetAdminActiveConditionalEvent, bacnetInputPointStatusActiveConditionalEvent=bacnetInputPointStatusActiveConditionalEvent, timedOverride=timedOverride, bacnetPanelEventConditionalEventAcknowledged=bacnetPanelEventConditionalEventAcknowledged, bacnetSecurityInactiveConditionalEvent=bacnetSecurityInactiveConditionalEvent, issueLevel=issueLevel, n1AdminConditionalEventAcknowledged=n1AdminConditionalEventAcknowledged, bacnetGeneralEventActiveConditionalEvent=bacnetGeneralEventActiveConditionalEvent, badgeNumber=badgeNumber, bacnetHostLogInactiveConditionalEvent=bacnetHostLogInactiveConditionalEvent, badgeTrace=badgeTrace, functionKey=functionKey, ackComment=ackComment, auditItemName=auditItemName, bacnetInputPointStatusInactiveConditionalEvent=bacnetInputPointStatusInactiveConditionalEvent, expandedID=expandedID, reportType=reportType, bacnetCommErrorSimpleEvent=bacnetCommErrorSimpleEvent, bacnetTAAccessGrantSimpleEvent=bacnetTAAccessGrantSimpleEvent, availattribute1=availattribute1, bacnetDeviceFailureConditionalEventAcknowledged=bacnetDeviceFailureConditionalEventAcknowledged, n1HvacInactiveConditionalEvent=n1HvacInactiveConditionalEvent, opcCookie=opcCookie, bacnetPanelEventActiveConditionalEvent=bacnetPanelEventActiveConditionalEvent, bacnetHostLogActiveConditionalEvent=bacnetHostLogActiveConditionalEvent, opcActorID=opcActorID, n1GeneralSimpleEvent=n1GeneralSimpleEvent)
