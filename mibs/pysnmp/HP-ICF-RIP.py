#
# PySNMP MIB module HP-ICF-RIP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-RIP
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
IANAipRouteProtocol, = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipRouteProtocol")
rip2IfConfEntry, = mibBuilder.importSymbols("RIPv2-MIB", "rip2IfConfEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, NotificationType, IpAddress, ObjectIdentity, Unsigned32, Counter32, Integer32, Bits, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "NotificationType", "IpAddress", "ObjectIdentity", "Unsigned32", "Counter32", "Integer32", "Bits", "Gauge32", "Counter64")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
hpicfRip = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13))
hpicfRip.setRevisions(('2003-05-13 02:17', '2001-11-13 03:39',))
if mibBuilder.loadTexts: hpicfRip.setLastUpdated('200305130217Z')
if mibBuilder.loadTexts: hpicfRip.setOrganization('HP Networking')
hpicfRipObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1))
hpicfRipGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1))
hpicfRipAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipAdminStatus.setStatus('current')
hpicfRipDefaultMetric = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipDefaultMetric.setStatus('current')
hpicfRipAutoSummary = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipAutoSummary.setStatus('current')
hpicfRipDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipDistance.setStatus('current')
hpicfRipIfConfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 2), )
if mibBuilder.loadTexts: hpicfRipIfConfTable.setStatus('current')
hpicfRipIfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 2, 1), )
rip2IfConfEntry.registerAugmentions(("HP-ICF-RIP", "hpicfRipIfConfEntry"))
hpicfRipIfConfEntry.setIndexNames(*rip2IfConfEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfRipIfConfEntry.setStatus('current')
hpicfRipIfConfDoPoison = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 2, 1, 1), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfRipIfConfDoPoison.setStatus('current')
hpicfRipIfConfCost = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfRipIfConfCost.setStatus('current')
hpicfRipRedistTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 3), )
if mibBuilder.loadTexts: hpicfRipRedistTable.setStatus('current')
hpicfRipRedistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 3, 1), ).setIndexNames((0, "HP-ICF-RIP", "hpicfRipRedistSrcProto"))
if mibBuilder.loadTexts: hpicfRipRedistEntry.setStatus('current')
hpicfRipRedistSrcProto = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 3, 1, 1), IANAipRouteProtocol())
if mibBuilder.loadTexts: hpicfRipRedistSrcProto.setStatus('current')
hpicfRipRedistEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 3, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipRedistEnabled.setStatus('current')
hpicfRipRedistRestrictTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4), )
if mibBuilder.loadTexts: hpicfRipRedistRestrictTable.setStatus('current')
hpicfRipRedistRestrictEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1), ).setIndexNames((0, "HP-ICF-RIP", "hpicfRipRedistRestrictAddr"), (0, "HP-ICF-RIP", "hpicfRipRedistRestrictMask"))
if mibBuilder.loadTexts: hpicfRipRedistRestrictEntry.setStatus('current')
hpicfRipRedistRestrictAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpicfRipRedistRestrictAddr.setStatus('current')
hpicfRipRedistRestrictMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpicfRipRedistRestrictMask.setStatus('current')
hpicfRipRedistRestrictStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfRipRedistRestrictStatus.setStatus('current')
hpicfRipConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2))
hpicfRipGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1))
hpicfRipBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 1)).setObjects(("HP-ICF-RIP", "hpicfRipAdminStatus"), ("HP-ICF-RIP", "hpicfRipDefaultMetric"), ("HP-ICF-RIP", "hpicfRipAutoSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipBaseGroup = hpicfRipBaseGroup.setStatus('current')
hpicfRipIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 2)).setObjects(("HP-ICF-RIP", "hpicfRipIfConfDoPoison"), ("HP-ICF-RIP", "hpicfRipIfConfCost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipIfGroup = hpicfRipIfGroup.setStatus('current')
hpicfRipRedistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 3)).setObjects(("HP-ICF-RIP", "hpicfRipRedistEnabled"), ("HP-ICF-RIP", "hpicfRipRedistRestrictStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipRedistGroup = hpicfRipRedistGroup.setStatus('current')
hpicfRipDistanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 1, 4)).setObjects(("HP-ICF-RIP", "hpicfRipDistance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipDistanceGroup = hpicfRipDistanceGroup.setStatus('current')
hpicfRipCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 2))
hpicfRipCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 2, 1)).setObjects(("HP-ICF-RIP", "hpicfRipBaseGroup"), ("HP-ICF-RIP", "hpicfRipIfGroup"), ("HP-ICF-RIP", "hpicfRipRedistGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipCompliance = hpicfRipCompliance.setStatus('current')
hpicfRipDistanceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13, 2, 2, 2)).setObjects(("HP-ICF-RIP", "hpicfRipDistanceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipDistanceCompliance = hpicfRipDistanceCompliance.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-RIP", hpicfRipIfConfCost=hpicfRipIfConfCost, hpicfRipRedistSrcProto=hpicfRipRedistSrcProto, hpicfRipRedistRestrictStatus=hpicfRipRedistRestrictStatus, hpicfRipRedistEnabled=hpicfRipRedistEnabled, hpicfRipDistance=hpicfRipDistance, hpicfRipRedistRestrictAddr=hpicfRipRedistRestrictAddr, hpicfRipRedistTable=hpicfRipRedistTable, hpicfRipIfConfTable=hpicfRipIfConfTable, hpicfRipRedistRestrictMask=hpicfRipRedistRestrictMask, hpicfRipAutoSummary=hpicfRipAutoSummary, hpicfRip=hpicfRip, hpicfRipGeneral=hpicfRipGeneral, hpicfRipDistanceGroup=hpicfRipDistanceGroup, hpicfRipRedistRestrictTable=hpicfRipRedistRestrictTable, hpicfRipRedistGroup=hpicfRipRedistGroup, hpicfRipObjects=hpicfRipObjects, hpicfRipRedistEntry=hpicfRipRedistEntry, hpicfRipIfConfEntry=hpicfRipIfConfEntry, hpicfRipDistanceCompliance=hpicfRipDistanceCompliance, hpicfRipIfConfDoPoison=hpicfRipIfConfDoPoison, hpicfRipAdminStatus=hpicfRipAdminStatus, hpicfRipConformance=hpicfRipConformance, hpicfRipBaseGroup=hpicfRipBaseGroup, hpicfRipCompliances=hpicfRipCompliances, hpicfRipGroups=hpicfRipGroups, hpicfRipCompliance=hpicfRipCompliance, hpicfRipDefaultMetric=hpicfRipDefaultMetric, hpicfRipRedistRestrictEntry=hpicfRipRedistRestrictEntry, hpicfRipIfGroup=hpicfRipIfGroup, PYSNMP_MODULE_ID=hpicfRip)
