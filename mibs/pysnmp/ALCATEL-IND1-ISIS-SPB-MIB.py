#
# PySNMP MIB module ALCATEL-IND1-ISIS-SPB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-ISIS-SPB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
routingIND1IsisSpb, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1IsisSpb")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
VlanIdOrNone, = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "VlanIdOrNone")
IEEE8021PbbServiceIdentifierOrUnassigned, IEEE8021BridgePortNumber, IEEE8021PbbIngressEgress = mibBuilder.importSymbols("IEEE8021-TC-MIB", "IEEE8021PbbServiceIdentifierOrUnassigned", "IEEE8021BridgePortNumber", "IEEE8021PbbIngressEgress")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, Unsigned32, IpAddress, Gauge32, Bits, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, ModuleIdentity, TimeTicks, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "IpAddress", "Gauge32", "Bits", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "ModuleIdentity", "TimeTicks", "NotificationType", "iso")
TruthValue, TimeInterval, TimeStamp, DisplayString, MacAddress, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeInterval", "TimeStamp", "DisplayString", "MacAddress", "RowStatus", "TextualConvention")
alcatelIND1IsisSpbMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1))
alcatelIND1IsisSpbMib.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1IsisSpbMib.setLastUpdated('201311070000Z')
if mibBuilder.loadTexts: alcatelIND1IsisSpbMib.setOrganization('Alcatel-Lucent')
class AlcatelIND1IsisSpbAreaAddress(TextualConvention, OctetString):
    reference = '12.25.1.1.2 a), 12.25.1.2.2 a), 12.25.1.3.2 a), 12.25.1.2.2 a)'
    status = 'current'
    displayHint = '1x-'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class AlcatelIND1IsisSpbSystemName(TextualConvention, OctetString):
    reference = 'RFC 4945 12.25.1.3.3 d), 12.25.7.1.3 f), 12.25.8.1.3 e)'
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class AlcatelIND1IsisSpbEctAlgorithm(TextualConvention, OctetString):
    reference = '12.3 q)'
    status = 'current'
    displayHint = '1x-'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class AlcatelIND1IsisSpbMode(TextualConvention, Integer32):
    reference = '27.10'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("auto", 1), ("manual", 2))

class AlcatelIND1IsisSpbDigestConvention(TextualConvention, Integer32):
    reference = '28.4.3'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("off", 1), ("loopFreeBoth", 2), ("loopFreeMcastOnly", 3))

class AlcatelIND1IsisSpbLinkMetric(TextualConvention, Integer32):
    reference = '28.2'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16777215)

class AlcatelIND1IsisSpbAdjState(TextualConvention, Integer32):
    reference = '12.25.6.1.3 d), 12.25.6.2.3 d), 12.25.7.1.3 (e'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("up", 1), ("down", 2), ("testing", 3))

class AlcatelIND1IsisSpbmSPsourceId(TextualConvention, OctetString):
    reference = '27.15'
    status = 'current'
    displayHint = '1x-'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class AlcatelIND1IsisSpbBridgePriority(TextualConvention, OctetString):
    reference = '13.26.3'
    status = 'current'
    displayHint = '1x-'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

class AlcatelIND1IsisSpbMTID(TextualConvention, Unsigned32):
    reference = '3.23, 3.24'
    status = 'current'
    displayHint = 'd'

class AlcatelIND1IsisSpbmMulticastMode(TextualConvention, Integer32):
    reference = 'NONE'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("sgmode", 0), ("gmode", 1))

class AlcatelIND1IsisSpbIfOperState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("inService", 2), ("outOfService", 3), ("transition", 4))

class AlcatelSpbServiceIdentifier(TextualConvention, Unsigned32):
    reference = 'NONE'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(255, 16777215)

class AlcatelIND1IsisSpbmIsidFlags(TextualConvention, Integer32):
    reference = 'NONE'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("tx", 1), ("rx", 2), ("both", 3))

alcatelIND1IsisSpbMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1))
alcatelIND1IsisSpbSys = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1))
alcatelIND1IsisSpbProtocolConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2))
alcatelIND1IsisSpbSysControlBvlan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 1), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysControlBvlan.setStatus('current')
alcatelIND1IsisSpbSysAdminState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysAdminState.setStatus('current')
alcatelIND1IsisSpbSysAreaAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 3), AlcatelIND1IsisSpbAreaAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysAreaAddress.setStatus('current')
alcatelIND1IsisSpbSysId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysId.setStatus('current')
alcatelIND1IsisSpbSysControlAddr = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysControlAddr.setStatus('current')
alcatelIND1IsisSpbSysName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 6), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysName.setStatus('current')
alcatelIND1IsisSpbSysBridgePriority = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 7), AlcatelIND1IsisSpbBridgePriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysBridgePriority.setStatus('current')
alcatelIND1IsisSpbmSysSPSourceId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 8), AlcatelIND1IsisSpbmSPsourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbmSysSPSourceId.setStatus('current')
alcatelIND1IsisSpbvSysMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 9), AlcatelIND1IsisSpbMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbvSysMode.setStatus('current')
alcatelIND1IsisSpbmSysMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 10), AlcatelIND1IsisSpbMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbmSysMode.setStatus('current')
alcatelIND1IsisSpbSysDigestConvention = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 11), AlcatelIND1IsisSpbDigestConvention()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysDigestConvention.setStatus('current')
alcatelIND1IsisSpbSysSetOverload = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysSetOverload.setStatus('current')
alcatelIND1IsisSpbSysOverloadTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 1800), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysOverloadTimeout.setStatus('current')
alcatelIND1IsisSpbSysOverloadOnBoot = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysOverloadOnBoot.setStatus('current')
alcatelIND1IsisSpbSysOverloadOnBootTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 1800), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysOverloadOnBootTimeout.setStatus('current')
alcatelIND1IsisSpbSysOverloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notInOverload", 1), ("dynamic", 2), ("manual", 3), ("manualOnBoot", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysOverloadStatus.setStatus('current')
alcatelIND1IsisSpbSysLastEnabledTime = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysLastEnabledTime.setStatus('current')
alcatelIND1isisSpbSysLastSpfRun = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1isisSpbSysLastSpfRun.setStatus('current')
alcatelIND1IsisSpbSysNumLSPs = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysNumLSPs.setStatus('current')
alcatelIND1IsisSpbSysLastEnabledTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSysLastEnabledTimeStamp.setStatus('current')
alcatelIND1isisSpbSysLastSpfRunTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 1, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1isisSpbSysLastSpfRunTimeStamp.setStatus('current')
alcatelIND1IsisSpbProtocolSpfMaxWait = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 120000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolSpfMaxWait.setStatus('current')
alcatelIND1IsisSpbProtocolSpfInitialWait = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000)).clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolSpfInitialWait.setStatus('current')
alcatelIND1IsisSpbProtocolSpfSecondWait = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000)).clone(300)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolSpfSecondWait.setStatus('current')
alcatelIND1IsisSpbProtocolLspMaxWait = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 120000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolLspMaxWait.setStatus('current')
alcatelIND1IsisSpbProtocolLspInitialWait = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolLspInitialWait.setStatus('current')
alcatelIND1IsisSpbProtocolLspSecondWait = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 100000)).clone(300)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolLspSecondWait.setStatus('current')
alcatelIND1IsisSpbProtocolGracefulRestart = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolGracefulRestart.setStatus('current')
alcatelIND1IsisSpbProtocolGRHelperMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 2, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcatelIND1IsisSpbProtocolGRHelperMode.setStatus('current')
alcatelIND1IsisSpbAdjStaticTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticTable.setStatus('current')
alcatelIND1IsisSpbAdjStaticTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryIfIndex"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticTableEntry.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryTopIx.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryIfIndex.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 3), AlcatelIND1IsisSpbLinkMetric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryMetric.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryHelloInterval.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryHelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 100)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryHelloMultiplier.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 6), AlcatelIND1IsisSpbAdjState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryIfAdminState.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryRowStatus.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryCircuitId.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryIfOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 9), AlcatelIND1IsisSpbIfOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryIfOperState.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryAFDConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 3, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjStaticEntryAFDConfig.setStatus('current')
alcatelIND1IsisSpbEctStaticTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticTable.setStatus('current')
alcatelIND1IsisSpbEctStaticTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbEctStaticEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbEctStaticEntryBaseVid"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticTableEntry.setStatus('current')
alcatelIND1IsisSpbEctStaticEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticEntryTopIx.setStatus('current')
alcatelIND1IsisSpbEctStaticEntryBaseVid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 2), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticEntryBaseVid.setStatus('current')
alcatelIND1IsisSpbEctStaticEntryEctAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 3), AlcatelIND1IsisSpbEctAlgorithm()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticEntryEctAlgorithm.setStatus('current')
alcatelIND1IsisSpbvEctStaticEntrySpvid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 4), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbvEctStaticEntrySpvid.setStatus('current')
alcatelIND1IsisSpbEctStaticEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticEntryRowStatus.setStatus('current')
alcatelIND1IsisSpbEctStaticEntryMulticastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 6), AlcatelIND1IsisSpbmMulticastMode().clone('sgmode')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticEntryMulticastMode.setStatus('current')
alcatelIND1IsisSpbEctStaticEntryRootBridgeSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 7), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticEntryRootBridgeSysName.setStatus('current')
alcatelIND1IsisSpbEctStaticEntryRootBridgeSysMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 4, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbEctStaticEntryRootBridgeSysMac.setStatus('current')
alcatelIND1IsisSpbAdjDynamicTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicTable.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryIfIndex"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryPeerSysId"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntry.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryTopIx.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryIfIndex.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryPeerSysId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 3), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryPeerSysId.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryAdjState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 4), AlcatelIND1IsisSpbAdjState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryAdjState.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryAdjUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryAdjUpTime.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryHoldRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryHoldRemaining.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryHoldTimer.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryNbrExtLocalCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryNbrExtLocalCircuitId.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryNeighPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryNeighPriority.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryPeerSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 10), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryPeerSysName.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryRestartStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notHelping", 1), ("restarting", 2), ("restartComplete", 3), ("helping", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryRestartStatus.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryRestartSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryRestartSupport.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryRestartSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryRestartSuppressed.setStatus('current')
alcatelIND1IsisSpbAdjDynamicEntryAdjUpTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 5, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbAdjDynamicEntryAdjUpTimeStamp.setStatus('current')
alcatelIND1IsisSpbNodeTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 6), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbNodeTable.setStatus('current')
alcatelIND1IsisSpbNodeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbNodeTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbNodeSysId"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbNodeTableEntry.setStatus('current')
alcatelIND1IsisSpbNodeTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 6, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbNodeTopIx.setStatus('current')
alcatelIND1IsisSpbNodeSysId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 6, 1, 2), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbNodeSysId.setStatus('current')
alcatelIND1IsisSpbNodeSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 6, 1, 3), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbNodeSysName.setStatus('current')
alcatelIND1IsisSpbNodeSPSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 6, 1, 4), AlcatelIND1IsisSpbmSPsourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbNodeSPSourceId.setStatus('current')
alcatelIND1IsisSpbNodeBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 6, 1, 5), AlcatelIND1IsisSpbBridgePriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbNodeBridgePriority.setStatus('current')
alcatelIND1IsisSpbUnicastTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 7), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbUnicastTable.setStatus('current')
alcatelIND1IsisSpbUnicastTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbUnicastTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbUnicastBvlan"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbUnicastSysMac"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbUnicastTableEntry.setStatus('current')
alcatelIND1IsisSpbUnicastTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 7, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbUnicastTopIx.setStatus('current')
alcatelIND1IsisSpbUnicastBvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 7, 1, 2), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbUnicastBvlan.setStatus('current')
alcatelIND1IsisSpbUnicastSysMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 7, 1, 3), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbUnicastSysMac.setStatus('current')
alcatelIND1IsisSpbUnicastSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 7, 1, 4), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbUnicastSysName.setStatus('current')
alcatelIND1IsisSpbUnicastOutboundIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 7, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbUnicastOutboundIfIndex.setStatus('current')
alcatelIND1IsisSpbMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTable.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntryBvlan"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntryMulticastMac"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntryIfIndexOutbound"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntry.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntryTopIx.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntryBvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 2), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntryBvlan.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntryMulticastMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 3), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntryMulticastMac.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntryIfIndexOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 4), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntryIfIndexOutbound.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntrySrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntrySrcMac.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntryIfIndexInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntryIfIndexInbound.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntrySysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 7), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntrySysName.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntryIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 8, 1, 8), AlcatelSpbServiceIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastTableEntryIsid.setStatus('current')
alcatelIND1IsisSpbLSPTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPTable.setStatus('current')
alcatelIND1IsisSpbLSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPId"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPEntry.setStatus('current')
alcatelIND1IsisSpbLSPTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPTopIx.setStatus('current')
alcatelIND1IsisSpbLSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 2), OctetString())
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPId.setStatus('current')
alcatelIND1IsisSpbLSPSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPSeq.setStatus('current')
alcatelIND1IsisSpbLSPChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPChecksum.setStatus('current')
alcatelIND1IsisSpbLSPLifetimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPLifetimeRemain.setStatus('current')
alcatelIND1IsisSpbLSPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPVersion.setStatus('current')
alcatelIND1IsisSpbLSPPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPPktType.setStatus('current')
alcatelIND1IsisSpbLSPPktVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPPktVersion.setStatus('current')
alcatelIND1IsisSpbLSPMaxArea = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPMaxArea.setStatus('current')
alcatelIND1IsisSpbLSPSysIdLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPSysIdLen.setStatus('current')
alcatelIND1IsisSpbLSPAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPAttributes.setStatus('current')
alcatelIND1IsisSpbLSPUsedLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPUsedLen.setStatus('current')
alcatelIND1IsisSpbLSPAllocLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPAllocLen.setStatus('current')
alcatelIND1IsisSpbLSPBuff = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 9, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbLSPBuff.setStatus('current')
alcatelIND1IsisSpbMulticastSourceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 10), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceTable.setStatus('current')
alcatelIND1IsisSpbMulticastSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSysMac"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceBvlan"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceEntry.setStatus('current')
alcatelIND1IsisSpbMulticastSourceTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 10, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceTopIx.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSysMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 10, 1, 2), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSysMac.setStatus('current')
alcatelIND1IsisSpbMulticastSourceBvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 10, 1, 3), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceBvlan.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 10, 1, 4), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSysName.setStatus('current')
alcatelIND1IsisSpbMulticastSourceReachable = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 10, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceReachable.setStatus('current')
alcatelIND1IsisSpbSpfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfTable.setStatus('current')
alcatelIND1IsisSpbSpfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfBvlan"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfSysMac"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfTableEntry.setStatus('current')
alcatelIND1IsisSpbSpfBvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 1), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfBvlan.setStatus('current')
alcatelIND1IsisSpbSpfSysMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 2), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfSysMac.setStatus('current')
alcatelIND1IsisSpbSpfSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 3), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfSysName.setStatus('current')
alcatelIND1IsisSpbSpfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfIfIndex.setStatus('current')
alcatelIND1IsisSpbSpfNextHopSysMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfNextHopSysMac.setStatus('current')
alcatelIND1IsisSpbSpfNextHopSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 6), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfNextHopSysName.setStatus('current')
alcatelIND1IsisSpbSpfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 7), AlcatelIND1IsisSpbLinkMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfMetric.setStatus('current')
alcatelIND1IsisSpbSpfHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbSpfHopCount.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTable.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryBMac"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryBvlan"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryDestMac"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntry.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryTopIx.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryBMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 2), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryBMac.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryBvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 3), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryBvlan.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryDestMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 4), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryDestMac.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryIfIndex.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 6), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopName.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopMac.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 8), AlcatelIND1IsisSpbLinkMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryMetric.setStatus('current')
alcatelIND1IsisSpbMulticastSourceSpfTableEntryHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 12, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbMulticastSourceSpfTableEntryHopCount.setStatus('current')
alcatelIND1IsisSpbIngressMacFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 13), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbIngressMacFilterTable.setStatus('current')
alcatelIND1IsisSpbIngressMacFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbIngressMacBvlan"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbIngressMacSysMac"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbIngressMacFilterEntry.setStatus('current')
alcatelIND1IsisSpbIngressMacBvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 13, 1, 1), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbIngressMacBvlan.setStatus('current')
alcatelIND1IsisSpbIngressMacSysMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 13, 1, 2), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbIngressMacSysMac.setStatus('current')
alcatelIND1IsisSpbIngressMacSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 13, 1, 3), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbIngressMacSysName.setStatus('current')
alcatelIND1IsisSpbIngressMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 13, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbIngressMacIfIndex.setStatus('current')
alcatelIND1IsisSpbServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14), )
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTable.setStatus('current')
alcatelIND1IsisSpbServiceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbServiceTableEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbServiceTableEntryBvlan"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbServiceTableEntryIsid"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbServiceTableEntrySysMac"))
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTableEntry.setStatus('current')
alcatelIND1IsisSpbServiceTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTableEntryTopIx.setStatus('current')
alcatelIND1IsisSpbServiceTableEntryBvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14, 1, 2), VlanId())
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTableEntryBvlan.setStatus('current')
alcatelIND1IsisSpbServiceTableEntryIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14, 1, 3), AlcatelSpbServiceIdentifier())
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTableEntryIsid.setStatus('current')
alcatelIND1IsisSpbServiceTableEntrySysMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14, 1, 4), MacAddress())
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTableEntrySysMac.setStatus('current')
alcatelIND1IsisSpbServiceTableEntrySysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14, 1, 5), AlcatelIND1IsisSpbSystemName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTableEntrySysName.setStatus('current')
alcatelIND1IsisSpbServiceTableEntryIsidFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 14, 1, 6), AlcatelIND1IsisSpbmIsidFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1IsisSpbServiceTableEntryIsidFlags.setStatus('current')
alcatelIND1SpbIPVPNBindTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15), )
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindTable.setStatus('current')
alcatelIND1SpbIPVPNBindTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNBindTableEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNBindVrfName"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNBindIsid"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNBindGateway"))
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindTableEntry.setStatus('current')
alcatelIND1SpbIPVPNBindTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindTableEntryTopIx.setStatus('current')
alcatelIND1SpbIPVPNBindVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindVrfName.setStatus('current')
alcatelIND1SpbIPVPNBindIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindIsid.setStatus('current')
alcatelIND1SpbIPVPNBindGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15, 1, 4), IpAddress())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindGateway.setStatus('current')
alcatelIND1SpbIPVPNBindImportRouteMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindImportRouteMap.setStatus('current')
alcatelIND1SpbIPVPNBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 15, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNBindRowStatus.setStatus('current')
alcatelIND1SpbIPVPNRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16), )
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRouteTable.setStatus('current')
alcatelIND1SpbIPVPNRouteTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRouteTableEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRouteIsid"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRoutePrefix"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRoutePrefixLen"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRouteGateway"))
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRouteTableEntry.setStatus('current')
alcatelIND1SpbIPVPNRouteTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRouteTableEntryTopIx.setStatus('current')
alcatelIND1SpbIPVPNRouteIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1, 2), Unsigned32())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRouteIsid.setStatus('current')
alcatelIND1SpbIPVPNRoutePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1, 3), IpAddress())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRoutePrefix.setStatus('current')
alcatelIND1SpbIPVPNRoutePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1, 4), Unsigned32())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRoutePrefixLen.setStatus('current')
alcatelIND1SpbIPVPNRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1, 5), IpAddress())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRouteGateway.setStatus('current')
alcatelIND1SpbIPVPNRouteNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRouteNodeName.setStatus('current')
alcatelIND1SpbIPVPNRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 16, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRouteMetric.setStatus('current')
alcatelIND1SpbIPVPNRedistVrfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 17), )
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistVrfTable.setStatus('current')
alcatelIND1SpbIPVPNRedistVrfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistVrfTableEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistVrfSourceVrf"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistVrfDestIsid"))
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistVrfTableEntry.setStatus('current')
alcatelIND1SpbIPVPNRedistVrfTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 17, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistVrfTableEntryTopIx.setStatus('current')
alcatelIND1SpbIPVPNRedistVrfSourceVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 17, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistVrfSourceVrf.setStatus('current')
alcatelIND1SpbIPVPNRedistVrfDestIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 17, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistVrfDestIsid.setStatus('current')
alcatelIND1SpbIPVPNRedistVrfRouteMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 17, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistVrfRouteMap.setStatus('current')
alcatelIND1SpbIPVPNRedistVrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 17, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistVrfRowStatus.setStatus('current')
alcatelIND1SpbIPVPNRedistIsidTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 18), )
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistIsidTable.setStatus('current')
alcatelIND1SpbIPVPNRedistIsidTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistIsidTableEntryTopIx"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistIsidSourceIsid"), (0, "ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistIsidDestIsid"))
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistIsidTableEntry.setStatus('current')
alcatelIND1SpbIPVPNRedistIsidTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 18, 1, 1), AlcatelIND1IsisSpbMTID())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistIsidTableEntryTopIx.setStatus('current')
alcatelIND1SpbIPVPNRedistIsidSourceIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 18, 1, 2), Unsigned32())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistIsidSourceIsid.setStatus('current')
alcatelIND1SpbIPVPNRedistIsidDestIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 18, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistIsidDestIsid.setStatus('current')
alcatelIND1SpbIPVPNRedistIsidRouteMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 18, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistIsidRouteMap.setStatus('current')
alcatelIND1SpbIPVPNRedistIsidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 1, 18, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alcatelIND1SpbIPVPNRedistIsidRowStatus.setStatus('current')
alcatelIND1IsisSpbConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2))
alcatelIND1IsisSpbGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1))
alcatelIND1IsisSpbCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 2))
alcatelIND1IsisSpbSysGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysControlBvlan"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysAdminState"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysNumLSPs"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1isisSpbSysLastSpfRun"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysLastEnabledTime"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysOverloadStatus"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysOverloadOnBootTimeout"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysOverloadOnBoot"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysOverloadTimeout"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysSetOverload"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1isisSpbSysLastSpfRunTimeStamp"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysLastEnabledTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbSysGroupSPBM = alcatelIND1IsisSpbSysGroupSPBM.setStatus('current')
alcatelIND1IsisSpbProtocolConfigGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolSpfMaxWait"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolSpfInitialWait"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolSpfSecondWait"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolLspMaxWait"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolLspInitialWait"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolLspSecondWait"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolGracefulRestart"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolGRHelperMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbProtocolConfigGroupSPBM = alcatelIND1IsisSpbProtocolConfigGroupSPBM.setStatus('current')
alcatelIND1IsisSpbAdjStaticEntryConfigGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryHelloInterval"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryHelloMultiplier"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryIfAdminState"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryMetric"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryRowStatus"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbEctStaticEntryEctAlgorithm"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbEctStaticEntryRowStatus"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbvEctStaticEntrySpvid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbAdjStaticEntryConfigGroupSPBM = alcatelIND1IsisSpbAdjStaticEntryConfigGroupSPBM.setStatus('current')
alcatelIND1IsisSpbSysConfigGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysAreaAddress"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysBridgePriority"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysControlAddr"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysDigestConvention"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysId"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbmSysMode"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbmSysSPSourceId"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbvSysMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbSysConfigGroupSPBM = alcatelIND1IsisSpbSysConfigGroupSPBM.setStatus('current')
alcatelIND1IsisSpbAdjGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryAdjState"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryAdjUpTime"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryHoldRemaining"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryHoldTimer"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryNbrExtLocalCircuitId"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryNeighPriority"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryPeerSysName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryRestartStatus"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryRestartSupport"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryRestartSuppressed"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryCircuitId"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryIfOperState"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbEctStaticEntryMulticastMode"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbEctStaticEntryRootBridgeSysMac"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbEctStaticEntryRootBridgeSysName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjStaticEntryAFDConfig"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjDynamicEntryAdjUpTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbAdjGroupSPBM = alcatelIND1IsisSpbAdjGroupSPBM.setStatus('current')
alcatelIND1IsisSpbIngressMacGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbIngressMacSysName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbIngressMacIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbIngressMacGroupSPBM = alcatelIND1IsisSpbIngressMacGroupSPBM.setStatus('current')
alcatelIND1IsisSpbLSPGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPAllocLen"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPAttributes"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPBuff"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPChecksum"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPLifetimeRemain"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPMaxArea"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPPktType"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPPktVersion"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPSeq"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPSysIdLen"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPUsedLen"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbLSPGroupSPBM = alcatelIND1IsisSpbLSPGroupSPBM.setStatus('current')
alcatelIND1IsisSpbMulticastSourceGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceReachable"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryHopCount"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryIfIndex"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryMetric"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopMac"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceSysName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbMulticastSourceGroupSPBM = alcatelIND1IsisSpbMulticastSourceGroupSPBM.setStatus('current')
alcatelIND1IsisSpbMulticastTableEntryGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntryIfIndexInbound"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntryIsid"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntrySysName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntrySrcMac"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbMulticastTableEntryGroupSPBM = alcatelIND1IsisSpbMulticastTableEntryGroupSPBM.setStatus('current')
alcatelIND1IsisSpbServiceTableEntryGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbServiceTableEntryIsidFlags"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbServiceTableEntrySysName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbServiceTableEntryGroupSPBM = alcatelIND1IsisSpbServiceTableEntryGroupSPBM.setStatus('current')
alcatelIND1IsisSpbSpfGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfHopCount"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfMetric"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfNextHopSysName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfNextHopSysMac"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfIfIndex"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfSysName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbSpfGroupSPBM = alcatelIND1IsisSpbSpfGroupSPBM.setStatus('current')
alcatelIND1IsisSpbUnicastGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbUnicastOutboundIfIndex"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbUnicastSysName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbUnicastGroupSPBM = alcatelIND1IsisSpbUnicastGroupSPBM.setStatus('current')
alcatelIND1IsisSpbNodeGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbNodeBridgePriority"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbNodeSPSourceId"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbNodeSysName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbNodeGroupSPBM = alcatelIND1IsisSpbNodeGroupSPBM.setStatus('current')
alcatelIND1IsisSpbVPNBindTableGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 14)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNBindImportRouteMap"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNBindRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbVPNBindTableGroupSPBM = alcatelIND1IsisSpbVPNBindTableGroupSPBM.setStatus('current')
alcatelIND1IsisSpbVPNRouteTableGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 15)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRouteNodeName"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRouteMetric"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbVPNRouteTableGroupSPBM = alcatelIND1IsisSpbVPNRouteTableGroupSPBM.setStatus('current')
alcatelIND1IsisSpbVPNRedistVrfTableGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 16)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistVrfRouteMap"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistVrfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbVPNRedistVrfTableGroupSPBM = alcatelIND1IsisSpbVPNRedistVrfTableGroupSPBM.setStatus('current')
alcatelIND1IsisSpbVPNRedistIsidTableGroupSPBM = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 1, 17)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistIsidRouteMap"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1SpbIPVPNRedistIsidRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbVPNRedistIsidTableGroupSPBM = alcatelIND1IsisSpbVPNRedistIsidTableGroupSPBM.setStatus('current')
alcatelIND1IsisSpbComplianceSPBM = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 17, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSysGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbAdjGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbIngressMacGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbLSPGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbProtocolConfigGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastSourceGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbMulticastTableEntryGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbServiceTableEntryGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbSpfGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbUnicastGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbNodeGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbVPNBindTableGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbVPNRouteTableGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbVPNRedistVrfTableGroupSPBM"), ("ALCATEL-IND1-ISIS-SPB-MIB", "alcatelIND1IsisSpbVPNRedistIsidTableGroupSPBM"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IsisSpbComplianceSPBM = alcatelIND1IsisSpbComplianceSPBM.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-ISIS-SPB-MIB", alcatelIND1IsisSpbMulticastSourceSpfTableEntryMetric=alcatelIND1IsisSpbMulticastSourceSpfTableEntryMetric, alcatelIND1IsisSpbAdjDynamicEntryIfIndex=alcatelIND1IsisSpbAdjDynamicEntryIfIndex, alcatelIND1IsisSpbSpfGroupSPBM=alcatelIND1IsisSpbSpfGroupSPBM, alcatelIND1IsisSpbSysOverloadOnBoot=alcatelIND1IsisSpbSysOverloadOnBoot, alcatelIND1SpbIPVPNRoutePrefixLen=alcatelIND1SpbIPVPNRoutePrefixLen, alcatelIND1IsisSpbAdjDynamicEntryHoldRemaining=alcatelIND1IsisSpbAdjDynamicEntryHoldRemaining, alcatelIND1IsisSpbSysControlBvlan=alcatelIND1IsisSpbSysControlBvlan, alcatelIND1IsisSpbAdjDynamicEntryPeerSysId=alcatelIND1IsisSpbAdjDynamicEntryPeerSysId, alcatelIND1IsisSpbIngressMacFilterTable=alcatelIND1IsisSpbIngressMacFilterTable, AlcatelIND1IsisSpbAreaAddress=AlcatelIND1IsisSpbAreaAddress, alcatelIND1SpbIPVPNRedistIsidSourceIsid=alcatelIND1SpbIPVPNRedistIsidSourceIsid, alcatelIND1IsisSpbMulticastTableEntryBvlan=alcatelIND1IsisSpbMulticastTableEntryBvlan, alcatelIND1isisSpbSysLastSpfRun=alcatelIND1isisSpbSysLastSpfRun, alcatelIND1IsisSpbLSPTopIx=alcatelIND1IsisSpbLSPTopIx, alcatelIND1IsisSpbServiceTable=alcatelIND1IsisSpbServiceTable, alcatelIND1IsisSpbAdjDynamicEntryTopIx=alcatelIND1IsisSpbAdjDynamicEntryTopIx, alcatelIND1SpbIPVPNRedistIsidRouteMap=alcatelIND1SpbIPVPNRedistIsidRouteMap, AlcatelIND1IsisSpbMTID=AlcatelIND1IsisSpbMTID, alcatelIND1IsisSpbMulticastSourceSysName=alcatelIND1IsisSpbMulticastSourceSysName, alcatelIND1SpbIPVPNRouteIsid=alcatelIND1SpbIPVPNRouteIsid, alcatelIND1IsisSpbMib=alcatelIND1IsisSpbMib, alcatelIND1IsisSpbAdjStaticEntryHelloMultiplier=alcatelIND1IsisSpbAdjStaticEntryHelloMultiplier, alcatelIND1IsisSpbSysControlAddr=alcatelIND1IsisSpbSysControlAddr, alcatelIND1SpbIPVPNBindVrfName=alcatelIND1SpbIPVPNBindVrfName, alcatelIND1SpbIPVPNBindTableEntryTopIx=alcatelIND1SpbIPVPNBindTableEntryTopIx, alcatelIND1IsisSpbSpfSysName=alcatelIND1IsisSpbSpfSysName, alcatelIND1IsisSpbAdjStaticEntryRowStatus=alcatelIND1IsisSpbAdjStaticEntryRowStatus, alcatelIND1SpbIPVPNRouteMetric=alcatelIND1SpbIPVPNRouteMetric, alcatelIND1IsisSpbMulticastSourceSpfTableEntry=alcatelIND1IsisSpbMulticastSourceSpfTableEntry, alcatelIND1IsisSpbEctStaticEntryEctAlgorithm=alcatelIND1IsisSpbEctStaticEntryEctAlgorithm, alcatelIND1IsisSpbEctStaticEntryTopIx=alcatelIND1IsisSpbEctStaticEntryTopIx, alcatelIND1SpbIPVPNRedistVrfRouteMap=alcatelIND1SpbIPVPNRedistVrfRouteMap, alcatelIND1IsisSpbMulticastSourceSpfTableEntryBMac=alcatelIND1IsisSpbMulticastSourceSpfTableEntryBMac, alcatelIND1IsisSpbConformance=alcatelIND1IsisSpbConformance, alcatelIND1SpbIPVPNBindImportRouteMap=alcatelIND1SpbIPVPNBindImportRouteMap, alcatelIND1IsisSpbAdjDynamicEntryRestartStatus=alcatelIND1IsisSpbAdjDynamicEntryRestartStatus, alcatelIND1IsisSpbServiceTableEntrySysName=alcatelIND1IsisSpbServiceTableEntrySysName, alcatelIND1IsisSpbSysAreaAddress=alcatelIND1IsisSpbSysAreaAddress, alcatelIND1IsisSpbSpfTableEntry=alcatelIND1IsisSpbSpfTableEntry, alcatelIND1IsisSpbEctStaticEntryRowStatus=alcatelIND1IsisSpbEctStaticEntryRowStatus, AlcatelSpbServiceIdentifier=AlcatelSpbServiceIdentifier, alcatelIND1SpbIPVPNRedistIsidTableEntryTopIx=alcatelIND1SpbIPVPNRedistIsidTableEntryTopIx, alcatelIND1IsisSpbComplianceSPBM=alcatelIND1IsisSpbComplianceSPBM, alcatelIND1IsisSpbAdjStaticEntryIfAdminState=alcatelIND1IsisSpbAdjStaticEntryIfAdminState, alcatelIND1IsisSpbMulticastTableEntryTopIx=alcatelIND1IsisSpbMulticastTableEntryTopIx, alcatelIND1IsisSpbMulticastSourceTable=alcatelIND1IsisSpbMulticastSourceTable, alcatelIND1IsisSpbMulticastSourceSpfTableEntryIfIndex=alcatelIND1IsisSpbMulticastSourceSpfTableEntryIfIndex, alcatelIND1IsisSpbSysAdminState=alcatelIND1IsisSpbSysAdminState, alcatelIND1IsisSpbAdjDynamicEntry=alcatelIND1IsisSpbAdjDynamicEntry, alcatelIND1IsisSpbMulticastTableEntryMulticastMac=alcatelIND1IsisSpbMulticastTableEntryMulticastMac, alcatelIND1IsisSpbAdjDynamicEntryAdjUpTimeStamp=alcatelIND1IsisSpbAdjDynamicEntryAdjUpTimeStamp, alcatelIND1IsisSpbSysName=alcatelIND1IsisSpbSysName, alcatelIND1IsisSpbAdjDynamicEntryNbrExtLocalCircuitId=alcatelIND1IsisSpbAdjDynamicEntryNbrExtLocalCircuitId, alcatelIND1IsisSpbMulticastTableEntryIfIndexInbound=alcatelIND1IsisSpbMulticastTableEntryIfIndexInbound, alcatelIND1IsisSpbmSysMode=alcatelIND1IsisSpbmSysMode, alcatelIND1IsisSpbServiceTableEntryIsidFlags=alcatelIND1IsisSpbServiceTableEntryIsidFlags, alcatelIND1IsisSpbMulticastSourceSpfTableEntryDestMac=alcatelIND1IsisSpbMulticastSourceSpfTableEntryDestMac, alcatelIND1IsisSpbNodeTopIx=alcatelIND1IsisSpbNodeTopIx, alcatelIND1IsisSpbNodeSysId=alcatelIND1IsisSpbNodeSysId, alcatelIND1IsisSpbServiceTableEntrySysMac=alcatelIND1IsisSpbServiceTableEntrySysMac, alcatelIND1IsisSpbLSPSysIdLen=alcatelIND1IsisSpbLSPSysIdLen, alcatelIND1IsisSpbMulticastSourceTopIx=alcatelIND1IsisSpbMulticastSourceTopIx, alcatelIND1IsisSpbIngressMacIfIndex=alcatelIND1IsisSpbIngressMacIfIndex, alcatelIND1IsisSpbServiceTableEntryBvlan=alcatelIND1IsisSpbServiceTableEntryBvlan, alcatelIND1IsisSpbvEctStaticEntrySpvid=alcatelIND1IsisSpbvEctStaticEntrySpvid, alcatelIND1IsisSpbNodeSysName=alcatelIND1IsisSpbNodeSysName, alcatelIND1IsisSpbEctStaticTableEntry=alcatelIND1IsisSpbEctStaticTableEntry, alcatelIND1IsisSpbUnicastSysName=alcatelIND1IsisSpbUnicastSysName, alcatelIND1IsisSpbNodeTableEntry=alcatelIND1IsisSpbNodeTableEntry, alcatelIND1IsisSpbSysOverloadStatus=alcatelIND1IsisSpbSysOverloadStatus, alcatelIND1IsisSpbMulticastTableEntryIfIndexOutbound=alcatelIND1IsisSpbMulticastTableEntryIfIndexOutbound, alcatelIND1IsisSpbIngressMacSysName=alcatelIND1IsisSpbIngressMacSysName, alcatelIND1IsisSpbMulticastTableEntrySrcMac=alcatelIND1IsisSpbMulticastTableEntrySrcMac, alcatelIND1SpbIPVPNRedistVrfSourceVrf=alcatelIND1SpbIPVPNRedistVrfSourceVrf, alcatelIND1IsisSpbServiceTableEntry=alcatelIND1IsisSpbServiceTableEntry, alcatelIND1IsisSpbUnicastTopIx=alcatelIND1IsisSpbUnicastTopIx, alcatelIND1IsisSpbAdjStaticEntryCircuitId=alcatelIND1IsisSpbAdjStaticEntryCircuitId, alcatelIND1IsisSpbSysGroupSPBM=alcatelIND1IsisSpbSysGroupSPBM, alcatelIND1IsisSpbSysSetOverload=alcatelIND1IsisSpbSysSetOverload, alcatelIND1IsisSpbMulticastSourceBvlan=alcatelIND1IsisSpbMulticastSourceBvlan, alcatelIND1IsisSpbSpfSysMac=alcatelIND1IsisSpbSpfSysMac, alcatelIND1IsisSpbSpfIfIndex=alcatelIND1IsisSpbSpfIfIndex, alcatelIND1IsisSpbMulticastSourceSysMac=alcatelIND1IsisSpbMulticastSourceSysMac, alcatelIND1IsisSpbSys=alcatelIND1IsisSpbSys, alcatelIND1SpbIPVPNBindTable=alcatelIND1SpbIPVPNBindTable, alcatelIND1IsisSpbUnicastTableEntry=alcatelIND1IsisSpbUnicastTableEntry, alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopMac=alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopMac, alcatelIND1SpbIPVPNRouteTableEntry=alcatelIND1SpbIPVPNRouteTableEntry, alcatelIND1IsisSpbSysOverloadTimeout=alcatelIND1IsisSpbSysOverloadTimeout, alcatelIND1IsisSpbEctStaticEntryRootBridgeSysMac=alcatelIND1IsisSpbEctStaticEntryRootBridgeSysMac, alcatelIND1IsisSpbVPNRouteTableGroupSPBM=alcatelIND1IsisSpbVPNRouteTableGroupSPBM, alcatelIND1SpbIPVPNRedistIsidDestIsid=alcatelIND1SpbIPVPNRedistIsidDestIsid, alcatelIND1IsisSpbProtocolGRHelperMode=alcatelIND1IsisSpbProtocolGRHelperMode, alcatelIND1IsisSpbMulticastSourceSpfTableEntryBvlan=alcatelIND1IsisSpbMulticastSourceSpfTableEntryBvlan, alcatelIND1IsisSpbProtocolLspInitialWait=alcatelIND1IsisSpbProtocolLspInitialWait, alcatelIND1IsisSpbProtocolSpfInitialWait=alcatelIND1IsisSpbProtocolSpfInitialWait, alcatelIND1IsisSpbSpfNextHopSysMac=alcatelIND1IsisSpbSpfNextHopSysMac, alcatelIND1IsisSpbAdjGroupSPBM=alcatelIND1IsisSpbAdjGroupSPBM, alcatelIND1SpbIPVPNBindRowStatus=alcatelIND1SpbIPVPNBindRowStatus, alcatelIND1IsisSpbLSPMaxArea=alcatelIND1IsisSpbLSPMaxArea, AlcatelIND1IsisSpbSystemName=AlcatelIND1IsisSpbSystemName, alcatelIND1IsisSpbLSPBuff=alcatelIND1IsisSpbLSPBuff, alcatelIND1IsisSpbServiceTableEntryTopIx=alcatelIND1IsisSpbServiceTableEntryTopIx, alcatelIND1IsisSpbLSPAttributes=alcatelIND1IsisSpbLSPAttributes, alcatelIND1IsisSpbServiceTableEntryIsid=alcatelIND1IsisSpbServiceTableEntryIsid, alcatelIND1IsisSpbEctStaticEntryRootBridgeSysName=alcatelIND1IsisSpbEctStaticEntryRootBridgeSysName, AlcatelIND1IsisSpbAdjState=AlcatelIND1IsisSpbAdjState, alcatelIND1IsisSpbLSPId=alcatelIND1IsisSpbLSPId, alcatelIND1IsisSpbMulticastSourceSpfTableEntryHopCount=alcatelIND1IsisSpbMulticastSourceSpfTableEntryHopCount, alcatelIND1IsisSpbAdjStaticTable=alcatelIND1IsisSpbAdjStaticTable, alcatelIND1IsisSpbLSPUsedLen=alcatelIND1IsisSpbLSPUsedLen, AlcatelIND1IsisSpbDigestConvention=AlcatelIND1IsisSpbDigestConvention, alcatelIND1IsisSpbNodeSPSourceId=alcatelIND1IsisSpbNodeSPSourceId, alcatelIND1IsisSpbMibObjects=alcatelIND1IsisSpbMibObjects, alcatelIND1IsisSpbProtocolGracefulRestart=alcatelIND1IsisSpbProtocolGracefulRestart, alcatelIND1IsisSpbMulticastTableEntryIsid=alcatelIND1IsisSpbMulticastTableEntryIsid, alcatelIND1IsisSpbSpfHopCount=alcatelIND1IsisSpbSpfHopCount, alcatelIND1SpbIPVPNBindGateway=alcatelIND1SpbIPVPNBindGateway, alcatelIND1IsisSpbSpfBvlan=alcatelIND1IsisSpbSpfBvlan, alcatelIND1IsisSpbSysLastEnabledTime=alcatelIND1IsisSpbSysLastEnabledTime, alcatelIND1SpbIPVPNRedistVrfRowStatus=alcatelIND1SpbIPVPNRedistVrfRowStatus, alcatelIND1IsisSpbSysConfigGroupSPBM=alcatelIND1IsisSpbSysConfigGroupSPBM, AlcatelIND1IsisSpbmIsidFlags=AlcatelIND1IsisSpbmIsidFlags, alcatelIND1IsisSpbAdjDynamicEntryAdjState=alcatelIND1IsisSpbAdjDynamicEntryAdjState, alcatelIND1IsisSpbEctStaticEntryMulticastMode=alcatelIND1IsisSpbEctStaticEntryMulticastMode, alcatelIND1IsisSpbIngressMacGroupSPBM=alcatelIND1IsisSpbIngressMacGroupSPBM, alcatelIND1IsisSpbSysBridgePriority=alcatelIND1IsisSpbSysBridgePriority, alcatelIND1IsisSpbAdjStaticEntryTopIx=alcatelIND1IsisSpbAdjStaticEntryTopIx, AlcatelIND1IsisSpbBridgePriority=AlcatelIND1IsisSpbBridgePriority, alcatelIND1IsisSpbProtocolLspSecondWait=alcatelIND1IsisSpbProtocolLspSecondWait, alcatelIND1IsisSpbSysLastEnabledTimeStamp=alcatelIND1IsisSpbSysLastEnabledTimeStamp, alcatelIND1IsisSpbAdjStaticEntryIfIndex=alcatelIND1IsisSpbAdjStaticEntryIfIndex, alcatelIND1IsisSpbLSPEntry=alcatelIND1IsisSpbLSPEntry, alcatelIND1IsisSpbNodeGroupSPBM=alcatelIND1IsisSpbNodeGroupSPBM, alcatelIND1SpbIPVPNRedistVrfDestIsid=alcatelIND1SpbIPVPNRedistVrfDestIsid, alcatelIND1IsisSpbProtocolLspMaxWait=alcatelIND1IsisSpbProtocolLspMaxWait, alcatelIND1IsisSpbAdjStaticEntryHelloInterval=alcatelIND1IsisSpbAdjStaticEntryHelloInterval, alcatelIND1IsisSpbAdjDynamicEntryNeighPriority=alcatelIND1IsisSpbAdjDynamicEntryNeighPriority, alcatelIND1IsisSpbMulticastTableEntrySysName=alcatelIND1IsisSpbMulticastTableEntrySysName, alcatelIND1IsisSpbLSPSeq=alcatelIND1IsisSpbLSPSeq, alcatelIND1IsisSpbMulticastSourceReachable=alcatelIND1IsisSpbMulticastSourceReachable, alcatelIND1IsisSpbEctStaticTable=alcatelIND1IsisSpbEctStaticTable, alcatelIND1IsisSpbSpfTable=alcatelIND1IsisSpbSpfTable, alcatelIND1IsisSpbIngressMacSysMac=alcatelIND1IsisSpbIngressMacSysMac, alcatelIND1IsisSpbEctStaticEntryBaseVid=alcatelIND1IsisSpbEctStaticEntryBaseVid, alcatelIND1IsisSpbVPNRedistVrfTableGroupSPBM=alcatelIND1IsisSpbVPNRedistVrfTableGroupSPBM, alcatelIND1IsisSpbSysOverloadOnBootTimeout=alcatelIND1IsisSpbSysOverloadOnBootTimeout, alcatelIND1IsisSpbAdjStaticEntryMetric=alcatelIND1IsisSpbAdjStaticEntryMetric, alcatelIND1IsisSpbLSPPktType=alcatelIND1IsisSpbLSPPktType, alcatelIND1IsisSpbLSPTable=alcatelIND1IsisSpbLSPTable, alcatelIND1SpbIPVPNRoutePrefix=alcatelIND1SpbIPVPNRoutePrefix, alcatelIND1IsisSpbUnicastSysMac=alcatelIND1IsisSpbUnicastSysMac, alcatelIND1IsisSpbCompliances=alcatelIND1IsisSpbCompliances, alcatelIND1IsisSpbAdjDynamicEntryPeerSysName=alcatelIND1IsisSpbAdjDynamicEntryPeerSysName, alcatelIND1IsisSpbProtocolSpfMaxWait=alcatelIND1IsisSpbProtocolSpfMaxWait, alcatelIND1IsisSpbUnicastBvlan=alcatelIND1IsisSpbUnicastBvlan, alcatelIND1IsisSpbMulticastTable=alcatelIND1IsisSpbMulticastTable, alcatelIND1IsisSpbVPNRedistIsidTableGroupSPBM=alcatelIND1IsisSpbVPNRedistIsidTableGroupSPBM, alcatelIND1SpbIPVPNBindTableEntry=alcatelIND1SpbIPVPNBindTableEntry, alcatelIND1SpbIPVPNRedistIsidRowStatus=alcatelIND1SpbIPVPNRedistIsidRowStatus, alcatelIND1IsisSpbSysNumLSPs=alcatelIND1IsisSpbSysNumLSPs, alcatelIND1IsisSpbAdjDynamicTable=alcatelIND1IsisSpbAdjDynamicTable, alcatelIND1IsisSpbLSPPktVersion=alcatelIND1IsisSpbLSPPktVersion, alcatelIND1IsisSpbSpfNextHopSysName=alcatelIND1IsisSpbSpfNextHopSysName, alcatelIND1SpbIPVPNRouteGateway=alcatelIND1SpbIPVPNRouteGateway, AlcatelIND1IsisSpbIfOperState=AlcatelIND1IsisSpbIfOperState, alcatelIND1IsisSpbProtocolConfig=alcatelIND1IsisSpbProtocolConfig, alcatelIND1IsisSpbMulticastSourceSpfTableEntryTopIx=alcatelIND1IsisSpbMulticastSourceSpfTableEntryTopIx, alcatelIND1IsisSpbIngressMacFilterEntry=alcatelIND1IsisSpbIngressMacFilterEntry, alcatelIND1IsisSpbAdjDynamicEntryRestartSupport=alcatelIND1IsisSpbAdjDynamicEntryRestartSupport, alcatelIND1IsisSpbNodeTable=alcatelIND1IsisSpbNodeTable, alcatelIND1IsisSpbUnicastTable=alcatelIND1IsisSpbUnicastTable, alcatelIND1SpbIPVPNRouteTableEntryTopIx=alcatelIND1SpbIPVPNRouteTableEntryTopIx, alcatelIND1IsisSpbNodeBridgePriority=alcatelIND1IsisSpbNodeBridgePriority, AlcatelIND1IsisSpbmSPsourceId=AlcatelIND1IsisSpbmSPsourceId, alcatelIND1IsisSpbMulticastSourceEntry=alcatelIND1IsisSpbMulticastSourceEntry, alcatelIND1SpbIPVPNRedistVrfTable=alcatelIND1SpbIPVPNRedistVrfTable, alcatelIND1IsisSpbSysId=alcatelIND1IsisSpbSysId, alcatelIND1IsisSpbLSPLifetimeRemain=alcatelIND1IsisSpbLSPLifetimeRemain, alcatelIND1SpbIPVPNBindIsid=alcatelIND1SpbIPVPNBindIsid, alcatelIND1IsisSpbLSPVersion=alcatelIND1IsisSpbLSPVersion, alcatelIND1IsisSpbUnicastOutboundIfIndex=alcatelIND1IsisSpbUnicastOutboundIfIndex, alcatelIND1IsisSpbAdjStaticEntryAFDConfig=alcatelIND1IsisSpbAdjStaticEntryAFDConfig, alcatelIND1SpbIPVPNRedistVrfTableEntryTopIx=alcatelIND1SpbIPVPNRedistVrfTableEntryTopIx, AlcatelIND1IsisSpbMode=AlcatelIND1IsisSpbMode, alcatelIND1SpbIPVPNRedistVrfTableEntry=alcatelIND1SpbIPVPNRedistVrfTableEntry, alcatelIND1SpbIPVPNRouteTable=alcatelIND1SpbIPVPNRouteTable, alcatelIND1IsisSpbAdjDynamicEntryHoldTimer=alcatelIND1IsisSpbAdjDynamicEntryHoldTimer, AlcatelIND1IsisSpbLinkMetric=AlcatelIND1IsisSpbLinkMetric, alcatelIND1IsisSpbVPNBindTableGroupSPBM=alcatelIND1IsisSpbVPNBindTableGroupSPBM, alcatelIND1SpbIPVPNRedistIsidTable=alcatelIND1SpbIPVPNRedistIsidTable, alcatelIND1SpbIPVPNRouteNodeName=alcatelIND1SpbIPVPNRouteNodeName, alcatelIND1IsisSpbvSysMode=alcatelIND1IsisSpbvSysMode, alcatelIND1IsisSpbLSPChecksum=alcatelIND1IsisSpbLSPChecksum, alcatelIND1IsisSpbMulticastSourceGroupSPBM=alcatelIND1IsisSpbMulticastSourceGroupSPBM, alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopName=alcatelIND1IsisSpbMulticastSourceSpfTableEntryNHopName, alcatelIND1IsisSpbMulticastTableEntry=alcatelIND1IsisSpbMulticastTableEntry, alcatelIND1IsisSpbServiceTableEntryGroupSPBM=alcatelIND1IsisSpbServiceTableEntryGroupSPBM, alcatelIND1IsisSpbProtocolSpfSecondWait=alcatelIND1IsisSpbProtocolSpfSecondWait, alcatelIND1IsisSpbAdjDynamicEntryRestartSuppressed=alcatelIND1IsisSpbAdjDynamicEntryRestartSuppressed, alcatelIND1IsisSpbLSPAllocLen=alcatelIND1IsisSpbLSPAllocLen, alcatelIND1isisSpbSysLastSpfRunTimeStamp=alcatelIND1isisSpbSysLastSpfRunTimeStamp, alcatelIND1IsisSpbGroups=alcatelIND1IsisSpbGroups, alcatelIND1IsisSpbAdjStaticEntryConfigGroupSPBM=alcatelIND1IsisSpbAdjStaticEntryConfigGroupSPBM, alcatelIND1IsisSpbLSPGroupSPBM=alcatelIND1IsisSpbLSPGroupSPBM, alcatelIND1IsisSpbmSysSPSourceId=alcatelIND1IsisSpbmSysSPSourceId, alcatelIND1IsisSpbMulticastTableEntryGroupSPBM=alcatelIND1IsisSpbMulticastTableEntryGroupSPBM, AlcatelIND1IsisSpbEctAlgorithm=AlcatelIND1IsisSpbEctAlgorithm, alcatelIND1IsisSpbAdjStaticEntryIfOperState=alcatelIND1IsisSpbAdjStaticEntryIfOperState, alcatelIND1IsisSpbMulticastSourceSpfTable=alcatelIND1IsisSpbMulticastSourceSpfTable, alcatelIND1IsisSpbUnicastGroupSPBM=alcatelIND1IsisSpbUnicastGroupSPBM, PYSNMP_MODULE_ID=alcatelIND1IsisSpbMib, alcatelIND1IsisSpbAdjStaticTableEntry=alcatelIND1IsisSpbAdjStaticTableEntry, alcatelIND1IsisSpbAdjDynamicEntryAdjUpTime=alcatelIND1IsisSpbAdjDynamicEntryAdjUpTime, AlcatelIND1IsisSpbmMulticastMode=AlcatelIND1IsisSpbmMulticastMode, alcatelIND1IsisSpbIngressMacBvlan=alcatelIND1IsisSpbIngressMacBvlan, alcatelIND1SpbIPVPNRedistIsidTableEntry=alcatelIND1SpbIPVPNRedistIsidTableEntry, alcatelIND1IsisSpbProtocolConfigGroupSPBM=alcatelIND1IsisSpbProtocolConfigGroupSPBM, alcatelIND1IsisSpbSysDigestConvention=alcatelIND1IsisSpbSysDigestConvention, alcatelIND1IsisSpbSpfMetric=alcatelIND1IsisSpbSpfMetric)
