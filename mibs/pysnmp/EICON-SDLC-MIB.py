#
# PySNMP MIB module EICON-SDLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EICON-SDLC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:45:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, TimeTicks, ObjectIdentity, Unsigned32, Integer32, IpAddress, Counter64, iso, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "TimeTicks", "ObjectIdentity", "Unsigned32", "Integer32", "IpAddress", "Counter64", "iso", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "Bits", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
eicon = MibIdentifier((1, 3, 6, 1, 4, 1, 434))
management = MibIdentifier((1, 3, 6, 1, 4, 1, 434, 2))
mibv2 = MibIdentifier((1, 3, 6, 1, 4, 1, 434, 2, 2))
module = MibIdentifier((1, 3, 6, 1, 4, 1, 434, 2, 2, 4))
class OperState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("disabled", 2), ("ready", 3), ("active", 4), ("busy", 5))

class AdminState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("start", 1), ("stop", 2), ("dump", 3), ("test", 4), ("invalid", 5))

class PortRef(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 48)

class LinkRef(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 32)

class StationAddr(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

sdlc = MibIdentifier((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2))
sdlcCfgTable = MibTable((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1), )
if mibBuilder.loadTexts: sdlcCfgTable.setStatus('mandatory')
sdlcCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1), ).setIndexNames((0, "EICON-SDLC-MIB", "sdlcCfgPortRef"))
if mibBuilder.loadTexts: sdlcCfgEntry.setStatus('mandatory')
sdlcCfgPortRef = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 1), PortRef()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgPortRef.setStatus('mandatory')
sdlcCfgMaxLinkStation = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 2), LinkRef().clone(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgMaxLinkStation.setStatus('mandatory')
sdlcCfgT1 = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999)).clone(2900)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgT1.setStatus('mandatory')
sdlcCfgT2 = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999)).clone(200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgT2.setStatus('mandatory')
sdlcCfgT3 = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999)).clone(15000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgT3.setStatus('mandatory')
sdlcCfgT4 = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999)).clone(60000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgT4.setStatus('mandatory')
sdlcCfgMaxFrameSz = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(267, 8203)).clone(267)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgMaxFrameSz.setStatus('mandatory')
sdlcCfgMaxRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgMaxRetryCount.setStatus('mandatory')
sdlcCfgMaxWindowSz = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCfgMaxWindowSz.setStatus('mandatory')
sdlcInfoTable = MibTable((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2), )
if mibBuilder.loadTexts: sdlcInfoTable.setStatus('mandatory')
sdlcInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1), ).setIndexNames((0, "EICON-SDLC-MIB", "sdlcInfoPortRef"))
if mibBuilder.loadTexts: sdlcInfoEntry.setStatus('mandatory')
sdlcInfoPortRef = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 1), PortRef()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoPortRef.setStatus('mandatory')
sdlcInfoAdminStatusCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdlcInfoAdminStatusCtr.setStatus('mandatory')
sdlcInfoOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 3), OperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoOperStatus.setStatus('mandatory')
sdlcInfoDial = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("leased", 1), ("dial-up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoDial.setStatus('mandatory')
sdlcInfoDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full-duplex", 1), ("half-duplex", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoDuplex.setStatus('mandatory')
sdlcInfoMaxFrameSz = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoMaxFrameSz.setStatus('mandatory')
sdlcInfoMaxRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoMaxRetryCount.setStatus('mandatory')
sdlcInfoMaxWindowSz = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoMaxWindowSz.setStatus('mandatory')
sdlcInfoMaxLinkStation = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoMaxLinkStation.setStatus('mandatory')
sdlcInfoNbStationInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoNbStationInUse.setStatus('mandatory')
sdlcInfoStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoStartTime.setStatus('mandatory')
sdlcInfoModemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcInfoModemTime.setStatus('mandatory')
sdlcLinkInfoTable = MibTable((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3), )
if mibBuilder.loadTexts: sdlcLinkInfoTable.setStatus('mandatory')
sdlcLinkInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1), ).setIndexNames((0, "EICON-SDLC-MIB", "sdlcLinkInfoPortRef"), (0, "EICON-SDLC-MIB", "sdlcLinkInfoStationAddr"))
if mibBuilder.loadTexts: sdlcLinkInfoEntry.setStatus('mandatory')
sdlcLinkInfoPortRef = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 1), PortRef()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoPortRef.setStatus('mandatory')
sdlcLinkInfoStationAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 2), StationAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoStationAddr.setStatus('mandatory')
sdlcLinkInfoAdminStatusCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdlcLinkInfoAdminStatusCtr.setStatus('mandatory')
sdlcLinkInfoProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("closed", 1), ("closing", 2), ("opening", 3), ("opened", 4), ("resetting", 5), ("wait-reset", 6), ("wait-open", 7), ("xid-send", 8), ("xid-recv", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoProtocolState.setStatus('mandatory')
sdlcLinkInfoUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("closed", 1), ("closing", 2), ("opening", 3), ("opened", 4), ("other", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoUserState.setStatus('mandatory')
sdlcLinkInfoStationType = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("secondary", 1), ("primary", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoStationType.setStatus('mandatory')
sdlcLinkInfoStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoStartTime.setStatus('mandatory')
sdlcLinkInfoChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoChangeTime.setStatus('mandatory')
sdlcLinkInfoDataTime = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoDataTime.setStatus('mandatory')
sdlcLinkInfoMaxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoMaxOut.setStatus('mandatory')
sdlcLinkInfoMaxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoMaxIn.setStatus('mandatory')
sdlcLinkInfoMaxData = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoMaxData.setStatus('mandatory')
sdlcLinkInfoLocalBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoLocalBusy.setStatus('mandatory')
sdlcLinkInfoRemoteBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoRemoteBusy.setStatus('mandatory')
sdlcLinkInfoNS = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoNS.setStatus('mandatory')
sdlcLinkInfoNR = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoNR.setStatus('mandatory')
sdlcLinkInfoLNR = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkInfoLNR.setStatus('mandatory')
sdlcCountTable = MibTable((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4), )
if mibBuilder.loadTexts: sdlcCountTable.setStatus('mandatory')
sdlcCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1), ).setIndexNames((0, "EICON-SDLC-MIB", "sdlcCountPortRef"))
if mibBuilder.loadTexts: sdlcCountEntry.setStatus('mandatory')
sdlcCountPortRef = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 1), PortRef()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountPortRef.setStatus('mandatory')
sdlcCountT1expires = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountT1expires.setStatus('mandatory')
sdlcCountRetransmis = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountRetransmis.setStatus('mandatory')
sdlcCountSNRMTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountSNRMTxs.setStatus('mandatory')
sdlcCountSNRMRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountSNRMRxs.setStatus('mandatory')
sdlcCountDISCTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountDISCTxs.setStatus('mandatory')
sdlcCountDISCRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountDISCRxs.setStatus('mandatory')
sdlcCountUAsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountUAsTxs.setStatus('mandatory')
sdlcCountUAsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountUAsRxs.setStatus('mandatory')
sdlcCountDMsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountDMsTxs.setStatus('mandatory')
sdlcCountDMsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountDMsRxs.setStatus('mandatory')
sdlcCountFRMRsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountFRMRsTxs.setStatus('mandatory')
sdlcCountFRMRsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountFRMRsRxs.setStatus('mandatory')
sdlcCountXIDsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountXIDsTxs.setStatus('mandatory')
sdlcCountXIDsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountXIDsRxs.setStatus('mandatory')
sdlcCountINFOsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountINFOsTxs.setStatus('mandatory')
sdlcCountINFOsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountINFOsRxs.setStatus('mandatory')
sdlcCountRRsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountRRsTxs.setStatus('mandatory')
sdlcCountRRsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountRRsRxs.setStatus('mandatory')
sdlcCountRNRsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountRNRsTxs.setStatus('mandatory')
sdlcCountRNRsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountRNRsRxs.setStatus('mandatory')
sdlcCountREJsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountREJsTxs.setStatus('mandatory')
sdlcCountREJsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountREJsRxs.setStatus('mandatory')
sdlcCountTestTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountTestTxs.setStatus('mandatory')
sdlcCountTestRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountTestRxs.setStatus('mandatory')
sdlcCountBadFcsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountBadFcsTxs.setStatus('mandatory')
sdlcCountBadFcsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountBadFcsRxs.setStatus('mandatory')
sdlcCountAbortTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountAbortTxs.setStatus('mandatory')
sdlcCountAbortRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountAbortRxs.setStatus('mandatory')
sdlcCountTxUnderRs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountTxUnderRs.setStatus('mandatory')
sdlcCountRxOverRs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountRxOverRs.setStatus('mandatory')
sdlcCountUnknowTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountUnknowTxs.setStatus('mandatory')
sdlcCountUnknowRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 4, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcCountUnknowRxs.setStatus('mandatory')
sdlcLinkCountTable = MibTable((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5), )
if mibBuilder.loadTexts: sdlcLinkCountTable.setStatus('mandatory')
sdlcLinkCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1), ).setIndexNames((0, "EICON-SDLC-MIB", "sdlcLinkCountPortRef"), (0, "EICON-SDLC-MIB", "sdlcLinkCountStationRef"))
if mibBuilder.loadTexts: sdlcLinkCountEntry.setStatus('mandatory')
sdlcLinkCountPortRef = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 1), PortRef()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountPortRef.setStatus('mandatory')
sdlcLinkCountStationRef = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 2), StationAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountStationRef.setStatus('mandatory')
sdlcLinkCountT1expires = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountT1expires.setStatus('mandatory')
sdlcLinkCountRetransmis = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountRetransmis.setStatus('mandatory')
sdlcLinkCountSNRMTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountSNRMTxs.setStatus('mandatory')
sdlcLinkCountSNRMRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountSNRMRxs.setStatus('mandatory')
sdlcLinkCountDISCTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountDISCTxs.setStatus('mandatory')
sdlcLinkCountDISCRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountDISCRxs.setStatus('mandatory')
sdlcLinkCountUAsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountUAsTxs.setStatus('mandatory')
sdlcLinkCountUAsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountUAsRxs.setStatus('mandatory')
sdlcLinkCountDMsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountDMsTxs.setStatus('mandatory')
sdlcLinkCountDMsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountDMsRxs.setStatus('mandatory')
sdlcLinkCountFRMRsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountFRMRsTxs.setStatus('mandatory')
sdlcLinkCountFRMRsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountFRMRsRxs.setStatus('mandatory')
sdlcLinkCountXIDsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountXIDsTxs.setStatus('mandatory')
sdlcLinkCountXIDsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountXIDsRxs.setStatus('mandatory')
sdlcLinkCountINFOsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountINFOsTxs.setStatus('mandatory')
sdlcLinkCountINFOsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountINFOsRxs.setStatus('mandatory')
sdlcLinkCountRRsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountRRsTxs.setStatus('mandatory')
sdlcLinkCountRRsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountRRsRxs.setStatus('mandatory')
sdlcLinkCountRNRsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountRNRsTxs.setStatus('mandatory')
sdlcLinkCountRNRsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountRNRsRxs.setStatus('mandatory')
sdlcLinkCountREJsTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountREJsTxs.setStatus('mandatory')
sdlcLinkCountREJsRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountREJsRxs.setStatus('mandatory')
sdlcLinkCountTestTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountTestTxs.setStatus('mandatory')
sdlcLinkCountTestRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 434, 2, 2, 4, 2, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdlcLinkCountTestRxs.setStatus('mandatory')
mibBuilder.exportSymbols("EICON-SDLC-MIB", sdlcLinkCountFRMRsTxs=sdlcLinkCountFRMRsTxs, sdlcLinkCountRNRsTxs=sdlcLinkCountRNRsTxs, sdlcCountUAsRxs=sdlcCountUAsRxs, sdlcCountREJsRxs=sdlcCountREJsRxs, sdlcLinkCountINFOsTxs=sdlcLinkCountINFOsTxs, sdlcInfoModemTime=sdlcInfoModemTime, sdlcInfoAdminStatusCtr=sdlcInfoAdminStatusCtr, sdlcCountDISCTxs=sdlcCountDISCTxs, sdlcLinkInfoNR=sdlcLinkInfoNR, sdlcLinkCountDISCRxs=sdlcLinkCountDISCRxs, management=management, sdlcInfoEntry=sdlcInfoEntry, sdlcCountSNRMRxs=sdlcCountSNRMRxs, sdlcLinkCountDMsRxs=sdlcLinkCountDMsRxs, sdlcCfgMaxRetryCount=sdlcCfgMaxRetryCount, sdlcLinkCountDMsTxs=sdlcLinkCountDMsTxs, sdlcInfoPortRef=sdlcInfoPortRef, sdlcCountEntry=sdlcCountEntry, AdminState=AdminState, sdlcCountBadFcsTxs=sdlcCountBadFcsTxs, eicon=eicon, sdlcLinkCountINFOsRxs=sdlcLinkCountINFOsRxs, sdlcCountRNRsRxs=sdlcCountRNRsRxs, sdlcLinkInfoStartTime=sdlcLinkInfoStartTime, sdlcCountDMsTxs=sdlcCountDMsTxs, sdlcLinkCountFRMRsRxs=sdlcLinkCountFRMRsRxs, sdlcLinkCountSNRMRxs=sdlcLinkCountSNRMRxs, sdlcCfgEntry=sdlcCfgEntry, sdlcCountXIDsTxs=sdlcCountXIDsTxs, sdlcCountDMsRxs=sdlcCountDMsRxs, LinkRef=LinkRef, sdlcCfgT1=sdlcCfgT1, sdlcInfoNbStationInUse=sdlcInfoNbStationInUse, sdlcLinkCountXIDsTxs=sdlcLinkCountXIDsTxs, sdlcCfgT2=sdlcCfgT2, sdlcLinkInfoRemoteBusy=sdlcLinkInfoRemoteBusy, sdlcInfoMaxWindowSz=sdlcInfoMaxWindowSz, sdlcCountRetransmis=sdlcCountRetransmis, sdlcLinkInfoAdminStatusCtr=sdlcLinkInfoAdminStatusCtr, sdlcCountINFOsTxs=sdlcCountINFOsTxs, sdlcLinkInfoMaxIn=sdlcLinkInfoMaxIn, sdlcCountAbortRxs=sdlcCountAbortRxs, sdlcLinkCountRRsRxs=sdlcLinkCountRRsRxs, sdlcCountXIDsRxs=sdlcCountXIDsRxs, sdlcCountRRsTxs=sdlcCountRRsTxs, sdlcLinkInfoProtocolState=sdlcLinkInfoProtocolState, sdlcInfoMaxFrameSz=sdlcInfoMaxFrameSz, sdlcLinkCountUAsRxs=sdlcLinkCountUAsRxs, sdlcCfgT4=sdlcCfgT4, sdlcLinkInfoPortRef=sdlcLinkInfoPortRef, sdlcCountPortRef=sdlcCountPortRef, sdlcCfgMaxFrameSz=sdlcCfgMaxFrameSz, sdlcLinkInfoStationAddr=sdlcLinkInfoStationAddr, sdlcLinkInfoDataTime=sdlcLinkInfoDataTime, sdlcCountDISCRxs=sdlcCountDISCRxs, sdlcCountRNRsTxs=sdlcCountRNRsTxs, sdlcInfoDial=sdlcInfoDial, PortRef=PortRef, sdlc=sdlc, sdlcCountUnknowRxs=sdlcCountUnknowRxs, sdlcLinkCountREJsRxs=sdlcLinkCountREJsRxs, sdlcCountSNRMTxs=sdlcCountSNRMTxs, sdlcInfoOperStatus=sdlcInfoOperStatus, sdlcLinkCountPortRef=sdlcLinkCountPortRef, sdlcLinkCountXIDsRxs=sdlcLinkCountXIDsRxs, sdlcLinkInfoEntry=sdlcLinkInfoEntry, sdlcLinkInfoUserState=sdlcLinkInfoUserState, sdlcLinkCountRetransmis=sdlcLinkCountRetransmis, StationAddr=StationAddr, sdlcLinkCountDISCTxs=sdlcLinkCountDISCTxs, sdlcCountBadFcsRxs=sdlcCountBadFcsRxs, sdlcLinkInfoChangeTime=sdlcLinkInfoChangeTime, sdlcCountUAsTxs=sdlcCountUAsTxs, sdlcLinkCountT1expires=sdlcLinkCountT1expires, sdlcInfoTable=sdlcInfoTable, sdlcCfgT3=sdlcCfgT3, sdlcLinkCountTable=sdlcLinkCountTable, sdlcLinkCountEntry=sdlcLinkCountEntry, sdlcCountFRMRsRxs=sdlcCountFRMRsRxs, sdlcCountREJsTxs=sdlcCountREJsTxs, sdlcLinkCountUAsTxs=sdlcLinkCountUAsTxs, sdlcLinkInfoTable=sdlcLinkInfoTable, sdlcLinkCountTestTxs=sdlcLinkCountTestTxs, sdlcInfoStartTime=sdlcInfoStartTime, sdlcLinkInfoMaxData=sdlcLinkInfoMaxData, sdlcLinkCountREJsTxs=sdlcLinkCountREJsTxs, sdlcInfoMaxRetryCount=sdlcInfoMaxRetryCount, sdlcCountTxUnderRs=sdlcCountTxUnderRs, sdlcCountTestRxs=sdlcCountTestRxs, sdlcCfgPortRef=sdlcCfgPortRef, mibv2=mibv2, sdlcLinkCountRNRsRxs=sdlcLinkCountRNRsRxs, sdlcCountUnknowTxs=sdlcCountUnknowTxs, sdlcCountTable=sdlcCountTable, OperState=OperState, sdlcCountINFOsRxs=sdlcCountINFOsRxs, sdlcCountTestTxs=sdlcCountTestTxs, sdlcCfgMaxWindowSz=sdlcCfgMaxWindowSz, sdlcLinkCountTestRxs=sdlcLinkCountTestRxs, sdlcLinkInfoLNR=sdlcLinkInfoLNR, sdlcCfgMaxLinkStation=sdlcCfgMaxLinkStation, sdlcLinkCountStationRef=sdlcLinkCountStationRef, sdlcCountT1expires=sdlcCountT1expires, sdlcCfgTable=sdlcCfgTable, sdlcLinkInfoLocalBusy=sdlcLinkInfoLocalBusy, module=module, sdlcLinkCountRRsTxs=sdlcLinkCountRRsTxs, sdlcInfoMaxLinkStation=sdlcInfoMaxLinkStation, sdlcCountAbortTxs=sdlcCountAbortTxs, sdlcCountRRsRxs=sdlcCountRRsRxs, sdlcLinkInfoNS=sdlcLinkInfoNS, sdlcInfoDuplex=sdlcInfoDuplex, sdlcCountRxOverRs=sdlcCountRxOverRs, sdlcLinkCountSNRMTxs=sdlcLinkCountSNRMTxs, sdlcLinkInfoMaxOut=sdlcLinkInfoMaxOut, sdlcLinkInfoStationType=sdlcLinkInfoStationType, sdlcCountFRMRsTxs=sdlcCountFRMRsTxs)
