#
# PySNMP MIB module HPN-ICF-DOT11-WIDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11-WIDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
HpnicfDot11ChannelScopeType, HpnicfDot11RadioType, HpnicfDot11ObjectIDType, hpnicfDot11, HpnicfDot11RadioScopeType, HpnicfDot11SSIDStringType = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "HpnicfDot11ChannelScopeType", "HpnicfDot11RadioType", "HpnicfDot11ObjectIDType", "hpnicfDot11", "HpnicfDot11RadioScopeType", "HpnicfDot11SSIDStringType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, Unsigned32, NotificationType, ModuleIdentity, ObjectIdentity, iso, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "Unsigned32", "NotificationType", "ModuleIdentity", "ObjectIdentity", "iso", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "Integer32", "TimeTicks")
DateAndTime, TruthValue, RowStatus, DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "RowStatus", "DisplayString", "TextualConvention", "MacAddress")
hpnicfDot11WIDS = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5))
hpnicfDot11WIDS.setRevisions(('2010-05-31 18:00', '2009-07-29 18:00', '2009-05-07 20:00', '2008-07-25 19:00', '2007-06-19 19:00', '2007-05-16 19:00', '2006-08-20 19:00',))
if mibBuilder.loadTexts: hpnicfDot11WIDS.setLastUpdated('201005311800Z')
if mibBuilder.loadTexts: hpnicfDot11WIDS.setOrganization('')
class HpnicfDot11WIDSDevType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("client", 1), ("ap", 2), ("adhoc", 3), ("wirelessBridge", 4), ("unknown", 5))

class HpnicfDot11WIDSDevPermitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("permit", 1), ("rogue", 2))

class HpnicfDot11WIDSAtkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("act", 1), ("asr", 2), ("aur", 3), ("daf", 4), ("dar", 5), ("ndf", 6), ("pbr", 7), ("rar", 8), ("saf", 9), ("sdf", 10), ("wiv", 11), ("unknown", 12))

hpnicfDot11WIDSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1))
hpnicfDot11WIDSGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1))
hpnicfDot11WIDSDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2))
hpnicfDot11WIDSNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3))
hpnicfDot11WIDSScanMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("auto", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WIDSScanMode.setStatus('current')
hpnicfDot11WIDSScanChannelList = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WIDSScanChannelList.setStatus('obsolete')
hpnicfDot11CntMsrMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 3), Bits().clone(namedValues=NamedValues(("rogue", 0), ("adhoc", 1), ("config", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CntMsrMode.setStatus('current')
hpnicfDot11DevAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1800))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11DevAgingTime.setStatus('current')
hpnicfDot11DynBlkListEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11DynBlkListEnable.setStatus('current')
hpnicfDot11DynBlkListLifeTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11DynBlkListLifeTime.setStatus('current')
hpnicfDot11FloodAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11FloodAtkDctEnable.setStatus('current')
hpnicfDot11SpoofAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SpoofAtkDctEnable.setStatus('current')
hpnicfDot11WeakIVAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WeakIVAtkDctEnable.setStatus('current')
hpnicfDot11ResetWIDSRogueHistory = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetWIDSRogueHistory.setStatus('current')
hpnicfDot11ResetWIDSHistroy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetWIDSHistroy.setStatus('current')
hpnicfDot11ResetWIDSStatistics = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetWIDSStatistics.setStatus('current')
hpnicfDot11ResetAllDynBlkList = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllDynBlkList.setStatus('current')
hpnicfDot11ResetAllStcBlkList = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllStcBlkList.setStatus('current')
hpnicfDot11ResetAllWhtBlkList = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllWhtBlkList.setStatus('current')
hpnicfDot11ResetAllDctRogueAP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllDctRogueAP.setStatus('current')
hpnicfDot11ResetAllDctRogueSta = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllDctRogueSta.setStatus('current')
hpnicfDot11ResetAllDctAdhoc = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllDctAdhoc.setStatus('current')
hpnicfDot11ResetAllDctDevice = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllDctDevice.setStatus('current')
hpnicfDot11ResetAllDctSSID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ResetAllDctSSID.setStatus('current')
hpnicfDot11WidsFloodInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 21), Unsigned32().clone(1)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WidsFloodInterval.setStatus('current')
hpnicfDot11WidsBlackListThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 22), Unsigned32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WidsBlackListThreshold.setStatus('current')
hpnicfDot11SSIDFilterOnOff = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SSIDFilterOnOff.setStatus('current')
hpnicfDot11BSSIDFilterOnOff = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11BSSIDFilterOnOff.setStatus('current')
hpnicfDot11WIDSPermitVendorTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 2), )
if mibBuilder.loadTexts: hpnicfDot11WIDSPermitVendorTable.setStatus('current')
hpnicfDot11WIDSPermitVendorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11VendorOUI"))
if mibBuilder.loadTexts: hpnicfDot11WIDSPermitVendorEntry.setStatus('current')
hpnicfDot11VendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3))
if mibBuilder.loadTexts: hpnicfDot11VendorOUI.setStatus('current')
hpnicfDot11PermitVendorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11PermitVendorRowStatus.setStatus('current')
hpnicfDot11VendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11VendorName.setStatus('current')
hpnicfDot11WIDSPermitSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 3), )
if mibBuilder.loadTexts: hpnicfDot11WIDSPermitSSIDTable.setStatus('current')
hpnicfDot11WIDSPermitSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11PermitSSID"))
if mibBuilder.loadTexts: hpnicfDot11WIDSPermitSSIDEntry.setStatus('current')
hpnicfDot11PermitSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 3, 1, 1), HpnicfDot11SSIDStringType().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: hpnicfDot11PermitSSID.setStatus('current')
hpnicfDot11PermitSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11PermitSSIDRowStatus.setStatus('current')
hpnicfDot11PermitSSIDDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11PermitSSIDDetected.setStatus('current')
hpnicfDot11WIDSIgnoreListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 4), )
if mibBuilder.loadTexts: hpnicfDot11WIDSIgnoreListTable.setStatus('current')
hpnicfDot11WIDSIgnoreListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11IgnoreMAC"))
if mibBuilder.loadTexts: hpnicfDot11WIDSIgnoreListEntry.setStatus('current')
hpnicfDot11IgnoreMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11IgnoreMAC.setStatus('current')
hpnicfDot11IgnoreListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11IgnoreListRowStatus.setStatus('current')
hpnicfDot11IgnoreMACDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11IgnoreMACDetected.setStatus('current')
hpnicfDot11IgnoreDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 4, 1, 4), HpnicfDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11IgnoreDevType.setStatus('current')
hpnicfDot11WIDSAttackListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 5), )
if mibBuilder.loadTexts: hpnicfDot11WIDSAttackListTable.setStatus('current')
hpnicfDot11WIDSAttackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11AttackDeviceMac"))
if mibBuilder.loadTexts: hpnicfDot11WIDSAttackListEntry.setStatus('current')
hpnicfDot11AttackDeviceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11AttackDeviceMac.setStatus('current')
hpnicfDot11AttackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11AttackListRowStatus.setStatus('current')
hpnicfDot11AttackDevDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11AttackDevDetected.setStatus('current')
hpnicfDot11AttackDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 5, 1, 4), HpnicfDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11AttackDevType.setStatus('current')
hpnicfDot11StaticWhiteListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 6), )
if mibBuilder.loadTexts: hpnicfDot11StaticWhiteListTable.setStatus('current')
hpnicfDot11StaticWhiteListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11StaticWhiteListMAC"))
if mibBuilder.loadTexts: hpnicfDot11StaticWhiteListEntry.setStatus('current')
hpnicfDot11StaticWhiteListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11StaticWhiteListMAC.setStatus('current')
hpnicfDot11StaticWhiteListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11StaticWhiteListRowStatus.setStatus('current')
hpnicfDot11StaticBlackListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 7), )
if mibBuilder.loadTexts: hpnicfDot11StaticBlackListTable.setStatus('current')
hpnicfDot11StaticBlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 7, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11StaticBlackListMAC"))
if mibBuilder.loadTexts: hpnicfDot11StaticBlackListEntry.setStatus('current')
hpnicfDot11StaticBlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11StaticBlackListMAC.setStatus('current')
hpnicfDot11StaticBlackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11StaticBlackListRowStatus.setStatus('current')
hpnicfDot11WIDSPermitBSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 8), )
if mibBuilder.loadTexts: hpnicfDot11WIDSPermitBSSIDTable.setStatus('current')
hpnicfDot11WIDSPermitBSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 8, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11PermitBSSID"))
if mibBuilder.loadTexts: hpnicfDot11WIDSPermitBSSIDEntry.setStatus('current')
hpnicfDot11PermitBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11PermitBSSID.setStatus('current')
hpnicfDot11PermitBSSIDDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 8, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11PermitBSSIDDetected.setStatus('current')
hpnicfDot11PermitBSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11PermitBSSIDRowStatus.setStatus('current')
hpnicfDot11WIDSRogueAPTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1), )
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueAPTable.setStatus('current')
hpnicfDot11WIDSRogueAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11RogueAPBSSMAC"))
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueAPEntry.setStatus('current')
hpnicfDot11RogueAPBSSMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11RogueAPBSSMAC.setStatus('current')
hpnicfDot11RogueAPVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPVendorName.setStatus('current')
hpnicfDot11RogueAPMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPMonitorNum.setStatus('current')
hpnicfDot11RogueAPFirstDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPFirstDetectTm.setStatus('current')
hpnicfDot11RogueAPLastDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPLastDetectTm.setStatus('current')
hpnicfDot11RogueAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 6), HpnicfDot11SSIDStringType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPSSID.setStatus('current')
hpnicfDot11RogueAPMaxSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPMaxSigStrength.setStatus('current')
hpnicfDot11RogueAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 8), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPChannel.setStatus('current')
hpnicfDot11RogueAPBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 9), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPBeaconInterval.setStatus('current')
hpnicfDot11RogueAPAttackedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPAttackedStatus.setStatus('current')
hpnicfDot11RogueAPToIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RogueAPToIgnore.setStatus('current')
hpnicfDot11RogueAPEncryptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPEncryptStatus.setStatus('current')
hpnicfDot11RogueAPReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RogueAPReset.setStatus('current')
hpnicfDot11RogueAPFirstDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPFirstDetectTmStr.setStatus('current')
hpnicfDot11RogueAPLastDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 1, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueAPLastDetectTmStr.setStatus('current')
hpnicfDot11WIDSRogueAPExtTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2), )
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueAPExtTable.setStatus('current')
hpnicfDot11WIDSRogueAPExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11RogueAPBSSMAC"), (0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAPID"))
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueAPExtEntry.setStatus('current')
hpnicfDot11WIDSAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1, 1), HpnicfDot11ObjectIDType())
if mibBuilder.loadTexts: hpnicfDot11WIDSAPID.setStatus('current')
hpnicfDot11DetectCurAPSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1, 2), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectCurAPSigStrength.setStatus('current')
hpnicfDot11DetectAPByChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1, 3), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectAPByChannel.setStatus('current')
hpnicfDot11DetectAPByRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1, 4), HpnicfDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectAPByRadioID.setStatus('current')
hpnicfDot11AttackAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11AttackAPStatus.setStatus('current')
hpnicfDot11DetectAPFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectAPFirstTm.setStatus('current')
hpnicfDot11DetectAPLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectAPLastTm.setStatus('current')
hpnicfDot11WIDSRogueStaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3), )
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueStaTable.setStatus('current')
hpnicfDot11WIDSRogueStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11RogueStaMAC"))
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueStaEntry.setStatus('current')
hpnicfDot11RogueStaMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11RogueStaMAC.setStatus('current')
hpnicfDot11RogueStaVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaVendorName.setStatus('current')
hpnicfDot11RogueStaMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaMonitorNum.setStatus('current')
hpnicfDot11RogueStaFirstDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaFirstDetectTm.setStatus('current')
hpnicfDot11RogueStaLastDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaLastDetectTm.setStatus('current')
hpnicfDot11RogueStaAccessBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaAccessBSSID.setStatus('current')
hpnicfDot11RogueStaMaxSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaMaxSigStrength.setStatus('current')
hpnicfDot11RogueStaChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 8), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaChannel.setStatus('current')
hpnicfDot11RogueStaAttackedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaAttackedStatus.setStatus('current')
hpnicfDot11RogueStaToIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RogueStaToIgnore.setStatus('current')
hpnicfDot11RogueStaAdHocStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaAdHocStatus.setStatus('current')
hpnicfDot11RogueStaReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RogueStaReset.setStatus('current')
hpnicfDot11RogueStaFirstDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaFirstDetectTmStr.setStatus('current')
hpnicfDot11RogueStaLastDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 3, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RogueStaLastDetectTmStr.setStatus('current')
hpnicfDot11WIDSRogueStaExtTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4), )
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueStaExtTable.setStatus('current')
hpnicfDot11WIDSRogueStaExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11RogueStaMAC"), (0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAPID"))
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueStaExtEntry.setStatus('current')
hpnicfDot11DetectCurStaSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4, 1, 1), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectCurStaSigStrength.setStatus('current')
hpnicfDot11DetectStaByChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4, 1, 2), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectStaByChannel.setStatus('current')
hpnicfDot11DetectStaByRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4, 1, 3), HpnicfDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectStaByRadioID.setStatus('current')
hpnicfDot11AttackStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11AttackStaStatus.setStatus('current')
hpnicfDot11DetectStaFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectStaFirstTm.setStatus('current')
hpnicfDot11DetectStaLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 4, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DetectStaLastTm.setStatus('current')
hpnicfDot11WIDSDetectedDevTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5), )
if mibBuilder.loadTexts: hpnicfDot11WIDSDetectedDevTable.setStatus('current')
hpnicfDot11WIDSDetectedDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSDevMAC"))
if mibBuilder.loadTexts: hpnicfDot11WIDSDetectedDevEntry.setStatus('current')
hpnicfDot11WIDSDevMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11WIDSDevMAC.setStatus('current')
hpnicfDot11WIDSDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 2), HpnicfDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevType.setStatus('current')
hpnicfDot11WIDSDevPermitType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 3), HpnicfDot11WIDSDevPermitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevPermitType.setStatus('current')
hpnicfDot11WIDSDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevVendor.setStatus('current')
hpnicfDot11WIDSDevMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevMonitorNum.setStatus('current')
hpnicfDot11WIDSDevSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevSSID.setStatus('current')
hpnicfDot11WIDSDevBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevBSSID.setStatus('current')
hpnicfDot11WIDSDevChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 8), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevChannel.setStatus('current')
hpnicfDot11WIDSDevMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 9), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevMaxRSSI.setStatus('current')
hpnicfDot11WIDSDevBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 10), Integer32()).setUnits('millionsecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevBeaconIntvl.setStatus('current')
hpnicfDot11WIDSDevFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevFstDctTime.setStatus('current')
hpnicfDot11WIDSDevLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevLstDctTime.setStatus('current')
hpnicfDot11WIDSDevReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevReset.setStatus('current')
hpnicfDot11WIDSDevSnr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 5, 1, 14), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSDevSnr.setStatus('current')
hpnicfDot11WIDSRptAPTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6), )
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPTable.setStatus('current')
hpnicfDot11WIDSRptAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSDevMAC"), (0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRptAPMAC"))
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPEntry.setStatus('current')
hpnicfDot11WIDSRptAPMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPMAC.setStatus('current')
hpnicfDot11WIDSRptAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPName.setStatus('current')
hpnicfDot11WIDSRptAPRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6, 1, 3), HpnicfDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPRadioID.setStatus('current')
hpnicfDot11WIDSRptAPMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPMaxRSSI.setStatus('current')
hpnicfDot11WIDSRptAPFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPFstDctTime.setStatus('current')
hpnicfDot11WIDSRptAPLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 6, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRptAPLstDctTime.setStatus('current')
hpnicfDot11DynBlackListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 7), )
if mibBuilder.loadTexts: hpnicfDot11DynBlackListTable.setStatus('current')
hpnicfDot11DynBlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 7, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11DynBlackListMAC"))
if mibBuilder.loadTexts: hpnicfDot11DynBlackListEntry.setStatus('current')
hpnicfDot11DynBlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11DynBlackListMAC.setStatus('current')
hpnicfDot11DynBlackListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 7, 1, 2), Unsigned32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DynBlackListTime.setStatus('current')
hpnicfDot11DynBlackListReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DynBlackListReason.setStatus('current')
hpnicfDot11DynBlackListReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 7, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11DynBlackListReset.setStatus('current')
hpnicfDot11DynBlackListTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 7, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11DynBlackListTimeTicks.setStatus('current')
hpnicfDot11WIDSRogueHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8), )
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHistoryTable.setStatus('current')
hpnicfDot11WIDSRogueHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRogueHisIndex"))
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHistoryEntry.setStatus('current')
hpnicfDot11WIDSRogueHisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHisIndex.setStatus('current')
hpnicfDot11WIDSRogueHisMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHisMAC.setStatus('current')
hpnicfDot11WIDSRogueHisVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHisVendor.setStatus('current')
hpnicfDot11WIDSRogueHisType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1, 4), HpnicfDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHisType.setStatus('current')
hpnicfDot11WIDSRogueHisChl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1, 5), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHisChl.setStatus('current')
hpnicfDot11WIDSRogueHisSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHisSSID.setStatus('current')
hpnicfDot11WIDSRogueHisLastDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 8, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueHisLastDctTime.setStatus('current')
hpnicfDot11WIDSAtkHistroyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9), )
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHistroyTable.setStatus('current')
hpnicfDot11WIDSAtkHistroyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkHisIndex"))
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHistroyEntry.setStatus('current')
hpnicfDot11WIDSAtkHisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHisIndex.setStatus('current')
hpnicfDot11WIDSAtkHisMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHisMAC.setStatus('current')
hpnicfDot11WIDSAtkHisType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1, 3), HpnicfDot11WIDSAtkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHisType.setStatus('current')
hpnicfDot11WIDSAtkHisChl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1, 4), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHisChl.setStatus('current')
hpnicfDot11WIDSAtkHisRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHisRSSI.setStatus('current')
hpnicfDot11WIDSAtkHisDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHisDctTime.setStatus('current')
hpnicfDot11WIDSAtkHisAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 9, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkHisAPName.setStatus('current')
hpnicfDot11WIDSAtkStatis = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 10))
hpnicfDot11WIDSAtkStasStartTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 10, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkStasStartTime.setStatus('current')
hpnicfDot11WIDSAtkStasTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 10, 2), )
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkStasTable.setStatus('current')
hpnicfDot11WIDSAtkStasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 10, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkStasType"))
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkStasEntry.setStatus('current')
hpnicfDot11WIDSAtkStasType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 10, 2, 1, 1), HpnicfDot11WIDSAtkType())
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkStasType.setStatus('current')
hpnicfDot11WIDSAtkStasCurCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 10, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkStasCurCnt.setStatus('current')
hpnicfDot11WIDSAtkStasTotalCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 10, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkStasTotalCnt.setStatus('current')
hpnicfDot11BlackListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 11), )
if mibBuilder.loadTexts: hpnicfDot11BlackListTable.setStatus('current')
hpnicfDot11BlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 11, 1), ).setIndexNames((0, "HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11BlackListMAC"))
if mibBuilder.loadTexts: hpnicfDot11BlackListEntry.setStatus('current')
hpnicfDot11BlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 11, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11BlackListMAC.setStatus('current')
hpnicfDot11BlackListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 11, 1, 2), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11BlackListTime.setStatus('current')
hpnicfDot11BlackListReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 11, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11BlackListReason.setStatus('current')
hpnicfDot11BlackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11BlackListRowStatus.setStatus('current')
hpnicfDot11BlackListTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 2, 11, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11BlackListTimeTicks.setStatus('current')
hpnicfDot11WIDSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1))
hpnicfDot11WIDSDetectRogueTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 1)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRogueMAC"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRogueType"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSMonitorMAC"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11MonitorAPID"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11MonitorApRadioID"))
if mibBuilder.loadTexts: hpnicfDot11WIDSDetectRogueTrap.setStatus('current')
hpnicfDot11WIDSAdHocTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 2)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAdHocMAC"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSMonitorMAC"))
if mibBuilder.loadTexts: hpnicfDot11WIDSAdHocTrap.setStatus('current')
hpnicfDot11WIDSUnauthorSSIDTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 3)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11UnauthorSSIDName"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSMonitorMAC"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11MonitorAPID"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11MonitorApRadioID"))
if mibBuilder.loadTexts: hpnicfDot11WIDSUnauthorSSIDTrap.setStatus('current')
hpnicfDot11WIDSDisappearRogueTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 4)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRogueMAC"))
if mibBuilder.loadTexts: hpnicfDot11WIDSDisappearRogueTrap.setStatus('current')
hpnicfDot11WIDSDetectAttack = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 5)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkHisType"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkHisChl"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkHisDctTime"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkHisAPName"))
if mibBuilder.loadTexts: hpnicfDot11WIDSDetectAttack.setStatus('current')
hpnicfDot11WIDSDetectWBridge = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 6)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRptAPName"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRptAPRadioID"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSRptAPLstDctTime"))
if mibBuilder.loadTexts: hpnicfDot11WIDSDetectWBridge.setStatus('current')
hpnicfDot11WIDSFloodTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 7)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkMac"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkFrameType"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfDot11WIDSFloodTrap.setStatus('current')
hpnicfDot11WIDSSpoofTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 8)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkMac"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkFrameType"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkChannel"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkTime"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkDestMac"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfDot11WIDSSpoofTrap.setStatus('current')
hpnicfDot11WIDSWeakIVTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 1, 9)).setObjects(("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkMac"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkChannel"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkTime"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSAtkDestMac"), ("HPN-ICF-DOT11-WIDS-MIB", "hpnicfDot11WIDSFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfDot11WIDSWeakIVTrap.setStatus('current')
hpnicfDot11WIDSTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2))
hpnicfDot11WIDSRogueMAC = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueMAC.setStatus('current')
hpnicfDot11WIDSRogueType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rogueAp", 1), ("rogueStation", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSRogueType.setStatus('current')
hpnicfDot11WIDSMonitorMAC = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSMonitorMAC.setStatus('current')
hpnicfDot11WIDSAdHocMAC = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSAdHocMAC.setStatus('current')
hpnicfDot11UnauthorSSIDName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 5), HpnicfDot11SSIDStringType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11UnauthorSSIDName.setStatus('current')
hpnicfDot11MonitorAPID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 6), HpnicfDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11MonitorAPID.setStatus('current')
hpnicfDot11MonitorApRadioID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 7), HpnicfDot11RadioScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11MonitorApRadioID.setStatus('current')
hpnicfDot11WIDSAtkMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkMac.setStatus('current')
hpnicfDot11WIDSAtkFrameType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 9), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkFrameType.setStatus('current')
hpnicfDot11WIDSAtkChannel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 10), HpnicfDot11ChannelScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkChannel.setStatus('current')
hpnicfDot11WIDSAtkTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkTime.setStatus('current')
hpnicfDot11WIDSAtkDestMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 12), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSAtkDestMac.setStatus('current')
hpnicfDot11WIDSFirstTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 5, 3, 2, 13), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11WIDSFirstTrapTime.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11-WIDS-MIB", hpnicfDot11StaticBlackListTable=hpnicfDot11StaticBlackListTable, hpnicfDot11WIDSDetectWBridge=hpnicfDot11WIDSDetectWBridge, hpnicfDot11RogueStaReset=hpnicfDot11RogueStaReset, hpnicfDot11RogueAPSSID=hpnicfDot11RogueAPSSID, hpnicfDot11SSIDFilterOnOff=hpnicfDot11SSIDFilterOnOff, hpnicfDot11BlackListTable=hpnicfDot11BlackListTable, hpnicfDot11RogueAPMaxSigStrength=hpnicfDot11RogueAPMaxSigStrength, hpnicfDot11BlackListEntry=hpnicfDot11BlackListEntry, hpnicfDot11UnauthorSSIDName=hpnicfDot11UnauthorSSIDName, hpnicfDot11WIDSNotifyGroup=hpnicfDot11WIDSNotifyGroup, hpnicfDot11WIDSDevSSID=hpnicfDot11WIDSDevSSID, hpnicfDot11WIDSAtkStasType=hpnicfDot11WIDSAtkStasType, hpnicfDot11RogueStaMAC=hpnicfDot11RogueStaMAC, hpnicfDot11DetectCurStaSigStrength=hpnicfDot11DetectCurStaSigStrength, hpnicfDot11WIDSDisappearRogueTrap=hpnicfDot11WIDSDisappearRogueTrap, hpnicfDot11WIDSDetectedDevEntry=hpnicfDot11WIDSDetectedDevEntry, hpnicfDot11StaticWhiteListTable=hpnicfDot11StaticWhiteListTable, hpnicfDot11RogueAPLastDetectTm=hpnicfDot11RogueAPLastDetectTm, hpnicfDot11WIDSIgnoreListTable=hpnicfDot11WIDSIgnoreListTable, hpnicfDot11DetectAPByChannel=hpnicfDot11DetectAPByChannel, hpnicfDot11DynBlkListLifeTime=hpnicfDot11DynBlkListLifeTime, hpnicfDot11WIDSAtkTime=hpnicfDot11WIDSAtkTime, hpnicfDot11WIDSRogueStaTable=hpnicfDot11WIDSRogueStaTable, hpnicfDot11WIDSAtkStasTable=hpnicfDot11WIDSAtkStasTable, hpnicfDot11WIDSAtkHisRSSI=hpnicfDot11WIDSAtkHisRSSI, hpnicfDot11RogueAPChannel=hpnicfDot11RogueAPChannel, hpnicfDot11StaticWhiteListEntry=hpnicfDot11StaticWhiteListEntry, hpnicfDot11WIDSRptAPName=hpnicfDot11WIDSRptAPName, hpnicfDot11ResetWIDSStatistics=hpnicfDot11ResetWIDSStatistics, hpnicfDot11WIDSRogueStaExtEntry=hpnicfDot11WIDSRogueStaExtEntry, hpnicfDot11RogueAPToIgnore=hpnicfDot11RogueAPToIgnore, hpnicfDot11BlackListRowStatus=hpnicfDot11BlackListRowStatus, hpnicfDot11PermitSSID=hpnicfDot11PermitSSID, hpnicfDot11AttackDeviceMac=hpnicfDot11AttackDeviceMac, hpnicfDot11WIDSPermitSSIDTable=hpnicfDot11WIDSPermitSSIDTable, hpnicfDot11WIDSRptAPTable=hpnicfDot11WIDSRptAPTable, hpnicfDot11WIDSAPID=hpnicfDot11WIDSAPID, hpnicfDot11ResetWIDSHistroy=hpnicfDot11ResetWIDSHistroy, hpnicfDot11ResetAllDctSSID=hpnicfDot11ResetAllDctSSID, hpnicfDot11StaticBlackListMAC=hpnicfDot11StaticBlackListMAC, hpnicfDot11MonitorAPID=hpnicfDot11MonitorAPID, hpnicfDot11WIDSRptAPLstDctTime=hpnicfDot11WIDSRptAPLstDctTime, hpnicfDot11VendorName=hpnicfDot11VendorName, hpnicfDot11RogueStaToIgnore=hpnicfDot11RogueStaToIgnore, hpnicfDot11WIDSRogueHisVendor=hpnicfDot11WIDSRogueHisVendor, hpnicfDot11RogueAPVendorName=hpnicfDot11RogueAPVendorName, hpnicfDot11WIDSAtkHisMAC=hpnicfDot11WIDSAtkHisMAC, hpnicfDot11WIDSDevReset=hpnicfDot11WIDSDevReset, hpnicfDot11WIDSRptAPMAC=hpnicfDot11WIDSRptAPMAC, hpnicfDot11WIDSAttackListTable=hpnicfDot11WIDSAttackListTable, hpnicfDot11WIDSRogueStaExtTable=hpnicfDot11WIDSRogueStaExtTable, hpnicfDot11WIDSFloodTrap=hpnicfDot11WIDSFloodTrap, hpnicfDot11DetectAPFirstTm=hpnicfDot11DetectAPFirstTm, hpnicfDot11RogueStaVendorName=hpnicfDot11RogueStaVendorName, hpnicfDot11WIDSRogueAPExtEntry=hpnicfDot11WIDSRogueAPExtEntry, hpnicfDot11WIDSRogueStaEntry=hpnicfDot11WIDSRogueStaEntry, hpnicfDot11PermitBSSID=hpnicfDot11PermitBSSID, hpnicfDot11WIDSRptAPMaxRSSI=hpnicfDot11WIDSRptAPMaxRSSI, hpnicfDot11DevAgingTime=hpnicfDot11DevAgingTime, hpnicfDot11ResetAllStcBlkList=hpnicfDot11ResetAllStcBlkList, hpnicfDot11WIDSRogueAPExtTable=hpnicfDot11WIDSRogueAPExtTable, hpnicfDot11WIDSDevMAC=hpnicfDot11WIDSDevMAC, hpnicfDot11WIDSAtkHisChl=hpnicfDot11WIDSAtkHisChl, hpnicfDot11WIDSAtkStatis=hpnicfDot11WIDSAtkStatis, hpnicfDot11WIDSRogueType=hpnicfDot11WIDSRogueType, hpnicfDot11RogueAPBeaconInterval=hpnicfDot11RogueAPBeaconInterval, hpnicfDot11WIDSDevChannel=hpnicfDot11WIDSDevChannel, HpnicfDot11WIDSDevPermitType=HpnicfDot11WIDSDevPermitType, hpnicfDot11RogueAPFirstDetectTm=hpnicfDot11RogueAPFirstDetectTm, hpnicfDot11WIDSUnauthorSSIDTrap=hpnicfDot11WIDSUnauthorSSIDTrap, hpnicfDot11WIDSAdHocMAC=hpnicfDot11WIDSAdHocMAC, hpnicfDot11WIDSRogueHistoryTable=hpnicfDot11WIDSRogueHistoryTable, hpnicfDot11PermitVendorRowStatus=hpnicfDot11PermitVendorRowStatus, hpnicfDot11IgnoreMACDetected=hpnicfDot11IgnoreMACDetected, hpnicfDot11DynBlackListMAC=hpnicfDot11DynBlackListMAC, hpnicfDot11WIDSRogueHistoryEntry=hpnicfDot11WIDSRogueHistoryEntry, hpnicfDot11RogueStaAdHocStatus=hpnicfDot11RogueStaAdHocStatus, hpnicfDot11DynBlackListReset=hpnicfDot11DynBlackListReset, hpnicfDot11WIDSAtkHisDctTime=hpnicfDot11WIDSAtkHisDctTime, hpnicfDot11DynBlackListTable=hpnicfDot11DynBlackListTable, hpnicfDot11AttackAPStatus=hpnicfDot11AttackAPStatus, hpnicfDot11FloodAtkDctEnable=hpnicfDot11FloodAtkDctEnable, hpnicfDot11DetectStaByRadioID=hpnicfDot11DetectStaByRadioID, hpnicfDot11WIDSAtkHisType=hpnicfDot11WIDSAtkHisType, hpnicfDot11IgnoreDevType=hpnicfDot11IgnoreDevType, hpnicfDot11WIDSAtkFrameType=hpnicfDot11WIDSAtkFrameType, hpnicfDot11WIDSRogueHisIndex=hpnicfDot11WIDSRogueHisIndex, hpnicfDot11PermitSSIDDetected=hpnicfDot11PermitSSIDDetected, hpnicfDot11WIDSDetectedDevTable=hpnicfDot11WIDSDetectedDevTable, hpnicfDot11RogueStaLastDetectTmStr=hpnicfDot11RogueStaLastDetectTmStr, hpnicfDot11MonitorApRadioID=hpnicfDot11MonitorApRadioID, hpnicfDot11CntMsrMode=hpnicfDot11CntMsrMode, hpnicfDot11WIDSRogueHisChl=hpnicfDot11WIDSRogueHisChl, hpnicfDot11DetectStaByChannel=hpnicfDot11DetectStaByChannel, hpnicfDot11DetectCurAPSigStrength=hpnicfDot11DetectCurAPSigStrength, hpnicfDot11DynBlackListReason=hpnicfDot11DynBlackListReason, hpnicfDot11RogueAPMonitorNum=hpnicfDot11RogueAPMonitorNum, hpnicfDot11WIDSPermitVendorTable=hpnicfDot11WIDSPermitVendorTable, hpnicfDot11StaticWhiteListRowStatus=hpnicfDot11StaticWhiteListRowStatus, hpnicfDot11WIDSTraps=hpnicfDot11WIDSTraps, hpnicfDot11WIDSAttackListEntry=hpnicfDot11WIDSAttackListEntry, hpnicfDot11BSSIDFilterOnOff=hpnicfDot11BSSIDFilterOnOff, hpnicfDot11ResetAllDctRogueSta=hpnicfDot11ResetAllDctRogueSta, HpnicfDot11WIDSAtkType=HpnicfDot11WIDSAtkType, hpnicfDot11ResetAllDynBlkList=hpnicfDot11ResetAllDynBlkList, hpnicfDot11WIDSConfigGroup=hpnicfDot11WIDSConfigGroup, hpnicfDot11WeakIVAtkDctEnable=hpnicfDot11WeakIVAtkDctEnable, hpnicfDot11SpoofAtkDctEnable=hpnicfDot11SpoofAtkDctEnable, hpnicfDot11WidsBlackListThreshold=hpnicfDot11WidsBlackListThreshold, hpnicfDot11BlackListTime=hpnicfDot11BlackListTime, hpnicfDot11WIDSAdHocTrap=hpnicfDot11WIDSAdHocTrap, hpnicfDot11RogueStaFirstDetectTm=hpnicfDot11RogueStaFirstDetectTm, hpnicfDot11WIDSGlobalConfigGroup=hpnicfDot11WIDSGlobalConfigGroup, HpnicfDot11WIDSDevType=HpnicfDot11WIDSDevType, hpnicfDot11StaticBlackListEntry=hpnicfDot11StaticBlackListEntry, hpnicfDot11RogueStaMaxSigStrength=hpnicfDot11RogueStaMaxSigStrength, hpnicfDot11DynBlackListTimeTicks=hpnicfDot11DynBlackListTimeTicks, hpnicfDot11WIDSDevPermitType=hpnicfDot11WIDSDevPermitType, hpnicfDot11PermitBSSIDRowStatus=hpnicfDot11PermitBSSIDRowStatus, hpnicfDot11WIDSDevMaxRSSI=hpnicfDot11WIDSDevMaxRSSI, hpnicfDot11RogueAPBSSMAC=hpnicfDot11RogueAPBSSMAC, hpnicfDot11RogueStaChannel=hpnicfDot11RogueStaChannel, hpnicfDot11WIDSDetectGroup=hpnicfDot11WIDSDetectGroup, hpnicfDot11WIDSPermitSSIDEntry=hpnicfDot11WIDSPermitSSIDEntry, hpnicfDot11WIDSIgnoreListEntry=hpnicfDot11WIDSIgnoreListEntry, hpnicfDot11ResetAllDctDevice=hpnicfDot11ResetAllDctDevice, hpnicfDot11WIDSDetectRogueTrap=hpnicfDot11WIDSDetectRogueTrap, hpnicfDot11StaticBlackListRowStatus=hpnicfDot11StaticBlackListRowStatus, hpnicfDot11WidsFloodInterval=hpnicfDot11WidsFloodInterval, hpnicfDot11WIDSDevType=hpnicfDot11WIDSDevType, hpnicfDot11ResetAllDctRogueAP=hpnicfDot11ResetAllDctRogueAP, hpnicfDot11BlackListTimeTicks=hpnicfDot11BlackListTimeTicks, hpnicfDot11WIDSScanChannelList=hpnicfDot11WIDSScanChannelList, hpnicfDot11WIDSAtkChannel=hpnicfDot11WIDSAtkChannel, hpnicfDot11RogueStaMonitorNum=hpnicfDot11RogueStaMonitorNum, hpnicfDot11ResetAllWhtBlkList=hpnicfDot11ResetAllWhtBlkList, hpnicfDot11IgnoreListRowStatus=hpnicfDot11IgnoreListRowStatus, hpnicfDot11DynBlackListEntry=hpnicfDot11DynBlackListEntry, hpnicfDot11WIDSRogueMAC=hpnicfDot11WIDSRogueMAC, hpnicfDot11VendorOUI=hpnicfDot11VendorOUI, hpnicfDot11RogueStaFirstDetectTmStr=hpnicfDot11RogueStaFirstDetectTmStr, hpnicfDot11WIDSDevSnr=hpnicfDot11WIDSDevSnr, hpnicfDot11BlackListMAC=hpnicfDot11BlackListMAC, hpnicfDot11AttackDevDetected=hpnicfDot11AttackDevDetected, hpnicfDot11WIDSMonitorMAC=hpnicfDot11WIDSMonitorMAC, hpnicfDot11RogueAPFirstDetectTmStr=hpnicfDot11RogueAPFirstDetectTmStr, hpnicfDot11RogueStaLastDetectTm=hpnicfDot11RogueStaLastDetectTm, hpnicfDot11WIDSFirstTrapTime=hpnicfDot11WIDSFirstTrapTime, hpnicfDot11WIDSRptAPFstDctTime=hpnicfDot11WIDSRptAPFstDctTime, hpnicfDot11WIDSDevBeaconIntvl=hpnicfDot11WIDSDevBeaconIntvl, hpnicfDot11PermitSSIDRowStatus=hpnicfDot11PermitSSIDRowStatus, hpnicfDot11WIDSDevLstDctTime=hpnicfDot11WIDSDevLstDctTime, hpnicfDot11StaticWhiteListMAC=hpnicfDot11StaticWhiteListMAC, hpnicfDot11WIDSDevVendor=hpnicfDot11WIDSDevVendor, hpnicfDot11WIDSDevFstDctTime=hpnicfDot11WIDSDevFstDctTime, hpnicfDot11WIDSAtkStasTotalCnt=hpnicfDot11WIDSAtkStasTotalCnt, hpnicfDot11WIDSAtkHistroyEntry=hpnicfDot11WIDSAtkHistroyEntry, hpnicfDot11WIDSPermitBSSIDTable=hpnicfDot11WIDSPermitBSSIDTable, hpnicfDot11WIDSRogueHisSSID=hpnicfDot11WIDSRogueHisSSID, hpnicfDot11WIDSPermitVendorEntry=hpnicfDot11WIDSPermitVendorEntry, hpnicfDot11WIDSAtkMac=hpnicfDot11WIDSAtkMac, hpnicfDot11WIDSAtkDestMac=hpnicfDot11WIDSAtkDestMac, hpnicfDot11WIDSRptAPEntry=hpnicfDot11WIDSRptAPEntry, hpnicfDot11DetectStaFirstTm=hpnicfDot11DetectStaFirstTm, hpnicfDot11WIDSSpoofTrap=hpnicfDot11WIDSSpoofTrap, hpnicfDot11AttackListRowStatus=hpnicfDot11AttackListRowStatus, hpnicfDot11WIDSTrapVarObjects=hpnicfDot11WIDSTrapVarObjects, hpnicfDot11WIDS=hpnicfDot11WIDS, hpnicfDot11DetectAPLastTm=hpnicfDot11DetectAPLastTm, hpnicfDot11RogueAPLastDetectTmStr=hpnicfDot11RogueAPLastDetectTmStr, hpnicfDot11RogueStaAccessBSSID=hpnicfDot11RogueStaAccessBSSID, hpnicfDot11RogueStaAttackedStatus=hpnicfDot11RogueStaAttackedStatus, hpnicfDot11WIDSDevBSSID=hpnicfDot11WIDSDevBSSID, hpnicfDot11WIDSWeakIVTrap=hpnicfDot11WIDSWeakIVTrap, hpnicfDot11WIDSDetectAttack=hpnicfDot11WIDSDetectAttack, hpnicfDot11RogueAPAttackedStatus=hpnicfDot11RogueAPAttackedStatus, hpnicfDot11WIDSDevMonitorNum=hpnicfDot11WIDSDevMonitorNum, hpnicfDot11WIDSAtkHisAPName=hpnicfDot11WIDSAtkHisAPName, hpnicfDot11ResetAllDctAdhoc=hpnicfDot11ResetAllDctAdhoc, hpnicfDot11RogueAPReset=hpnicfDot11RogueAPReset, PYSNMP_MODULE_ID=hpnicfDot11WIDS, hpnicfDot11WIDSScanMode=hpnicfDot11WIDSScanMode, hpnicfDot11WIDSRogueAPEntry=hpnicfDot11WIDSRogueAPEntry, hpnicfDot11IgnoreMAC=hpnicfDot11IgnoreMAC, hpnicfDot11WIDSAtkStasCurCnt=hpnicfDot11WIDSAtkStasCurCnt, hpnicfDot11WIDSAtkHistroyTable=hpnicfDot11WIDSAtkHistroyTable, hpnicfDot11WIDSPermitBSSIDEntry=hpnicfDot11WIDSPermitBSSIDEntry, hpnicfDot11WIDSRogueHisMAC=hpnicfDot11WIDSRogueHisMAC, hpnicfDot11RogueAPEncryptStatus=hpnicfDot11RogueAPEncryptStatus, hpnicfDot11AttackStaStatus=hpnicfDot11AttackStaStatus, hpnicfDot11BlackListReason=hpnicfDot11BlackListReason, hpnicfDot11PermitBSSIDDetected=hpnicfDot11PermitBSSIDDetected, hpnicfDot11DetectStaLastTm=hpnicfDot11DetectStaLastTm, hpnicfDot11DynBlackListTime=hpnicfDot11DynBlackListTime, hpnicfDot11AttackDevType=hpnicfDot11AttackDevType, hpnicfDot11WIDSRogueHisType=hpnicfDot11WIDSRogueHisType, hpnicfDot11WIDSAtkHisIndex=hpnicfDot11WIDSAtkHisIndex, hpnicfDot11WIDSRptAPRadioID=hpnicfDot11WIDSRptAPRadioID, hpnicfDot11ResetWIDSRogueHistory=hpnicfDot11ResetWIDSRogueHistory, hpnicfDot11WIDSRogueHisLastDctTime=hpnicfDot11WIDSRogueHisLastDctTime, hpnicfDot11WIDSAtkStasStartTime=hpnicfDot11WIDSAtkStasStartTime, hpnicfDot11DetectAPByRadioID=hpnicfDot11DetectAPByRadioID, hpnicfDot11WIDSAtkStasEntry=hpnicfDot11WIDSAtkStasEntry, hpnicfDot11WIDSRogueAPTable=hpnicfDot11WIDSRogueAPTable, hpnicfDot11DynBlkListEnable=hpnicfDot11DynBlkListEnable)
