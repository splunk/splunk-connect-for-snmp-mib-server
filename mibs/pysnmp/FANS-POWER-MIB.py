#
# PySNMP MIB module FANS-POWER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FANS-POWER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:57:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, ModuleIdentity, NotificationType, enterprises, Gauge32, Counter64, MibIdentifier, ObjectIdentity, Integer32, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "ModuleIdentity", "NotificationType", "enterprises", "Gauge32", "Counter64", "MibIdentifier", "ObjectIdentity", "Integer32", "iso", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
class FanPosition(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("cabinet-fan-top", 1), ("trunk-fan-top", 2), ("trunk-fan-bottom", 3))

class FanStat(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("offline", 0), ("online", 1))

class FanType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("newfan", 1), ("oldfan", 2))

class PowerType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3))
    namedValues = NamedValues(("oldpower", 2), ("newpower", 3))

class PowerAvailStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("offline", 0), ("online", 1), ("null", 2))

class PowerOperStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("normal", 0), ("abnormal", 1), ("null", 2))

class NewFanStat(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("abnormal", 0), ("full-speed", 1), ("half-speed", 2), ("null", 3))

class DisplayString(OctetString):
    pass

fan = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 4998))
fanType = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 4998, 1), FanType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanType.setStatus('current')
power = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 4999))
powerType = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 4999, 1), PowerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerType.setStatus('current')
fanTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 5000), )
if mibBuilder.loadTexts: fanTable.setStatus('current')
fansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1), ).setIndexNames((0, "FANS-POWER-MIB", "FanPosition"))
if mibBuilder.loadTexts: fansEntry.setStatus('current')
fansPositon = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 1), FanPosition()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansPositon.setStatus('current')
fansNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansNumber.setStatus('current')
fansStatOfFan1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 3), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan1.setStatus('current')
fansStatOfFan2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 4), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan2.setStatus('current')
fansStatOfFan3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 5), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan3.setStatus('current')
fansStatOfFan4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 6), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan4.setStatus('current')
fansStatOfFan5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 7), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan5.setStatus('current')
fansStatOfFan6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 8), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan6.setStatus('current')
fansStatOfFan7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 9), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan7.setStatus('current')
fansStatOfFan8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 5000, 1, 10), FanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fansStatOfFan8.setStatus('current')
powerStatInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 5001))
powerStatACVoltage = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatACVoltage.setStatus('current')
powerStatACCurrent = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatACCurrent.setStatus('current')
powerStatDCVoltage = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatDCVoltage.setStatus('current')
powerStatDCCurrent = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatDCCurrent.setStatus('current')
powerStatACError = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatACError.setStatus('current')
powerStatRectifyError = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatRectifyError.setStatus('current')
powerStatMod1AvailStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 7), PowerAvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatMod1AvailStatus.setStatus('current')
powerStatMod2AvailStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 8), PowerAvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatMod2AvailStatus.setStatus('current')
powerStatMod3AvailStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 9), PowerAvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatMod3AvailStatus.setStatus('current')
powerStatMod1OperStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 10), PowerOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatMod1OperStatus.setStatus('current')
powerStatMod2OperStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 11), PowerOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatMod2OperStatus.setStatus('current')
powerStatMod3OperStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5001, 12), PowerOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatMod3OperStatus.setStatus('current')
newFanStatInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 5002))
newFanTopFanStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5002, 1), NewFanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newFanTopFanStatus.setStatus('current')
newFanBottomFanStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5002, 2), NewFanStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newFanBottomFanStatus.setStatus('current')
newPowerStatInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 5003))
newPowerStatMod1AvailStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5003, 1), PowerAvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newPowerStatMod1AvailStatus.setStatus('current')
newPowerStatMod2AvailStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5003, 2), PowerAvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newPowerStatMod2AvailStatus.setStatus('current')
newPowerStatMod3AvailStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5003, 3), PowerAvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newPowerStatMod3AvailStatus.setStatus('current')
newPowerStatMod1OperStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5003, 4), PowerOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newPowerStatMod1OperStatus.setStatus('current')
newPowerStatMod2OperStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5003, 5), PowerOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newPowerStatMod2OperStatus.setStatus('current')
newPowerStatMod3OperStatus = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 5003, 6), PowerOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newPowerStatMod3OperStatus.setStatus('current')
mibBuilder.exportSymbols("FANS-POWER-MIB", fansStatOfFan2=fansStatOfFan2, powerStatACCurrent=powerStatACCurrent, newPowerStatMod1OperStatus=newPowerStatMod1OperStatus, powerType=powerType, fansPositon=fansPositon, powerStatACError=powerStatACError, newPowerStatMod2AvailStatus=newPowerStatMod2AvailStatus, powerStatMod3OperStatus=powerStatMod3OperStatus, fansStatOfFan8=fansStatOfFan8, powerStatMod1AvailStatus=powerStatMod1AvailStatus, newFanStatInfo=newFanStatInfo, fanTable=fanTable, PowerOperStatus=PowerOperStatus, FanPosition=FanPosition, newPowerStatInfo=newPowerStatInfo, newPowerStatMod2OperStatus=newPowerStatMod2OperStatus, powerStatMod1OperStatus=powerStatMod1OperStatus, newPowerStatMod1AvailStatus=newPowerStatMod1AvailStatus, powerStatACVoltage=powerStatACVoltage, DisplayString=DisplayString, fansStatOfFan3=fansStatOfFan3, powerStatRectifyError=powerStatRectifyError, power=power, FanType=FanType, powerStatMod2AvailStatus=powerStatMod2AvailStatus, FanStat=FanStat, NewFanStat=NewFanStat, fan=fan, zxr10=zxr10, PowerType=PowerType, fansStatOfFan5=fansStatOfFan5, powerStatInfo=powerStatInfo, fanType=fanType, fansNumber=fansNumber, newFanBottomFanStatus=newFanBottomFanStatus, newFanTopFanStatus=newFanTopFanStatus, powerStatDCVoltage=powerStatDCVoltage, powerStatDCCurrent=powerStatDCCurrent, newPowerStatMod3OperStatus=newPowerStatMod3OperStatus, fansStatOfFan1=fansStatOfFan1, powerStatMod2OperStatus=powerStatMod2OperStatus, fansStatOfFan4=fansStatOfFan4, powerStatMod3AvailStatus=powerStatMod3AvailStatus, fansStatOfFan6=fansStatOfFan6, fansStatOfFan7=fansStatOfFan7, PowerAvailStatus=PowerAvailStatus, zte=zte, fansEntry=fansEntry, newPowerStatMod3AvailStatus=newPowerStatMod3AvailStatus)
