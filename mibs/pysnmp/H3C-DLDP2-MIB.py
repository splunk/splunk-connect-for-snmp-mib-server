#
# PySNMP MIB module H3C-DLDP2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-DLDP2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:08:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ModuleIdentity, Counter32, IpAddress, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, MibIdentifier, Counter64, TimeTicks, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "Counter32", "IpAddress", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "MibIdentifier", "Counter64", "TimeTicks", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress", "TruthValue")
h3cDldp2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117))
h3cDldp2.setRevisions(('2011-12-26 15:30',))
if mibBuilder.loadTexts: h3cDldp2.setLastUpdated('201112261530Z')
if mibBuilder.loadTexts: h3cDldp2.setOrganization('Hangzhou H3C Technologies. Co., Ltd.')
h3cDldp2ScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 1))
h3cDldp2GlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDldp2GlobalEnable.setStatus('current')
h3cDldp2Interval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(5)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDldp2Interval.setStatus('current')
h3cDldp2AuthMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("simple", 3), ("md5", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDldp2AuthMode.setStatus('current')
h3cDldp2AuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDldp2AuthPassword.setStatus('current')
h3cDldp2UniShutdown = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("auto", 2), ("manual", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDldp2UniShutdown.setStatus('current')
h3cDldp2TableGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2))
h3cDldp2PortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 1), )
if mibBuilder.loadTexts: h3cDldp2PortConfigTable.setStatus('current')
h3cDldp2PortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDldp2PortConfigEntry.setStatus('current')
h3cDldp2PortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDldp2PortEnable.setStatus('current')
h3cDldp2PortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 2), )
if mibBuilder.loadTexts: h3cDldp2PortStatusTable.setStatus('current')
h3cDldp2PortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDldp2PortStatusEntry.setStatus('current')
h3cDldp2PortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("initial", 2), ("inactive", 3), ("unidirectional", 4), ("bidirectional", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDldp2PortOperStatus.setStatus('current')
h3cDldp2PortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("down", 2), ("up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDldp2PortLinkStatus.setStatus('current')
h3cDldp2NeighborTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 3), )
if mibBuilder.loadTexts: h3cDldp2NeighborTable.setStatus('current')
h3cDldp2NeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-DLDP2-MIB", "h3cDldp2NeighborBridgeMac"), (0, "H3C-DLDP2-MIB", "h3cDldp2NeighborPortIndex"))
if mibBuilder.loadTexts: h3cDldp2NeighborEntry.setStatus('current')
h3cDldp2NeighborBridgeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDldp2NeighborBridgeMac.setStatus('current')
h3cDldp2NeighborPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cDldp2NeighborPortIndex.setStatus('current')
h3cDldp2NeighborStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("unconfirmed", 2), ("confirmed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDldp2NeighborStatus.setStatus('current')
h3cDldp2NeighborAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 2, 3, 1, 4), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDldp2NeighborAgingTime.setStatus('current')
h3cDldp2TrapBindObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 3))
h3cDldp2Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 4))
h3cDldp2TrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 4, 0))
h3cDldp2TrapUniLink = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 4, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: h3cDldp2TrapUniLink.setStatus('current')
h3cDldp2TrapBidLink = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 117, 4, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: h3cDldp2TrapBidLink.setStatus('current')
mibBuilder.exportSymbols("H3C-DLDP2-MIB", h3cDldp2NeighborStatus=h3cDldp2NeighborStatus, h3cDldp2TrapBindObjects=h3cDldp2TrapBindObjects, h3cDldp2AuthMode=h3cDldp2AuthMode, h3cDldp2PortEnable=h3cDldp2PortEnable, h3cDldp2NeighborTable=h3cDldp2NeighborTable, PYSNMP_MODULE_ID=h3cDldp2, h3cDldp2NeighborEntry=h3cDldp2NeighborEntry, h3cDldp2AuthPassword=h3cDldp2AuthPassword, h3cDldp2PortStatusEntry=h3cDldp2PortStatusEntry, h3cDldp2PortConfigTable=h3cDldp2PortConfigTable, h3cDldp2TrapBidLink=h3cDldp2TrapBidLink, h3cDldp2PortConfigEntry=h3cDldp2PortConfigEntry, h3cDldp2TrapPrefix=h3cDldp2TrapPrefix, h3cDldp2GlobalEnable=h3cDldp2GlobalEnable, h3cDldp2PortOperStatus=h3cDldp2PortOperStatus, h3cDldp2PortLinkStatus=h3cDldp2PortLinkStatus, h3cDldp2ScalarGroup=h3cDldp2ScalarGroup, h3cDldp2=h3cDldp2, h3cDldp2Interval=h3cDldp2Interval, h3cDldp2NeighborAgingTime=h3cDldp2NeighborAgingTime, h3cDldp2NeighborPortIndex=h3cDldp2NeighborPortIndex, h3cDldp2UniShutdown=h3cDldp2UniShutdown, h3cDldp2PortStatusTable=h3cDldp2PortStatusTable, h3cDldp2TableGroup=h3cDldp2TableGroup, h3cDldp2TrapUniLink=h3cDldp2TrapUniLink, h3cDldp2NeighborBridgeMac=h3cDldp2NeighborBridgeMac, h3cDldp2Trap=h3cDldp2Trap)
