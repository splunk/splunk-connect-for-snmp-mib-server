#
# PySNMP MIB module SONUS-ISDN-SERVICE-GROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-ISDN-SERVICE-GROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ObjectIdentity, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Integer32, Unsigned32, IpAddress, Gauge32, TimeTicks, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Integer32", "Unsigned32", "IpAddress", "Gauge32", "TimeTicks", "MibIdentifier", "Counter32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
sonusEventLevel, sonusEventDescription, sonusEventClass = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventLevel", "sonusEventDescription", "sonusEventClass")
sonusSignallingMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusSignallingMIBs")
SonusServiceState, SonusAdminState, SonusName, SonusNameReference = mibBuilder.importSymbols("SONUS-TC", "SonusServiceState", "SonusAdminState", "SonusName", "SonusNameReference")
sonusIsdnServiceGroupMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4))
if mibBuilder.loadTexts: sonusIsdnServiceGroupMIB.setLastUpdated('200107310000Z')
if mibBuilder.loadTexts: sonusIsdnServiceGroupMIB.setOrganization('Sonus Networks, Inc.')
sonusIsdnServiceGroupMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1))
sonusIsdnsgServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1))
sonusIsdnsgServiceGroupNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupNextIndex.setStatus('current')
sonusIsdnsgServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2), )
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupTable.setStatus('current')
sonusIsdnsgServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgServiceGroupListIndex"))
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupEntry.setStatus('current')
sonusIsdnsgServiceGroupListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupListIndex.setStatus('current')
sonusIsdnsgServiceGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupName.setStatus('current')
sonusIsdnsgServiceGroupTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupTrunkGroup.setStatus('current')
sonusIsdnsgServiceGroupHuntAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lowlow", 1), ("highhigh", 2), ("circularforward", 3), ("circularbackward", 4))).clone('lowlow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupHuntAlgorithm.setStatus('current')
sonusIsdnsgServiceGroupCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupCost.setStatus('current')
sonusIsdnsgServiceGroupSwitchSide = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupSwitchSide.setStatus('current')
sonusIsdnsgServiceGroupSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ni2", 1), ("dms250", 2), ("dms100", 3), ("lucent5ESS", 4), ("lucent4ESS", 5), ("euroIsdn", 6), ("ins1500", 7))).clone('ni2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupSwitchType.setStatus('current')
sonusIsdnsgServiceGroupSwitchProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupSwitchProfileName.setStatus('current')
sonusIsdnsgServiceGroupOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("outOfService", 1), ("maintenance", 2), ("inService", 3), ("restart", 4), ("clearStats", 5), ("dchannelSwitchover", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupOperation.setStatus('current')
sonusIsdnsgServiceGroupPrimaryDchannelInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupPrimaryDchannelInterface.setStatus('current')
sonusIsdnsgServiceGroupPrimaryDchannelTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)).clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupPrimaryDchannelTimeSlot.setStatus('current')
sonusIsdnsgServiceGroupPrimaryDchannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outOfService", 1), ("inService", 2))).clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupPrimaryDchannelMode.setStatus('current')
sonusIsdnsgServiceGroupBackupDchannelInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupBackupDchannelInterface.setStatus('current')
sonusIsdnsgServiceGroupBackupDchannelTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)).clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupBackupDchannelTimeSlot.setStatus('current')
sonusIsdnsgServiceGroupBackupDchannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("outOfService", 1), ("inService", 2), ("unEquipped", 3))).clone('unEquipped')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupBackupDchannelMode.setStatus('current')
sonusIsdnsgServiceGroupLayerTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("layer2", 2), ("layer3", 3), ("both", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupLayerTrace.setStatus('current')
sonusIsdnsgServiceGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 17), SonusServiceState().clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupMode.setStatus('current')
sonusIsdnsgServiceGroupAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dryUp", 1), ("force", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupAction.setStatus('current')
sonusIsdnsgServiceGroupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupTimeout.setStatus('current')
sonusIsdnsgServiceGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 20), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupAdminState.setStatus('current')
sonusIsdnsgServiceGroupProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupProfileName.setStatus('current')
sonusIsdnsgServiceGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 22), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupRowStatus.setStatus('current')
sonusIsdnsgServiceGroupDefaultDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupDefaultDirectoryNumber.setStatus('current')
sonusIsdnsgServiceGroupCallingPartyNumberProvision = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("necessary", 1), ("notNecessary", 2))).clone('notNecessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupCallingPartyNumberProvision.setStatus('current')
sonusIsdnsgServiceGroupCallingPartyNumberDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupCallingPartyNumberDiscard.setStatus('current')
sonusIsdnsgServiceGroupCallingPartyNumberDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupCallingPartyNumberDelivery.setStatus('current')
sonusIsdnsgServiceGroupCallingPartySubAddressTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("conditional", 3))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupCallingPartySubAddressTransfer.setStatus('current')
sonusIsdnsgServiceGroupCallingPartySubAddressDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("conditional", 3))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupCallingPartySubAddressDelivery.setStatus('current')
sonusIsdnsgServiceGroupBchannelAvailabilitySignaling = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupBchannelAvailabilitySignaling.setStatus('current')
sonusIsdnsgServiceGroupVerboseTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupVerboseTrace.setStatus('current')
sonusIsdnsgServiceGroupCallingPartyNumberPresentation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupCallingPartyNumberPresentation.setStatus('current')
sonusIsdnsgServiceGroupDiscTreatmentProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 32), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupDiscTreatmentProfileName.setStatus('current')
sonusIsdnsgServiceGroupTonePackageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 33), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupTonePackageName.setStatus('current')
sonusIsdnsgServiceGroupT302 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT302.setStatus('current')
sonusIsdnsgServiceGroupT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT303.setStatus('current')
sonusIsdnsgServiceGroupT304 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT304.setStatus('current')
sonusIsdnsgServiceGroupT305 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT305.setStatus('current')
sonusIsdnsgServiceGroupT306 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT306.setStatus('current')
sonusIsdnsgServiceGroupT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT308.setStatus('current')
sonusIsdnsgServiceGroupT309 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(90)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT309.setStatus('current')
sonusIsdnsgServiceGroupT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT310.setStatus('current')
sonusIsdnsgServiceGroupT312 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT312.setStatus('current')
sonusIsdnsgServiceGroupT313 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT313.setStatus('current')
sonusIsdnsgServiceGroupT314 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT314.setStatus('current')
sonusIsdnsgServiceGroupT318 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT318.setStatus('current')
sonusIsdnsgServiceGroupT319 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT319.setStatus('current')
sonusIsdnsgServiceGroupT322 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT322.setStatus('current')
sonusIsdnsgServiceGroupK = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupK.setStatus('current')
sonusIsdnsgServiceGroupT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT200.setStatus('current')
sonusIsdnsgServiceGroupT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupT203.setStatus('current')
sonusIsdnsgServiceGroupN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupN200.setStatus('current')
sonusIsdnsgServiceGroupN201 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 260)).clone(260)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupN201.setStatus('current')
sonusIsdnsgServiceGroupBchannelInitialRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupBchannelInitialRestart.setStatus('current')
sonusIsdnsgServiceGroupIuaApplicationServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 54), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupIuaApplicationServer.setStatus('current')
sonusIsdnsgServiceGroupIuaAutoDatalinkEstablish = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 1, 2, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupIuaAutoDatalinkEstablish.setStatus('current')
sonusIsdnsgServiceGroupStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2), )
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatTable.setStatus('current')
sonusIsdnsgServiceGroupStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1), ).setIndexNames((0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgServiceGroupStatListIndex"))
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatEntry.setStatus('current')
sonusIsdnsgServiceGroupStatListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatListIndex.setStatus('current')
sonusIsdnsgServiceGroupStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("available", 1), ("unavailable", 2), ("dryup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatStatus.setStatus('current')
sonusIsdnsgServiceGroupStatTgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inService", 1), ("outOfService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatTgMode.setStatus('current')
sonusIsdnsgServiceGroupStatNumBchConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatNumBchConfigured.setStatus('current')
sonusIsdnsgServiceGroupStatNumBchAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatNumBchAvailable.setStatus('current')
sonusIsdnsgServiceGroupStatInCallsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatInCallsActive.setStatus('current')
sonusIsdnsgServiceGroupStatInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatInCalls.setStatus('current')
sonusIsdnsgServiceGroupStatInConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatInConnected.setStatus('current')
sonusIsdnsgServiceGroupStatOutCallsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatOutCallsActive.setStatus('current')
sonusIsdnsgServiceGroupStatOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatOutCalls.setStatus('current')
sonusIsdnsgServiceGroupStatOutConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatOutConnected.setStatus('current')
sonusIsdnsgServiceGroupStatPrimaryDchannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inService", 1), ("outOfService", 2), ("manualOos", 3), ("standby", 4), ("maintenanceBusy", 5), ("unEquipped", 6), ("wait", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatPrimaryDchannel.setStatus('current')
sonusIsdnsgServiceGroupStatPrimaryDchInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatPrimaryDchInPkts.setStatus('current')
sonusIsdnsgServiceGroupStatPrimaryDchOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatPrimaryDchOutPkts.setStatus('current')
sonusIsdnsgServiceGroupStatPrimaryDchInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatPrimaryDchInBytes.setStatus('current')
sonusIsdnsgServiceGroupStatPrimaryDchOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatPrimaryDchOutBytes.setStatus('current')
sonusIsdnsgServiceGroupStatBackupDchannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inService", 1), ("outOfService", 2), ("manualOos", 3), ("standby", 4), ("maintenanceBusy", 5), ("unEquipped", 6), ("wait", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatBackupDchannel.setStatus('current')
sonusIsdnsgServiceGroupStatBackupDchInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatBackupDchInPkts.setStatus('current')
sonusIsdnsgServiceGroupStatBackupDchOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatBackupDchOutPkts.setStatus('current')
sonusIsdnsgServiceGroupStatBackupDchInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatBackupDchInBytes.setStatus('current')
sonusIsdnsgServiceGroupStatBackupDchOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgServiceGroupStatBackupDchOutBytes.setStatus('current')
sonusIsdnsgProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3))
sonusIsdnsgProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgProfileNextIndex.setStatus('current')
sonusIsdnsgProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2), )
if mibBuilder.loadTexts: sonusIsdnsgProfileTable.setStatus('current')
sonusIsdnsgProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1), ).setIndexNames((0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgProfileListIndex"))
if mibBuilder.loadTexts: sonusIsdnsgProfileEntry.setStatus('current')
sonusIsdnsgProfileListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgProfileListIndex.setStatus('current')
sonusIsdnsgProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileName.setStatus('current')
sonusIsdnsgProfileTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileTrunkGroup.setStatus('current')
sonusIsdnsgProfileHuntAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lowlow", 1), ("highhigh", 2), ("circularforward", 3), ("circularbackward", 4))).clone('lowlow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileHuntAlgorithm.setStatus('current')
sonusIsdnsgProfileCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileCost.setStatus('current')
sonusIsdnsgProfileSwitchSide = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("network", 1), ("user", 2), ("usersym", 3))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileSwitchSide.setStatus('deprecated')
sonusIsdnsgProfileSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ni2", 1), ("dms250", 2), ("dms100", 3), ("lucent5ESS", 4), ("lucent4ESS", 5), ("euroIsdn", 6), ("ins1500", 7))).clone('ni2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileSwitchType.setStatus('deprecated')
sonusIsdnsgProfileSwitchProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileSwitchProfile.setStatus('obsolete')
sonusIsdnsgProfileMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 9), SonusServiceState().clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileMode.setStatus('obsolete')
sonusIsdnsgProfileAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 10), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileAdminState.setStatus('current')
sonusIsdnsgProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileRowStatus.setStatus('current')
sonusIsdnsgProfileDefaultDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileDefaultDirectoryNumber.setStatus('current')
sonusIsdnsgProfileCallingPartyNumberProvision = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("necessary", 1), ("notNecessary", 2))).clone('necessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileCallingPartyNumberProvision.setStatus('current')
sonusIsdnsgProfileCallingPartyNumberDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileCallingPartyNumberDiscard.setStatus('current')
sonusIsdnsgProfileCallingPartyNumberDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileCallingPartyNumberDelivery.setStatus('current')
sonusIsdnsgProfileCallingPartySubAddressTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("conditional", 3))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileCallingPartySubAddressTransfer.setStatus('current')
sonusIsdnsgProfileCallingPartySubAddressDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("conditional", 3))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileCallingPartySubAddressDelivery.setStatus('current')
sonusIsdnsgProfileCallingPartyNumberPresentation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 3, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgProfileCallingPartyNumberPresentation.setStatus('current')
sonusIsdnsgInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4), )
if mibBuilder.loadTexts: sonusIsdnsgInterfaceTable.setStatus('current')
sonusIsdnsgInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4, 1), ).setIndexNames((0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgInterfaceServiceListIndex"), (0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgInterfaceIdentifier"))
if mibBuilder.loadTexts: sonusIsdnsgInterfaceEntry.setStatus('current')
sonusIsdnsgInterfaceServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgInterfaceServiceListIndex.setStatus('current')
sonusIsdnsgInterfaceIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgInterfaceIdentifier.setStatus('current')
sonusIsdnsgInterfacePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgInterfacePortName.setStatus('current')
sonusIsdnsgInterfaceOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restart", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgInterfaceOperation.setStatus('current')
sonusIsdnsgInterfaceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4, 1, 5), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgInterfaceAdminState.setStatus('current')
sonusIsdnsgInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 4, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgInterfaceRowStatus.setStatus('current')
sonusIsdnsgBchannelTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5), )
if mibBuilder.loadTexts: sonusIsdnsgBchannelTable.setStatus('current')
sonusIsdnsgBchannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1), ).setIndexNames((0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgBchannelServiceListIndex"), (0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgBchannelInterfaceIdentifier"), (0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgBchannelNumber"))
if mibBuilder.loadTexts: sonusIsdnsgBchannelEntry.setStatus('current')
sonusIsdnsgBchannelServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelServiceListIndex.setStatus('current')
sonusIsdnsgBchannelInterfaceIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelInterfaceIdentifier.setStatus('current')
sonusIsdnsgBchannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelNumber.setStatus('current')
sonusIsdnsgBchannelCircuitProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 4), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgBchannelCircuitProfileName.setStatus('current')
sonusIsdnsgBchannelDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("twoWay", 1), ("oneWayIn", 2), ("oneWayOut", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgBchannelDirection.setStatus('current')
sonusIsdnsgBchannelOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restart", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgBchannelOperation.setStatus('current')
sonusIsdnsgBchannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("outOfService", 1), ("maintenance", 2), ("inService", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgBchannelMode.setStatus('current')
sonusIsdnsgBchannelAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dryUp", 1), ("force", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgBchannelAction.setStatus('current')
sonusIsdnsgBchannelTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgBchannelTimeout.setStatus('current')
sonusIsdnsgBchannelAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 5, 1, 10), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgBchannelAdminState.setStatus('current')
sonusIsdnsgBchannelStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6), )
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatTable.setStatus('current')
sonusIsdnsgBchannelStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1), ).setIndexNames((0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgBchannelStatServiceListIndex"), (0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgBchannelStatInterfaceIdentifier"), (0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgBchannelStatNumber"))
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatEntry.setStatus('current')
sonusIsdnsgBchannelStatServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatServiceListIndex.setStatus('current')
sonusIsdnsgBchannelStatInterfaceIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatInterfaceIdentifier.setStatus('current')
sonusIsdnsgBchannelStatNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatNumber.setStatus('current')
sonusIsdnsgBchannelStatUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unequipped", 1), ("idle", 2), ("inBusy", 3), ("outBusy", 4), ("transientSetup", 5), ("transientRelease", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatUsage.setStatus('current')
sonusIsdnsgBchannelStatLocalMaint = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("inService", 1), ("maintenance", 2), ("outOfService", 3), ("transientInService", 4), ("transientMaintenance", 5), ("transientOutOfService", 6), ("dryup", 7), ("notAvailable", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatLocalMaint.setStatus('current')
sonusIsdnsgBchannelStatLocalHw = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inService", 1), ("outOfService", 2), ("transientInService", 3), ("transientOutOfService", 4), ("notAvailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatLocalHw.setStatus('current')
sonusIsdnsgBchannelStatRemoteMaint = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("inService", 1), ("maintenance", 2), ("outOfService", 3), ("transientInService", 4), ("transientMaintenance", 5), ("transientOutOfService", 6), ("notAvailable", 7), ("restarting", 8), ("restartError", 9), ("autoOutOfService", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgBchannelStatRemoteMaint.setStatus('current')
sonusIsdnsgSwitchProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7))
sonusIsdnsgSwitchProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileNextIndex.setStatus('current')
sonusIsdnsgSwitchProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2), )
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileTable.setStatus('current')
sonusIsdnsgSwitchProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1), ).setIndexNames((0, "SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnsgSwitchProfileListIndex"))
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileEntry.setStatus('current')
sonusIsdnsgSwitchProfileListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileListIndex.setStatus('current')
sonusIsdnsgSwitchProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileName.setStatus('current')
sonusIsdnsgSwitchProfileSwitchSide = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileSwitchSide.setStatus('current')
sonusIsdnsgSwitchProfileSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ni2", 1), ("dms250", 2), ("dms100", 3), ("lucent5ESS", 4), ("lucent4ESS", 5), ("euroIsdn", 6), ("ins1500", 7))).clone('ni2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileSwitchType.setStatus('current')
sonusIsdnsgSwitchProfileBchannelAvailabilitySignaling = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileBchannelAvailabilitySignaling.setStatus('current')
sonusIsdnsgSwitchProfileT302 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT302.setStatus('current')
sonusIsdnsgSwitchProfileT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT303.setStatus('current')
sonusIsdnsgSwitchProfileT304 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT304.setStatus('current')
sonusIsdnsgSwitchProfileT305 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT305.setStatus('current')
sonusIsdnsgSwitchProfileT306 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT306.setStatus('current')
sonusIsdnsgSwitchProfileT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT308.setStatus('current')
sonusIsdnsgSwitchProfileT309 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT309.setStatus('current')
sonusIsdnsgSwitchProfileT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT310.setStatus('current')
sonusIsdnsgSwitchProfileT312 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT312.setStatus('current')
sonusIsdnsgSwitchProfileT313 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT313.setStatus('current')
sonusIsdnsgSwitchProfileT314 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT314.setStatus('current')
sonusIsdnsgSwitchProfileT318 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT318.setStatus('current')
sonusIsdnsgSwitchProfileT319 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT319.setStatus('current')
sonusIsdnsgSwitchProfileT322 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT322.setStatus('current')
sonusIsdnsgSwitchProfileK = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileK.setStatus('current')
sonusIsdnsgSwitchProfileT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT200.setStatus('current')
sonusIsdnsgSwitchProfileT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileT203.setStatus('current')
sonusIsdnsgSwitchProfileN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileN200.setStatus('current')
sonusIsdnsgSwitchProfileN201 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 260)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileN201.setStatus('current')
sonusIsdnsgSwitchProfileAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 25), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileAdminState.setStatus('current')
sonusIsdnsgSwitchProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 26), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileRowStatus.setStatus('current')
sonusIsdnsgSwitchProfileBchannelInitialRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 1, 7, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsdnsgSwitchProfileBchannelInitialRestart.setStatus('current')
sonusIsdnServiceGroupMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2))
sonusIsdnServiceGroupMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0))
sonusIsdnServiceGroupMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 1))
sonusIsdnSvcGrpName = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnSvcGrpName.setStatus('current')
sonusIsdnInterfaceId = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnInterfaceId.setStatus('current')
sonusIsdnBchannelOffsets = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 1, 3), Bits().clone(namedValues=NamedValues(("bchOffset0", 0), ("bchOffset1", 1), ("bchOffset2", 2), ("bchOffset3", 3), ("bchOffset4", 4), ("bchOffset5", 5), ("bchOffset6", 6), ("bchOffset7", 7), ("bchOffset8", 8), ("bchOffset9", 9), ("bchOffset10", 10), ("bchOffset11", 11), ("bchOffset12", 12), ("bchOffset13", 13), ("bchOffset14", 14), ("bchOffset15", 15), ("bchOffset16", 16), ("bchOffset17", 17), ("bchOffset18", 18), ("bchOffset19", 19), ("bchOffset20", 20), ("bchOffset21", 21), ("bchOffset22", 22), ("bchOffset23", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsdnBchannelOffsets.setStatus('current')
sonusIsdnSvcGrpInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 1)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnSvcGrpInServiceNotification.setStatus('current')
sonusIsdnSvcGrpOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 2)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnSvcGrpOutOfServiceNotification.setStatus('current')
sonusIsdnBChannelInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 3)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnInterfaceId"), ("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnBchannelOffsets"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnBChannelInServiceNotification.setStatus('current')
sonusIsdnBChannelOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 4)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnInterfaceId"), ("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnBchannelOffsets"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnBChannelOutOfServiceNotification.setStatus('current')
sonusIsdnPrimaryDChannelInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 5)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnPrimaryDChannelInServiceNotification.setStatus('current')
sonusIsdnPrimaryDChannelOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 6)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnPrimaryDChannelOutOfServiceNotification.setStatus('current')
sonusIsdnBackupDChannelInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 7)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnBackupDChannelInServiceNotification.setStatus('current')
sonusIsdnBackupDChannelOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 4, 2, 0, 8)).setObjects(("SONUS-ISDN-SERVICE-GROUP-MIB", "sonusIsdnSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsdnBackupDChannelOutOfServiceNotification.setStatus('current')
mibBuilder.exportSymbols("SONUS-ISDN-SERVICE-GROUP-MIB", sonusIsdnServiceGroupMIBObjects=sonusIsdnServiceGroupMIBObjects, sonusIsdnsgServiceGroupCallingPartyNumberPresentation=sonusIsdnsgServiceGroupCallingPartyNumberPresentation, sonusIsdnsgServiceGroupBchannelInitialRestart=sonusIsdnsgServiceGroupBchannelInitialRestart, sonusIsdnsgServiceGroupStatEntry=sonusIsdnsgServiceGroupStatEntry, sonusIsdnsgServiceGroupK=sonusIsdnsgServiceGroupK, sonusIsdnsgServiceGroupStatPrimaryDchannel=sonusIsdnsgServiceGroupStatPrimaryDchannel, sonusIsdnsgServiceGroupStatBackupDchOutPkts=sonusIsdnsgServiceGroupStatBackupDchOutPkts, sonusIsdnsgServiceGroupT322=sonusIsdnsgServiceGroupT322, sonusIsdnsgSwitchProfileBchannelInitialRestart=sonusIsdnsgSwitchProfileBchannelInitialRestart, sonusIsdnSvcGrpOutOfServiceNotification=sonusIsdnSvcGrpOutOfServiceNotification, sonusIsdnBackupDChannelOutOfServiceNotification=sonusIsdnBackupDChannelOutOfServiceNotification, sonusIsdnsgSwitchProfileT309=sonusIsdnsgSwitchProfileT309, sonusIsdnsgServiceGroupT203=sonusIsdnsgServiceGroupT203, sonusIsdnPrimaryDChannelInServiceNotification=sonusIsdnPrimaryDChannelInServiceNotification, sonusIsdnSvcGrpName=sonusIsdnSvcGrpName, sonusIsdnsgServiceGroupStatOutConnected=sonusIsdnsgServiceGroupStatOutConnected, sonusIsdnsgBchannelInterfaceIdentifier=sonusIsdnsgBchannelInterfaceIdentifier, sonusIsdnsgSwitchProfileSwitchSide=sonusIsdnsgSwitchProfileSwitchSide, sonusIsdnsgSwitchProfileT322=sonusIsdnsgSwitchProfileT322, sonusIsdnsgServiceGroupStatTable=sonusIsdnsgServiceGroupStatTable, sonusIsdnsgProfileCallingPartySubAddressDelivery=sonusIsdnsgProfileCallingPartySubAddressDelivery, sonusIsdnsgServiceGroupT313=sonusIsdnsgServiceGroupT313, sonusIsdnsgServiceGroupStatPrimaryDchOutBytes=sonusIsdnsgServiceGroupStatPrimaryDchOutBytes, sonusIsdnsgServiceGroupT314=sonusIsdnsgServiceGroupT314, sonusIsdnsgSwitchProfileT312=sonusIsdnsgSwitchProfileT312, sonusIsdnsgServiceGroupN201=sonusIsdnsgServiceGroupN201, sonusIsdnsgSwitchProfileT314=sonusIsdnsgSwitchProfileT314, sonusIsdnsgSwitchProfileT318=sonusIsdnsgSwitchProfileT318, sonusIsdnsgSwitchProfileNextIndex=sonusIsdnsgSwitchProfileNextIndex, sonusIsdnsgBchannelStatEntry=sonusIsdnsgBchannelStatEntry, sonusIsdnsgServiceGroupName=sonusIsdnsgServiceGroupName, sonusIsdnsgInterfaceTable=sonusIsdnsgInterfaceTable, sonusIsdnsgServiceGroupT304=sonusIsdnsgServiceGroupT304, sonusIsdnsgSwitchProfileListIndex=sonusIsdnsgSwitchProfileListIndex, sonusIsdnsgBchannelServiceListIndex=sonusIsdnsgBchannelServiceListIndex, sonusIsdnsgServiceGroupStatInCallsActive=sonusIsdnsgServiceGroupStatInCallsActive, sonusIsdnsgBchannelNumber=sonusIsdnsgBchannelNumber, sonusIsdnsgServiceGroupHuntAlgorithm=sonusIsdnsgServiceGroupHuntAlgorithm, sonusIsdnsgSwitchProfileT302=sonusIsdnsgSwitchProfileT302, sonusIsdnsgBchannelTable=sonusIsdnsgBchannelTable, sonusIsdnsgServiceGroupSwitchType=sonusIsdnsgServiceGroupSwitchType, sonusIsdnsgSwitchProfileT303=sonusIsdnsgSwitchProfileT303, sonusIsdnsgSwitchProfileN200=sonusIsdnsgSwitchProfileN200, sonusIsdnsgServiceGroupCallingPartyNumberProvision=sonusIsdnsgServiceGroupCallingPartyNumberProvision, sonusIsdnBackupDChannelInServiceNotification=sonusIsdnBackupDChannelInServiceNotification, sonusIsdnsgServiceGroupListIndex=sonusIsdnsgServiceGroupListIndex, sonusIsdnsgServiceGroupIuaApplicationServer=sonusIsdnsgServiceGroupIuaApplicationServer, sonusIsdnBChannelInServiceNotification=sonusIsdnBChannelInServiceNotification, sonusIsdnsgServiceGroupCallingPartyNumberDelivery=sonusIsdnsgServiceGroupCallingPartyNumberDelivery, sonusIsdnsgServiceGroupPrimaryDchannelMode=sonusIsdnsgServiceGroupPrimaryDchannelMode, sonusIsdnSvcGrpInServiceNotification=sonusIsdnSvcGrpInServiceNotification, sonusIsdnsgSwitchProfileBchannelAvailabilitySignaling=sonusIsdnsgSwitchProfileBchannelAvailabilitySignaling, sonusIsdnsgServiceGroupDefaultDirectoryNumber=sonusIsdnsgServiceGroupDefaultDirectoryNumber, sonusIsdnsgServiceGroupStatListIndex=sonusIsdnsgServiceGroupStatListIndex, sonusIsdnsgSwitchProfileTable=sonusIsdnsgSwitchProfileTable, sonusIsdnsgBchannelStatInterfaceIdentifier=sonusIsdnsgBchannelStatInterfaceIdentifier, sonusIsdnsgServiceGroupSwitchSide=sonusIsdnsgServiceGroupSwitchSide, sonusIsdnsgSwitchProfileRowStatus=sonusIsdnsgSwitchProfileRowStatus, sonusIsdnsgProfileSwitchSide=sonusIsdnsgProfileSwitchSide, sonusIsdnsgSwitchProfileName=sonusIsdnsgSwitchProfileName, sonusIsdnsgSwitchProfileT304=sonusIsdnsgSwitchProfileT304, sonusIsdnsgProfileCallingPartyNumberProvision=sonusIsdnsgProfileCallingPartyNumberProvision, sonusIsdnsgBchannelOperation=sonusIsdnsgBchannelOperation, sonusIsdnsgServiceGroupRowStatus=sonusIsdnsgServiceGroupRowStatus, sonusIsdnServiceGroupMIBNotificationsPrefix=sonusIsdnServiceGroupMIBNotificationsPrefix, sonusIsdnsgBchannelStatUsage=sonusIsdnsgBchannelStatUsage, sonusIsdnsgServiceGroupSwitchProfileName=sonusIsdnsgServiceGroupSwitchProfileName, sonusIsdnsgProfileAdminState=sonusIsdnsgProfileAdminState, sonusIsdnsgSwitchProfileT203=sonusIsdnsgSwitchProfileT203, sonusIsdnInterfaceId=sonusIsdnInterfaceId, sonusIsdnsgServiceGroupTimeout=sonusIsdnsgServiceGroupTimeout, sonusIsdnServiceGroupMIB=sonusIsdnServiceGroupMIB, sonusIsdnsgServiceGroupAction=sonusIsdnsgServiceGroupAction, sonusIsdnsgServiceGroupBackupDchannelTimeSlot=sonusIsdnsgServiceGroupBackupDchannelTimeSlot, sonusIsdnsgServiceGroupBackupDchannelInterface=sonusIsdnsgServiceGroupBackupDchannelInterface, sonusIsdnsgProfileMode=sonusIsdnsgProfileMode, sonusIsdnsgBchannelAdminState=sonusIsdnsgBchannelAdminState, sonusIsdnsgProfileCost=sonusIsdnsgProfileCost, sonusIsdnsgServiceGroupVerboseTrace=sonusIsdnsgServiceGroupVerboseTrace, sonusIsdnsgBchannelStatRemoteMaint=sonusIsdnsgBchannelStatRemoteMaint, sonusIsdnsgServiceGroupStatNumBchAvailable=sonusIsdnsgServiceGroupStatNumBchAvailable, sonusIsdnsgBchannelStatLocalHw=sonusIsdnsgBchannelStatLocalHw, sonusIsdnsgServiceGroupT308=sonusIsdnsgServiceGroupT308, sonusIsdnsgServiceGroupPrimaryDchannelTimeSlot=sonusIsdnsgServiceGroupPrimaryDchannelTimeSlot, sonusIsdnsgBchannelDirection=sonusIsdnsgBchannelDirection, sonusIsdnsgServiceGroupNextIndex=sonusIsdnsgServiceGroupNextIndex, sonusIsdnsgServiceGroup=sonusIsdnsgServiceGroup, sonusIsdnsgServiceGroupTonePackageName=sonusIsdnsgServiceGroupTonePackageName, sonusIsdnsgProfileTrunkGroup=sonusIsdnsgProfileTrunkGroup, sonusIsdnsgServiceGroupT309=sonusIsdnsgServiceGroupT309, sonusIsdnsgServiceGroupStatBackupDchannel=sonusIsdnsgServiceGroupStatBackupDchannel, sonusIsdnsgServiceGroupT302=sonusIsdnsgServiceGroupT302, sonusIsdnsgProfileNextIndex=sonusIsdnsgProfileNextIndex, sonusIsdnsgServiceGroupT310=sonusIsdnsgServiceGroupT310, sonusIsdnsgProfileSwitchType=sonusIsdnsgProfileSwitchType, sonusIsdnsgServiceGroupBackupDchannelMode=sonusIsdnsgServiceGroupBackupDchannelMode, sonusIsdnsgSwitchProfileSwitchType=sonusIsdnsgSwitchProfileSwitchType, sonusIsdnsgProfileDefaultDirectoryNumber=sonusIsdnsgProfileDefaultDirectoryNumber, sonusIsdnsgBchannelStatServiceListIndex=sonusIsdnsgBchannelStatServiceListIndex, sonusIsdnsgServiceGroupT303=sonusIsdnsgServiceGroupT303, sonusIsdnsgSwitchProfileT319=sonusIsdnsgSwitchProfileT319, sonusIsdnsgProfileCallingPartyNumberPresentation=sonusIsdnsgProfileCallingPartyNumberPresentation, sonusIsdnsgServiceGroupMode=sonusIsdnsgServiceGroupMode, sonusIsdnsgServiceGroupStatBackupDchOutBytes=sonusIsdnsgServiceGroupStatBackupDchOutBytes, sonusIsdnsgProfileCallingPartyNumberDiscard=sonusIsdnsgProfileCallingPartyNumberDiscard, sonusIsdnsgSwitchProfileT310=sonusIsdnsgSwitchProfileT310, sonusIsdnsgServiceGroupT319=sonusIsdnsgServiceGroupT319, sonusIsdnsgServiceGroupPrimaryDchannelInterface=sonusIsdnsgServiceGroupPrimaryDchannelInterface, sonusIsdnsgSwitchProfileT313=sonusIsdnsgSwitchProfileT313, sonusIsdnsgBchannelMode=sonusIsdnsgBchannelMode, sonusIsdnsgSwitchProfileK=sonusIsdnsgSwitchProfileK, sonusIsdnsgBchannelCircuitProfileName=sonusIsdnsgBchannelCircuitProfileName, sonusIsdnsgBchannelTimeout=sonusIsdnsgBchannelTimeout, sonusIsdnsgProfileEntry=sonusIsdnsgProfileEntry, sonusIsdnsgServiceGroupTrunkGroup=sonusIsdnsgServiceGroupTrunkGroup, sonusIsdnsgInterfaceIdentifier=sonusIsdnsgInterfaceIdentifier, sonusIsdnsgSwitchProfileAdminState=sonusIsdnsgSwitchProfileAdminState, sonusIsdnsgServiceGroupStatInCalls=sonusIsdnsgServiceGroupStatInCalls, sonusIsdnsgServiceGroupCallingPartySubAddressTransfer=sonusIsdnsgServiceGroupCallingPartySubAddressTransfer, sonusIsdnsgInterfacePortName=sonusIsdnsgInterfacePortName, sonusIsdnsgServiceGroupProfileName=sonusIsdnsgServiceGroupProfileName, sonusIsdnsgServiceGroupStatTgMode=sonusIsdnsgServiceGroupStatTgMode, sonusIsdnsgProfileName=sonusIsdnsgProfileName, sonusIsdnsgInterfaceOperation=sonusIsdnsgInterfaceOperation, sonusIsdnsgServiceGroupStatInConnected=sonusIsdnsgServiceGroupStatInConnected, sonusIsdnsgServiceGroupStatPrimaryDchInPkts=sonusIsdnsgServiceGroupStatPrimaryDchInPkts, sonusIsdnsgServiceGroupAdminState=sonusIsdnsgServiceGroupAdminState, sonusIsdnsgProfileListIndex=sonusIsdnsgProfileListIndex, sonusIsdnsgProfileCallingPartySubAddressTransfer=sonusIsdnsgProfileCallingPartySubAddressTransfer, sonusIsdnsgBchannelEntry=sonusIsdnsgBchannelEntry, sonusIsdnsgSwitchProfileT305=sonusIsdnsgSwitchProfileT305, sonusIsdnPrimaryDChannelOutOfServiceNotification=sonusIsdnPrimaryDChannelOutOfServiceNotification, sonusIsdnsgServiceGroupStatOutCallsActive=sonusIsdnsgServiceGroupStatOutCallsActive, sonusIsdnsgServiceGroupStatBackupDchInBytes=sonusIsdnsgServiceGroupStatBackupDchInBytes, sonusIsdnsgProfileSwitchProfile=sonusIsdnsgProfileSwitchProfile, sonusIsdnsgSwitchProfileEntry=sonusIsdnsgSwitchProfileEntry, sonusIsdnsgServiceGroupDiscTreatmentProfileName=sonusIsdnsgServiceGroupDiscTreatmentProfileName, sonusIsdnsgInterfaceRowStatus=sonusIsdnsgInterfaceRowStatus, sonusIsdnsgServiceGroupStatNumBchConfigured=sonusIsdnsgServiceGroupStatNumBchConfigured, sonusIsdnsgServiceGroupCallingPartySubAddressDelivery=sonusIsdnsgServiceGroupCallingPartySubAddressDelivery, sonusIsdnsgServiceGroupStatPrimaryDchInBytes=sonusIsdnsgServiceGroupStatPrimaryDchInBytes, sonusIsdnsgProfileRowStatus=sonusIsdnsgProfileRowStatus, sonusIsdnsgServiceGroupStatBackupDchInPkts=sonusIsdnsgServiceGroupStatBackupDchInPkts, sonusIsdnsgServiceGroupT306=sonusIsdnsgServiceGroupT306, sonusIsdnsgBchannelStatTable=sonusIsdnsgBchannelStatTable, sonusIsdnsgServiceGroupN200=sonusIsdnsgServiceGroupN200, sonusIsdnsgInterfaceAdminState=sonusIsdnsgInterfaceAdminState, sonusIsdnsgServiceGroupTable=sonusIsdnsgServiceGroupTable, PYSNMP_MODULE_ID=sonusIsdnServiceGroupMIB, sonusIsdnBChannelOutOfServiceNotification=sonusIsdnBChannelOutOfServiceNotification, sonusIsdnsgProfile=sonusIsdnsgProfile, sonusIsdnsgServiceGroupBchannelAvailabilitySignaling=sonusIsdnsgServiceGroupBchannelAvailabilitySignaling, sonusIsdnsgServiceGroupT312=sonusIsdnsgServiceGroupT312, sonusIsdnsgServiceGroupT318=sonusIsdnsgServiceGroupT318, sonusIsdnsgProfileCallingPartyNumberDelivery=sonusIsdnsgProfileCallingPartyNumberDelivery, sonusIsdnsgBchannelStatNumber=sonusIsdnsgBchannelStatNumber, sonusIsdnsgSwitchProfileT306=sonusIsdnsgSwitchProfileT306, sonusIsdnsgSwitchProfileT308=sonusIsdnsgSwitchProfileT308, sonusIsdnsgServiceGroupEntry=sonusIsdnsgServiceGroupEntry, sonusIsdnsgServiceGroupCost=sonusIsdnsgServiceGroupCost, sonusIsdnsgBchannelStatLocalMaint=sonusIsdnsgBchannelStatLocalMaint, sonusIsdnBchannelOffsets=sonusIsdnBchannelOffsets, sonusIsdnsgBchannelAction=sonusIsdnsgBchannelAction, sonusIsdnsgServiceGroupCallingPartyNumberDiscard=sonusIsdnsgServiceGroupCallingPartyNumberDiscard, sonusIsdnsgSwitchProfile=sonusIsdnsgSwitchProfile, sonusIsdnsgServiceGroupStatOutCalls=sonusIsdnsgServiceGroupStatOutCalls, sonusIsdnsgSwitchProfileN201=sonusIsdnsgSwitchProfileN201, sonusIsdnsgServiceGroupOperation=sonusIsdnsgServiceGroupOperation, sonusIsdnServiceGroupMIBNotifications=sonusIsdnServiceGroupMIBNotifications, sonusIsdnsgSwitchProfileT200=sonusIsdnsgSwitchProfileT200, sonusIsdnsgServiceGroupT200=sonusIsdnsgServiceGroupT200, sonusIsdnsgServiceGroupStatStatus=sonusIsdnsgServiceGroupStatStatus, sonusIsdnsgServiceGroupT305=sonusIsdnsgServiceGroupT305, sonusIsdnsgServiceGroupStatPrimaryDchOutPkts=sonusIsdnsgServiceGroupStatPrimaryDchOutPkts, sonusIsdnServiceGroupMIBNotificationsObjects=sonusIsdnServiceGroupMIBNotificationsObjects, sonusIsdnsgProfileTable=sonusIsdnsgProfileTable, sonusIsdnsgInterfaceServiceListIndex=sonusIsdnsgInterfaceServiceListIndex, sonusIsdnsgServiceGroupIuaAutoDatalinkEstablish=sonusIsdnsgServiceGroupIuaAutoDatalinkEstablish, sonusIsdnsgInterfaceEntry=sonusIsdnsgInterfaceEntry, sonusIsdnsgProfileHuntAlgorithm=sonusIsdnsgProfileHuntAlgorithm, sonusIsdnsgServiceGroupLayerTrace=sonusIsdnsgServiceGroupLayerTrace)
