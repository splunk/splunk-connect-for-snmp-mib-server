#
# PySNMP MIB module HPN-ICF-LswVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-LswVLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hpnicfifVLANTrunkStatusEntry, PortList = mibBuilder.importSymbols("HPN-ICF-LswINF-MIB", "hpnicfifVLANTrunkStatusEntry", "PortList")
hpnicflswCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicflswCommon")
ifEntry, = mibBuilder.importSymbols("IF-MIB", "ifEntry")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, TimeTicks, NotificationType, Counter64, Bits, ModuleIdentity, ObjectIdentity, IpAddress, Gauge32, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "NotificationType", "Counter64", "Bits", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Gauge32", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32")
TextualConvention, TimeInterval, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeInterval", "TruthValue", "DisplayString", "RowStatus")
hpnicfLswVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2))
if mibBuilder.loadTexts: hpnicfLswVlan.setLastUpdated('200112261452Z')
if mibBuilder.loadTexts: hpnicfLswVlan.setOrganization('')
class HpnicfVlanIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

hpnicfLswVlanMngObject = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1))
if mibBuilder.loadTexts: hpnicfLswVlanMngObject.setStatus('current')
hpnicfdot1qVlanMIBTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1), )
if mibBuilder.loadTexts: hpnicfdot1qVlanMIBTable.setStatus('current')
hpnicfdot1qVlanMIBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-LswVLAN-MIB", "hpnicfdot1qVlanIndex"))
if mibBuilder.loadTexts: hpnicfdot1qVlanMIBEntry.setStatus('current')
hpnicfdot1qVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 1), HpnicfVlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanIndex.setStatus('current')
hpnicfdot1qVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanName.setStatus('current')
hpnicfdot1qVlanPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanPorts.setStatus('current')
hpnicfdot1qVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("superVlan", 1), ("common-vlan", 2), ("sub-vlan", 3), ("isolate-user-vlan", 4), ("secondary-vlan", 5), ("primaryVlan", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanType.setStatus('current')
hpnicfdot1qVlanMacFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanMacFilter.setStatus('current')
hpnicfdot1qVlanMcastUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanMcastUnknownProtos.setStatus('current')
hpnicfExistInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfExistInterface.setStatus('current')
hpnicfVlanInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIndex.setStatus('current')
hpnicfdot1qVlanMacLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanMacLearn.setStatus('current')
hpnicfdot1qVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("static", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanStatus.setStatus('current')
hpnicfdot1qVlanCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanCreationTime.setStatus('current')
hpnicfdot1qVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanPriority.setStatus('current')
hpnicfdot1qVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfdot1qVlanRowStatus.setStatus('current')
hpnicfdot1qVlanBroadcastSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanBroadcastSuppression.setStatus('current')
hpnicfdot1qVlanBcastSuppressionPPS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 148800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanBcastSuppressionPPS.setStatus('current')
hpnicfdot1qVlanMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanMulticast.setStatus('current')
hpnicfdot1qVlanTaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 17), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanTaggedPorts.setStatus('current')
hpnicfdot1qVlanUntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 18), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanUntaggedPorts.setStatus('current')
hpnicfdot1qVlanPortIndexs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 1, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanPortIndexs.setStatus('current')
hpnicfVlanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2), )
if mibBuilder.loadTexts: hpnicfVlanInterfaceTable.setStatus('current')
hpnicfVlanInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-LswVLAN-MIB", "hpnicfVlanInterfaceID"))
if mibBuilder.loadTexts: hpnicfVlanInterfaceEntry.setStatus('current')
hpnicfVlanInterfaceID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVlanInterfaceID.setStatus('current')
hpnicfdot1qVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 2), HpnicfVlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanID.setStatus('current')
hpnicfdot1qVlanIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanIpAddress.setStatus('current')
hpnicfdot1qVlanIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanIpAddressMask.setStatus('current')
hpnicfVlanInterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVlanInterfaceAdminStatus.setStatus('current')
hpnicfVlanInterfaceFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet-ii", 1), ("ethernet-snap", 2), ("ethernet-8022", 3), ("ethernet-8023", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVlanInterfaceFrameType.setStatus('current')
hpnicfInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfInterfaceRowStatus.setStatus('current')
hpnicfVlanInterfaceIpMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("assigned-ip", 1), ("dhcp-ip", 2), ("bootp-ip", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIpMethod.setStatus('current')
hpnicfVlanInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIfIndex.setStatus('current')
hpnicfifIsolateMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 4), )
if mibBuilder.loadTexts: hpnicfifIsolateMappingTable.setStatus('current')
hpnicfifIsolateMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-LswVLAN-MIB", "hpnicfifIsolatePrimaryVlanID"))
if mibBuilder.loadTexts: hpnicfifIsolateMappingEntry.setStatus('current')
hpnicfifIsolatePrimaryVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 4, 1, 1), HpnicfVlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfifIsolatePrimaryVlanID.setStatus('current')
hpnicfifIsolateSecondaryVlanlistLow = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfifIsolateSecondaryVlanlistLow.setStatus('current')
hpnicfifIsolateSecondaryVlanlistHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfifIsolateSecondaryVlanlistHigh.setStatus('current')
hpnicfVlanInterfaceAddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 5), )
if mibBuilder.loadTexts: hpnicfVlanInterfaceAddrTable.setStatus('current')
hpnicfVlanInterfaceAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-LswVLAN-MIB", "hpnicfVlanInterfaceIpIfIndex"), (0, "HPN-ICF-LswVLAN-MIB", "hpnicfVlanInterfaceIpAddr"))
if mibBuilder.loadTexts: hpnicfVlanInterfaceAddrEntry.setStatus('current')
hpnicfVlanInterfaceIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIpIfIndex.setStatus('current')
hpnicfVlanInterfaceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIpAddr.setStatus('current')
hpnicfVlanInterfaceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 5, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIpMask.setStatus('current')
hpnicfVlanInterfaceIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("sub", 2), ("cluster", 3), ("vrrp", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIpType.setStatus('current')
hpnicfVlanInterfaceIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVlanInterfaceIpRowStatus.setStatus('current')
hpnicfDot1qVlanBatchMIBTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6), )
if mibBuilder.loadTexts: hpnicfDot1qVlanBatchMIBTable.setStatus('current')
hpnicfDot1qVlanBatchMIBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-LswVLAN-MIB", "hpnicfdot1qVlanBatchOperIndex"))
if mibBuilder.loadTexts: hpnicfDot1qVlanBatchMIBEntry.setStatus('current')
hpnicfdot1qVlanBatchOperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanBatchOperIndex.setStatus('current')
hpnicfdot1qVlanBatchStartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6, 1, 2), HpnicfVlanIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanBatchStartIndex.setStatus('current')
hpnicfdot1qVlanBatchEndIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6, 1, 3), HpnicfVlanIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfdot1qVlanBatchEndIndex.setStatus('current')
hpnicfdot1qVlanBatchOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("opInprogress", 1), ("opfailure", 2), ("opsuccess", 3), ("opsuccesspartial", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfdot1qVlanBatchOperStatus.setStatus('current')
hpnicfdot1qVlanBatchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfdot1qVlanBatchRowStatus.setStatus('current')
hpnicfdot1qVlanBatchSetOperate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfdot1qVlanBatchSetOperate.setStatus('current')
hpnicfifSuperVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 7), )
if mibBuilder.loadTexts: hpnicfifSuperVlanMappingTable.setStatus('current')
hpnicfifSuperVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 7, 1), ).setIndexNames((0, "HPN-ICF-LswVLAN-MIB", "hpnicfifSuperVlanID"))
if mibBuilder.loadTexts: hpnicfifSuperVlanMappingEntry.setStatus('current')
hpnicfifSuperVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 7, 1, 1), HpnicfVlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfifSuperVlanID.setStatus('current')
hpnicfifSubVlanlistLow = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfifSubVlanlistLow.setStatus('current')
hpnicfifSubVlanlistHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfifSubVlanlistHigh.setStatus('current')
hpnicfPrivateVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 8), )
if mibBuilder.loadTexts: hpnicfPrivateVlanMappingTable.setStatus('current')
hpnicfPrivateVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 8, 1), ).setIndexNames((0, "HPN-ICF-LswVLAN-MIB", "hpnicfPrimaryVlanID"))
if mibBuilder.loadTexts: hpnicfPrivateVlanMappingEntry.setStatus('current')
hpnicfPrimaryVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 8, 1, 1), HpnicfVlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPrimaryVlanID.setStatus('current')
hpnicfSecondaryVlanlistLow = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSecondaryVlanlistLow.setStatus('current')
hpnicfSecondaryVlanlistHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSecondaryVlanlistHigh.setStatus('current')
hpnicfLswVlanProtoObject = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2))
if mibBuilder.loadTexts: hpnicfLswVlanProtoObject.setStatus('current')
hpnicfVLANMibGarpLeaveAllTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 14), TimeInterval().clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVLANMibGarpLeaveAllTime.setStatus('current')
hpnicfvLANMibSwitchCountTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15), )
if mibBuilder.loadTexts: hpnicfvLANMibSwitchCountTable.setStatus('current')
hpnicfvLANMibSwitchCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15, 1), )
hpnicfifVLANTrunkStatusEntry.registerAugmentions(("HPN-ICF-LswVLAN-MIB", "hpnicfvLANMibSwitchCountEntry"))
hpnicfvLANMibSwitchCountEntry.setIndexNames(*hpnicfifVLANTrunkStatusEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfvLANMibSwitchCountEntry.setStatus('current')
hpnicfVLANMibSwitchGMRPRXPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVLANMibSwitchGMRPRXPkt.setStatus('current')
hpnicfVLANMibSwitchGVRPRXPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVLANMibSwitchGVRPRXPkt.setStatus('current')
hpnicfVLANMibSwitchGMRPTXPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVLANMibSwitchGMRPTXPkt.setStatus('current')
hpnicfVLANMibSwitchGVRPTXPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVLANMibSwitchGVRPTXPkt.setStatus('current')
hpnicfVLANMibSwitchDiscardedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVLANMibSwitchDiscardedPkt.setStatus('current')
hpnicfVLANMibSwitchGarpStatClear = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVLANMibSwitchGarpStatClear.setStatus('current')
hpnicfvLANMibHoldTimeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 16), )
if mibBuilder.loadTexts: hpnicfvLANMibHoldTimeTable.setStatus('current')
hpnicfvLANMibHoldTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 16, 1), )
ifEntry.registerAugmentions(("HPN-ICF-LswVLAN-MIB", "hpnicfvLANMibHoldTimeEntry"))
hpnicfvLANMibHoldTimeEntry.setIndexNames(*ifEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfvLANMibHoldTimeEntry.setStatus('current')
hpnicfVLANMibHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 35, 2, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 32765)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVLANMibHoldTime.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-LswVLAN-MIB", HpnicfVlanIndex=HpnicfVlanIndex, hpnicfVLANMibSwitchGVRPTXPkt=hpnicfVLANMibSwitchGVRPTXPkt, hpnicfdot1qVlanID=hpnicfdot1qVlanID, hpnicfLswVlanMngObject=hpnicfLswVlanMngObject, hpnicfVlanInterfaceIndex=hpnicfVlanInterfaceIndex, hpnicfdot1qVlanTaggedPorts=hpnicfdot1qVlanTaggedPorts, hpnicfdot1qVlanMIBTable=hpnicfdot1qVlanMIBTable, hpnicfdot1qVlanBatchSetOperate=hpnicfdot1qVlanBatchSetOperate, hpnicfExistInterface=hpnicfExistInterface, hpnicfVlanInterfaceIpType=hpnicfVlanInterfaceIpType, hpnicfifSuperVlanMappingTable=hpnicfifSuperVlanMappingTable, hpnicfifSubVlanlistHigh=hpnicfifSubVlanlistHigh, hpnicfdot1qVlanBatchRowStatus=hpnicfdot1qVlanBatchRowStatus, hpnicfvLANMibHoldTimeEntry=hpnicfvLANMibHoldTimeEntry, hpnicfVlanInterfaceAddrTable=hpnicfVlanInterfaceAddrTable, hpnicfDot1qVlanBatchMIBEntry=hpnicfDot1qVlanBatchMIBEntry, hpnicfPrimaryVlanID=hpnicfPrimaryVlanID, hpnicfdot1qVlanPortIndexs=hpnicfdot1qVlanPortIndexs, hpnicfvLANMibHoldTimeTable=hpnicfvLANMibHoldTimeTable, hpnicfDot1qVlanBatchMIBTable=hpnicfDot1qVlanBatchMIBTable, hpnicfVlanInterfaceIfIndex=hpnicfVlanInterfaceIfIndex, hpnicfVLANMibGarpLeaveAllTime=hpnicfVLANMibGarpLeaveAllTime, hpnicfInterfaceRowStatus=hpnicfInterfaceRowStatus, hpnicfdot1qVlanBatchOperIndex=hpnicfdot1qVlanBatchOperIndex, hpnicfPrivateVlanMappingTable=hpnicfPrivateVlanMappingTable, hpnicfVlanInterfaceFrameType=hpnicfVlanInterfaceFrameType, hpnicfVlanInterfaceIpMethod=hpnicfVlanInterfaceIpMethod, hpnicfLswVlanProtoObject=hpnicfLswVlanProtoObject, hpnicfVlanInterfaceIpIfIndex=hpnicfVlanInterfaceIpIfIndex, hpnicfVLANMibSwitchGMRPTXPkt=hpnicfVLANMibSwitchGMRPTXPkt, hpnicfdot1qVlanBatchOperStatus=hpnicfdot1qVlanBatchOperStatus, hpnicfvLANMibSwitchCountEntry=hpnicfvLANMibSwitchCountEntry, hpnicfVLANMibSwitchGarpStatClear=hpnicfVLANMibSwitchGarpStatClear, hpnicfdot1qVlanMacFilter=hpnicfdot1qVlanMacFilter, hpnicfifIsolateSecondaryVlanlistLow=hpnicfifIsolateSecondaryVlanlistLow, hpnicfVlanInterfaceIpMask=hpnicfVlanInterfaceIpMask, hpnicfdot1qVlanIpAddress=hpnicfdot1qVlanIpAddress, hpnicfifSuperVlanMappingEntry=hpnicfifSuperVlanMappingEntry, hpnicfVlanInterfaceID=hpnicfVlanInterfaceID, hpnicfLswVlan=hpnicfLswVlan, hpnicfdot1qVlanMulticast=hpnicfdot1qVlanMulticast, hpnicfPrivateVlanMappingEntry=hpnicfPrivateVlanMappingEntry, hpnicfifIsolateMappingEntry=hpnicfifIsolateMappingEntry, hpnicfVlanInterfaceAddrEntry=hpnicfVlanInterfaceAddrEntry, hpnicfdot1qVlanBcastSuppressionPPS=hpnicfdot1qVlanBcastSuppressionPPS, hpnicfifIsolatePrimaryVlanID=hpnicfifIsolatePrimaryVlanID, hpnicfSecondaryVlanlistLow=hpnicfSecondaryVlanlistLow, hpnicfVlanInterfaceIpRowStatus=hpnicfVlanInterfaceIpRowStatus, hpnicfdot1qVlanPriority=hpnicfdot1qVlanPriority, PYSNMP_MODULE_ID=hpnicfLswVlan, hpnicfifSubVlanlistLow=hpnicfifSubVlanlistLow, hpnicfdot1qVlanBatchEndIndex=hpnicfdot1qVlanBatchEndIndex, hpnicfdot1qVlanMIBEntry=hpnicfdot1qVlanMIBEntry, hpnicfVLANMibHoldTime=hpnicfVLANMibHoldTime, hpnicfdot1qVlanRowStatus=hpnicfdot1qVlanRowStatus, hpnicfdot1qVlanName=hpnicfdot1qVlanName, hpnicfdot1qVlanUntaggedPorts=hpnicfdot1qVlanUntaggedPorts, hpnicfdot1qVlanIpAddressMask=hpnicfdot1qVlanIpAddressMask, hpnicfdot1qVlanBroadcastSuppression=hpnicfdot1qVlanBroadcastSuppression, hpnicfVLANMibSwitchGMRPRXPkt=hpnicfVLANMibSwitchGMRPRXPkt, hpnicfVlanInterfaceIpAddr=hpnicfVlanInterfaceIpAddr, hpnicfdot1qVlanType=hpnicfdot1qVlanType, hpnicfifSuperVlanID=hpnicfifSuperVlanID, hpnicfdot1qVlanIndex=hpnicfdot1qVlanIndex, hpnicfifIsolateSecondaryVlanlistHigh=hpnicfifIsolateSecondaryVlanlistHigh, hpnicfifIsolateMappingTable=hpnicfifIsolateMappingTable, hpnicfdot1qVlanBatchStartIndex=hpnicfdot1qVlanBatchStartIndex, hpnicfdot1qVlanPorts=hpnicfdot1qVlanPorts, hpnicfdot1qVlanMcastUnknownProtos=hpnicfdot1qVlanMcastUnknownProtos, hpnicfdot1qVlanMacLearn=hpnicfdot1qVlanMacLearn, hpnicfVLANMibSwitchGVRPRXPkt=hpnicfVLANMibSwitchGVRPRXPkt, hpnicfVlanInterfaceAdminStatus=hpnicfVlanInterfaceAdminStatus, hpnicfVlanInterfaceEntry=hpnicfVlanInterfaceEntry, hpnicfdot1qVlanCreationTime=hpnicfdot1qVlanCreationTime, hpnicfdot1qVlanStatus=hpnicfdot1qVlanStatus, hpnicfVlanInterfaceTable=hpnicfVlanInterfaceTable, hpnicfSecondaryVlanlistHigh=hpnicfSecondaryVlanlistHigh, hpnicfVLANMibSwitchDiscardedPkt=hpnicfVLANMibSwitchDiscardedPkt, hpnicfvLANMibSwitchCountTable=hpnicfvLANMibSwitchCountTable)
