#
# PySNMP MIB module KENYA-NMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/KENYA-NMS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:54:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Bits, iso, MibIdentifier, Counter32, ObjectIdentity, Unsigned32, IpAddress, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Bits", "iso", "MibIdentifier", "Counter32", "ObjectIdentity", "Unsigned32", "IpAddress", "TimeTicks", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vlbProducts, = mibBuilder.importSymbols("VOLUBILL-ROOT-MIB", "vlbProducts")
bay = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1))
bayConsolidatedStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayConsolidatedStatus.setStatus('mandatory')
bayHardwares = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 2))
bayHwCount = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayHwCount.setStatus('mandatory')
bayHwTable = MibTable((1, 3, 6, 1, 4, 1, 9905, 1, 1, 2, 2), )
if mibBuilder.loadTexts: bayHwTable.setStatus('current')
bayHwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9905, 1, 1, 2, 2, 1), ).setIndexNames((0, "KENYA-NMS-MIB", "bayHwIndex"))
if mibBuilder.loadTexts: bayHwEntry.setStatus('current')
bayHwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9905, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayHwIndex.setStatus('current')
bayHwName = MibTableColumn((1, 3, 6, 1, 4, 1, 9905, 1, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayHwName.setStatus('current')
bayHwAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9905, 1, 1, 2, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayHwAddress.setStatus('current')
bayApplications = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3))
bayProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 1))
bayProxyGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayProxyGlobalStatus.setStatus('mandatory')
proxyHTTPGroupStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyHTTPGroupStatus.setStatus('mandatory')
proxySSNGroupStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxySSNGroupStatus.setStatus('mandatory')
proxyMMSGroupStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyMMSGroupStatus.setStatus('mandatory')
proxyMAILGroupStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyMAILGroupStatus.setStatus('mandatory')
bayBilling = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 2))
bayBillingGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayBillingGlobalStatus.setStatus('mandatory')
baySwitching = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 3))
bayL7SwitchingGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayL7SwitchingGlobalStatus.setStatus('mandatory')
bayL2SwitchingGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayL2SwitchingGlobalStatus.setStatus('mandatory')
bayLms = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 4))
bayLmsGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("allUnmanaged", 0), ("green", 1), ("yellow", 2), ("orange", 3), ("red", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayLmsGlobalStatus.setStatus('mandatory')
bayScstats = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5))
bscInAgentReportRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInAgentReportRequests.setStatus('mandatory')
bscOutUpdateSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutUpdateSessionReplies.setStatus('mandatory')
bscOutReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutReplies.setStatus('mandatory')
bscCurrentServicesPendingSessions = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCurrentServicesPendingSessions.setStatus('mandatory')
bscUdrs = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscUdrs.setStatus('mandatory')
bscInReportUsageReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInReportUsageReplies.setStatus('mandatory')
bscClosedSessions = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscClosedSessions.setStatus('mandatory')
bscOldServicesPendingSessions = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOldServicesPendingSessions.setStatus('mandatory')
bscInRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInRequests.setStatus('mandatory')
bscOutAgentReportReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutAgentReportReplies.setStatus('mandatory')
bscInCloseSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInCloseSessionReplies.setStatus('mandatory')
bscInCloseSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInCloseSessionRequests.setStatus('mandatory')
bscOutCloseSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutCloseSessionReplies.setStatus('mandatory')
bscUdrFiles = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscUdrFiles.setStatus('mandatory')
bscOutListSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutListSessionReplies.setStatus('mandatory')
bscOutRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutRequests.setStatus('mandatory')
bscOutUpdateSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutUpdateSessionRequests.setStatus('mandatory')
bscInUpdateSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInUpdateSessionReplies.setStatus('mandatory')
bscInAgentReportReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInAgentReportReplies.setStatus('mandatory')
bscOutAgentReportRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutAgentReportRequests.setStatus('mandatory')
bscInUpdateSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInUpdateSessionRequests.setStatus('mandatory')
bscInReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInReplies.setStatus('mandatory')
bscOutCreateSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutCreateSessionRequests.setStatus('mandatory')
bscInReportUsageRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInReportUsageRequests.setStatus('mandatory')
bscInListSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInListSessionRequests.setStatus('mandatory')
bscOutReportUsageRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutReportUsageRequests.setStatus('mandatory')
bscInListSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInListSessionReplies.setStatus('mandatory')
bscInCreateSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInCreateSessionRequests.setStatus('mandatory')
bscOutCloseSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutCloseSessionRequests.setStatus('mandatory')
bscOutListSessionRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutListSessionRequests.setStatus('mandatory')
bscInCreateSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInCreateSessionReplies.setStatus('mandatory')
bscCreatedSessions = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCreatedSessions.setStatus('mandatory')
bscOutReportUsageReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutReportUsageReplies.setStatus('mandatory')
bscOutCreateSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutCreateSessionReplies.setStatus('mandatory')
bscSessionsPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscSessionsPerSecond.setStatus('mandatory')
bscRejectedSessions = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscRejectedSessions.setStatus('mandatory')
bscInContinueSessionRequest = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInContinueSessionRequest.setStatus('mandatory')
bscOutContinueSessionRequest = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutContinueSessionRequest.setStatus('mandatory')
bscInContinueSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscInContinueSessionReplies.setStatus('mandatory')
bscOutContinueSessionReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscOutContinueSessionReplies.setStatus('mandatory')
bscAuthRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscAuthRequests.setStatus('mandatory')
bscAuthNonRepliedRequestsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscAuthNonRepliedRequestsPercent.setStatus('mandatory')
bscAuthReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscAuthReplies.setStatus('mandatory')
bscAcctReplies = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscAcctReplies.setStatus('mandatory')
bscAcctRequests = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscAcctRequests.setStatus('mandatory')
bscAcctRepliedRequestsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 3, 5, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscAcctRepliedRequestsPercent.setStatus('mandatory')
bayTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9905, 1, 1, 4))
bayExternalTrapTarget = MibScalar((1, 3, 6, 1, 4, 1, 9905, 1, 1, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayExternalTrapTarget.setStatus('mandatory')
mibBuilder.exportSymbols("KENYA-NMS-MIB", bscOutRequests=bscOutRequests, bscOutAgentReportRequests=bscOutAgentReportRequests, bayHwName=bayHwName, bscOutUpdateSessionRequests=bscOutUpdateSessionRequests, bayProxy=bayProxy, bscRejectedSessions=bscRejectedSessions, bscOutCloseSessionRequests=bscOutCloseSessionRequests, bscInCreateSessionRequests=bscInCreateSessionRequests, bayProxyGlobalStatus=bayProxyGlobalStatus, bscInReportUsageReplies=bscInReportUsageReplies, bayHwEntry=bayHwEntry, bscInAgentReportRequests=bscInAgentReportRequests, bscInContinueSessionRequest=bscInContinueSessionRequest, bscUdrFiles=bscUdrFiles, bscOutListSessionRequests=bscOutListSessionRequests, bscOutCloseSessionReplies=bscOutCloseSessionReplies, bscCreatedSessions=bscCreatedSessions, bayHwAddress=bayHwAddress, bscInUpdateSessionRequests=bscInUpdateSessionRequests, bscOutReportUsageRequests=bscOutReportUsageRequests, bscAcctReplies=bscAcctReplies, bayScstats=bayScstats, bscInCloseSessionRequests=bscInCloseSessionRequests, bayLmsGlobalStatus=bayLmsGlobalStatus, bayHardwares=bayHardwares, bay=bay, bayL7SwitchingGlobalStatus=bayL7SwitchingGlobalStatus, bayBilling=bayBilling, bscSessionsPerSecond=bscSessionsPerSecond, bscOutCreateSessionRequests=bscOutCreateSessionRequests, bayHwIndex=bayHwIndex, bscInRequests=bscInRequests, bayHwTable=bayHwTable, bscOutContinueSessionReplies=bscOutContinueSessionReplies, bscOldServicesPendingSessions=bscOldServicesPendingSessions, bscOutContinueSessionRequest=bscOutContinueSessionRequest, baySwitching=baySwitching, bayTraps=bayTraps, bscCurrentServicesPendingSessions=bscCurrentServicesPendingSessions, bayLms=bayLms, bscOutListSessionReplies=bscOutListSessionReplies, bscInListSessionRequests=bscInListSessionRequests, bscInContinueSessionReplies=bscInContinueSessionReplies, bscOutAgentReportReplies=bscOutAgentReportReplies, bscInReportUsageRequests=bscInReportUsageRequests, bscOutReportUsageReplies=bscOutReportUsageReplies, bscOutUpdateSessionReplies=bscOutUpdateSessionReplies, bscOutCreateSessionReplies=bscOutCreateSessionReplies, bscAuthNonRepliedRequestsPercent=bscAuthNonRepliedRequestsPercent, bscAcctRepliedRequestsPercent=bscAcctRepliedRequestsPercent, proxyMMSGroupStatus=proxyMMSGroupStatus, bayBillingGlobalStatus=bayBillingGlobalStatus, bayHwCount=bayHwCount, bscUdrs=bscUdrs, proxySSNGroupStatus=proxySSNGroupStatus, bscInUpdateSessionReplies=bscInUpdateSessionReplies, bscInAgentReportReplies=bscInAgentReportReplies, bscInListSessionReplies=bscInListSessionReplies, bscInCloseSessionReplies=bscInCloseSessionReplies, bscAuthReplies=bscAuthReplies, proxyMAILGroupStatus=proxyMAILGroupStatus, bscAcctRequests=bscAcctRequests, bayExternalTrapTarget=bayExternalTrapTarget, bayConsolidatedStatus=bayConsolidatedStatus, bscClosedSessions=bscClosedSessions, bayL2SwitchingGlobalStatus=bayL2SwitchingGlobalStatus, bscInReplies=bscInReplies, bscOutReplies=bscOutReplies, bscInCreateSessionReplies=bscInCreateSessionReplies, bscAuthRequests=bscAuthRequests, proxyHTTPGroupStatus=proxyHTTPGroupStatus, bayApplications=bayApplications)
