#
# PySNMP MIB module RBTWS-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBTWS-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:45:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
RbtwsRadioMode, RbtwsApFailDetail, RbtwsRadioNum, RbtwsApWasOperational, RbtwsRadioMimoState, RbtwsAccessType, RbtwsChannelChangeType, RbtwsApNum, RbtwsApSerialNum, RbtwsApPortOrDapNum, RbtwsRadioConfigState, RbtwsRadioChannelWidth, RbtwsApAttachType, RbtwsApServiceAvailability, RbtwsRadioType, RbtwsRadioPowerChangeType, RbtwsPowerLevel, RbtwsCryptoType, RbtwsApConnectSecurityType, RbtwsApFingerprint, RbtwsApTransition = mibBuilder.importSymbols("RBTWS-AP-TC", "RbtwsRadioMode", "RbtwsApFailDetail", "RbtwsRadioNum", "RbtwsApWasOperational", "RbtwsRadioMimoState", "RbtwsAccessType", "RbtwsChannelChangeType", "RbtwsApNum", "RbtwsApSerialNum", "RbtwsApPortOrDapNum", "RbtwsRadioConfigState", "RbtwsRadioChannelWidth", "RbtwsApAttachType", "RbtwsApServiceAvailability", "RbtwsRadioType", "RbtwsRadioPowerChangeType", "RbtwsPowerLevel", "RbtwsCryptoType", "RbtwsApConnectSecurityType", "RbtwsApFingerprint", "RbtwsApTransition")
RbtwsClientDot1xState, RbtwsUserAccessType, RbtwsClientAuthenProtocolType, RbtwsClientAccessMode, RbtwsClientSessionState = mibBuilder.importSymbols("RBTWS-CLIENT-SESSION-TC", "RbtwsClientDot1xState", "RbtwsUserAccessType", "RbtwsClientAuthenProtocolType", "RbtwsClientAccessMode", "RbtwsClientSessionState")
RbtwsRFDetectClassificationReason, = mibBuilder.importSymbols("RBTWS-RF-DETECT-TC", "RbtwsRFDetectClassificationReason")
rbtwsTemporary, rbtwsTraps, rbtwsMibs = mibBuilder.importSymbols("RBTWS-ROOT-MIB", "rbtwsTemporary", "rbtwsTraps", "rbtwsMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, Bits, Counter64, ObjectIdentity, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, MibIdentifier, IpAddress, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "Bits", "Counter64", "ObjectIdentity", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "MibIdentifier", "IpAddress", "iso", "Integer32")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
rbtwsTrapMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 4, 1))
rbtwsTrapMib.setRevisions(('2008-05-15 02:15', '2008-05-07 02:12', '2008-04-22 02:02', '2008-04-10 02:01', '2008-04-08 01:58', '2008-02-18 01:57', '2007-12-03 01:53', '2007-11-15 01:52', '2007-11-01 01:45', '2007-10-01 01:41', '2007-08-31 01:40', '2007-08-24 01:22', '2007-07-06 01:10', '2007-06-05 01:07', '2007-05-17 01:06', '2007-05-04 01:03', '2007-04-19 01:00', '2007-03-27 00:54', '2007-02-15 00:53', '2007-01-09 00:52', '2007-01-09 00:51', '2007-01-09 00:50', '2006-09-28 00:45', '2006-08-08 00:42', '2006-07-31 00:40', '2006-07-28 00:32', '2006-07-23 00:29', '2006-07-12 00:28', '2006-07-07 00:26', '2006-07-07 00:25', '2006-07-06 00:23', '2006-04-19 00:22', '2006-04-19 00:21', '2005-01-01 00:00',))
if mibBuilder.loadTexts: rbtwsTrapMib.setLastUpdated('200805151711Z')
if mibBuilder.loadTexts: rbtwsTrapMib.setOrganization('Enterasys Networks')
rbtwsTrapsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0))
class RbtwsAssociationFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("other", 1), ("load-balance", 2), ("quiet-period", 3), ("dot1x", 4), ("no-prev-assoc", 5), ("glare", 6), ("cipher-rejected", 7), ("cipher-mismatch", 8), ("wep-not-configured", 9), ("bad-assoc-request", 10), ("out-of-memory", 11), ("tkip-cm-active", 12), ("roam-in-progress", 13))

class RbtwsAuthenticationFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("other", 1), ("user-glob-mismatch", 2), ("user-does-not-exist", 3), ("invalid-password", 4), ("server-timeout", 5), ("signature-failed", 6), ("local-certificate-error", 7), ("all-servers-down", 8), ("authentication-type-mismatch", 9), ("server-rejected", 10), ("fallthru-auth-misconfig", 11), ("no-lastresort-auth", 12), ("exceeded-max-attempts", 13), ("password-expired", 14))

class RbtwsAuthorizationFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("other", 1), ("user-param", 2), ("location-policy", 3), ("vlan-tunnel-failure", 4), ("ssid-mismatch", 5), ("acl-mismatch", 6), ("timeofday-mismatch", 7), ("crypto-type-mismatch", 8), ("mobility-profile-mismatch", 9), ("start-date-mismatch", 10), ("end-date-mismatch", 11), ("svr-type-mismatch", 12), ("ssid-defaults", 13), ("qos-profile-mismatch", 14), ("simultaneous-logins", 15))

class RbtwsDot1xFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("other", 1), ("quiet-period", 2), ("administrative-kill", 3), ("bad-rsnie", 4), ("timeout", 5), ("max-sessions-exceeded", 6), ("fourway-hs-failure", 7), ("user-glob-mismatch", 8), ("bonded-auth-failure", 9), ("reauth-disabled", 10), ("gkhs-failure", 11), ("force-unauth-configured", 12), ("cert-not-installed", 13))

class RbtwsRFDetectDoSType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))
    namedValues = NamedValues(("probe-flood", 1), ("auth-flood", 2), ("null-data-flood", 3), ("mgmt-6-flood", 4), ("mgmt-7-flood", 5), ("mgmt-d-flood", 6), ("mgmt-e-flood", 7), ("mgmt-f-flood", 8), ("fakeap-ssid", 9), ("fakeap-bssid", 10), ("bcast-deauth", 11), ("null-probe-resp", 12), ("disassoc-spoof", 13), ("deauth-spoof", 14), ("decrypt-err", 15), ("weak-wep-iv", 16), ("wireless-bridge", 17), ("netstumbler", 18), ("wellenreiter", 19), ("adhoc-client-frame", 20), ("associate-pkt-flood", 21), ("re-associate-pkt-flood", 22), ("de-associate-pkt-flood", 23), ("bssid-spoof", 24))

class RbtwsClientIpAddrChangeReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("client-connected", 1), ("other", 2), ("dhcp-to-static", 3))

class RbtwsBlacklistingCause(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("bl-configured", 1), ("bl-associate-pkt-flood", 2), ("bl-re-associate-pkt-flood", 3), ("bl-de-associate-pkt-flood", 4))

class RbtwsUserAttributeList(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 2048)

class RbtwsSessionDisconnectType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("admin-disconnect", 2), ("dyn-auth-disconnect", 3))

class RbtwsConfigSaveInitiatorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("cli-console", 2), ("cli-remote", 3), ("https", 4), ("snmp-set", 5))

class RbtwsMichaelMICFailureCause(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("detected-by-ap", 1), ("detected-by-client", 2))

class RbtwsClientAuthorizationReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("new-client", 2), ("re-auth", 3), ("roam", 4))

class RbtwsApMgrChangeReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("failover", 2), ("load-balancing", 3))

class RbtwsClientClearedReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("normal", 2), ("backup-failure", 3))

class RbtwsMobilityDomainResiliencyStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("resilient", 2), ("degraded", 3))

class RbtwsClusterFailureReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("validation-error", 2))

rbtwsDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 1), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsDeviceId.setStatus('current')
rbtwsMobilityDomainIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsMobilityDomainIp.setStatus('current')
rbtwsAPMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsAPMACAddress.setStatus('current')
rbtwsClientMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientMACAddress.setStatus('current')
rbtwsRFDetectXmtrMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 5), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRFDetectXmtrMacAddr.setStatus('current')
rbtwsPortNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 22))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsPortNum.setStatus('current')
rbtwsAPRadioNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 7), RbtwsRadioNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsAPRadioNum.setStatus('current')
rbtwsRadioRssi = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioRssi.setStatus('obsolete')
rbtwsRadioBSSID = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioBSSID.setStatus('current')
rbtwsUserName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsUserName.setStatus('current')
rbtwsClientAuthServerIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 11), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAuthServerIp.setStatus('current')
rbtwsClientSessionState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 12), RbtwsClientSessionState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientSessionState.setStatus('current')
rbtwsDAPNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsDAPNum.setStatus('current')
rbtwsClientIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 14), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientIp.setStatus('current')
rbtwsClientSessionId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientSessionId.setStatus('current')
rbtwsClientAuthenProtocolType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 16), RbtwsClientAuthenProtocolType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAuthenProtocolType.setStatus('current')
rbtwsClientVLANName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientVLANName.setStatus('current')
rbtwsClientSessionStartTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 18), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientSessionStartTime.setStatus('obsolete')
rbtwsClientFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientFailureCause.setStatus('current')
rbtwsClientRoamedFromPortNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientRoamedFromPortNum.setStatus('current')
rbtwsClientRoamedFromRadioNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 21), RbtwsRadioNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientRoamedFromRadioNum.setStatus('current')
rbtwsClientRoamedFromDAPNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientRoamedFromDAPNum.setStatus('current')
rbtwsUserParams = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsUserParams.setStatus('current')
rbtwsClientLocationPolicyIndex = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientLocationPolicyIndex.setStatus('current')
rbtwsClientAssociationFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 25), RbtwsAssociationFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAssociationFailureCause.setStatus('current')
rbtwsClientAuthenticationFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 26), RbtwsAuthenticationFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAuthenticationFailureCause.setStatus('current')
rbtwsClientAuthorizationFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 27), RbtwsAuthorizationFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAuthorizationFailureCause.setStatus('current')
rbtwsClientFailureCauseDescription = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientFailureCauseDescription.setStatus('current')
rbtwsClientRoamedFromWsIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 29), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientRoamedFromWsIp.setStatus('current')
rbtwsClientRoamedFromAccessType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 30), RbtwsAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientRoamedFromAccessType.setStatus('current')
rbtwsClientAccessType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 31), RbtwsAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAccessType.setStatus('current')
rbtwsRadioMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 32), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioMACAddress.setStatus('current')
rbtwsRadioPowerChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 33), RbtwsRadioPowerChangeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioPowerChangeReason.setStatus('current')
rbtwsNewChannelNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsNewChannelNum.setStatus('current')
rbtwsOldChannelNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsOldChannelNum.setStatus('current')
rbtwsChannelChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 36), RbtwsChannelChangeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsChannelChangeReason.setStatus('current')
rbtwsRFDetectListenerListInfo = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 571))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRFDetectListenerListInfo.setStatus('current')
rbtwsRadioSSID = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioSSID.setStatus('current')
rbtwsNewPowerLevel = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 39), RbtwsPowerLevel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsNewPowerLevel.setStatus('current')
rbtwsOldPowerLevel = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 40), RbtwsPowerLevel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsOldPowerLevel.setStatus('current')
rbtwsRadioPowerChangeDescription = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioPowerChangeDescription.setStatus('current')
rbtwsCounterMeasurePerformerListInfo = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsCounterMeasurePerformerListInfo.setStatus('obsolete')
rbtwsClientDot1xState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 43), RbtwsClientDot1xState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientDot1xState.setStatus('current')
rbtwsClientDot1xFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 44), RbtwsDot1xFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientDot1xFailureCause.setStatus('current')
rbtwsAPAccessType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 45), RbtwsAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsAPAccessType.setStatus('obsolete')
rbtwsUserAccessType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 46), RbtwsUserAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsUserAccessType.setStatus('current')
rbtwsClientSessionElapsedTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 47), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientSessionElapsedTime.setStatus('obsolete')
rbtwsLocalId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsLocalId.setStatus('current')
rbtwsRFDetectDoSType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 49), RbtwsRFDetectDoSType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRFDetectDoSType.setStatus('current')
rbtwsSourceWsIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 50), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsSourceWsIp.setStatus('current')
rbtwsClientVLANid = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientVLANid.setStatus('current')
rbtwsClientVLANtag = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientVLANtag.setStatus('current')
rbtwsDeviceModel = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 53), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsDeviceModel.setStatus('current')
rbtwsDeviceSerNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 54), RbtwsApSerialNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsDeviceSerNum.setStatus('current')
rbtwsRsaPubKeyFingerPrint = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 55), RbtwsApFingerprint()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRsaPubKeyFingerPrint.setStatus('current')
rbtwsDAPconnectWarningType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-configured-fingerprint-connect", 1), ("secure-handshake-failure", 2), ("not-configured-fingerprint-required", 3), ("fingerprint-mismatch", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsDAPconnectWarningType.setStatus('current')
rbtwsClientMACAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 57), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientMACAddress2.setStatus('current')
rbtwsApAttachType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 58), RbtwsApAttachType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApAttachType.setStatus('current')
rbtwsApPortOrDapNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 59), RbtwsApPortOrDapNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApPortOrDapNum.setStatus('obsolete')
rbtwsApName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 60), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApName.setStatus('current')
rbtwsApTransition = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 61), RbtwsApTransition()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApTransition.setStatus('current')
rbtwsApFailDetail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 62), RbtwsApFailDetail()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApFailDetail.setStatus('current')
rbtwsRadioType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 63), RbtwsRadioType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioType.setStatus('current')
rbtwsRadioConfigState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 64), RbtwsRadioConfigState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioConfigState.setStatus('current')
rbtwsApConnectSecurityType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 65), RbtwsApConnectSecurityType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApConnectSecurityType.setStatus('current')
rbtwsApServiceAvailability = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 66), RbtwsApServiceAvailability()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApServiceAvailability.setStatus('current')
rbtwsApWasOperational = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 67), RbtwsApWasOperational()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApWasOperational.setStatus('current')
rbtwsClientTimeSinceLastRoam = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 68), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientTimeSinceLastRoam.setStatus('current')
rbtwsClientIpAddrChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 69), RbtwsClientIpAddrChangeReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientIpAddrChangeReason.setStatus('current')
rbtwsRFDetectRogueAPMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 70), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRFDetectRogueAPMacAddr.setStatus('current')
rbtwsBlacklistingRemainingTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 71), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsBlacklistingRemainingTime.setStatus('current')
rbtwsBlacklistingCause = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 72), RbtwsBlacklistingCause()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsBlacklistingCause.setStatus('current')
rbtwsNumLicensedActiveAPs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 73), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsNumLicensedActiveAPs.setStatus('current')
rbtwsClientDynAuthorClientIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 74), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientDynAuthorClientIp.setStatus('current')
rbtwsChangedUserParamOldValues = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 75), RbtwsUserAttributeList()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsChangedUserParamOldValues.setStatus('current')
rbtwsChangedUserParamNewValues = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 76), RbtwsUserAttributeList()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsChangedUserParamNewValues.setStatus('current')
rbtwsClientDisconnectSource = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 77), RbtwsSessionDisconnectType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientDisconnectSource.setStatus('current')
rbtwsClientDisconnectDescription = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientDisconnectDescription.setStatus('current')
rbtwsMobilityDomainSecondarySeedIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 79), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsMobilityDomainSecondarySeedIp.setStatus('current')
rbtwsMobilityDomainPrimarySeedIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 80), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsMobilityDomainPrimarySeedIp.setStatus('current')
rbtwsRFDetectClassificationReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 81), RbtwsRFDetectClassificationReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRFDetectClassificationReason.setStatus('current')
rbtwsConfigSaveFileName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 82), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsConfigSaveFileName.setStatus('current')
rbtwsConfigSaveInitiatorType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 83), RbtwsConfigSaveInitiatorType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsConfigSaveInitiatorType.setStatus('current')
rbtwsConfigSaveInitiatorIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 84), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsConfigSaveInitiatorIp.setStatus('current')
rbtwsConfigSaveInitiatorDetails = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 85), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsConfigSaveInitiatorDetails.setStatus('current')
rbtwsConfigSaveGeneration = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 86), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsConfigSaveGeneration.setStatus('current')
rbtwsApNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 87), RbtwsApNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApNum.setStatus('current')
rbtwsRadioMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 88), RbtwsRadioMode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioMode.setStatus('current')
rbtwsMichaelMICFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 89), RbtwsMichaelMICFailureCause()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsMichaelMICFailureCause.setStatus('current')
rbtwsClientAccessMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 90), RbtwsClientAccessMode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAccessMode.setStatus('current')
rbtwsClientAuthorizationReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 91), RbtwsClientAuthorizationReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientAuthorizationReason.setStatus('current')
rbtwsPhysPortNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 92), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsPhysPortNum.setStatus('current')
rbtwsApMgrOldIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 93), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApMgrOldIp.setStatus('current')
rbtwsApMgrNewIp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 94), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApMgrNewIp.setStatus('current')
rbtwsApMgrChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 95), RbtwsApMgrChangeReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsApMgrChangeReason.setStatus('current')
rbtwsClientClearedReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 96), RbtwsClientClearedReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientClearedReason.setStatus('current')
rbtwsMobilityDomainResiliencyStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 97), RbtwsMobilityDomainResiliencyStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsMobilityDomainResiliencyStatus.setStatus('current')
rbtwsClientSessionElapsedSeconds = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 98), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientSessionElapsedSeconds.setStatus('current')
rbtwsRadioChannelWidth = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 99), RbtwsRadioChannelWidth()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioChannelWidth.setStatus('current')
rbtwsRadioMimoState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 100), RbtwsRadioMimoState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRadioMimoState.setStatus('current')
rbtwsClientRadioType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 101), RbtwsRadioType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClientRadioType.setStatus('current')
rbtwsRFDetectXmtrRadioType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 102), RbtwsRadioType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRFDetectXmtrRadioType.setStatus('current')
rbtwsRFDetectXmtrCryptoType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 103), RbtwsCryptoType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsRFDetectXmtrCryptoType.setStatus('current')
rbtwsClusterFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 104), RbtwsClusterFailureReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClusterFailureReason.setStatus('current')
rbtwsClusterFailureDescription = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 2, 105), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbtwsClusterFailureDescription.setStatus('current')
rbtwsDeviceFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 1)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceId"))
if mibBuilder.loadTexts: rbtwsDeviceFailTrap.setStatus('current')
rbtwsDeviceOkayTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 2)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceId"))
if mibBuilder.loadTexts: rbtwsDeviceOkayTrap.setStatus('current')
rbtwsPoEFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 3)).setObjects(("RBTWS-TRAP-MIB", "rbtwsPortNum"))
if mibBuilder.loadTexts: rbtwsPoEFailTrap.setStatus('current')
rbtwsApTimeoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 4)).setObjects(("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsAPAccessType"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"))
if mibBuilder.loadTexts: rbtwsApTimeoutTrap.setStatus('obsolete')
rbtwsAPBootTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 5)).setObjects(("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsAPAccessType"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"))
if mibBuilder.loadTexts: rbtwsAPBootTrap.setStatus('obsolete')
rbtwsMobilityDomainJoinTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 6)).setObjects(("RBTWS-TRAP-MIB", "rbtwsMobilityDomainIp"))
if mibBuilder.loadTexts: rbtwsMobilityDomainJoinTrap.setStatus('current')
rbtwsMobilityDomainTimeoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 7)).setObjects(("RBTWS-TRAP-MIB", "rbtwsMobilityDomainIp"))
if mibBuilder.loadTexts: rbtwsMobilityDomainTimeoutTrap.setStatus('current')
rbtwsMpMichaelMICFailure = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 8)).setObjects(("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"))
if mibBuilder.loadTexts: rbtwsMpMichaelMICFailure.setStatus('obsolete')
rbtwsRFDetectRogueAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 9)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectRogueAPTrap.setStatus('obsolete')
rbtwsRFDetectAdhocUserTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 10)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectAdhocUserTrap.setStatus('current')
rbtwsRFDetectRogueDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 11)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: rbtwsRFDetectRogueDisappearTrap.setStatus('obsolete')
rbtwsClientAuthenticationFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 12)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenticationFailureCause"), ("RBTWS-TRAP-MIB", "rbtwsClientFailureCauseDescription"))
if mibBuilder.loadTexts: rbtwsClientAuthenticationFailureTrap.setStatus('current')
rbtwsClientAuthorizationFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 13)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientLocationPolicyIndex"), ("RBTWS-TRAP-MIB", "rbtwsUserParams"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthorizationFailureCause"), ("RBTWS-TRAP-MIB", "rbtwsClientFailureCauseDescription"))
if mibBuilder.loadTexts: rbtwsClientAuthorizationFailureTrap.setStatus('current')
rbtwsClientAssociationFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 14)).setObjects(("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientAssociationFailureCause"), ("RBTWS-TRAP-MIB", "rbtwsClientFailureCauseDescription"))
if mibBuilder.loadTexts: rbtwsClientAssociationFailureTrap.setStatus('current')
rbtwsClientAuthorizationSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 15)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionState"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionStartTime"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsRadioRssi"))
if mibBuilder.loadTexts: rbtwsClientAuthorizationSuccessTrap.setStatus('obsolete')
rbtwsClientDeAssociationTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 16)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANName"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"))
if mibBuilder.loadTexts: rbtwsClientDeAssociationTrap.setStatus('current')
rbtwsClientRoamingTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 17)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientRoamedFromAccessType"), ("RBTWS-TRAP-MIB", "rbtwsClientRoamedFromPortNum"), ("RBTWS-TRAP-MIB", "rbtwsClientRoamedFromRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsClientRoamedFromDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsClientRoamedFromWsIp"), ("RBTWS-TRAP-MIB", "rbtwsClientTimeSinceLastRoam"))
if mibBuilder.loadTexts: rbtwsClientRoamingTrap.setStatus('current')
rbtwsAutoTuneRadioPowerChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 18)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsNewPowerLevel"), ("RBTWS-TRAP-MIB", "rbtwsOldPowerLevel"), ("RBTWS-TRAP-MIB", "rbtwsRadioPowerChangeReason"), ("RBTWS-TRAP-MIB", "rbtwsRadioPowerChangeDescription"))
if mibBuilder.loadTexts: rbtwsAutoTuneRadioPowerChangeTrap.setStatus('current')
rbtwsAutoTuneRadioChannelChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 19)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsNewChannelNum"), ("RBTWS-TRAP-MIB", "rbtwsOldChannelNum"), ("RBTWS-TRAP-MIB", "rbtwsChannelChangeReason"))
if mibBuilder.loadTexts: rbtwsAutoTuneRadioChannelChangeTrap.setStatus('current')
rbtwsCounterMeasureStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 20)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"))
if mibBuilder.loadTexts: rbtwsCounterMeasureStartTrap.setStatus('current')
rbtwsCounterMeasureStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 21)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"))
if mibBuilder.loadTexts: rbtwsCounterMeasureStopTrap.setStatus('current')
rbtwsClientDot1xFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 22)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientDot1xState"), ("RBTWS-TRAP-MIB", "rbtwsClientDot1xFailureCause"), ("RBTWS-TRAP-MIB", "rbtwsClientFailureCauseDescription"))
if mibBuilder.loadTexts: rbtwsClientDot1xFailureTrap.setStatus('current')
rbtwsClientClearedTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 23)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionElapsedTime"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"))
if mibBuilder.loadTexts: rbtwsClientClearedTrap.setStatus('obsolete')
rbtwsClientAuthorizationSuccessTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 24)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionState"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionStartTime"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsUserAccessType"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"))
if mibBuilder.loadTexts: rbtwsClientAuthorizationSuccessTrap2.setStatus('obsolete')
rbtwsRFDetectSpoofedMacAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 25)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectSpoofedMacAPTrap.setStatus('obsolete')
rbtwsRFDetectSpoofedSsidAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 26)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectSpoofedSsidAPTrap.setStatus('obsolete')
rbtwsRFDetectDoSTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 27)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectDoSType"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectDoSTrap.setStatus('current')
rbtwsRFDetectClientViaRogueWiredAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 28)).setObjects(("RBTWS-TRAP-MIB", "rbtwsSourceWsIp"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANid"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANtag"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectClientViaRogueWiredAPTrap.setStatus('obsolete')
rbtwsRFDetectInterferingRogueAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 29)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectInterferingRogueAPTrap.setStatus('obsolete')
rbtwsRFDetectInterferingRogueDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 30)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: rbtwsRFDetectInterferingRogueDisappearTrap.setStatus('obsolete')
rbtwsRFDetectUnAuthorizedSsidTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 31)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectUnAuthorizedSsidTrap.setStatus('obsolete')
rbtwsRFDetectUnAuthorizedOuiTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 32)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectUnAuthorizedOuiTrap.setStatus('obsolete')
rbtwsRFDetectUnAuthorizedAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 33)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"))
if mibBuilder.loadTexts: rbtwsRFDetectUnAuthorizedAPTrap.setStatus('obsolete')
rbtwsDAPConnectWarningTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 34)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceModel"), ("RBTWS-TRAP-MIB", "rbtwsDeviceSerNum"), ("RBTWS-TRAP-MIB", "rbtwsRsaPubKeyFingerPrint"), ("RBTWS-TRAP-MIB", "rbtwsDAPconnectWarningType"))
if mibBuilder.loadTexts: rbtwsDAPConnectWarningTrap.setStatus('obsolete')
rbtwsRFDetectDoSPortTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 35)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectDoSType"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"))
if mibBuilder.loadTexts: rbtwsRFDetectDoSPortTrap.setStatus('current')
rbtwsMpMichaelMICFailure2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 36)).setObjects(("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress2"))
if mibBuilder.loadTexts: rbtwsMpMichaelMICFailure2.setStatus('obsolete')
rbtwsApNonOperStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 37)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceSerNum"), ("RBTWS-TRAP-MIB", "rbtwsAPMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsApAttachType"), ("RBTWS-TRAP-MIB", "rbtwsApPortOrDapNum"), ("RBTWS-TRAP-MIB", "rbtwsApName"), ("RBTWS-TRAP-MIB", "rbtwsApTransition"), ("RBTWS-TRAP-MIB", "rbtwsApFailDetail"), ("RBTWS-TRAP-MIB", "rbtwsApWasOperational"))
if mibBuilder.loadTexts: rbtwsApNonOperStatusTrap.setStatus('obsolete')
rbtwsApOperRadioStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 38)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceSerNum"), ("RBTWS-TRAP-MIB", "rbtwsApAttachType"), ("RBTWS-TRAP-MIB", "rbtwsApPortOrDapNum"), ("RBTWS-TRAP-MIB", "rbtwsApName"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsRadioType"), ("RBTWS-TRAP-MIB", "rbtwsRadioConfigState"), ("RBTWS-TRAP-MIB", "rbtwsApConnectSecurityType"), ("RBTWS-TRAP-MIB", "rbtwsApServiceAvailability"))
if mibBuilder.loadTexts: rbtwsApOperRadioStatusTrap.setStatus('obsolete')
rbtwsClientIpAddrChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 39)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionState"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsUserAccessType"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"), ("RBTWS-TRAP-MIB", "rbtwsClientIpAddrChangeReason"))
if mibBuilder.loadTexts: rbtwsClientIpAddrChangeTrap.setStatus('current')
rbtwsClientAssociationSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 40)).setObjects(("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"))
if mibBuilder.loadTexts: rbtwsClientAssociationSuccessTrap.setStatus('current')
rbtwsClientAuthenticationSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 41)).setObjects(("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"))
if mibBuilder.loadTexts: rbtwsClientAuthenticationSuccessTrap.setStatus('current')
rbtwsClientDeAuthenticationTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 42)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANName"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"))
if mibBuilder.loadTexts: rbtwsClientDeAuthenticationTrap.setStatus('current')
rbtwsRFDetectBlacklistedTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 43)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsBlacklistingRemainingTime"), ("RBTWS-TRAP-MIB", "rbtwsBlacklistingCause"))
if mibBuilder.loadTexts: rbtwsRFDetectBlacklistedTrap.setStatus('current')
rbtwsRFDetectClientViaRogueWiredAPTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 44)).setObjects(("RBTWS-TRAP-MIB", "rbtwsSourceWsIp"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANid"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANtag"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectRogueAPMacAddr"))
if mibBuilder.loadTexts: rbtwsRFDetectClientViaRogueWiredAPTrap2.setStatus('obsolete')
rbtwsRFDetectAdhocUserDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 45)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: rbtwsRFDetectAdhocUserDisappearTrap.setStatus('current')
rbtwsApRejectLicenseExceededTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 46)).setObjects(("RBTWS-TRAP-MIB", "rbtwsNumLicensedActiveAPs"))
if mibBuilder.loadTexts: rbtwsApRejectLicenseExceededTrap.setStatus('current')
rbtwsClientDynAuthorChangeSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 47)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionState"), ("RBTWS-TRAP-MIB", "rbtwsClientDynAuthorClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsUserAccessType"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"), ("RBTWS-TRAP-MIB", "rbtwsChangedUserParamOldValues"), ("RBTWS-TRAP-MIB", "rbtwsChangedUserParamNewValues"))
if mibBuilder.loadTexts: rbtwsClientDynAuthorChangeSuccessTrap.setStatus('current')
rbtwsClientDynAuthorChangeFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 48)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientDynAuthorClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsUserParams"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthorizationFailureCause"), ("RBTWS-TRAP-MIB", "rbtwsClientFailureCauseDescription"))
if mibBuilder.loadTexts: rbtwsClientDynAuthorChangeFailureTrap.setStatus('current')
rbtwsClientDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 49)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessType"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsDAPNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"), ("RBTWS-TRAP-MIB", "rbtwsClientDisconnectSource"), ("RBTWS-TRAP-MIB", "rbtwsClientDisconnectDescription"))
if mibBuilder.loadTexts: rbtwsClientDisconnectTrap.setStatus('current')
rbtwsMobilityDomainFailOverTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 50)).setObjects(("RBTWS-TRAP-MIB", "rbtwsMobilityDomainSecondarySeedIp"))
if mibBuilder.loadTexts: rbtwsMobilityDomainFailOverTrap.setStatus('current')
rbtwsMobilityDomainFailBackTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 51)).setObjects(("RBTWS-TRAP-MIB", "rbtwsMobilityDomainPrimarySeedIp"))
if mibBuilder.loadTexts: rbtwsMobilityDomainFailBackTrap.setStatus('current')
rbtwsRFDetectRogueDeviceTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 52)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectClassificationReason"))
if mibBuilder.loadTexts: rbtwsRFDetectRogueDeviceTrap.setStatus('obsolete')
rbtwsRFDetectRogueDeviceDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 53)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: rbtwsRFDetectRogueDeviceDisappearTrap.setStatus('current')
rbtwsRFDetectSuspectDeviceTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 54)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectClassificationReason"))
if mibBuilder.loadTexts: rbtwsRFDetectSuspectDeviceTrap.setStatus('obsolete')
rbtwsRFDetectSuspectDeviceDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 55)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: rbtwsRFDetectSuspectDeviceDisappearTrap.setStatus('current')
rbtwsRFDetectClientViaRogueWiredAPTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 56)).setObjects(("RBTWS-TRAP-MIB", "rbtwsSourceWsIp"), ("RBTWS-TRAP-MIB", "rbtwsPortNum"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANid"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANtag"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectRogueAPMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectClassificationReason"))
if mibBuilder.loadTexts: rbtwsRFDetectClientViaRogueWiredAPTrap3.setStatus('current')
rbtwsRFDetectClassificationChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 57))
if mibBuilder.loadTexts: rbtwsRFDetectClassificationChangeTrap.setStatus('current')
rbtwsConfigurationSavedTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 58)).setObjects(("RBTWS-TRAP-MIB", "rbtwsConfigSaveFileName"), ("RBTWS-TRAP-MIB", "rbtwsConfigSaveInitiatorType"), ("RBTWS-TRAP-MIB", "rbtwsConfigSaveInitiatorIp"), ("RBTWS-TRAP-MIB", "rbtwsConfigSaveInitiatorDetails"), ("RBTWS-TRAP-MIB", "rbtwsConfigSaveGeneration"))
if mibBuilder.loadTexts: rbtwsConfigurationSavedTrap.setStatus('current')
rbtwsApNonOperStatusTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 59)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceSerNum"), ("RBTWS-TRAP-MIB", "rbtwsAPMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsApName"), ("RBTWS-TRAP-MIB", "rbtwsApTransition"), ("RBTWS-TRAP-MIB", "rbtwsApFailDetail"), ("RBTWS-TRAP-MIB", "rbtwsApWasOperational"))
if mibBuilder.loadTexts: rbtwsApNonOperStatusTrap2.setStatus('current')
rbtwsApOperRadioStatusTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 60)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceSerNum"), ("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsApName"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsRadioType"), ("RBTWS-TRAP-MIB", "rbtwsRadioMode"), ("RBTWS-TRAP-MIB", "rbtwsRadioConfigState"), ("RBTWS-TRAP-MIB", "rbtwsApConnectSecurityType"), ("RBTWS-TRAP-MIB", "rbtwsApServiceAvailability"))
if mibBuilder.loadTexts: rbtwsApOperRadioStatusTrap2.setStatus('obsolete')
rbtwsMichaelMICFailure = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 61)).setObjects(("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsMichaelMICFailureCause"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress2"))
if mibBuilder.loadTexts: rbtwsMichaelMICFailure.setStatus('current')
rbtwsClientAuthorizationSuccessTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 62)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionState"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessMode"), ("RBTWS-TRAP-MIB", "rbtwsPhysPortNum"), ("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsUserAccessType"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthorizationReason"))
if mibBuilder.loadTexts: rbtwsClientAuthorizationSuccessTrap3.setStatus('obsolete')
rbtwsApManagerChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 63)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceSerNum"), ("RBTWS-TRAP-MIB", "rbtwsAPMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsApName"), ("RBTWS-TRAP-MIB", "rbtwsApMgrOldIp"), ("RBTWS-TRAP-MIB", "rbtwsApMgrNewIp"), ("RBTWS-TRAP-MIB", "rbtwsApMgrChangeReason"))
if mibBuilder.loadTexts: rbtwsApManagerChangeTrap.setStatus('current')
rbtwsClientClearedTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 64)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessMode"), ("RBTWS-TRAP-MIB", "rbtwsPhysPortNum"), ("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionElapsedSeconds"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"), ("RBTWS-TRAP-MIB", "rbtwsClientClearedReason"))
if mibBuilder.loadTexts: rbtwsClientClearedTrap2.setStatus('current')
rbtwsMobilityDomainResiliencyStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 65)).setObjects(("RBTWS-TRAP-MIB", "rbtwsMobilityDomainResiliencyStatus"))
if mibBuilder.loadTexts: rbtwsMobilityDomainResiliencyStatusTrap.setStatus('current')
rbtwsApOperRadioStatusTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 66)).setObjects(("RBTWS-TRAP-MIB", "rbtwsDeviceSerNum"), ("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsApName"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsRadioType"), ("RBTWS-TRAP-MIB", "rbtwsRadioMode"), ("RBTWS-TRAP-MIB", "rbtwsRadioConfigState"), ("RBTWS-TRAP-MIB", "rbtwsRadioChannelWidth"), ("RBTWS-TRAP-MIB", "rbtwsRadioMimoState"), ("RBTWS-TRAP-MIB", "rbtwsApConnectSecurityType"), ("RBTWS-TRAP-MIB", "rbtwsApServiceAvailability"))
if mibBuilder.loadTexts: rbtwsApOperRadioStatusTrap3.setStatus('current')
rbtwsClientAuthorizationSuccessTrap4 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 67)).setObjects(("RBTWS-TRAP-MIB", "rbtwsUserName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionId"), ("RBTWS-TRAP-MIB", "rbtwsClientMACAddress"), ("RBTWS-TRAP-MIB", "rbtwsClientIp"), ("RBTWS-TRAP-MIB", "rbtwsClientVLANName"), ("RBTWS-TRAP-MIB", "rbtwsClientSessionState"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthServerIp"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthenProtocolType"), ("RBTWS-TRAP-MIB", "rbtwsClientAccessMode"), ("RBTWS-TRAP-MIB", "rbtwsPhysPortNum"), ("RBTWS-TRAP-MIB", "rbtwsApNum"), ("RBTWS-TRAP-MIB", "rbtwsAPRadioNum"), ("RBTWS-TRAP-MIB", "rbtwsRadioSSID"), ("RBTWS-TRAP-MIB", "rbtwsClientRadioType"), ("RBTWS-TRAP-MIB", "rbtwsUserAccessType"), ("RBTWS-TRAP-MIB", "rbtwsLocalId"), ("RBTWS-TRAP-MIB", "rbtwsClientAuthorizationReason"))
if mibBuilder.loadTexts: rbtwsClientAuthorizationSuccessTrap4.setStatus('current')
rbtwsRFDetectRogueDeviceTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 68)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrRadioType"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrCryptoType"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectClassificationReason"))
if mibBuilder.loadTexts: rbtwsRFDetectRogueDeviceTrap2.setStatus('current')
rbtwsRFDetectSuspectDeviceTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 69)).setObjects(("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrMacAddr"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrRadioType"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectXmtrCryptoType"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectListenerListInfo"), ("RBTWS-TRAP-MIB", "rbtwsRFDetectClassificationReason"))
if mibBuilder.loadTexts: rbtwsRFDetectSuspectDeviceTrap2.setStatus('current')
rbtwsClusterFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 15, 1, 5, 0, 70)).setObjects(("RBTWS-TRAP-MIB", "rbtwsClusterFailureReason"), ("RBTWS-TRAP-MIB", "rbtwsClusterFailureDescription"))
if mibBuilder.loadTexts: rbtwsClusterFailureTrap.setStatus('current')
mibBuilder.exportSymbols("RBTWS-TRAP-MIB", rbtwsDeviceOkayTrap=rbtwsDeviceOkayTrap, rbtwsPoEFailTrap=rbtwsPoEFailTrap, rbtwsMobilityDomainIp=rbtwsMobilityDomainIp, rbtwsClientAccessMode=rbtwsClientAccessMode, rbtwsClientAuthorizationSuccessTrap2=rbtwsClientAuthorizationSuccessTrap2, RbtwsClusterFailureReason=RbtwsClusterFailureReason, RbtwsClientClearedReason=RbtwsClientClearedReason, rbtwsClientAuthorizationReason=rbtwsClientAuthorizationReason, rbtwsRadioMode=rbtwsRadioMode, rbtwsChannelChangeReason=rbtwsChannelChangeReason, rbtwsClientAuthenProtocolType=rbtwsClientAuthenProtocolType, rbtwsClientVLANtag=rbtwsClientVLANtag, rbtwsClientDisconnectTrap=rbtwsClientDisconnectTrap, rbtwsClientDisconnectDescription=rbtwsClientDisconnectDescription, rbtwsClientAuthenticationSuccessTrap=rbtwsClientAuthenticationSuccessTrap, rbtwsApFailDetail=rbtwsApFailDetail, rbtwsAPBootTrap=rbtwsAPBootTrap, rbtwsDeviceFailTrap=rbtwsDeviceFailTrap, rbtwsRadioSSID=rbtwsRadioSSID, rbtwsTrapMib=rbtwsTrapMib, RbtwsMichaelMICFailureCause=RbtwsMichaelMICFailureCause, rbtwsClientSessionElapsedTime=rbtwsClientSessionElapsedTime, RbtwsMobilityDomainResiliencyStatus=RbtwsMobilityDomainResiliencyStatus, rbtwsRadioPowerChangeDescription=rbtwsRadioPowerChangeDescription, rbtwsRadioRssi=rbtwsRadioRssi, rbtwsClientLocationPolicyIndex=rbtwsClientLocationPolicyIndex, rbtwsRFDetectRogueAPTrap=rbtwsRFDetectRogueAPTrap, rbtwsClientClearedTrap2=rbtwsClientClearedTrap2, PYSNMP_MODULE_ID=rbtwsTrapMib, rbtwsRFDetectDoSPortTrap=rbtwsRFDetectDoSPortTrap, rbtwsMobilityDomainPrimarySeedIp=rbtwsMobilityDomainPrimarySeedIp, rbtwsClientFailureCause=rbtwsClientFailureCause, rbtwsRFDetectDoSTrap=rbtwsRFDetectDoSTrap, rbtwsRFDetectBlacklistedTrap=rbtwsRFDetectBlacklistedTrap, rbtwsRFDetectListenerListInfo=rbtwsRFDetectListenerListInfo, rbtwsClientAuthenticationFailureCause=rbtwsClientAuthenticationFailureCause, rbtwsClientAuthenticationFailureTrap=rbtwsClientAuthenticationFailureTrap, RbtwsAuthenticationFailureType=RbtwsAuthenticationFailureType, rbtwsClientAuthorizationSuccessTrap=rbtwsClientAuthorizationSuccessTrap, rbtwsRFDetectSuspectDeviceDisappearTrap=rbtwsRFDetectSuspectDeviceDisappearTrap, rbtwsDeviceModel=rbtwsDeviceModel, rbtwsAPRadioNum=rbtwsAPRadioNum, rbtwsClientDynAuthorClientIp=rbtwsClientDynAuthorClientIp, rbtwsApMgrChangeReason=rbtwsApMgrChangeReason, rbtwsSourceWsIp=rbtwsSourceWsIp, rbtwsClientRoamedFromWsIp=rbtwsClientRoamedFromWsIp, rbtwsRFDetectXmtrCryptoType=rbtwsRFDetectXmtrCryptoType, rbtwsUserParams=rbtwsUserParams, rbtwsClientRoamedFromDAPNum=rbtwsClientRoamedFromDAPNum, rbtwsClientDot1xFailureCause=rbtwsClientDot1xFailureCause, rbtwsConfigSaveInitiatorIp=rbtwsConfigSaveInitiatorIp, rbtwsApRejectLicenseExceededTrap=rbtwsApRejectLicenseExceededTrap, rbtwsDeviceSerNum=rbtwsDeviceSerNum, rbtwsUserName=rbtwsUserName, rbtwsAPMACAddress=rbtwsAPMACAddress, rbtwsBlacklistingCause=rbtwsBlacklistingCause, rbtwsClientRadioType=rbtwsClientRadioType, rbtwsPortNum=rbtwsPortNum, rbtwsLocalId=rbtwsLocalId, RbtwsAuthorizationFailureType=RbtwsAuthorizationFailureType, rbtwsClusterFailureDescription=rbtwsClusterFailureDescription, rbtwsRFDetectXmtrMacAddr=rbtwsRFDetectXmtrMacAddr, rbtwsClientAssociationSuccessTrap=rbtwsClientAssociationSuccessTrap, RbtwsBlacklistingCause=RbtwsBlacklistingCause, rbtwsDAPConnectWarningTrap=rbtwsDAPConnectWarningTrap, rbtwsDAPNum=rbtwsDAPNum, rbtwsClientDisconnectSource=rbtwsClientDisconnectSource, rbtwsClientRoamingTrap=rbtwsClientRoamingTrap, rbtwsCounterMeasureStartTrap=rbtwsCounterMeasureStartTrap, rbtwsCounterMeasureStopTrap=rbtwsCounterMeasureStopTrap, rbtwsClusterFailureTrap=rbtwsClusterFailureTrap, rbtwsRFDetectAdhocUserTrap=rbtwsRFDetectAdhocUserTrap, rbtwsApMgrNewIp=rbtwsApMgrNewIp, rbtwsMpMichaelMICFailure=rbtwsMpMichaelMICFailure, rbtwsClientMACAddress2=rbtwsClientMACAddress2, rbtwsClientTimeSinceLastRoam=rbtwsClientTimeSinceLastRoam, rbtwsChangedUserParamOldValues=rbtwsChangedUserParamOldValues, rbtwsRFDetectUnAuthorizedSsidTrap=rbtwsRFDetectUnAuthorizedSsidTrap, rbtwsClientDot1xFailureTrap=rbtwsClientDot1xFailureTrap, rbtwsRadioBSSID=rbtwsRadioBSSID, rbtwsClientIpAddrChangeReason=rbtwsClientIpAddrChangeReason, rbtwsClientDeAssociationTrap=rbtwsClientDeAssociationTrap, rbtwsNewChannelNum=rbtwsNewChannelNum, rbtwsClientSessionStartTime=rbtwsClientSessionStartTime, rbtwsApTransition=rbtwsApTransition, rbtwsRFDetectSpoofedSsidAPTrap=rbtwsRFDetectSpoofedSsidAPTrap, rbtwsClientSessionState=rbtwsClientSessionState, RbtwsSessionDisconnectType=RbtwsSessionDisconnectType, rbtwsClientVLANid=rbtwsClientVLANid, rbtwsRFDetectRogueDeviceTrap=rbtwsRFDetectRogueDeviceTrap, rbtwsMobilityDomainResiliencyStatus=rbtwsMobilityDomainResiliencyStatus, rbtwsRFDetectInterferingRogueDisappearTrap=rbtwsRFDetectInterferingRogueDisappearTrap, rbtwsApMgrOldIp=rbtwsApMgrOldIp, rbtwsClientIpAddrChangeTrap=rbtwsClientIpAddrChangeTrap, rbtwsClientDeAuthenticationTrap=rbtwsClientDeAuthenticationTrap, rbtwsClientAuthorizationSuccessTrap3=rbtwsClientAuthorizationSuccessTrap3, rbtwsApWasOperational=rbtwsApWasOperational, rbtwsClientClearedReason=rbtwsClientClearedReason, rbtwsMobilityDomainFailOverTrap=rbtwsMobilityDomainFailOverTrap, rbtwsRadioPowerChangeReason=rbtwsRadioPowerChangeReason, rbtwsRadioMACAddress=rbtwsRadioMACAddress, RbtwsAssociationFailureType=RbtwsAssociationFailureType, rbtwsClientDot1xState=rbtwsClientDot1xState, rbtwsRFDetectUnAuthorizedOuiTrap=rbtwsRFDetectUnAuthorizedOuiTrap, rbtwsClientDynAuthorChangeSuccessTrap=rbtwsClientDynAuthorChangeSuccessTrap, rbtwsClientAuthorizationSuccessTrap4=rbtwsClientAuthorizationSuccessTrap4, rbtwsApTimeoutTrap=rbtwsApTimeoutTrap, rbtwsRsaPubKeyFingerPrint=rbtwsRsaPubKeyFingerPrint, rbtwsRFDetectSuspectDeviceTrap=rbtwsRFDetectSuspectDeviceTrap, rbtwsRFDetectRogueAPMacAddr=rbtwsRFDetectRogueAPMacAddr, rbtwsConfigurationSavedTrap=rbtwsConfigurationSavedTrap, rbtwsClientAuthServerIp=rbtwsClientAuthServerIp, rbtwsApAttachType=rbtwsApAttachType, rbtwsClientSessionId=rbtwsClientSessionId, rbtwsApServiceAvailability=rbtwsApServiceAvailability, rbtwsMobilityDomainFailBackTrap=rbtwsMobilityDomainFailBackTrap, rbtwsMobilityDomainTimeoutTrap=rbtwsMobilityDomainTimeoutTrap, rbtwsCounterMeasurePerformerListInfo=rbtwsCounterMeasurePerformerListInfo, rbtwsClientRoamedFromAccessType=rbtwsClientRoamedFromAccessType, rbtwsApName=rbtwsApName, rbtwsRFDetectSuspectDeviceTrap2=rbtwsRFDetectSuspectDeviceTrap2, rbtwsClientVLANName=rbtwsClientVLANName, rbtwsRadioType=rbtwsRadioType, rbtwsClientMACAddress=rbtwsClientMACAddress, rbtwsRFDetectClientViaRogueWiredAPTrap2=rbtwsRFDetectClientViaRogueWiredAPTrap2, rbtwsOldPowerLevel=rbtwsOldPowerLevel, RbtwsUserAttributeList=RbtwsUserAttributeList, rbtwsClientIp=rbtwsClientIp, rbtwsMobilityDomainSecondarySeedIp=rbtwsMobilityDomainSecondarySeedIp, rbtwsRFDetectAdhocUserDisappearTrap=rbtwsRFDetectAdhocUserDisappearTrap, rbtwsClientAuthorizationFailureTrap=rbtwsClientAuthorizationFailureTrap, rbtwsRFDetectUnAuthorizedAPTrap=rbtwsRFDetectUnAuthorizedAPTrap, rbtwsRFDetectInterferingRogueAPTrap=rbtwsRFDetectInterferingRogueAPTrap, rbtwsRFDetectRogueDisappearTrap=rbtwsRFDetectRogueDisappearTrap, rbtwsRFDetectClientViaRogueWiredAPTrap=rbtwsRFDetectClientViaRogueWiredAPTrap, RbtwsDot1xFailureType=RbtwsDot1xFailureType, rbtwsClusterFailureReason=rbtwsClusterFailureReason, rbtwsMichaelMICFailure=rbtwsMichaelMICFailure, rbtwsApNonOperStatusTrap2=rbtwsApNonOperStatusTrap2, RbtwsClientAuthorizationReason=RbtwsClientAuthorizationReason, rbtwsClientAuthorizationFailureCause=rbtwsClientAuthorizationFailureCause, rbtwsConfigSaveFileName=rbtwsConfigSaveFileName, rbtwsApConnectSecurityType=rbtwsApConnectSecurityType, rbtwsClientAssociationFailureTrap=rbtwsClientAssociationFailureTrap, rbtwsDeviceId=rbtwsDeviceId, rbtwsConfigSaveInitiatorType=rbtwsConfigSaveInitiatorType, RbtwsRFDetectDoSType=RbtwsRFDetectDoSType, rbtwsTrapsV2=rbtwsTrapsV2, rbtwsClientFailureCauseDescription=rbtwsClientFailureCauseDescription, rbtwsMichaelMICFailureCause=rbtwsMichaelMICFailureCause, rbtwsApOperRadioStatusTrap2=rbtwsApOperRadioStatusTrap2, rbtwsUserAccessType=rbtwsUserAccessType, rbtwsConfigSaveInitiatorDetails=rbtwsConfigSaveInitiatorDetails, rbtwsRadioMimoState=rbtwsRadioMimoState, rbtwsRadioConfigState=rbtwsRadioConfigState, rbtwsConfigSaveGeneration=rbtwsConfigSaveGeneration, rbtwsClientAccessType=rbtwsClientAccessType, rbtwsOldChannelNum=rbtwsOldChannelNum, rbtwsPhysPortNum=rbtwsPhysPortNum, rbtwsClientSessionElapsedSeconds=rbtwsClientSessionElapsedSeconds, rbtwsClientClearedTrap=rbtwsClientClearedTrap, rbtwsApNonOperStatusTrap=rbtwsApNonOperStatusTrap, rbtwsClientRoamedFromRadioNum=rbtwsClientRoamedFromRadioNum, rbtwsRadioChannelWidth=rbtwsRadioChannelWidth, rbtwsMobilityDomainJoinTrap=rbtwsMobilityDomainJoinTrap, rbtwsRFDetectClassificationReason=rbtwsRFDetectClassificationReason, rbtwsRFDetectRogueDeviceTrap2=rbtwsRFDetectRogueDeviceTrap2, rbtwsNumLicensedActiveAPs=rbtwsNumLicensedActiveAPs, rbtwsApOperRadioStatusTrap=rbtwsApOperRadioStatusTrap, rbtwsBlacklistingRemainingTime=rbtwsBlacklistingRemainingTime, rbtwsAutoTuneRadioChannelChangeTrap=rbtwsAutoTuneRadioChannelChangeTrap, rbtwsClientRoamedFromPortNum=rbtwsClientRoamedFromPortNum, rbtwsMpMichaelMICFailure2=rbtwsMpMichaelMICFailure2, rbtwsRFDetectXmtrRadioType=rbtwsRFDetectXmtrRadioType, rbtwsRFDetectRogueDeviceDisappearTrap=rbtwsRFDetectRogueDeviceDisappearTrap, rbtwsApOperRadioStatusTrap3=rbtwsApOperRadioStatusTrap3, rbtwsRFDetectDoSType=rbtwsRFDetectDoSType, rbtwsRFDetectSpoofedMacAPTrap=rbtwsRFDetectSpoofedMacAPTrap, RbtwsApMgrChangeReason=RbtwsApMgrChangeReason, rbtwsApManagerChangeTrap=rbtwsApManagerChangeTrap, rbtwsRFDetectClientViaRogueWiredAPTrap3=rbtwsRFDetectClientViaRogueWiredAPTrap3, rbtwsAPAccessType=rbtwsAPAccessType, rbtwsRFDetectClassificationChangeTrap=rbtwsRFDetectClassificationChangeTrap, rbtwsChangedUserParamNewValues=rbtwsChangedUserParamNewValues, rbtwsApPortOrDapNum=rbtwsApPortOrDapNum, RbtwsClientIpAddrChangeReason=RbtwsClientIpAddrChangeReason, RbtwsConfigSaveInitiatorType=RbtwsConfigSaveInitiatorType, rbtwsMobilityDomainResiliencyStatusTrap=rbtwsMobilityDomainResiliencyStatusTrap, rbtwsAutoTuneRadioPowerChangeTrap=rbtwsAutoTuneRadioPowerChangeTrap, rbtwsClientDynAuthorChangeFailureTrap=rbtwsClientDynAuthorChangeFailureTrap, rbtwsApNum=rbtwsApNum, rbtwsDAPconnectWarningType=rbtwsDAPconnectWarningType, rbtwsClientAssociationFailureCause=rbtwsClientAssociationFailureCause, rbtwsNewPowerLevel=rbtwsNewPowerLevel)
