#
# PySNMP MIB module NMS-1705 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-1705
# Produced by pysmi-0.3.4 at Mon Apr 29 20:11:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
nmsMgmt, = mibBuilder.importSymbols("NMS-SMI", "nmsMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, iso, Counter64, ModuleIdentity, Counter32, Gauge32, IpAddress, ObjectIdentity, Bits, NotificationType, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "iso", "Counter64", "ModuleIdentity", "Counter32", "Gauge32", "IpAddress", "ObjectIdentity", "Bits", "NotificationType", "TimeTicks", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nms1705MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175))
if mibBuilder.loadTexts: nms1705MIB.setLastUpdated('200604111300Z')
if mibBuilder.loadTexts: nms1705MIB.setOrganization('')
nms1705Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1))
adslLineTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 1), )
if mibBuilder.loadTexts: adslLineTable.setStatus('mandatory')
adslLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 1, 1), ).setIndexNames((0, "NMS-1705", "adslLineNumber"))
if mibBuilder.loadTexts: adslLineEntry.setStatus('mandatory')
adslLineUser = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslLineUser.setStatus('mandatory')
adslProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslProductID.setStatus('mandatory')
adslConfigAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslConfigAddr.setStatus('mandatory')
adslLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslLineNumber.setStatus('mandatory')
adslPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2), )
if mibBuilder.loadTexts: adslPeriodTable.setStatus('mandatory')
adslPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1), ).setIndexNames((0, "NMS-1705", "adslLineNumber"))
if mibBuilder.loadTexts: adslPeriodEntry.setStatus('mandatory')
adslMemLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslMemLoad.setStatus('mandatory')
adslCPULoad = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCPULoad.setStatus('mandatory')
adslPtInCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtInCRC.setStatus('mandatory')
adslPtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adslPtStatus.setStatus('current')
adslPtSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtSpeed.setStatus('mandatory')
adslPtOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtOutPkts.setStatus('mandatory')
adslPtInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtInPkts.setStatus('mandatory')
adslPtOutError = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 8), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtOutError.setStatus('mandatory')
adslPtInError = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 9), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtInError.setStatus('mandatory')
adslPtOutSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 10), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtOutSpeed.setStatus('mandatory')
adslPtInSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 11), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtInSpeed.setStatus('mandatory')
adslPtOutDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtOutDrop.setStatus('mandatory')
adslPtInDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 175, 1, 2, 1, 13), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslPtInDrop.setStatus('mandatory')
mibBuilder.exportSymbols("NMS-1705", adslPtOutPkts=adslPtOutPkts, adslProductID=adslProductID, adslPtInCRC=adslPtInCRC, adslLineNumber=adslLineNumber, adslPeriodEntry=adslPeriodEntry, adslPtInPkts=adslPtInPkts, adslPtOutDrop=adslPtOutDrop, adslPtOutSpeed=adslPtOutSpeed, adslMemLoad=adslMemLoad, adslPtInDrop=adslPtInDrop, nms1705MIB=nms1705MIB, adslConfigAddr=adslConfigAddr, adslPtOutError=adslPtOutError, adslLineUser=adslLineUser, adslPeriodTable=adslPeriodTable, adslPtStatus=adslPtStatus, adslCPULoad=adslCPULoad, adslLineTable=adslLineTable, adslPtSpeed=adslPtSpeed, nms1705Objects=nms1705Objects, adslPtInSpeed=adslPtInSpeed, adslPtInError=adslPtInError, PYSNMP_MODULE_ID=nms1705MIB, adslLineEntry=adslLineEntry)
