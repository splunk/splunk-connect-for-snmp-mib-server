#
# PySNMP MIB module RIVERSTONE-LFAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RIVERSTONE-LFAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:49:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
riverstoneMibs, = mibBuilder.importSymbols("RIVERSTONE-SMI-MIB", "riverstoneMibs")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, Counter32, Gauge32, Integer32, Unsigned32, IpAddress, MibIdentifier, NotificationType, Counter64, Bits, ModuleIdentity, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Gauge32", "Integer32", "Unsigned32", "IpAddress", "MibIdentifier", "NotificationType", "Counter64", "Bits", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
rsLfapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5567, 2, 19))
rsLfapMIB.setRevisions(('2001-06-15 00:00', '2001-06-08 00:00', '2001-05-07 00:00', '2001-05-01 00:00', '2001-03-03 00:00', '2001-02-12 00:00', '2001-02-11 00:00',))
if mibBuilder.loadTexts: rsLfapMIB.setLastUpdated('200106150000Z')
if mibBuilder.loadTexts: rsLfapMIB.setOrganization('Riverstone Networks, Inc')
rsLfapMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1))
rsLfapAgentState = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 1))
rsLfapAgentCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2))
rsLfapServerCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3))
rsLfapStats = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4))
rsLfapDiag = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 5))
class RSLfapErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("errorInConfig", 2), ("resourceExhausted", 3), ("errorNoServer", 4))

class RsLfapServerInst(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(1, 32), ValueRangeConstraint(0, 0), )
class RsTaskPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("high", 1), ("medium", 2), ("low", 3))

class RSOperState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("lfapNormal", 2), ("lfapTest", 3), ("lfapDegraded", 4), ("lfapError", 5))

rsLfapCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 1, 1), Bits().clone(namedValues=NamedValues(("rsLfapV4", 0), ("rsLfapV5", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapCapabilities.setStatus('current')
rsLfapAdminState = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapAdminState.setStatus('current')
rsLfapOperState = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 1, 3), RSOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapOperState.setStatus('current')
rsLfapLastError = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 1, 4), RSLfapErrorCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapLastError.setStatus('current')
rsLfapLastErrorReason = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapLastErrorReason.setStatus('current')
rsLfapActiveServer = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 1, 6), RsLfapServerInst()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapActiveServer.setStatus('current')
rsLfapPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(15)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapPollInterval.setStatus('current')
rsLfapBatchSize = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(32)).setUnits('records').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapBatchSize.setStatus('current')
rsLfapBatchInterval = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapBatchInterval.setStatus('current')
rsLfapLostContactInterval = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2000)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapLostContactInterval.setStatus('current')
rsLfapServerRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapServerRetryInterval.setStatus('current')
rsLfapMaxTxQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2000000)).clone(50000)).setUnits('message count').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapMaxTxQueueSize.setStatus('current')
rsLfapTaskPriority = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 2, 7), RsTaskPriority()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsLfapTaskPriority.setStatus('current')
rsLfapServerStaticLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapServerStaticLastChanged.setStatus('current')
rsLfapServerStaticTable = MibTable((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3, 3), )
if mibBuilder.loadTexts: rsLfapServerStaticTable.setStatus('current')
rsLfapServerStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3, 3, 1), ).setIndexNames((0, "RIVERSTONE-LFAP-MIB", "rsLfapServerStaticIndex"))
if mibBuilder.loadTexts: rsLfapServerStaticEntry.setStatus('current')
rsLfapServerStaticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3, 3, 1, 1), RsLfapServerInst())
if mibBuilder.loadTexts: rsLfapServerStaticIndex.setStatus('current')
rsLfapServerStaticAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3, 3, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsLfapServerStaticAddressType.setStatus('current')
rsLfapServerStaticAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsLfapServerStaticAddress.setStatus('current')
rsLfapServerStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 3, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsLfapServerStaticStatus.setStatus('current')
rsLfapStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1), )
if mibBuilder.loadTexts: rsLfapStatsTable.setStatus('current')
rsLfapStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1), ).setIndexNames((0, "RIVERSTONE-LFAP-MIB", "rsLfapServerStaticIndex"))
if mibBuilder.loadTexts: rsLfapStatsEntry.setStatus('current')
rsLfapStatsSessionUp = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsSessionUp.setStatus('current')
rsLfapStatsSessionChangedAt = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsSessionChangedAt.setStatus('current')
rsLfapStatsTcpConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTcpConnects.setStatus('current')
rsLfapStatsTcpConnectFails = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTcpConnectFails.setStatus('current')
rsLfapStatsTxVRs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxVRs.setStatus('current')
rsLfapStatsTxVRAs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxVRAs.setStatus('current')
rsLfapStatsTxFARs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxFARs.setStatus('current')
rsLfapStatsTxFUNs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxFUNs.setStatus('current')
rsLfapStatsTxARs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxARs.setStatus('current')
rsLfapStatsTxARAs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxARAs.setStatus('current')
rsLfapStatsMsgsInTxQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsMsgsInTxQueue.setStatus('current')
rsLfapStatsDropsInTxQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsDropsInTxQueue.setStatus('current')
rsLfapStatsDropsInTxQueueWhenUp = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsDropsInTxQueueWhenUp.setStatus('current')
rsLfapStatsRxVRs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsRxVRs.setStatus('current')
rsLfapStatsRxVRAs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsRxVRAs.setStatus('current')
rsLfapStatsRxFARs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsRxFARs.setStatus('current')
rsLfapStatsRxFUNs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsRxFUNs.setStatus('current')
rsLfapStatsRxARs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsRxARs.setStatus('current')
rsLfapStatsRxARAs = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsRxARAs.setStatus('current')
rsLfapStatsMsgsInRxQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsMsgsInRxQueue.setStatus('current')
rsLfapStatsInvalidMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsInvalidMsgsRx.setStatus('current')
rsLfapStatsMsgsUnknownRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsMsgsUnknownRx.setStatus('current')
rsLfapStatsTxLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxLostPackets.setStatus('current')
rsLfapStatsTxLostOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsTxLostOctets.setStatus('current')
rsLfapStatsLostAt = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 25), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsLostAt.setStatus('current')
rsLfapStatsActiveFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsActiveFlows.setStatus('current')
rsLfapStatsFlowRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsFlowRate.setStatus('current')
rsLfapStatsActiveFlowsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsActiveFlowsPeak.setStatus('current')
rsLfapStatsMsgsInTxQueuePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsMsgsInTxQueuePeak.setStatus('current')
rsLfapStatsFlowsPeakTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 4, 1, 1, 30), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsLfapStatsFlowsPeakTime.setStatus('current')
rsRunLfapSelfTest = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 19, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsRunLfapSelfTest.setStatus('current')
rsLfapMIBEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 2))
rsLfapMIBEventsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 2, 0))
rsLfapNoServer = NotificationType((1, 3, 6, 1, 4, 1, 5567, 2, 19, 2, 0, 1)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapStatsSessionChangedAt"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTcpConnectFails"))
if mibBuilder.loadTexts: rsLfapNoServer.setStatus('current')
rsLfapLostMessage = NotificationType((1, 3, 6, 1, 4, 1, 5567, 2, 19, 2, 0, 2)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapStatsSessionChangedAt"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsLostAt"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsSessionUp"))
if mibBuilder.loadTexts: rsLfapLostMessage.setStatus('current')
rsLfapQueueFull = NotificationType((1, 3, 6, 1, 4, 1, 5567, 2, 19, 2, 0, 3)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapStatsDropsInTxQueue"), ("RIVERSTONE-LFAP-MIB", "rsLfapMaxTxQueueSize"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsSessionUp"))
if mibBuilder.loadTexts: rsLfapQueueFull.setStatus('current')
rsLfapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3))
rsLfapCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 1))
rsLfapGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 2))
rsLfapAgentCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 1, 1)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapAgentStateGroup"), ("RIVERSTONE-LFAP-MIB", "rsLfapAgentCfgGroup"), ("RIVERSTONE-LFAP-MIB", "rsLfapServerStaticGroup"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsGroup"), ("RIVERSTONE-LFAP-MIB", "rsLfapDiagGroup"), ("RIVERSTONE-LFAP-MIB", "rsLfapNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapAgentCompliance = rsLfapAgentCompliance.setStatus('current')
rsLfapServerCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 1, 2)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapServerCompliance = rsLfapServerCompliance.setStatus('current')
rsLfapAgentStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 2, 1)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapCapabilities"), ("RIVERSTONE-LFAP-MIB", "rsLfapAdminState"), ("RIVERSTONE-LFAP-MIB", "rsLfapOperState"), ("RIVERSTONE-LFAP-MIB", "rsLfapLastError"), ("RIVERSTONE-LFAP-MIB", "rsLfapLastErrorReason"), ("RIVERSTONE-LFAP-MIB", "rsLfapActiveServer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapAgentStateGroup = rsLfapAgentStateGroup.setStatus('current')
rsLfapAgentCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 2, 2)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapPollInterval"), ("RIVERSTONE-LFAP-MIB", "rsLfapBatchSize"), ("RIVERSTONE-LFAP-MIB", "rsLfapBatchInterval"), ("RIVERSTONE-LFAP-MIB", "rsLfapLostContactInterval"), ("RIVERSTONE-LFAP-MIB", "rsLfapServerRetryInterval"), ("RIVERSTONE-LFAP-MIB", "rsLfapMaxTxQueueSize"), ("RIVERSTONE-LFAP-MIB", "rsLfapTaskPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapAgentCfgGroup = rsLfapAgentCfgGroup.setStatus('current')
rsLfapServerStaticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 2, 3)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapServerStaticLastChanged"), ("RIVERSTONE-LFAP-MIB", "rsLfapServerStaticAddressType"), ("RIVERSTONE-LFAP-MIB", "rsLfapServerStaticAddress"), ("RIVERSTONE-LFAP-MIB", "rsLfapServerStaticStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapServerStaticGroup = rsLfapServerStaticGroup.setStatus('current')
rsLfapStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 2, 4)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapStatsSessionUp"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsSessionChangedAt"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTcpConnects"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTcpConnectFails"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxVRs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxVRAs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxFARs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxFUNs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxARs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxARAs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsMsgsInTxQueue"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsDropsInTxQueue"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsDropsInTxQueueWhenUp"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsRxVRs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsRxVRAs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsRxFARs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsRxFUNs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsRxARs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsRxARAs"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsMsgsInRxQueue"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsInvalidMsgsRx"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsMsgsUnknownRx"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxLostPackets"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsTxLostOctets"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsLostAt"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsActiveFlows"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsFlowRate"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsActiveFlowsPeak"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsMsgsInTxQueuePeak"), ("RIVERSTONE-LFAP-MIB", "rsLfapStatsFlowsPeakTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapStatsGroup = rsLfapStatsGroup.setStatus('current')
rsLfapDiagGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 2, 5)).setObjects(("RIVERSTONE-LFAP-MIB", "rsRunLfapSelfTest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapDiagGroup = rsLfapDiagGroup.setStatus('current')
rsLfapNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5567, 2, 19, 3, 2, 6)).setObjects(("RIVERSTONE-LFAP-MIB", "rsLfapNoServer"), ("RIVERSTONE-LFAP-MIB", "rsLfapLostMessage"), ("RIVERSTONE-LFAP-MIB", "rsLfapQueueFull"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsLfapNotificationGroup = rsLfapNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("RIVERSTONE-LFAP-MIB", rsLfapStatsTxARs=rsLfapStatsTxARs, rsLfapAgentCfgGroup=rsLfapAgentCfgGroup, rsLfapStatsRxFARs=rsLfapStatsRxFARs, rsLfapStatsDropsInTxQueueWhenUp=rsLfapStatsDropsInTxQueueWhenUp, rsLfapActiveServer=rsLfapActiveServer, rsLfapStatsActiveFlows=rsLfapStatsActiveFlows, RsLfapServerInst=RsLfapServerInst, rsLfapAgentCompliance=rsLfapAgentCompliance, rsLfapStatsFlowRate=rsLfapStatsFlowRate, rsLfapStatsTxFARs=rsLfapStatsTxFARs, rsLfapServerStaticIndex=rsLfapServerStaticIndex, rsLfapServerStaticGroup=rsLfapServerStaticGroup, rsLfapStatsRxARs=rsLfapStatsRxARs, rsLfapStatsTable=rsLfapStatsTable, rsLfapStatsMsgsUnknownRx=rsLfapStatsMsgsUnknownRx, rsLfapStatsRxVRs=rsLfapStatsRxVRs, rsLfapStatsTxVRAs=rsLfapStatsTxVRAs, rsLfapStatsTxARAs=rsLfapStatsTxARAs, rsLfapStatsTxLostOctets=rsLfapStatsTxLostOctets, rsLfapCompliances=rsLfapCompliances, rsLfapStatsMsgsInTxQueue=rsLfapStatsMsgsInTxQueue, rsLfapConformance=rsLfapConformance, rsLfapStatsRxFUNs=rsLfapStatsRxFUNs, rsLfapServerStaticStatus=rsLfapServerStaticStatus, rsLfapMIBObjects=rsLfapMIBObjects, rsLfapServerStaticEntry=rsLfapServerStaticEntry, rsLfapDiag=rsLfapDiag, rsLfapMIB=rsLfapMIB, rsLfapBatchInterval=rsLfapBatchInterval, rsLfapAgentStateGroup=rsLfapAgentStateGroup, rsLfapPollInterval=rsLfapPollInterval, rsLfapServerStaticAddress=rsLfapServerStaticAddress, rsLfapAdminState=rsLfapAdminState, rsLfapLostMessage=rsLfapLostMessage, rsLfapServerCfg=rsLfapServerCfg, RsTaskPriority=RsTaskPriority, rsLfapStats=rsLfapStats, rsLfapStatsFlowsPeakTime=rsLfapStatsFlowsPeakTime, rsLfapServerCompliance=rsLfapServerCompliance, rsLfapGroups=rsLfapGroups, rsLfapServerStaticTable=rsLfapServerStaticTable, rsLfapBatchSize=rsLfapBatchSize, rsLfapStatsMsgsInTxQueuePeak=rsLfapStatsMsgsInTxQueuePeak, rsLfapStatsSessionUp=rsLfapStatsSessionUp, RSLfapErrorCode=RSLfapErrorCode, rsLfapStatsGroup=rsLfapStatsGroup, rsLfapStatsMsgsInRxQueue=rsLfapStatsMsgsInRxQueue, rsLfapStatsSessionChangedAt=rsLfapStatsSessionChangedAt, rsLfapCapabilities=rsLfapCapabilities, rsLfapServerStaticLastChanged=rsLfapServerStaticLastChanged, rsLfapStatsEntry=rsLfapStatsEntry, rsLfapAgentCfg=rsLfapAgentCfg, rsLfapAgentState=rsLfapAgentState, rsLfapLostContactInterval=rsLfapLostContactInterval, rsLfapServerStaticAddressType=rsLfapServerStaticAddressType, rsLfapLastError=rsLfapLastError, rsLfapStatsDropsInTxQueue=rsLfapStatsDropsInTxQueue, rsLfapNoServer=rsLfapNoServer, rsLfapServerRetryInterval=rsLfapServerRetryInterval, rsLfapQueueFull=rsLfapQueueFull, rsLfapNotificationGroup=rsLfapNotificationGroup, rsLfapStatsTxVRs=rsLfapStatsTxVRs, PYSNMP_MODULE_ID=rsLfapMIB, rsLfapStatsLostAt=rsLfapStatsLostAt, rsLfapMIBEvents=rsLfapMIBEvents, RSOperState=RSOperState, rsLfapOperState=rsLfapOperState, rsLfapStatsInvalidMsgsRx=rsLfapStatsInvalidMsgsRx, rsLfapLastErrorReason=rsLfapLastErrorReason, rsLfapStatsActiveFlowsPeak=rsLfapStatsActiveFlowsPeak, rsLfapDiagGroup=rsLfapDiagGroup, rsRunLfapSelfTest=rsRunLfapSelfTest, rsLfapStatsTcpConnectFails=rsLfapStatsTcpConnectFails, rsLfapMIBEventsPrefix=rsLfapMIBEventsPrefix, rsLfapStatsRxARAs=rsLfapStatsRxARAs, rsLfapStatsTxFUNs=rsLfapStatsTxFUNs, rsLfapMaxTxQueueSize=rsLfapMaxTxQueueSize, rsLfapStatsRxVRAs=rsLfapStatsRxVRAs, rsLfapTaskPriority=rsLfapTaskPriority, rsLfapStatsTcpConnects=rsLfapStatsTcpConnects, rsLfapStatsTxLostPackets=rsLfapStatsTxLostPackets)
