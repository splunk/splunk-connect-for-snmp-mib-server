#
# PySNMP MIB module HUAWEI-LOOPDETECT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-LOOPDETECT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:34:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
huawei, = mibBuilder.importSymbols("HUAWEI-MIB", "huawei")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, TimeTicks, iso, Counter32, Bits, NotificationType, IpAddress, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "iso", "Counter32", "Bits", "NotificationType", "IpAddress", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "MibIdentifier", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwDatacomm = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 25))
hwLoopDetectMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 25, 180))
if mibBuilder.loadTexts: hwLoopDetectMIB.setLastUpdated('200810070000Z')
if mibBuilder.loadTexts: hwLoopDetectMIB.setOrganization('Huawei Technologies co.,Ltd.')
hwLoopDetectCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1), )
if mibBuilder.loadTexts: hwLoopDetectCfgTable.setStatus('current')
hwLoopDetectCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1), ).setIndexNames((0, "HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgPortIndex"))
if mibBuilder.loadTexts: hwLoopDetectCfgEntry.setStatus('current')
hwLoopDetectCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwLoopDetectCfgPortIndex.setStatus('current')
hwLoopDetectCfgPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLoopDetectCfgPortName.setStatus('current')
hwLoopDetectCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLoopDetectCfg.setStatus('current')
hwLoopDetectCfgBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLoopDetectCfgBlock.setStatus('current')
hwLoopDetectCfgBlockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLoopDetectCfgBlockTime.setStatus('current')
hwLoopDetectCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLoopDetectCfgPriority.setStatus('current')
hwLoopDetectCfgTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLoopDetectCfgTrigger.setStatus('current')
hwLoopDetectCfgSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 25, 180, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLoopDetectCfgSta.setStatus('current')
hwLoopDetectTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 25, 180, 2))
hwLoopDetectEnabled = NotificationType((1, 3, 6, 1, 4, 1, 2011, 25, 180, 2, 1)).setObjects(("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgPortName"))
if mibBuilder.loadTexts: hwLoopDetectEnabled.setStatus('current')
hwLoopDetectDisabled = NotificationType((1, 3, 6, 1, 4, 1, 2011, 25, 180, 2, 2)).setObjects(("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgPortName"))
if mibBuilder.loadTexts: hwLoopDetectDisabled.setStatus('current')
hwLoopDetectBlocked = NotificationType((1, 3, 6, 1, 4, 1, 2011, 25, 180, 2, 3)).setObjects(("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgPortName"))
if mibBuilder.loadTexts: hwLoopDetectBlocked.setStatus('current')
hwLoopDetectUnBlocked = NotificationType((1, 3, 6, 1, 4, 1, 2011, 25, 180, 2, 4)).setObjects(("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgPortName"))
if mibBuilder.loadTexts: hwLoopDetectUnBlocked.setStatus('current')
hwLoopDetectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 25, 180, 3))
hwLoopDetectCfgEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 25, 180, 3, 1)).setObjects(("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgPortName"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfg"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgBlock"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgBlockTime"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgPriority"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgTrigger"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectCfgSta"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLoopDetectCfgEntryGroup = hwLoopDetectCfgEntryGroup.setStatus('current')
hwLoopDetectTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 25, 180, 3, 2)).setObjects(("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectEnabled"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectDisabled"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectBlocked"), ("HUAWEI-LOOPDETECT-MIB", "hwLoopDetectUnBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLoopDetectTrapsGroup = hwLoopDetectTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-LOOPDETECT-MIB", PYSNMP_MODULE_ID=hwLoopDetectMIB, hwLoopDetectCfgSta=hwLoopDetectCfgSta, hwLoopDetectCfgPriority=hwLoopDetectCfgPriority, hwLoopDetectTraps=hwLoopDetectTraps, hwLoopDetectCfgBlockTime=hwLoopDetectCfgBlockTime, hwLoopDetectCfg=hwLoopDetectCfg, hwDatacomm=hwDatacomm, hwLoopDetectTrapsGroup=hwLoopDetectTrapsGroup, hwLoopDetectCfgEntry=hwLoopDetectCfgEntry, hwLoopDetectBlocked=hwLoopDetectBlocked, hwLoopDetectCfgTable=hwLoopDetectCfgTable, hwLoopDetectCfgPortIndex=hwLoopDetectCfgPortIndex, hwLoopDetectDisabled=hwLoopDetectDisabled, hwLoopDetectCfgTrigger=hwLoopDetectCfgTrigger, hwLoopDetectCfgEntryGroup=hwLoopDetectCfgEntryGroup, hwLoopDetectEnabled=hwLoopDetectEnabled, hwLoopDetectCfgPortName=hwLoopDetectCfgPortName, hwLoopDetectMIB=hwLoopDetectMIB, hwLoopDetectGroups=hwLoopDetectGroups, hwLoopDetectUnBlocked=hwLoopDetectUnBlocked, hwLoopDetectCfgBlock=hwLoopDetectCfgBlock)
