#
# PySNMP MIB module RFC1304-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RFC1304-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:48:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ObjectIdentity, Unsigned32, transmission, Integer32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Gauge32, MibIdentifier, Counter32, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "Unsigned32", "transmission", "Integer32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Gauge32", "MibIdentifier", "Counter32", "TimeTicks", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sip = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31))
class SMDSAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

sipL3Table = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 1), )
if mibBuilder.loadTexts: sipL3Table.setStatus('mandatory')
sipL3Entry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 1, 1), ).setIndexNames((0, "RFC1304-MIB", "sipL3Index"))
if mibBuilder.loadTexts: sipL3Entry.setStatus('mandatory')
sipL3Index = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3Index.setStatus('mandatory')
sipL3ReceivedIndividualDAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3ReceivedIndividualDAs.setStatus('mandatory')
sipL3ReceivedGAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3ReceivedGAs.setStatus('mandatory')
sipL3UnrecognizedIndividualDAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3UnrecognizedIndividualDAs.setStatus('mandatory')
sipL3UnrecognizedGAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3UnrecognizedGAs.setStatus('mandatory')
sipL3SentIndividualDAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3SentIndividualDAs.setStatus('mandatory')
sipL3SentGAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3SentGAs.setStatus('mandatory')
sipL3Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3Errors.setStatus('mandatory')
sipL3InvalidSMDSAddressTypes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3InvalidSMDSAddressTypes.setStatus('mandatory')
sipL3VersionSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3VersionSupport.setStatus('mandatory')
sipL2Table = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 2), )
if mibBuilder.loadTexts: sipL2Table.setStatus('mandatory')
sipL2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 2, 1), ).setIndexNames((0, "RFC1304-MIB", "sipL2Index"))
if mibBuilder.loadTexts: sipL2Entry.setStatus('mandatory')
sipL2Index = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2Index.setStatus('mandatory')
sipL2ReceivedCounts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2ReceivedCounts.setStatus('mandatory')
sipL2SentCounts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2SentCounts.setStatus('mandatory')
sipL2HcsOrCRCErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2HcsOrCRCErrors.setStatus('mandatory')
sipL2PayloadLengthErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2PayloadLengthErrors.setStatus('mandatory')
sipL2SequenceNumberErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2SequenceNumberErrors.setStatus('mandatory')
sipL2MidCurrentlyActiveErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2MidCurrentlyActiveErrors.setStatus('mandatory')
sipL2BomOrSSMsMIDErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2BomOrSSMsMIDErrors.setStatus('mandatory')
sipL2EomsMIDErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL2EomsMIDErrors.setStatus('mandatory')
sipPLCP = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 3))
sipDS1PLCPTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 3, 1), )
if mibBuilder.loadTexts: sipDS1PLCPTable.setStatus('mandatory')
sipDS1PLCPEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1), ).setIndexNames((0, "RFC1304-MIB", "sipDS1PLCPIndex"))
if mibBuilder.loadTexts: sipDS1PLCPEntry.setStatus('mandatory')
sipDS1PLCPIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS1PLCPIndex.setStatus('mandatory')
sipDS1PLCPSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS1PLCPSEFSs.setStatus('mandatory')
sipDS1PLCPAlarmState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAlarm", 1), ("receivedFarEndAlarm", 2), ("incomingLOF", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS1PLCPAlarmState.setStatus('mandatory')
sipDS1PLCPUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS1PLCPUASs.setStatus('mandatory')
sipDS3PLCPTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 3, 2), )
if mibBuilder.loadTexts: sipDS3PLCPTable.setStatus('mandatory')
sipDS3PLCPEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1), ).setIndexNames((0, "RFC1304-MIB", "sipDS3PLCPIndex"))
if mibBuilder.loadTexts: sipDS3PLCPEntry.setStatus('mandatory')
sipDS3PLCPIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS3PLCPIndex.setStatus('mandatory')
sipDS3PLCPSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS3PLCPSEFSs.setStatus('mandatory')
sipDS3PLCPAlarmState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAlarm", 1), ("receivedFarEndAlarm", 2), ("incomingLOF", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS3PLCPAlarmState.setStatus('mandatory')
sipDS3PLCPUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipDS3PLCPUASs.setStatus('mandatory')
smdsApplications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 4))
ipOverSMDS = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 4, 1))
ipOverSMDSTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1), )
if mibBuilder.loadTexts: ipOverSMDSTable.setStatus('mandatory')
ipOverSMDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1), ).setIndexNames((0, "RFC1304-MIB", "ipOverSMDSIndex"), (0, "RFC1304-MIB", "ipOverSMDSAddress"))
if mibBuilder.loadTexts: ipOverSMDSEntry.setStatus('mandatory')
ipOverSMDSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipOverSMDSIndex.setStatus('mandatory')
ipOverSMDSAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipOverSMDSAddress.setStatus('mandatory')
ipOverSMDSHA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 3), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipOverSMDSHA.setStatus('mandatory')
ipOverSMDSLISGA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 4), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipOverSMDSLISGA.setStatus('mandatory')
ipOverSMDSARPReq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 5), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipOverSMDSARPReq.setStatus('mandatory')
smdsCarrierSelection = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 5))
sipErrorLog = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 6))
sipL3PDUErrorTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 6, 1), )
if mibBuilder.loadTexts: sipL3PDUErrorTable.setStatus('mandatory')
sipL3PDUErrorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1), ).setIndexNames((0, "RFC1304-MIB", "sipL3PDUErrorIndex"), (0, "RFC1304-MIB", "sipL3PDUErrorType"))
if mibBuilder.loadTexts: sipL3PDUErrorEntry.setStatus('mandatory')
sipL3PDUErrorIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3PDUErrorIndex.setStatus('mandatory')
sipL3PDUErrorType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("erroredDAFieldFormat", 1), ("erroredSAFieldFormat", 2), ("invalidBAsizeFieldValue", 3), ("invalidHdrExtLength", 4), ("invalidHdrExtElementLength", 5), ("invalidHdrExtVersionElementPositionLenthOrValue", 6), ("invalidHdrExtCarSelectElementPositionLenghtValueOrFormat", 7), ("hePADError", 8), ("beTagMismatch", 9), ("baSizeFieldNotEqualToLengthField", 10), ("incorrectLength", 11), ("mriTimeout", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3PDUErrorType.setStatus('mandatory')
sipL3PDUErrorSA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 3), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3PDUErrorSA.setStatus('mandatory')
sipL3PDUErrorDA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 4), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3PDUErrorDA.setStatus('mandatory')
sipL3PDUErrorTimeStamp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipL3PDUErrorTimeStamp.setStatus('mandatory')
mibBuilder.exportSymbols("RFC1304-MIB", sipL3Index=sipL3Index, sipL2SequenceNumberErrors=sipL2SequenceNumberErrors, sipL2PayloadLengthErrors=sipL2PayloadLengthErrors, sipL3VersionSupport=sipL3VersionSupport, sipDS3PLCPIndex=sipDS3PLCPIndex, ipOverSMDSARPReq=ipOverSMDSARPReq, sipL3UnrecognizedGAs=sipL3UnrecognizedGAs, sipL2MidCurrentlyActiveErrors=sipL2MidCurrentlyActiveErrors, sipL2SentCounts=sipL2SentCounts, ipOverSMDSEntry=ipOverSMDSEntry, sipL3PDUErrorTimeStamp=sipL3PDUErrorTimeStamp, sipErrorLog=sipErrorLog, sipL3PDUErrorDA=sipL3PDUErrorDA, sipL3PDUErrorIndex=sipL3PDUErrorIndex, sip=sip, sipL2Index=sipL2Index, ipOverSMDSLISGA=ipOverSMDSLISGA, sipL3PDUErrorEntry=sipL3PDUErrorEntry, sipL2ReceivedCounts=sipL2ReceivedCounts, sipL3Table=sipL3Table, sipDS3PLCPAlarmState=sipDS3PLCPAlarmState, smdsCarrierSelection=smdsCarrierSelection, sipDS1PLCPAlarmState=sipDS1PLCPAlarmState, sipL2Table=sipL2Table, sipL2Entry=sipL2Entry, sipL2HcsOrCRCErrors=sipL2HcsOrCRCErrors, sipDS3PLCPTable=sipDS3PLCPTable, sipL3UnrecognizedIndividualDAs=sipL3UnrecognizedIndividualDAs, ipOverSMDS=ipOverSMDS, sipL3PDUErrorSA=sipL3PDUErrorSA, ipOverSMDSIndex=ipOverSMDSIndex, sipDS1PLCPUASs=sipDS1PLCPUASs, sipDS3PLCPEntry=sipDS3PLCPEntry, sipL3InvalidSMDSAddressTypes=sipL3InvalidSMDSAddressTypes, smdsApplications=smdsApplications, SMDSAddress=SMDSAddress, ipOverSMDSTable=ipOverSMDSTable, sipDS1PLCPTable=sipDS1PLCPTable, sipL3Entry=sipL3Entry, sipDS1PLCPEntry=sipDS1PLCPEntry, sipL3Errors=sipL3Errors, sipL3ReceivedIndividualDAs=sipL3ReceivedIndividualDAs, sipDS1PLCPIndex=sipDS1PLCPIndex, sipDS1PLCPSEFSs=sipDS1PLCPSEFSs, ipOverSMDSHA=ipOverSMDSHA, sipL3SentIndividualDAs=sipL3SentIndividualDAs, sipL3ReceivedGAs=sipL3ReceivedGAs, sipL3SentGAs=sipL3SentGAs, sipPLCP=sipPLCP, sipL2EomsMIDErrors=sipL2EomsMIDErrors, sipL3PDUErrorType=sipL3PDUErrorType, sipDS3PLCPSEFSs=sipDS3PLCPSEFSs, sipL3PDUErrorTable=sipL3PDUErrorTable, sipL2BomOrSSMsMIDErrors=sipL2BomOrSSMsMIDErrors, sipDS3PLCPUASs=sipDS3PLCPUASs, ipOverSMDSAddress=ipOverSMDSAddress)
