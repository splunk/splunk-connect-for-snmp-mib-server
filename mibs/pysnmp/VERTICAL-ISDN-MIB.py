#
# PySNMP MIB module VERTICAL-ISDN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICAL-ISDN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:27:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
EntryStatus, = mibBuilder.importSymbols("RFC1271-MIB", "EntryStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, Bits, Integer32, NotificationType, Counter32, iso, Unsigned32, IpAddress, Gauge32, TimeTicks, MibIdentifier, transmission, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "Bits", "Integer32", "NotificationType", "Counter32", "iso", "Unsigned32", "IpAddress", "Gauge32", "TimeTicks", "MibIdentifier", "transmission", "ModuleIdentity", "NotificationType")
DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp")
vertical, = mibBuilder.importSymbols("VERTICALT1-E1-MIB", "vertical")
class IsdnSignalingProtocol(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 5, 6, 7, 10, 263))
    namedValues = NamedValues(("other", 1), ("ess4", 5), ("ess5", 6), ("dms100", 7), ("ni2", 10), ("dms100s100", 263))

class TestAndIncr(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

visdnMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 5))
visdnBearerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 5, 2))
visdnBearerTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1), )
if mibBuilder.loadTexts: visdnBearerTable.setStatus('mandatory')
visdnBearerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: visdnBearerEntry.setStatus('mandatory')
visdnBearerChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dialup", 1), ("leased", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerChannelType.setStatus('mandatory')
visdnBearerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("connecting", 2), ("connected", 3), ("active", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerOperStatus.setStatus('mandatory')
visdnBearerChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerChannelNumber.setStatus('mandatory')
visdnBearerPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerPeerAddress.setStatus('mandatory')
visdnBearerPeerSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerPeerSubAddress.setStatus('mandatory')
visdnBearerCallOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("originate", 2), ("answer", 3), ("callback", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerCallOrigin.setStatus('mandatory')
visdnBearerInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("speech", 2), ("unrestrictedDigital", 3), ("unrestrictedDigital56", 4), ("restrictedDigital", 5), ("audio31", 6), ("audio7", 7), ("video", 8), ("packetSwitched", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerInfoType.setStatus('mandatory')
visdnBearerMultirate = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerMultirate.setStatus('mandatory')
visdnBearerCallSetupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerCallSetupTime.setStatus('mandatory')
visdnBearerCallConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerCallConnectTime.setStatus('mandatory')
visdnBearerChargedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnBearerChargedUnits.setStatus('mandatory')
visdnSignalingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 5, 3))
visdnSignalingGetIndex = MibScalar((1, 3, 6, 1, 4, 1, 2338, 5, 3, 1), TestAndIncr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingGetIndex.setStatus('mandatory')
visdnSignalingTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2), )
if mibBuilder.loadTexts: visdnSignalingTable.setStatus('mandatory')
visdnSignalingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1), ).setIndexNames((0, "VERTICAL-ISDN-MIB", "visdnSignalingIndex"))
if mibBuilder.loadTexts: visdnSignalingEntry.setStatus('mandatory')
visdnSignalingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: visdnSignalingIndex.setStatus('mandatory')
visdnSignalingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingIfIndex.setStatus('mandatory')
visdnSignalingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 3), IsdnSignalingProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingProtocol.setStatus('mandatory')
visdnSignalingCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingCallingAddress.setStatus('mandatory')
visdnSignalingSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingSubAddress.setStatus('mandatory')
visdnSignalingBchannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingBchannelCount.setStatus('mandatory')
visdnSignalingInfoTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingInfoTrapEnable.setStatus('mandatory')
visdnSignalingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 2, 1, 8), EntryStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSignalingStatus.setStatus('mandatory')
visdnSignalingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 5, 3, 3), )
if mibBuilder.loadTexts: visdnSignalingStatsTable.setStatus('mandatory')
visdnSignalingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 5, 3, 3, 1), ).setIndexNames((0, "VERTICAL-ISDN-MIB", "visdnSignalingIndex"))
if mibBuilder.loadTexts: visdnSignalingStatsEntry.setStatus('mandatory')
visdnSigStatsInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSigStatsInCalls.setStatus('mandatory')
visdnSigStatsInConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSigStatsInConnected.setStatus('mandatory')
visdnSigStatsOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSigStatsOutCalls.setStatus('mandatory')
visdnSigStatsOutConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSigStatsOutConnected.setStatus('mandatory')
visdnSigStatsChargedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnSigStatsChargedUnits.setStatus('mandatory')
visdnLapdTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 5, 3, 4), )
if mibBuilder.loadTexts: visdnLapdTable.setStatus('mandatory')
visdnLapdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 5, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: visdnLapdEntry.setStatus('mandatory')
visdnLapdPrimaryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 4, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnLapdPrimaryChannel.setStatus('mandatory')
visdnLapdOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("l1Active", 2), ("l2Active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnLapdOperStatus.setStatus('mandatory')
visdnLapdPeerSabme = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnLapdPeerSabme.setStatus('mandatory')
visdnLapdRecvdFrmr = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 5, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: visdnLapdRecvdFrmr.setStatus('mandatory')
mibBuilder.exportSymbols("VERTICAL-ISDN-MIB", visdnBearerTable=visdnBearerTable, IsdnSignalingProtocol=IsdnSignalingProtocol, visdnBearerCallConnectTime=visdnBearerCallConnectTime, visdnSignalingIfIndex=visdnSignalingIfIndex, visdnLapdTable=visdnLapdTable, TestAndIncr=TestAndIncr, visdnBearerCallSetupTime=visdnBearerCallSetupTime, visdnMibObjects=visdnMibObjects, visdnSigStatsChargedUnits=visdnSigStatsChargedUnits, visdnLapdPrimaryChannel=visdnLapdPrimaryChannel, visdnSigStatsInCalls=visdnSigStatsInCalls, visdnSignalingEntry=visdnSignalingEntry, visdnSignalingSubAddress=visdnSignalingSubAddress, visdnSignalingProtocol=visdnSignalingProtocol, visdnBearerChannelNumber=visdnBearerChannelNumber, visdnSignalingGetIndex=visdnSignalingGetIndex, visdnSignalingInfoTrapEnable=visdnSignalingInfoTrapEnable, visdnBearerPeerSubAddress=visdnBearerPeerSubAddress, visdnSignalingStatus=visdnSignalingStatus, visdnBearerCallOrigin=visdnBearerCallOrigin, visdnLapdPeerSabme=visdnLapdPeerSabme, visdnBearerPeerAddress=visdnBearerPeerAddress, visdnBearerOperStatus=visdnBearerOperStatus, visdnSignalingTable=visdnSignalingTable, visdnBearerInfoType=visdnBearerInfoType, visdnBearerChannelType=visdnBearerChannelType, visdnSignalingGroup=visdnSignalingGroup, visdnLapdOperStatus=visdnLapdOperStatus, visdnSignalingIndex=visdnSignalingIndex, TruthValue=TruthValue, visdnBearerGroup=visdnBearerGroup, visdnSignalingStatsEntry=visdnSignalingStatsEntry, visdnSigStatsInConnected=visdnSigStatsInConnected, visdnSignalingBchannelCount=visdnSignalingBchannelCount, visdnSignalingCallingAddress=visdnSignalingCallingAddress, visdnSigStatsOutCalls=visdnSigStatsOutCalls, visdnLapdEntry=visdnLapdEntry, visdnSigStatsOutConnected=visdnSigStatsOutConnected, visdnBearerEntry=visdnBearerEntry, visdnBearerChargedUnits=visdnBearerChargedUnits, visdnBearerMultirate=visdnBearerMultirate, visdnLapdRecvdFrmr=visdnLapdRecvdFrmr, visdnSignalingStatsTable=visdnSignalingStatsTable)
