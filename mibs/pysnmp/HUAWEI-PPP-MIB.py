#
# PySNMP MIB module HUAWEI-PPP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-PPP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:36:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, MibIdentifier, Gauge32, ObjectIdentity, Integer32, Counter32, Counter64, NotificationType, Unsigned32, iso, Bits, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "Gauge32", "ObjectIdentity", "Integer32", "Counter32", "Counter64", "NotificationType", "Unsigned32", "iso", "Bits", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
hwPppMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169))
if mibBuilder.loadTexts: hwPppMIB.setLastUpdated('200710172230Z')
if mibBuilder.loadTexts: hwPppMIB.setOrganization('Huawei Technologies co.,Ltd.')
hwPppObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1))
hwPppConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 1), )
if mibBuilder.loadTexts: hwPppConfigTable.setStatus('current')
hwPppConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 1, 1), ).setIndexNames((0, "HUAWEI-PPP-MIB", "hwPppIfIndex"))
if mibBuilder.loadTexts: hwPppConfigEntry.setStatus('current')
hwPppIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwPppIfIndex.setStatus('current')
hwPppMruNegType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppMruNegType.setStatus('current')
hwPppMpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppMpIfIndex.setStatus('current')
hwPppAuthenticateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2), )
if mibBuilder.loadTexts: hwPppAuthenticateTable.setStatus('current')
hwPppAuthenticateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1), ).setIndexNames((0, "HUAWEI-PPP-MIB", "hwPppIfIndex"))
if mibBuilder.loadTexts: hwPppAuthenticateEntry.setStatus('current')
hwPppAuthenticateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("chap", 1), ("pap", 2), ("chappap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthenticateMode.setStatus('current')
hwPppAuthenticateChapUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthenticateChapUserName.setStatus('current')
hwPppAuthenticateChapPwType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cipher", 1), ("simple", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthenticateChapPwType.setStatus('current')
hwPppAuthenticateChapPw = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1, 14), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(1, 16), ValueSizeConstraint(24, 24), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthenticateChapPw.setStatus('current')
hwPppAuthenticatePapUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthenticatePapUserName.setStatus('current')
hwPppAuthenticatePapPwType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cipher", 1), ("simple", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthenticatePapPwType.setStatus('current')
hwPppAuthenticatePapPw = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 1, 2, 1, 17), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(1, 16), ValueSizeConstraint(24, 24), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPppAuthenticatePapPw.setStatus('current')
hwPppConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 11))
hwPppCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 11, 1))
hwPppCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 11, 1, 1)).setObjects(("HUAWEI-PPP-MIB", "hwPppConfigObjectGroup"), ("HUAWEI-PPP-MIB", "hwPppAuthenticateObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppCompliance = hwPppCompliance.setStatus('current')
hwPppGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 11, 2))
hwPppConfigObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 11, 2, 1)).setObjects(("HUAWEI-PPP-MIB", "hwPppMruNegType"), ("HUAWEI-PPP-MIB", "hwPppMpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppConfigObjectGroup = hwPppConfigObjectGroup.setStatus('current')
hwPppAuthenticateObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 169, 11, 2, 2)).setObjects(("HUAWEI-PPP-MIB", "hwPppAuthenticateMode"), ("HUAWEI-PPP-MIB", "hwPppAuthenticateChapUserName"), ("HUAWEI-PPP-MIB", "hwPppAuthenticateChapPwType"), ("HUAWEI-PPP-MIB", "hwPppAuthenticateChapPw"), ("HUAWEI-PPP-MIB", "hwPppAuthenticatePapUserName"), ("HUAWEI-PPP-MIB", "hwPppAuthenticatePapPwType"), ("HUAWEI-PPP-MIB", "hwPppAuthenticatePapPw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPppAuthenticateObjectGroup = hwPppAuthenticateObjectGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-PPP-MIB", hwPppAuthenticateMode=hwPppAuthenticateMode, hwPppAuthenticateChapUserName=hwPppAuthenticateChapUserName, hwPppConformance=hwPppConformance, hwPppIfIndex=hwPppIfIndex, hwPppAuthenticatePapPw=hwPppAuthenticatePapPw, hwPppConfigObjectGroup=hwPppConfigObjectGroup, hwPppMruNegType=hwPppMruNegType, hwPppCompliances=hwPppCompliances, PYSNMP_MODULE_ID=hwPppMIB, hwPppGroups=hwPppGroups, hwPppAuthenticateEntry=hwPppAuthenticateEntry, hwPppObjects=hwPppObjects, hwPppConfigEntry=hwPppConfigEntry, hwPppAuthenticateTable=hwPppAuthenticateTable, hwPppAuthenticateChapPw=hwPppAuthenticateChapPw, hwPppAuthenticateChapPwType=hwPppAuthenticateChapPwType, hwPppAuthenticatePapUserName=hwPppAuthenticatePapUserName, hwPppCompliance=hwPppCompliance, hwPppConfigTable=hwPppConfigTable, hwPppAuthenticateObjectGroup=hwPppAuthenticateObjectGroup, hwPppAuthenticatePapPwType=hwPppAuthenticatePapPwType, hwPppMIB=hwPppMIB, hwPppMpIfIndex=hwPppMpIfIndex)
