#
# PySNMP MIB module MGUARDB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MGUARDB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:01:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, MibIdentifier, Counter64, Integer32, IpAddress, ModuleIdentity, NotificationType, enterprises, Counter32, NotificationType, iso, Gauge32, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "MibIdentifier", "Counter64", "Integer32", "IpAddress", "ModuleIdentity", "NotificationType", "enterprises", "Counter32", "NotificationType", "iso", "Gauge32", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
MacAddress, TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
innominate = MibIdentifier((1, 3, 6, 1, 4, 1, 15450))
mGuardb = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2))
mGuardVPN = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1))
mGuardFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2))
mGuardNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3))
mGuardSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 4))
mGuardSNMP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 5))
mGuardNTP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 6))
mGuardUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 7))
mGuardRedundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 9))
mGuardInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10))
mGuardLogging = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 11))
mGuardContFilt = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12))
mGuardBlade = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 13))
mGuardProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 14))
mGuardUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 15))
mGuardVPNMachine = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1, 1))
mGuardVPNMachineCert = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNMachineCert.setStatus('mandatory')
mGuardVPNMachinePrivate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNMachinePrivate.setStatus('mandatory')
mGuardVPNConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2), )
if mibBuilder.loadTexts: mGuardVPNConnectionTable.setStatus('mandatory')
mGuardVPNConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardVPNconIndex"))
if mibBuilder.loadTexts: mGuardVPNConnectionEntry.setStatus('mandatory')
mGuardVPNconIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardVPNconIndex.setStatus('mandatory')
mGuardVPNconName = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNconName.setStatus('mandatory')
mGuardVPNconEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNconEnabled.setStatus('mandatory')
mGuardVPNremGW = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNremGW.setStatus('mandatory')
mGuardVPNconType = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("transport", 1), ("tunnel", 2), ("l2tp-w2k", 3), ("l2tp-ssh", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNconType.setStatus('mandatory')
mGuardVPNlocalNet = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNlocalNet.setStatus('deprecated')
mGuardVPNlocalMask = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNlocalMask.setStatus('deprecated')
mGuardVPNremoteNet = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNremoteNet.setStatus('deprecated')
mGuardVPNremoteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNremoteMask.setStatus('deprecated')
mGuardVPNauthType = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("psk", 1), ("x509", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNauthType.setStatus('mandatory')
mGuardVPNpsk = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNpsk.setStatus('mandatory')
mGuardVPNx509 = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNx509.setStatus('mandatory')
mGuardVPNikeDH = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("all", 1), ("modp1024", 2), ("modp1536", 3), ("modp2048", 4), ("modp3072", 5), ("modp4096", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNikeDH.setStatus('mandatory')
mGuardVPNikeHash = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("md5", 2), ("sha1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNikeHash.setStatus('mandatory')
mGuardVPNipsecHash = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("md5", 2), ("sha1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNipsecHash.setStatus('mandatory')
mGuardVPNikeAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("des", 1), ("tripledes168", 2), ("aes128", 3), ("aes192", 4), ("aes256", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNikeAlg.setStatus('mandatory')
mGuardVPNipsecAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("des", 1), ("tripledes168", 2), ("aes128", 3), ("aes192", 4), ("aes256", 5), ("null", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNipsecAlg.setStatus('mandatory')
mGuardVPNpfs = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("no", 1), ("all", 2), ("modp1024", 3), ("modp1536", 4), ("modp2048", 5), ("modp3072", 6), ("modp4096", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNpfs.setStatus('mandatory')
mGuardVPNconStartUp = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("initiate", 1), ("waitForRemote", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNconStartUp.setStatus('mandatory')
mGuardVPNvirtIPMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dhcp-over-ipsec", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNvirtIPMethod.setStatus('mandatory')
mGuardVPNvirtIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNvirtIP.setStatus('mandatory')
mGuardVPNFWLogDefIn = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWLogDefIn.setStatus('mandatory')
mGuardVPNFWLogDefOut = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWLogDefOut.setStatus('mandatory')
mGuardVPNProtoAH = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNProtoAH.setStatus('mandatory')
mGuardVPNProtoESP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNProtoESP.setStatus('mandatory')
mGuardVPNComp = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNComp.setStatus('mandatory')
mGuardVPNLocalIDMode = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("freeswan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNLocalIDMode.setStatus('mandatory')
mGuardVPNLocalID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNLocalID.setStatus('mandatory')
mGuardVPNRemoteIDMode = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("freeswan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNRemoteIDMode.setStatus('mandatory')
mGuardVPNRemoteID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNRemoteID.setStatus('mandatory')
mGuardVPNIkeLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNIkeLifetime.setStatus('mandatory')
mGuardVPNIpsecLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNIpsecLifetime.setStatus('mandatory')
mGuardVPNRekeyMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNRekeyMargin.setStatus('mandatory')
mGuardVPNRekeyFuzz = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNRekeyFuzz.setStatus('mandatory')
mGuardVPNKeyingTries = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNKeyingTries.setStatus('mandatory')
mGuardVPNRekey = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNRekey.setStatus('mandatory')
mGuardVPNDPDAction = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hold", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDPDAction.setStatus('mandatory')
mGuardVPNDPDDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDPDDelay.setStatus('mandatory')
mGuardVPNDPDTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDPDTimeout.setStatus('mandatory')
mGuardVPNRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 42), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNRowStatus.setStatus('mandatory')
mGuardVPNAggressive = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNAggressive.setStatus('mandatory')
mGuardVPNlocal = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNlocal.setStatus('mandatory')
mGuardVPNremote = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 2, 1, 45), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNremote.setStatus('mandatory')
mGuardVPNFW = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3))
mGuardVPNFWINTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1), )
if mibBuilder.loadTexts: mGuardVPNFWINTable.setStatus('mandatory')
mGuardVPNFWINEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardVPNFWINconIndex"), (0, "MGUARDB-MIB", "mGuardVPNFWINruleIndex"))
if mibBuilder.loadTexts: mGuardVPNFWINEntry.setStatus('mandatory')
mGuardVPNFWINconIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardVPNFWINconIndex.setStatus('mandatory')
mGuardVPNFWINruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardVPNFWINruleIndex.setStatus('mandatory')
mGuardVPNFWINsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINsourceIP.setStatus('mandatory')
mGuardVPNFWINdestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINdestinationIP.setStatus('mandatory')
mGuardVPNFWINsport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINsport.setStatus('mandatory')
mGuardVPNFWINdport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINdport.setStatus('mandatory')
mGuardVPNFWINtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINtarget.setStatus('mandatory')
mGuardVPNFWINproto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINproto.setStatus('mandatory')
mGuardVPNFWINlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINlog.setStatus('mandatory')
mGuardVPNFWINRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINRowStatus.setStatus('mandatory')
mGuardVPNFWINcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWINcomment.setStatus('mandatory')
mGuardVPNFWOUTTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2), )
if mibBuilder.loadTexts: mGuardVPNFWOUTTable.setStatus('mandatory')
mGuardVPNFWOUTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardVPNFWOUTconIndex"), (0, "MGUARDB-MIB", "mGuardVPNFWOUTruleIndex"))
if mibBuilder.loadTexts: mGuardVPNFWOUTEntry.setStatus('mandatory')
mGuardVPNFWOUTconIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardVPNFWOUTconIndex.setStatus('mandatory')
mGuardVPNFWOUTruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardVPNFWOUTruleIndex.setStatus('mandatory')
mGuardVPNFWOUTsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTsourceIP.setStatus('mandatory')
mGuardVPNFWOUTdestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTdestinationIP.setStatus('mandatory')
mGuardVPNFWOUTsport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTsport.setStatus('mandatory')
mGuardVPNFWOUTdport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTdport.setStatus('mandatory')
mGuardVPNFWOUTtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTtarget.setStatus('mandatory')
mGuardVPNFWOUTproto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTproto.setStatus('mandatory')
mGuardVPNFWOUTlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTlog.setStatus('mandatory')
mGuardVPNFWOUTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTRowStatus.setStatus('mandatory')
mGuardVPNFWOUTcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 3, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNFWOUTcomment.setStatus('mandatory')
mGuardVPNDynDNS = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4))
mGuardVPNDynDNSRegister = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1))
mGuardVPNDynDNSReg = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSReg.setStatus('mandatory')
mGuardVPNDynDNSRegInterval = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSRegInterval.setStatus('mandatory')
mGuardVPNDynDNSRegServer = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSRegServer.setStatus('mandatory')
mGuardVPNDynDNSRegLogin = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSRegLogin.setStatus('mandatory')
mGuardVPNDynDNSRegPasswd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSRegPasswd.setStatus('mandatory')
mGuardVPNDynDNSRegProvider = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inominate", 1), ("dyndns", 2), ("dns4biz", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSRegProvider.setStatus('mandatory')
mGuardVPNDynDNSRegHostname = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSRegHostname.setStatus('mandatory')
mGuardVPNDynDNSCheck = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 2))
mGuardVPNDynDNSCheckDo = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSCheckDo.setStatus('mandatory')
mGuardVPNDynDNSCheckRefresh = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 4, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNDynDNSCheckRefresh.setStatus('mandatory')
mGuardVPNL2TP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5))
mGuardVPNL2TPStart = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNL2TPStart.setStatus('mandatory')
mGuardVPNL2TPLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNL2TPLocalIP.setStatus('mandatory')
mGuardVPNL2TPRemoteIPRangeStart = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNL2TPRemoteIPRangeStart.setStatus('mandatory')
mGuardVPNL2TPRemoteIPRangeEnd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNL2TPRemoteIPRangeEnd.setStatus('mandatory')
mGuardVPNL2TPpppdOptTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 5), )
if mibBuilder.loadTexts: mGuardVPNL2TPpppdOptTable.setStatus('mandatory')
mGuardVPNL2TPpppdOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 5, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardVPNL2TPpppdOptIndex"))
if mibBuilder.loadTexts: mGuardVPNL2TPpppdOptEntry.setStatus('mandatory')
mGuardVPNL2TPpppdOptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardVPNL2TPpppdOptIndex.setStatus('mandatory')
mGuardVPNL2TPpppdOptValue = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNL2TPpppdOptValue.setStatus('mandatory')
mGuardVPNL2TPpppdOptRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 1, 5, 5, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNL2TPpppdOptRowStatus.setStatus('mandatory')
mGuardVPNSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6))
mGuardVPNRequireUniqueIDs = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNRequireUniqueIDs.setStatus('mandatory')
mGuardVPNNatTraversal = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNNatTraversal.setStatus('mandatory')
mGuardVPNNatTPortfloating = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNNatTPortfloating.setStatus('mandatory')
mGuardVPNNatTKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNNatTKeepAliveInterval.setStatus('mandatory')
mGuardVPNNatTKeepAliveForce = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNNatTKeepAliveForce.setStatus('mandatory')
mGuardVPNIkeLog = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNIkeLog.setStatus('mandatory')
mGuardVPNHideTos = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNHideTos.setStatus('mandatory')
mGuardVPNmtu = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNmtu.setStatus('mandatory')
mGuardVPNStrictCRLPolicy = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNStrictCRLPolicy.setStatus('mandatory')
mGuardVPNNoCertReqSend = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 1, 6, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardVPNNoCertReqSend.setStatus('mandatory')
mGuardFirewallIncoming = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1))
mGuardFirewallIncomingTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1), )
if mibBuilder.loadTexts: mGuardFirewallIncomingTable.setStatus('mandatory')
mGuardFirewallIncomingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFWINruleIndex"))
if mibBuilder.loadTexts: mGuardFirewallIncomingEntry.setStatus('mandatory')
mGuardFWINruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardFWINruleIndex.setStatus('mandatory')
mGuardFWINsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINsourceIP.setStatus('mandatory')
mGuardFWINdestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINdestinationIP.setStatus('mandatory')
mGuardFWINsport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINsport.setStatus('mandatory')
mGuardFWINdport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINdport.setStatus('mandatory')
mGuardFWINtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINtarget.setStatus('mandatory')
mGuardFWINproto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINproto.setStatus('mandatory')
mGuardFWINlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINlog.setStatus('mandatory')
mGuardFWINRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINRowStatus.setStatus('mandatory')
mGuardFWINcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWINcomment.setStatus('mandatory')
mGuardFirewallINLogDefault = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallINLogDefault.setStatus('mandatory')
mGuardFirewallOutgoing = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2))
mGuardFirewallOutgoingTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1), )
if mibBuilder.loadTexts: mGuardFirewallOutgoingTable.setStatus('mandatory')
mGuardFirewallOutgoingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFWOUTruleIndex"))
if mibBuilder.loadTexts: mGuardFirewallOutgoingEntry.setStatus('mandatory')
mGuardFWOUTruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardFWOUTruleIndex.setStatus('mandatory')
mGuardFWOUTsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTsourceIP.setStatus('mandatory')
mGuardFWOUTdestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTdestinationIP.setStatus('mandatory')
mGuardFWOUTsport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTsport.setStatus('mandatory')
mGuardFWOUTdport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTdport.setStatus('mandatory')
mGuardFWOUTtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTtarget.setStatus('mandatory')
mGuardFWOUTproto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTproto.setStatus('mandatory')
mGuardFWOUTlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTlog.setStatus('mandatory')
mGuardFWOUTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTRowStatus.setStatus('mandatory')
mGuardFWOUTcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWOUTcomment.setStatus('mandatory')
mGuardFirewallOUTLogDefault = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallOUTLogDefault.setStatus('mandatory')
mGuardFirewallPortforwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3))
mGuardFirewallPortforwardTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1), )
if mibBuilder.loadTexts: mGuardFirewallPortforwardTable.setStatus('mandatory')
mGuardFirewallPortforwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFWPORTFORWruleIndex"))
if mibBuilder.loadTexts: mGuardFirewallPortforwardEntry.setStatus('mandatory')
mGuardFWPORTFORWruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardFWPORTFORWruleIndex.setStatus('mandatory')
mGuardFWPORTFORWinIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWinIP.setStatus('mandatory')
mGuardFWPORTFORWoutIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWoutIP.setStatus('mandatory')
mGuardFWPORTFORWinport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWinport.setStatus('mandatory')
mGuardFWPORTFORWoutport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWoutport.setStatus('mandatory')
mGuardFWPORTFORWproto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWproto.setStatus('mandatory')
mGuardFWPORTFORWlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWlog.setStatus('mandatory')
mGuardFWPORTFORWRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWRowStatus.setStatus('mandatory')
mGuardFWPORTFORWsrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWsrcIP.setStatus('mandatory')
mGuardFWPORTFORWsrcport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWsrcport.setStatus('mandatory')
mGuardFWPORTFORWcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 3, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWPORTFORWcomment.setStatus('mandatory')
mGuardFirewallNAT = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2, 4))
mGuardFirewallNATRuleTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 4, 1), )
if mibBuilder.loadTexts: mGuardFirewallNATRuleTable.setStatus('mandatory')
mGuardFirewallNATRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 4, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFWNATruleIndex"))
if mibBuilder.loadTexts: mGuardFirewallNATRuleEntry.setStatus('mandatory')
mGuardFWNATruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardFWNATruleIndex.setStatus('mandatory')
mGuardFWNATIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWNATIP.setStatus('mandatory')
mGuardFWNATRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 4, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWNATRowStatus.setStatus('mandatory')
mGuardFWNATOutIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFWNATOutIP.setStatus('mandatory')
mGuardFirewallExtended = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5))
mGuardFirewallIPConntrackMax = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallIPConntrackMax.setStatus('mandatory')
mGuardFirewallIPSynfloodLimitInt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallIPSynfloodLimitInt.setStatus('mandatory')
mGuardFirewallIPSynfloodLimitExt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallIPSynfloodLimitExt.setStatus('mandatory')
mGuardFirewallICMPLimitInt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallICMPLimitInt.setStatus('mandatory')
mGuardFirewallICMPLimitExt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallICMPLimitExt.setStatus('mandatory')
mGuardFirewallEnableConntrackFTP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallEnableConntrackFTP.setStatus('mandatory')
mGuardFirewallConntrackIRC = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallConntrackIRC.setStatus('mandatory')
mGuardFirewallConntrackPPTP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallConntrackPPTP.setStatus('mandatory')
mGuardFirewallARPLimitInt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallARPLimitInt.setStatus('mandatory')
mGuardFirewallARPLimitExt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallARPLimitExt.setStatus('mandatory')
mGuardFirewallICMPPolicy = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("drop", 1), ("ping", 2), ("all", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallICMPPolicy.setStatus('mandatory')
mGuardFirewallConntrackH323 = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallConntrackH323.setStatus('mandatory')
mGuardFirewallIpUncleanMatch = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 5, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallIpUncleanMatch.setStatus('mandatory')
mGuardFirewall11NAT = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6))
mGuardFirewall11NATRuleTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1), )
if mibBuilder.loadTexts: mGuardFirewall11NATRuleTable.setStatus('mandatory')
mGuardFirewall11NATRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFW11NATruleIndex"))
if mibBuilder.loadTexts: mGuardFirewall11NATRuleEntry.setStatus('mandatory')
mGuardFW11NATruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardFW11NATruleIndex.setStatus('mandatory')
mGuardFW11NATLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFW11NATLocal.setStatus('mandatory')
mGuardFW11NATRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFW11NATRemote.setStatus('mandatory')
mGuardFW11NATMask = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFW11NATMask.setStatus('mandatory')
mGuardFW11NATLog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFW11NATLog.setStatus('mandatory')
mGuardFW11NATRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 6, 1, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFW11NATRowStatus.setStatus('mandatory')
mGuardFirewallUserFW = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7))
mGuardFirewallUserFWEnabled = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWEnabled.setStatus('mandatory')
mGuardFirewallUserFWTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2), )
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateTable.setStatus('mandatory')
mGuardFirewallUserFWTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFirewallUserFWTemplateIndex"))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateEntry.setStatus('mandatory')
mGuardFirewallUserFWTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateIndex.setStatus('mandatory')
mGuardFirewallUserFWTemplateEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateEnabled.setStatus('mandatory')
mGuardFirewallUserFWTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateName.setStatus('mandatory')
mGuardFirewallUserFWTemplateComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateComment.setStatus('mandatory')
mGuardFirewallUserFWTemplateTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateTimeout.setStatus('mandatory')
mGuardFirewallUserFWTemplateSrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateSrcIP.setStatus('mandatory')
mGuardFirewallUserFWTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 2, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRowStatus.setStatus('mandatory')
mGuardFirewallUserFWTemplateUserTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 3), )
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateUserTable.setStatus('mandatory')
mGuardFirewallUserFWTemplateUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 3, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFirewallUserFWTemplateUserTemplateIndex"), (0, "MGUARDB-MIB", "mGuardFirewallUserFWTemplateUserIndex"))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateUserEntry.setStatus('mandatory')
mGuardFirewallUserFWTemplateUserTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateUserTemplateIndex.setStatus('mandatory')
mGuardFirewallUserFWTemplateUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateUserIndex.setStatus('mandatory')
mGuardFirewallUserFWTemplateUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateUserName.setStatus('mandatory')
mGuardFirewallUserFWTemplateUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 3, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateUserRowStatus.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4), )
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleTable.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFirewallUserFWTemplateRuleTemplateIndex"), (0, "MGUARDB-MIB", "mGuardFirewallUserFWTemplateRuleIndex"))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleEntry.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleTemplateIndex.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleIndex.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleProto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleProto.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleSrcPort.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleDstPort.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleDstIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleDstIP.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleLog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleLog.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleComment.setStatus('mandatory')
mGuardFirewallUserFWTemplateRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 2, 7, 4, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardFirewallUserFWTemplateRuleRowStatus.setStatus('mandatory')
mGuardNetworkMode = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("stealth", 1), ("router", 2), ("pppoe", 3), ("pptp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkMode.setStatus('mandatory')
mGuardStealth = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2))
mGuardStealthIPConfMode = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoDetect", 1), ("static", 2), ("multi", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthIPConfMode.setStatus('mandatory')
mGuardStealthIPConfStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2))
mGuardStealthStaticIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthStaticIP.setStatus('mandatory')
mGuardStealthStaticMAC = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthStaticMAC.setStatus('mandatory')
mGuardStealthStaticActivate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("valuescached", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthStaticActivate.setStatus('mandatory')
mGuardStealthManageIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthManageIP.setStatus('mandatory')
mGuardStealthManageNetmask = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthManageNetmask.setStatus('mandatory')
mGuardStealthManageGateway = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthManageGateway.setStatus('mandatory')
mGuardStealthManageActivate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("valuescached", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthManageActivate.setStatus('mandatory')
mGuardStealthHiDiscoveryRelay = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthHiDiscoveryRelay.setStatus('mandatory')
mGuardStealthHiDiscoveryState = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readwrite", 1), ("disabled", 2), ("readonly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthHiDiscoveryState.setStatus('mandatory')
mGuardStealthL2Filter = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5))
mGuardL2FilterInternTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1), )
if mibBuilder.loadTexts: mGuardL2FilterInternTable.setStatus('mandatory')
mGuardL2FilterInternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardL2FilterInternRuleIndex"))
if mibBuilder.loadTexts: mGuardL2FilterInternEntry.setStatus('mandatory')
mGuardL2FilterInternRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardL2FilterInternRuleIndex.setStatus('mandatory')
mGuardL2FilterInternRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterInternRowStatus.setStatus('mandatory')
mGuardL2FilterInternSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterInternSrcMac.setStatus('mandatory')
mGuardL2FilterInternDstMac = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterInternDstMac.setStatus('mandatory')
mGuardL2FilterInternEthType = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterInternEthType.setStatus('mandatory')
mGuardL2FilterInternTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterInternTarget.setStatus('mandatory')
mGuardL2FilterInternComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterInternComment.setStatus('mandatory')
mGuardL2FilterExternTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2), )
if mibBuilder.loadTexts: mGuardL2FilterExternTable.setStatus('mandatory')
mGuardL2FilterExternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardL2FilterExternRuleIndex"))
if mibBuilder.loadTexts: mGuardL2FilterExternEntry.setStatus('mandatory')
mGuardL2FilterExternRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardL2FilterExternRuleIndex.setStatus('mandatory')
mGuardL2FilterExternRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterExternRowStatus.setStatus('mandatory')
mGuardL2FilterExternSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterExternSrcMac.setStatus('mandatory')
mGuardL2FilterExternDstMac = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterExternDstMac.setStatus('mandatory')
mGuardL2FilterExternEthType = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterExternEthType.setStatus('mandatory')
mGuardL2FilterExternTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterExternTarget.setStatus('mandatory')
mGuardL2FilterExternComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardL2FilterExternComment.setStatus('mandatory')
mGuardStealthL2ForwardGVRP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthL2ForwardGVRP.setStatus('mandatory')
mGuardStealthL2ForwardSTP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthL2ForwardSTP.setStatus('mandatory')
mGuardStealthL2ForwardDHCP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthL2ForwardDHCP.setStatus('mandatory')
mGuardStealthInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 6))
mGuardStealthMTU = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthMTU.setStatus('mandatory')
mGuardStealthVlanMTU = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthVlanMTU.setStatus('mandatory')
mGuardStealthManageUseVLAN = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthManageUseVLAN.setStatus('mandatory')
mGuardStealthManageVLanID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 2, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardStealthManageVLanID.setStatus('mandatory')
mGuardRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3))
mGuardRouterLocal = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1))
mGuardRouterLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterLocalIP.setStatus('mandatory')
mGuardRouterLocalNetmask = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterLocalNetmask.setStatus('mandatory')
mGuardRouterLocalActivate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("valuescached", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterLocalActivate.setStatus('mandatory')
mGuardRouterLocalAliasesTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4), )
if mibBuilder.loadTexts: mGuardRouterLocalAliasesTable.setStatus('mandatory')
mGuardRouterLocalAliasesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardLocalAliasIndex"))
if mibBuilder.loadTexts: mGuardRouterLocalAliasesEntry.setStatus('mandatory')
mGuardLocalAliasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardLocalAliasIndex.setStatus('mandatory')
mGuardLocalAliasIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalAliasIpAddress.setStatus('mandatory')
mGuardLocalAliasNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalAliasNetmask.setStatus('mandatory')
mGuardLocalAliasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalAliasRowStatus.setStatus('mandatory')
mGuardLocalAliasUseVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalAliasUseVLAN.setStatus('mandatory')
mGuardLocalAliasVLANid = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalAliasVLANid.setStatus('mandatory')
mGuardLocalRoutesTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 5), )
if mibBuilder.loadTexts: mGuardLocalRoutesTable.setStatus('mandatory')
mGuardLocalRoutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 5, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardLocalRouteIndex"))
if mibBuilder.loadTexts: mGuardLocalRoutesEntry.setStatus('mandatory')
mGuardLocalRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardLocalRouteIndex.setStatus('mandatory')
mGuardLocalRouteNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalRouteNetwork.setStatus('mandatory')
mGuardLocalRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalRouteGateway.setStatus('mandatory')
mGuardLocalRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 5, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLocalRouteRowStatus.setStatus('mandatory')
mGuardRouterLocalDevMTU = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterLocalDevMTU.setStatus('mandatory')
mGuardRouterLocalUseVLAN = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterLocalUseVLAN.setStatus('mandatory')
mGuardRouterLocalVlanId = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterLocalVlanId.setStatus('mandatory')
mGuardRouterLocalDevVlanMTU = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterLocalDevVlanMTU.setStatus('mandatory')
mGuardRouterExtern = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2))
mGuardRouterExternDHCP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternDHCP.setStatus('mandatory')
mGuardRouterExternStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2))
mGuardRouterExternStaticIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternStaticIP.setStatus('mandatory')
mGuardRouterExternStaticNetmask = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternStaticNetmask.setStatus('mandatory')
mGuardRouterExternStaticGateway = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternStaticGateway.setStatus('mandatory')
mGuardRouterExternActivate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("valuescached", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternActivate.setStatus('mandatory')
mGuardRouterExternDevMTU = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternDevMTU.setStatus('mandatory')
mGuardRouterExternUseVLAN = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternUseVLAN.setStatus('mandatory')
mGuardRouterExternVlanId = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternVlanId.setStatus('mandatory')
mGuardRouterExternDevVlanMTU = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterExternDevVlanMTU.setStatus('mandatory')
mGuardRouterExternAliasesTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5), )
if mibBuilder.loadTexts: mGuardRouterExternAliasesTable.setStatus('mandatory')
mGuardRouterExternAliasesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardExternAliasIndex"))
if mibBuilder.loadTexts: mGuardRouterExternAliasesEntry.setStatus('mandatory')
mGuardExternAliasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardExternAliasIndex.setStatus('mandatory')
mGuardExternAliasIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternAliasIpAddress.setStatus('mandatory')
mGuardExternAliasNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternAliasNetmask.setStatus('mandatory')
mGuardExternAliasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternAliasRowStatus.setStatus('mandatory')
mGuardExternAliasUseVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternAliasUseVLAN.setStatus('mandatory')
mGuardExternAliasVLANid = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternAliasVLANid.setStatus('mandatory')
mGuardExternRoutesTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 6), )
if mibBuilder.loadTexts: mGuardExternRoutesTable.setStatus('mandatory')
mGuardExternRoutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 6, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardExternRouteIndex"))
if mibBuilder.loadTexts: mGuardExternRoutesEntry.setStatus('mandatory')
mGuardExternRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardExternRouteIndex.setStatus('mandatory')
mGuardExternRouteNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternRouteNetwork.setStatus('mandatory')
mGuardExternRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternRouteGateway.setStatus('mandatory')
mGuardExternRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 2, 2, 6, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardExternRouteRowStatus.setStatus('mandatory')
mGuardRouterHiDiscovery = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 3))
mGuardRouterHiDiscoveryIntern = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readwrite", 1), ("disabled", 2), ("readonly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterHiDiscoveryIntern.setStatus('mandatory')
mGuardRouterHiDiscoveryExtern = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readwrite", 1), ("disabled", 2), ("readonly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterHiDiscoveryExtern.setStatus('mandatory')
mGuardPPPOE = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4))
mGuardPPPOELogin = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOELogin.setStatus('mandatory')
mGuardPPPOEPasswd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOEPasswd.setStatus('mandatory')
mGuardPPPOEMSS = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOEMSS.setStatus('mandatory')
mGuardPPPOEServiceName = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOEServiceName.setStatus('obsolete')
mGuardPPPOEAccessConcentName = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOEAccessConcentName.setStatus('obsolete')
mGuardPPPOEHostUnique = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOEHostUnique.setStatus('obsolete')
mGuardPPPOEpppdOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 7), )
if mibBuilder.loadTexts: mGuardPPPOEpppdOptionsTable.setStatus('mandatory')
mGuardPPPOEpppdOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 7, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardPPPOEpppdOptionsIndex"))
if mibBuilder.loadTexts: mGuardPPPOEpppdOptionsEntry.setStatus('mandatory')
mGuardPPPOEpppdOptionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardPPPOEpppdOptionsIndex.setStatus('mandatory')
mGuardPPPOEpppdOptionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOEpppdOptionsValue.setStatus('mandatory')
mGuardPPPOEpppdOptionsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 4, 7, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPPOEpppdOptionsRowStatus.setStatus('mandatory')
mGuardDHCP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5))
mGuardDHCPInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1))
mGuardDHCPExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2))
mGuardDHCPIntStart = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("enabled-relay", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntStart.setStatus('mandatory')
mGuardDHCPIntPoolEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntPoolEnable.setStatus('mandatory')
mGuardDHCPIntRangeStart = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRangeStart.setStatus('mandatory')
mGuardDHCPIntRangeEnd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRangeEnd.setStatus('mandatory')
mGuardDHCPIntNetmask = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntNetmask.setStatus('mandatory')
mGuardDHCPIntGateway = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntGateway.setStatus('mandatory')
mGuardDHCPIntDnsServer = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntDnsServer.setStatus('mandatory')
mGuardDHCPIntStaticTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 8), )
if mibBuilder.loadTexts: mGuardDHCPIntStaticTable.setStatus('mandatory')
mGuardDHCPIntStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 8, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardDHCPIntStaticIndex"))
if mibBuilder.loadTexts: mGuardDHCPIntStaticEntry.setStatus('mandatory')
mGuardDHCPIntStaticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardDHCPIntStaticIndex.setStatus('mandatory')
mGuardDHCPIntStaticMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 8, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntStaticMAC.setStatus('mandatory')
mGuardDHCPIntStaticIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 8, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntStaticIP.setStatus('mandatory')
mGuardDHCPIntStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 8, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntStaticRowStatus.setStatus('mandatory')
mGuardDHCPIntBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntBroadcast.setStatus('mandatory')
mGuardDHCPIntWINS = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntWINS.setStatus('mandatory')
mGuardDHCPIntLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntLeaseTime.setStatus('mandatory')
mGuardDHCPIntRelayServerTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 50), )
if mibBuilder.loadTexts: mGuardDHCPIntRelayServerTable.setStatus('mandatory')
mGuardDHCPIntRelayServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 50, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardDHCPIntRelayServerIndex"))
if mibBuilder.loadTexts: mGuardDHCPIntRelayServerEntry.setStatus('mandatory')
mGuardDHCPIntRelayServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardDHCPIntRelayServerIndex.setStatus('mandatory')
mGuardDHCPIntRelayServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 50, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayServerIP.setStatus('mandatory')
mGuardDHCPIntRelayRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 50, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayRowStatus.setStatus('mandatory')
mGuardDHCPIntRelayMaxHop = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 51), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayMaxHop.setStatus('mandatory')
mGuardDHCPIntRelayAppend = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 52), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayAppend.setStatus('mandatory')
mGuardDHCPIntRelayAppendLimit = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 53), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayAppendLimit.setStatus('mandatory')
mGuardDHCPIntRelayCircuitInfo = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("if-idx", 2), ("if-name", 3), ("if-mac", 4), ("if-ip", 5), ("sysname", 6), ("text", 7), ("if-prefixed-ip", 8), ("rs2", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayCircuitInfo.setStatus('mandatory')
mGuardDHCPIntRelayCircuitText = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayCircuitText.setStatus('mandatory')
mGuardDHCPIntRelayRemoteInfo = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("if-idx", 2), ("if-name", 3), ("if-mac", 4), ("if-ip", 5), ("sysname", 6), ("text", 7), ("if-prefixed-ip", 8), ("rs2", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayRemoteInfo.setStatus('mandatory')
mGuardDHCPIntRelayRemoteText = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 1, 57), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPIntRelayRemoteText.setStatus('mandatory')
mGuardDHCPExtStart = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("enabled-relay", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtStart.setStatus('mandatory')
mGuardDHCPExtPoolEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtPoolEnable.setStatus('mandatory')
mGuardDHCPExtRangeStart = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRangeStart.setStatus('mandatory')
mGuardDHCPExtRangeEnd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRangeEnd.setStatus('mandatory')
mGuardDHCPExtNetmask = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtNetmask.setStatus('mandatory')
mGuardDHCPExtGateway = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtGateway.setStatus('mandatory')
mGuardDHCPExtDnsServer = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtDnsServer.setStatus('mandatory')
mGuardDHCPExtStaticTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 8), )
if mibBuilder.loadTexts: mGuardDHCPExtStaticTable.setStatus('mandatory')
mGuardDHCPExtStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 8, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardDHCPExtStaticIndex"))
if mibBuilder.loadTexts: mGuardDHCPExtStaticEntry.setStatus('mandatory')
mGuardDHCPExtStaticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardDHCPExtStaticIndex.setStatus('mandatory')
mGuardDHCPExtStaticMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 8, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtStaticMAC.setStatus('mandatory')
mGuardDHCPExtStaticIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 8, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtStaticIP.setStatus('mandatory')
mGuardDHCPExtStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 8, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtStaticRowStatus.setStatus('mandatory')
mGuardDHCPExtBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtBroadcast.setStatus('mandatory')
mGuardDHCPExtWINS = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtWINS.setStatus('mandatory')
mGuardDHCPExtLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtLeaseTime.setStatus('mandatory')
mGuardDHCPExtRelayServerTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 50), )
if mibBuilder.loadTexts: mGuardDHCPExtRelayServerTable.setStatus('mandatory')
mGuardDHCPExtRelayServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 50, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardDHCPExtRelayServerIndex"))
if mibBuilder.loadTexts: mGuardDHCPExtRelayServerEntry.setStatus('mandatory')
mGuardDHCPExtRelayServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardDHCPExtRelayServerIndex.setStatus('mandatory')
mGuardDHCPExtRelayServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 50, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayServerIP.setStatus('mandatory')
mGuardDHCPExtRelayRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 50, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayRowStatus.setStatus('mandatory')
mGuardDHCPExtRelayMaxHop = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 51), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayMaxHop.setStatus('mandatory')
mGuardDHCPExtRelayAppend = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 52), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayAppend.setStatus('mandatory')
mGuardDHCPExtRelayAppendLimit = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 53), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayAppendLimit.setStatus('mandatory')
mGuardDHCPExtRelayCircuitInfo = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("if-idx", 2), ("if-name", 3), ("if-mac", 4), ("if-ip", 5), ("sysname", 6), ("text", 7), ("if-prefixed-ip", 8), ("rs2", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayCircuitInfo.setStatus('mandatory')
mGuardDHCPExtRelayCircuitText = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayCircuitText.setStatus('mandatory')
mGuardDHCPExtRelayRemoteInfo = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("if-idx", 2), ("if-name", 3), ("if-mac", 4), ("if-ip", 5), ("sysname", 6), ("text", 7), ("if-prefixed-ip", 8), ("rs2", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayRemoteInfo.setStatus('mandatory')
mGuardDHCPExtRelayRemoteText = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 5, 2, 57), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDHCPExtRelayRemoteText.setStatus('mandatory')
mGuardDNS = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6))
mGuardDNSSearchPath = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDNSSearchPath.setStatus('mandatory')
mGuardDNSServerType = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("root", 1), ("provider", 2), ("user", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDNSServerType.setStatus('mandatory')
mGuardDNSUserDefinedServerTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 3), )
if mibBuilder.loadTexts: mGuardDNSUserDefinedServerTable.setStatus('mandatory')
mGuardDNSUserDefinedServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 3, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuarddnsServerIndex"))
if mibBuilder.loadTexts: mGuardDNSUserDefinedServerEntry.setStatus('mandatory')
mGuarddnsServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuarddnsServerIndex.setStatus('mandatory')
mGuarddnsServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuarddnsServerIP.setStatus('mandatory')
mGuarddnsServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuarddnsServerRowStatus.setStatus('mandatory')
mGuardDNSCacheEnabled = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardDNSCacheEnabled.setStatus('mandatory')
mGuardNetworkStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7))
mGuardNetworkStatMode = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatMode.setStatus('mandatory')
mGuardNetworkStatExtIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatExtIP.setStatus('mandatory')
mGuardNetworkStatGateway = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatGateway.setStatus('mandatory')
mGuardNetworkStatVPN = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatVPN.setStatus('mandatory')
mGuardNetworkStatDynIPReg = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatDynIPReg.setStatus('mandatory')
mGuardNetworkStatHTTPSRemAccess = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatHTTPSRemAccess.setStatus('mandatory')
mGuardNetworkStatSSHRemoteAccess = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatSSHRemoteAccess.setStatus('mandatory')
mGuardNetworkSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkSoftwareVersion.setStatus('mandatory')
mGuardNetworkStatUptime = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatUptime.setStatus('mandatory')
mGuardNetworkStatLanguage = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 7, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNetworkStatLanguage.setStatus('mandatory')
mGuardHostname = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHostname.setStatus('mandatory')
mGuardHostnameMode = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userDefined", 1), ("providerDefined", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHostnameMode.setStatus('mandatory')
mGuardPPTP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10))
mGuardPPTPLogin = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPTPLogin.setStatus('mandatory')
mGuardPPTPassword = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPTPassword.setStatus('mandatory')
mGuardPPTPLocalIPMode = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dhcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPTPLocalIPMode.setStatus('mandatory')
mGuardPPTPLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPTPLocalIP.setStatus('mandatory')
mGuardPPTPModemIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPTPModemIP.setStatus('mandatory')
mGuardPPTPpppdOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 6), )
if mibBuilder.loadTexts: mGuardPPTPpppdOptionsTable.setStatus('mandatory')
mGuardPPTPpppdOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 6, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardPPTPpppdOptionsIndex"))
if mibBuilder.loadTexts: mGuardPPTPpppdOptionsEntry.setStatus('mandatory')
mGuardPPTPpppdOptionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardPPTPpppdOptionsIndex.setStatus('mandatory')
mGuardPPTPpppdOptionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPTPpppdOptionsValue.setStatus('mandatory')
mGuardPPTPpppdOptionsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 10, 6, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardPPTPpppdOptionsRowStatus.setStatus('mandatory')
mGuardSerial = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11))
mGuardSerialBaud = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialBaud.setStatus('mandatory')
mGuardSerialHWHandshakeEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialHWHandshakeEnable.setStatus('mandatory')
mGuardSerialPPP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3))
mGuardSerialPPPEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPEnable.setStatus('mandatory')
mGuardSerialPPPLogin = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPLogin.setStatus('mandatory')
mGuardSerialPPPPasswd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPPasswd.setStatus('mandatory')
mGuardSerialPPPLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPLocalIP.setStatus('mandatory')
mGuardSerialPPPRemoteIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPRemoteIP.setStatus('mandatory')
mGuardSerialPPPFWIN = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6))
mGuardSerialPPPFWINTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1), )
if mibBuilder.loadTexts: mGuardSerialPPPFWINTable.setStatus('mandatory')
mGuardSerialPPPFWINEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardFWINruleIndex"))
if mibBuilder.loadTexts: mGuardSerialPPPFWINEntry.setStatus('mandatory')
mGuardSerialPPPFWINruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardSerialPPPFWINruleIndex.setStatus('mandatory')
mGuardSerialPPPFWINsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINsourceIP.setStatus('mandatory')
mGuardSerialPPPFWINdestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINdestinationIP.setStatus('mandatory')
mGuardSerialPPPFWINsport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINsport.setStatus('mandatory')
mGuardSerialPPPFWINdport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINdport.setStatus('mandatory')
mGuardSerialPPPFWINtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINtarget.setStatus('mandatory')
mGuardSerialPPPFWINproto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINproto.setStatus('mandatory')
mGuardSerialPPPFWINlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINlog.setStatus('mandatory')
mGuardSerialPPPFWINRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINRowStatus.setStatus('mandatory')
mGuardSerialPPPFWINcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINcomment.setStatus('mandatory')
mGuardSerialPPPFWINLogDefault = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWINLogDefault.setStatus('mandatory')
mGuardSerialPPPFWOUT = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7))
mGuardSerialPPPFWOUTTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1), )
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTTable.setStatus('mandatory')
mGuardSerialPPPFWOUTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardSerialPPPFWOUTruleIndex"))
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTEntry.setStatus('mandatory')
mGuardSerialPPPFWOUTruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTruleIndex.setStatus('mandatory')
mGuardSerialPPPFWOUTsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTsourceIP.setStatus('mandatory')
mGuardSerialPPPFWOUTtargetIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTtargetIP.setStatus('mandatory')
mGuardSerialPPPFWOUTsport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTsport.setStatus('mandatory')
mGuardSerialPPPFWOUTdport = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTdport.setStatus('mandatory')
mGuardSerialPPPFWOUTtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTtarget.setStatus('mandatory')
mGuardSerialPPPFWOUTproto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTproto.setStatus('mandatory')
mGuardSerialPPPFWOUTlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTlog.setStatus('mandatory')
mGuardSerialPPPFWOUTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTRowStatus.setStatus('mandatory')
mGuardSerialPPPFWOUTcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTcomment.setStatus('mandatory')
mGuardSerialPPPFWOUTLogDefault = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 11, 3, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSerialPPPFWOUTLogDefault.setStatus('mandatory')
mGuardArpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 3, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardArpTimeout.setStatus('mandatory')
mGuardPasswords = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 4, 1))
mGuardRootPassword = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRootPassword.setStatus('mandatory')
mGuardAdminPassword = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardAdminPassword.setStatus('mandatory')
mGuardUserPassword = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUserPassword.setStatus('mandatory')
mGuardUserPwdEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUserPwdEnable.setStatus('mandatory')
mGuardHTTPSRemoteAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2))
mGuardHTTPSRemoteEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSRemoteEnable.setStatus('mandatory')
mGuardHTTPSRemotePort = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSRemotePort.setStatus('mandatory')
mGuardHTTPSRemoteFWRuleTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3), )
if mibBuilder.loadTexts: mGuardHTTPSRemoteFWRuleTable.setStatus('mandatory')
mGuardHTTPSRemoteFWRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardHTTPSFWruleIndex"))
if mibBuilder.loadTexts: mGuardHTTPSRemoteFWRuleEntry.setStatus('mandatory')
mGuardHTTPSFWruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardHTTPSFWruleIndex.setStatus('mandatory')
mGuardHTTPSFWsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSFWsourceIP.setStatus('mandatory')
mGuardHTTPSFWinterface = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("extern", 1), ("intern", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSFWinterface.setStatus('mandatory')
mGuardHTTPSFWtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSFWtarget.setStatus('mandatory')
mGuardHTTPSFWlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSFWlog.setStatus('mandatory')
mGuardHTTPSFWRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSFWRowStatus.setStatus('mandatory')
mGuardHTTPSFWcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 2, 3, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardHTTPSFWcomment.setStatus('mandatory')
mGuardSSHRemoteAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3))
mGuardSSHRemoteEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHRemoteEnable.setStatus('mandatory')
mGuardSSHRemotePort = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHRemotePort.setStatus('mandatory')
mGuardSSHRemoteFWRuleTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3), )
if mibBuilder.loadTexts: mGuardSSHRemoteFWRuleTable.setStatus('mandatory')
mGuardSSHRemoteFWRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardSSHFWruleIndex"))
if mibBuilder.loadTexts: mGuardSSHRemoteFWRuleEntry.setStatus('mandatory')
mGuardSSHFWruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardSSHFWruleIndex.setStatus('mandatory')
mGuardSSHFWsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHFWsourceIP.setStatus('mandatory')
mGuardSSHFWinterface = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("extern", 1), ("intern", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHFWinterface.setStatus('mandatory')
mGuardSSHFWtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHFWtarget.setStatus('mandatory')
mGuardSSHFWlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHFWlog.setStatus('mandatory')
mGuardSSHFWRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHFWRowStatus.setStatus('mandatory')
mGuardSSHFWcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 3, 3, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSSHFWcomment.setStatus('mandatory')
mGuardWebInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 4, 4))
mGuardWebInterfaceLanguage = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("automatic", 1), ("english", 2), ("german", 3), ("japanese", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardWebInterfaceLanguage.setStatus('mandatory')
mGuardWebInterfaceSessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardWebInterfaceSessionTimeout.setStatus('mandatory')
mGuardWebInterfaceApplyButtonScope = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("page", 1), ("session", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardWebInterfaceApplyButtonScope.setStatus('mandatory')
mGuardSysProduct = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 51001, 51002, 51003, 51011, 51012, 51013, 51020, 51021, 51030, 51031, 51032, 51033, 51040, 51044, 51052, 51053, 51060, 51062, 51063))).clone(namedValues=NamedValues(("unknown", 1), ("mGuard-smart-pr", 51001), ("mGuard-core-266", 51002), ("mGuard-smart-gw-266", 51003), ("mGuard-smart-enxl", 51011), ("mGuard-core-533", 51012), ("mGuard-smart-gw-533", 51013), ("mGuard-smart", 51020), ("mGuard-smart-en", 51021), ("mGuard-pci", 51030), ("mGuard-pci-pr", 51031), ("mGuard-pci-en", 51032), ("mGuard-pci-enxl", 51033), ("mGuard-industrial-enfw", 51040), ("mGuard-industrial-enxl", 51044), ("mGuard-blade-en", 51052), ("mGuard-blade-enxl", 51053), ("mGuard-delta", 51060), ("mGuard-delta-en", 51062), ("mGuard-delta-enxl", 51063)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardSysProduct.setStatus('mandatory')
mGuardHardwareInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5))
mGuardHardware = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardHardware.setStatus('mandatory')
mGuardCPU = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardCPU.setStatus('mandatory')
mGuardCPUFamily = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardCPUFamily.setStatus('mandatory')
mGuardCPUStepping = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardCPUStepping.setStatus('mandatory')
mGuardCPUSpeed = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardCPUSpeed.setStatus('mandatory')
mGuardSystemTemperature = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardSystemTemperature.setStatus('mandatory')
mGuardUptime = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardUptime.setStatus('mandatory')
mGuardUSMem = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardUSMem.setStatus('mandatory')
mGuardMAC1 = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardMAC1.setStatus('mandatory')
mGuardMAC2 = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardMAC2.setStatus('mandatory')
mGuardMAC3 = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardMAC3.setStatus('mandatory')
mGuardSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardSerialNumber.setStatus('mandatory')
mGuardVerParSet = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardVerParSet.setStatus('mandatory')
mGuardProductName = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardProductName.setStatus('mandatory')
mGuardOEMName = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardOEMName.setStatus('mandatory')
mGuardOEMSerial = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardOEMSerial.setStatus('mandatory')
mGuardManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardManufacturer.setStatus('mandatory')
mGuardManuDate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardManuDate.setStatus('mandatory')
mGuardBootLoader = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBootLoader.setStatus('mandatory')
mGuardHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardHardwareVersion.setStatus('mandatory')
mGuardRescueSystem = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardRescueSystem.setStatus('mandatory')
mGuardProdSoft = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 5, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardProdSoft.setStatus('mandatory')
mGuardVersions = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7))
mGuardVersion = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardVersion.setStatus('mandatory')
mGuardBaseVersion = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBaseVersion.setStatus('mandatory')
mGuardUpdates = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardUpdates.setStatus('mandatory')
mGuardPackageVersionTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 4), )
if mibBuilder.loadTexts: mGuardPackageVersionTable.setStatus('mandatory')
mGuardPackageVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 4, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardPkgIndex"))
if mibBuilder.loadTexts: mGuardPackageVersionEntry.setStatus('mandatory')
mGuardPkgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: mGuardPkgIndex.setStatus('mandatory')
mGuardPkgName = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardPkgName.setStatus('mandatory')
mGuardPkgVerNum = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardPkgVerNum.setStatus('mandatory')
mGuardPkgVerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardPkgVerVersion.setStatus('mandatory')
mGuardPkgVerFlavour = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 4, 7, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardPkgVerFlavour.setStatus('mandatory')
mGuardAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardAction.setStatus('mandatory')
mGuardSNMPenableV3 = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPenableV3.setStatus('mandatory')
mGuardSNMPenableV1 = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPenableV1.setStatus('mandatory')
mGuardSNMPport = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPport.setStatus('mandatory')
mGuardSNMPv1ROCommunity = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPv1ROCommunity.setStatus('mandatory')
mGuardSNMPv1RWCommunity = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPv1RWCommunity.setStatus('mandatory')
mGuardSNMPFWRuleTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6), )
if mibBuilder.loadTexts: mGuardSNMPFWRuleTable.setStatus('mandatory')
mGuardSNMPFWRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardSNMPFWruleIndex"))
if mibBuilder.loadTexts: mGuardSNMPFWRuleEntry.setStatus('mandatory')
mGuardSNMPFWruleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardSNMPFWruleIndex.setStatus('mandatory')
mGuardSNMPFWsourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPFWsourceIP.setStatus('mandatory')
mGuardSNMPFWinterface = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("extern", 1), ("intern", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPFWinterface.setStatus('mandatory')
mGuardSNMPFWtarget = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("reject", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPFWtarget.setStatus('mandatory')
mGuardSNMPFWlog = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPFWlog.setStatus('mandatory')
mGuardSNMPFWRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPFWRowStatus.setStatus('mandatory')
mGuardSNMPFWcomment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 6, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPFWcomment.setStatus('mandatory')
mGuardSNMPTrapReceiverTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 5, 7), )
if mibBuilder.loadTexts: mGuardSNMPTrapReceiverTable.setStatus('mandatory')
mGuardSNMPTrapReceiverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 5, 7, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardSNMPTrapReceiverIndex"))
if mibBuilder.loadTexts: mGuardSNMPTrapReceiverEntry.setStatus('mandatory')
mGuardSNMPTrapReceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: mGuardSNMPTrapReceiverIndex.setStatus('mandatory')
mGuardSNMPTrapReceiverCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPTrapReceiverCommunity.setStatus('mandatory')
mGuardSNMPTrapReceiverIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 7, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPTrapReceiverIPAddress.setStatus('mandatory')
mGuardSNMPTrapReceiverName = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPTrapReceiverName.setStatus('mandatory')
mGuardSNMPTrapReceiverRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 5, 7, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPTrapReceiverRowStatus.setStatus('mandatory')
mGuardSNMPTrapConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8))
mGuardSNMPAuthenticationTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPAuthenticationTrapFlag.setStatus('mandatory')
mGuardSNMPLinkUpDownTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPLinkUpDownTrapFlag.setStatus('mandatory')
mGuardSNMPColdStartTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPColdStartTrapFlag.setStatus('mandatory')
mGuardSNMPTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPTrapFlag.setStatus('mandatory')
mGuardSNMPChassisTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPChassisTrapFlag.setStatus('mandatory')
mGuardSNMPAgentTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPAgentTrapFlag.setStatus('mandatory')
mGuardSNMPAvFailTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPAvFailTrapFlag.setStatus('mandatory')
mGuardSNMPAvInfoTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPAvInfoTrapFlag.setStatus('mandatory')
mGuardSNMPBladeStateTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPBladeStateTrapFlag.setStatus('mandatory')
mGuardSNMPBladeConfigTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPBladeConfigTrapFlag.setStatus('mandatory')
mGuardSNMPRouterRedundancyStatusFlag = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 5, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardSNMPRouterRedundancyStatusFlag.setStatus('mandatory')
mGuardNTPactivate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardNTPactivate.setStatus('mandatory')
mGuardNTPtimestamp = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardNTPtimestamp.setStatus('mandatory')
mGuardNTPServerTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 6, 3), )
if mibBuilder.loadTexts: mGuardNTPServerTable.setStatus('mandatory')
mGuardNTPTimezone = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 6, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardNTPTimezone.setStatus('mandatory')
mGuardNTPStatus = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 6, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardNTPStatus.setStatus('mandatory')
mGuardNTPServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 6, 3, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardNTPServerIndex"))
if mibBuilder.loadTexts: mGuardNTPServerEntry.setStatus('mandatory')
mGuardNTPServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: mGuardNTPServerIndex.setStatus('mandatory')
mGuardNTPServerHost = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 6, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardNTPServerHost.setStatus('mandatory')
mGuardNTPServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 6, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardNTPServerRowStatus.setStatus('mandatory')
mGuardUpdateServerTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1), )
if mibBuilder.loadTexts: mGuardUpdateServerTable.setStatus('mandatory')
mGuardUpdateServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardUpdateServerIndex"))
if mibBuilder.loadTexts: mGuardUpdateServerEntry.setStatus('mandatory')
mGuardUpdateServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: mGuardUpdateServerIndex.setStatus('mandatory')
mGuardUpdateServer = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUpdateServer.setStatus('deprecated')
mGuardUpdateServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUpdateServerRowStatus.setStatus('mandatory')
mGuardUpdateServerProto = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUpdateServerProto.setStatus('mandatory')
mGuardUpdateServerHost = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUpdateServerHost.setStatus('mandatory')
mGuardUpdateServerLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUpdateServerLogin.setStatus('mandatory')
mGuardUpdateServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 7, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUpdateServerPassword.setStatus('mandatory')
mGuardSNMPError = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardSNMPError.setStatus('mandatory')
mGuardRouterRedundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2))
mGuardRouterRedundancyEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyEnable.setStatus('mandatory')
mGuardRouterRedundancyTrack = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyTrack.setStatus('mandatory')
mGuardRouterRedundancyInternalID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyInternalID.setStatus('mandatory')
mGuardRouterRedundancyExternalID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyExternalID.setStatus('mandatory')
mGuardRouterRedundancyPassword = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyPassword.setStatus('mandatory')
mGuardRouterRedundancyPeerIntern = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyPeerIntern.setStatus('mandatory')
mGuardRouterRedundancyPeerExtern = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyPeerExtern.setStatus('mandatory')
mGuardRouterRedundancyPriority = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyPriority.setStatus('mandatory')
mGuardRouterRedundancyVirtIpInt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyVirtIpInt.setStatus('mandatory')
mGuardRouterRedundancyVirtIpExt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyVirtIpExt.setStatus('mandatory')
mGuardRouterRedundancyWantState = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("backup", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedundancyWantState.setStatus('mandatory')
mGuardRouterRedExtHostCheckTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 12), )
if mibBuilder.loadTexts: mGuardRouterRedExtHostCheckTable.setStatus('mandatory')
mGuardRouterRedExtHostCheckEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 12, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardRouterRedExtHostCheckIndex"))
if mibBuilder.loadTexts: mGuardRouterRedExtHostCheckEntry.setStatus('mandatory')
mGuardRouterRedExtHostCheckIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardRouterRedExtHostCheckIndex.setStatus('mandatory')
mGuardRouterRedExtHostCheckIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 12, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedExtHostCheckIP.setStatus('mandatory')
mGuardRouterRedExtHostCheckRowSt = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 12, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedExtHostCheckRowSt.setStatus('mandatory')
mGuardRouterRedIntHostCheckTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 13), )
if mibBuilder.loadTexts: mGuardRouterRedIntHostCheckTable.setStatus('mandatory')
mGuardRouterRedIntHostCheckEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 13, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardRouterRedIntHostCheckIndex"))
if mibBuilder.loadTexts: mGuardRouterRedIntHostCheckEntry.setStatus('mandatory')
mGuardRouterRedIntHostCheckIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardRouterRedIntHostCheckIndex.setStatus('mandatory')
mGuardRouterRedIntHostCheckIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 13, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedIntHostCheckIP.setStatus('mandatory')
mGuardRouterRedIntHostCheckRowSt = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 13, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRouterRedIntHostCheckRowSt.setStatus('mandatory')
mGuardRouterRedundancyState = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 9, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("backup", 1), ("master", 2), ("fault", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardRouterRedundancyState.setStatus('mandatory')
mGuardHTTPSLastAccessIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardHTTPSLastAccessIP.setStatus('mandatory')
mGuardShellLastAccessIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardShellLastAccessIP.setStatus('mandatory')
mGuardDHCPLastAccessMAC = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardDHCPLastAccessMAC.setStatus('mandatory')
mGuardTrapResources = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4))
mGuardTResDiscFull = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("free", 1), ("tight", 2), ("full", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResDiscFull.setStatus('mandatory')
mGuardTResCpuLoadHigh = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResCpuLoadHigh.setStatus('mandatory')
mGuardTResMemoryFull = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResMemoryFull.setStatus('mandatory')
mGuardTResColdstart = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResColdstart.setStatus('mandatory')
mGuardTResAV = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 6))
mGuardTResAvUpdateDone = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 6, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResAvUpdateDone.setStatus('mandatory')
mGuardTResAvUpdateError = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 6, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResAvUpdateError.setStatus('mandatory')
mGuardTResAvVirusDetected = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 6, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResAvVirusDetected.setStatus('mandatory')
mGuardTResAvFileNotScanned = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 6, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResAvFileNotScanned.setStatus('mandatory')
mGuardTResAvFailed = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 6, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResAvFailed.setStatus('mandatory')
mGuardTResPlatformSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7))
mGuardTResIndustrial = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1))
mGuardTResIndustrialPower = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 1))
mGuardTResIndustrialTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 2))
mGuardPSTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 1, 2), )
if mibBuilder.loadTexts: mGuardPSTable.setStatus('mandatory')
mGuardPSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 1, 2, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardPSSysID"), (0, "MGUARDB-MIB", "mGuardPSID"))
if mibBuilder.loadTexts: mGuardPSEntry.setStatus('mandatory')
mGuardPSSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardPSSysID.setStatus('mandatory')
mGuardPSID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardPSID.setStatus('mandatory')
mGuardPSState = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("failed", 2), ("notInstalled", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardPSState.setStatus('mandatory')
mGuardTResIndustrialTempHiLimit = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardTResIndustrialTempHiLimit.setStatus('mandatory')
mGuardTResIndustrialTempLowLimit = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardTResIndustrialTempLowLimit.setStatus('mandatory')
mGuardTResAutoConfigAdapterState = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notPresent", 1), ("removed", 2), ("ok", 3), ("notInSync", 4), ("outOfMemory", 5), ("wrongMachine", 6), ("checksumErr", 7), ("genericErr", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResAutoConfigAdapterState.setStatus('mandatory')
mGuardTResSignalRelais = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 3))
mGuardTResSignalRelaisState = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResSignalRelaisState.setStatus('mandatory')
mGuardTResSignalRelaisReason = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 3, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResSignalRelaisReason.setStatus('mandatory')
mGuardTResSignalRelaisReasonIdx = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResSignalRelaisReasonIdx.setStatus('mandatory')
mGuardTResSignalRelaisPowerAlarm = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardTResSignalRelaisPowerAlarm.setStatus('mandatory')
mGuardTResSignalRelaisMode = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardTResSignalRelaisMode.setStatus('mandatory')
mGuardTResSignalRelaisManualStat = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardTResSignalRelaisManualStat.setStatus('mandatory')
mGuardTResSignalLinkTable = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 5))
mGuardTResSigLinkID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResSigLinkID.setStatus('mandatory')
mGuardTResSigLinkAlarm = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardTResSigLinkAlarm.setStatus('mandatory')
mGuardTResBladeCTRL = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2))
mGuardTResBladeInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 1))
mGuardTResBladeCtrlCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 5))
mGuardTResBladeRackID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResBladeRackID.setStatus('mandatory')
mGuardTResBladeSlotNr = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResBladeSlotNr.setStatus('mandatory')
mGuardTResBladeCtrlPowerStatus = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("absent", 1), ("present", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResBladeCtrlPowerStatus.setStatus('mandatory')
mGuardTResBladeCtrlRunStatus = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("absent", 1), ("present", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResBladeCtrlRunStatus.setStatus('mandatory')
mGuardTResBladeCtrlCfgBackup = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("downloaded", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResBladeCtrlCfgBackup.setStatus('mandatory')
mGuardTResBladeCtrlCfgRestored = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 7, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResBladeCtrlCfgRestored.setStatus('mandatory')
mGuardTResRedundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 8))
mGuardTResRedundacyReason = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 8, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResRedundacyReason.setStatus('mandatory')
mGuardTResRedundacyBackupDown = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 10, 4, 8, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardTResRedundacyBackupDown.setStatus('mandatory')
mGuardLoggingRemoteActivate = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLoggingRemoteActivate.setStatus('mandatory')
mGuardLoggingRemoteIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 11, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLoggingRemoteIP.setStatus('mandatory')
mGuardLoggingRemotePort = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 11, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardLoggingRemotePort.setStatus('mandatory')
mGuardContFiltAVP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1))
mGuardContFiltHTTP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2))
mGuardContFiltPOP3 = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3))
mGuardContFiltSMTP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4))
mGuardContFiltFTP = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5))
mGuardContFiltAVPSchedule = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 15, 30, 60, 120, 360, 720, 1440))).clone(namedValues=NamedValues(("never", 1), ("onboot", 2), ("quarterhourly", 15), ("halfhourly", 30), ("hourly", 60), ("bihourly", 120), ("triplehourly", 360), ("sixhourly", 720), ("twicedayly", 1440)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPSchedule.setStatus('mandatory')
mGuardContFiltAVPServerTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 2), )
if mibBuilder.loadTexts: mGuardContFiltAVPServerTable.setStatus('mandatory')
mGuardContFiltAVPServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 2, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardContFiltAVPServerIndex"))
if mibBuilder.loadTexts: mGuardContFiltAVPServerEntry.setStatus('mandatory')
mGuardContFiltAVPServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardContFiltAVPServerIndex.setStatus('mandatory')
mGuardContFiltAVPServerURL = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPServerURL.setStatus('mandatory')
mGuardContFiltAVPServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPServerRowStatus.setStatus('mandatory')
mGuardContFiltAVPHTTPProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 3))
mGuardContFiltAVPHTTPProxyLogin = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPHTTPProxyLogin.setStatus('mandatory')
mGuardContFiltAVPHTTPProxyPasswd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPHTTPProxyPasswd.setStatus('mandatory')
mGuardContFiltAVPHTTPProxyServer = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPHTTPProxyServer.setStatus('mandatory')
mGuardContFiltAVPHTTPProxyPort = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPHTTPProxyPort.setStatus('mandatory')
mGuardContFiltAVPLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPLogLevel.setStatus('mandatory')
mGuardContFiltAVPMaxConnections = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPMaxConnections.setStatus('mandatory')
mGuardContFiltAVPScanTimeout = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPScanTimeout.setStatus('mandatory')
mGuardContFiltAVPpass = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 8))
mGuardContFiltAVPpassCorrupt = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPpassCorrupt.setStatus('mandatory')
mGuardContFiltAVPpassEncrypted = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPpassEncrypted.setStatus('mandatory')
mGuardContFiltAVPpassSuspicious = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPpassSuspicious.setStatus('mandatory')
mGuardContFiltAVPpassWarnings = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltAVPpassWarnings.setStatus('mandatory')
mGuardContFiltQuarantine = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 9))
mGuardContFiltQuarantineClean = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltQuarantineClean.setStatus('mandatory')
mGuardContFiltQuarantineError = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltQuarantineError.setStatus('mandatory')
mGuardContFiltQuarantineVirus = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltQuarantineVirus.setStatus('mandatory')
mGuardContFiltQuarantineSrvIP = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 9, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltQuarantineSrvIP.setStatus('mandatory')
mGuardContFiltQuarantineSrvPort = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltQuarantineSrvPort.setStatus('mandatory')
mGuardContFiltInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 10))
mGuardContFiltInfoFlashID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 1, 10, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardContFiltInfoFlashID.setStatus('mandatory')
mGuardContFiltHTTPEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPEnable.setStatus('mandatory')
mGuardContFiltHTTPVirusAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("error", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPVirusAction.setStatus('mandatory')
mGuardContFiltHTTPMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200000, 500000, 1000000, 2000000, 4000000, 5000000, 8000000, 10000000))).clone(namedValues=NamedValues(("dottwomeg", 200000), ("dotfivemeg", 500000), ("onemeg", 1000000), ("twomeg", 2000000), ("fourmeg", 4000000), ("fivemeg", 5000000), ("eightmeg", 8000000), ("tenmeg", 10000000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPMaxSize.setStatus('mandatory')
mGuardContFiltHTTPExceedAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPExceedAction.setStatus('mandatory')
mGuardContFiltHTTPSrvrTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5), )
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrTable.setStatus('mandatory')
mGuardContFiltHTTPSrvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardContFiltHTTPSrvrIndex"))
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrEntry.setStatus('mandatory')
mGuardContFiltHTTPSrvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrIndex.setStatus('mandatory')
mGuardContFiltHTTPSrvrIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrIP.setStatus('mandatory')
mGuardContFiltHTTPSrvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrPort.setStatus('mandatory')
mGuardContFiltHTTPSrvrScanAction = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("scan", 1), ("noscan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrScanAction.setStatus('mandatory')
mGuardContFiltHTTPSrvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrRowStatus.setStatus('mandatory')
mGuardContFiltHTTPSrvrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 2, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltHTTPSrvrComment.setStatus('mandatory')
mGuardContFiltPOP3Enable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3Enable.setStatus('mandatory')
mGuardContFiltPOP3VirusAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("error", 1), ("mail", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3VirusAction.setStatus('mandatory')
mGuardContFiltPOP3MaxSize = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200000, 500000, 1000000, 2000000, 4000000, 5000000, 8000000, 10000000))).clone(namedValues=NamedValues(("dottwomeg", 200000), ("dotfivemeg", 500000), ("onemeg", 1000000), ("twomeg", 2000000), ("fourmeg", 4000000), ("fivemeg", 5000000), ("eightmeg", 8000000), ("tenmeg", 10000000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3MaxSize.setStatus('mandatory')
mGuardContFiltPOP3ExceedAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3ExceedAction.setStatus('mandatory')
mGuardContFiltPOP3SrvrTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5), )
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrTable.setStatus('mandatory')
mGuardContFiltPOP3SrvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardContFiltPOP3SrvrIndex"))
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrEntry.setStatus('mandatory')
mGuardContFiltPOP3SrvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrIndex.setStatus('mandatory')
mGuardContFiltPOP3SrvrIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrIP.setStatus('mandatory')
mGuardContFiltPOP3SrvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrPort.setStatus('mandatory')
mGuardContFiltPOP3SrvrScanAction = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("scan", 1), ("noscan", 2))))
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrScanAction.setStatus('mandatory')
mGuardContFiltPOP3SrvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrRowStatus.setStatus('mandatory')
mGuardContFiltPOP3SrvrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 3, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltPOP3SrvrComment.setStatus('mandatory')
mGuardContFiltSMTPEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPEnable.setStatus('mandatory')
mGuardContFiltSMTPVirusAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("error", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPVirusAction.setStatus('mandatory')
mGuardContFiltSMTPMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200000, 500000, 1000000, 2000000, 4000000, 5000000, 8000000, 10000000))).clone(namedValues=NamedValues(("dottwomeg", 200000), ("dotfivemeg", 500000), ("onemeg", 1000000), ("twomeg", 2000000), ("fourmeg", 4000000), ("fivemeg", 5000000), ("eightmeg", 8000000), ("tenmeg", 10000000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPMaxSize.setStatus('mandatory')
mGuardContFiltSMTPExceedAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPExceedAction.setStatus('mandatory')
mGuardContFiltSMTPSrvrTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5), )
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrTable.setStatus('mandatory')
mGuardContFiltSMTPSrvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardContFiltSMTPSrvrIndex"))
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrEntry.setStatus('mandatory')
mGuardContFiltSMTPSrvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrIndex.setStatus('mandatory')
mGuardContFiltSMTPSrvrIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrIP.setStatus('mandatory')
mGuardContFiltSMTPSrvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrPort.setStatus('mandatory')
mGuardContFiltSMTPSrvrScanAction = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("scan", 1), ("noscan", 2))))
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrScanAction.setStatus('mandatory')
mGuardContFiltSMTPSrvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrRowStatus.setStatus('mandatory')
mGuardContFiltSMTPSrvrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 4, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltSMTPSrvrComment.setStatus('mandatory')
mGuardContFiltFTPEnable = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPEnable.setStatus('mandatory')
mGuardContFiltFTPVirusAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("error", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPVirusAction.setStatus('mandatory')
mGuardContFiltFTPMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200000, 500000, 1000000, 2000000, 4000000, 5000000, 8000000, 10000000))).clone(namedValues=NamedValues(("dottwomeg", 200000), ("dotfivemeg", 500000), ("onemeg", 1000000), ("twomeg", 2000000), ("fourmeg", 4000000), ("fivemeg", 5000000), ("eightmeg", 8000000), ("tenmeg", 10000000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPMaxSize.setStatus('mandatory')
mGuardContFiltFTPExceedAction = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPExceedAction.setStatus('mandatory')
mGuardContFiltFTPSrvrTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5), )
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrTable.setStatus('mandatory')
mGuardContFiltFTPSrvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardContFiltFTPSrvrIndex"))
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrEntry.setStatus('mandatory')
mGuardContFiltFTPSrvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrIndex.setStatus('mandatory')
mGuardContFiltFTPSrvrIP = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrIP.setStatus('mandatory')
mGuardContFiltFTPSrvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrPort.setStatus('mandatory')
mGuardContFiltFTPSrvrScanAction = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("scan", 1), ("noscan", 2))))
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrScanAction.setStatus('mandatory')
mGuardContFiltFTPSrvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrRowStatus.setStatus('mandatory')
mGuardContFiltFTPSrvrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 12, 5, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardContFiltFTPSrvrComment.setStatus('mandatory')
mGuardBladeRackID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 13, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardBladeRackID.setStatus('mandatory')
mGuardBladeSlotID = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 13, 2), Integer32())
if mibBuilder.loadTexts: mGuardBladeSlotID.setStatus('mandatory')
mGuardBladeCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3), )
if mibBuilder.loadTexts: mGuardBladeCtrlTable.setStatus('mandatory')
mGuardBladeCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardBladeCtrlIndex"))
if mibBuilder.loadTexts: mGuardBladeCtrlEntry.setStatus('mandatory')
mGuardBladeCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardBladeCtrlIndex.setStatus('mandatory')
mGuardBladeCtrlDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlDevice.setStatus('mandatory')
mGuardBladeCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("absent", 1), ("present", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlStatus.setStatus('mandatory')
mGuardBladeCtrlAVRRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlAVRRevision.setStatus('mandatory')
mGuardBladeCtrlSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlSlotID.setStatus('mandatory')
mGuardBladeCtrlProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlProductID.setStatus('mandatory')
mGuardBladeCtrlAssemblyID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlAssemblyID.setStatus('mandatory')
mGuardBladeCtrlSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlSerial.setStatus('mandatory')
mGuardBladeCtrlFlashID = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlFlashID.setStatus('mandatory')
mGuardBladeCtrlVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladeCtrlVersion.setStatus('mandatory')
mGuardBladeCtrlBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardBladeCtrlBackup.setStatus('mandatory')
mGuardBladeCtrlRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardBladeCtrlRestore.setStatus('mandatory')
mGuardBladePwrTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 13, 4), )
if mibBuilder.loadTexts: mGuardBladePwrTable.setStatus('mandatory')
mGuardBladePwrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 13, 4, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardBladePwrIndex"))
if mibBuilder.loadTexts: mGuardBladePwrEntry.setStatus('mandatory')
mGuardBladePwrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardBladePwrIndex.setStatus('mandatory')
mGuardBladePwrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 13, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("absent", 1), ("fatal", 2), ("defect", 3), ("ok", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mGuardBladePwrStatus.setStatus('mandatory')
mGuardProfilePush = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 14, 1))
mGuardProfilePull = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2))
mGuardProfilePullSchedule = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 15, 30, 60, 120, 360, 720, 1440))).clone(namedValues=NamedValues(("never", 1), ("onboot", 2), ("quarterhourly", 15), ("halfhourly", 30), ("hourly", 60), ("bihourly", 120), ("triplehourly", 360), ("sixhourly", 720), ("twicedayly", 1440)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullSchedule.setStatus('mandatory')
mGuardProfilePullHTTPS = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2))
mGuardProfilePullHTTPSCert = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullHTTPSCert.setStatus('mandatory')
mGuardProfilePullHTTPSServer = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullHTTPSServer.setStatus('mandatory')
mGuardProfilePullHTTPSPort = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullHTTPSPort.setStatus('mandatory')
mGuardProfilePullHTTPSFile = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullHTTPSFile.setStatus('mandatory')
mGuardProfilePullHTTPSLogin = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullHTTPSLogin.setStatus('mandatory')
mGuardProfilePullHTTPSPasswd = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullHTTPSPasswd.setStatus('mandatory')
mGuardProfilePullHTTPSDirectory = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 14, 2, 2, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardProfilePullHTTPSDirectory.setStatus('mandatory')
mGuardRemoteUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1))
mGuardRADIUS = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1))
mGuardRADIUSTimeout = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRADIUSTimeout.setStatus('mandatory')
mGuardRADIUSRetries = MibScalar((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRADIUSRetries.setStatus('mandatory')
mGuardRADIUSServerTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 3), )
if mibBuilder.loadTexts: mGuardRADIUSServerTable.setStatus('mandatory')
mGuardRADIUSServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 3, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardRADIUSServerIndex"))
if mibBuilder.loadTexts: mGuardRADIUSServerEntry.setStatus('mandatory')
mGuardRADIUSServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardRADIUSServerIndex.setStatus('mandatory')
mGuardRADIUSServerHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRADIUSServerHostname.setStatus('mandatory')
mGuardRADIUSServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRADIUSServerPort.setStatus('mandatory')
mGuardRADIUSServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRADIUSServerSecret.setStatus('mandatory')
mGuardRADIUSServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 1, 3, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardRADIUSServerRowStatus.setStatus('mandatory')
mGuardUserFWUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2))
mGuardUserFWUserTable = MibTable((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2, 1), )
if mibBuilder.loadTexts: mGuardUserFWUserTable.setStatus('mandatory')
mGuardUserFWUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2, 1, 1), ).setIndexNames((0, "MGUARDB-MIB", "mGuardUserFWUserIndex"))
if mibBuilder.loadTexts: mGuardUserFWUserEntry.setStatus('mandatory')
mGuardUserFWUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: mGuardUserFWUserIndex.setStatus('mandatory')
mGuardUserFWUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUserFWUserName.setStatus('mandatory')
mGuardUserFWUserAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("radius", 1), ("local", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUserFWUserAuthMethod.setStatus('mandatory')
mGuardUserFWUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUserFWUserPassword.setStatus('mandatory')
mGuardUserFWUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15450, 2, 15, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGuardUserFWUserRowStatus.setStatus('mandatory')
mGuardTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 5))
mGuardTrapDiscFull = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 5) + (0,1)).setObjects(("MGUARDB-MIB", "mGuardTResDiscFull"))
mGuardTrapCpuLoadHigh = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 5) + (0,2)).setObjects(("MGUARDB-MIB", "mGuardTResCpuLoadHigh"))
mGuardTrapMemoryFull = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 5) + (0,3)).setObjects(("MGUARDB-MIB", "mGuardTResMemoryFull"))
mGuardTrapColdstart = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 5) + (0,4)).setObjects(("MGUARDB-MIB", "mGuardTResColdstart"))
mGuardHTTPSLoginTrap = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2) + (0,1)).setObjects(("MGUARDB-MIB", "mGuardHTTPSLastAccessIP"))
mGuardShellLoginTrap = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2) + (0,2)).setObjects(("MGUARDB-MIB", "mGuardShellLastAccessIP"))
mGuardDHCPNewClientTrap = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2) + (0,3)).setObjects(("MGUARDB-MIB", "mGuardDHCPLastAccessMAC"))
mGuardTrapAV = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 6))
mGuardTrapAvUpdateDone = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 6) + (0,1)).setObjects(("MGUARDB-MIB", "mGuardTResAvUpdateDone"))
mGuardTrapAvUpdateError = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 6) + (0,2)).setObjects(("MGUARDB-MIB", "mGuardTResAvUpdateError"))
mGuardTrapAvVirusDetected = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 6) + (0,3)).setObjects(("MGUARDB-MIB", "mGuardTResAvVirusDetected"))
mGuardTrapAvFileNotScanned = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 6) + (0,4)).setObjects(("MGUARDB-MIB", "mGuardTResAvFileNotScanned"))
mGuardTrapAvFailed = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 6) + (0,5)).setObjects(("MGUARDB-MIB", "mGuardTResAvFailed"))
mGuardTrapPlatformSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7))
mGuardTrapIndustrial = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 1))
mGuardTrapIndustrialPowerStatus = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 1) + (0,2)).setObjects(("MGUARDB-MIB", "mGuardPSState"))
mGuardTrapIndustrialTemperature = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 1) + (0,1)).setObjects(("MGUARDB-MIB", "mGuardSystemTemperature"), ("MGUARDB-MIB", "mGuardTResIndustrialTempHiLimit"), ("MGUARDB-MIB", "mGuardTResIndustrialTempLowLimit"))
mGuardTrapSignalRelais = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 1) + (0,3)).setObjects(("MGUARDB-MIB", "mGuardTResSignalRelaisState"), ("MGUARDB-MIB", "mGuardTResSignalRelaisReason"), ("MGUARDB-MIB", "mGuardTResSignalRelaisReasonIdx"))
mGuardTrapAutoConfigAdapterState = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 1) + (0,4)).setObjects(("MGUARDB-MIB", "mGuardTResAutoConfigAdapterState"))
mGuardTrapBladeCTRL = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 2))
mGuardTrapBladeCtrlCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 2, 5))
mGuardTrapBladeCtrlPowerStatus = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 2) + (0,2)).setObjects(("MGUARDB-MIB", "mGuardTResBladeRackID"), ("MGUARDB-MIB", "mGuardTResBladeSlotNr"), ("MGUARDB-MIB", "mGuardTResBladeCtrlPowerStatus"))
mGuardTrapBladeCtrlRunStatus = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 2) + (0,3)).setObjects(("MGUARDB-MIB", "mGuardTResBladeRackID"), ("MGUARDB-MIB", "mGuardTResBladeSlotNr"), ("MGUARDB-MIB", "mGuardTResBladeCtrlRunStatus"))
mGuardTrapBladeCtrlCfgBackup = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 2, 5) + (0,1)).setObjects(("MGUARDB-MIB", "mGuardTResBladeRackID"), ("MGUARDB-MIB", "mGuardTResBladeSlotNr"), ("MGUARDB-MIB", "mGuardTResBladeCtrlCfgBackup"))
mGuardTrapBladeCtrlCfgRestored = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 7, 2, 5) + (0,2)).setObjects(("MGUARDB-MIB", "mGuardTResBladeRackID"), ("MGUARDB-MIB", "mGuardTResBladeSlotNr"), ("MGUARDB-MIB", "mGuardTResBladeCtrlCfgRestored"))
mGuardTrapRouterRedundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 15450, 2, 10, 8))
mGuardTrapRouterRedundancyStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 8) + (0,1)).setObjects(("MGUARDB-MIB", "mGuardRouterRedundancyState"), ("MGUARDB-MIB", "mGuardTResRedundacyReason"))
mGuardTrapRouterRedundancyBackupDown = NotificationType((1, 3, 6, 1, 4, 1, 15450, 2, 10, 8) + (0,2)).setObjects(("MGUARDB-MIB", "mGuardTResRedundacyBackupDown"))
mibBuilder.exportSymbols("MGUARDB-MIB", mGuardVPNx509=mGuardVPNx509, mGuardVPNconStartUp=mGuardVPNconStartUp, mGuardFirewallUserFWTemplateRuleEntry=mGuardFirewallUserFWTemplateRuleEntry, mGuardFirewallUserFWTemplateRuleIndex=mGuardFirewallUserFWTemplateRuleIndex, mGuardL2FilterInternEntry=mGuardL2FilterInternEntry, mGuardStealthManageUseVLAN=mGuardStealthManageUseVLAN, mGuardBlade=mGuardBlade, mGuardDHCPIntRelayServerTable=mGuardDHCPIntRelayServerTable, mGuardContFiltFTPMaxSize=mGuardContFiltFTPMaxSize, mGuardContFiltSMTPMaxSize=mGuardContFiltSMTPMaxSize, mGuardSysProduct=mGuardSysProduct, mGuardContFiltFTP=mGuardContFiltFTP, mGuardContFiltAVPScanTimeout=mGuardContFiltAVPScanTimeout, mGuardUserFWUserEntry=mGuardUserFWUserEntry, mGuardVPNlocalMask=mGuardVPNlocalMask, mGuardDHCPIntBroadcast=mGuardDHCPIntBroadcast, mGuardProfilePullHTTPSDirectory=mGuardProfilePullHTTPSDirectory, mGuardTrapBladeCtrlCfg=mGuardTrapBladeCtrlCfg, mGuardContFiltAVPHTTPProxyLogin=mGuardContFiltAVPHTTPProxyLogin, mGuardPPPOEpppdOptionsIndex=mGuardPPPOEpppdOptionsIndex, mGuardFWINcomment=mGuardFWINcomment, mGuardFirewallUserFWTemplateRuleRowStatus=mGuardFirewallUserFWTemplateRuleRowStatus, mGuardb=mGuardb, mGuardTResAV=mGuardTResAV, mGuardCPUStepping=mGuardCPUStepping, mGuardSerialPPPFWOUTTable=mGuardSerialPPPFWOUTTable, mGuardContFiltHTTPVirusAction=mGuardContFiltHTTPVirusAction, mGuardRouterRedExtHostCheckIP=mGuardRouterRedExtHostCheckIP, mGuardSNMPRouterRedundancyStatusFlag=mGuardSNMPRouterRedundancyStatusFlag, mGuardContFiltSMTPSrvrComment=mGuardContFiltSMTPSrvrComment, mGuardDHCPExtRangeStart=mGuardDHCPExtRangeStart, mGuardVPNFWINRowStatus=mGuardVPNFWINRowStatus, mGuardVPNRekeyMargin=mGuardVPNRekeyMargin, mGuardNTPServerTable=mGuardNTPServerTable, mGuardRedundancy=mGuardRedundancy, mGuardRouterRedIntHostCheckIndex=mGuardRouterRedIntHostCheckIndex, mGuardAction=mGuardAction, mGuardTResBladeCtrlCfgRestored=mGuardTResBladeCtrlCfgRestored, mGuardRouterLocalDevVlanMTU=mGuardRouterLocalDevVlanMTU, mGuardContFiltFTPSrvrIP=mGuardContFiltFTPSrvrIP, mGuardDHCPIntWINS=mGuardDHCPIntWINS, mGuardPackageVersionEntry=mGuardPackageVersionEntry, mGuardSSHFWtarget=mGuardSSHFWtarget, mGuardSerialPPPFWOUTEntry=mGuardSerialPPPFWOUTEntry, mGuardSNMPFWruleIndex=mGuardSNMPFWruleIndex, mGuardRouterRedExtHostCheckTable=mGuardRouterRedExtHostCheckTable, mGuardDNS=mGuardDNS, mGuardFirewallUserFWTemplateRuleTable=mGuardFirewallUserFWTemplateRuleTable, mGuardUserPassword=mGuardUserPassword, mGuardContFiltFTPVirusAction=mGuardContFiltFTPVirusAction, mGuardNetworkStatGateway=mGuardNetworkStatGateway, mGuardTResSignalRelaisManualStat=mGuardTResSignalRelaisManualStat, mGuardFirewallIPConntrackMax=mGuardFirewallIPConntrackMax, mGuardStealthManageIP=mGuardStealthManageIP, mGuardRADIUS=mGuardRADIUS, mGuardContFiltInfo=mGuardContFiltInfo, mGuardProfilePullHTTPSLogin=mGuardProfilePullHTTPSLogin, mGuardTrapPlatformSpecific=mGuardTrapPlatformSpecific, mGuardVPNikeDH=mGuardVPNikeDH, mGuardDHCPIntStaticEntry=mGuardDHCPIntStaticEntry, mGuardSerialPPPFWINLogDefault=mGuardSerialPPPFWINLogDefault, mGuardVPNconEnabled=mGuardVPNconEnabled, mGuardFWINsourceIP=mGuardFWINsourceIP, mGuardVPNFWOUTproto=mGuardVPNFWOUTproto, mGuardRADIUSServerSecret=mGuardRADIUSServerSecret, mGuardContFiltPOP3SrvrComment=mGuardContFiltPOP3SrvrComment, mGuardDHCPIntLeaseTime=mGuardDHCPIntLeaseTime, mGuardVPNLocalIDMode=mGuardVPNLocalIDMode, mGuardRouterRedIntHostCheckEntry=mGuardRouterRedIntHostCheckEntry, mGuardNetworkSoftwareVersion=mGuardNetworkSoftwareVersion, mGuardStealthManageNetmask=mGuardStealthManageNetmask, mGuardSerialPPPFWINRowStatus=mGuardSerialPPPFWINRowStatus, mGuardSerialPPPFWOUTdport=mGuardSerialPPPFWOUTdport, mGuardWebInterfaceApplyButtonScope=mGuardWebInterfaceApplyButtonScope, mGuardVPNDPDAction=mGuardVPNDPDAction, mGuardSSHRemoteAccess=mGuardSSHRemoteAccess, mGuardSNMPTrapFlag=mGuardSNMPTrapFlag, mGuardBladeCtrlStatus=mGuardBladeCtrlStatus, mGuardVPNDynDNSRegProvider=mGuardVPNDynDNSRegProvider, mGuardDHCPIntRangeEnd=mGuardDHCPIntRangeEnd, mGuardTResBladeCtrlRunStatus=mGuardTResBladeCtrlRunStatus, mGuardSNMPLinkUpDownTrapFlag=mGuardSNMPLinkUpDownTrapFlag, mGuardStealthInterface=mGuardStealthInterface, mGuardUserFWUserAuthMethod=mGuardUserFWUserAuthMethod, mGuardVPNvirtIP=mGuardVPNvirtIP, mGuardVPNL2TPStart=mGuardVPNL2TPStart, mGuardContFiltFTPSrvrTable=mGuardContFiltFTPSrvrTable, mGuardContFiltSMTPSrvrPort=mGuardContFiltSMTPSrvrPort, mGuardSSHFWruleIndex=mGuardSSHFWruleIndex, mGuardVPNNoCertReqSend=mGuardVPNNoCertReqSend, mGuardRouterRedExtHostCheckEntry=mGuardRouterRedExtHostCheckEntry, mGuardFW11NATRemote=mGuardFW11NATRemote, mGuardRouterExternDHCP=mGuardRouterExternDHCP, mGuardLoggingRemotePort=mGuardLoggingRemotePort, mGuardTResRedundacyBackupDown=mGuardTResRedundacyBackupDown, mGuardVPNL2TPLocalIP=mGuardVPNL2TPLocalIP, mGuardFWOUTdport=mGuardFWOUTdport, mGuardPPTPModemIP=mGuardPPTPModemIP, mGuardStealthHiDiscoveryRelay=mGuardStealthHiDiscoveryRelay, mGuardContFiltAVP=mGuardContFiltAVP, mGuardFirewallExtended=mGuardFirewallExtended, mGuardVPNDynDNSCheckDo=mGuardVPNDynDNSCheckDo, mGuardTrapRouterRedundancyBackupDown=mGuardTrapRouterRedundancyBackupDown, mGuardSNMPFWinterface=mGuardSNMPFWinterface, mGuardSSHFWRowStatus=mGuardSSHFWRowStatus, mGuardTrapResources=mGuardTrapResources, mGuardNTP=mGuardNTP, mGuardRouterLocalAliasesTable=mGuardRouterLocalAliasesTable, mGuardSNMPTrapConfigGroup=mGuardSNMPTrapConfigGroup, mGuardVPNRequireUniqueIDs=mGuardVPNRequireUniqueIDs, mGuardSSHRemotePort=mGuardSSHRemotePort, mGuardRouterExternStatic=mGuardRouterExternStatic, mGuardVPNauthType=mGuardVPNauthType, mGuardPPPOEpppdOptionsRowStatus=mGuardPPPOEpppdOptionsRowStatus, mGuardHTTPSRemoteFWRuleTable=mGuardHTTPSRemoteFWRuleTable, mGuardTResIndustrialTempHiLimit=mGuardTResIndustrialTempHiLimit, mGuardPPPOEpppdOptionsValue=mGuardPPPOEpppdOptionsValue, mGuardDNSUserDefinedServerEntry=mGuardDNSUserDefinedServerEntry, mGuardTResAvFileNotScanned=mGuardTResAvFileNotScanned, mGuardSerialPPPFWINruleIndex=mGuardSerialPPPFWINruleIndex, mGuardFirewallUserFWTemplateUserTable=mGuardFirewallUserFWTemplateUserTable, mGuardPkgName=mGuardPkgName, mGuardVPNDynDNSRegister=mGuardVPNDynDNSRegister, mGuardRouterExternAliasesEntry=mGuardRouterExternAliasesEntry, mGuardVPNFWOUTdport=mGuardVPNFWOUTdport, mGuardFWNATRowStatus=mGuardFWNATRowStatus, mGuardFirewallIPSynfloodLimitInt=mGuardFirewallIPSynfloodLimitInt, mGuardPSState=mGuardPSState, innominate=innominate, mGuardSerialNumber=mGuardSerialNumber, mGuardRouterRedundancyPassword=mGuardRouterRedundancyPassword, mGuardVPNremoteNet=mGuardVPNremoteNet, mGuardTResIndustrial=mGuardTResIndustrial, mGuardVPNComp=mGuardVPNComp, mGuardContFiltAVPpassCorrupt=mGuardContFiltAVPpassCorrupt, mGuardProfilePullHTTPSServer=mGuardProfilePullHTTPSServer, mGuardVPNFWOUTruleIndex=mGuardVPNFWOUTruleIndex, mGuardVPNIkeLifetime=mGuardVPNIkeLifetime, mGuardFirewallUserFWTemplateEntry=mGuardFirewallUserFWTemplateEntry, mGuardNTPServerHost=mGuardNTPServerHost, mGuardTrapRouterRedundancy=mGuardTrapRouterRedundancy, mGuardFirewallUserFWTemplateUserTemplateIndex=mGuardFirewallUserFWTemplateUserTemplateIndex, mGuardFirewallPortforwardEntry=mGuardFirewallPortforwardEntry, mGuardStealthStaticMAC=mGuardStealthStaticMAC, mGuardVPNMachinePrivate=mGuardVPNMachinePrivate, mGuardTrapBladeCTRL=mGuardTrapBladeCTRL, mGuardContFiltFTPSrvrScanAction=mGuardContFiltFTPSrvrScanAction, mGuardFWOUTsport=mGuardFWOUTsport, mGuardBladeCtrlFlashID=mGuardBladeCtrlFlashID, mGuardRouterHiDiscoveryIntern=mGuardRouterHiDiscoveryIntern, mGuardVPNremote=mGuardVPNremote, mGuardTResSigLinkAlarm=mGuardTResSigLinkAlarm, mGuardContFiltSMTPEnable=mGuardContFiltSMTPEnable, mGuardVPNSettings=mGuardVPNSettings, mGuardSystem=mGuardSystem, mGuardProfile=mGuardProfile, mGuardLocalAliasVLANid=mGuardLocalAliasVLANid, mGuardInfo=mGuardInfo, mGuardVersion=mGuardVersion, mGuardVPNDPDTimeout=mGuardVPNDPDTimeout, mGuardFirewallUserFWTemplateUserEntry=mGuardFirewallUserFWTemplateUserEntry, mGuardDHCPIntRelayCircuitText=mGuardDHCPIntRelayCircuitText, mGuardContFiltHTTP=mGuardContFiltHTTP, mGuardFirewallUserFWTemplateName=mGuardFirewallUserFWTemplateName, mGuardSerialPPPFWINdport=mGuardSerialPPPFWINdport, mGuardContFiltHTTPSrvrIP=mGuardContFiltHTTPSrvrIP, mGuardSerialPPPFWINsourceIP=mGuardSerialPPPFWINsourceIP, mGuardBladePwrStatus=mGuardBladePwrStatus, mGuardFW11NATRowStatus=mGuardFW11NATRowStatus, mGuardLocalRouteIndex=mGuardLocalRouteIndex, mGuardHTTPSRemoteEnable=mGuardHTTPSRemoteEnable, mGuardContFiltQuarantineSrvPort=mGuardContFiltQuarantineSrvPort, mGuardUpdateServerRowStatus=mGuardUpdateServerRowStatus, mGuardFirewallConntrackPPTP=mGuardFirewallConntrackPPTP, mGuardLocalAliasRowStatus=mGuardLocalAliasRowStatus, mGuardPkgVerFlavour=mGuardPkgVerFlavour, mGuardL2FilterExternSrcMac=mGuardL2FilterExternSrcMac, mGuardContFiltAVPServerTable=mGuardContFiltAVPServerTable, mGuardVPNLocalID=mGuardVPNLocalID, mGuardTResRedundacyReason=mGuardTResRedundacyReason, mGuardStealthVlanMTU=mGuardStealthVlanMTU, mGuardUserFWUserPassword=mGuardUserFWUserPassword, mGuardBootLoader=mGuardBootLoader, mGuardDHCPExtStaticIndex=mGuardDHCPExtStaticIndex, mGuardRouterLocal=mGuardRouterLocal, mGuardVPNFWOUTlog=mGuardVPNFWOUTlog, mGuardFWNATIP=mGuardFWNATIP, mGuardFirewallUserFWEnabled=mGuardFirewallUserFWEnabled, mGuardDHCPExtPoolEnable=mGuardDHCPExtPoolEnable, mGuardContFiltAVPHTTPProxyPort=mGuardContFiltAVPHTTPProxyPort, mGuardVPNconType=mGuardVPNconType, mGuardL2FilterExternEthType=mGuardL2FilterExternEthType, mGuardProfilePullHTTPS=mGuardProfilePullHTTPS, mGuardHTTPSFWRowStatus=mGuardHTTPSFWRowStatus, mGuardDHCPExtGateway=mGuardDHCPExtGateway, mGuardVPNRekey=mGuardVPNRekey, mGuardDHCPExtRelayCircuitText=mGuardDHCPExtRelayCircuitText, mGuardContFiltFTPSrvrIndex=mGuardContFiltFTPSrvrIndex, mGuardLocalRouteGateway=mGuardLocalRouteGateway, mGuardVPNFWINlog=mGuardVPNFWINlog, mGuardVPNikeHash=mGuardVPNikeHash, mGuardVPNL2TPpppdOptValue=mGuardVPNL2TPpppdOptValue, mGuardSerialPPPFWOUTtargetIP=mGuardSerialPPPFWOUTtargetIP, mGuardDHCPIntGateway=mGuardDHCPIntGateway, mGuardTResMemoryFull=mGuardTResMemoryFull, mGuardContFiltInfoFlashID=mGuardContFiltInfoFlashID, mGuardFWPORTFORWsrcIP=mGuardFWPORTFORWsrcIP, mGuardVPNFW=mGuardVPNFW, mGuardUpdate=mGuardUpdate, mGuardRemoteUsers=mGuardRemoteUsers, mGuardContFiltAVPServerEntry=mGuardContFiltAVPServerEntry, mGuardRouterLocalVlanId=mGuardRouterLocalVlanId, mGuardDHCPExtBroadcast=mGuardDHCPExtBroadcast, mGuardContFiltPOP3SrvrPort=mGuardContFiltPOP3SrvrPort, mGuardDHCPIntRelayServerEntry=mGuardDHCPIntRelayServerEntry, mGuardVPNDynDNSRegLogin=mGuardVPNDynDNSRegLogin, mGuardFirewallUserFWTemplateRuleLog=mGuardFirewallUserFWTemplateRuleLog, mGuardContFiltPOP3SrvrIndex=mGuardContFiltPOP3SrvrIndex, mGuardNetworkStatLanguage=mGuardNetworkStatLanguage, mGuardVPNDynDNSRegPasswd=mGuardVPNDynDNSRegPasswd, mGuardDHCPExtLeaseTime=mGuardDHCPExtLeaseTime, mGuardShellLoginTrap=mGuardShellLoginTrap, mGuardMAC2=mGuardMAC2, mGuardDHCPIntStaticIP=mGuardDHCPIntStaticIP, mGuardHardwareVersion=mGuardHardwareVersion, mGuardFirewallUserFWTemplateEnabled=mGuardFirewallUserFWTemplateEnabled, mGuarddnsServerIP=mGuarddnsServerIP, mGuardVPNFWOUTTable=mGuardVPNFWOUTTable, mGuardTResBladeCtrlCfg=mGuardTResBladeCtrlCfg, mGuardBladeCtrlAssemblyID=mGuardBladeCtrlAssemblyID, mGuardRADIUSServerHostname=mGuardRADIUSServerHostname, mGuardContFiltAVPpassEncrypted=mGuardContFiltAVPpassEncrypted, mGuardL2FilterExternDstMac=mGuardL2FilterExternDstMac, mGuardProfilePull=mGuardProfilePull, mGuardFirewallIncoming=mGuardFirewallIncoming, mGuardProfilePush=mGuardProfilePush, mGuardExternAliasIndex=mGuardExternAliasIndex, mGuardRouterLocalIP=mGuardRouterLocalIP, mGuardSerialBaud=mGuardSerialBaud, mGuardHTTPSLoginTrap=mGuardHTTPSLoginTrap, mGuardRouterLocalNetmask=mGuardRouterLocalNetmask, mGuardVPNMachine=mGuardVPNMachine, mGuardBaseVersion=mGuardBaseVersion, mGuardSNMPAgentTrapFlag=mGuardSNMPAgentTrapFlag, mGuardPPTPLocalIPMode=mGuardPPTPLocalIPMode, mGuardVPNFWOUTsourceIP=mGuardVPNFWOUTsourceIP, mGuardPPTPpppdOptionsEntry=mGuardPPTPpppdOptionsEntry, mGuardUpdateServerHost=mGuardUpdateServerHost, mGuardStealthL2ForwardGVRP=mGuardStealthL2ForwardGVRP, mGuardFirewallUserFWTemplateRowStatus=mGuardFirewallUserFWTemplateRowStatus, mGuardVPNDynDNSRegHostname=mGuardVPNDynDNSRegHostname, mGuardBladePwrEntry=mGuardBladePwrEntry, mGuardFWPORTFORWlog=mGuardFWPORTFORWlog, mGuardRouterRedExtHostCheckIndex=mGuardRouterRedExtHostCheckIndex)
mibBuilder.exportSymbols("MGUARDB-MIB", mGuardSerialPPP=mGuardSerialPPP, mGuardTrapAvVirusDetected=mGuardTrapAvVirusDetected, mGuardTResSignalRelaisMode=mGuardTResSignalRelaisMode, mGuardTResBladeRackID=mGuardTResBladeRackID, mGuardRootPassword=mGuardRootPassword, mGuardNTPactivate=mGuardNTPactivate, mGuardFWINsport=mGuardFWINsport, mGuardDHCPIntNetmask=mGuardDHCPIntNetmask, mGuardSerialPPPFWIN=mGuardSerialPPPFWIN, mGuardContFiltSMTPExceedAction=mGuardContFiltSMTPExceedAction, mGuardSerial=mGuardSerial, mGuardDHCPIntStaticRowStatus=mGuardDHCPIntStaticRowStatus, mGuardFW11NATLocal=mGuardFW11NATLocal, mGuardNTPtimestamp=mGuardNTPtimestamp, mGuardFWOUTruleIndex=mGuardFWOUTruleIndex, mGuardRouterRedundancyPriority=mGuardRouterRedundancyPriority, mGuardSNMPenableV3=mGuardSNMPenableV3, mGuardVPNFWOUTEntry=mGuardVPNFWOUTEntry, mGuardUpdateServer=mGuardUpdateServer, mGuardFirewallPortforwarding=mGuardFirewallPortforwarding, mGuardDHCPExt=mGuardDHCPExt, mGuardDHCPIntStaticIndex=mGuardDHCPIntStaticIndex, mGuardDHCPIntStaticMAC=mGuardDHCPIntStaticMAC, mGuardVPNipsecAlg=mGuardVPNipsecAlg, mGuardRouterRedundancyWantState=mGuardRouterRedundancyWantState, mGuardRADIUSServerRowStatus=mGuardRADIUSServerRowStatus, mGuardFWPORTFORWproto=mGuardFWPORTFORWproto, mGuardTResBladeCtrlPowerStatus=mGuardTResBladeCtrlPowerStatus, mGuardOEMName=mGuardOEMName, mGuardUptime=mGuardUptime, mGuardContFiltHTTPSrvrEntry=mGuardContFiltHTTPSrvrEntry, mGuardVPNlocal=mGuardVPNlocal, mGuardSNMPTrapReceiverIndex=mGuardSNMPTrapReceiverIndex, mGuardDHCPIntRelayAppend=mGuardDHCPIntRelayAppend, mGuardRouterExternDevMTU=mGuardRouterExternDevMTU, mGuardStealth=mGuardStealth, mGuardSerialPPPFWOUTtarget=mGuardSerialPPPFWOUTtarget, mGuardFirewallConntrackIRC=mGuardFirewallConntrackIRC, mGuardTResBladeInfo=mGuardTResBladeInfo, mGuardTrapAvFileNotScanned=mGuardTrapAvFileNotScanned, mGuardRouterRedundancyVirtIpInt=mGuardRouterRedundancyVirtIpInt, mGuardFWOUTRowStatus=mGuardFWOUTRowStatus, mGuardTResAvFailed=mGuardTResAvFailed, mGuardContFiltSMTPVirusAction=mGuardContFiltSMTPVirusAction, mGuardDHCPIntPoolEnable=mGuardDHCPIntPoolEnable, mGuardSNMPFWlog=mGuardSNMPFWlog, mGuardRouterRedundancyState=mGuardRouterRedundancyState, mGuardDNSCacheEnabled=mGuardDNSCacheEnabled, mGuardDHCPInt=mGuardDHCPInt, mGuardBladeCtrlTable=mGuardBladeCtrlTable, mGuardTraps=mGuardTraps, mGuardSerialHWHandshakeEnable=mGuardSerialHWHandshakeEnable, mGuardFWINRowStatus=mGuardFWINRowStatus, mGuardFWINlog=mGuardFWINlog, mGuardManufacturer=mGuardManufacturer, mGuardSNMPAvFailTrapFlag=mGuardSNMPAvFailTrapFlag, mGuardSSHFWsourceIP=mGuardSSHFWsourceIP, mGuardVPNDynDNSReg=mGuardVPNDynDNSReg, mGuardSerialPPPFWINsport=mGuardSerialPPPFWINsport, mGuardUserFWUserTable=mGuardUserFWUserTable, mGuardVPNNatTKeepAliveForce=mGuardVPNNatTKeepAliveForce, mGuardTResSignalRelais=mGuardTResSignalRelais, mGuarddnsServerIndex=mGuarddnsServerIndex, mGuardVPNvirtIPMethod=mGuardVPNvirtIPMethod, mGuardFirewallUserFWTemplateRuleDstIP=mGuardFirewallUserFWTemplateRuleDstIP, mGuardTrapBladeCtrlCfgBackup=mGuardTrapBladeCtrlCfgBackup, mGuardUpdateServerPassword=mGuardUpdateServerPassword, mGuardFWINdport=mGuardFWINdport, mGuardVPNFWINEntry=mGuardVPNFWINEntry, mGuardNTPServerEntry=mGuardNTPServerEntry, mGuardContFiltFTPSrvrEntry=mGuardContFiltFTPSrvrEntry, mGuardNetworkStatDynIPReg=mGuardNetworkStatDynIPReg, mGuardSerialPPPLocalIP=mGuardSerialPPPLocalIP, mGuardHTTPSRemoteAccess=mGuardHTTPSRemoteAccess, mGuardDNSServerType=mGuardDNSServerType, mGuardDHCPIntRelayServerIndex=mGuardDHCPIntRelayServerIndex, mGuardNTPStatus=mGuardNTPStatus, mGuardNetworkStatMode=mGuardNetworkStatMode, mGuardDHCPExtStaticRowStatus=mGuardDHCPExtStaticRowStatus, mGuardFirewallUserFWTemplateTimeout=mGuardFirewallUserFWTemplateTimeout, mGuardFWOUTproto=mGuardFWOUTproto, mGuardWebInterface=mGuardWebInterface, mGuardOEMSerial=mGuardOEMSerial, mGuardVPNipsecHash=mGuardVPNipsecHash, mGuardVersions=mGuardVersions, mGuardExternRoutesTable=mGuardExternRoutesTable, mGuardContFiltSMTPSrvrRowStatus=mGuardContFiltSMTPSrvrRowStatus, mGuardVPNL2TPpppdOptTable=mGuardVPNL2TPpppdOptTable, mGuardRADIUSServerIndex=mGuardRADIUSServerIndex, mGuardSNMPAvInfoTrapFlag=mGuardSNMPAvInfoTrapFlag, mGuardRouterRedExtHostCheckRowSt=mGuardRouterRedExtHostCheckRowSt, mGuardContFiltAVPServerURL=mGuardContFiltAVPServerURL, mGuardPPTP=mGuardPPTP, mGuardHTTPSRemotePort=mGuardHTTPSRemotePort, mGuardBladeCtrlIndex=mGuardBladeCtrlIndex, mGuardPSTable=mGuardPSTable, mGuardSerialPPPPasswd=mGuardSerialPPPPasswd, mGuardHardware=mGuardHardware, mGuardTResBladeSlotNr=mGuardTResBladeSlotNr, mGuardCPUSpeed=mGuardCPUSpeed, mGuardContFiltAVPServerRowStatus=mGuardContFiltAVPServerRowStatus, mGuardContFiltHTTPMaxSize=mGuardContFiltHTTPMaxSize, mGuardFirewallOUTLogDefault=mGuardFirewallOUTLogDefault, mGuardRouterRedIntHostCheckRowSt=mGuardRouterRedIntHostCheckRowSt, mGuardRADIUSTimeout=mGuardRADIUSTimeout, mGuardBladeCtrlSlotID=mGuardBladeCtrlSlotID, mGuardContFiltSMTPSrvrIndex=mGuardContFiltSMTPSrvrIndex, mGuardFWOUTcomment=mGuardFWOUTcomment, mGuardContFiltHTTPSrvrScanAction=mGuardContFiltHTTPSrvrScanAction, mGuardDHCPIntRelayMaxHop=mGuardDHCPIntRelayMaxHop, mGuardContFiltQuarantineError=mGuardContFiltQuarantineError, mGuardFirewallUserFWTemplateRuleSrcPort=mGuardFirewallUserFWTemplateRuleSrcPort, mGuardVPNRowStatus=mGuardVPNRowStatus, mGuardPPPOEMSS=mGuardPPPOEMSS, mGuardFirewallConntrackH323=mGuardFirewallConntrackH323, mGuardExternAliasRowStatus=mGuardExternAliasRowStatus, mGuardVPNFWINcomment=mGuardVPNFWINcomment, mGuardBladeSlotID=mGuardBladeSlotID, mGuardRouterExternStaticNetmask=mGuardRouterExternStaticNetmask, mGuardL2FilterInternComment=mGuardL2FilterInternComment, mGuardDHCPLastAccessMAC=mGuardDHCPLastAccessMAC, mGuardFirewallARPLimitExt=mGuardFirewallARPLimitExt, mGuardFirewall=mGuardFirewall, mGuardFirewallICMPPolicy=mGuardFirewallICMPPolicy, mGuardTResColdstart=mGuardTResColdstart, mGuardFWOUTtarget=mGuardFWOUTtarget, mGuardRouterLocalUseVLAN=mGuardRouterLocalUseVLAN, mGuardVPNDynDNS=mGuardVPNDynDNS, mGuardStealthIPConfStatic=mGuardStealthIPConfStatic, mGuardDHCPIntRangeStart=mGuardDHCPIntRangeStart, mGuardDHCPExtRelayCircuitInfo=mGuardDHCPExtRelayCircuitInfo, mGuardSNMPFWRuleTable=mGuardSNMPFWRuleTable, mGuardTResBladeCTRL=mGuardTResBladeCTRL, mGuardLoggingRemoteActivate=mGuardLoggingRemoteActivate, mGuardSSHRemoteFWRuleEntry=mGuardSSHRemoteFWRuleEntry, mGuardPPPOEServiceName=mGuardPPPOEServiceName, mGuardPPTPLocalIP=mGuardPPTPLocalIP, mGuardFirewallNAT=mGuardFirewallNAT, mGuardFirewall11NATRuleTable=mGuardFirewall11NATRuleTable, mGuardExternAliasNetmask=mGuardExternAliasNetmask, mGuardSNMPv1ROCommunity=mGuardSNMPv1ROCommunity, mGuardProfilePullHTTPSFile=mGuardProfilePullHTTPSFile, mGuardRouterExternUseVLAN=mGuardRouterExternUseVLAN, mGuardLocalRouteRowStatus=mGuardLocalRouteRowStatus, mGuardSerialPPPLogin=mGuardSerialPPPLogin, mGuardDHCPIntRelayRemoteInfo=mGuardDHCPIntRelayRemoteInfo, mGuardFirewallEnableConntrackFTP=mGuardFirewallEnableConntrackFTP, mGuardContFiltPOP3VirusAction=mGuardContFiltPOP3VirusAction, mGuardTrapIndustrial=mGuardTrapIndustrial, mGuardSNMPv1RWCommunity=mGuardSNMPv1RWCommunity, mGuardUserFWUserRowStatus=mGuardUserFWUserRowStatus, mGuardTResSignalRelaisReason=mGuardTResSignalRelaisReason, mGuardSerialPPPFWOUTproto=mGuardSerialPPPFWOUTproto, mGuardRouterRedundancyTrack=mGuardRouterRedundancyTrack, mGuardBladeCtrlAVRRevision=mGuardBladeCtrlAVRRevision, mGuardContFiltSMTPSrvrIP=mGuardContFiltSMTPSrvrIP, mGuardTResBladeCtrlCfgBackup=mGuardTResBladeCtrlCfgBackup, mGuardFWOUTsourceIP=mGuardFWOUTsourceIP, mGuardRouterRedundancyExternalID=mGuardRouterRedundancyExternalID, mGuardContFiltPOP3SrvrScanAction=mGuardContFiltPOP3SrvrScanAction, mGuardExternAliasIpAddress=mGuardExternAliasIpAddress, mGuardFirewallUserFWTemplateSrcIP=mGuardFirewallUserFWTemplateSrcIP, mGuardSerialPPPFWINlog=mGuardSerialPPPFWINlog, mGuardTResDiscFull=mGuardTResDiscFull, mGuardExternAliasUseVLAN=mGuardExternAliasUseVLAN, mGuardTrapIndustrialTemperature=mGuardTrapIndustrialTemperature, mGuardStealthStaticActivate=mGuardStealthStaticActivate, mGuardL2FilterExternComment=mGuardL2FilterExternComment, mGuardSerialPPPFWOUTlog=mGuardSerialPPPFWOUTlog, mGuardBladeCtrlProductID=mGuardBladeCtrlProductID, mGuardFirewallNATRuleEntry=mGuardFirewallNATRuleEntry, mGuardBladeCtrlRestore=mGuardBladeCtrlRestore, mGuardPPPOE=mGuardPPPOE, mGuardVPNFWOUTtarget=mGuardVPNFWOUTtarget, mGuardFWNATruleIndex=mGuardFWNATruleIndex, mGuardTrapColdstart=mGuardTrapColdstart, mGuardVPNKeyingTries=mGuardVPNKeyingTries, mGuardVPNFWINconIndex=mGuardVPNFWINconIndex, mGuardExternRouteRowStatus=mGuardExternRouteRowStatus, mGuardContFiltAVPpassWarnings=mGuardContFiltAVPpassWarnings, mGuardVPNikeAlg=mGuardVPNikeAlg, mGuardContFiltHTTPSrvrPort=mGuardContFiltHTTPSrvrPort, mGuardPPPOEpppdOptionsTable=mGuardPPPOEpppdOptionsTable, mGuardBladeCtrlVersion=mGuardBladeCtrlVersion, mGuardContFiltFTPEnable=mGuardContFiltFTPEnable, mGuardRouterRedundancyEnable=mGuardRouterRedundancyEnable, mGuardVPNHideTos=mGuardVPNHideTos, mGuardPPPOEHostUnique=mGuardPPPOEHostUnique, mGuardProductName=mGuardProductName, mGuardVPNRemoteIDMode=mGuardVPNRemoteIDMode, mGuardWebInterfaceLanguage=mGuardWebInterfaceLanguage, mGuardL2FilterExternTable=mGuardL2FilterExternTable, mGuardPSSysID=mGuardPSSysID, mGuardDHCPIntRelayRowStatus=mGuardDHCPIntRelayRowStatus, mGuardDHCPExtStart=mGuardDHCPExtStart, mGuardProfilePullHTTPSPasswd=mGuardProfilePullHTTPSPasswd, mGuardPkgVerVersion=mGuardPkgVerVersion, mGuardExternRouteIndex=mGuardExternRouteIndex, mGuardContFiltHTTPSrvrIndex=mGuardContFiltHTTPSrvrIndex, mGuardPPPOEPasswd=mGuardPPPOEPasswd, mGuardNTPTimezone=mGuardNTPTimezone, mGuardVPNFWINsport=mGuardVPNFWINsport, mGuardL2FilterInternRowStatus=mGuardL2FilterInternRowStatus, mGuardContFiltQuarantineSrvIP=mGuardContFiltQuarantineSrvIP, mGuardFWINtarget=mGuardFWINtarget, mGuardDHCPExtRelayAppend=mGuardDHCPExtRelayAppend, mGuardTResAvUpdateDone=mGuardTResAvUpdateDone, mGuardRouterRedundancyInternalID=mGuardRouterRedundancyInternalID, mGuardUserFWUserIndex=mGuardUserFWUserIndex, mGuardVPNconName=mGuardVPNconName, mGuardStealthL2ForwardSTP=mGuardStealthL2ForwardSTP, mGuardVPN=mGuardVPN, mGuardContFiltHTTPEnable=mGuardContFiltHTTPEnable, mGuardProfilePullHTTPSCert=mGuardProfilePullHTTPSCert, mGuardPackageVersionTable=mGuardPackageVersionTable, mGuardDHCPExtStaticMAC=mGuardDHCPExtStaticMAC, mGuardContFiltSMTPSrvrScanAction=mGuardContFiltSMTPSrvrScanAction, mGuardSNMPFWRuleEntry=mGuardSNMPFWRuleEntry, mGuardFirewallUserFWTemplateUserName=mGuardFirewallUserFWTemplateUserName, mGuardTResCpuLoadHigh=mGuardTResCpuLoadHigh, mGuardTrapAV=mGuardTrapAV, mGuardVPNNatTKeepAliveInterval=mGuardVPNNatTKeepAliveInterval, mGuardVPNDPDDelay=mGuardVPNDPDDelay, mGuardFWPORTFORWoutport=mGuardFWPORTFORWoutport, mGuardFirewall11NATRuleEntry=mGuardFirewall11NATRuleEntry, mGuardNTPServerIndex=mGuardNTPServerIndex, mGuardSNMPenableV1=mGuardSNMPenableV1, mGuardStealthHiDiscoveryState=mGuardStealthHiDiscoveryState, mGuarddnsServerRowStatus=mGuarddnsServerRowStatus, mGuardSystemTemperature=mGuardSystemTemperature, mGuardSSHFWlog=mGuardSSHFWlog, mGuardRouterLocalDevMTU=mGuardRouterLocalDevMTU, mGuardDHCPExtRelayServerTable=mGuardDHCPExtRelayServerTable, mGuardSNMPFWRowStatus=mGuardSNMPFWRowStatus, mGuardVPNDynDNSRegInterval=mGuardVPNDynDNSRegInterval, mGuardContFiltQuarantineVirus=mGuardContFiltQuarantineVirus, mGuardPasswords=mGuardPasswords, mGuardDHCPIntStart=mGuardDHCPIntStart, mGuardL2FilterInternTable=mGuardL2FilterInternTable, mGuardStealthL2ForwardDHCP=mGuardStealthL2ForwardDHCP, mGuardSerialPPPFWINEntry=mGuardSerialPPPFWINEntry, mGuardTrapAvFailed=mGuardTrapAvFailed, mGuardTResSignalRelaisReasonIdx=mGuardTResSignalRelaisReasonIdx, mGuardVPNFWINdestinationIP=mGuardVPNFWINdestinationIP, mGuardFirewallUserFWTemplateRuleTemplateIndex=mGuardFirewallUserFWTemplateRuleTemplateIndex, mGuardVPNlocalNet=mGuardVPNlocalNet, mGuardDHCPExtDnsServer=mGuardDHCPExtDnsServer, mGuardHTTPSFWruleIndex=mGuardHTTPSFWruleIndex, mGuardLogging=mGuardLogging, mGuardVPNFWINdport=mGuardVPNFWINdport, mGuardLocalAliasUseVLAN=mGuardLocalAliasUseVLAN, mGuardLocalAliasNetmask=mGuardLocalAliasNetmask, mGuardFWPORTFORWoutIP=mGuardFWPORTFORWoutIP, mGuardSNMPTrapReceiverEntry=mGuardSNMPTrapReceiverEntry)
mibBuilder.exportSymbols("MGUARDB-MIB", mGuardContFiltFTPSrvrRowStatus=mGuardContFiltFTPSrvrRowStatus, mGuardBladeCtrlDevice=mGuardBladeCtrlDevice, mGuardContFiltPOP3SrvrRowStatus=mGuardContFiltPOP3SrvrRowStatus, mGuardSerialPPPFWOUTcomment=mGuardSerialPPPFWOUTcomment, mGuardL2FilterExternTarget=mGuardL2FilterExternTarget, mGuardSNMPFWtarget=mGuardSNMPFWtarget, mGuardTResIndustrialPower=mGuardTResIndustrialPower, mGuardHTTPSLastAccessIP=mGuardHTTPSLastAccessIP, mGuardContFilt=mGuardContFilt, mGuardStealthIPConfMode=mGuardStealthIPConfMode, mGuardSerialPPPFWINtarget=mGuardSerialPPPFWINtarget, mGuardHTTPSFWsourceIP=mGuardHTTPSFWsourceIP, mGuardDHCPIntStaticTable=mGuardDHCPIntStaticTable, mGuardVPNProtoAH=mGuardVPNProtoAH, mGuardHTTPSFWcomment=mGuardHTTPSFWcomment, mGuardExternRouteGateway=mGuardExternRouteGateway, mGuardVPNL2TPRemoteIPRangeStart=mGuardVPNL2TPRemoteIPRangeStart, mGuardSerialPPPFWINcomment=mGuardSerialPPPFWINcomment, mGuardVPNFWOUTcomment=mGuardVPNFWOUTcomment, mGuardFirewallUserFWTemplateUserIndex=mGuardFirewallUserFWTemplateUserIndex, mGuardSerialPPPFWOUTRowStatus=mGuardSerialPPPFWOUTRowStatus, mGuardRouterRedundancyPeerIntern=mGuardRouterRedundancyPeerIntern, mGuardL2FilterInternDstMac=mGuardL2FilterInternDstMac, mGuardFirewallICMPLimitInt=mGuardFirewallICMPLimitInt, mGuardStealthManageActivate=mGuardStealthManageActivate, mGuardTResAutoConfigAdapterState=mGuardTResAutoConfigAdapterState, mGuardVPNFWLogDefIn=mGuardVPNFWLogDefIn, mGuardVPNIkeLog=mGuardVPNIkeLog, mGuardPPPOEpppdOptionsEntry=mGuardPPPOEpppdOptionsEntry, mGuardTResIndustrialTempLowLimit=mGuardTResIndustrialTempLowLimit, mGuardL2FilterInternTarget=mGuardL2FilterInternTarget, mGuardRADIUSServerTable=mGuardRADIUSServerTable, mGuardDHCPExtRelayMaxHop=mGuardDHCPExtRelayMaxHop, mGuardBladeCtrlBackup=mGuardBladeCtrlBackup, mGuardContFiltHTTPSrvrRowStatus=mGuardContFiltHTTPSrvrRowStatus, mGuardContFiltSMTP=mGuardContFiltSMTP, mGuardVPNAggressive=mGuardVPNAggressive, mGuardHTTPSRemoteFWRuleEntry=mGuardHTTPSRemoteFWRuleEntry, mGuardLocalAliasIndex=mGuardLocalAliasIndex, mGuardFirewallINLogDefault=mGuardFirewallINLogDefault, mGuardUpdates=mGuardUpdates, mGuardTResAvVirusDetected=mGuardTResAvVirusDetected, mGuardHostnameMode=mGuardHostnameMode, mGuardSerialPPPFWOUTLogDefault=mGuardSerialPPPFWOUTLogDefault, mGuardLoggingRemoteIP=mGuardLoggingRemoteIP, mGuardExternRoutesEntry=mGuardExternRoutesEntry, mGuardDHCPExtStaticTable=mGuardDHCPExtStaticTable, mGuardBladeCtrlSerial=mGuardBladeCtrlSerial, mGuardNetworkMode=mGuardNetworkMode, mGuardSerialPPPFWINdestinationIP=mGuardSerialPPPFWINdestinationIP, mGuardContFiltPOP3MaxSize=mGuardContFiltPOP3MaxSize, mGuardVPNFWINtarget=mGuardVPNFWINtarget, mGuardTrapBladeCtrlPowerStatus=mGuardTrapBladeCtrlPowerStatus, mGuardRouter=mGuardRouter, mGuardFirewallIncomingEntry=mGuardFirewallIncomingEntry, mGuardContFiltAVPHTTPProxy=mGuardContFiltAVPHTTPProxy, mGuardPPPOEAccessConcentName=mGuardPPPOEAccessConcentName, mGuardBladePwrTable=mGuardBladePwrTable, mGuardContFiltSMTPSrvrEntry=mGuardContFiltSMTPSrvrEntry, mGuardDHCPIntRelayServerIP=mGuardDHCPIntRelayServerIP, mGuardDHCPExtRelayRemoteText=mGuardDHCPExtRelayRemoteText, mGuardDHCPExtRelayServerIP=mGuardDHCPExtRelayServerIP, mGuardDNSUserDefinedServerTable=mGuardDNSUserDefinedServerTable, mGuardContFiltFTPSrvrComment=mGuardContFiltFTPSrvrComment, mGuardFW11NATMask=mGuardFW11NATMask, mGuardStealthMTU=mGuardStealthMTU, mGuardAdminPassword=mGuardAdminPassword, mGuardVPNConnectionTable=mGuardVPNConnectionTable, mGuardSNMPFWsourceIP=mGuardSNMPFWsourceIP, mGuardRouterExternVlanId=mGuardRouterExternVlanId, mGuardTrapBladeCtrlRunStatus=mGuardTrapBladeCtrlRunStatus, mGuardVPNIpsecLifetime=mGuardVPNIpsecLifetime, mGuardSNMPBladeConfigTrapFlag=mGuardSNMPBladeConfigTrapFlag, mGuardRouterRedundancy=mGuardRouterRedundancy, mGuardFWINruleIndex=mGuardFWINruleIndex, mGuardSNMPError=mGuardSNMPError, mGuardUSMem=mGuardUSMem, mGuardVPNpsk=mGuardVPNpsk, mGuardContFiltQuarantine=mGuardContFiltQuarantine, mGuardVPNNatTraversal=mGuardVPNNatTraversal, mGuardSNMPTrapReceiverName=mGuardSNMPTrapReceiverName, mGuardStealthL2Filter=mGuardStealthL2Filter, mGuardContFiltPOP3SrvrTable=mGuardContFiltPOP3SrvrTable, mGuardNetwork=mGuardNetwork, mGuardUpdateServerEntry=mGuardUpdateServerEntry, mGuardContFiltPOP3SrvrIP=mGuardContFiltPOP3SrvrIP, mGuardDHCPExtRelayServerEntry=mGuardDHCPExtRelayServerEntry, mGuardUpdateServerIndex=mGuardUpdateServerIndex, mGuardDNSSearchPath=mGuardDNSSearchPath, mGuardTrapIndustrialPowerStatus=mGuardTrapIndustrialPowerStatus, mGuardContFiltAVPHTTPProxyPasswd=mGuardContFiltAVPHTTPProxyPasswd, mGuardHardwareInformation=mGuardHardwareInformation, mGuardTResIndustrialTemperature=mGuardTResIndustrialTemperature, mGuardRouterExternActivate=mGuardRouterExternActivate, mGuardVPNL2TPpppdOptIndex=mGuardVPNL2TPpppdOptIndex, mGuardDHCPExtRelayRemoteInfo=mGuardDHCPExtRelayRemoteInfo, mGuardRouterExternDevVlanMTU=mGuardRouterExternDevVlanMTU, mGuardLocalAliasIpAddress=mGuardLocalAliasIpAddress, mGuardFirewallIncomingTable=mGuardFirewallIncomingTable, mGuardVPNmtu=mGuardVPNmtu, mGuardTResSigLinkID=mGuardTResSigLinkID, mGuardFirewallUserFWTemplateComment=mGuardFirewallUserFWTemplateComment, mGuardRouterHiDiscovery=mGuardRouterHiDiscovery, mGuardWebInterfaceSessionTimeout=mGuardWebInterfaceSessionTimeout, mGuardRouterRedIntHostCheckIP=mGuardRouterRedIntHostCheckIP, mGuardVPNL2TPpppdOptRowStatus=mGuardVPNL2TPpppdOptRowStatus, mGuardFirewallICMPLimitExt=mGuardFirewallICMPLimitExt, mGuardTResSignalLinkTable=mGuardTResSignalLinkTable, mGuardFirewallOutgoing=mGuardFirewallOutgoing, mGuardContFiltAVPpass=mGuardContFiltAVPpass, mGuardBladePwrIndex=mGuardBladePwrIndex, mGuardDHCPExtWINS=mGuardDHCPExtWINS, mGuardFirewallUserFWTemplateRuleDstPort=mGuardFirewallUserFWTemplateRuleDstPort, mGuardManuDate=mGuardManuDate, mGuardL2FilterExternEntry=mGuardL2FilterExternEntry, mGuardRouterExternStaticIP=mGuardRouterExternStaticIP, mGuardContFiltAVPpassSuspicious=mGuardContFiltAVPpassSuspicious, mGuardSNMPTrapReceiverTable=mGuardSNMPTrapReceiverTable, mGuardVPNConnectionEntry=mGuardVPNConnectionEntry, mGuardFWPORTFORWinport=mGuardFWPORTFORWinport, mGuardSNMPBladeStateTrapFlag=mGuardSNMPBladeStateTrapFlag, mGuardVPNDynDNSCheck=mGuardVPNDynDNSCheck, mGuardVPNProtoESP=mGuardVPNProtoESP, mGuardFirewallUserFWTemplateRuleProto=mGuardFirewallUserFWTemplateRuleProto, mGuardContFiltFTPSrvrPort=mGuardContFiltFTPSrvrPort, mGuardTrapSignalRelais=mGuardTrapSignalRelais, mGuardVPNDynDNSRegServer=mGuardVPNDynDNSRegServer, mGuardPPTPpppdOptionsIndex=mGuardPPTPpppdOptionsIndex, mGuardStealthManageVLanID=mGuardStealthManageVLanID, mGuardExternRouteNetwork=mGuardExternRouteNetwork, mGuardMAC3=mGuardMAC3, mGuardTResSignalRelaisState=mGuardTResSignalRelaisState, mGuardSSHRemoteFWRuleTable=mGuardSSHRemoteFWRuleTable, mGuardFirewallOutgoingEntry=mGuardFirewallOutgoingEntry, mGuardRouterExternStaticGateway=mGuardRouterExternStaticGateway, mGuardDHCPExtStaticIP=mGuardDHCPExtStaticIP, mGuardTrapCpuLoadHigh=mGuardTrapCpuLoadHigh, mGuardHTTPSFWinterface=mGuardHTTPSFWinterface, mGuardPSID=mGuardPSID, mGuardDHCPExtNetmask=mGuardDHCPExtNetmask, mGuardRouterExternAliasesTable=mGuardRouterExternAliasesTable, mGuardDHCP=mGuardDHCP, mGuardSSHFWinterface=mGuardSSHFWinterface, mGuardPkgIndex=mGuardPkgIndex, mGuardVPNFWOUTsport=mGuardVPNFWOUTsport, mGuardPPTPpppdOptionsValue=mGuardPPTPpppdOptionsValue, mGuardContFiltAVPHTTPProxyServer=mGuardContFiltAVPHTTPProxyServer, mGuardFirewallARPLimitInt=mGuardFirewallARPLimitInt, mGuardVPNFWINruleIndex=mGuardVPNFWINruleIndex, mGuardDHCPExtRelayAppendLimit=mGuardDHCPExtRelayAppendLimit, mGuardFirewallUserFWTemplateTable=mGuardFirewallUserFWTemplateTable, mGuardSerialPPPFWINproto=mGuardSerialPPPFWINproto, mGuardSNMPColdStartTrapFlag=mGuardSNMPColdStartTrapFlag, mGuardDHCPNewClientTrap=mGuardDHCPNewClientTrap, mGuardUserPwdEnable=mGuardUserPwdEnable, mGuardRouterRedundancyVirtIpExt=mGuardRouterRedundancyVirtIpExt, mGuardPPTPpppdOptionsRowStatus=mGuardPPTPpppdOptionsRowStatus, mGuardNetworkStatHTTPSRemAccess=mGuardNetworkStatHTTPSRemAccess, mGuardPPTPLogin=mGuardPPTPLogin, mGuardFWPORTFORWRowStatus=mGuardFWPORTFORWRowStatus, mGuardFirewallUserFWTemplateUserRowStatus=mGuardFirewallUserFWTemplateUserRowStatus, mGuardL2FilterInternRuleIndex=mGuardL2FilterInternRuleIndex, mGuardTResAvUpdateError=mGuardTResAvUpdateError, mGuardContFiltPOP3=mGuardContFiltPOP3, mGuardBladeCtrlEntry=mGuardBladeCtrlEntry, mGuardVPNMachineCert=mGuardVPNMachineCert, mGuardVPNStrictCRLPolicy=mGuardVPNStrictCRLPolicy, mGuardFW11NATruleIndex=mGuardFW11NATruleIndex, mGuardArpTimeout=mGuardArpTimeout, mGuardVPNpfs=mGuardVPNpfs, mGuardVPNDynDNSCheckRefresh=mGuardVPNDynDNSCheckRefresh, mGuardFW11NATLog=mGuardFW11NATLog, mGuardDHCPExtStaticEntry=mGuardDHCPExtStaticEntry, mGuardPSEntry=mGuardPSEntry, mGuardTResRedundancy=mGuardTResRedundancy, mGuardContFiltQuarantineClean=mGuardContFiltQuarantineClean, mGuardProdSoft=mGuardProdSoft, mGuardSSHFWcomment=mGuardSSHFWcomment, mGuardRADIUSServerEntry=mGuardRADIUSServerEntry, mGuardUserFWUserName=mGuardUserFWUserName, mGuardContFiltAVPLogLevel=mGuardContFiltAVPLogLevel, mGuardTrapDiscFull=mGuardTrapDiscFull, mGuardLocalRouteNetwork=mGuardLocalRouteNetwork, mGuardFWINdestinationIP=mGuardFWINdestinationIP, mGuardVPNFWINTable=mGuardVPNFWINTable, mGuardFirewallPortforwardTable=mGuardFirewallPortforwardTable, mGuardExternAliasVLANid=mGuardExternAliasVLANid, mGuardUserFWUsers=mGuardUserFWUsers, mGuardContFiltPOP3SrvrEntry=mGuardContFiltPOP3SrvrEntry, mGuardVerParSet=mGuardVerParSet, mGuardSNMP=mGuardSNMP, mGuardMAC1=mGuardMAC1, mGuardBladeRackID=mGuardBladeRackID, mGuardFWNATOutIP=mGuardFWNATOutIP, mGuardSerialPPPFWINTable=mGuardSerialPPPFWINTable, mGuardUpdateServerLogin=mGuardUpdateServerLogin, mGuardRADIUSServerPort=mGuardRADIUSServerPort, mGuardLocalRoutesEntry=mGuardLocalRoutesEntry, mGuardFirewallOutgoingTable=mGuardFirewallOutgoingTable, mGuardRouterExtern=mGuardRouterExtern, mGuardVPNFWOUTconIndex=mGuardVPNFWOUTconIndex, mGuardTrapAutoConfigAdapterState=mGuardTrapAutoConfigAdapterState, mGuardSNMPFWcomment=mGuardSNMPFWcomment, mGuardSerialPPPFWOUT=mGuardSerialPPPFWOUT, mGuardContFiltFTPExceedAction=mGuardContFiltFTPExceedAction, mGuardTResSignalRelaisPowerAlarm=mGuardTResSignalRelaisPowerAlarm, mGuardStealthManageGateway=mGuardStealthManageGateway, mGuardSerialPPPFWOUTsourceIP=mGuardSerialPPPFWOUTsourceIP, mGuardNetworkStatUptime=mGuardNetworkStatUptime, mGuardPPTPpppdOptionsTable=mGuardPPTPpppdOptionsTable, mGuardSerialPPPRemoteIP=mGuardSerialPPPRemoteIP, mGuardNetworkStatus=mGuardNetworkStatus, mGuardFWOUTdestinationIP=mGuardFWOUTdestinationIP, mGuardDHCPExtRelayServerIndex=mGuardDHCPExtRelayServerIndex, mGuardContFiltAVPMaxConnections=mGuardContFiltAVPMaxConnections, mGuardProfilePullHTTPSPort=mGuardProfilePullHTTPSPort, mGuardSNMPChassisTrapFlag=mGuardSNMPChassisTrapFlag, mGuardVPNNatTPortfloating=mGuardVPNNatTPortfloating, mGuardFirewallUserFWTemplateRuleComment=mGuardFirewallUserFWTemplateRuleComment, mGuardVPNRemoteID=mGuardVPNRemoteID, mGuardRouterRedundancyPeerExtern=mGuardRouterRedundancyPeerExtern, mGuardFirewallIpUncleanMatch=mGuardFirewallIpUncleanMatch, mGuardRouterLocalAliasesEntry=mGuardRouterLocalAliasesEntry, mGuardContFiltHTTPExceedAction=mGuardContFiltHTTPExceedAction, mGuardSNMPTrapReceiverCommunity=mGuardSNMPTrapReceiverCommunity, mGuardContFiltSMTPSrvrTable=mGuardContFiltSMTPSrvrTable, mGuardPPTPassword=mGuardPPTPassword, mGuardVPNFWINsourceIP=mGuardVPNFWINsourceIP, mGuardHTTPSFWlog=mGuardHTTPSFWlog, mGuardSNMPAuthenticationTrapFlag=mGuardSNMPAuthenticationTrapFlag, mGuardVPNL2TPRemoteIPRangeEnd=mGuardVPNL2TPRemoteIPRangeEnd, mGuardRescueSystem=mGuardRescueSystem, mGuardPkgVerNum=mGuardPkgVerNum, mGuardNTPServerRowStatus=mGuardNTPServerRowStatus, mGuardTrapAvUpdateDone=mGuardTrapAvUpdateDone, mGuardFWINproto=mGuardFWINproto, mGuardFWPORTFORWsrcport=mGuardFWPORTFORWsrcport, mGuardVPNconIndex=mGuardVPNconIndex, mGuardSerialPPPEnable=mGuardSerialPPPEnable, mGuardVPNFWOUTRowStatus=mGuardVPNFWOUTRowStatus, mGuardHTTPSFWtarget=mGuardHTTPSFWtarget, mGuardContFiltHTTPSrvrComment=mGuardContFiltHTTPSrvrComment, mGuardFirewallUserFWTemplateIndex=mGuardFirewallUserFWTemplateIndex, mGuardRouterRedIntHostCheckTable=mGuardRouterRedIntHostCheckTable, mGuardFWPORTFORWruleIndex=mGuardFWPORTFORWruleIndex, mGuardVPNremGW=mGuardVPNremGW, mGuardHostname=mGuardHostname, mGuardFirewallNATRuleTable=mGuardFirewallNATRuleTable, mGuardTrapRouterRedundancyStatusChange=mGuardTrapRouterRedundancyStatusChange, mGuardContFiltAVPServerIndex=mGuardContFiltAVPServerIndex, mGuardFirewallUserFW=mGuardFirewallUserFW, mGuardDHCPIntRelayRemoteText=mGuardDHCPIntRelayRemoteText, mGuardPPPOELogin=mGuardPPPOELogin, mGuardStealthStaticIP=mGuardStealthStaticIP)
mibBuilder.exportSymbols("MGUARDB-MIB", mGuardVPNremoteMask=mGuardVPNremoteMask, mGuardVPNFWINproto=mGuardVPNFWINproto, mGuardDHCPExtRangeEnd=mGuardDHCPExtRangeEnd, mGuardCPU=mGuardCPU, mGuardUpdateServerProto=mGuardUpdateServerProto, mGuardShellLastAccessIP=mGuardShellLastAccessIP, mGuardContFiltPOP3ExceedAction=mGuardContFiltPOP3ExceedAction, mGuardTrapMemoryFull=mGuardTrapMemoryFull, mGuardVPNFWLogDefOut=mGuardVPNFWLogDefOut, mGuardVPNL2TP=mGuardVPNL2TP, mGuardDHCPIntDnsServer=mGuardDHCPIntDnsServer, mGuardProfilePullSchedule=mGuardProfilePullSchedule, mGuardNetworkStatSSHRemoteAccess=mGuardNetworkStatSSHRemoteAccess, mGuardRADIUSRetries=mGuardRADIUSRetries, mGuardRouterLocalActivate=mGuardRouterLocalActivate, mGuardSNMPport=mGuardSNMPport, mGuardSerialPPPFWOUTruleIndex=mGuardSerialPPPFWOUTruleIndex, mGuardVPNRekeyFuzz=mGuardVPNRekeyFuzz, mGuardL2FilterInternEthType=mGuardL2FilterInternEthType, mGuardL2FilterExternRuleIndex=mGuardL2FilterExternRuleIndex, mGuardLocalRoutesTable=mGuardLocalRoutesTable, mGuardVPNFWOUTdestinationIP=mGuardVPNFWOUTdestinationIP, mGuardFirewall11NAT=mGuardFirewall11NAT, mGuardUpdateServerTable=mGuardUpdateServerTable, mGuardTrapBladeCtrlCfgRestored=mGuardTrapBladeCtrlCfgRestored, mGuardTrapAvUpdateError=mGuardTrapAvUpdateError, mGuardNetworkStatExtIP=mGuardNetworkStatExtIP, mGuardContFiltAVPSchedule=mGuardContFiltAVPSchedule, mGuardSNMPTrapReceiverRowStatus=mGuardSNMPTrapReceiverRowStatus, mGuardTResPlatformSpecific=mGuardTResPlatformSpecific, mGuardFWOUTlog=mGuardFWOUTlog, mGuardDHCPIntRelayAppendLimit=mGuardDHCPIntRelayAppendLimit, mGuardL2FilterExternRowStatus=mGuardL2FilterExternRowStatus, mGuardNetworkStatVPN=mGuardNetworkStatVPN, mGuardContFiltHTTPSrvrTable=mGuardContFiltHTTPSrvrTable, mGuardSerialPPPFWOUTsport=mGuardSerialPPPFWOUTsport, mGuardSSHRemoteEnable=mGuardSSHRemoteEnable, mGuardFWPORTFORWinIP=mGuardFWPORTFORWinIP, mGuardFirewallIPSynfloodLimitExt=mGuardFirewallIPSynfloodLimitExt, mGuardL2FilterInternSrcMac=mGuardL2FilterInternSrcMac, mGuardVPNL2TPpppdOptEntry=mGuardVPNL2TPpppdOptEntry, mGuardRouterHiDiscoveryExtern=mGuardRouterHiDiscoveryExtern, mGuardSNMPTrapReceiverIPAddress=mGuardSNMPTrapReceiverIPAddress, mGuardDHCPExtRelayRowStatus=mGuardDHCPExtRelayRowStatus, mGuardFWPORTFORWcomment=mGuardFWPORTFORWcomment, mGuardUsers=mGuardUsers, mGuardDHCPIntRelayCircuitInfo=mGuardDHCPIntRelayCircuitInfo, mGuardContFiltPOP3Enable=mGuardContFiltPOP3Enable, mGuardCPUFamily=mGuardCPUFamily)
