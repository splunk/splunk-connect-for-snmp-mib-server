#
# PySNMP MIB module TIMETRA-ELMI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-ELMI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:10:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, Counter64, TimeTicks, iso, IpAddress, Bits, MibIdentifier, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "Counter64", "TimeTicks", "iso", "IpAddress", "Bits", "MibIdentifier", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Integer32")
DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp")
tmnxChassisIndex, = mibBuilder.importSymbols("TIMETRA-CHASSIS-MIB", "tmnxChassisIndex")
timetraSRMIBModules, tmnxSRNotifyPrefix, tmnxSRObjs, tmnxSRConfs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "timetraSRMIBModules", "tmnxSRNotifyPrefix", "tmnxSRObjs", "tmnxSRConfs")
tmnxPortEtherEntry, tmnxPortPortID = mibBuilder.importSymbols("TIMETRA-PORT-MIB", "tmnxPortEtherEntry", "tmnxPortPortID")
TmnxEncapVal, = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TmnxEncapVal")
tmnxElmiMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 68))
tmnxElmiMIBModule.setRevisions(('1908-10-23 00:00',))
if mibBuilder.loadTexts: tmnxElmiMIBModule.setLastUpdated('0902280000Z')
if mibBuilder.loadTexts: tmnxElmiMIBModule.setOrganization('Alcatel-Lucent')
tmnxElmiObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68))
tmnxElmiNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 68))
tmnxElmiConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68))
tmnxElmiConfigurationTimeStamps = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 0))
tmnxElmiConfigurations = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1))
tmnxElmiStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2))
tmnxElmiNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 68, 0))
tmnxElmiCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 1))
tmnxElmiGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 2))
class TmnxElmiIdentifierString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 100)

tmnxElmiIfConfigTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 0, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiIfConfigTableLastChanged.setStatus('current')
tmnxElmiIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1), )
if mibBuilder.loadTexts: tmnxElmiIfConfigTable.setStatus('current')
tmnxElmiIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1), )
tmnxPortEtherEntry.registerAugmentions(("TIMETRA-ELMI-MIB", "tmnxElmiIfConfigEntry"))
tmnxElmiIfConfigEntry.setIndexNames(*tmnxPortEtherEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxElmiIfConfigEntry.setStatus('current')
tmnxElmiIfCfgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("uniN", 1), ("uniC", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxElmiIfCfgMode.setStatus('current')
tmnxElmiIfCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiIfCfgStatus.setStatus('current')
tmnxElmiIfCfgN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxElmiIfCfgN393.setStatus('current')
tmnxElmiIfCfgT391 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxElmiIfCfgT391.setStatus('current')
tmnxElmiIfCfgT392 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxElmiIfCfgT392.setStatus('current')
tmnxElmiIfCfgUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notUsed", 0), ("allToOneBundling", 1), ("svcMultiplexNoBundling", 2), ("bundling", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiIfCfgUniType.setStatus('current')
tmnxElmiIfCfgUniIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 1, 1, 7), TmnxElmiIdentifierString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxElmiIfCfgUniIdentifier.setStatus('current')
tmnxElmiEvcCfgTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 0, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiEvcCfgTableLastChanged.setStatus('current')
tmnxElmiEvcConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 2), )
if mibBuilder.loadTexts: tmnxElmiEvcConfigTable.setStatus('current')
tmnxElmiEvcConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 2, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-ELMI-MIB", "tmnxElmiEvcCfgVlanId"))
if mibBuilder.loadTexts: tmnxElmiEvcConfigEntry.setStatus('current')
tmnxElmiEvcCfgVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 2, 1, 1), TmnxEncapVal())
if mibBuilder.loadTexts: tmnxElmiEvcCfgVlanId.setStatus('current')
tmnxElmiEvcCfgIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 2, 1, 2), TmnxElmiIdentifierString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxElmiEvcCfgIdentifier.setStatus('current')
tmnxElmiEvcCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("p2p", 0), ("mp2mp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiEvcCfgType.setStatus('current')
tmnxElmiEvcCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notActive", 0), ("newAndNotActive", 1), ("active", 2), ("newAndActive", 3), ("partiallyActive", 4), ("newAndPartiallyActive", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiEvcCfgStatus.setStatus('current')
tmnxElmiEvcCfgStatusTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 1, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiEvcCfgStatusTimeStamp.setStatus('current')
tmnxElmiStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1), )
if mibBuilder.loadTexts: tmnxElmiStatTable.setStatus('current')
tmnxElmiStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1), )
tmnxElmiIfConfigEntry.registerAugmentions(("TIMETRA-ELMI-MIB", "tmnxElmiStatEntry"))
tmnxElmiStatEntry.setIndexNames(*tmnxElmiIfConfigEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxElmiStatEntry.setStatus('current')
tmnxElmiStatRxStatusEnqMsgTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatRxStatusEnqMsgTime.setStatus('current')
tmnxElmiStatRxStatusEnqMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 2), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatRxStatusEnqMsgs.setStatus('current')
tmnxElmiStatStatusEnqMsgTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 3), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatStatusEnqMsgTimeouts.setStatus('current')
tmnxElmiStatTxStatusMsgTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatTxStatusMsgTime.setStatus('current')
tmnxElmiStatTxStatusMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatTxStatusMsgs.setStatus('current')
tmnxElmiStatRxStatusCheckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatRxStatusCheckTime.setStatus('current')
tmnxElmiStatTxStatusCheckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatTxStatusCheckTime.setStatus('current')
tmnxElmiStatDiscardedMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 8), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatDiscardedMsgs.setStatus('current')
tmnxElmiStatInvRxSeqNumMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 9), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatInvRxSeqNumMsgs.setStatus('current')
tmnxElmiStatTxAsyncStatusMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 68, 2, 1, 1, 10), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxElmiStatTxAsyncStatusMsgs.setStatus('current')
tmnxElmiIfStatusChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 68, 0, 1)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgStatus"))
if mibBuilder.loadTexts: tmnxElmiIfStatusChangeEvent.setStatus('current')
tmnxElmiEVCStatusChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 68, 0, 2)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiEvcCfgStatus"))
if mibBuilder.loadTexts: tmnxElmiEVCStatusChangeEvent.setStatus('current')
tmnxElmiCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 1, 1)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiTimeStampGroup"), ("TIMETRA-ELMI-MIB", "tmnxElmiIfConfigGroup"), ("TIMETRA-ELMI-MIB", "tmnxElmiEvcConfigGroup"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatsGroup"), ("TIMETRA-ELMI-MIB", "tmnxElmiEventGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxElmiCompliance = tmnxElmiCompliance.setStatus('current')
tmnxElmiTimeStampGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 2, 1)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiIfConfigTableLastChanged"), ("TIMETRA-ELMI-MIB", "tmnxElmiEvcCfgTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxElmiTimeStampGroup = tmnxElmiTimeStampGroup.setStatus('current')
tmnxElmiIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 2, 2)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgMode"), ("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgStatus"), ("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgN393"), ("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgT391"), ("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgT392"), ("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgUniType"), ("TIMETRA-ELMI-MIB", "tmnxElmiIfCfgUniIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxElmiIfConfigGroup = tmnxElmiIfConfigGroup.setStatus('current')
tmnxElmiEvcConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 2, 3)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiEvcCfgIdentifier"), ("TIMETRA-ELMI-MIB", "tmnxElmiEvcCfgType"), ("TIMETRA-ELMI-MIB", "tmnxElmiEvcCfgStatus"), ("TIMETRA-ELMI-MIB", "tmnxElmiEvcCfgStatusTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxElmiEvcConfigGroup = tmnxElmiEvcConfigGroup.setStatus('current')
tmnxElmiStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 2, 4)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiStatRxStatusEnqMsgTime"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatRxStatusEnqMsgs"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatStatusEnqMsgTimeouts"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatTxStatusMsgTime"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatTxStatusMsgs"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatRxStatusCheckTime"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatTxStatusCheckTime"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatDiscardedMsgs"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatInvRxSeqNumMsgs"), ("TIMETRA-ELMI-MIB", "tmnxElmiStatTxAsyncStatusMsgs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxElmiStatsGroup = tmnxElmiStatsGroup.setStatus('current')
tmnxElmiEventGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 68, 2, 5)).setObjects(("TIMETRA-ELMI-MIB", "tmnxElmiIfStatusChangeEvent"), ("TIMETRA-ELMI-MIB", "tmnxElmiEVCStatusChangeEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxElmiEventGroup = tmnxElmiEventGroup.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-ELMI-MIB", tmnxElmiStatRxStatusEnqMsgTime=tmnxElmiStatRxStatusEnqMsgTime, tmnxElmiStatTable=tmnxElmiStatTable, tmnxElmiIfCfgUniIdentifier=tmnxElmiIfCfgUniIdentifier, tmnxElmiConformance=tmnxElmiConformance, tmnxElmiConfigurationTimeStamps=tmnxElmiConfigurationTimeStamps, tmnxElmiStatTxStatusMsgs=tmnxElmiStatTxStatusMsgs, tmnxElmiStatsGroup=tmnxElmiStatsGroup, tmnxElmiEvcConfigTable=tmnxElmiEvcConfigTable, tmnxElmiStatEntry=tmnxElmiStatEntry, tmnxElmiIfCfgT391=tmnxElmiIfCfgT391, tmnxElmiStatTxAsyncStatusMsgs=tmnxElmiStatTxAsyncStatusMsgs, tmnxElmiStatTxStatusCheckTime=tmnxElmiStatTxStatusCheckTime, tmnxElmiNotifyPrefix=tmnxElmiNotifyPrefix, tmnxElmiIfConfigTable=tmnxElmiIfConfigTable, tmnxElmiEvcCfgTableLastChanged=tmnxElmiEvcCfgTableLastChanged, tmnxElmiEvcCfgVlanId=tmnxElmiEvcCfgVlanId, tmnxElmiIfConfigGroup=tmnxElmiIfConfigGroup, tmnxElmiIfConfigTableLastChanged=tmnxElmiIfConfigTableLastChanged, tmnxElmiIfCfgUniType=tmnxElmiIfCfgUniType, tmnxElmiEvcCfgStatus=tmnxElmiEvcCfgStatus, tmnxElmiStatRxStatusEnqMsgs=tmnxElmiStatRxStatusEnqMsgs, tmnxElmiStatistics=tmnxElmiStatistics, tmnxElmiIfStatusChangeEvent=tmnxElmiIfStatusChangeEvent, tmnxElmiEvcCfgStatusTimeStamp=tmnxElmiEvcCfgStatusTimeStamp, TmnxElmiIdentifierString=TmnxElmiIdentifierString, tmnxElmiEvcCfgType=tmnxElmiEvcCfgType, tmnxElmiStatInvRxSeqNumMsgs=tmnxElmiStatInvRxSeqNumMsgs, tmnxElmiIfCfgN393=tmnxElmiIfCfgN393, tmnxElmiIfCfgT392=tmnxElmiIfCfgT392, tmnxElmiEVCStatusChangeEvent=tmnxElmiEVCStatusChangeEvent, tmnxElmiConfigurations=tmnxElmiConfigurations, tmnxElmiEvcConfigGroup=tmnxElmiEvcConfigGroup, tmnxElmiCompliances=tmnxElmiCompliances, tmnxElmiIfConfigEntry=tmnxElmiIfConfigEntry, tmnxElmiIfCfgStatus=tmnxElmiIfCfgStatus, tmnxElmiStatRxStatusCheckTime=tmnxElmiStatRxStatusCheckTime, tmnxElmiGroups=tmnxElmiGroups, PYSNMP_MODULE_ID=tmnxElmiMIBModule, tmnxElmiEvcCfgIdentifier=tmnxElmiEvcCfgIdentifier, tmnxElmiStatTxStatusMsgTime=tmnxElmiStatTxStatusMsgTime, tmnxElmiStatDiscardedMsgs=tmnxElmiStatDiscardedMsgs, tmnxElmiEvcConfigEntry=tmnxElmiEvcConfigEntry, tmnxElmiTimeStampGroup=tmnxElmiTimeStampGroup, tmnxElmiStatStatusEnqMsgTimeouts=tmnxElmiStatStatusEnqMsgTimeouts, tmnxElmiMIBModule=tmnxElmiMIBModule, tmnxElmiNotifications=tmnxElmiNotifications, tmnxElmiObjs=tmnxElmiObjs, tmnxElmiEventGroup=tmnxElmiEventGroup, tmnxElmiCompliance=tmnxElmiCompliance, tmnxElmiIfCfgMode=tmnxElmiIfCfgMode)
