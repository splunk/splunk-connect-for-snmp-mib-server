#
# PySNMP MIB module WLSX-MON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSX-MON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ArubaAPMatchMethod, ArubaAPMatchType, ArubaRogueApType, ArubaMonAuthAlgorithm, ArubaPhyType, ArubaFrameType, ArubaHTMode, ArubaMonEncryptionCipher, ArubaStationType, ArubaHTRate, ArubaEnableValue, ArubaMonEncryptionType = mibBuilder.importSymbols("ARUBA-TC", "ArubaAPMatchMethod", "ArubaAPMatchType", "ArubaRogueApType", "ArubaMonAuthAlgorithm", "ArubaPhyType", "ArubaFrameType", "ArubaHTMode", "ArubaMonEncryptionCipher", "ArubaStationType", "ArubaHTRate", "ArubaEnableValue", "ArubaMonEncryptionType")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, IpAddress, TextualConvention, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, Integer32, ObjectIdentity, Counter32, Unsigned32, snmpModules, TimeTicks, NotificationType, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "TextualConvention", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "Integer32", "ObjectIdentity", "Counter32", "Unsigned32", "snmpModules", "TimeTicks", "NotificationType", "MibIdentifier", "iso")
TruthValue, TextualConvention, MacAddress, DisplayString, TAddress, RowStatus, StorageType, TestAndIncr, TimeInterval, TDomain, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "MacAddress", "DisplayString", "TAddress", "RowStatus", "StorageType", "TestAndIncr", "TimeInterval", "TDomain", "PhysAddress")
wlsxMonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6))
wlsxMonMIB.setRevisions(('1908-04-16 02:06',))
if mibBuilder.loadTexts: wlsxMonMIB.setLastUpdated('0804160206Z')
if mibBuilder.loadTexts: wlsxMonMIB.setOrganization('Aruba Wireless Networks')
wlsxMonStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6))
wlsxMonInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7))
wlsxMonAccessPointStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1))
wlsxMonStationStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2))
wlsxMonAPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1), )
if mibBuilder.loadTexts: wlsxMonAPStatsTable.setStatus('current')
wlsxMonAPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredApBSSID"))
if mibBuilder.loadTexts: wlsxMonAPStatsEntry.setStatus('current')
monPhyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: monPhyAddress.setStatus('current')
monRadioNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: monRadioNumber.setStatus('current')
monitoredApBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 3), MacAddress())
if mibBuilder.loadTexts: monitoredApBSSID.setStatus('current')
monPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 4), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monPhyType.setStatus('current')
monAPCurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPCurrentChannel.setStatus('current')
monAPNumClients = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPNumClients.setStatus('current')
monAPTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPTxPkts.setStatus('current')
monAPTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPTxBytes.setStatus('current')
monAPRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPRxPkts.setStatus('current')
monAPRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPRxBytes.setStatus('current')
monAPTxDeauthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPTxDeauthentications.setStatus('current')
monAPRxDeauthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPRxDeauthentications.setStatus('current')
monAPChannelThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPChannelThroughput.setStatus('current')
monAPFrameRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPFrameRetryRate.setStatus('current')
monAPFrameLowSpeedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPFrameLowSpeedRate.setStatus('current')
monAPFrameNonUnicastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPFrameNonUnicastRate.setStatus('current')
monAPFrameFragmentationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPFrameFragmentationRate.setStatus('current')
monAPFrameBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPFrameBandwidthRate.setStatus('current')
monAPFrameRetryErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPFrameRetryErrorRate.setStatus('deprecated')
monAPChannelErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPChannelErrorRate.setStatus('current')
monAPESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPESSID.setStatus('current')
monAPRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPRSSI.setStatus('current')
monAPFrameReceiveErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPFrameReceiveErrorRate.setStatus('current')
wlsxMonAPRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2), )
if mibBuilder.loadTexts: wlsxMonAPRateStatsTable.setStatus('current')
wlsxMonAPRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredApBSSID"))
if mibBuilder.loadTexts: wlsxMonAPRateStatsEntry.setStatus('current')
monAPStatsTotPktsAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt1Mbps.setStatus('current')
monAPStatsTotBytesAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt1Mbps.setStatus('current')
monAPStatsTotPktsAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt2Mbps.setStatus('current')
monAPStatsTotBytesAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt2Mbps.setStatus('current')
monAPStatsTotPktsAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt5Mbps.setStatus('current')
monAPStatsTotBytesAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt5Mbps.setStatus('current')
monAPStatsTotPktsAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt11Mbps.setStatus('current')
monAPStatsTotBytesAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt11Mbps.setStatus('current')
monAPStatsTotPktsAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt6Mbps.setStatus('current')
monAPStatsTotBytesAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt6Mbps.setStatus('current')
monAPStatsTotPktsAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt12Mbps.setStatus('current')
monAPStatsTotBytesAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt12Mbps.setStatus('current')
monAPStatsTotPktsAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt18Mbps.setStatus('current')
monAPStatsTotBytesAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt18Mbps.setStatus('current')
monAPStatsTotPktsAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt24Mbps.setStatus('current')
monAPStatsTotBytesAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt24Mbps.setStatus('current')
monAPStatsTotPktsAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt36Mbps.setStatus('current')
monAPStatsTotBytesAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt36Mbps.setStatus('current')
monAPStatsTotPktsAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt48Mbps.setStatus('current')
monAPStatsTotBytesAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt48Mbps.setStatus('current')
monAPStatsTotPktsAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt54Mbps.setStatus('current')
monAPStatsTotBytesAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt54Mbps.setStatus('current')
monAPStatsTotPktsAt9Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotPktsAt9Mbps.setStatus('current')
monAPStatsTotBytesAt9Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotBytesAt9Mbps.setStatus('current')
wlsxMonAPDATypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3), )
if mibBuilder.loadTexts: wlsxMonAPDATypeStatsTable.setStatus('current')
wlsxMonAPDATypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredApBSSID"))
if mibBuilder.loadTexts: wlsxMonAPDATypeStatsEntry.setStatus('current')
monAPStatsTotDABroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDABroadcastPkts.setStatus('current')
monAPStatsTotDABroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDABroadcastBytes.setStatus('current')
monAPStatsTotDAMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDAMulticastPkts.setStatus('current')
monAPStatsTotDAMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDAMulticastBytes.setStatus('current')
monAPStatsTotDAUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDAUnicastPkts.setStatus('current')
monAPStatsTotDAUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDAUnicastBytes.setStatus('current')
wlsxMonAPFrameTypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4), )
if mibBuilder.loadTexts: wlsxMonAPFrameTypeStatsTable.setStatus('current')
wlsxMonAPFrameTypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredApBSSID"))
if mibBuilder.loadTexts: wlsxMonAPFrameTypeStatsEntry.setStatus('current')
monAPStatsTotMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotMgmtPkts.setStatus('current')
monAPStatsTotMgmtBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotMgmtBytes.setStatus('current')
monAPStatsTotCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotCtrlPkts.setStatus('current')
monAPStatsTotCtrlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotCtrlBytes.setStatus('current')
monAPStatsTotDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDataPkts.setStatus('current')
monAPStatsTotDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotDataBytes.setStatus('current')
wlsxMonAPPktSizeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5), )
if mibBuilder.loadTexts: wlsxMonAPPktSizeStatsTable.setStatus('current')
wlsxMonAPPktSizeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredApBSSID"))
if mibBuilder.loadTexts: wlsxMonAPPktSizeStatsEntry.setStatus('current')
monAPStatsPkts63Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsPkts63Bytes.setStatus('current')
monAPStatsPkts64To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsPkts64To127.setStatus('current')
monAPStatsPkts128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsPkts128To255.setStatus('current')
monAPStatsPkts256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsPkts256To511.setStatus('current')
monAPStatsPkts512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsPkts512To1023.setStatus('current')
monAPStatsPkts1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsPkts1024To1518.setStatus('current')
wlsxMonAPHTRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 6), )
if mibBuilder.loadTexts: wlsxMonAPHTRateStatsTable.setStatus('current')
wlsxMonAPHTRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 6, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredApBSSID"), (0, "WLSX-MON-MIB", "monHTRate"))
if mibBuilder.loadTexts: wlsxMonAPHTRateStatsEntry.setStatus('current')
monHTRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 6, 1, 1), ArubaHTRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monHTRate.setStatus('current')
monAPStatsTotHTPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotHTPkts.setStatus('current')
monAPStatsTotHTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPStatsTotHTBytes.setStatus('current')
wlsxMonStationStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1), )
if mibBuilder.loadTexts: wlsxMonStationStatsTable.setStatus('current')
wlsxMonStationStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredStaPhyAddress"))
if mibBuilder.loadTexts: wlsxMonStationStatsEntry.setStatus('current')
monitoredStaPhyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: monitoredStaPhyAddress.setStatus('current')
monStaChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaChannelNum.setStatus('current')
monStaTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPkts.setStatus('current')
monStaTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytes.setStatus('current')
monStaRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPkts.setStatus('current')
monStaRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytes.setStatus('current')
monStaTxBCastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBCastPkts.setStatus('current')
monStaTxBCastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBCastBytes.setStatus('current')
monStaTxMCastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxMCastPkts.setStatus('current')
monStaTxMCastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxMCastBytes.setStatus('current')
monStaDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaDataPkts.setStatus('current')
monStaCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaCtrlPkts.setStatus('current')
monStaNumAssocRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaNumAssocRequests.setStatus('current')
monStaNumAuthRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaNumAuthRequests.setStatus('current')
monStaTxDeauthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDeauthentications.setStatus('current')
monStaRxDeauthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxDeauthentications.setStatus('current')
monStaFrameRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaFrameRetryRate.setStatus('current')
monStaFrameLowSpeedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaFrameLowSpeedRate.setStatus('current')
monStaFrameNonUnicastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaFrameNonUnicastRate.setStatus('current')
monStaFrameFragmentationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaFrameFragmentationRate.setStatus('current')
monStaFrameBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaFrameBandwidthRate.setStatus('current')
monStaFrameRetryErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaFrameRetryErrorRate.setStatus('deprecated')
monStaBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 23), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaBSSID.setStatus('current')
monStaESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaESSID.setStatus('current')
monStaPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 25), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaPhyType.setStatus('current')
monStaRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRSSI.setStatus('current')
monStaFrameReceiveErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaFrameReceiveErrorRate.setStatus('current')
wlsxMonStaRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2), )
if mibBuilder.loadTexts: wlsxMonStaRateStatsTable.setStatus('current')
wlsxMonStaRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredStaPhyAddress"))
if mibBuilder.loadTexts: wlsxMonStaRateStatsEntry.setStatus('current')
monStaTxPktsAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt1Mbps.setStatus('current')
monStaTxBytesAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt1Mbps.setStatus('current')
monStaTxPktsAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt2Mbps.setStatus('current')
monStaTxBytesAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt2Mbps.setStatus('current')
monStaTxPktsAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt5Mbps.setStatus('current')
monStaTxBytesAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt5Mbps.setStatus('current')
monStaTxPktsAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt11Mbps.setStatus('current')
monStaTxBytesAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt11Mbps.setStatus('current')
monStaTxPktsAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt6Mbps.setStatus('current')
monStaTxBytesAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt6Mbps.setStatus('current')
monStaTxPktsAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt12Mbps.setStatus('current')
monStaTxBytesAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt12Mbps.setStatus('current')
monStaTxPktsAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt18Mbps.setStatus('current')
monStaTxBytesAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt18Mbps.setStatus('current')
monStaTxPktsAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt24Mbps.setStatus('current')
monStaTxBytesAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt24Mbps.setStatus('current')
monStaTxPktsAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt36Mbps.setStatus('current')
monStaTxBytesAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt36Mbps.setStatus('current')
monStaTxPktsAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt48Mbps.setStatus('current')
monStaTxBytesAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt48Mbps.setStatus('current')
monStaTxPktsAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt54Mbps.setStatus('current')
monStaTxBytesAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt54Mbps.setStatus('current')
monStaRxPktsAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt1Mbps.setStatus('current')
monStaRxBytesAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt1Mbps.setStatus('current')
monStaRxPktsAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt2Mbps.setStatus('current')
monStaRxBytesAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt2Mbps.setStatus('current')
monStaRxPktsAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt5Mbps.setStatus('current')
monStaRxBytesAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt5Mbps.setStatus('current')
monStaRxPktsAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt11Mbps.setStatus('current')
monStaRxBytesAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt11Mbps.setStatus('current')
monStaRxPktsAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt6Mbps.setStatus('current')
monStaRxBytesAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt6Mbps.setStatus('current')
monStaRxPktsAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt12Mbps.setStatus('current')
monStaRxBytesAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt12Mbps.setStatus('current')
monStaRxPktsAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt18Mbps.setStatus('current')
monStaRxBytesAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt18Mbps.setStatus('current')
monStaRxPktsAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt24Mbps.setStatus('current')
monStaRxBytesAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt24Mbps.setStatus('current')
monStaRxPktsAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt36Mbps.setStatus('current')
monStaRxBytesAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt36Mbps.setStatus('current')
monStaRxPktsAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt48Mbps.setStatus('current')
monStaRxBytesAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt48Mbps.setStatus('current')
monStaRxPktsAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt54Mbps.setStatus('current')
monStaRxBytesAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt54Mbps.setStatus('current')
monStaTxPktsAt9Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPktsAt9Mbps.setStatus('current')
monStaTxBytesAt9Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxBytesAt9Mbps.setStatus('current')
monStaRxPktsAt9Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPktsAt9Mbps.setStatus('current')
monStaRxBytesAt9Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxBytesAt9Mbps.setStatus('current')
wlsxMonStaDATypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3), )
if mibBuilder.loadTexts: wlsxMonStaDATypeStatsTable.setStatus('current')
wlsxMonStaDATypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredStaPhyAddress"))
if mibBuilder.loadTexts: wlsxMonStaDATypeStatsEntry.setStatus('current')
monStaTxDABroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDABroadcastPkts.setStatus('current')
monStaTxDABroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDABroadcastBytes.setStatus('current')
monStaTxDAMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDAMulticastPkts.setStatus('current')
monStaTxDAMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDAMulticastBytes.setStatus('current')
monStaTxDAUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDAUnicastPkts.setStatus('current')
monStaTxDAUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDAUnicastBytes.setStatus('current')
wlsxMonStaFrameTypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4), )
if mibBuilder.loadTexts: wlsxMonStaFrameTypeStatsTable.setStatus('current')
wlsxMonStaFrameTypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredStaPhyAddress"))
if mibBuilder.loadTexts: wlsxMonStaFrameTypeStatsEntry.setStatus('current')
monStaTxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxMgmtPkts.setStatus('current')
monStaTxMgmtBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxMgmtBytes.setStatus('current')
monStaTxCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxCtrlPkts.setStatus('current')
monStaTxCtrlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxCtrlBytes.setStatus('current')
monStaTxDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDataPkts.setStatus('current')
monStaTxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxDataBytes.setStatus('current')
monStaRxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxMgmtPkts.setStatus('current')
monStaRxMgmtBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxMgmtBytes.setStatus('current')
monStaRxCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxCtrlPkts.setStatus('current')
monStaRxCtrlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxCtrlBytes.setStatus('current')
monStaRxDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxDataPkts.setStatus('current')
monStaRxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxDataBytes.setStatus('current')
wlsxMonStaPktSizeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5), )
if mibBuilder.loadTexts: wlsxMonStaPktSizeStatsTable.setStatus('current')
wlsxMonStaPktSizeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredStaPhyAddress"))
if mibBuilder.loadTexts: wlsxMonStaPktSizeStatsEntry.setStatus('current')
monStaTxPkts63Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPkts63Bytes.setStatus('current')
monStaTxPkts64To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPkts64To127.setStatus('current')
monStaTxPkts128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPkts128To255.setStatus('current')
monStaTxPkts256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPkts256To511.setStatus('current')
monStaTxPkts512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPkts512To1023.setStatus('current')
monStaTxPkts1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxPkts1024To1518.setStatus('current')
monStaRxPkts63Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPkts63Bytes.setStatus('current')
monStaRxPkts64To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPkts64To127.setStatus('current')
monStaRxPkts128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPkts128To255.setStatus('current')
monStaRxPkts256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPkts256To511.setStatus('current')
monStaRxPkts512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPkts512To1023.setStatus('current')
monStaRxPkts1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxPkts1024To1518.setStatus('current')
wlsxMonAccessPointInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1))
wlsxMonStationInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2))
wlsxMonAPInfoTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1), )
if mibBuilder.loadTexts: wlsxMonAPInfoTable.setStatus('current')
wlsxMonAPInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredApBSSID"))
if mibBuilder.loadTexts: wlsxMonAPInfoEntry.setStatus('current')
monAPInfoPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 1), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoPhyType.setStatus('current')
monAPInfoCurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoCurrentChannel.setStatus('current')
monAPInfoClassification = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 3), ArubaRogueApType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoClassification.setStatus('current')
monAPInfoESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoESSID.setStatus('current')
monAPInfoRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoRSSI.setStatus('current')
monAPInfoMonitorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoMonitorTime.setStatus('current')
monAPInfoInactivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoInactivityTime.setStatus('current')
monAPInfoSnrSignalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoSnrSignalPkts.setStatus('current')
monAPInfoSnrSampleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoSnrSampleTime.setStatus('current')
monAPInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoStatus.setStatus('current')
monAPInfoConfidence = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoConfidence.setStatus('current')
monAPInfoMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 12), ArubaAPMatchType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoMatchType.setStatus('current')
monAPInfoMatchMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 13), ArubaAPMatchMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoMatchMethod.setStatus('current')
monAPInfoHTMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 14), ArubaHTMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoHTMode.setStatus('current')
monAPInfoEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 15), ArubaMonEncryptionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoEncryptionType.setStatus('current')
monAPInfoWPAUnicastCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 16), ArubaMonEncryptionCipher()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoWPAUnicastCipher.setStatus('current')
monAPInfoWPAAuthAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 17), ArubaMonAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoWPAAuthAlgorithm.setStatus('current')
monAPInfoIBSS = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monAPInfoIBSS.setStatus('current')
wlsxMonStationInfoTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1), )
if mibBuilder.loadTexts: wlsxMonStationInfoTable.setStatus('current')
wlsxMonStationInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredStaPhyAddress"))
if mibBuilder.loadTexts: wlsxMonStationInfoEntry.setStatus('current')
monStaInfoChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoChannelNum.setStatus('current')
monStaInfoBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoBSSID.setStatus('current')
monStaInfoESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoESSID.setStatus('current')
monStaInfoPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 4), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoPhyType.setStatus('current')
monStaInfoRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoRSSI.setStatus('current')
monStaInfoClassification = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 6), ArubaStationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoClassification.setStatus('current')
monStaInfoMonitorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoMonitorTime.setStatus('current')
monStaInfoInactivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoInactivityTime.setStatus('current')
monStaInfoSnrSignalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoSnrSignalPkts.setStatus('current')
monStaInfoSnrSampleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoSnrSampleTime.setStatus('current')
monStaInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoStatus.setStatus('current')
monStaInfoHTMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 7, 2, 1, 1, 12), ArubaHTMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaInfoHTMode.setStatus('current')
wlsxMonEventCountTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 6), )
if mibBuilder.loadTexts: wlsxMonEventCountTable.setStatus('current')
wlsxMonEventCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 6, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monEventID"))
if mibBuilder.loadTexts: wlsxMonEventCountEntry.setStatus('current')
monEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monEventID.setStatus('current')
monEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monEventCount.setStatus('current')
wlsxMonStationHTRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 7), )
if mibBuilder.loadTexts: wlsxMonStationHTRateStatsTable.setStatus('current')
wlsxMonStationHTRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 7, 1), ).setIndexNames((0, "WLSX-MON-MIB", "monPhyAddress"), (0, "WLSX-MON-MIB", "monRadioNumber"), (0, "WLSX-MON-MIB", "monitoredStaPhyAddress"), (0, "WLSX-MON-MIB", "monHTRate"))
if mibBuilder.loadTexts: wlsxMonStationHTRateStatsEntry.setStatus('current')
monStaTxHTPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxHTPkts.setStatus('current')
monStaTxHTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaTxHTBytes.setStatus('current')
monStaRxHTPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxHTPkts.setStatus('current')
monStaRxHTBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 6, 6, 2, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monStaRxHTBytes.setStatus('current')
mibBuilder.exportSymbols("WLSX-MON-MIB", monAPStatsTotBytesAt9Mbps=monAPStatsTotBytesAt9Mbps, monAPInfoIBSS=monAPInfoIBSS, monStaTxBytesAt12Mbps=monStaTxBytesAt12Mbps, monStaRxBytesAt24Mbps=monStaRxBytesAt24Mbps, monAPStatsTotPktsAt48Mbps=monAPStatsTotPktsAt48Mbps, wlsxMonAPInfoTable=wlsxMonAPInfoTable, monAPStatsTotBytesAt48Mbps=monAPStatsTotBytesAt48Mbps, monStaRxPktsAt48Mbps=monStaRxPktsAt48Mbps, monStaInfoRSSI=monStaInfoRSSI, monStaInfoMonitorTime=monStaInfoMonitorTime, monStaRxPkts1024To1518=monStaRxPkts1024To1518, wlsxMonStationHTRateStatsEntry=wlsxMonStationHTRateStatsEntry, monStaTxDAMulticastBytes=monStaTxDAMulticastBytes, wlsxMonStaPktSizeStatsEntry=wlsxMonStaPktSizeStatsEntry, monAPStatsTotBytesAt36Mbps=monAPStatsTotBytesAt36Mbps, monAPStatsTotHTBytes=monAPStatsTotHTBytes, monAPStatsTotPktsAt11Mbps=monAPStatsTotPktsAt11Mbps, monAPTxPkts=monAPTxPkts, monStaTxBCastBytes=monStaTxBCastBytes, monAPStatsTotCtrlPkts=monAPStatsTotCtrlPkts, wlsxMonStaRateStatsTable=wlsxMonStaRateStatsTable, monStaRxBytesAt54Mbps=monStaRxBytesAt54Mbps, monAPInfoSnrSampleTime=monAPInfoSnrSampleTime, monStaRxPktsAt6Mbps=monStaRxPktsAt6Mbps, monStaRxBytesAt48Mbps=monStaRxBytesAt48Mbps, monAPStatsTotCtrlBytes=monAPStatsTotCtrlBytes, monAPInfoMatchMethod=monAPInfoMatchMethod, monStaRxPktsAt36Mbps=monStaRxPktsAt36Mbps, monStaRxPkts128To255=monStaRxPkts128To255, monAPFrameBandwidthRate=monAPFrameBandwidthRate, monAPStatsPkts63Bytes=monAPStatsPkts63Bytes, monStaTxDAUnicastBytes=monStaTxDAUnicastBytes, wlsxMonAPPktSizeStatsTable=wlsxMonAPPktSizeStatsTable, monAPFrameReceiveErrorRate=monAPFrameReceiveErrorRate, wlsxMonStationStatsTable=wlsxMonStationStatsTable, monStaRxMgmtPkts=monStaRxMgmtPkts, wlsxMonAPRateStatsEntry=wlsxMonAPRateStatsEntry, wlsxMonStaDATypeStatsEntry=wlsxMonStaDATypeStatsEntry, monAPRxDeauthentications=monAPRxDeauthentications, monStaRxBytesAt18Mbps=monStaRxBytesAt18Mbps, monStaRxPkts256To511=monStaRxPkts256To511, monStaTxBytesAt5Mbps=monStaTxBytesAt5Mbps, monAPStatsTotBytesAt5Mbps=monAPStatsTotBytesAt5Mbps, monAPInfoPhyType=monAPInfoPhyType, monStaInfoBSSID=monStaInfoBSSID, monStaTxPkts=monStaTxPkts, wlsxMonStatsGroup=wlsxMonStatsGroup, monEventCount=monEventCount, monStaTxMgmtPkts=monStaTxMgmtPkts, monStaRxDataPkts=monStaRxDataPkts, monStaRxPktsAt11Mbps=monStaRxPktsAt11Mbps, monStaRxBytesAt2Mbps=monStaRxBytesAt2Mbps, wlsxMonStaFrameTypeStatsTable=wlsxMonStaFrameTypeStatsTable, monStaRxBytes=monStaRxBytes, monHTRate=monHTRate, wlsxMonAPHTRateStatsEntry=wlsxMonAPHTRateStatsEntry, monStaTxHTPkts=monStaTxHTPkts, monStaRxPktsAt12Mbps=monStaRxPktsAt12Mbps, monAPInfoEncryptionType=monAPInfoEncryptionType, monAPESSID=monAPESSID, monAPStatsTotBytesAt54Mbps=monAPStatsTotBytesAt54Mbps, monStaTxDataBytes=monStaTxDataBytes, monStaTxPkts512To1023=monStaTxPkts512To1023, monAPStatsTotPktsAt12Mbps=monAPStatsTotPktsAt12Mbps, monAPNumClients=monAPNumClients, monStaRxPktsAt18Mbps=monStaRxPktsAt18Mbps, monStaTxDABroadcastPkts=monStaTxDABroadcastPkts, monAPTxDeauthentications=monAPTxDeauthentications, monAPStatsTotBytesAt11Mbps=monAPStatsTotBytesAt11Mbps, monitoredStaPhyAddress=monitoredStaPhyAddress, monStaRxDataBytes=monStaRxDataBytes, monAPInfoCurrentChannel=monAPInfoCurrentChannel, monAPInfoRSSI=monAPInfoRSSI, monStaRxPktsAt2Mbps=monStaRxPktsAt2Mbps, monAPInfoWPAAuthAlgorithm=monAPInfoWPAAuthAlgorithm, monAPFrameRetryRate=monAPFrameRetryRate, monStaTxBytesAt48Mbps=monStaTxBytesAt48Mbps, monStaInfoSnrSampleTime=monStaInfoSnrSampleTime, monAPChannelErrorRate=monAPChannelErrorRate, monStaRxBytesAt9Mbps=monStaRxBytesAt9Mbps, monAPStatsTotDAMulticastPkts=monAPStatsTotDAMulticastPkts, monStaTxCtrlPkts=monStaTxCtrlPkts, monStaTxPkts1024To1518=monStaTxPkts1024To1518, monAPInfoMatchType=monAPInfoMatchType, monStaTxPktsAt1Mbps=monStaTxPktsAt1Mbps, monStaTxBytesAt9Mbps=monStaTxBytesAt9Mbps, monStaFrameLowSpeedRate=monStaFrameLowSpeedRate, monStaRxPktsAt54Mbps=monStaRxPktsAt54Mbps, monStaTxPktsAt36Mbps=monStaTxPktsAt36Mbps, monAPStatsTotDABroadcastBytes=monAPStatsTotDABroadcastBytes, monStaTxPktsAt5Mbps=monStaTxPktsAt5Mbps, monAPInfoWPAUnicastCipher=monAPInfoWPAUnicastCipher, monAPInfoStatus=monAPInfoStatus, monEventID=monEventID, wlsxMonAPFrameTypeStatsTable=wlsxMonAPFrameTypeStatsTable, monStaTxPkts64To127=monStaTxPkts64To127, monPhyType=monPhyType, monStaRxBytesAt36Mbps=monStaRxBytesAt36Mbps, monAPStatsTotBytesAt24Mbps=monAPStatsTotBytesAt24Mbps, monStaFrameFragmentationRate=monStaFrameFragmentationRate, monStaRxBytesAt1Mbps=monStaRxBytesAt1Mbps, monAPChannelThroughput=monAPChannelThroughput, monStaRxHTBytes=monStaRxHTBytes, monStaInfoESSID=monStaInfoESSID, monStaRxBytesAt6Mbps=monStaRxBytesAt6Mbps, wlsxMonEventCountEntry=wlsxMonEventCountEntry, monStaTxBCastPkts=monStaTxBCastPkts, wlsxMonMIB=wlsxMonMIB, monAPStatsPkts512To1023=monAPStatsPkts512To1023, monAPStatsTotPktsAt6Mbps=monAPStatsTotPktsAt6Mbps, monAPRSSI=monAPRSSI, monStaRxPktsAt5Mbps=monStaRxPktsAt5Mbps, wlsxMonStaFrameTypeStatsEntry=wlsxMonStaFrameTypeStatsEntry, monStaTxCtrlBytes=monStaTxCtrlBytes, monAPInfoClassification=monAPInfoClassification, monAPStatsPkts128To255=monAPStatsPkts128To255, wlsxMonStationStatsGroup=wlsxMonStationStatsGroup, monAPFrameNonUnicastRate=monAPFrameNonUnicastRate, monAPInfoHTMode=monAPInfoHTMode, monAPStatsPkts64To127=monAPStatsPkts64To127, monStaInfoClassification=monStaInfoClassification, monAPRxPkts=monAPRxPkts, monStaTxPktsAt9Mbps=monStaTxPktsAt9Mbps, monStaTxDABroadcastBytes=monStaTxDABroadcastBytes, monAPStatsTotBytesAt18Mbps=monAPStatsTotBytesAt18Mbps, monStaInfoHTMode=monStaInfoHTMode, monAPRxBytes=monAPRxBytes, monAPFrameLowSpeedRate=monAPFrameLowSpeedRate, monAPInfoESSID=monAPInfoESSID, monStaRxCtrlBytes=monStaRxCtrlBytes, monStaFrameBandwidthRate=monStaFrameBandwidthRate, monAPInfoMonitorTime=monAPInfoMonitorTime, PYSNMP_MODULE_ID=wlsxMonMIB, monAPStatsTotMgmtBytes=monAPStatsTotMgmtBytes, monAPStatsTotBytesAt1Mbps=monAPStatsTotBytesAt1Mbps, wlsxMonStaDATypeStatsTable=wlsxMonStaDATypeStatsTable, wlsxMonStaRateStatsEntry=wlsxMonStaRateStatsEntry, monStaRxBytesAt5Mbps=monStaRxBytesAt5Mbps, wlsxMonStaPktSizeStatsTable=wlsxMonStaPktSizeStatsTable, monAPStatsTotPktsAt2Mbps=monAPStatsTotPktsAt2Mbps, monRadioNumber=monRadioNumber, monStaTxPktsAt6Mbps=monStaTxPktsAt6Mbps, monAPInfoSnrSignalPkts=monAPInfoSnrSignalPkts, monStaDataPkts=monStaDataPkts, monStaTxDAUnicastPkts=monStaTxDAUnicastPkts, monStaTxPktsAt2Mbps=monStaTxPktsAt2Mbps, monStaRxPkts512To1023=monStaRxPkts512To1023, monStaTxPktsAt54Mbps=monStaTxPktsAt54Mbps, monStaTxBytes=monStaTxBytes, monAPStatsTotDAUnicastPkts=monAPStatsTotDAUnicastPkts, monAPStatsTotPktsAt36Mbps=monAPStatsTotPktsAt36Mbps, monStaTxBytesAt1Mbps=monStaTxBytesAt1Mbps, monStaTxDAMulticastPkts=monStaTxDAMulticastPkts, monStaChannelNum=monStaChannelNum, monStaCtrlPkts=monStaCtrlPkts, wlsxMonStationInfoGroup=wlsxMonStationInfoGroup, monAPStatsTotPktsAt1Mbps=monAPStatsTotPktsAt1Mbps, monAPStatsTotBytesAt2Mbps=monAPStatsTotBytesAt2Mbps, monStaNumAssocRequests=monStaNumAssocRequests, monStaInfoChannelNum=monStaInfoChannelNum, monStaRxBytesAt12Mbps=monStaRxBytesAt12Mbps, wlsxMonStationInfoTable=wlsxMonStationInfoTable, monStaTxPktsAt12Mbps=monStaTxPktsAt12Mbps, wlsxMonAPDATypeStatsEntry=wlsxMonAPDATypeStatsEntry, monStaRxBytesAt11Mbps=monStaRxBytesAt11Mbps, monStaRxPkts64To127=monStaRxPkts64To127, monAPStatsTotPktsAt5Mbps=monAPStatsTotPktsAt5Mbps, monAPStatsTotDABroadcastPkts=monAPStatsTotDABroadcastPkts, monStaTxBytesAt18Mbps=monStaTxBytesAt18Mbps, monStaNumAuthRequests=monStaNumAuthRequests, monStaTxPktsAt11Mbps=monStaTxPktsAt11Mbps, wlsxMonAccessPointStatsGroup=wlsxMonAccessPointStatsGroup, monStaRxPkts=monStaRxPkts, monStaTxDataPkts=monStaTxDataPkts, monAPStatsTotPktsAt54Mbps=monAPStatsTotPktsAt54Mbps, monAPStatsTotPktsAt24Mbps=monAPStatsTotPktsAt24Mbps, monAPStatsTotPktsAt9Mbps=monAPStatsTotPktsAt9Mbps, wlsxMonAccessPointInfoGroup=wlsxMonAccessPointInfoGroup, wlsxMonStationHTRateStatsTable=wlsxMonStationHTRateStatsTable, monStaTxPktsAt48Mbps=monStaTxPktsAt48Mbps, monStaTxPktsAt24Mbps=monStaTxPktsAt24Mbps, monAPInfoInactivityTime=monAPInfoInactivityTime, monAPStatsPkts1024To1518=monAPStatsPkts1024To1518, monStaPhyType=monStaPhyType, monStaTxDeauthentications=monStaTxDeauthentications, wlsxMonAPInfoEntry=wlsxMonAPInfoEntry, monStaRxPktsAt1Mbps=monStaRxPktsAt1Mbps, monStaTxBytesAt6Mbps=monStaTxBytesAt6Mbps, monStaRxPktsAt24Mbps=monStaRxPktsAt24Mbps, monStaFrameNonUnicastRate=monStaFrameNonUnicastRate, monStaRxCtrlPkts=monStaRxCtrlPkts, monStaInfoSnrSignalPkts=monStaInfoSnrSignalPkts, monStaTxMgmtBytes=monStaTxMgmtBytes, wlsxMonAPStatsTable=wlsxMonAPStatsTable, monPhyAddress=monPhyAddress, wlsxMonAPPktSizeStatsEntry=wlsxMonAPPktSizeStatsEntry, monStaRSSI=monStaRSSI, monStaTxBytesAt11Mbps=monStaTxBytesAt11Mbps, monStaInfoStatus=monStaInfoStatus, monStaFrameReceiveErrorRate=monStaFrameReceiveErrorRate, monAPFrameRetryErrorRate=monAPFrameRetryErrorRate, wlsxMonAPDATypeStatsTable=wlsxMonAPDATypeStatsTable, monitoredApBSSID=monitoredApBSSID, monStaTxBytesAt36Mbps=monStaTxBytesAt36Mbps, monAPStatsTotMgmtPkts=monAPStatsTotMgmtPkts, monStaInfoInactivityTime=monStaInfoInactivityTime, monStaTxMCastBytes=monStaTxMCastBytes, wlsxMonAPRateStatsTable=wlsxMonAPRateStatsTable, monStaFrameRetryErrorRate=monStaFrameRetryErrorRate, wlsxMonStationStatsEntry=wlsxMonStationStatsEntry, monAPInfoConfidence=monAPInfoConfidence, wlsxMonAPFrameTypeStatsEntry=wlsxMonAPFrameTypeStatsEntry, wlsxMonAPHTRateStatsTable=wlsxMonAPHTRateStatsTable, monStaRxPkts63Bytes=monStaRxPkts63Bytes, monStaTxMCastPkts=monStaTxMCastPkts, monStaRxDeauthentications=monStaRxDeauthentications, monStaTxPkts63Bytes=monStaTxPkts63Bytes, monAPFrameFragmentationRate=monAPFrameFragmentationRate, monAPStatsTotDataPkts=monAPStatsTotDataPkts, monStaBSSID=monStaBSSID, wlsxMonAPStatsEntry=wlsxMonAPStatsEntry, monAPStatsTotDAUnicastBytes=monAPStatsTotDAUnicastBytes, monAPTxBytes=monAPTxBytes, monAPStatsTotHTPkts=monAPStatsTotHTPkts, monStaTxHTBytes=monStaTxHTBytes, wlsxMonEventCountTable=wlsxMonEventCountTable, monStaFrameRetryRate=monStaFrameRetryRate, monAPStatsTotDataBytes=monAPStatsTotDataBytes, wlsxMonStationInfoEntry=wlsxMonStationInfoEntry, wlsxMonInfoGroup=wlsxMonInfoGroup, monStaRxPktsAt9Mbps=monStaRxPktsAt9Mbps, monStaRxMgmtBytes=monStaRxMgmtBytes, monAPCurrentChannel=monAPCurrentChannel, monAPStatsTotDAMulticastBytes=monAPStatsTotDAMulticastBytes, monStaInfoPhyType=monStaInfoPhyType, monAPStatsTotBytesAt6Mbps=monAPStatsTotBytesAt6Mbps, monStaTxBytesAt24Mbps=monStaTxBytesAt24Mbps, monStaTxBytesAt54Mbps=monStaTxBytesAt54Mbps, monStaRxHTPkts=monStaRxHTPkts, monAPStatsTotPktsAt18Mbps=monAPStatsTotPktsAt18Mbps, monAPStatsPkts256To511=monAPStatsPkts256To511, monAPStatsTotBytesAt12Mbps=monAPStatsTotBytesAt12Mbps, monStaTxBytesAt2Mbps=monStaTxBytesAt2Mbps, monStaTxPktsAt18Mbps=monStaTxPktsAt18Mbps, monStaTxPkts128To255=monStaTxPkts128To255, monStaTxPkts256To511=monStaTxPkts256To511, monStaESSID=monStaESSID)
