#
# PySNMP MIB module CISCO-CALL-RESOURCE-POOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CALL-RESOURCE-POOL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoRowOperStatus, = mibBuilder.importSymbols("CISCO-TC", "CiscoRowOperStatus")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, TimeTicks, iso, ObjectIdentity, IpAddress, Unsigned32, Counter64, NotificationType, Integer32, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "TimeTicks", "iso", "ObjectIdentity", "IpAddress", "Unsigned32", "Counter64", "NotificationType", "Integer32", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
ciscoCallResourcePoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 124))
ciscoCallResourcePoolMIB.setRevisions(('2005-11-18 00:00', '1998-11-13 00:00',))
if mibBuilder.loadTexts: ciscoCallResourcePoolMIB.setLastUpdated('200511180000Z')
if mibBuilder.loadTexts: ciscoCallResourcePoolMIB.setOrganization('Cisco Systems, Inc.')
class CcrpPhoneNumber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 64)

class CcrpPhoneNumberPattern(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 64)

class PhysicalPosition(TextualConvention, Unsigned32):
    status = 'current'

cCallResourcePoolMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1))
ccrpConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1))
ccrpGeneralConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 1))
ccrpDnisConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2))
ccrpCallDiscriminatorConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3))
ccrpResourceConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4))
ccrpCustomerProfileConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5))
ccrpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2))
ccrpCPStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1))
ccrpDnisStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2))
ccrpCDStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 3))
ccrpNoCPCallTreatment = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAnswer", 1), ("busy", 2))).clone('noAnswer')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccrpNoCPCallTreatment.setStatus('current')
ccrpNoResourceCallTreatment = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("channelNotAvailable", 1), ("busy", 2))).clone('channelNotAvailable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccrpNoResourceCallTreatment.setStatus('current')
ccrpDnisGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 1), )
if mibBuilder.loadTexts: ccrpDnisGroupTable.setStatus('current')
ccrpDnisGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupName"), (1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupMember"))
if mibBuilder.loadTexts: ccrpDnisGroupEntry.setStatus('current')
ccrpDnisGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 23)))
if mibBuilder.loadTexts: ccrpDnisGroupName.setStatus('current')
ccrpDnisGroupMember = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 1, 1, 2), CcrpPhoneNumberPattern().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ccrpDnisGroupMember.setStatus('current')
ccrpDnisGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpDnisGroupRowStatus.setStatus('current')
ccrpDnisGroupCallTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 2), )
if mibBuilder.loadTexts: ccrpDnisGroupCallTypeTable.setStatus('current')
ccrpDnisGroupCallTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 2, 1), ).setIndexNames((1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupName"))
if mibBuilder.loadTexts: ccrpDnisGroupCallTypeEntry.setStatus('current')
ccrpDnisGroupCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("digital", 1), ("speech", 2), ("undefined", 3))).clone('undefined')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpDnisGroupCallType.setStatus('current')
ccrpDnisGroupCallTypeOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 2, 1, 2), CiscoRowOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisGroupCallTypeOperStatus.setStatus('current')
ccrpDnisGroupCallTypeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpDnisGroupCallTypeRowStatus.setStatus('current')
ccrpCallDiscriminatorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 1), )
if mibBuilder.loadTexts: ccrpCallDiscriminatorTable.setStatus('current')
ccrpCallDiscriminatorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 1, 1), ).setIndexNames((1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDName"))
if mibBuilder.loadTexts: ccrpCallDiscriminatorEntry.setStatus('current')
ccrpCDName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 23)))
if mibBuilder.loadTexts: ccrpCDName.setStatus('current')
ccrpCDCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 1, 1, 2), Bits().clone(namedValues=NamedValues(("digital", 0), ("speech", 1), ("v110", 2), ("v120", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCDCallType.setStatus('current')
ccrpCDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCDRowStatus.setStatus('current')
ccrpCDDiscriminatedGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 2), )
if mibBuilder.loadTexts: ccrpCDDiscriminatedGrpTable.setStatus('current')
ccrpCDDiscriminatedGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDName"), (0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDDiscriminatedGroupName"), (0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDDiscriminatedGroupType"))
if mibBuilder.loadTexts: ccrpCDDiscriminatedGrpEntry.setStatus('current')
ccrpCDDiscriminatedGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 23)))
if mibBuilder.loadTexts: ccrpCDDiscriminatedGroupName.setStatus('current')
ccrpCDDiscriminatedGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("dnis", 1))))
if mibBuilder.loadTexts: ccrpCDDiscriminatedGroupType.setStatus('current')
ccrpCDDiscriminatedGroupOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 2, 1, 3), CiscoRowOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCDDiscriminatedGroupOperStatus.setStatus('current')
ccrpCDDiscriminatedGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCDDiscriminatedGroupRowStatus.setStatus('current')
ccrpResourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 1), )
if mibBuilder.loadTexts: ccrpResourceTable.setStatus('current')
ccrpResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 1, 1), ).setIndexNames((1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceName"))
if mibBuilder.loadTexts: ccrpResourceEntry.setStatus('current')
ccrpResourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 23)))
if mibBuilder.loadTexts: ccrpResourceName.setStatus('current')
ccrpResourcePortBased = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpResourcePortBased.setStatus('current')
ccrpResourceLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpResourceLimit.setStatus('current')
ccrpResourceGroupOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 1, 1, 4), CiscoRowOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpResourceGroupOperStatus.setStatus('current')
ccrpResourceGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpResourceGroupRowStatus.setStatus('current')
ccrpResourceRangeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 2), )
if mibBuilder.loadTexts: ccrpResourceRangeTable.setStatus('current')
ccrpResourceRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceName"), (0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceRangeIndex"))
if mibBuilder.loadTexts: ccrpResourceRangeEntry.setStatus('current')
ccrpResourceRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ccrpResourceRangeIndex.setStatus('current')
ccrpResourceRangeStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 2, 1, 2), PhysicalPosition()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpResourceRangeStartPort.setStatus('current')
ccrpResourceRangeEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 2, 1, 3), PhysicalPosition()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpResourceRangeEndPort.setStatus('current')
ccrpResourceRangeOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 2, 1, 4), CiscoRowOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpResourceRangeOperStatus.setStatus('current')
ccrpResourceRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 4, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpResourceRangeRowStatus.setStatus('current')
ccrpCustomerProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 1), )
if mibBuilder.loadTexts: ccrpCustomerProfileTable.setStatus('current')
ccrpCustomerProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 1, 1), ).setIndexNames((1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPName"))
if mibBuilder.loadTexts: ccrpCustomerProfileEntry.setStatus('current')
ccrpCPName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 23)))
if mibBuilder.loadTexts: ccrpCPName.setStatus('current')
ccrpCPSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCPSessionLimit.setStatus('current')
ccrpCPOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCPOverflow.setStatus('current')
ccrpCPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCPRowStatus.setStatus('current')
ccrpCPDnisGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 2), )
if mibBuilder.loadTexts: ccrpCPDnisGrpTable.setStatus('current')
ccrpCPDnisGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPName"), (1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupName"))
if mibBuilder.loadTexts: ccrpCPDnisGrpEntry.setStatus('current')
ccrpCPDnisGroupOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 2, 1, 1), CiscoRowOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPDnisGroupOperStatus.setStatus('current')
ccrpCPDnisGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCPDnisGroupRowStatus.setStatus('current')
ccrpCPResourceGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 3), )
if mibBuilder.loadTexts: ccrpCPResourceGrpTable.setStatus('current')
ccrpCPResourceGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 3, 1), ).setIndexNames((0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPName"), (0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceName"), (0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPResourceCallType"))
if mibBuilder.loadTexts: ccrpCPResourceGrpEntry.setStatus('current')
ccrpCPResourceCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 3, 1, 1), Bits().clone(namedValues=NamedValues(("digital", 0), ("speech", 1), ("v110", 2), ("v120", 3))))
if mibBuilder.loadTexts: ccrpCPResourceCallType.setStatus('current')
ccrpCPResourceServiceProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCPResourceServiceProfileName.setStatus('current')
ccrpCPResourceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 3, 1, 3), CiscoRowOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPResourceOperStatus.setStatus('current')
ccrpCPResourceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCPResourceRowStatus.setStatus('current')
ccrpCPVGTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 4), )
if mibBuilder.loadTexts: ccrpCPVGTable.setStatus('current')
ccrpCPVGEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 4, 1), ).setIndexNames((0, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPName"), (1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPVGName"))
if mibBuilder.loadTexts: ccrpCPVGEntry.setStatus('current')
ccrpCPVGName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 23)))
if mibBuilder.loadTexts: ccrpCPVGName.setStatus('current')
ccrpCPVGOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 4, 1, 2), CiscoRowOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPVGOperStatus.setStatus('current')
ccrpCPVGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 1, 5, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccrpCPVGRowStatus.setStatus('current')
ccrpCPStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1), )
if mibBuilder.loadTexts: ccrpCPStatisticsTable.setStatus('current')
ccrpCPStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1), )
ccrpCustomerProfileEntry.registerAugmentions(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPStatisticsEntry"))
ccrpCPStatisticsEntry.setIndexNames(*ccrpCustomerProfileEntry.getIndexNames())
if mibBuilder.loadTexts: ccrpCPStatisticsEntry.setStatus('current')
ccrpCPActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 1), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPActiveSessions.setStatus('current')
ccrpCPActiveOverflowSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 2), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPActiveOverflowSessions.setStatus('current')
ccrpCPTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 3), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPTotalSessions.setStatus('current')
ccrpCPTotalOverflowSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 4), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPTotalOverflowSessions.setStatus('current')
ccrpCPNumberOverflowState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 5), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPNumberOverflowState.setStatus('current')
ccrpCPNumberMaxState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 6), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPNumberMaxState.setStatus('current')
ccrpCPOverflowTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPOverflowTime.setStatus('current')
ccrpCPMaxStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPMaxStateTime.setStatus('current')
ccrpCPPeakActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 9), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPPeakActiveSessions.setStatus('current')
ccrpCPOverflowRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 10), Counter32()).setUnits('call attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPOverflowRejected.setStatus('current')
ccrpCPResourceRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 1, 1, 1, 11), Counter32()).setUnits('call attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCPResourceRejected.setStatus('current')
ccrpDnisStatisticsTableMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccrpDnisStatisticsTableMaxEntries.setStatus('current')
ccrpDnisStatisticsTableSystemMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisStatisticsTableSystemMax.setStatus('current')
ccrpDnisStatisticsTableLengthExceeded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisStatisticsTableLengthExceeded.setStatus('current')
ccrpDnisStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4), )
if mibBuilder.loadTexts: ccrpDnisStatisticsTable.setStatus('current')
ccrpDnisStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4, 1), ).setIndexNames((1, "CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisStatisticsDnisNumber"))
if mibBuilder.loadTexts: ccrpDnisStatisticsEntry.setStatus('current')
ccrpDnisStatisticsDnisNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4, 1, 1), CcrpPhoneNumber())
if mibBuilder.loadTexts: ccrpDnisStatisticsDnisNumber.setStatus('current')
ccrpDnisStatisticsGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisStatisticsGroupName.setStatus('current')
ccrpDnisActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4, 1, 3), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisActiveSessions.setStatus('current')
ccrpDnisTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4, 1, 4), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisTotalSessions.setStatus('current')
ccrpDnisPeakActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4, 1, 5), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisPeakActiveSessions.setStatus('current')
ccrpDnisCallTypeRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 2, 4, 1, 6), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpDnisCallTypeRejected.setStatus('current')
ccrpCDStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 3, 1), )
if mibBuilder.loadTexts: ccrpCDStatisticsTable.setStatus('current')
ccrpCDStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 3, 1, 1), )
ccrpCallDiscriminatorEntry.registerAugmentions(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDStatisticsEntry"))
ccrpCDStatisticsEntry.setIndexNames(*ccrpCallDiscriminatorEntry.getIndexNames())
if mibBuilder.loadTexts: ccrpCDStatisticsEntry.setStatus('current')
ccrpCDRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 124, 1, 2, 3, 1, 1, 1), Counter32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccrpCDRejected.setStatus('current')
ccrpMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 2))
ccrpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 3))
ccrpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 1))
ccrpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2))
ccrpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 1, 1)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpGeneralConfigGroup"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisConfigGroup"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDConfigGroup"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceConfigGroup"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPConfigGroup"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPStatisticsGroup"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisStatisticsGroup"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpMIBCompliance = ccrpMIBCompliance.setStatus('current')
ccrpGeneralConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 1)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpNoCPCallTreatment"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpNoResourceCallTreatment"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpGeneralConfigGroup = ccrpGeneralConfigGroup.setStatus('current')
ccrpDnisConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 2)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupRowStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupCallType"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupCallTypeOperStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisGroupCallTypeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpDnisConfigGroup = ccrpDnisConfigGroup.setStatus('current')
ccrpCDConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 3)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDCallType"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDRowStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDDiscriminatedGroupOperStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDDiscriminatedGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpCDConfigGroup = ccrpCDConfigGroup.setStatus('current')
ccrpResourceConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 4)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourcePortBased"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceLimit"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceGroupOperStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceGroupRowStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceRangeStartPort"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceRangeEndPort"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceRangeOperStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpResourceRangeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpResourceConfigGroup = ccrpResourceConfigGroup.setStatus('current')
ccrpCPConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 5)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPSessionLimit"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPOverflow"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPRowStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPDnisGroupOperStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPDnisGroupRowStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPResourceServiceProfileName"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPResourceOperStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPResourceRowStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPVGOperStatus"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPVGRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpCPConfigGroup = ccrpCPConfigGroup.setStatus('current')
ccrpCPStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 6)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPActiveSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPActiveOverflowSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPTotalSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPTotalOverflowSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPNumberOverflowState"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPNumberMaxState"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPOverflowTime"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPMaxStateTime"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPPeakActiveSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPOverflowRejected"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCPResourceRejected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpCPStatisticsGroup = ccrpCPStatisticsGroup.setStatus('current')
ccrpDnisStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 7)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisStatisticsTableMaxEntries"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisStatisticsTableSystemMax"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisStatisticsTableLengthExceeded"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisStatisticsGroupName"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisActiveSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisTotalSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisPeakActiveSessions"), ("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpDnisCallTypeRejected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpDnisStatisticsGroup = ccrpDnisStatisticsGroup.setStatus('current')
ccrpCDStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 124, 3, 2, 8)).setObjects(("CISCO-CALL-RESOURCE-POOL-MIB", "ccrpCDRejected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccrpCDStatisticsGroup = ccrpCDStatisticsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CALL-RESOURCE-POOL-MIB", ccrpCPStatistics=ccrpCPStatistics, ccrpCPResourceServiceProfileName=ccrpCPResourceServiceProfileName, ccrpCDStatisticsTable=ccrpCDStatisticsTable, ccrpDnisStatistics=ccrpDnisStatistics, ccrpDnisGroupCallType=ccrpDnisGroupCallType, ccrpResourceRangeOperStatus=ccrpResourceRangeOperStatus, ccrpDnisGroupMember=ccrpDnisGroupMember, ccrpCDCallType=ccrpCDCallType, ccrpResourceConfig=ccrpResourceConfig, ccrpCDRowStatus=ccrpCDRowStatus, ccrpDnisStatisticsTableSystemMax=ccrpDnisStatisticsTableSystemMax, ccrpDnisPeakActiveSessions=ccrpDnisPeakActiveSessions, ccrpDnisStatisticsGroupName=ccrpDnisStatisticsGroupName, ccrpCDStatisticsGroup=ccrpCDStatisticsGroup, ccrpCPActiveSessions=ccrpCPActiveSessions, ccrpResourceEntry=ccrpResourceEntry, CcrpPhoneNumberPattern=CcrpPhoneNumberPattern, ccrpResourceLimit=ccrpResourceLimit, ccrpDnisCallTypeRejected=ccrpDnisCallTypeRejected, ccrpNoCPCallTreatment=ccrpNoCPCallTreatment, ccrpResourceGroupRowStatus=ccrpResourceGroupRowStatus, cCallResourcePoolMIBObjects=cCallResourcePoolMIBObjects, ccrpCPTotalSessions=ccrpCPTotalSessions, ccrpDnisGroupCallTypeEntry=ccrpDnisGroupCallTypeEntry, ccrpCDStatistics=ccrpCDStatistics, ccrpCPTotalOverflowSessions=ccrpCPTotalOverflowSessions, ccrpResourceName=ccrpResourceName, ccrpDnisStatisticsEntry=ccrpDnisStatisticsEntry, ccrpDnisGroupTable=ccrpDnisGroupTable, ccrpCPResourceRejected=ccrpCPResourceRejected, ccrpDnisStatisticsGroup=ccrpDnisStatisticsGroup, ccrpDnisActiveSessions=ccrpDnisActiveSessions, ccrpGeneralConfigGroup=ccrpGeneralConfigGroup, ccrpDnisStatisticsTableMaxEntries=ccrpDnisStatisticsTableMaxEntries, ccrpCPVGTable=ccrpCPVGTable, ccrpDnisConfig=ccrpDnisConfig, ccrpCustomerProfileTable=ccrpCustomerProfileTable, ccrpDnisStatisticsTable=ccrpDnisStatisticsTable, ccrpCDDiscriminatedGroupName=ccrpCDDiscriminatedGroupName, ccrpDnisGroupName=ccrpDnisGroupName, ccrpDnisConfigGroup=ccrpDnisConfigGroup, ccrpCPStatisticsEntry=ccrpCPStatisticsEntry, ccrpDnisTotalSessions=ccrpDnisTotalSessions, ccrpCPResourceOperStatus=ccrpCPResourceOperStatus, ccrpCPRowStatus=ccrpCPRowStatus, ccrpCPStatisticsTable=ccrpCPStatisticsTable, ccrpMIBGroups=ccrpMIBGroups, ccrpCDConfigGroup=ccrpCDConfigGroup, PYSNMP_MODULE_ID=ciscoCallResourcePoolMIB, ccrpCPVGEntry=ccrpCPVGEntry, ccrpDnisGroupCallTypeRowStatus=ccrpDnisGroupCallTypeRowStatus, ccrpMIBConformance=ccrpMIBConformance, ccrpConfiguration=ccrpConfiguration, ccrpCPVGOperStatus=ccrpCPVGOperStatus, ccrpCDName=ccrpCDName, ccrpCPResourceGrpTable=ccrpCPResourceGrpTable, ccrpCDRejected=ccrpCDRejected, ccrpResourceRangeStartPort=ccrpResourceRangeStartPort, ccrpCPNumberMaxState=ccrpCPNumberMaxState, ccrpCPOverflow=ccrpCPOverflow, ccrpResourceRangeTable=ccrpResourceRangeTable, ccrpCDStatisticsEntry=ccrpCDStatisticsEntry, ccrpDnisGroupCallTypeOperStatus=ccrpDnisGroupCallTypeOperStatus, ccrpResourceRangeEntry=ccrpResourceRangeEntry, ccrpCPSessionLimit=ccrpCPSessionLimit, ccrpCPMaxStateTime=ccrpCPMaxStateTime, ccrpResourceConfigGroup=ccrpResourceConfigGroup, ccrpCDDiscriminatedGroupType=ccrpCDDiscriminatedGroupType, ccrpCPNumberOverflowState=ccrpCPNumberOverflowState, ccrpCDDiscriminatedGroupRowStatus=ccrpCDDiscriminatedGroupRowStatus, ccrpCallDiscriminatorTable=ccrpCallDiscriminatorTable, ccrpCustomerProfileEntry=ccrpCustomerProfileEntry, ccrpCPResourceCallType=ccrpCPResourceCallType, ccrpCPResourceGrpEntry=ccrpCPResourceGrpEntry, ccrpCPVGName=ccrpCPVGName, ccrpCPActiveOverflowSessions=ccrpCPActiveOverflowSessions, ccrpCallDiscriminatorConfig=ccrpCallDiscriminatorConfig, ccrpCPOverflowRejected=ccrpCPOverflowRejected, ccrpCPOverflowTime=ccrpCPOverflowTime, ccrpResourceGroupOperStatus=ccrpResourceGroupOperStatus, ccrpDnisGroupRowStatus=ccrpDnisGroupRowStatus, ccrpCPPeakActiveSessions=ccrpCPPeakActiveSessions, ccrpResourceRangeIndex=ccrpResourceRangeIndex, ccrpDnisGroupEntry=ccrpDnisGroupEntry, ccrpResourceRangeEndPort=ccrpResourceRangeEndPort, ccrpCPConfigGroup=ccrpCPConfigGroup, ccrpResourceTable=ccrpResourceTable, ccrpCPDnisGrpEntry=ccrpCPDnisGrpEntry, ccrpDnisStatisticsDnisNumber=ccrpDnisStatisticsDnisNumber, ccrpResourcePortBased=ccrpResourcePortBased, ccrpCPDnisGroupOperStatus=ccrpCPDnisGroupOperStatus, ccrpCustomerProfileConfig=ccrpCustomerProfileConfig, ccrpCDDiscriminatedGroupOperStatus=ccrpCDDiscriminatedGroupOperStatus, ciscoCallResourcePoolMIB=ciscoCallResourcePoolMIB, ccrpNoResourceCallTreatment=ccrpNoResourceCallTreatment, ccrpCPVGRowStatus=ccrpCPVGRowStatus, ccrpCallDiscriminatorEntry=ccrpCallDiscriminatorEntry, ccrpCDDiscriminatedGrpTable=ccrpCDDiscriminatedGrpTable, ccrpCPStatisticsGroup=ccrpCPStatisticsGroup, CcrpPhoneNumber=CcrpPhoneNumber, ccrpDnisGroupCallTypeTable=ccrpDnisGroupCallTypeTable, ccrpMIBNotificationPrefix=ccrpMIBNotificationPrefix, ccrpGeneralConfig=ccrpGeneralConfig, ccrpDnisStatisticsTableLengthExceeded=ccrpDnisStatisticsTableLengthExceeded, ccrpCPDnisGroupRowStatus=ccrpCPDnisGroupRowStatus, ccrpCPResourceRowStatus=ccrpCPResourceRowStatus, ccrpMIBCompliance=ccrpMIBCompliance, ccrpCPDnisGrpTable=ccrpCPDnisGrpTable, ccrpCDDiscriminatedGrpEntry=ccrpCDDiscriminatedGrpEntry, ccrpStatistics=ccrpStatistics, PhysicalPosition=PhysicalPosition, ccrpMIBCompliances=ccrpMIBCompliances, ccrpCPName=ccrpCPName, ccrpResourceRangeRowStatus=ccrpResourceRangeRowStatus)
