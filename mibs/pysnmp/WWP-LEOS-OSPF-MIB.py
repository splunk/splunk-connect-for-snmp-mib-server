#
# PySNMP MIB module WWP-LEOS-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
AreaID, = mibBuilder.importSymbols("OSPF-MIB", "AreaID")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, IpAddress, ObjectIdentity, Bits, NotificationType, Unsigned32, ModuleIdentity, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "IpAddress", "ObjectIdentity", "Bits", "NotificationType", "Unsigned32", "ModuleIdentity", "iso", "Counter32")
TruthValue, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "RowStatus")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosOspfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31))
wwpLeosOspfMIB.setRevisions(('2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpLeosOspfMIB.setLastUpdated('200508050700Z')
if mibBuilder.loadTexts: wwpLeosOspfMIB.setOrganization('World Wide Packets, Inc')
class OspfOperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5))

wwpLeosOspfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1))
wwpLeosOspfGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1))
wwpLeosOspf = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2))
wwpLeosOspfRFC1583Comp = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosOspfRFC1583Comp.setStatus('current')
wwpLeosOspfOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 2), OspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfOperStatus.setStatus('current')
wwpLeosOspfOpaqueLsaSupport = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosOspfOpaqueLsaSupport.setStatus('current')
wwpLeosOspfTrafficEngSupport = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfTrafficEngSupport.setStatus('current')
wwpLeosOspfExtOpLsaCount = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfExtOpLsaCount.setStatus('current')
wwpLeosOspfExtOpLsaCksumSum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfExtOpLsaCksumSum.setStatus('current')
wwpLeosOspfNumUpdPending = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfNumUpdPending.setStatus('current')
wwpLeosOspfNumUpdMerged = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfNumUpdMerged.setStatus('current')
wwpLeosOspfNumCksumsPending = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfNumCksumsPending.setStatus('current')
wwpLeosOspfCalcMaxDelay = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 1, 10), Unsigned32().clone(5000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosOspfCalcMaxDelay.setStatus('current')
wwpLeosOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosOspfAreaTable.setStatus('current')
wwpLeosOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-OSPF-MIB", "wwpLeosOspfAreaId"))
if mibBuilder.loadTexts: wwpLeosOspfAreaEntry.setStatus('current')
wwpLeosOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 1), AreaID())
if mibBuilder.loadTexts: wwpLeosOspfAreaId.setStatus('current')
wwpLeosOspfAreaTransitCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaTransitCapability.setStatus('current')
wwpLeosOspfAreaRtrLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaRtrLsaCount.setStatus('current')
wwpLeosOspfAreaRtrLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaRtrLsaCksumSum.setStatus('current')
wwpLeosOspfAreaNetLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaNetLsaCount.setStatus('current')
wwpLeosOspfAreaNetLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaNetLsaCksumSum.setStatus('current')
wwpLeosOspfAreaSummLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaSummLsaCount.setStatus('current')
wwpLeosOspfAreaSummLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaSummLsaCksumSum.setStatus('current')
wwpLeosOspfAreaSummAsLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaSummAsLsaCount.setStatus('current')
wwpLeosOspfAreaSummAsLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaSummAsLsaCksumSum.setStatus('current')
wwpLeosOspfAreaNssaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaNssaLsaCount.setStatus('current')
wwpLeosOspfAreaNssaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaNssaLsaCksumSum.setStatus('current')
wwpLeosOspfAreaOpLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaOpLsaCount.setStatus('current')
wwpLeosOspfAreaOpLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfAreaOpLsaCksumSum.setStatus('current')
wwpLeosOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2), )
if mibBuilder.loadTexts: wwpLeosOspfIfTable.setStatus('current')
wwpLeosOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1), ).setIndexNames((0, "WWP-LEOS-OSPF-MIB", "wwpLeosOspfIfIpAddress"), (0, "WWP-LEOS-OSPF-MIB", "wwpLeosOspfAddressLessIf"))
if mibBuilder.loadTexts: wwpLeosOspfIfEntry.setStatus('current')
wwpLeosOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: wwpLeosOspfIfIpAddress.setStatus('current')
wwpLeosOspfAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: wwpLeosOspfAddressLessIf.setStatus('current')
wwpLeosOspfIfLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfIfLsaCount.setStatus('current')
wwpLeosOspfIfLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfIfLsaCksumSum.setStatus('current')
wwpLeosOspfIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1, 5), OspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfIfOperStatus.setStatus('current')
wwpLeosOspfIfNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosOspfIfNetMask.setStatus('current')
wwpLeosOspfIfTransmitTimerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 31, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 429496999)).clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosOspfIfTransmitTimerDelay.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-OSPF-MIB", wwpLeosOspfIfIpAddress=wwpLeosOspfIfIpAddress, wwpLeosOspfExtOpLsaCount=wwpLeosOspfExtOpLsaCount, wwpLeosOspfOpaqueLsaSupport=wwpLeosOspfOpaqueLsaSupport, wwpLeosOspfAreaTable=wwpLeosOspfAreaTable, wwpLeosOspfRFC1583Comp=wwpLeosOspfRFC1583Comp, wwpLeosOspfAreaNetLsaCount=wwpLeosOspfAreaNetLsaCount, wwpLeosOspfIfEntry=wwpLeosOspfIfEntry, wwpLeosOspfAreaSummLsaCksumSum=wwpLeosOspfAreaSummLsaCksumSum, wwpLeosOspfNumUpdMerged=wwpLeosOspfNumUpdMerged, wwpLeosOspfAreaEntry=wwpLeosOspfAreaEntry, wwpLeosOspfAreaNssaLsaCksumSum=wwpLeosOspfAreaNssaLsaCksumSum, wwpLeosOspfIfLsaCount=wwpLeosOspfIfLsaCount, wwpLeosOspfExtOpLsaCksumSum=wwpLeosOspfExtOpLsaCksumSum, PYSNMP_MODULE_ID=wwpLeosOspfMIB, wwpLeosOspfIfLsaCksumSum=wwpLeosOspfIfLsaCksumSum, wwpLeosOspfNumUpdPending=wwpLeosOspfNumUpdPending, wwpLeosOspfCalcMaxDelay=wwpLeosOspfCalcMaxDelay, wwpLeosOspfGeneralGroup=wwpLeosOspfGeneralGroup, wwpLeosOspfTrafficEngSupport=wwpLeosOspfTrafficEngSupport, wwpLeosOspfAreaOpLsaCount=wwpLeosOspfAreaOpLsaCount, wwpLeosOspfIfTable=wwpLeosOspfIfTable, wwpLeosOspfAreaSummAsLsaCount=wwpLeosOspfAreaSummAsLsaCount, wwpLeosOspfAreaOpLsaCksumSum=wwpLeosOspfAreaOpLsaCksumSum, wwpLeosOspfIfTransmitTimerDelay=wwpLeosOspfIfTransmitTimerDelay, wwpLeosOspfAreaRtrLsaCksumSum=wwpLeosOspfAreaRtrLsaCksumSum, wwpLeosOspfAddressLessIf=wwpLeosOspfAddressLessIf, wwpLeosOspfAreaNetLsaCksumSum=wwpLeosOspfAreaNetLsaCksumSum, wwpLeosOspfIfOperStatus=wwpLeosOspfIfOperStatus, wwpLeosOspfMIB=wwpLeosOspfMIB, wwpLeosOspfAreaSummAsLsaCksumSum=wwpLeosOspfAreaSummAsLsaCksumSum, wwpLeosOspfAreaId=wwpLeosOspfAreaId, wwpLeosOspfAreaSummLsaCount=wwpLeosOspfAreaSummLsaCount, wwpLeosOspfNumCksumsPending=wwpLeosOspfNumCksumsPending, wwpLeosOspfAreaNssaLsaCount=wwpLeosOspfAreaNssaLsaCount, wwpLeosOspfAreaRtrLsaCount=wwpLeosOspfAreaRtrLsaCount, wwpLeosOspf=wwpLeosOspf, wwpLeosOspfOperStatus=wwpLeosOspfOperStatus, wwpLeosOspfMIBObjects=wwpLeosOspfMIBObjects, OspfOperStatus=OspfOperStatus, wwpLeosOspfAreaTransitCapability=wwpLeosOspfAreaTransitCapability, wwpLeosOspfIfNetMask=wwpLeosOspfIfNetMask)
