#
# PySNMP MIB module CISCOSB-IPV6FHS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-IPV6FHS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:06:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
VlanList1, VlanList2, VlanList4, VlanList3 = mibBuilder.importSymbols("CISCOSB-BRIDGEMIBOBJECTS-MIB", "VlanList1", "VlanList2", "VlanList4", "VlanList3")
rndErrorDesc, rndErrorSeverity = mibBuilder.importSymbols("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc", "rndErrorSeverity")
switch001, rlMacMulticast, rndNotifications = mibBuilder.importSymbols("CISCOSB-MIB", "switch001", "rlMacMulticast", "rndNotifications")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
VlanIndex, PortList, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex", "PortList", "VlanId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, Bits, IpAddress, Gauge32, Counter32, iso, ModuleIdentity, ObjectIdentity, NotificationType, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "Bits", "IpAddress", "Gauge32", "Counter32", "iso", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Integer32", "MibIdentifier")
TruthValue, DisplayString, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention", "MacAddress")
rlIpv6Fhs = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215))
rlIpv6Fhs.setRevisions(('2012-12-12 00:00',))
if mibBuilder.loadTexts: rlIpv6Fhs.setLastUpdated('201212120000Z')
if mibBuilder.loadTexts: rlIpv6Fhs.setOrganization('Cisco Small Business')
class RlIpv6FhsSettingStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(-1, 1, 2))
    namedValues = NamedValues(("unspecified", -1), ("enabled", 1), ("disabled", 2))

class RlIpv6FhsSettingType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("default", 1), ("global", 2), ("vlan", 3), ("port", 4))

rlFirstHopSec = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1))
rlNdInspection = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2))
rlRaGuard = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3))
rlNbrBindingIntegrity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4))
rlDhcpGuard = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5))
rlFirstHopSecPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 1), )
if mibBuilder.loadTexts: rlFirstHopSecPolicyTable.setStatus('current')
rlFirstHopSecPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 1, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecPolicyName"))
if mibBuilder.loadTexts: rlFirstHopSecPolicyEntry.setStatus('current')
rlFirstHopSecPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlFirstHopSecPolicyName.setStatus('current')
rlFirstHopSecPolicyLogDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 1, 1, 2), RlIpv6FhsSettingStatusType().clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPolicyLogDrop.setStatus('current')
rlFirstHopSecPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlFirstHopSecPolicyRowStatus.setStatus('current')
rlFirstHopSecPortPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2), )
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyTable.setStatus('current')
rlFirstHopSecPortPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecPortPolicyIfIndex"), (1, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecPortPolicyName"))
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyEntry.setStatus('current')
rlFirstHopSecPortPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyIfIndex.setStatus('current')
rlFirstHopSecPortPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyName.setStatus('current')
rlFirstHopSecPortPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyVlan1to1024.setStatus('current')
rlFirstHopSecPortPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyVlan1025to2048.setStatus('current')
rlFirstHopSecPortPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyVlan2049to3072.setStatus('current')
rlFirstHopSecPortPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyVlan3073to4094.setStatus('current')
rlFirstHopSecPortPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlFirstHopSecPortPolicyRowStatus.setStatus('current')
rlFirstHopSecPolicyPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3), )
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortTable.setStatus('current')
rlFirstHopSecPolicyPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecPolicyPortName"), (0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecPolicyPortIfIndex"))
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortEntry.setStatus('current')
rlFirstHopSecPolicyPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortName.setStatus('current')
rlFirstHopSecPolicyPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortIfIndex.setStatus('current')
rlFirstHopSecPolicyPortVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortVlan1to1024.setStatus('current')
rlFirstHopSecPolicyPortVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortVlan1025to2048.setStatus('current')
rlFirstHopSecPolicyPortVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortVlan2049to3072.setStatus('current')
rlFirstHopSecPolicyPortVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecPolicyPortVlan3073to4094.setStatus('current')
rlFirstHopSecVlanPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 4), )
if mibBuilder.loadTexts: rlFirstHopSecVlanPolicyTable.setStatus('current')
rlFirstHopSecVlanPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 4, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecVlanPolicyVlanTag"))
if mibBuilder.loadTexts: rlFirstHopSecVlanPolicyEntry.setStatus('current')
rlFirstHopSecVlanPolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: rlFirstHopSecVlanPolicyVlanTag.setStatus('current')
rlFirstHopSecVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecVlanPolicyName.setStatus('current')
rlFirstHopSecVlanPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlFirstHopSecVlanPolicyRowStatus.setStatus('current')
rlFirstHopSecPolicyVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 5), )
if mibBuilder.loadTexts: rlFirstHopSecPolicyVlanTable.setStatus('current')
rlFirstHopSecPolicyVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 5, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecPolicyVlanPolicyName"))
if mibBuilder.loadTexts: rlFirstHopSecPolicyVlanEntry.setStatus('current')
rlFirstHopSecPolicyVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlFirstHopSecPolicyVlanPolicyName.setStatus('current')
rlFirstHopSecPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPolicyVlan1to1024.setStatus('current')
rlFirstHopSecPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPolicyVlan1025to2048.setStatus('current')
rlFirstHopSecPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPolicyVlan2049to3072.setStatus('current')
rlFirstHopSecPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecPolicyVlan3073to4094.setStatus('current')
rlFirstHopSecEnableVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 6), )
if mibBuilder.loadTexts: rlFirstHopSecEnableVlanTable.setStatus('current')
rlFirstHopSecEnableVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 6, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecEnableVlanIndex"))
if mibBuilder.loadTexts: rlFirstHopSecEnableVlanEntry.setStatus('current')
rlFirstHopSecEnableVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("static", 1))))
if mibBuilder.loadTexts: rlFirstHopSecEnableVlanIndex.setStatus('current')
rlFirstHopSecEnableVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecEnableVlan1to1024.setStatus('current')
rlFirstHopSecEnableVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecEnableVlan1025to2048.setStatus('current')
rlFirstHopSecEnableVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecEnableVlan2049to3072.setStatus('current')
rlFirstHopSecEnableVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecEnableVlan3073to4094.setStatus('current')
rlFirstHopSecActivePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7), )
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyTable.setStatus('current')
rlFirstHopSecActivePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecActivePolicyIfIndex"), (0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecActivePolicyVlanTag"))
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyEntry.setStatus('current')
rlFirstHopSecActivePolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyIfIndex.setStatus('current')
rlFirstHopSecActivePolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7, 1, 2), VlanId())
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyVlanTag.setStatus('current')
rlFirstHopSecActivePolicyNamePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyNamePort.setStatus('current')
rlFirstHopSecActivePolicyNameVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyNameVlan.setStatus('current')
rlFirstHopSecActivePolicyLogDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7, 1, 5), RlIpv6FhsSettingStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyLogDrop.setStatus('current')
rlFirstHopSecActivePolicyLogDropType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 7, 1, 6), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecActivePolicyLogDropType.setStatus('current')
rlFirstHopSecCountersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8), )
if mibBuilder.loadTexts: rlFirstHopSecCountersTable.setStatus('current')
rlFirstHopSecCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlFirstHopSecCountersIfIndex"))
if mibBuilder.loadTexts: rlFirstHopSecCountersEntry.setStatus('current')
rlFirstHopSecCountersIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlFirstHopSecCountersIfIndex.setStatus('current')
rlFirstHopSecCountersRxNdpRA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxNdpRA.setStatus('current')
rlFirstHopSecCountersDropNdpRA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdpRA.setStatus('current')
rlFirstHopSecCountersRxNdpRS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxNdpRS.setStatus('current')
rlFirstHopSecCountersDropNdpRS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdpRS.setStatus('current')
rlFirstHopSecCountersRxNdpNA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxNdpNA.setStatus('current')
rlFirstHopSecCountersDropNdpNA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdpNA.setStatus('current')
rlFirstHopSecCountersRxNdpNS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxNdpNS.setStatus('current')
rlFirstHopSecCountersDropNdpNS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdpNS.setStatus('current')
rlFirstHopSecCountersRxNdpRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxNdpRedirect.setStatus('current')
rlFirstHopSecCountersDropNdpRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdpRedirect.setStatus('current')
rlFirstHopSecCountersRxDhcpAdverise = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxDhcpAdverise.setStatus('current')
rlFirstHopSecCountersDropDhcpAdverise = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpAdverise.setStatus('current')
rlFirstHopSecCountersRxDhcpReply = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxDhcpReply.setStatus('current')
rlFirstHopSecCountersDropDhcpReply = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpReply.setStatus('current')
rlFirstHopSecCountersRxDhcpReconfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxDhcpReconfigure.setStatus('current')
rlFirstHopSecCountersDropDhcpReconfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpReconfigure.setStatus('current')
rlFirstHopSecCountersRxDhcpRelayReply = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxDhcpRelayReply.setStatus('current')
rlFirstHopSecCountersDropDhcpRelayReply = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpRelayReply.setStatus('current')
rlFirstHopSecCountersRxDhcpLeasequeryReply = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersRxDhcpLeasequeryReply.setStatus('current')
rlFirstHopSecCountersDropDhcpLeasequeryReply = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpLeasequeryReply.setStatus('current')
rlFirstHopSecCountersDropRaGuardUnauthorizedMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropRaGuardUnauthorizedMessage.setStatus('current')
rlFirstHopSecCountersDropRaGuardUnauthorizedHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropRaGuardUnauthorizedHopLimit.setStatus('current')
rlFirstHopSecCountersDropRaGuardUnauthorizedManagedConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropRaGuardUnauthorizedManagedConfigFlag.setStatus('current')
rlFirstHopSecCountersDropRaGuardUnauthorizedOtherConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropRaGuardUnauthorizedOtherConfigFlag.setStatus('current')
rlFirstHopSecCountersDropRaGuardUnauthorizedRouterPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropRaGuardUnauthorizedRouterPreference.setStatus('current')
rlFirstHopSecCountersDropRaGuardUnauthorizedAdvertisedPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropRaGuardUnauthorizedAdvertisedPrefix.setStatus('current')
rlFirstHopSecCountersDropRaGuardUnauthorizedSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropRaGuardUnauthorizedSourceAddress.setStatus('current')
rlFirstHopSecCountersDropNdInspectionInvalidSourceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdInspectionInvalidSourceMac.setStatus('current')
rlFirstHopSecCountersDropNdInspectionUnsecureMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdInspectionUnsecureMessage.setStatus('current')
rlFirstHopSecCountersDropNdInspectionUnauthorizedSecLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNdInspectionUnauthorizedSecLevel.setStatus('current')
rlFirstHopSecCountersDropDhcpGuardUnauthorizedMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpGuardUnauthorizedMessage.setStatus('current')
rlFirstHopSecCountersDropDhcpGuardUnauthorizedSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpGuardUnauthorizedSourceAddress.setStatus('current')
rlFirstHopSecCountersDropDhcpGuardUnauthorizedServerPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpGuardUnauthorizedServerPreference.setStatus('current')
rlFirstHopSecCountersDropDhcpGuardUnauthorizedAssignedAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropDhcpGuardUnauthorizedAssignedAddress.setStatus('current')
rlFirstHopSecCountersDropSourceGuardNoBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropSourceGuardNoBinding.setStatus('current')
rlFirstHopSecCountersDropNbrBindingIntegrityIllegalIcmpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNbrBindingIntegrityIllegalIcmpv6.setStatus('current')
rlFirstHopSecCountersDropNbrBindingIntegrityIllegalDhcpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 8, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlFirstHopSecCountersDropNbrBindingIntegrityIllegalDhcpv6.setStatus('current')
rlFirstHopSecLogDrop = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecLogDrop.setStatus('current')
rlFirstHopSecClearCounters = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 1, 10), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlFirstHopSecClearCounters.setStatus('current')
rlNdInspectionPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1), )
if mibBuilder.loadTexts: rlNdInspectionPolicyTable.setStatus('current')
rlNdInspectionPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionPolicyName"))
if mibBuilder.loadTexts: rlNdInspectionPolicyEntry.setStatus('current')
rlNdInspectionPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNdInspectionPolicyName.setStatus('current')
rlNdInspectionPolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("unspecified", -1), ("host", 1), ("router", 2))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicyDeviceRole.setStatus('current')
rlNdInspectionPolicyDropUnsecured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1, 1, 3), RlIpv6FhsSettingStatusType().clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicyDropUnsecured.setStatus('current')
rlNdInspectionPolicySecLevelMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 7), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicySecLevelMin.setStatus('current')
rlNdInspectionPolicyValidateSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1, 1, 5), RlIpv6FhsSettingStatusType().clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicyValidateSrcMac.setStatus('current')
rlNdInspectionPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNdInspectionPolicyRowStatus.setStatus('current')
rlNdInspectionPortPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2), )
if mibBuilder.loadTexts: rlNdInspectionPortPolicyTable.setStatus('current')
rlNdInspectionPortPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionPortPolicyIfIndex"), (1, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionPortPolicyName"))
if mibBuilder.loadTexts: rlNdInspectionPortPolicyEntry.setStatus('current')
rlNdInspectionPortPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlNdInspectionPortPolicyIfIndex.setStatus('current')
rlNdInspectionPortPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNdInspectionPortPolicyName.setStatus('current')
rlNdInspectionPortPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPortPolicyVlan1to1024.setStatus('current')
rlNdInspectionPortPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPortPolicyVlan1025to2048.setStatus('current')
rlNdInspectionPortPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPortPolicyVlan2049to3072.setStatus('current')
rlNdInspectionPortPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPortPolicyVlan3073to4094.setStatus('current')
rlNdInspectionPortPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNdInspectionPortPolicyRowStatus.setStatus('current')
rlNdInspectionPolicyPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3), )
if mibBuilder.loadTexts: rlNdInspectionPolicyPortTable.setStatus('current')
rlNdInspectionPolicyPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionPolicyPortName"), (0, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionPolicyPortIfIndex"))
if mibBuilder.loadTexts: rlNdInspectionPolicyPortEntry.setStatus('current')
rlNdInspectionPolicyPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNdInspectionPolicyPortName.setStatus('current')
rlNdInspectionPolicyPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlNdInspectionPolicyPortIfIndex.setStatus('current')
rlNdInspectionPolicyPortVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionPolicyPortVlan1to1024.setStatus('current')
rlNdInspectionPolicyPortVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionPolicyPortVlan1025to2048.setStatus('current')
rlNdInspectionPolicyPortVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionPolicyPortVlan2049to3072.setStatus('current')
rlNdInspectionPolicyPortVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionPolicyPortVlan3073to4094.setStatus('current')
rlNdInspectionVlanPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 4), )
if mibBuilder.loadTexts: rlNdInspectionVlanPolicyTable.setStatus('current')
rlNdInspectionVlanPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 4, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionVlanPolicyVlanTag"))
if mibBuilder.loadTexts: rlNdInspectionVlanPolicyEntry.setStatus('current')
rlNdInspectionVlanPolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: rlNdInspectionVlanPolicyVlanTag.setStatus('current')
rlNdInspectionVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionVlanPolicyName.setStatus('current')
rlNdInspectionVlanPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNdInspectionVlanPolicyRowStatus.setStatus('current')
rlNdInspectionPolicyVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 5), )
if mibBuilder.loadTexts: rlNdInspectionPolicyVlanTable.setStatus('current')
rlNdInspectionPolicyVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 5, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionPolicyVlanPolicyName"))
if mibBuilder.loadTexts: rlNdInspectionPolicyVlanEntry.setStatus('current')
rlNdInspectionPolicyVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNdInspectionPolicyVlanPolicyName.setStatus('current')
rlNdInspectionPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicyVlan1to1024.setStatus('current')
rlNdInspectionPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicyVlan1025to2048.setStatus('current')
rlNdInspectionPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicyVlan2049to3072.setStatus('current')
rlNdInspectionPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionPolicyVlan3073to4094.setStatus('current')
rlNdInspectionEnableVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 6), )
if mibBuilder.loadTexts: rlNdInspectionEnableVlanTable.setStatus('current')
rlNdInspectionEnableVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 6, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionEnableVlanIndex"))
if mibBuilder.loadTexts: rlNdInspectionEnableVlanEntry.setStatus('current')
rlNdInspectionEnableVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("static", 1))))
if mibBuilder.loadTexts: rlNdInspectionEnableVlanIndex.setStatus('current')
rlNdInspectionEnableVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionEnableVlan1to1024.setStatus('current')
rlNdInspectionEnableVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionEnableVlan1025to2048.setStatus('current')
rlNdInspectionEnableVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionEnableVlan2049to3072.setStatus('current')
rlNdInspectionEnableVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionEnableVlan3073to4094.setStatus('current')
rlNdInspectionActivePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7), )
if mibBuilder.loadTexts: rlNdInspectionActivePolicyTable.setStatus('current')
rlNdInspectionActivePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionActivePolicyIfIndex"), (0, "CISCOSB-IPV6FHS-MIB", "rlNdInspectionActivePolicyVlanTag"))
if mibBuilder.loadTexts: rlNdInspectionActivePolicyEntry.setStatus('current')
rlNdInspectionActivePolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlNdInspectionActivePolicyIfIndex.setStatus('current')
rlNdInspectionActivePolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 2), VlanId())
if mibBuilder.loadTexts: rlNdInspectionActivePolicyVlanTag.setStatus('current')
rlNdInspectionActivePolicyNamePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyNamePort.setStatus('current')
rlNdInspectionActivePolicyNameVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyNameVlan.setStatus('current')
rlNdInspectionActivePolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("host", 1), ("router", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyDeviceRole.setStatus('current')
rlNdInspectionActivePolicyDeviceRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 6), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyDeviceRoleType.setStatus('current')
rlNdInspectionActivePolicyDropUnsecured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 7), RlIpv6FhsSettingStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyDropUnsecured.setStatus('current')
rlNdInspectionActivePolicyDropUnsecuredType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 8), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyDropUnsecuredType.setStatus('current')
rlNdInspectionActivePolicySecLevelMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 7), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicySecLevelMin.setStatus('current')
rlNdInspectionActivePolicySecLevelMinType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 10), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicySecLevelMinType.setStatus('current')
rlNdInspectionActivePolicyValidateSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 11), RlIpv6FhsSettingStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyValidateSrcMac.setStatus('current')
rlNdInspectionActivePolicyValidateSrcMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 7, 1, 12), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNdInspectionActivePolicyValidateSrcMacType.setStatus('current')
rlNdInspectionValidateSrcMac = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionValidateSrcMac.setStatus('current')
rlNdInspectionDropUnsecured = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionDropUnsecured.setStatus('current')
rlNdInspectionSecLevelMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 7), )).clone(-2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNdInspectionSecLevelMin.setStatus('current')
rlNdInspectionMessageDropTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 228)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlNdInspectionMessageDropTrap.setStatus('current')
rlRaGuardPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1), )
if mibBuilder.loadTexts: rlRaGuardPolicyTable.setStatus('current')
rlRaGuardPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlRaGuardPolicyName"))
if mibBuilder.loadTexts: rlRaGuardPolicyEntry.setStatus('current')
rlRaGuardPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlRaGuardPolicyName.setStatus('current')
rlRaGuardPolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("unspecified", -1), ("host", 1), ("router", 2))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyDeviceRole.setStatus('current')
rlRaGuardPolicyHopLimitMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyHopLimitMin.setStatus('current')
rlRaGuardPolicyHopLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyHopLimitMax.setStatus('current')
rlRaGuardPolicyManagedConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("unspecified", -1), ("disabled", 0), ("enabled-off", 1), ("enabled-on", 2))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyManagedConfigFlag.setStatus('current')
rlRaGuardPolicyMatchRaAddrSpecified = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyMatchRaAddrSpecified.setStatus('current')
rlRaGuardPolicyMatchRaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyMatchRaAddr.setStatus('current')
rlRaGuardPolicyMatchRaPrefixesSpecified = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyMatchRaPrefixesSpecified.setStatus('current')
rlRaGuardPolicyMatchRaPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyMatchRaPrefixes.setStatus('current')
rlRaGuardPolicyOtherConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("unspecified", -1), ("disabled", 0), ("enabled-off", 1), ("enabled-on", 2))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyOtherConfigFlag.setStatus('current')
rlRaGuardPolicyRouterPrefMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecified", -1), ("disabled", 0), ("low", 1), ("medium", 2), ("high", 3))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyRouterPrefMin.setStatus('current')
rlRaGuardPolicyRouterPrefMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecified", -1), ("disabled", 0), ("low", 1), ("medium", 2), ("high", 3))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyRouterPrefMax.setStatus('current')
rlRaGuardPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlRaGuardPolicyRowStatus.setStatus('current')
rlRaGuardPortPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2), )
if mibBuilder.loadTexts: rlRaGuardPortPolicyTable.setStatus('current')
rlRaGuardPortPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlRaGuardPortPolicyIfIndex"), (1, "CISCOSB-IPV6FHS-MIB", "rlRaGuardPortPolicyName"))
if mibBuilder.loadTexts: rlRaGuardPortPolicyEntry.setStatus('current')
rlRaGuardPortPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlRaGuardPortPolicyIfIndex.setStatus('current')
rlRaGuardPortPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlRaGuardPortPolicyName.setStatus('current')
rlRaGuardPortPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPortPolicyVlan1to1024.setStatus('current')
rlRaGuardPortPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPortPolicyVlan1025to2048.setStatus('current')
rlRaGuardPortPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPortPolicyVlan2049to3072.setStatus('current')
rlRaGuardPortPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPortPolicyVlan3073to4094.setStatus('current')
rlRaGuardPortPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlRaGuardPortPolicyRowStatus.setStatus('current')
rlRaGuardPolicyPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3), )
if mibBuilder.loadTexts: rlRaGuardPolicyPortTable.setStatus('current')
rlRaGuardPolicyPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlRaGuardPolicyPortName"), (0, "CISCOSB-IPV6FHS-MIB", "rlRaGuardPolicyPortIfIndex"))
if mibBuilder.loadTexts: rlRaGuardPolicyPortEntry.setStatus('current')
rlRaGuardPolicyPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlRaGuardPolicyPortName.setStatus('current')
rlRaGuardPolicyPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlRaGuardPolicyPortIfIndex.setStatus('current')
rlRaGuardPolicyPortVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardPolicyPortVlan1to1024.setStatus('current')
rlRaGuardPolicyPortVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardPolicyPortVlan1025to2048.setStatus('current')
rlRaGuardPolicyPortVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardPolicyPortVlan2049to3072.setStatus('current')
rlRaGuardPolicyPortVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardPolicyPortVlan3073to4094.setStatus('current')
rlRaGuardVlanPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 4), )
if mibBuilder.loadTexts: rlRaGuardVlanPolicyTable.setStatus('current')
rlRaGuardVlanPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 4, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlRaGuardVlanPolicyVlanTag"))
if mibBuilder.loadTexts: rlRaGuardVlanPolicyEntry.setStatus('current')
rlRaGuardVlanPolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: rlRaGuardVlanPolicyVlanTag.setStatus('current')
rlRaGuardVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardVlanPolicyName.setStatus('current')
rlRaGuardVlanPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlRaGuardVlanPolicyRowStatus.setStatus('current')
rlRaGuardPolicyVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 5), )
if mibBuilder.loadTexts: rlRaGuardPolicyVlanTable.setStatus('current')
rlRaGuardPolicyVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 5, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlRaGuardPolicyVlanPolicyName"))
if mibBuilder.loadTexts: rlRaGuardPolicyVlanEntry.setStatus('current')
rlRaGuardPolicyVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlRaGuardPolicyVlanPolicyName.setStatus('current')
rlRaGuardPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyVlan1to1024.setStatus('current')
rlRaGuardPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyVlan1025to2048.setStatus('current')
rlRaGuardPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyVlan2049to3072.setStatus('current')
rlRaGuardPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardPolicyVlan3073to4094.setStatus('current')
rlRaGuardEnableVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 6), )
if mibBuilder.loadTexts: rlRaGuardEnableVlanTable.setStatus('current')
rlRaGuardEnableVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 6, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlRaGuardEnableVlanIndex"))
if mibBuilder.loadTexts: rlRaGuardEnableVlanEntry.setStatus('current')
rlRaGuardEnableVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("static", 1))))
if mibBuilder.loadTexts: rlRaGuardEnableVlanIndex.setStatus('current')
rlRaGuardEnableVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardEnableVlan1to1024.setStatus('current')
rlRaGuardEnableVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardEnableVlan1025to2048.setStatus('current')
rlRaGuardEnableVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardEnableVlan2049to3072.setStatus('current')
rlRaGuardEnableVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardEnableVlan3073to4094.setStatus('current')
rlRaGuardActivePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7), )
if mibBuilder.loadTexts: rlRaGuardActivePolicyTable.setStatus('current')
rlRaGuardActivePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlRaGuardActivePolicyIfIndex"), (0, "CISCOSB-IPV6FHS-MIB", "rlRaGuardActivePolicyVlanTag"))
if mibBuilder.loadTexts: rlRaGuardActivePolicyEntry.setStatus('current')
rlRaGuardActivePolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlRaGuardActivePolicyIfIndex.setStatus('current')
rlRaGuardActivePolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 2), VlanId())
if mibBuilder.loadTexts: rlRaGuardActivePolicyVlanTag.setStatus('current')
rlRaGuardActivePolicyNamePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyNamePort.setStatus('current')
rlRaGuardActivePolicyNameVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyNameVlan.setStatus('current')
rlRaGuardActivePolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("host", 1), ("router", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyDeviceRole.setStatus('current')
rlRaGuardActivePolicyDeviceRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 6), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyDeviceRoleType.setStatus('current')
rlRaGuardActivePolicyHopLimitMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyHopLimitMin.setStatus('current')
rlRaGuardActivePolicyHopLimitMinType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 8), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyHopLimitMinType.setStatus('current')
rlRaGuardActivePolicyHopLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyHopLimitMax.setStatus('current')
rlRaGuardActivePolicyHopLimitMaxType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 10), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyHopLimitMaxType.setStatus('current')
rlRaGuardActivePolicyManagedConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled-off", 1), ("enabled-on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyManagedConfigFlag.setStatus('current')
rlRaGuardActivePolicyManagedConfigFlagType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 12), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyManagedConfigFlagType.setStatus('current')
rlRaGuardActivePolicyMatchRaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyMatchRaAddr.setStatus('current')
rlRaGuardActivePolicyMatchRaAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 14), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyMatchRaAddrType.setStatus('current')
rlRaGuardActivePolicyMatchRaPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyMatchRaPrefixes.setStatus('current')
rlRaGuardActivePolicyMatchRaPrefixesType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 16), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyMatchRaPrefixesType.setStatus('current')
rlRaGuardActivePolicyOtherConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled-off", 1), ("enabled-on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyOtherConfigFlag.setStatus('current')
rlRaGuardActivePolicyOtherConfigFlagType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 18), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyOtherConfigFlagType.setStatus('current')
rlRaGuardActivePolicyRouterPrefMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("low", 1), ("medium", 2), ("high", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyRouterPrefMin.setStatus('current')
rlRaGuardActivePolicyRouterPrefMinType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 20), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyRouterPrefMinType.setStatus('current')
rlRaGuardActivePolicyRouterPrefMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("low", 1), ("medium", 2), ("high", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyRouterPrefMax.setStatus('current')
rlRaGuardActivePolicyRouterPrefMaxType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 7, 1, 22), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlRaGuardActivePolicyRouterPrefMaxType.setStatus('current')
rlRaGuardHopLimitMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardHopLimitMin.setStatus('current')
rlRaGuardHopLimitMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardHopLimitMax.setStatus('current')
rlRaGuardManagedConfigFlag = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled-off", 1), ("enabled-on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardManagedConfigFlag.setStatus('current')
rlRaGuardOtherConfigFlag = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled-off", 1), ("enabled-on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardOtherConfigFlag.setStatus('current')
rlRaGuardRouterPrefMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("low", 1), ("medium", 2), ("high", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardRouterPrefMin.setStatus('current')
rlRaGuardRouterPrefMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("low", 1), ("medium", 2), ("high", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlRaGuardRouterPrefMax.setStatus('current')
rlRaGuardMessageDropTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 229)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlRaGuardMessageDropTrap.setStatus('current')
rlNbrBindingIntegrityPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyTable.setStatus('current')
rlNbrBindingIntegrityPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityPolicyName"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyEntry.setStatus('current')
rlNbrBindingIntegrityPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyName.setStatus('current')
rlNbrBindingIntegrityPolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("unspecified", -1), ("perimeter", 1), ("internal", 2))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyDeviceRole.setStatus('current')
rlNbrBindingIntegrityPolicyLogBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1, 3), RlIpv6FhsSettingStatusType().clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyLogBinding.setStatus('current')
rlNbrBindingIntegrityPolicyMaxEntriesVlanLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyMaxEntriesVlanLimit.setStatus('current')
rlNbrBindingIntegrityPolicyMaxEntriesInterfaceLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyMaxEntriesInterfaceLimit.setStatus('current')
rlNbrBindingIntegrityPolicyMaxEntriesMacLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyMaxEntriesMacLimit.setStatus('current')
rlNbrBindingIntegrityPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyRowStatus.setStatus('current')
rlNbrBindingIntegrityPortPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyTable.setStatus('current')
rlNbrBindingIntegrityPortPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityPortPolicyIfIndex"), (1, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityPortPolicyName"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyEntry.setStatus('current')
rlNbrBindingIntegrityPortPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyIfIndex.setStatus('current')
rlNbrBindingIntegrityPortPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyName.setStatus('current')
rlNbrBindingIntegrityPortPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyVlan1to1024.setStatus('current')
rlNbrBindingIntegrityPortPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyVlan1025to2048.setStatus('current')
rlNbrBindingIntegrityPortPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyVlan2049to3072.setStatus('current')
rlNbrBindingIntegrityPortPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyVlan3073to4094.setStatus('current')
rlNbrBindingIntegrityPortPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPortPolicyRowStatus.setStatus('current')
rlNbrBindingIntegrityPolicyPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortTable.setStatus('current')
rlNbrBindingIntegrityPolicyPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityPolicyPortName"), (0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityPolicyPortIfIndex"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortEntry.setStatus('current')
rlNbrBindingIntegrityPolicyPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortName.setStatus('current')
rlNbrBindingIntegrityPolicyPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortIfIndex.setStatus('current')
rlNbrBindingIntegrityPolicyPortVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortVlan1to1024.setStatus('current')
rlNbrBindingIntegrityPolicyPortVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortVlan1025to2048.setStatus('current')
rlNbrBindingIntegrityPolicyPortVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortVlan2049to3072.setStatus('current')
rlNbrBindingIntegrityPolicyPortVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyPortVlan3073to4094.setStatus('current')
rlNbrBindingIntegrityVlanPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 4), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityVlanPolicyTable.setStatus('current')
rlNbrBindingIntegrityVlanPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 4, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityVlanPolicyVlanTag"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityVlanPolicyEntry.setStatus('current')
rlNbrBindingIntegrityVlanPolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: rlNbrBindingIntegrityVlanPolicyVlanTag.setStatus('current')
rlNbrBindingIntegrityVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityVlanPolicyName.setStatus('current')
rlNbrBindingIntegrityVlanPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNbrBindingIntegrityVlanPolicyRowStatus.setStatus('current')
rlNbrBindingIntegrityPolicyVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 5), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyVlanTable.setStatus('current')
rlNbrBindingIntegrityPolicyVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 5, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityPolicyVlanPolicyName"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyVlanEntry.setStatus('current')
rlNbrBindingIntegrityPolicyVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyVlanPolicyName.setStatus('current')
rlNbrBindingIntegrityPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyVlan1to1024.setStatus('current')
rlNbrBindingIntegrityPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyVlan1025to2048.setStatus('current')
rlNbrBindingIntegrityPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyVlan2049to3072.setStatus('current')
rlNbrBindingIntegrityPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityPolicyVlan3073to4094.setStatus('current')
rlNbrBindingIntegrityEnableVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 6), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityEnableVlanTable.setStatus('current')
rlNbrBindingIntegrityEnableVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 6, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityEnableVlanIndex"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityEnableVlanEntry.setStatus('current')
rlNbrBindingIntegrityEnableVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("static", 1))))
if mibBuilder.loadTexts: rlNbrBindingIntegrityEnableVlanIndex.setStatus('current')
rlNbrBindingIntegrityEnableVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityEnableVlan1to1024.setStatus('current')
rlNbrBindingIntegrityEnableVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityEnableVlan1025to2048.setStatus('current')
rlNbrBindingIntegrityEnableVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityEnableVlan2049to3072.setStatus('current')
rlNbrBindingIntegrityEnableVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityEnableVlan3073to4094.setStatus('current')
rlNbrBindingIntegrityBindingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingTable.setStatus('current')
rlNbrBindingIntegrityBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityBindingVlanTag"), (0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityBindingSourceAddressType"), (0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityBindingSourceAddress"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingEntry.setStatus('current')
rlNbrBindingIntegrityBindingVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 1), VlanId())
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingVlanTag.setStatus('current')
rlNbrBindingIntegrityBindingSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 2), InetAddressType())
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingSourceAddressType.setStatus('current')
rlNbrBindingIntegrityBindingSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingSourceAddress.setStatus('current')
rlNbrBindingIntegrityBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 4), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingIfIndex.setStatus('current')
rlNbrBindingIntegrityBindingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingMacAddress.setStatus('current')
rlNbrBindingIntegrityBindingOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("ndp", 2), ("dhcp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingOrigin.setStatus('current')
rlNbrBindingIntegrityBindingState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("valid", 0), ("tentative", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingState.setStatus('current')
rlNbrBindingIntegrityBindingExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingExpiryTime.setStatus('current')
rlNbrBindingIntegrityBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 7, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingRowStatus.setStatus('current')
rlNbrBindingIntegrityClearTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearTable.setStatus('current')
rlNbrBindingIntegrityClearEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityClearIndex"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearEntry.setStatus('current')
rlNbrBindingIntegrityClearIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("static", 1))))
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearIndex.setStatus('current')
rlNbrBindingIntegrityClearVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1, 2), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearVlanTag.setStatus('current')
rlNbrBindingIntegrityClearSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearSourceAddressType.setStatus('current')
rlNbrBindingIntegrityClearSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearSourceAddress.setStatus('current')
rlNbrBindingIntegrityClearIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1, 5), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearIfIndex.setStatus('current')
rlNbrBindingIntegrityClearMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearMacAddress.setStatus('current')
rlNbrBindingIntegrityClearRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 8, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlNbrBindingIntegrityClearRowStatus.setStatus('current')
rlNbrBindingIntegrityActivePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9), )
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyTable.setStatus('current')
rlNbrBindingIntegrityActivePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityActivePolicyIfIndex"), (0, "CISCOSB-IPV6FHS-MIB", "rlNbrBindingIntegrityActivePolicyVlanTag"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyEntry.setStatus('current')
rlNbrBindingIntegrityActivePolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyIfIndex.setStatus('current')
rlNbrBindingIntegrityActivePolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 2), VlanId())
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyVlanTag.setStatus('current')
rlNbrBindingIntegrityActivePolicyNamePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyNamePort.setStatus('current')
rlNbrBindingIntegrityActivePolicyNameVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyNameVlan.setStatus('current')
rlNbrBindingIntegrityActivePolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("perimeter", 1), ("internal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyDeviceRole.setStatus('current')
rlNbrBindingIntegrityActivePolicyDeviceRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 6), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyDeviceRoleType.setStatus('current')
rlNbrBindingIntegrityActivePolicyLogBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 7), RlIpv6FhsSettingStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyLogBinding.setStatus('current')
rlNbrBindingIntegrityActivePolicyLogBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 8), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyLogBindingType.setStatus('current')
rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimit.setStatus('current')
rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 10), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimitType.setStatus('current')
rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimit.setStatus('current')
rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 12), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimitType.setStatus('current')
rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimit.setStatus('current')
rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 14), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimitType.setStatus('current')
rlNbrBindingIntegrityActivePolicyBindingLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyBindingLifetime.setStatus('current')
rlNbrBindingIntegrityActivePolicyBindingLifetimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 9, 1, 16), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityActivePolicyBindingLifetimeType.setStatus('current')
rlNbrBindingIntegrityBindingLifetime = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityBindingLifetime.setStatus('current')
rlNbrBindingIntegrityLogBinding = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityLogBinding.setStatus('current')
rlNbrBindingIntegrityMaxEntriesVlanLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 2147483647), )).clone(-2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityMaxEntriesVlanLimit.setStatus('current')
rlNbrBindingIntegrityMaxEntriesInterfaceLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 2147483647), )).clone(-2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityMaxEntriesInterfaceLimit.setStatus('current')
rlNbrBindingIntegrityMaxEntriesMacLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 2147483647), )).clone(-2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlNbrBindingIntegrityMaxEntriesMacLimit.setStatus('current')
rlNbrBindingIntegrityEntriesNum = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 4, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlNbrBindingIntegrityEntriesNum.setStatus('current')
rlNbrBindingIntegrityEntryAddedTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 230)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityEntryAddedTrap.setStatus('current')
rlNbrBindingIntegrityEntryStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 231)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityEntryStateChangeTrap.setStatus('current')
rlNbrBindingIntegrityEntryAnchorChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 232)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityEntryAnchorChangeTrap.setStatus('current')
rlNbrBindingIntegrityEntryDeletedTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 233)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityEntryDeletedTrap.setStatus('current')
rlNbrBindingIntegrityEntryLimitReachTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 234)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityEntryLimitReachTrap.setStatus('current')
rlNbrBindingIntegrityOverflowTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 235)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlNbrBindingIntegrityOverflowTrap.setStatus('current')
rlDhcpGuardPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1), )
if mibBuilder.loadTexts: rlDhcpGuardPolicyTable.setStatus('current')
rlDhcpGuardPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardPolicyName"))
if mibBuilder.loadTexts: rlDhcpGuardPolicyEntry.setStatus('current')
rlDhcpGuardPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlDhcpGuardPolicyName.setStatus('current')
rlDhcpGuardPolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("unspecified", -1), ("client", 1), ("server", 2))).clone('unspecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyDeviceRole.setStatus('current')
rlDhcpGuardPolicyMatchServerAddrSpecified = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyMatchServerAddrSpecified.setStatus('current')
rlDhcpGuardPolicyMatchServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyMatchServerAddr.setStatus('current')
rlDhcpGuardPolicyMatchReplyAddrSpecified = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyMatchReplyAddrSpecified.setStatus('current')
rlDhcpGuardPolicyMatchReplyAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyMatchReplyAddr.setStatus('current')
rlDhcpGuardPolicyPrefMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyPrefMin.setStatus('current')
rlDhcpGuardPolicyPrefMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyPrefMax.setStatus('current')
rlDhcpGuardPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpGuardPolicyRowStatus.setStatus('current')
rlDhcpGuardPortPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2), )
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyTable.setStatus('current')
rlDhcpGuardPortPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardPortPolicyIfIndex"), (1, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardPortPolicyName"))
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyEntry.setStatus('current')
rlDhcpGuardPortPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyIfIndex.setStatus('current')
rlDhcpGuardPortPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyName.setStatus('current')
rlDhcpGuardPortPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyVlan1to1024.setStatus('current')
rlDhcpGuardPortPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyVlan1025to2048.setStatus('current')
rlDhcpGuardPortPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyVlan2049to3072.setStatus('current')
rlDhcpGuardPortPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyVlan3073to4094.setStatus('current')
rlDhcpGuardPortPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpGuardPortPolicyRowStatus.setStatus('current')
rlDhcpGuardPolicyPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3), )
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortTable.setStatus('current')
rlDhcpGuardPolicyPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardPolicyPortName"), (0, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardPolicyPortIfIndex"))
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortEntry.setStatus('current')
rlDhcpGuardPolicyPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortName.setStatus('current')
rlDhcpGuardPolicyPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortIfIndex.setStatus('current')
rlDhcpGuardPolicyPortVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortVlan1to1024.setStatus('current')
rlDhcpGuardPolicyPortVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortVlan1025to2048.setStatus('current')
rlDhcpGuardPolicyPortVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortVlan2049to3072.setStatus('current')
rlDhcpGuardPolicyPortVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardPolicyPortVlan3073to4094.setStatus('current')
rlDhcpGuardVlanPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 4), )
if mibBuilder.loadTexts: rlDhcpGuardVlanPolicyTable.setStatus('current')
rlDhcpGuardVlanPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 4, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardVlanPolicyVlanTag"))
if mibBuilder.loadTexts: rlDhcpGuardVlanPolicyEntry.setStatus('current')
rlDhcpGuardVlanPolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: rlDhcpGuardVlanPolicyVlanTag.setStatus('current')
rlDhcpGuardVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardVlanPolicyName.setStatus('current')
rlDhcpGuardVlanPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpGuardVlanPolicyRowStatus.setStatus('current')
rlDhcpGuardPolicyVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 5), )
if mibBuilder.loadTexts: rlDhcpGuardPolicyVlanTable.setStatus('current')
rlDhcpGuardPolicyVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 5, 1), ).setIndexNames((1, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardPolicyVlanPolicyName"))
if mibBuilder.loadTexts: rlDhcpGuardPolicyVlanEntry.setStatus('current')
rlDhcpGuardPolicyVlanPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlDhcpGuardPolicyVlanPolicyName.setStatus('current')
rlDhcpGuardPolicyVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyVlan1to1024.setStatus('current')
rlDhcpGuardPolicyVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyVlan1025to2048.setStatus('current')
rlDhcpGuardPolicyVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyVlan2049to3072.setStatus('current')
rlDhcpGuardPolicyVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPolicyVlan3073to4094.setStatus('current')
rlDhcpGuardEnableVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 6), )
if mibBuilder.loadTexts: rlDhcpGuardEnableVlanTable.setStatus('current')
rlDhcpGuardEnableVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 6, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardEnableVlanIndex"))
if mibBuilder.loadTexts: rlDhcpGuardEnableVlanEntry.setStatus('current')
rlDhcpGuardEnableVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("static", 1))))
if mibBuilder.loadTexts: rlDhcpGuardEnableVlanIndex.setStatus('current')
rlDhcpGuardEnableVlan1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardEnableVlan1to1024.setStatus('current')
rlDhcpGuardEnableVlan1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardEnableVlan1025to2048.setStatus('current')
rlDhcpGuardEnableVlan2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardEnableVlan2049to3072.setStatus('current')
rlDhcpGuardEnableVlan3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardEnableVlan3073to4094.setStatus('current')
rlDhcpGuardActivePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7), )
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyTable.setStatus('current')
rlDhcpGuardActivePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1), ).setIndexNames((0, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardActivePolicyIfIndex"), (0, "CISCOSB-IPV6FHS-MIB", "rlDhcpGuardActivePolicyVlanTag"))
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyEntry.setStatus('current')
rlDhcpGuardActivePolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyIfIndex.setStatus('current')
rlDhcpGuardActivePolicyVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 2), VlanId())
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyVlanTag.setStatus('current')
rlDhcpGuardActivePolicyNamePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyNamePort.setStatus('current')
rlDhcpGuardActivePolicyNameVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyNameVlan.setStatus('current')
rlDhcpGuardActivePolicyDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyDeviceRole.setStatus('current')
rlDhcpGuardActivePolicyDeviceRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 6), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyDeviceRoleType.setStatus('current')
rlDhcpGuardActivePolicyMatchServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyMatchServerAddr.setStatus('current')
rlDhcpGuardActivePolicyMatchServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 8), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyMatchServerAddrType.setStatus('current')
rlDhcpGuardActivePolicyMatchReplyAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyMatchReplyAddr.setStatus('current')
rlDhcpGuardActivePolicyMatchReplyAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 10), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyMatchReplyAddrType.setStatus('current')
rlDhcpGuardActivePolicyPrefMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyPrefMin.setStatus('current')
rlDhcpGuardActivePolicyPrefMinType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 12), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyPrefMinType.setStatus('current')
rlDhcpGuardActivePolicyPrefMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyPrefMax.setStatus('current')
rlDhcpGuardActivePolicyPrefMaxType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 7, 1, 14), RlIpv6FhsSettingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpGuardActivePolicyPrefMaxType.setStatus('current')
rlDhcpGuardPrefMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 255), )).clone(-2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPrefMin.setStatus('current')
rlDhcpGuardPrefMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 215, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2, -2), ValueRangeConstraint(0, 255), )).clone(-2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpGuardPrefMax.setStatus('current')
rlDhcpGuardMessageDropTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 236)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlDhcpGuardMessageDropTrap.setStatus('current')
rlSrcGuardMessageDropTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 237)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlSrcGuardMessageDropTrap.setStatus('current')
mibBuilder.exportSymbols("CISCOSB-IPV6FHS-MIB", rlRaGuardActivePolicyRouterPrefMin=rlRaGuardActivePolicyRouterPrefMin, rlRaGuardRouterPrefMax=rlRaGuardRouterPrefMax, rlRaGuardActivePolicyHopLimitMin=rlRaGuardActivePolicyHopLimitMin, rlRaGuardVlanPolicyEntry=rlRaGuardVlanPolicyEntry, rlDhcpGuardPolicyPrefMin=rlDhcpGuardPolicyPrefMin, rlFirstHopSecCountersDropDhcpGuardUnauthorizedSourceAddress=rlFirstHopSecCountersDropDhcpGuardUnauthorizedSourceAddress, rlNbrBindingIntegrityEnableVlanTable=rlNbrBindingIntegrityEnableVlanTable, rlDhcpGuardPolicyName=rlDhcpGuardPolicyName, rlNdInspectionActivePolicySecLevelMinType=rlNdInspectionActivePolicySecLevelMinType, rlNdInspectionPortPolicyTable=rlNdInspectionPortPolicyTable, rlRaGuardEnableVlan1025to2048=rlRaGuardEnableVlan1025to2048, rlFirstHopSecPolicyPortVlan1to1024=rlFirstHopSecPolicyPortVlan1to1024, rlDhcpGuardVlanPolicyName=rlDhcpGuardVlanPolicyName, rlDhcpGuardPortPolicyName=rlDhcpGuardPortPolicyName, rlNdInspectionVlanPolicyName=rlNdInspectionVlanPolicyName, rlNdInspectionActivePolicyValidateSrcMacType=rlNdInspectionActivePolicyValidateSrcMacType, rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimitType=rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimitType, rlFirstHopSecCountersRxNdpNS=rlFirstHopSecCountersRxNdpNS, rlNbrBindingIntegrityPolicyName=rlNbrBindingIntegrityPolicyName, rlNdInspectionMessageDropTrap=rlNdInspectionMessageDropTrap, rlFirstHopSecCountersDropNdInspectionUnauthorizedSecLevel=rlFirstHopSecCountersDropNdInspectionUnauthorizedSecLevel, rlNdInspectionEnableVlanTable=rlNdInspectionEnableVlanTable, rlDhcpGuardActivePolicyMatchServerAddrType=rlDhcpGuardActivePolicyMatchServerAddrType, rlFirstHopSecEnableVlanTable=rlFirstHopSecEnableVlanTable, rlFirstHopSecCountersDropNbrBindingIntegrityIllegalIcmpv6=rlFirstHopSecCountersDropNbrBindingIntegrityIllegalIcmpv6, rlNdInspectionPortPolicyRowStatus=rlNdInspectionPortPolicyRowStatus, rlFirstHopSecPolicyRowStatus=rlFirstHopSecPolicyRowStatus, rlRaGuardActivePolicyRouterPrefMinType=rlRaGuardActivePolicyRouterPrefMinType, rlDhcpGuardPortPolicyIfIndex=rlDhcpGuardPortPolicyIfIndex, rlFirstHopSecPolicyVlan1to1024=rlFirstHopSecPolicyVlan1to1024, rlNdInspectionPortPolicyName=rlNdInspectionPortPolicyName, rlNbrBindingIntegrityBindingSourceAddressType=rlNbrBindingIntegrityBindingSourceAddressType, rlIpv6Fhs=rlIpv6Fhs, rlDhcpGuardActivePolicyEntry=rlDhcpGuardActivePolicyEntry, rlNdInspectionActivePolicyDeviceRoleType=rlNdInspectionActivePolicyDeviceRoleType, rlNbrBindingIntegrityPortPolicyVlan1025to2048=rlNbrBindingIntegrityPortPolicyVlan1025to2048, rlNbrBindingIntegrityClearIndex=rlNbrBindingIntegrityClearIndex, rlNbrBindingIntegrityPolicyVlanEntry=rlNbrBindingIntegrityPolicyVlanEntry, rlRaGuardActivePolicyHopLimitMax=rlRaGuardActivePolicyHopLimitMax, rlFirstHopSecEnableVlan1025to2048=rlFirstHopSecEnableVlan1025to2048, rlFirstHopSecCountersRxNdpRedirect=rlFirstHopSecCountersRxNdpRedirect, rlFirstHopSecCountersDropRaGuardUnauthorizedAdvertisedPrefix=rlFirstHopSecCountersDropRaGuardUnauthorizedAdvertisedPrefix, rlDhcpGuardPortPolicyVlan1025to2048=rlDhcpGuardPortPolicyVlan1025to2048, rlNbrBindingIntegrityActivePolicyLogBinding=rlNbrBindingIntegrityActivePolicyLogBinding, rlNbrBindingIntegrityEntryAddedTrap=rlNbrBindingIntegrityEntryAddedTrap, rlFirstHopSecCountersDropNdpNS=rlFirstHopSecCountersDropNdpNS, rlDhcpGuardPortPolicyEntry=rlDhcpGuardPortPolicyEntry, rlNdInspectionPolicyVlanEntry=rlNdInspectionPolicyVlanEntry, rlNbrBindingIntegrityActivePolicyIfIndex=rlNbrBindingIntegrityActivePolicyIfIndex, rlDhcpGuardPortPolicyRowStatus=rlDhcpGuardPortPolicyRowStatus, rlRaGuardPolicyMatchRaPrefixesSpecified=rlRaGuardPolicyMatchRaPrefixesSpecified, rlDhcpGuardActivePolicyMatchReplyAddr=rlDhcpGuardActivePolicyMatchReplyAddr, rlFirstHopSecPortPolicyVlan3073to4094=rlFirstHopSecPortPolicyVlan3073to4094, rlFirstHopSecCountersDropRaGuardUnauthorizedHopLimit=rlFirstHopSecCountersDropRaGuardUnauthorizedHopLimit, rlRaGuardPolicyVlan1to1024=rlRaGuardPolicyVlan1to1024, rlFirstHopSecPolicyPortVlan2049to3072=rlFirstHopSecPolicyPortVlan2049to3072, rlFirstHopSecCountersDropNdInspectionUnsecureMessage=rlFirstHopSecCountersDropNdInspectionUnsecureMessage, rlRaGuardPortPolicyVlan1to1024=rlRaGuardPortPolicyVlan1to1024, rlRaGuardPolicyPortVlan3073to4094=rlRaGuardPolicyPortVlan3073to4094, rlNbrBindingIntegrityEnableVlan1to1024=rlNbrBindingIntegrityEnableVlan1to1024, rlFirstHopSecActivePolicyNamePort=rlFirstHopSecActivePolicyNamePort, rlNbrBindingIntegrityMaxEntriesInterfaceLimit=rlNbrBindingIntegrityMaxEntriesInterfaceLimit, rlNbrBindingIntegrityClearSourceAddress=rlNbrBindingIntegrityClearSourceAddress, rlRaGuardPortPolicyName=rlRaGuardPortPolicyName, rlFirstHopSecCountersDropNdInspectionInvalidSourceMac=rlFirstHopSecCountersDropNdInspectionInvalidSourceMac, rlFirstHopSecCountersDropDhcpReply=rlFirstHopSecCountersDropDhcpReply, rlRaGuardPolicyRouterPrefMax=rlRaGuardPolicyRouterPrefMax, rlNdInspectionPolicySecLevelMin=rlNdInspectionPolicySecLevelMin, rlFirstHopSecPortPolicyName=rlFirstHopSecPortPolicyName, rlNdInspectionSecLevelMin=rlNdInspectionSecLevelMin, rlDhcpGuardPolicyPrefMax=rlDhcpGuardPolicyPrefMax, rlNbrBindingIntegrityBindingState=rlNbrBindingIntegrityBindingState, rlNdInspectionPolicyVlan3073to4094=rlNdInspectionPolicyVlan3073to4094, rlDhcpGuardPolicyVlan1to1024=rlDhcpGuardPolicyVlan1to1024, rlFirstHopSecCountersRxDhcpRelayReply=rlFirstHopSecCountersRxDhcpRelayReply, rlFirstHopSecVlanPolicyRowStatus=rlFirstHopSecVlanPolicyRowStatus, rlFirstHopSecCountersIfIndex=rlFirstHopSecCountersIfIndex, rlDhcpGuard=rlDhcpGuard, rlDhcpGuardActivePolicyPrefMin=rlDhcpGuardActivePolicyPrefMin, rlDhcpGuardEnableVlan3073to4094=rlDhcpGuardEnableVlan3073to4094, rlNdInspectionPolicyVlan2049to3072=rlNdInspectionPolicyVlan2049to3072, rlNbrBindingIntegrityPortPolicyVlan2049to3072=rlNbrBindingIntegrityPortPolicyVlan2049to3072, rlRaGuardPolicyOtherConfigFlag=rlRaGuardPolicyOtherConfigFlag, rlNbrBindingIntegrityEnableVlan3073to4094=rlNbrBindingIntegrityEnableVlan3073to4094, rlFirstHopSecVlanPolicyTable=rlFirstHopSecVlanPolicyTable, rlRaGuardPolicyVlanEntry=rlRaGuardPolicyVlanEntry, rlFirstHopSecPolicyEntry=rlFirstHopSecPolicyEntry, rlDhcpGuardPortPolicyVlan2049to3072=rlDhcpGuardPortPolicyVlan2049to3072, rlRaGuardPolicyEntry=rlRaGuardPolicyEntry, rlDhcpGuardPortPolicyTable=rlDhcpGuardPortPolicyTable, rlFirstHopSecCountersDropNdpRedirect=rlFirstHopSecCountersDropNdpRedirect, rlDhcpGuardPolicyPortEntry=rlDhcpGuardPolicyPortEntry, rlNbrBindingIntegrityVlanPolicyTable=rlNbrBindingIntegrityVlanPolicyTable, rlNbrBindingIntegrityBindingRowStatus=rlNbrBindingIntegrityBindingRowStatus, rlNbrBindingIntegrityPolicyPortVlan1to1024=rlNbrBindingIntegrityPolicyPortVlan1to1024, rlNbrBindingIntegrityClearMacAddress=rlNbrBindingIntegrityClearMacAddress, rlNbrBindingIntegrityPolicyMaxEntriesInterfaceLimit=rlNbrBindingIntegrityPolicyMaxEntriesInterfaceLimit, rlRaGuardVlanPolicyTable=rlRaGuardVlanPolicyTable, rlFirstHopSecPolicyPortVlan3073to4094=rlFirstHopSecPolicyPortVlan3073to4094, rlFirstHopSecClearCounters=rlFirstHopSecClearCounters, rlDhcpGuardPolicyVlanTable=rlDhcpGuardPolicyVlanTable, rlRaGuardPolicyMatchRaPrefixes=rlRaGuardPolicyMatchRaPrefixes, rlDhcpGuardActivePolicyPrefMinType=rlDhcpGuardActivePolicyPrefMinType, rlDhcpGuardActivePolicyTable=rlDhcpGuardActivePolicyTable, rlNbrBindingIntegrityPolicyPortVlan2049to3072=rlNbrBindingIntegrityPolicyPortVlan2049to3072, rlNbrBindingIntegrityBindingLifetime=rlNbrBindingIntegrityBindingLifetime, rlFirstHopSecPolicyPortName=rlFirstHopSecPolicyPortName, RlIpv6FhsSettingType=RlIpv6FhsSettingType, rlNbrBindingIntegrityPolicyPortEntry=rlNbrBindingIntegrityPolicyPortEntry, rlNdInspectionPortPolicyVlan1025to2048=rlNdInspectionPortPolicyVlan1025to2048, rlDhcpGuardActivePolicyPrefMaxType=rlDhcpGuardActivePolicyPrefMaxType, rlDhcpGuardPolicyPortTable=rlDhcpGuardPolicyPortTable, rlFirstHopSecCountersDropRaGuardUnauthorizedSourceAddress=rlFirstHopSecCountersDropRaGuardUnauthorizedSourceAddress, rlNbrBindingIntegrityActivePolicyEntry=rlNbrBindingIntegrityActivePolicyEntry, rlRaGuardPortPolicyEntry=rlRaGuardPortPolicyEntry, rlNbrBindingIntegrityPolicyRowStatus=rlNbrBindingIntegrityPolicyRowStatus, rlDhcpGuardActivePolicyDeviceRole=rlDhcpGuardActivePolicyDeviceRole, rlNdInspectionActivePolicyNamePort=rlNdInspectionActivePolicyNamePort, rlNbrBindingIntegrityPolicyTable=rlNbrBindingIntegrityPolicyTable, rlNbrBindingIntegrityActivePolicyDeviceRoleType=rlNbrBindingIntegrityActivePolicyDeviceRoleType, rlNdInspectionPolicyVlan1to1024=rlNdInspectionPolicyVlan1to1024, rlFirstHopSecEnableVlanIndex=rlFirstHopSecEnableVlanIndex, rlNbrBindingIntegrityPolicyLogBinding=rlNbrBindingIntegrityPolicyLogBinding, rlNdInspectionEnableVlanEntry=rlNdInspectionEnableVlanEntry, rlNdInspectionVlanPolicyEntry=rlNdInspectionVlanPolicyEntry, rlFirstHopSec=rlFirstHopSec, rlNbrBindingIntegrityActivePolicyNameVlan=rlNbrBindingIntegrityActivePolicyNameVlan, rlRaGuardEnableVlanTable=rlRaGuardEnableVlanTable, rlFirstHopSecCountersDropDhcpLeasequeryReply=rlFirstHopSecCountersDropDhcpLeasequeryReply, rlDhcpGuardActivePolicyNameVlan=rlDhcpGuardActivePolicyNameVlan, rlFirstHopSecPolicyPortTable=rlFirstHopSecPolicyPortTable, rlRaGuardActivePolicyOtherConfigFlagType=rlRaGuardActivePolicyOtherConfigFlagType, rlFirstHopSecCountersDropNdpRA=rlFirstHopSecCountersDropNdpRA, rlNdInspectionPolicyPortEntry=rlNdInspectionPolicyPortEntry, rlDhcpGuardActivePolicyMatchServerAddr=rlDhcpGuardActivePolicyMatchServerAddr, rlRaGuardEnableVlan2049to3072=rlRaGuardEnableVlan2049to3072, rlNbrBindingIntegrityBindingTable=rlNbrBindingIntegrityBindingTable, rlNdInspectionPolicyTable=rlNdInspectionPolicyTable, rlFirstHopSecPolicyVlanEntry=rlFirstHopSecPolicyVlanEntry, rlNdInspectionPolicyRowStatus=rlNdInspectionPolicyRowStatus, rlNbrBindingIntegrityVlanPolicyEntry=rlNbrBindingIntegrityVlanPolicyEntry, rlNdInspectionPolicyVlanTable=rlNdInspectionPolicyVlanTable, rlRaGuardPolicyPortVlan1to1024=rlRaGuardPolicyPortVlan1to1024, rlRaGuardEnableVlanIndex=rlRaGuardEnableVlanIndex, rlFirstHopSecPortPolicyVlan2049to3072=rlFirstHopSecPortPolicyVlan2049to3072, rlNbrBindingIntegrityEntryAnchorChangeTrap=rlNbrBindingIntegrityEntryAnchorChangeTrap, rlRaGuardPolicyVlanTable=rlRaGuardPolicyVlanTable, rlDhcpGuardEnableVlan1to1024=rlDhcpGuardEnableVlan1to1024, rlRaGuardVlanPolicyRowStatus=rlRaGuardVlanPolicyRowStatus, rlNdInspectionPolicyEntry=rlNdInspectionPolicyEntry, rlNbrBindingIntegrityPolicyPortVlan1025to2048=rlNbrBindingIntegrityPolicyPortVlan1025to2048, rlNbrBindingIntegrityBindingEntry=rlNbrBindingIntegrityBindingEntry, rlFirstHopSecCountersRxDhcpReconfigure=rlFirstHopSecCountersRxDhcpReconfigure, rlDhcpGuardPolicyVlan3073to4094=rlDhcpGuardPolicyVlan3073to4094, rlFirstHopSecPortPolicyEntry=rlFirstHopSecPortPolicyEntry, rlFirstHopSecPolicyTable=rlFirstHopSecPolicyTable, rlFirstHopSecCountersDropDhcpGuardUnauthorizedAssignedAddress=rlFirstHopSecCountersDropDhcpGuardUnauthorizedAssignedAddress, rlNbrBindingIntegrityPortPolicyEntry=rlNbrBindingIntegrityPortPolicyEntry, rlRaGuardPolicyMatchRaAddr=rlRaGuardPolicyMatchRaAddr, rlRaGuardActivePolicyManagedConfigFlag=rlRaGuardActivePolicyManagedConfigFlag, rlFirstHopSecCountersRxDhcpAdverise=rlFirstHopSecCountersRxDhcpAdverise, rlNdInspectionPolicyDropUnsecured=rlNdInspectionPolicyDropUnsecured, rlNdInspectionEnableVlan3073to4094=rlNdInspectionEnableVlan3073to4094, rlNbrBindingIntegrityMaxEntriesMacLimit=rlNbrBindingIntegrityMaxEntriesMacLimit, rlNdInspectionEnableVlan1to1024=rlNdInspectionEnableVlan1to1024, rlRaGuardActivePolicyMatchRaPrefixesType=rlRaGuardActivePolicyMatchRaPrefixesType, rlDhcpGuardActivePolicyDeviceRoleType=rlDhcpGuardActivePolicyDeviceRoleType, rlFirstHopSecActivePolicyVlanTag=rlFirstHopSecActivePolicyVlanTag, rlFirstHopSecCountersDropSourceGuardNoBinding=rlFirstHopSecCountersDropSourceGuardNoBinding, rlRaGuardPolicyRouterPrefMin=rlRaGuardPolicyRouterPrefMin, rlNbrBindingIntegrityPolicyMaxEntriesVlanLimit=rlNbrBindingIntegrityPolicyMaxEntriesVlanLimit, rlNdInspectionPolicyVlanPolicyName=rlNdInspectionPolicyVlanPolicyName, rlNbrBindingIntegrityEntryDeletedTrap=rlNbrBindingIntegrityEntryDeletedTrap, rlNdInspectionActivePolicyNameVlan=rlNdInspectionActivePolicyNameVlan, rlRaGuardPolicyPortTable=rlRaGuardPolicyPortTable, rlNbrBindingIntegrityMaxEntriesVlanLimit=rlNbrBindingIntegrityMaxEntriesVlanLimit, rlNdInspectionActivePolicyEntry=rlNdInspectionActivePolicyEntry, rlNdInspectionPolicyPortIfIndex=rlNdInspectionPolicyPortIfIndex, rlNbrBindingIntegrityEnableVlan1025to2048=rlNbrBindingIntegrityEnableVlan1025to2048, rlFirstHopSecActivePolicyIfIndex=rlFirstHopSecActivePolicyIfIndex, rlFirstHopSecCountersDropRaGuardUnauthorizedRouterPreference=rlFirstHopSecCountersDropRaGuardUnauthorizedRouterPreference, rlFirstHopSecLogDrop=rlFirstHopSecLogDrop, rlDhcpGuardPolicyMatchServerAddr=rlDhcpGuardPolicyMatchServerAddr, rlDhcpGuardPolicyVlanPolicyName=rlDhcpGuardPolicyVlanPolicyName, rlNbrBindingIntegrityActivePolicyBindingLifetime=rlNbrBindingIntegrityActivePolicyBindingLifetime, rlDhcpGuardPolicyEntry=rlDhcpGuardPolicyEntry, rlFirstHopSecCountersDropNdpRS=rlFirstHopSecCountersDropNdpRS, rlFirstHopSecPolicyName=rlFirstHopSecPolicyName, rlRaGuardPolicyPortIfIndex=rlRaGuardPolicyPortIfIndex, rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimitType=rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimitType, rlRaGuardPolicyPortVlan1025to2048=rlRaGuardPolicyPortVlan1025to2048, rlFirstHopSecCountersRxNdpRS=rlFirstHopSecCountersRxNdpRS, rlNbrBindingIntegrityPortPolicyRowStatus=rlNbrBindingIntegrityPortPolicyRowStatus, rlRaGuardActivePolicyRouterPrefMax=rlRaGuardActivePolicyRouterPrefMax, rlDhcpGuardEnableVlan1025to2048=rlDhcpGuardEnableVlan1025to2048, rlFirstHopSecPolicyVlan3073to4094=rlFirstHopSecPolicyVlan3073to4094, rlRaGuardPolicyHopLimitMin=rlRaGuardPolicyHopLimitMin, rlNbrBindingIntegrityPolicyDeviceRole=rlNbrBindingIntegrityPolicyDeviceRole, rlNbrBindingIntegrityVlanPolicyVlanTag=rlNbrBindingIntegrityVlanPolicyVlanTag, rlDhcpGuardEnableVlanEntry=rlDhcpGuardEnableVlanEntry, rlNdInspectionPolicyPortVlan1025to2048=rlNdInspectionPolicyPortVlan1025to2048, rlNbrBindingIntegrityPolicyPortIfIndex=rlNbrBindingIntegrityPolicyPortIfIndex, rlDhcpGuardPolicyVlan1025to2048=rlDhcpGuardPolicyVlan1025to2048, rlRaGuardPolicyPortVlan2049to3072=rlRaGuardPolicyPortVlan2049to3072, rlNbrBindingIntegrityClearEntry=rlNbrBindingIntegrityClearEntry, rlDhcpGuardPolicyVlan2049to3072=rlDhcpGuardPolicyVlan2049to3072, rlDhcpGuardPortPolicyVlan1to1024=rlDhcpGuardPortPolicyVlan1to1024, rlRaGuardPolicyRowStatus=rlRaGuardPolicyRowStatus, rlNbrBindingIntegrityPortPolicyName=rlNbrBindingIntegrityPortPolicyName, rlFirstHopSecEnableVlan3073to4094=rlFirstHopSecEnableVlan3073to4094, rlDhcpGuardActivePolicyMatchReplyAddrType=rlDhcpGuardActivePolicyMatchReplyAddrType, rlDhcpGuardPolicyRowStatus=rlDhcpGuardPolicyRowStatus, rlFirstHopSecPolicyPortEntry=rlFirstHopSecPolicyPortEntry, rlSrcGuardMessageDropTrap=rlSrcGuardMessageDropTrap, rlRaGuardVlanPolicyName=rlRaGuardVlanPolicyName, rlNdInspectionPolicyVlan1025to2048=rlNdInspectionPolicyVlan1025to2048, rlFirstHopSecPortPolicyRowStatus=rlFirstHopSecPortPolicyRowStatus, PYSNMP_MODULE_ID=rlIpv6Fhs, rlNdInspectionEnableVlan1025to2048=rlNdInspectionEnableVlan1025to2048, rlRaGuardPolicyVlan2049to3072=rlRaGuardPolicyVlan2049to3072, rlFirstHopSecPortPolicyIfIndex=rlFirstHopSecPortPolicyIfIndex, rlFirstHopSecCountersDropRaGuardUnauthorizedManagedConfigFlag=rlFirstHopSecCountersDropRaGuardUnauthorizedManagedConfigFlag, rlNdInspectionActivePolicyIfIndex=rlNdInspectionActivePolicyIfIndex, rlRaGuardActivePolicyRouterPrefMaxType=rlRaGuardActivePolicyRouterPrefMaxType, rlRaGuardActivePolicyNameVlan=rlRaGuardActivePolicyNameVlan, rlDhcpGuardPolicyPortVlan2049to3072=rlDhcpGuardPolicyPortVlan2049to3072, rlRaGuardActivePolicyManagedConfigFlagType=rlRaGuardActivePolicyManagedConfigFlagType, rlNbrBindingIntegrityActivePolicyTable=rlNbrBindingIntegrityActivePolicyTable, rlFirstHopSecPortPolicyVlan1025to2048=rlFirstHopSecPortPolicyVlan1025to2048, rlDhcpGuardPolicyPortVlan1to1024=rlDhcpGuardPolicyPortVlan1to1024, rlDhcpGuardPolicyPortVlan3073to4094=rlDhcpGuardPolicyPortVlan3073to4094, rlRaGuardHopLimitMin=rlRaGuardHopLimitMin, rlRaGuardPolicyVlan1025to2048=rlRaGuardPolicyVlan1025to2048, rlFirstHopSecCountersDropNdpNA=rlFirstHopSecCountersDropNdpNA, rlNdInspectionPortPolicyVlan2049to3072=rlNdInspectionPortPolicyVlan2049to3072, RlIpv6FhsSettingStatusType=RlIpv6FhsSettingStatusType, rlDhcpGuardEnableVlan2049to3072=rlDhcpGuardEnableVlan2049to3072, rlDhcpGuardPrefMin=rlDhcpGuardPrefMin, rlNdInspection=rlNdInspection, rlFirstHopSecCountersDropDhcpGuardUnauthorizedServerPreference=rlFirstHopSecCountersDropDhcpGuardUnauthorizedServerPreference, rlFirstHopSecPolicyVlanTable=rlFirstHopSecPolicyVlanTable, rlNdInspectionActivePolicyDropUnsecuredType=rlNdInspectionActivePolicyDropUnsecuredType, rlFirstHopSecCountersRxNdpNA=rlFirstHopSecCountersRxNdpNA, rlRaGuardPortPolicyRowStatus=rlRaGuardPortPolicyRowStatus, rlNbrBindingIntegrityBindingVlanTag=rlNbrBindingIntegrityBindingVlanTag, rlNdInspectionActivePolicyDropUnsecured=rlNdInspectionActivePolicyDropUnsecured, rlNbrBindingIntegrityPortPolicyIfIndex=rlNbrBindingIntegrityPortPolicyIfIndex, rlNbrBindingIntegrityPolicyVlanPolicyName=rlNbrBindingIntegrityPolicyVlanPolicyName, rlNdInspectionEnableVlan2049to3072=rlNdInspectionEnableVlan2049to3072, rlNbrBindingIntegrityActivePolicyNamePort=rlNbrBindingIntegrityActivePolicyNamePort, rlNbrBindingIntegrityPolicyEntry=rlNbrBindingIntegrityPolicyEntry, rlDhcpGuardPolicyPortName=rlDhcpGuardPolicyPortName, rlRaGuardActivePolicyDeviceRoleType=rlRaGuardActivePolicyDeviceRoleType, rlFirstHopSecCountersEntry=rlFirstHopSecCountersEntry)
mibBuilder.exportSymbols("CISCOSB-IPV6FHS-MIB", rlRaGuardOtherConfigFlag=rlRaGuardOtherConfigFlag, rlNbrBindingIntegrityClearIfIndex=rlNbrBindingIntegrityClearIfIndex, rlNdInspectionPortPolicyVlan3073to4094=rlNdInspectionPortPolicyVlan3073to4094, rlNbrBindingIntegrityLogBinding=rlNbrBindingIntegrityLogBinding, rlDhcpGuardPolicyMatchReplyAddrSpecified=rlDhcpGuardPolicyMatchReplyAddrSpecified, rlFirstHopSecEnableVlanEntry=rlFirstHopSecEnableVlanEntry, rlNbrBindingIntegrityEntryStateChangeTrap=rlNbrBindingIntegrityEntryStateChangeTrap, rlNdInspectionPolicyPortVlan1to1024=rlNdInspectionPolicyPortVlan1to1024, rlNbrBindingIntegrityPolicyMaxEntriesMacLimit=rlNbrBindingIntegrityPolicyMaxEntriesMacLimit, rlRaGuardPortPolicyVlan3073to4094=rlRaGuardPortPolicyVlan3073to4094, rlDhcpGuardVlanPolicyTable=rlDhcpGuardVlanPolicyTable, rlRaGuardManagedConfigFlag=rlRaGuardManagedConfigFlag, rlNbrBindingIntegrityOverflowTrap=rlNbrBindingIntegrityOverflowTrap, rlFirstHopSecPolicyVlanPolicyName=rlFirstHopSecPolicyVlanPolicyName, rlNdInspectionPortPolicyIfIndex=rlNdInspectionPortPolicyIfIndex, rlFirstHopSecActivePolicyLogDropType=rlFirstHopSecActivePolicyLogDropType, rlNbrBindingIntegrityClearSourceAddressType=rlNbrBindingIntegrityClearSourceAddressType, rlFirstHopSecCountersRxDhcpLeasequeryReply=rlFirstHopSecCountersRxDhcpLeasequeryReply, rlFirstHopSecPolicyPortVlan1025to2048=rlFirstHopSecPolicyPortVlan1025to2048, rlRaGuardPolicyMatchRaAddrSpecified=rlRaGuardPolicyMatchRaAddrSpecified, rlFirstHopSecActivePolicyLogDrop=rlFirstHopSecActivePolicyLogDrop, rlFirstHopSecCountersRxNdpRA=rlFirstHopSecCountersRxNdpRA, rlFirstHopSecActivePolicyEntry=rlFirstHopSecActivePolicyEntry, rlFirstHopSecPolicyVlan1025to2048=rlFirstHopSecPolicyVlan1025to2048, rlNbrBindingIntegrityVlanPolicyRowStatus=rlNbrBindingIntegrityVlanPolicyRowStatus, rlRaGuardEnableVlan3073to4094=rlRaGuardEnableVlan3073to4094, rlFirstHopSecCountersDropDhcpRelayReply=rlFirstHopSecCountersDropDhcpRelayReply, rlFirstHopSecEnableVlan1to1024=rlFirstHopSecEnableVlan1to1024, rlRaGuardPolicyTable=rlRaGuardPolicyTable, rlNdInspectionPolicyName=rlNdInspectionPolicyName, rlNbrBindingIntegrityPolicyVlan2049to3072=rlNbrBindingIntegrityPolicyVlan2049to3072, rlNbrBindingIntegrity=rlNbrBindingIntegrity, rlRaGuardMessageDropTrap=rlRaGuardMessageDropTrap, rlFirstHopSecCountersDropRaGuardUnauthorizedOtherConfigFlag=rlFirstHopSecCountersDropRaGuardUnauthorizedOtherConfigFlag, rlFirstHopSecCountersRxDhcpReply=rlFirstHopSecCountersRxDhcpReply, rlDhcpGuardPolicyDeviceRole=rlDhcpGuardPolicyDeviceRole, rlRaGuardPolicyManagedConfigFlag=rlRaGuardPolicyManagedConfigFlag, rlNbrBindingIntegrityPolicyPortName=rlNbrBindingIntegrityPolicyPortName, rlRaGuardPortPolicyIfIndex=rlRaGuardPortPolicyIfIndex, rlNdInspectionPortPolicyVlan1to1024=rlNdInspectionPortPolicyVlan1to1024, rlDhcpGuardEnableVlanIndex=rlDhcpGuardEnableVlanIndex, rlDhcpGuardActivePolicyVlanTag=rlDhcpGuardActivePolicyVlanTag, rlNdInspectionPolicyPortTable=rlNdInspectionPolicyPortTable, rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimit=rlNbrBindingIntegrityActivePolicyMaxEntriesVlanLimit, rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimitType=rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimitType, rlFirstHopSecCountersDropRaGuardUnauthorizedMessage=rlFirstHopSecCountersDropRaGuardUnauthorizedMessage, rlFirstHopSecCountersTable=rlFirstHopSecCountersTable, rlNdInspectionEnableVlanIndex=rlNdInspectionEnableVlanIndex, rlRaGuardPortPolicyVlan2049to3072=rlRaGuardPortPolicyVlan2049to3072, rlRaGuardHopLimitMax=rlRaGuardHopLimitMax, rlNbrBindingIntegrityPolicyPortVlan3073to4094=rlNbrBindingIntegrityPolicyPortVlan3073to4094, rlNdInspectionVlanPolicyVlanTag=rlNdInspectionVlanPolicyVlanTag, rlNbrBindingIntegrityEntriesNum=rlNbrBindingIntegrityEntriesNum, rlRaGuardPolicyDeviceRole=rlRaGuardPolicyDeviceRole, rlNdInspectionActivePolicyTable=rlNdInspectionActivePolicyTable, rlFirstHopSecVlanPolicyVlanTag=rlFirstHopSecVlanPolicyVlanTag, rlNbrBindingIntegrityBindingOrigin=rlNbrBindingIntegrityBindingOrigin, rlDhcpGuardVlanPolicyEntry=rlDhcpGuardVlanPolicyEntry, rlNdInspectionVlanPolicyTable=rlNdInspectionVlanPolicyTable, rlNbrBindingIntegrityPolicyVlan1025to2048=rlNbrBindingIntegrityPolicyVlan1025to2048, rlNbrBindingIntegrityEntryLimitReachTrap=rlNbrBindingIntegrityEntryLimitReachTrap, rlNdInspectionActivePolicySecLevelMin=rlNdInspectionActivePolicySecLevelMin, rlFirstHopSecCountersDropDhcpGuardUnauthorizedMessage=rlFirstHopSecCountersDropDhcpGuardUnauthorizedMessage, rlDhcpGuardVlanPolicyRowStatus=rlDhcpGuardVlanPolicyRowStatus, rlNbrBindingIntegrityActivePolicyBindingLifetimeType=rlNbrBindingIntegrityActivePolicyBindingLifetimeType, rlRaGuardActivePolicyMatchRaPrefixes=rlRaGuardActivePolicyMatchRaPrefixes, rlFirstHopSecCountersDropDhcpReconfigure=rlFirstHopSecCountersDropDhcpReconfigure, rlRaGuardActivePolicyMatchRaAddrType=rlRaGuardActivePolicyMatchRaAddrType, rlRaGuardActivePolicyMatchRaAddr=rlRaGuardActivePolicyMatchRaAddr, rlRaGuardActivePolicyNamePort=rlRaGuardActivePolicyNamePort, rlRaGuardVlanPolicyVlanTag=rlRaGuardVlanPolicyVlanTag, rlNdInspectionDropUnsecured=rlNdInspectionDropUnsecured, rlRaGuardPolicyName=rlRaGuardPolicyName, rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimit=rlNbrBindingIntegrityActivePolicyMaxEntriesMacLimit, rlDhcpGuardActivePolicyNamePort=rlDhcpGuardActivePolicyNamePort, rlRaGuardActivePolicyVlanTag=rlRaGuardActivePolicyVlanTag, rlFirstHopSecVlanPolicyEntry=rlFirstHopSecVlanPolicyEntry, rlNbrBindingIntegrityEnableVlanEntry=rlNbrBindingIntegrityEnableVlanEntry, rlFirstHopSecPolicyLogDrop=rlFirstHopSecPolicyLogDrop, rlRaGuardEnableVlanEntry=rlRaGuardEnableVlanEntry, rlNdInspectionPortPolicyEntry=rlNdInspectionPortPolicyEntry, rlRaGuardActivePolicyOtherConfigFlag=rlRaGuardActivePolicyOtherConfigFlag, rlFirstHopSecPolicyVlan2049to3072=rlFirstHopSecPolicyVlan2049to3072, rlRaGuardActivePolicyHopLimitMaxType=rlRaGuardActivePolicyHopLimitMaxType, rlNbrBindingIntegrityBindingMacAddress=rlNbrBindingIntegrityBindingMacAddress, rlNdInspectionVlanPolicyRowStatus=rlNdInspectionVlanPolicyRowStatus, rlRaGuardPolicyHopLimitMax=rlRaGuardPolicyHopLimitMax, rlNbrBindingIntegrityActivePolicyLogBindingType=rlNbrBindingIntegrityActivePolicyLogBindingType, rlFirstHopSecVlanPolicyName=rlFirstHopSecVlanPolicyName, rlNbrBindingIntegrityPortPolicyVlan3073to4094=rlNbrBindingIntegrityPortPolicyVlan3073to4094, rlRaGuardActivePolicyEntry=rlRaGuardActivePolicyEntry, rlRaGuardPolicyVlan3073to4094=rlRaGuardPolicyVlan3073to4094, rlDhcpGuardPolicyPortVlan1025to2048=rlDhcpGuardPolicyPortVlan1025to2048, rlFirstHopSecActivePolicyTable=rlFirstHopSecActivePolicyTable, rlNbrBindingIntegrityPortPolicyVlan1to1024=rlNbrBindingIntegrityPortPolicyVlan1to1024, rlNbrBindingIntegrityClearRowStatus=rlNbrBindingIntegrityClearRowStatus, rlDhcpGuardPolicyMatchServerAddrSpecified=rlDhcpGuardPolicyMatchServerAddrSpecified, rlNbrBindingIntegrityClearTable=rlNbrBindingIntegrityClearTable, rlDhcpGuardPortPolicyVlan3073to4094=rlDhcpGuardPortPolicyVlan3073to4094, rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimit=rlNbrBindingIntegrityActivePolicyMaxEntriesInterfaceLimit, rlRaGuardActivePolicyDeviceRole=rlRaGuardActivePolicyDeviceRole, rlFirstHopSecPortPolicyTable=rlFirstHopSecPortPolicyTable, rlRaGuardActivePolicyIfIndex=rlRaGuardActivePolicyIfIndex, rlNbrBindingIntegrityVlanPolicyName=rlNbrBindingIntegrityVlanPolicyName, rlNbrBindingIntegrityBindingExpiryTime=rlNbrBindingIntegrityBindingExpiryTime, rlNbrBindingIntegrityPolicyPortTable=rlNbrBindingIntegrityPolicyPortTable, rlRaGuardEnableVlan1to1024=rlRaGuardEnableVlan1to1024, rlNdInspectionPolicyDeviceRole=rlNdInspectionPolicyDeviceRole, rlNbrBindingIntegrityPolicyVlan1to1024=rlNbrBindingIntegrityPolicyVlan1to1024, rlNbrBindingIntegrityBindingIfIndex=rlNbrBindingIntegrityBindingIfIndex, rlNdInspectionPolicyPortVlan3073to4094=rlNdInspectionPolicyPortVlan3073to4094, rlNdInspectionActivePolicyVlanTag=rlNdInspectionActivePolicyVlanTag, rlDhcpGuardPrefMax=rlDhcpGuardPrefMax, rlNdInspectionPolicyValidateSrcMac=rlNdInspectionPolicyValidateSrcMac, rlNdInspectionActivePolicyDeviceRole=rlNdInspectionActivePolicyDeviceRole, rlNbrBindingIntegrityBindingSourceAddress=rlNbrBindingIntegrityBindingSourceAddress, rlDhcpGuardVlanPolicyVlanTag=rlDhcpGuardVlanPolicyVlanTag, rlRaGuard=rlRaGuard, rlNbrBindingIntegrityActivePolicyDeviceRole=rlNbrBindingIntegrityActivePolicyDeviceRole, rlNbrBindingIntegrityActivePolicyVlanTag=rlNbrBindingIntegrityActivePolicyVlanTag, rlRaGuardPortPolicyVlan1025to2048=rlRaGuardPortPolicyVlan1025to2048, rlFirstHopSecCountersDropNbrBindingIntegrityIllegalDhcpv6=rlFirstHopSecCountersDropNbrBindingIntegrityIllegalDhcpv6, rlRaGuardPolicyVlanPolicyName=rlRaGuardPolicyVlanPolicyName, rlFirstHopSecCountersDropDhcpAdverise=rlFirstHopSecCountersDropDhcpAdverise, rlDhcpGuardActivePolicyPrefMax=rlDhcpGuardActivePolicyPrefMax, rlRaGuardRouterPrefMin=rlRaGuardRouterPrefMin, rlNbrBindingIntegrityEnableVlanIndex=rlNbrBindingIntegrityEnableVlanIndex, rlRaGuardPolicyPortEntry=rlRaGuardPolicyPortEntry, rlNdInspectionActivePolicyValidateSrcMac=rlNdInspectionActivePolicyValidateSrcMac, rlNbrBindingIntegrityPolicyVlanTable=rlNbrBindingIntegrityPolicyVlanTable, rlDhcpGuardMessageDropTrap=rlDhcpGuardMessageDropTrap, rlFirstHopSecActivePolicyNameVlan=rlFirstHopSecActivePolicyNameVlan, rlDhcpGuardPolicyVlanEntry=rlDhcpGuardPolicyVlanEntry, rlNbrBindingIntegrityPolicyVlan3073to4094=rlNbrBindingIntegrityPolicyVlan3073to4094, rlFirstHopSecPolicyPortIfIndex=rlFirstHopSecPolicyPortIfIndex, rlNdInspectionValidateSrcMac=rlNdInspectionValidateSrcMac, rlRaGuardActivePolicyTable=rlRaGuardActivePolicyTable, rlDhcpGuardActivePolicyIfIndex=rlDhcpGuardActivePolicyIfIndex, rlRaGuardPortPolicyTable=rlRaGuardPortPolicyTable, rlRaGuardActivePolicyHopLimitMinType=rlRaGuardActivePolicyHopLimitMinType, rlDhcpGuardPolicyTable=rlDhcpGuardPolicyTable, rlDhcpGuardEnableVlanTable=rlDhcpGuardEnableVlanTable, rlNbrBindingIntegrityPortPolicyTable=rlNbrBindingIntegrityPortPolicyTable, rlNbrBindingIntegrityClearVlanTag=rlNbrBindingIntegrityClearVlanTag, rlFirstHopSecEnableVlan2049to3072=rlFirstHopSecEnableVlan2049to3072, rlDhcpGuardPolicyPortIfIndex=rlDhcpGuardPolicyPortIfIndex, rlDhcpGuardPolicyMatchReplyAddr=rlDhcpGuardPolicyMatchReplyAddr, rlRaGuardPolicyPortName=rlRaGuardPolicyPortName, rlNdInspectionPolicyPortName=rlNdInspectionPolicyPortName, rlNdInspectionPolicyPortVlan2049to3072=rlNdInspectionPolicyPortVlan2049to3072, rlFirstHopSecPortPolicyVlan1to1024=rlFirstHopSecPortPolicyVlan1to1024, rlNbrBindingIntegrityEnableVlan2049to3072=rlNbrBindingIntegrityEnableVlan2049to3072)
