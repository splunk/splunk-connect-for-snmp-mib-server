#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-BgpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-BgpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
mscVrIp, mscVrIpIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIp", "mscVrIpIndex")
Unsigned32, Integer32, Counter32, RowStatus, DisplayString, StorageType, Gauge32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Unsigned32", "Integer32", "Counter32", "RowStatus", "DisplayString", "StorageType", "Gauge32")
IntegerSequence, AsciiString, Hex, NonReplicated, HexString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "IntegerSequence", "AsciiString", "Hex", "NonReplicated", "HexString")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscVrIndex, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ObjectIdentity, Counter64, Unsigned32, Bits, ModuleIdentity, TimeTicks, Integer32, Counter32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "Counter64", "Unsigned32", "Bits", "ModuleIdentity", "TimeTicks", "Integer32", "Counter32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bgpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141))
mscVrIpBgp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21))
mscVrIpBgpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 1), )
if mibBuilder.loadTexts: mscVrIpBgpRowStatusTable.setStatus('mandatory')
mscVrIpBgpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"))
if mibBuilder.loadTexts: mscVrIpBgpRowStatusEntry.setStatus('mandatory')
mscVrIpBgpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpRowStatus.setStatus('mandatory')
mscVrIpBgpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpComponentName.setStatus('mandatory')
mscVrIpBgpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpStorageType.setStatus('mandatory')
mscVrIpBgpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpBgpIndex.setStatus('mandatory')
mscVrIpBgpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100), )
if mibBuilder.loadTexts: mscVrIpBgpProvTable.setStatus('mandatory')
mscVrIpBgpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"))
if mibBuilder.loadTexts: mscVrIpBgpProvEntry.setStatus('mandatory')
mscVrIpBgpBgpIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpBgpIdentifier.setStatus('mandatory')
mscVrIpBgpLocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpLocalAs.setStatus('mandatory')
mscVrIpBgpDefaultLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(144)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpDefaultLocalPreference.setStatus('mandatory')
mscVrIpBgpDefaultMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967294)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpDefaultMultiExitDisc.setStatus('mandatory')
mscVrIpBgpRouteThrottleLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpRouteThrottleLimit.setStatus('mandatory')
mscVrIpBgpRouteThrottleInter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpRouteThrottleInter.setStatus('mandatory')
mscVrIpBgpRouteReflector = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpRouteReflector.setStatus('mandatory')
mscVrIpBgpRouteReflectorCluster = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpRouteReflectorCluster.setStatus('mandatory')
mscVrIpBgpRedistributeIgpToIbgp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 100, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpRedistributeIgpToIbgp.setStatus('mandatory')
mscVrIpBgpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101), )
if mibBuilder.loadTexts: mscVrIpBgpOperTable.setStatus('mandatory')
mscVrIpBgpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"))
if mibBuilder.loadTexts: mscVrIpBgpOperEntry.setStatus('mandatory')
mscVrIpBgpTableVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpTableVersion.setStatus('mandatory')
mscVrIpBgpInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpInMsgs.setStatus('mandatory')
mscVrIpBgpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpInErrors.setStatus('mandatory')
mscVrIpBgpInErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpInErrorMsgs.setStatus('mandatory')
mscVrIpBgpOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutMsgs.setStatus('mandatory')
mscVrIpBgpOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutDiscards.setStatus('mandatory')
mscVrIpBgpOutErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutErrorMsgs.setStatus('mandatory')
mscVrIpBgpIndbSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 101, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbSize.setStatus('mandatory')
mscVrIpBgpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 102), )
if mibBuilder.loadTexts: mscVrIpBgpStateTable.setStatus('mandatory')
mscVrIpBgpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 102, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"))
if mibBuilder.loadTexts: mscVrIpBgpStateEntry.setStatus('mandatory')
mscVrIpBgpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpAdminState.setStatus('mandatory')
mscVrIpBgpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 102, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOperationalState.setStatus('mandatory')
mscVrIpBgpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 102, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpUsageState.setStatus('mandatory')
mscVrIpBgpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 103), )
if mibBuilder.loadTexts: mscVrIpBgpAdminControlTable.setStatus('mandatory')
mscVrIpBgpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"))
if mibBuilder.loadTexts: mscVrIpBgpAdminControlEntry.setStatus('mandatory')
mscVrIpBgpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpSnmpAdminStatus.setStatus('mandatory')
mscVrIpBgpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 106), )
if mibBuilder.loadTexts: mscVrIpBgpOperStatusTable.setStatus('mandatory')
mscVrIpBgpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 106, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"))
if mibBuilder.loadTexts: mscVrIpBgpOperStatusEntry.setStatus('mandatory')
mscVrIpBgpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 106, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpSnmpOperStatus.setStatus('mandatory')
mscVrIpBgpPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2))
mscVrIpBgpPeerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 1), )
if mibBuilder.loadTexts: mscVrIpBgpPeerRowStatusTable.setStatus('mandatory')
mscVrIpBgpPeerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: mscVrIpBgpPeerRowStatusEntry.setStatus('mandatory')
mscVrIpBgpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerRowStatus.setStatus('mandatory')
mscVrIpBgpPeerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerComponentName.setStatus('mandatory')
mscVrIpBgpPeerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerStorageType.setStatus('mandatory')
mscVrIpBgpPeerPeerAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpPeerPeerAddressIndex.setStatus('mandatory')
mscVrIpBgpPeerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10), )
if mibBuilder.loadTexts: mscVrIpBgpPeerProvTable.setStatus('mandatory')
mscVrIpBgpPeerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: mscVrIpBgpPeerProvEntry.setStatus('mandatory')
mscVrIpBgpPeerPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerPeerAs.setStatus('mandatory')
mscVrIpBgpPeerLocalAddressConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerLocalAddressConfigured.setStatus('mandatory')
mscVrIpBgpPeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 21845)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerKeepAliveConfigured.setStatus('mandatory')
mscVrIpBgpPeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), )).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerHoldTimeConfigured.setStatus('mandatory')
mscVrIpBgpPeerConnectRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerConnectRetryTime.setStatus('mandatory')
mscVrIpBgpPeerMinAsOrigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerMinAsOrigTime.setStatus('mandatory')
mscVrIpBgpPeerMinRouteAdvTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerMinRouteAdvTime.setStatus('mandatory')
mscVrIpBgpPeerDefaultInAggMed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerDefaultInAggMed.setStatus('mandatory')
mscVrIpBgpPeerIsRouteReflectorClient = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerIsRouteReflectorClient.setStatus('mandatory')
mscVrIpBgpPeerRemovePrivateAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpPeerRemovePrivateAs.setStatus('mandatory')
mscVrIpBgpPeerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 11), )
if mibBuilder.loadTexts: mscVrIpBgpPeerStateTable.setStatus('mandatory')
mscVrIpBgpPeerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: mscVrIpBgpPeerStateEntry.setStatus('mandatory')
mscVrIpBgpPeerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerAdminState.setStatus('mandatory')
mscVrIpBgpPeerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerOperationalState.setStatus('mandatory')
mscVrIpBgpPeerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerUsageState.setStatus('mandatory')
mscVrIpBgpPeerOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12), )
if mibBuilder.loadTexts: mscVrIpBgpPeerOperTable.setStatus('mandatory')
mscVrIpBgpPeerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: mscVrIpBgpPeerOperEntry.setStatus('mandatory')
mscVrIpBgpPeerConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("openSent", 4), ("openConfirm", 5), ("established", 6))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerConnectionState.setStatus('mandatory')
mscVrIpBgpPeerBgpIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerBgpIdentifier.setStatus('mandatory')
mscVrIpBgpPeerVersionNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerVersionNegotiated.setStatus('mandatory')
mscVrIpBgpPeerHoldTimeNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerHoldTimeNegotiated.setStatus('mandatory')
mscVrIpBgpPeerKeepAliveNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 21845))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerKeepAliveNegotiated.setStatus('mandatory')
mscVrIpBgpPeerLocalAddressUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerLocalAddressUsed.setStatus('mandatory')
mscVrIpBgpPeerLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerLocalPort.setStatus('mandatory')
mscVrIpBgpPeerRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerRemotePort.setStatus('mandatory')
mscVrIpBgpPeerLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 11), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerLastError.setStatus('mandatory')
mscVrIpBgpPeerConnectionEstablishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerConnectionEstablishedTime.setStatus('mandatory')
mscVrIpBgpPeerConnectionEstablishedTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerConnectionEstablishedTransitions.setStatus('mandatory')
mscVrIpBgpPeerInUpdateElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 14), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerInUpdateElapsedTime.setStatus('mandatory')
mscVrIpBgpPeerInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerInMsgs.setStatus('mandatory')
mscVrIpBgpPeerInUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerInUpdates.setStatus('mandatory')
mscVrIpBgpPeerInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerInErrors.setStatus('mandatory')
mscVrIpBgpPeerInErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerInErrorMsgs.setStatus('mandatory')
mscVrIpBgpPeerOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerOutMsgs.setStatus('mandatory')
mscVrIpBgpPeerOutUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerOutUpdates.setStatus('mandatory')
mscVrIpBgpPeerOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerOutDiscards.setStatus('mandatory')
mscVrIpBgpPeerOutErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerOutErrorMsgs.setStatus('mandatory')
mscVrIpBgpPeerInRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 2, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpPeerInRoutes.setStatus('mandatory')
mscVrIpBgpImport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3))
mscVrIpBgpImportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 1), )
if mibBuilder.loadTexts: mscVrIpBgpImportRowStatusTable.setStatus('mandatory')
mscVrIpBgpImportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpImportIndex"))
if mibBuilder.loadTexts: mscVrIpBgpImportRowStatusEntry.setStatus('mandatory')
mscVrIpBgpImportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportRowStatus.setStatus('mandatory')
mscVrIpBgpImportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpImportComponentName.setStatus('mandatory')
mscVrIpBgpImportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpImportStorageType.setStatus('mandatory')
mscVrIpBgpImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpBgpImportIndex.setStatus('mandatory')
mscVrIpBgpImportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10), )
if mibBuilder.loadTexts: mscVrIpBgpImportProvTable.setStatus('mandatory')
mscVrIpBgpImportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpImportIndex"))
if mibBuilder.loadTexts: mscVrIpBgpImportProvEntry.setStatus('mandatory')
mscVrIpBgpImportPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportPeerAs.setStatus('mandatory')
mscVrIpBgpImportPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportPeerIpAddress.setStatus('mandatory')
mscVrIpBgpImportOriginAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportOriginAs.setStatus('mandatory')
mscVrIpBgpImportOriginProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("any", 0), ("igp", 1), ("egp", 2), ("incomplete", 3))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportOriginProtocol.setStatus('mandatory')
mscVrIpBgpImportUsageFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("ignore", 2))).clone('use')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportUsageFlag.setStatus('mandatory')
mscVrIpBgpImportLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportLocalPreference.setStatus('mandatory')
mscVrIpBgpImportPreferredOver = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 70))).clone(namedValues=NamedValues(("overIntOspf", 6), ("underIntOspf", 70))).clone('underIntOspf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportPreferredOver.setStatus('mandatory')
mscVrIpBgpImportAsPathExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 8), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportAsPathExpression.setStatus('mandatory')
mscVrIpBgpImportCommunityExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 9), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportCommunityExpression.setStatus('mandatory')
mscVrIpBgpImportExpressPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportExpressPreference.setStatus('mandatory')
mscVrIpBgpImportAppendCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportAppendCommunity.setStatus('mandatory')
mscVrIpBgpImportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2))
mscVrIpBgpImportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 1), )
if mibBuilder.loadTexts: mscVrIpBgpImportNetRowStatusTable.setStatus('mandatory')
mscVrIpBgpImportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpImportIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpImportNetIndex"))
if mibBuilder.loadTexts: mscVrIpBgpImportNetRowStatusEntry.setStatus('mandatory')
mscVrIpBgpImportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportNetRowStatus.setStatus('mandatory')
mscVrIpBgpImportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpImportNetComponentName.setStatus('mandatory')
mscVrIpBgpImportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpImportNetStorageType.setStatus('mandatory')
mscVrIpBgpImportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpBgpImportNetIndex.setStatus('mandatory')
mscVrIpBgpImportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 10), )
if mibBuilder.loadTexts: mscVrIpBgpImportNetProvTable.setStatus('mandatory')
mscVrIpBgpImportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpImportIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpImportNetIndex"))
if mibBuilder.loadTexts: mscVrIpBgpImportNetProvEntry.setStatus('mandatory')
mscVrIpBgpImportNetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportNetPrefix.setStatus('mandatory')
mscVrIpBgpImportNetLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 3, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpImportNetLength.setStatus('mandatory')
mscVrIpBgpExport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4))
mscVrIpBgpExportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 1), )
if mibBuilder.loadTexts: mscVrIpBgpExportRowStatusTable.setStatus('mandatory')
mscVrIpBgpExportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpExportIndex"))
if mibBuilder.loadTexts: mscVrIpBgpExportRowStatusEntry.setStatus('mandatory')
mscVrIpBgpExportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportRowStatus.setStatus('mandatory')
mscVrIpBgpExportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpExportComponentName.setStatus('mandatory')
mscVrIpBgpExportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpExportStorageType.setStatus('mandatory')
mscVrIpBgpExportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpBgpExportIndex.setStatus('mandatory')
mscVrIpBgpExportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10), )
if mibBuilder.loadTexts: mscVrIpBgpExportProvTable.setStatus('mandatory')
mscVrIpBgpExportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpExportIndex"))
if mibBuilder.loadTexts: mscVrIpBgpExportProvEntry.setStatus('mandatory')
mscVrIpBgpExportPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportPeerAs.setStatus('mandatory')
mscVrIpBgpExportPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportPeerIpAddress.setStatus('mandatory')
mscVrIpBgpExportProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("all", 1), ("egp", 2), ("rip", 3), ("ospfInternal", 4), ("ospfExternal", 5), ("staticLocal", 6), ("staticRemote", 7), ("bgpInternal", 8), ("bgpExternal", 9))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportProtocol.setStatus('mandatory')
mscVrIpBgpExportEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportEgpAsId.setStatus('mandatory')
mscVrIpBgpExportBgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportBgpAsId.setStatus('mandatory')
mscVrIpBgpExportOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 6), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportOspfTag.setStatus('mandatory')
mscVrIpBgpExportRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 7), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportRipInterface.setStatus('mandatory')
mscVrIpBgpExportRipNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportRipNeighbor.setStatus('mandatory')
mscVrIpBgpExportAdvertiseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("send", 1), ("block", 2))).clone('send')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportAdvertiseStatus.setStatus('mandatory')
mscVrIpBgpExportMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportMultiExitDisc.setStatus('mandatory')
mscVrIpBgpExportSendMultiExitDiscToEbgp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportSendMultiExitDiscToEbgp.setStatus('mandatory')
mscVrIpBgpExportAsPathExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 12), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportAsPathExpression.setStatus('mandatory')
mscVrIpBgpExportCommunityExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportCommunityExpression.setStatus('mandatory')
mscVrIpBgpExportExpressPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportExpressPreference.setStatus('mandatory')
mscVrIpBgpExportSendCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportSendCommunity.setStatus('mandatory')
mscVrIpBgpExportInsertDummyAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 10, 1, 200), IntegerSequence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportInsertDummyAs.setStatus('mandatory')
mscVrIpBgpExportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2))
mscVrIpBgpExportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 1), )
if mibBuilder.loadTexts: mscVrIpBgpExportNetRowStatusTable.setStatus('mandatory')
mscVrIpBgpExportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpExportIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpExportNetIndex"))
if mibBuilder.loadTexts: mscVrIpBgpExportNetRowStatusEntry.setStatus('mandatory')
mscVrIpBgpExportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportNetRowStatus.setStatus('mandatory')
mscVrIpBgpExportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpExportNetComponentName.setStatus('mandatory')
mscVrIpBgpExportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpExportNetStorageType.setStatus('mandatory')
mscVrIpBgpExportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpBgpExportNetIndex.setStatus('mandatory')
mscVrIpBgpExportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 10), )
if mibBuilder.loadTexts: mscVrIpBgpExportNetProvTable.setStatus('mandatory')
mscVrIpBgpExportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpExportIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpExportNetIndex"))
if mibBuilder.loadTexts: mscVrIpBgpExportNetProvEntry.setStatus('mandatory')
mscVrIpBgpExportNetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportNetPrefix.setStatus('mandatory')
mscVrIpBgpExportNetLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 4, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpExportNetLength.setStatus('mandatory')
mscVrIpBgpAs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5))
mscVrIpBgpAsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 1), )
if mibBuilder.loadTexts: mscVrIpBgpAsRowStatusTable.setStatus('mandatory')
mscVrIpBgpAsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAsIndex"))
if mibBuilder.loadTexts: mscVrIpBgpAsRowStatusEntry.setStatus('mandatory')
mscVrIpBgpAsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAsRowStatus.setStatus('mandatory')
mscVrIpBgpAsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpAsComponentName.setStatus('mandatory')
mscVrIpBgpAsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpAsStorageType.setStatus('mandatory')
mscVrIpBgpAsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpBgpAsIndex.setStatus('mandatory')
mscVrIpBgpAsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 10), )
if mibBuilder.loadTexts: mscVrIpBgpAsProvTable.setStatus('mandatory')
mscVrIpBgpAsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAsIndex"))
if mibBuilder.loadTexts: mscVrIpBgpAsProvEntry.setStatus('mandatory')
mscVrIpBgpAsWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAsWeight.setStatus('mandatory')
mscVrIpBgpAggregate = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6))
mscVrIpBgpAggregateRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 1), )
if mibBuilder.loadTexts: mscVrIpBgpAggregateRowStatusTable.setStatus('mandatory')
mscVrIpBgpAggregateRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregatePrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregateLengthIndex"))
if mibBuilder.loadTexts: mscVrIpBgpAggregateRowStatusEntry.setStatus('mandatory')
mscVrIpBgpAggregateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateRowStatus.setStatus('mandatory')
mscVrIpBgpAggregateComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpAggregateComponentName.setStatus('mandatory')
mscVrIpBgpAggregateStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpAggregateStorageType.setStatus('mandatory')
mscVrIpBgpAggregatePrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpAggregatePrefixIndex.setStatus('mandatory')
mscVrIpBgpAggregateLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: mscVrIpBgpAggregateLengthIndex.setStatus('mandatory')
mscVrIpBgpAggregateNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2))
mscVrIpBgpAggregateNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 1), )
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetRowStatusTable.setStatus('mandatory')
mscVrIpBgpAggregateNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregatePrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregateLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregateNetIndex"))
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetRowStatusEntry.setStatus('mandatory')
mscVrIpBgpAggregateNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetRowStatus.setStatus('mandatory')
mscVrIpBgpAggregateNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetComponentName.setStatus('mandatory')
mscVrIpBgpAggregateNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetStorageType.setStatus('mandatory')
mscVrIpBgpAggregateNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetIndex.setStatus('mandatory')
mscVrIpBgpAggregateNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10), )
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetProvTable.setStatus('mandatory')
mscVrIpBgpAggregateNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregatePrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregateLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpAggregateNetIndex"))
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetProvEntry.setStatus('mandatory')
mscVrIpBgpAggregateNetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetPrefix.setStatus('mandatory')
mscVrIpBgpAggregateNetLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetLength.setStatus('mandatory')
mscVrIpBgpAggregateNetProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("all", 1), ("egp", 2), ("rip", 3), ("ospfInternal", 4), ("ospfExternal", 5), ("staticLocal", 6), ("staticRemote", 7), ("bgpInternal", 8), ("bgpExternal", 9))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetProtocol.setStatus('mandatory')
mscVrIpBgpAggregateNetEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetEgpAsId.setStatus('mandatory')
mscVrIpBgpAggregateNetBgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetBgpAsId.setStatus('mandatory')
mscVrIpBgpAggregateNetOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 6), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetOspfTag.setStatus('mandatory')
mscVrIpBgpAggregateNetRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 7), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetRipInterface.setStatus('mandatory')
mscVrIpBgpAggregateNetAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 6, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aggregate", 1), ("advertise", 2))).clone('aggregate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBgpAggregateNetAction.setStatus('mandatory')
mscVrIpBgpIndb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7))
mscVrIpBgpIndbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1), )
if mibBuilder.loadTexts: mscVrIpBgpIndbRowStatusTable.setStatus('mandatory')
mscVrIpBgpIndbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbPeerIndex"))
if mibBuilder.loadTexts: mscVrIpBgpIndbRowStatusEntry.setStatus('mandatory')
mscVrIpBgpIndbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbRowStatus.setStatus('mandatory')
mscVrIpBgpIndbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbComponentName.setStatus('mandatory')
mscVrIpBgpIndbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbStorageType.setStatus('mandatory')
mscVrIpBgpIndbPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpIndbPrefixIndex.setStatus('mandatory')
mscVrIpBgpIndbLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: mscVrIpBgpIndbLengthIndex.setStatus('mandatory')
mscVrIpBgpIndbPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpIndbPeerIndex.setStatus('mandatory')
mscVrIpBgpIndbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10), )
if mibBuilder.loadTexts: mscVrIpBgpIndbOperTable.setStatus('mandatory')
mscVrIpBgpIndbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbPeerIndex"))
if mibBuilder.loadTexts: mscVrIpBgpIndbOperEntry.setStatus('mandatory')
mscVrIpBgpIndbOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbOrigin.setStatus('mandatory')
mscVrIpBgpIndbInLocaldb = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbInLocaldb.setStatus('mandatory')
mscVrIpBgpIndbNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbNextHop.setStatus('mandatory')
mscVrIpBgpIndbLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbLocalPreference.setStatus('mandatory')
mscVrIpBgpIndbCalcLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbCalcLocalPref.setStatus('mandatory')
mscVrIpBgpIndbMultiExitDiscriminator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbMultiExitDiscriminator.setStatus('mandatory')
mscVrIpBgpIndbAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbAtomicAggregate.setStatus('mandatory')
mscVrIpBgpIndbAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbAggregatorAs.setStatus('mandatory')
mscVrIpBgpIndbAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbAggregatorAddr.setStatus('mandatory')
mscVrIpBgpIndbAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbAsPath.setStatus('mandatory')
mscVrIpBgpIndbUnknownAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 14), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbUnknownAttributes.setStatus('mandatory')
mscVrIpBgpIndbCommunityPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 15), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbCommunityPath.setStatus('mandatory')
mscVrIpBgpIndbAsOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 10, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbAsOriginatorId.setStatus('mandatory')
mscVrIpBgpIndbRrClusterListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 798), )
if mibBuilder.loadTexts: mscVrIpBgpIndbRrClusterListTable.setStatus('mandatory')
mscVrIpBgpIndbRrClusterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 798, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbPeerIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndbRrClusterListValue"))
if mibBuilder.loadTexts: mscVrIpBgpIndbRrClusterListEntry.setStatus('mandatory')
mscVrIpBgpIndbRrClusterListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 7, 798, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpIndbRrClusterListValue.setStatus('mandatory')
mscVrIpBgpLocaldb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8))
mscVrIpBgpLocaldbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1), )
if mibBuilder.loadTexts: mscVrIpBgpLocaldbRowStatusTable.setStatus('mandatory')
mscVrIpBgpLocaldbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbPeerIndex"))
if mibBuilder.loadTexts: mscVrIpBgpLocaldbRowStatusEntry.setStatus('mandatory')
mscVrIpBgpLocaldbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbRowStatus.setStatus('mandatory')
mscVrIpBgpLocaldbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbComponentName.setStatus('mandatory')
mscVrIpBgpLocaldbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbStorageType.setStatus('mandatory')
mscVrIpBgpLocaldbPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpLocaldbPrefixIndex.setStatus('mandatory')
mscVrIpBgpLocaldbLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: mscVrIpBgpLocaldbLengthIndex.setStatus('mandatory')
mscVrIpBgpLocaldbPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpLocaldbPeerIndex.setStatus('mandatory')
mscVrIpBgpLocaldbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10), )
if mibBuilder.loadTexts: mscVrIpBgpLocaldbOperTable.setStatus('mandatory')
mscVrIpBgpLocaldbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbPeerIndex"))
if mibBuilder.loadTexts: mscVrIpBgpLocaldbOperEntry.setStatus('mandatory')
mscVrIpBgpLocaldbOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbOrigin.setStatus('mandatory')
mscVrIpBgpLocaldbNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbNextHop.setStatus('mandatory')
mscVrIpBgpLocaldbLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbLocalPreference.setStatus('mandatory')
mscVrIpBgpLocaldbMultiExitDiscriminator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbMultiExitDiscriminator.setStatus('mandatory')
mscVrIpBgpLocaldbAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbAtomicAggregate.setStatus('mandatory')
mscVrIpBgpLocaldbAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbAggregatorAs.setStatus('mandatory')
mscVrIpBgpLocaldbAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbAggregatorAddr.setStatus('mandatory')
mscVrIpBgpLocaldbAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 11), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbAsPath.setStatus('mandatory')
mscVrIpBgpLocaldbUnknownAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 12), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbUnknownAttributes.setStatus('mandatory')
mscVrIpBgpLocaldbCommunityPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbCommunityPath.setStatus('mandatory')
mscVrIpBgpLocaldbAsOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 10, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbAsOriginatorId.setStatus('mandatory')
mscVrIpBgpLocaldbRrClusterListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 797), )
if mibBuilder.loadTexts: mscVrIpBgpLocaldbRrClusterListTable.setStatus('mandatory')
mscVrIpBgpLocaldbRrClusterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 797, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbPeerIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpLocaldbRrClusterListValue"))
if mibBuilder.loadTexts: mscVrIpBgpLocaldbRrClusterListEntry.setStatus('mandatory')
mscVrIpBgpLocaldbRrClusterListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 8, 797, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpLocaldbRrClusterListValue.setStatus('mandatory')
mscVrIpBgpOutdb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9))
mscVrIpBgpOutdbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1), )
if mibBuilder.loadTexts: mscVrIpBgpOutdbRowStatusTable.setStatus('mandatory')
mscVrIpBgpOutdbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbPeerIndex"))
if mibBuilder.loadTexts: mscVrIpBgpOutdbRowStatusEntry.setStatus('mandatory')
mscVrIpBgpOutdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbRowStatus.setStatus('mandatory')
mscVrIpBgpOutdbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbComponentName.setStatus('mandatory')
mscVrIpBgpOutdbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbStorageType.setStatus('mandatory')
mscVrIpBgpOutdbPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpOutdbPrefixIndex.setStatus('mandatory')
mscVrIpBgpOutdbLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: mscVrIpBgpOutdbLengthIndex.setStatus('mandatory')
mscVrIpBgpOutdbPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: mscVrIpBgpOutdbPeerIndex.setStatus('mandatory')
mscVrIpBgpOutdbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10), )
if mibBuilder.loadTexts: mscVrIpBgpOutdbOperTable.setStatus('mandatory')
mscVrIpBgpOutdbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbPeerIndex"))
if mibBuilder.loadTexts: mscVrIpBgpOutdbOperEntry.setStatus('mandatory')
mscVrIpBgpOutdbOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbOrigin.setStatus('mandatory')
mscVrIpBgpOutdbNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbNextHop.setStatus('mandatory')
mscVrIpBgpOutdbLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbLocalPreference.setStatus('mandatory')
mscVrIpBgpOutdbMultiExitDiscriminator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbMultiExitDiscriminator.setStatus('mandatory')
mscVrIpBgpOutdbAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbAtomicAggregate.setStatus('mandatory')
mscVrIpBgpOutdbAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbAggregatorAs.setStatus('mandatory')
mscVrIpBgpOutdbAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbAggregatorAddr.setStatus('mandatory')
mscVrIpBgpOutdbAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 11), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbAsPath.setStatus('mandatory')
mscVrIpBgpOutdbUnknownAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 12), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbUnknownAttributes.setStatus('mandatory')
mscVrIpBgpOutdbCommunityPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbCommunityPath.setStatus('mandatory')
mscVrIpBgpOutdbAsOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 10, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbAsOriginatorId.setStatus('mandatory')
mscVrIpBgpOutdbRrClusterListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 799), )
if mibBuilder.loadTexts: mscVrIpBgpOutdbRrClusterListTable.setStatus('mandatory')
mscVrIpBgpOutdbRrClusterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 799, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbPrefixIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbPeerIndex"), (0, "Nortel-MsCarrier-MscPassport-BgpMIB", "mscVrIpBgpOutdbRrClusterListValue"))
if mibBuilder.loadTexts: mscVrIpBgpOutdbRrClusterListEntry.setStatus('mandatory')
mscVrIpBgpOutdbRrClusterListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 21, 9, 799, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBgpOutdbRrClusterListValue.setStatus('mandatory')
bgpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 1))
bgpGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 1, 1))
bgpGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 1, 1, 3))
bgpGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 1, 1, 3, 2))
bgpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 3))
bgpCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 3, 1))
bgpCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 3, 1, 3))
bgpCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 141, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BgpMIB", mscVrIpBgpIndbOrigin=mscVrIpBgpIndbOrigin, mscVrIpBgpLocaldbOperTable=mscVrIpBgpLocaldbOperTable, mscVrIpBgpOutdbPeerIndex=mscVrIpBgpOutdbPeerIndex, mscVrIpBgpStateEntry=mscVrIpBgpStateEntry, mscVrIpBgpPeerRowStatus=mscVrIpBgpPeerRowStatus, mscVrIpBgpInMsgs=mscVrIpBgpInMsgs, mscVrIpBgpInErrors=mscVrIpBgpInErrors, mscVrIpBgpPeerInUpdates=mscVrIpBgpPeerInUpdates, mscVrIpBgpAggregateNetProtocol=mscVrIpBgpAggregateNetProtocol, mscVrIpBgpPeerOutMsgs=mscVrIpBgpPeerOutMsgs, mscVrIpBgpImportProvTable=mscVrIpBgpImportProvTable, mscVrIpBgpIndbComponentName=mscVrIpBgpIndbComponentName, mscVrIpBgpAggregateStorageType=mscVrIpBgpAggregateStorageType, mscVrIpBgpAggregateComponentName=mscVrIpBgpAggregateComponentName, bgpCapabilities=bgpCapabilities, mscVrIpBgpExport=mscVrIpBgpExport, mscVrIpBgpAsRowStatusEntry=mscVrIpBgpAsRowStatusEntry, mscVrIpBgpIndbCommunityPath=mscVrIpBgpIndbCommunityPath, mscVrIpBgpPeerRemotePort=mscVrIpBgpPeerRemotePort, mscVrIpBgpImportNet=mscVrIpBgpImportNet, mscVrIpBgpOutdbRrClusterListTable=mscVrIpBgpOutdbRrClusterListTable, mscVrIpBgpRowStatusTable=mscVrIpBgpRowStatusTable, mscVrIpBgpExportNetComponentName=mscVrIpBgpExportNetComponentName, mscVrIpBgpPeerLocalPort=mscVrIpBgpPeerLocalPort, mscVrIpBgpAdminControlTable=mscVrIpBgpAdminControlTable, mscVrIpBgpImportRowStatusTable=mscVrIpBgpImportRowStatusTable, mscVrIpBgpAggregateNetRipInterface=mscVrIpBgpAggregateNetRipInterface, mscVrIpBgpTableVersion=mscVrIpBgpTableVersion, mscVrIpBgpPeerComponentName=mscVrIpBgpPeerComponentName, mscVrIpBgpOutdbNextHop=mscVrIpBgpOutdbNextHop, mscVrIpBgpStateTable=mscVrIpBgpStateTable, mscVrIpBgpSnmpAdminStatus=mscVrIpBgpSnmpAdminStatus, mscVrIpBgpAsIndex=mscVrIpBgpAsIndex, mscVrIpBgpRowStatusEntry=mscVrIpBgpRowStatusEntry, mscVrIpBgpIndbAggregatorAs=mscVrIpBgpIndbAggregatorAs, mscVrIpBgpOutdbRrClusterListEntry=mscVrIpBgpOutdbRrClusterListEntry, mscVrIpBgpImportNetRowStatus=mscVrIpBgpImportNetRowStatus, mscVrIpBgpPeerOperationalState=mscVrIpBgpPeerOperationalState, mscVrIpBgpPeerHoldTimeNegotiated=mscVrIpBgpPeerHoldTimeNegotiated, mscVrIpBgpAggregateNetProvEntry=mscVrIpBgpAggregateNetProvEntry, mscVrIpBgpPeerLocalAddressUsed=mscVrIpBgpPeerLocalAddressUsed, mscVrIpBgpExportExpressPreference=mscVrIpBgpExportExpressPreference, mscVrIpBgpLocaldbAsOriginatorId=mscVrIpBgpLocaldbAsOriginatorId, mscVrIpBgpRouteThrottleLimit=mscVrIpBgpRouteThrottleLimit, mscVrIpBgpIndbOperEntry=mscVrIpBgpIndbOperEntry, mscVrIpBgpIndbSize=mscVrIpBgpIndbSize, mscVrIpBgpRouteThrottleInter=mscVrIpBgpRouteThrottleInter, mscVrIpBgpLocaldbAggregatorAs=mscVrIpBgpLocaldbAggregatorAs, mscVrIpBgpIndbRowStatusTable=mscVrIpBgpIndbRowStatusTable, mscVrIpBgpPeerOutErrorMsgs=mscVrIpBgpPeerOutErrorMsgs, mscVrIpBgpExportAdvertiseStatus=mscVrIpBgpExportAdvertiseStatus, mscVrIpBgpOutdbAggregatorAs=mscVrIpBgpOutdbAggregatorAs, mscVrIpBgpRedistributeIgpToIbgp=mscVrIpBgpRedistributeIgpToIbgp, mscVrIpBgpImportPeerAs=mscVrIpBgpImportPeerAs, mscVrIpBgpExportRipNeighbor=mscVrIpBgpExportRipNeighbor, mscVrIpBgpAggregateNetEgpAsId=mscVrIpBgpAggregateNetEgpAsId, mscVrIpBgpOutdbLocalPreference=mscVrIpBgpOutdbLocalPreference, mscVrIpBgpExportPeerAs=mscVrIpBgpExportPeerAs, mscVrIpBgpAggregateNetIndex=mscVrIpBgpAggregateNetIndex, mscVrIpBgpRowStatus=mscVrIpBgpRowStatus, mscVrIpBgpExportComponentName=mscVrIpBgpExportComponentName, mscVrIpBgpImportAppendCommunity=mscVrIpBgpImportAppendCommunity, mscVrIpBgpOutdbCommunityPath=mscVrIpBgpOutdbCommunityPath, mscVrIpBgpAggregateNetStorageType=mscVrIpBgpAggregateNetStorageType, mscVrIpBgpImportIndex=mscVrIpBgpImportIndex, mscVrIpBgpImportNetRowStatusEntry=mscVrIpBgpImportNetRowStatusEntry, mscVrIpBgpExportNetIndex=mscVrIpBgpExportNetIndex, mscVrIpBgpOutdbMultiExitDiscriminator=mscVrIpBgpOutdbMultiExitDiscriminator, mscVrIpBgpPeerConnectionEstablishedTime=mscVrIpBgpPeerConnectionEstablishedTime, mscVrIpBgpPeerOperEntry=mscVrIpBgpPeerOperEntry, mscVrIpBgpAggregateNetBgpAsId=mscVrIpBgpAggregateNetBgpAsId, mscVrIpBgpPeerProvTable=mscVrIpBgpPeerProvTable, mscVrIpBgpPeerRowStatusTable=mscVrIpBgpPeerRowStatusTable, mscVrIpBgpPeerPeerAddressIndex=mscVrIpBgpPeerPeerAddressIndex, mscVrIpBgpPeerLastError=mscVrIpBgpPeerLastError, mscVrIpBgpAggregateNetComponentName=mscVrIpBgpAggregateNetComponentName, mscVrIpBgpComponentName=mscVrIpBgpComponentName, mscVrIpBgpUsageState=mscVrIpBgpUsageState, mscVrIpBgpIndbAsPath=mscVrIpBgpIndbAsPath, mscVrIpBgpLocaldb=mscVrIpBgpLocaldb, mscVrIpBgpIndbLengthIndex=mscVrIpBgpIndbLengthIndex, mscVrIpBgpPeerOperTable=mscVrIpBgpPeerOperTable, mscVrIpBgpLocaldbAtomicAggregate=mscVrIpBgpLocaldbAtomicAggregate, mscVrIpBgpExportCommunityExpression=mscVrIpBgpExportCommunityExpression, mscVrIpBgpImportPeerIpAddress=mscVrIpBgpImportPeerIpAddress, mscVrIpBgpStorageType=mscVrIpBgpStorageType, mscVrIpBgpExportStorageType=mscVrIpBgpExportStorageType, mscVrIpBgpExportProvEntry=mscVrIpBgpExportProvEntry, mscVrIpBgpPeerAdminState=mscVrIpBgpPeerAdminState, mscVrIpBgpIndbStorageType=mscVrIpBgpIndbStorageType, mscVrIpBgpOutdbStorageType=mscVrIpBgpOutdbStorageType, mscVrIpBgpIndbRowStatus=mscVrIpBgpIndbRowStatus, mscVrIpBgpIndbOperTable=mscVrIpBgpIndbOperTable, mscVrIpBgpImportPreferredOver=mscVrIpBgpImportPreferredOver, mscVrIpBgpExportNetLength=mscVrIpBgpExportNetLength, mscVrIpBgpPeerInUpdateElapsedTime=mscVrIpBgpPeerInUpdateElapsedTime, mscVrIpBgpIndbPeerIndex=mscVrIpBgpIndbPeerIndex, mscVrIpBgpExportInsertDummyAs=mscVrIpBgpExportInsertDummyAs, mscVrIpBgpBgpIdentifier=mscVrIpBgpBgpIdentifier, mscVrIpBgpAggregateNetRowStatus=mscVrIpBgpAggregateNetRowStatus, mscVrIpBgpOutdbRowStatus=mscVrIpBgpOutdbRowStatus, bgpGroupCA02=bgpGroupCA02, mscVrIpBgpPeerConnectionEstablishedTransitions=mscVrIpBgpPeerConnectionEstablishedTransitions, mscVrIpBgpAsStorageType=mscVrIpBgpAsStorageType, mscVrIpBgpPeerHoldTimeConfigured=mscVrIpBgpPeerHoldTimeConfigured, mscVrIpBgpPeerIsRouteReflectorClient=mscVrIpBgpPeerIsRouteReflectorClient, mscVrIpBgpPeerMinRouteAdvTime=mscVrIpBgpPeerMinRouteAdvTime, mscVrIpBgpOperEntry=mscVrIpBgpOperEntry, mscVrIpBgpLocaldbComponentName=mscVrIpBgpLocaldbComponentName, mscVrIpBgpLocaldbAsPath=mscVrIpBgpLocaldbAsPath, mscVrIpBgpLocaldbPrefixIndex=mscVrIpBgpLocaldbPrefixIndex, mscVrIpBgpImportNetStorageType=mscVrIpBgpImportNetStorageType, mscVrIpBgpExportNet=mscVrIpBgpExportNet, mscVrIpBgpIndbRrClusterListTable=mscVrIpBgpIndbRrClusterListTable, mscVrIpBgpExportNetProvEntry=mscVrIpBgpExportNetProvEntry, mscVrIpBgpAggregateNetOspfTag=mscVrIpBgpAggregateNetOspfTag, mscVrIpBgpLocaldbRowStatusEntry=mscVrIpBgpLocaldbRowStatusEntry, mscVrIpBgpLocaldbUnknownAttributes=mscVrIpBgpLocaldbUnknownAttributes, mscVrIpBgpImportLocalPreference=mscVrIpBgpImportLocalPreference, mscVrIpBgpDefaultLocalPreference=mscVrIpBgpDefaultLocalPreference, bgpGroup=bgpGroup, mscVrIpBgpPeerRemovePrivateAs=mscVrIpBgpPeerRemovePrivateAs, mscVrIpBgpAdminState=mscVrIpBgpAdminState, mscVrIpBgpExportBgpAsId=mscVrIpBgpExportBgpAsId, mscVrIpBgpOutdbPrefixIndex=mscVrIpBgpOutdbPrefixIndex, mscVrIpBgpPeerKeepAliveConfigured=mscVrIpBgpPeerKeepAliveConfigured, mscVrIpBgpImportProvEntry=mscVrIpBgpImportProvEntry, mscVrIpBgpExportNetStorageType=mscVrIpBgpExportNetStorageType, mscVrIpBgpAggregatePrefixIndex=mscVrIpBgpAggregatePrefixIndex, mscVrIpBgpLocaldbMultiExitDiscriminator=mscVrIpBgpLocaldbMultiExitDiscriminator, mscVrIpBgpIndbAtomicAggregate=mscVrIpBgpIndbAtomicAggregate, mscVrIpBgpImportStorageType=mscVrIpBgpImportStorageType, mscVrIpBgpImportNetLength=mscVrIpBgpImportNetLength, mscVrIpBgpRouteReflector=mscVrIpBgpRouteReflector, mscVrIpBgpPeerInMsgs=mscVrIpBgpPeerInMsgs, mscVrIpBgpLocaldbNextHop=mscVrIpBgpLocaldbNextHop, mscVrIpBgpImportRowStatus=mscVrIpBgpImportRowStatus, mscVrIpBgpAsProvTable=mscVrIpBgpAsProvTable, mscVrIpBgpExportRowStatus=mscVrIpBgpExportRowStatus, mscVrIpBgpIndbPrefixIndex=mscVrIpBgpIndbPrefixIndex, mscVrIpBgpOutdbOperEntry=mscVrIpBgpOutdbOperEntry, mscVrIpBgpIndbInLocaldb=mscVrIpBgpIndbInLocaldb, mscVrIpBgpOutdbComponentName=mscVrIpBgpOutdbComponentName, mscVrIpBgpExportRowStatusTable=mscVrIpBgpExportRowStatusTable, mscVrIpBgpAs=mscVrIpBgpAs, mscVrIpBgpAggregateNetRowStatusEntry=mscVrIpBgpAggregateNetRowStatusEntry, mscVrIpBgpLocaldbCommunityPath=mscVrIpBgpLocaldbCommunityPath, mscVrIpBgpImportNetRowStatusTable=mscVrIpBgpImportNetRowStatusTable, mscVrIpBgpDefaultMultiExitDisc=mscVrIpBgpDefaultMultiExitDisc, mscVrIpBgpPeerConnectionState=mscVrIpBgpPeerConnectionState, mscVrIpBgpPeerInRoutes=mscVrIpBgpPeerInRoutes, mscVrIpBgpExportProtocol=mscVrIpBgpExportProtocol, mscVrIpBgpOperStatusTable=mscVrIpBgpOperStatusTable, mscVrIpBgpLocaldbRowStatus=mscVrIpBgpLocaldbRowStatus, mscVrIpBgpExportSendMultiExitDiscToEbgp=mscVrIpBgpExportSendMultiExitDiscToEbgp, mscVrIpBgpAdminControlEntry=mscVrIpBgpAdminControlEntry, mscVrIpBgpExportSendCommunity=mscVrIpBgpExportSendCommunity, mscVrIpBgpImportNetPrefix=mscVrIpBgpImportNetPrefix, mscVrIpBgpLocaldbOrigin=mscVrIpBgpLocaldbOrigin, mscVrIpBgpIndbRrClusterListEntry=mscVrIpBgpIndbRrClusterListEntry, mscVrIpBgp=mscVrIpBgp, mscVrIpBgpPeerOutDiscards=mscVrIpBgpPeerOutDiscards, mscVrIpBgpImportNetProvEntry=mscVrIpBgpImportNetProvEntry, mscVrIpBgpLocaldbAggregatorAddr=mscVrIpBgpLocaldbAggregatorAddr, mscVrIpBgpImportNetComponentName=mscVrIpBgpImportNetComponentName, mscVrIpBgpImportExpressPreference=mscVrIpBgpImportExpressPreference, mscVrIpBgpPeerUsageState=mscVrIpBgpPeerUsageState, mscVrIpBgpImportOriginAs=mscVrIpBgpImportOriginAs, mscVrIpBgpIndbNextHop=mscVrIpBgpIndbNextHop, mscVrIpBgpAggregateNetPrefix=mscVrIpBgpAggregateNetPrefix, mscVrIpBgpAsRowStatus=mscVrIpBgpAsRowStatus, mscVrIpBgpIndbRowStatusEntry=mscVrIpBgpIndbRowStatusEntry, mscVrIpBgpOutMsgs=mscVrIpBgpOutMsgs, mscVrIpBgpIndbAsOriginatorId=mscVrIpBgpIndbAsOriginatorId, mscVrIpBgpOutdbRrClusterListValue=mscVrIpBgpOutdbRrClusterListValue, mscVrIpBgpSnmpOperStatus=mscVrIpBgpSnmpOperStatus, mscVrIpBgpIndbLocalPreference=mscVrIpBgpIndbLocalPreference, mscVrIpBgpPeerDefaultInAggMed=mscVrIpBgpPeerDefaultInAggMed, mscVrIpBgpLocaldbLocalPreference=mscVrIpBgpLocaldbLocalPreference, mscVrIpBgpPeerBgpIdentifier=mscVrIpBgpPeerBgpIdentifier, mscVrIpBgpAggregateLengthIndex=mscVrIpBgpAggregateLengthIndex, mscVrIpBgpIndbMultiExitDiscriminator=mscVrIpBgpIndbMultiExitDiscriminator, mscVrIpBgpIndbRrClusterListValue=mscVrIpBgpIndbRrClusterListValue, mscVrIpBgpPeerKeepAliveNegotiated=mscVrIpBgpPeerKeepAliveNegotiated, mscVrIpBgpRouteReflectorCluster=mscVrIpBgpRouteReflectorCluster, mscVrIpBgpExportRipInterface=mscVrIpBgpExportRipInterface, mscVrIpBgpExportNetRowStatusTable=mscVrIpBgpExportNetRowStatusTable, mscVrIpBgpLocaldbRrClusterListEntry=mscVrIpBgpLocaldbRrClusterListEntry, mscVrIpBgpPeerRowStatusEntry=mscVrIpBgpPeerRowStatusEntry, mscVrIpBgpOutdbAsOriginatorId=mscVrIpBgpOutdbAsOriginatorId, mscVrIpBgpOutDiscards=mscVrIpBgpOutDiscards, mscVrIpBgpPeerLocalAddressConfigured=mscVrIpBgpPeerLocalAddressConfigured, mscVrIpBgpOutdbRowStatusEntry=mscVrIpBgpOutdbRowStatusEntry, mscVrIpBgpInErrorMsgs=mscVrIpBgpInErrorMsgs, mscVrIpBgpExportNetRowStatusEntry=mscVrIpBgpExportNetRowStatusEntry, mscVrIpBgpLocaldbRowStatusTable=mscVrIpBgpLocaldbRowStatusTable, mscVrIpBgpLocalAs=mscVrIpBgpLocalAs, mscVrIpBgpExportOspfTag=mscVrIpBgpExportOspfTag, mscVrIpBgpPeerMinAsOrigTime=mscVrIpBgpPeerMinAsOrigTime, mscVrIpBgpImport=mscVrIpBgpImport, mscVrIpBgpImportAsPathExpression=mscVrIpBgpImportAsPathExpression, mscVrIpBgpOperStatusEntry=mscVrIpBgpOperStatusEntry, mscVrIpBgpExportNetRowStatus=mscVrIpBgpExportNetRowStatus, mscVrIpBgpAggregateNetRowStatusTable=mscVrIpBgpAggregateNetRowStatusTable, mscVrIpBgpExportRowStatusEntry=mscVrIpBgpExportRowStatusEntry, mscVrIpBgpAsWeight=mscVrIpBgpAsWeight, mscVrIpBgpLocaldbPeerIndex=mscVrIpBgpLocaldbPeerIndex, mscVrIpBgpOutdb=mscVrIpBgpOutdb, mscVrIpBgpAggregateNetLength=mscVrIpBgpAggregateNetLength, mscVrIpBgpPeerOutUpdates=mscVrIpBgpPeerOutUpdates, mscVrIpBgpAsComponentName=mscVrIpBgpAsComponentName, mscVrIpBgpPeerStateEntry=mscVrIpBgpPeerStateEntry, mscVrIpBgpIndex=mscVrIpBgpIndex, mscVrIpBgpPeerStorageType=mscVrIpBgpPeerStorageType, mscVrIpBgpPeerStateTable=mscVrIpBgpPeerStateTable, mscVrIpBgpExportNetPrefix=mscVrIpBgpExportNetPrefix, bgpGroupCA02A=bgpGroupCA02A, mscVrIpBgpOutdbLengthIndex=mscVrIpBgpOutdbLengthIndex, mscVrIpBgpAggregate=mscVrIpBgpAggregate, bgpMIB=bgpMIB, mscVrIpBgpProvTable=mscVrIpBgpProvTable, mscVrIpBgpAggregateRowStatusEntry=mscVrIpBgpAggregateRowStatusEntry, mscVrIpBgpExportProvTable=mscVrIpBgpExportProvTable, mscVrIpBgpOutdbAggregatorAddr=mscVrIpBgpOutdbAggregatorAddr, mscVrIpBgpExportMultiExitDisc=mscVrIpBgpExportMultiExitDisc, mscVrIpBgpIndbCalcLocalPref=mscVrIpBgpIndbCalcLocalPref, mscVrIpBgpLocaldbRrClusterListTable=mscVrIpBgpLocaldbRrClusterListTable, mscVrIpBgpPeerVersionNegotiated=mscVrIpBgpPeerVersionNegotiated, mscVrIpBgpIndbAggregatorAddr=mscVrIpBgpIndbAggregatorAddr, mscVrIpBgpPeerPeerAs=mscVrIpBgpPeerPeerAs, mscVrIpBgpImportNetIndex=mscVrIpBgpImportNetIndex, mscVrIpBgpExportNetProvTable=mscVrIpBgpExportNetProvTable, mscVrIpBgpOutdbRowStatusTable=mscVrIpBgpOutdbRowStatusTable, mscVrIpBgpOutdbAtomicAggregate=mscVrIpBgpOutdbAtomicAggregate, mscVrIpBgpProvEntry=mscVrIpBgpProvEntry, bgpGroupCA=bgpGroupCA, mscVrIpBgpExportPeerIpAddress=mscVrIpBgpExportPeerIpAddress, mscVrIpBgpLocaldbRrClusterListValue=mscVrIpBgpLocaldbRrClusterListValue, mscVrIpBgpImportOriginProtocol=mscVrIpBgpImportOriginProtocol, mscVrIpBgpIndb=mscVrIpBgpIndb, mscVrIpBgpAggregateRowStatus=mscVrIpBgpAggregateRowStatus, mscVrIpBgpPeerConnectRetryTime=mscVrIpBgpPeerConnectRetryTime, mscVrIpBgpOperationalState=mscVrIpBgpOperationalState, mscVrIpBgpOutdbOrigin=mscVrIpBgpOutdbOrigin, mscVrIpBgpImportUsageFlag=mscVrIpBgpImportUsageFlag, mscVrIpBgpAsRowStatusTable=mscVrIpBgpAsRowStatusTable, bgpCapabilitiesCA=bgpCapabilitiesCA, mscVrIpBgpLocaldbOperEntry=mscVrIpBgpLocaldbOperEntry, mscVrIpBgpImportComponentName=mscVrIpBgpImportComponentName, bgpCapabilitiesCA02A=bgpCapabilitiesCA02A, mscVrIpBgpPeerInErrorMsgs=mscVrIpBgpPeerInErrorMsgs, mscVrIpBgpImportNetProvTable=mscVrIpBgpImportNetProvTable, mscVrIpBgpLocaldbLengthIndex=mscVrIpBgpLocaldbLengthIndex, mscVrIpBgpPeerInErrors=mscVrIpBgpPeerInErrors)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BgpMIB", mscVrIpBgpAggregateRowStatusTable=mscVrIpBgpAggregateRowStatusTable, mscVrIpBgpIndbUnknownAttributes=mscVrIpBgpIndbUnknownAttributes, mscVrIpBgpImportCommunityExpression=mscVrIpBgpImportCommunityExpression, mscVrIpBgpOutdbAsPath=mscVrIpBgpOutdbAsPath, mscVrIpBgpPeer=mscVrIpBgpPeer, mscVrIpBgpPeerProvEntry=mscVrIpBgpPeerProvEntry, mscVrIpBgpAggregateNetAction=mscVrIpBgpAggregateNetAction, mscVrIpBgpOutErrorMsgs=mscVrIpBgpOutErrorMsgs, mscVrIpBgpExportAsPathExpression=mscVrIpBgpExportAsPathExpression, mscVrIpBgpExportEgpAsId=mscVrIpBgpExportEgpAsId, mscVrIpBgpOutdbUnknownAttributes=mscVrIpBgpOutdbUnknownAttributes, mscVrIpBgpExportIndex=mscVrIpBgpExportIndex, mscVrIpBgpLocaldbStorageType=mscVrIpBgpLocaldbStorageType, bgpCapabilitiesCA02=bgpCapabilitiesCA02, mscVrIpBgpOutdbOperTable=mscVrIpBgpOutdbOperTable, mscVrIpBgpAggregateNet=mscVrIpBgpAggregateNet, mscVrIpBgpOperTable=mscVrIpBgpOperTable, mscVrIpBgpAggregateNetProvTable=mscVrIpBgpAggregateNetProvTable, mscVrIpBgpImportRowStatusEntry=mscVrIpBgpImportRowStatusEntry, mscVrIpBgpAsProvEntry=mscVrIpBgpAsProvEntry)
