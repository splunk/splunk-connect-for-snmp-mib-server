#
# PySNMP MIB module HPN-ICF-DOT11-RRM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11-RRM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
HpnicfDot11ObjectIDType, HpnicfDot11ChannelScopeType, hpnicfDot11, HpnicfDot11RadioScopeType, HpnicfDot11RadioType, HpnicfDot11RadioElementIndex, hpnicfDot11APElementIndex, HpnicfDot11SSIDStringType = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "HpnicfDot11ObjectIDType", "HpnicfDot11ChannelScopeType", "hpnicfDot11", "HpnicfDot11RadioScopeType", "HpnicfDot11RadioType", "HpnicfDot11RadioElementIndex", "hpnicfDot11APElementIndex", "HpnicfDot11SSIDStringType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ObjectIdentity, Gauge32, Counter64, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, MibIdentifier, ModuleIdentity, Unsigned32, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Gauge32", "Counter64", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "MibIdentifier", "ModuleIdentity", "Unsigned32", "NotificationType", "Integer32")
DateAndTime, RowStatus, TextualConvention, DisplayString, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "RowStatus", "TextualConvention", "DisplayString", "MacAddress", "TruthValue")
hpnicfDot11RRM = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8))
hpnicfDot11RRM.setRevisions(('2010-09-25 18:00', '2010-02-23 18:00', '2009-08-01 20:00', '2009-05-07 20:00', '2009-04-17 20:00', '2008-07-14 14:29',))
if mibBuilder.loadTexts: hpnicfDot11RRM.setLastUpdated('201009251800Z')
if mibBuilder.loadTexts: hpnicfDot11RRM.setOrganization('')
hpnicfDot11RRMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1))
hpnicfDot11RRMGlobalCfgPara = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1))
hpnicfDot11RRM11nMadtMaxMcs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 76), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11nMadtMaxMcs.setStatus('current')
hpnicfDot11RRM11nSuptMaxMcs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 76)).clone(76)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11nSuptMaxMcs.setStatus('current')
hpnicfDot11RRM11gProtect = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11gProtect.setStatus('current')
hpnicfDot11RRM11aPwrConstrt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11aPwrConstrt.setStatus('current')
hpnicfDot11RRM11aSpectrumManag = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11aSpectrumManag.setStatus('current')
hpnicfDot11RRMAutoChlAvoid11h = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMAutoChlAvoid11h.setStatus('current')
hpnicfDot11RRMScanChl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("all", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMScanChl.setStatus('current')
hpnicfDot11RRMScanRptIntvel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120)).clone(10)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMScanRptIntvel.setStatus('current')
hpnicfDot11APInterfNumThreshhd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APInterfNumThreshhd.setStatus('current')
hpnicfDot11StaInterfNumThreshhd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StaInterfNumThreshhd.setStatus('current')
hpnicfDot11RRM11nMultiCastMcs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 76), ValueRangeConstraint(4294967295, 4294967295), )).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11nMultiCastMcs.setStatus('current')
hpnicfDot11RRM11acMadtMaxNss = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11acMadtMaxNss.setStatus('current')
hpnicfDot11RRM11acSuptMaxNss = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11acSuptMaxNss.setStatus('current')
hpnicfDot11RRM11acMultiCastNss = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11acMultiCastNss.setStatus('current')
hpnicfDot11RRM11acMultiCastVhtMcs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 9), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRM11acMultiCastVhtMcs.setStatus('current')
hpnicfDot11RRMRadioCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2), )
if mibBuilder.loadTexts: hpnicfDot11RRMRadioCfgTable.setStatus('current')
hpnicfDot11RRMRadioCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMRadioType"))
if mibBuilder.loadTexts: hpnicfDot11RRMRadioCfgEntry.setStatus('current')
hpnicfDot11RRMRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 1), HpnicfDot11RadioType())
if mibBuilder.loadTexts: hpnicfDot11RRMRadioType.setStatus('current')
hpnicfDot11RRMCfgChlState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgChlState.setStatus('current')
hpnicfDot11RRMCfgChlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selfDecisive", 1), ("userTriggered", 2))).clone('userTriggered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgChlMode.setStatus('current')
hpnicfDot11RRMChlProntoRadioElmt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMChlProntoRadioElmt.setStatus('current')
hpnicfDot11RRMCfgPwrState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgPwrState.setStatus('current')
hpnicfDot11RRMCfgPwrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selfDecisive", 1), ("userTriggered", 2))).clone('userTriggered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgPwrMode.setStatus('current')
hpnicfDot11RRMPwrProntoRadioElmt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMPwrProntoRadioElmt.setStatus('current')
hpnicfDot11RRMCfgIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 8), Integer32().clone(8)).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgIntrvl.setStatus('current')
hpnicfDot11RRMCfgIntrfThres = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 100)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgIntrfThres.setStatus('current')
hpnicfDot11RRMCfgNoiseThres = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127)).clone(-70)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgNoiseThres.setStatus('current')
hpnicfDot11RRMCfgPERThres = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgPERThres.setStatus('current')
hpnicfDot11RRMCfgToleranceFctr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45)).clone(20)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgToleranceFctr.setStatus('current')
hpnicfDot11RRMCfgAdjacencyFctr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCfgAdjacencyFctr.setStatus('current')
hpnicfDot11RRMAPCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 3), )
if mibBuilder.loadTexts: hpnicfDot11RRMAPCfgTable.setStatus('current')
hpnicfDot11RRMAPCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-REF-MIB", "hpnicfDot11APElementIndex"))
if mibBuilder.loadTexts: hpnicfDot11RRMAPCfgEntry.setStatus('current')
hpnicfDot11RRMAPWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMAPWorkMode.setStatus('current')
hpnicfDot11RRMSDRadioGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 4), )
if mibBuilder.loadTexts: hpnicfDot11RRMSDRadioGroupTable.setStatus('current')
hpnicfDot11RRMSDRadioGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMSDRadioGroupId"))
if mibBuilder.loadTexts: hpnicfDot11RRMSDRadioGroupEntry.setStatus('current')
hpnicfDot11RRMSDRadioGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpnicfDot11RRMSDRadioGroupId.setStatus('current')
hpnicfDot11RRMSDRadioGroupDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 4, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RRMSDRadioGroupDesc.setStatus('current')
hpnicfDot11RRMSDRdGrpChlHolddownTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 4, 1, 3), Unsigned32()).setUnits('minute').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RRMSDRdGrpChlHolddownTm.setStatus('current')
hpnicfDot11RRMSDRdGrpPwrHolddownTm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 4, 1, 4), Unsigned32()).setUnits('minute').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RRMSDRdGrpPwrHolddownTm.setStatus('current')
hpnicfDot11RRMSDRdGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RRMSDRdGroupRowStatus.setStatus('current')
hpnicfDot11RRMAPCfg2Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 5), )
if mibBuilder.loadTexts: hpnicfDot11RRMAPCfg2Table.setStatus('current')
hpnicfDot11RRMAPCfg2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMAPSerialID"))
if mibBuilder.loadTexts: hpnicfDot11RRMAPCfg2Entry.setStatus('current')
hpnicfDot11RRMAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 5, 1, 1), HpnicfDot11ObjectIDType())
if mibBuilder.loadTexts: hpnicfDot11RRMAPSerialID.setStatus('current')
hpnicfDot11RRMAPIntfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMAPIntfThreshold.setStatus('current')
hpnicfDot11RRMStaIntfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMStaIntfThreshold.setStatus('current')
hpnicfDot11RRMCoChlIntfTrapThhd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 5, 1, 4), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMCoChlIntfTrapThhd.setStatus('current')
hpnicfDot11RRMAdjChlIntfTrapThhd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 1, 5, 1, 5), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMAdjChlIntfTrapThhd.setStatus('current')
hpnicfDot11RRMDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2))
hpnicfDot11RRMChlRptTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1), )
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptTable.setStatus('current')
hpnicfDot11RRMChlRptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMRadioIndex"), (0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMChlRptChlNum"))
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptEntry.setStatus('current')
hpnicfDot11RRMRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 1), HpnicfDot11RadioElementIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11RRMRadioIndex.setStatus('current')
hpnicfDot11RRMChlRptChlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptChlNum.setStatus('current')
hpnicfDot11RRMChlRptChlType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primeChannel", 1), ("offChannel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptChlType.setStatus('current')
hpnicfDot11RRMChlRptChlQlty = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("good", 1), ("bad", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptChlQlty.setStatus('current')
hpnicfDot11RRMChlRptNbrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptNbrCnt.setStatus('current')
hpnicfDot11RRMChlRptLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptLoad.setStatus('current')
hpnicfDot11RRMChlRptUtlz = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptUtlz.setStatus('current')
hpnicfDot11RRMChlRptIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptIntrf.setStatus('current')
hpnicfDot11RRMChlRptPER = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptPER.setStatus('current')
hpnicfDot11RRMChlRptRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptRetryRate.setStatus('current')
hpnicfDot11RRMChlRptNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptNoise.setStatus('current')
hpnicfDot11RRMChlRptRadarIndtcr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("detected", 1), ("notDetected", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RRMChlRptRadarIndtcr.setStatus('current')
hpnicfDot11RRMNbrInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2), )
if mibBuilder.loadTexts: hpnicfDot11RRMNbrInfoTable.setStatus('current')
hpnicfDot11RRMNbrInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMRadioIndex"), (0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RrmNbrBSSID"))
if mibBuilder.loadTexts: hpnicfDot11RRMNbrInfoEntry.setStatus('current')
hpnicfDot11RrmNbrBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11RrmNbrBSSID.setStatus('current')
hpnicfDot11RrmNbrChl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2, 1, 2), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RrmNbrChl.setStatus('current')
hpnicfDot11RRMNbrIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMNbrIntrf.setStatus('current')
hpnicfDot11RrmNbrRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RrmNbrRSSI.setStatus('current')
hpnicfDot11RrmNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("managed", 1), ("unmanaged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RrmNbrType.setStatus('current')
hpnicfDot11RrmNbrSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 2, 1, 6), HpnicfDot11SSIDStringType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RrmNbrSSID.setStatus('current')
hpnicfDot11RRMHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3), )
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryTable.setStatus('current')
hpnicfDot11RRMHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMRadioIndex"), (0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMHistoryId"), (0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMHistoryRecIndctr"))
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryEntry.setStatus('current')
hpnicfDot11RRMHistoryId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryId.setStatus('current')
hpnicfDot11RRMHistoryRecIndctr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("before", 1), ("after", 2))))
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryRecIndctr.setStatus('current')
hpnicfDot11RRMHistoryChl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 3), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryChl.setStatus('current')
hpnicfDot11RRMHistoryPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryPwr.setStatus('current')
hpnicfDot11RRMHistoryLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryLoad.setStatus('current')
hpnicfDot11RRMHistoryUtlz = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryUtlz.setStatus('current')
hpnicfDot11RRMHistoryIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryIntrf.setStatus('current')
hpnicfDot11RRMHistoryNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryNoise.setStatus('current')
hpnicfDot11RRMHistoryPER = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryPER.setStatus('current')
hpnicfDot11RRMHistoryRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryRetryRate.setStatus('current')
hpnicfDot11RRMHistoryChgReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 11), Bits().clone(namedValues=NamedValues(("others", 0), ("coverage", 1), ("radar", 2), ("retransmission", 3), ("packetsDiscarded", 4), ("interference", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryChgReason.setStatus('current')
hpnicfDot11RRMHistoryChgDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 3, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMHistoryChgDateTime.setStatus('current')
hpnicfDot11RRMRadioNbrInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 4), )
if mibBuilder.loadTexts: hpnicfDot11RRMRadioNbrInfoTable.setStatus('current')
hpnicfDot11RRMRadioNbrInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMRadioNbrAPID"), (0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMRadioNbrRadioID"))
if mibBuilder.loadTexts: hpnicfDot11RRMRadioNbrInfoEntry.setStatus('current')
hpnicfDot11RRMRadioNbrAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 4, 1, 1), HpnicfDot11ObjectIDType())
if mibBuilder.loadTexts: hpnicfDot11RRMRadioNbrAPID.setStatus('current')
hpnicfDot11RRMRadioNbrRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 4, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11RRMRadioNbrRadioID.setStatus('current')
hpnicfDot11RRMRadioNbrSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 2, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RRMRadioNbrSSID.setStatus('current')
hpnicfDot11RRMNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3))
hpnicfDot11RRMChlQltyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 1))
hpnicfDot11RRMChlQltyNtfPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 1, 0))
hpnicfDot11RRMIntrfLimit = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 1, 0, 1)).setObjects(("HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMChlRptIntrf"))
if mibBuilder.loadTexts: hpnicfDot11RRMIntrfLimit.setStatus('current')
hpnicfDot11RRMPERLimit = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 1, 0, 2)).setObjects(("HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMChlRptPER"))
if mibBuilder.loadTexts: hpnicfDot11RRMPERLimit.setStatus('current')
hpnicfDot11RRMNoiseLimit = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 1, 0, 3)).setObjects(("HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMChlRptNoise"))
if mibBuilder.loadTexts: hpnicfDot11RRMNoiseLimit.setStatus('current')
hpnicfDot11RRMResChgNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 2))
hpnicfDot11RRMResChgNtfPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 2, 0))
hpnicfDot11RRMPowerChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 2, 0, 1)).setObjects(("HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11RRMRadioIndex"), ("HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11NewPower"), ("HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11OldPower"))
if mibBuilder.loadTexts: hpnicfDot11RRMPowerChange.setStatus('current')
hpnicfDot11RRMNotificationsVar = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 3))
hpnicfDot11NewPower = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11NewPower.setStatus('current')
hpnicfDot11OldPower = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 3, 3, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11OldPower.setStatus('current')
hpnicfDot11MonitorDetectedGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4))
hpnicfDot11MonitorDetectedDevTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1), )
if mibBuilder.loadTexts: hpnicfDot11MonitorDetectedDevTable.setStatus('current')
hpnicfDot11MonitorDetectedDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-RRM-MIB", "hpnicfDot11MonitorDevMAC"), (0, "HPN-ICF-DOT11-REF-MIB", "hpnicfDot11APElementIndex"))
if mibBuilder.loadTexts: hpnicfDot11MonitorDetectedDevEntry.setStatus('current')
hpnicfDot11MonitorDevMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDot11MonitorDevMAC.setStatus('current')
hpnicfDot11MonitorDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("client", 1), ("ap", 2), ("adhoc", 3), ("wirelessBridge", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevType.setStatus('current')
hpnicfDot11MonitorDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevVendor.setStatus('current')
hpnicfDot11MonitorDevSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevSSID.setStatus('current')
hpnicfDot11MonitorDevBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevBSSID.setStatus('current')
hpnicfDot11MonitorDevChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 6), HpnicfDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevChannel.setStatus('current')
hpnicfDot11MonitorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 7), HpnicfDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorRadioId.setStatus('current')
hpnicfDot11MonitorDevMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 8), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevMaxRSSI.setStatus('current')
hpnicfDot11MonitorDevBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 9), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevBeaconIntvl.setStatus('current')
hpnicfDot11MonitorDevFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevFstDctTime.setStatus('current')
hpnicfDot11MonitorDevLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevLstDctTime.setStatus('current')
hpnicfDot11MonitorDevClear = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevClear.setStatus('current')
hpnicfDot11MonitorDevSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 8, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11MonitorDevSNR.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11-RRM-MIB", hpnicfDot11RRMRadioNbrSSID=hpnicfDot11RRMRadioNbrSSID, hpnicfDot11RRMResChgNotifications=hpnicfDot11RRMResChgNotifications, hpnicfDot11RRM11aPwrConstrt=hpnicfDot11RRM11aPwrConstrt, hpnicfDot11RRMChlRptEntry=hpnicfDot11RRMChlRptEntry, hpnicfDot11RRMAPCfg2Table=hpnicfDot11RRMAPCfg2Table, hpnicfDot11RRMStaIntfThreshold=hpnicfDot11RRMStaIntfThreshold, hpnicfDot11RRMHistoryTable=hpnicfDot11RRMHistoryTable, hpnicfDot11RRMCfgChlMode=hpnicfDot11RRMCfgChlMode, hpnicfDot11RRMHistoryRetryRate=hpnicfDot11RRMHistoryRetryRate, hpnicfDot11RRMAdjChlIntfTrapThhd=hpnicfDot11RRMAdjChlIntfTrapThhd, hpnicfDot11RRMAPCfgEntry=hpnicfDot11RRMAPCfgEntry, hpnicfDot11NewPower=hpnicfDot11NewPower, hpnicfDot11RRMCfgToleranceFctr=hpnicfDot11RRMCfgToleranceFctr, hpnicfDot11RRMSDRdGrpPwrHolddownTm=hpnicfDot11RRMSDRdGrpPwrHolddownTm, hpnicfDot11RRMDetectGroup=hpnicfDot11RRMDetectGroup, hpnicfDot11RRMPwrProntoRadioElmt=hpnicfDot11RRMPwrProntoRadioElmt, hpnicfDot11RRMNbrIntrf=hpnicfDot11RRMNbrIntrf, hpnicfDot11MonitorDevFstDctTime=hpnicfDot11MonitorDevFstDctTime, hpnicfDot11RRMChlProntoRadioElmt=hpnicfDot11RRMChlProntoRadioElmt, hpnicfDot11MonitorDevBeaconIntvl=hpnicfDot11MonitorDevBeaconIntvl, hpnicfDot11RRMNbrInfoEntry=hpnicfDot11RRMNbrInfoEntry, hpnicfDot11RRMRadioNbrInfoTable=hpnicfDot11RRMRadioNbrInfoTable, hpnicfDot11RRMChlRptIntrf=hpnicfDot11RRMChlRptIntrf, hpnicfDot11RRMSDRdGrpChlHolddownTm=hpnicfDot11RRMSDRdGrpChlHolddownTm, hpnicfDot11RRMAPIntfThreshold=hpnicfDot11RRMAPIntfThreshold, PYSNMP_MODULE_ID=hpnicfDot11RRM, hpnicfDot11RRMIntrfLimit=hpnicfDot11RRMIntrfLimit, hpnicfDot11MonitorDetectedDevEntry=hpnicfDot11MonitorDetectedDevEntry, hpnicfDot11RRMAutoChlAvoid11h=hpnicfDot11RRMAutoChlAvoid11h, hpnicfDot11RRMSDRadioGroupEntry=hpnicfDot11RRMSDRadioGroupEntry, hpnicfDot11RRMCfgIntrfThres=hpnicfDot11RRMCfgIntrfThres, hpnicfDot11RrmNbrChl=hpnicfDot11RrmNbrChl, hpnicfDot11MonitorDevMAC=hpnicfDot11MonitorDevMAC, hpnicfDot11RrmNbrSSID=hpnicfDot11RrmNbrSSID, hpnicfDot11RRM11nMultiCastMcs=hpnicfDot11RRM11nMultiCastMcs, hpnicfDot11RRMChlQltyNtfPrefix=hpnicfDot11RRMChlQltyNtfPrefix, hpnicfDot11RRMChlRptChlNum=hpnicfDot11RRMChlRptChlNum, hpnicfDot11RRMRadioCfgEntry=hpnicfDot11RRMRadioCfgEntry, hpnicfDot11RRMAPCfgTable=hpnicfDot11RRMAPCfgTable, hpnicfDot11RRM11acSuptMaxNss=hpnicfDot11RRM11acSuptMaxNss, hpnicfDot11RRMHistoryId=hpnicfDot11RRMHistoryId, hpnicfDot11RRMCoChlIntfTrapThhd=hpnicfDot11RRMCoChlIntfTrapThhd, hpnicfDot11MonitorDevLstDctTime=hpnicfDot11MonitorDevLstDctTime, hpnicfDot11RRMHistoryChgDateTime=hpnicfDot11RRMHistoryChgDateTime, hpnicfDot11RRMCfgIntrvl=hpnicfDot11RRMCfgIntrvl, hpnicfDot11MonitorDevVendor=hpnicfDot11MonitorDevVendor, hpnicfDot11MonitorDevSNR=hpnicfDot11MonitorDevSNR, hpnicfDot11RRMHistoryLoad=hpnicfDot11RRMHistoryLoad, hpnicfDot11RRMChlRptChlQlty=hpnicfDot11RRMChlRptChlQlty, hpnicfDot11RRMChlRptRetryRate=hpnicfDot11RRMChlRptRetryRate, hpnicfDot11RRMGlobalCfgPara=hpnicfDot11RRMGlobalCfgPara, hpnicfDot11RRMCfgPwrState=hpnicfDot11RRMCfgPwrState, hpnicfDot11RRMHistoryUtlz=hpnicfDot11RRMHistoryUtlz, hpnicfDot11RRMCfgChlState=hpnicfDot11RRMCfgChlState, hpnicfDot11RrmNbrType=hpnicfDot11RrmNbrType, hpnicfDot11RRMAPCfg2Entry=hpnicfDot11RRMAPCfg2Entry, hpnicfDot11RRMCfgNoiseThres=hpnicfDot11RRMCfgNoiseThres, hpnicfDot11StaInterfNumThreshhd=hpnicfDot11StaInterfNumThreshhd, hpnicfDot11RRMRadioNbrRadioID=hpnicfDot11RRMRadioNbrRadioID, hpnicfDot11RRMNotifyGroup=hpnicfDot11RRMNotifyGroup, hpnicfDot11RRMChlRptRadarIndtcr=hpnicfDot11RRMChlRptRadarIndtcr, hpnicfDot11MonitorDetectedDevTable=hpnicfDot11MonitorDetectedDevTable, hpnicfDot11RRMChlQltyNotifications=hpnicfDot11RRMChlQltyNotifications, hpnicfDot11RRMScanRptIntvel=hpnicfDot11RRMScanRptIntvel, hpnicfDot11RrmNbrRSSI=hpnicfDot11RrmNbrRSSI, hpnicfDot11RrmNbrBSSID=hpnicfDot11RrmNbrBSSID, hpnicfDot11RRMChlRptPER=hpnicfDot11RRMChlRptPER, hpnicfDot11RRMResChgNtfPrefix=hpnicfDot11RRMResChgNtfPrefix, hpnicfDot11RRMNoiseLimit=hpnicfDot11RRMNoiseLimit, hpnicfDot11RRMSDRdGroupRowStatus=hpnicfDot11RRMSDRdGroupRowStatus, hpnicfDot11MonitorDevBSSID=hpnicfDot11MonitorDevBSSID, hpnicfDot11RRMChlRptNbrCnt=hpnicfDot11RRMChlRptNbrCnt, hpnicfDot11RRMRadioNbrAPID=hpnicfDot11RRMRadioNbrAPID, hpnicfDot11RRMHistoryChgReason=hpnicfDot11RRMHistoryChgReason, hpnicfDot11RRMHistoryNoise=hpnicfDot11RRMHistoryNoise, hpnicfDot11RRMSDRadioGroupTable=hpnicfDot11RRMSDRadioGroupTable, hpnicfDot11RRMHistoryEntry=hpnicfDot11RRMHistoryEntry, hpnicfDot11RRMNotificationsVar=hpnicfDot11RRMNotificationsVar, hpnicfDot11RRMChlRptChlType=hpnicfDot11RRMChlRptChlType, hpnicfDot11MonitorDevSSID=hpnicfDot11MonitorDevSSID, hpnicfDot11RRM11gProtect=hpnicfDot11RRM11gProtect, hpnicfDot11RRMAPSerialID=hpnicfDot11RRMAPSerialID, hpnicfDot11RRM11aSpectrumManag=hpnicfDot11RRM11aSpectrumManag, hpnicfDot11RRMSDRadioGroupId=hpnicfDot11RRMSDRadioGroupId, hpnicfDot11RRM11nSuptMaxMcs=hpnicfDot11RRM11nSuptMaxMcs, hpnicfDot11MonitorDevType=hpnicfDot11MonitorDevType, hpnicfDot11RRMChlRptUtlz=hpnicfDot11RRMChlRptUtlz, hpnicfDot11RRMHistoryPER=hpnicfDot11RRMHistoryPER, hpnicfDot11MonitorDevMaxRSSI=hpnicfDot11MonitorDevMaxRSSI, hpnicfDot11RRMRadioType=hpnicfDot11RRMRadioType, hpnicfDot11RRMNbrInfoTable=hpnicfDot11RRMNbrInfoTable, hpnicfDot11RRMConfigGroup=hpnicfDot11RRMConfigGroup, hpnicfDot11RRMCfgPERThres=hpnicfDot11RRMCfgPERThres, hpnicfDot11MonitorRadioId=hpnicfDot11MonitorRadioId, hpnicfDot11RRMScanChl=hpnicfDot11RRMScanChl, hpnicfDot11RRM11acMadtMaxNss=hpnicfDot11RRM11acMadtMaxNss, hpnicfDot11RRM11acMultiCastVhtMcs=hpnicfDot11RRM11acMultiCastVhtMcs, hpnicfDot11RRMPERLimit=hpnicfDot11RRMPERLimit, hpnicfDot11RRMCfgPwrMode=hpnicfDot11RRMCfgPwrMode, hpnicfDot11OldPower=hpnicfDot11OldPower, hpnicfDot11RRM11nMadtMaxMcs=hpnicfDot11RRM11nMadtMaxMcs, hpnicfDot11RRMChlRptTable=hpnicfDot11RRMChlRptTable, hpnicfDot11RRMSDRadioGroupDesc=hpnicfDot11RRMSDRadioGroupDesc, hpnicfDot11MonitorDetectedGroup=hpnicfDot11MonitorDetectedGroup, hpnicfDot11RRMRadioNbrInfoEntry=hpnicfDot11RRMRadioNbrInfoEntry, hpnicfDot11RRM11acMultiCastNss=hpnicfDot11RRM11acMultiCastNss, hpnicfDot11MonitorDevChannel=hpnicfDot11MonitorDevChannel, hpnicfDot11RRMChlRptLoad=hpnicfDot11RRMChlRptLoad, hpnicfDot11RRMHistoryPwr=hpnicfDot11RRMHistoryPwr, hpnicfDot11RRMCfgAdjacencyFctr=hpnicfDot11RRMCfgAdjacencyFctr, hpnicfDot11RRMAPWorkMode=hpnicfDot11RRMAPWorkMode, hpnicfDot11RRMHistoryIntrf=hpnicfDot11RRMHistoryIntrf, hpnicfDot11RRMHistoryRecIndctr=hpnicfDot11RRMHistoryRecIndctr, hpnicfDot11RRMRadioCfgTable=hpnicfDot11RRMRadioCfgTable, hpnicfDot11RRMRadioIndex=hpnicfDot11RRMRadioIndex, hpnicfDot11RRM=hpnicfDot11RRM, hpnicfDot11MonitorDevClear=hpnicfDot11MonitorDevClear, hpnicfDot11RRMPowerChange=hpnicfDot11RRMPowerChange, hpnicfDot11RRMChlRptNoise=hpnicfDot11RRMChlRptNoise, hpnicfDot11RRMHistoryChl=hpnicfDot11RRMHistoryChl, hpnicfDot11APInterfNumThreshhd=hpnicfDot11APInterfNumThreshhd)
