#
# PySNMP MIB module WWP-LEOS-SYSTEM-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-SYSTEM-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
dot1dStpPort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dStpPort")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, iso, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, NotificationType, Counter64, Bits, Integer32, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "iso", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "NotificationType", "Counter64", "Bits", "Integer32", "MibIdentifier", "Counter32")
TruthValue, MacAddress, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "RowStatus", "TextualConvention", "DisplayString")
wwpModulesLeos, wwpModules = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos", "wwpModules")
wwpLeosSysCtrlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25))
wwpLeosSysCtrlMIB.setRevisions(('2006-03-15 18:55', '2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpLeosSysCtrlMIB.setLastUpdated('200603151855Z')
if mibBuilder.loadTexts: wwpLeosSysCtrlMIB.setOrganization('World Wide Packets, Inc')
wwpLeosSysCtrlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1))
wwpLeosSysCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1, 1))
wwpLeosSysCtrlLldpExt = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1, 2))
wwpLeosSysCtrlMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 2))
wwpLeosSysCtrlMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 2, 0))
wwpLeosSysCtrlMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 3))
wwpLeosSysCtrlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 3, 1))
wwpLeosSysCtrlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 3, 2))
wwpLeosSysCtrlBridgeRstpEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSysCtrlBridgeRstpEnable.setStatus('current')
wwpLeosSysCtrlLacpEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSysCtrlLacpEnable.setStatus('current')
wwpLeosSysCtrlLldpState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknwon", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSysCtrlLldpState.setStatus('current')
wwpLeosSysCtrlLldpDaMac = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1, 2, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSysCtrlLldpDaMac.setStatus('current')
wwpLeosSysCtrlLldpEthType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 25, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSysCtrlLldpEthType.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-SYSTEM-CONTROL-MIB", PYSNMP_MODULE_ID=wwpLeosSysCtrlMIB, wwpLeosSysCtrlBridgeRstpEnable=wwpLeosSysCtrlBridgeRstpEnable, wwpLeosSysCtrl=wwpLeosSysCtrl, wwpLeosSysCtrlLldpExt=wwpLeosSysCtrlLldpExt, wwpLeosSysCtrlLldpEthType=wwpLeosSysCtrlLldpEthType, wwpLeosSysCtrlMIBNotificationPrefix=wwpLeosSysCtrlMIBNotificationPrefix, wwpLeosSysCtrlMIBGroups=wwpLeosSysCtrlMIBGroups, wwpLeosSysCtrlMIB=wwpLeosSysCtrlMIB, wwpLeosSysCtrlMIBNotifications=wwpLeosSysCtrlMIBNotifications, wwpLeosSysCtrlLldpState=wwpLeosSysCtrlLldpState, wwpLeosSysCtrlLldpDaMac=wwpLeosSysCtrlLldpDaMac, wwpLeosSysCtrlMIBCompliances=wwpLeosSysCtrlMIBCompliances, wwpLeosSysCtrlMIBConformance=wwpLeosSysCtrlMIBConformance, wwpLeosSysCtrlLacpEnable=wwpLeosSysCtrlLacpEnable, wwpLeosSysCtrlMIBObjects=wwpLeosSysCtrlMIBObjects)
