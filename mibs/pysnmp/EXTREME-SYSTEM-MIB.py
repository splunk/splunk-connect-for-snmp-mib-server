#
# PySNMP MIB module EXTREME-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:53:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
PortList, extremeAgent = mibBuilder.importSymbols("EXTREME-BASE-MIB", "PortList", "extremeAgent")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, Counter64, Counter32, NotificationType, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32", "NotificationType", "Integer32", "IpAddress")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
extremeSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 1))
if mibBuilder.loadTexts: extremeSystem.setLastUpdated('0007240000Z')
if mibBuilder.loadTexts: extremeSystem.setOrganization('Extreme Networks, Inc.')
extremeSystemCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1))
extremeSaveConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("saveToPrimary", 1), ("saveToSecondary", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSaveConfiguration.setStatus('current')
extremeSaveStatus = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("saveInProgress", 1), ("saveNotInProgress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSaveStatus.setStatus('current')
extremeCurrentConfigInUse = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeCurrentConfigInUse.setStatus('current')
extremeConfigToUseOnReboot = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeConfigToUseOnReboot.setStatus('current')
extremeOverTemperatureAlarm = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeOverTemperatureAlarm.setStatus('current')
extremeCurrentTemperature = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeCurrentTemperature.setStatus('current')
extremeFanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 9), )
if mibBuilder.loadTexts: extremeFanStatusTable.setStatus('current')
extremeFanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 9, 1), ).setIndexNames((0, "EXTREME-SYSTEM-MIB", "extremeFanNumber"))
if mibBuilder.loadTexts: extremeFanStatusEntry.setStatus('current')
extremeFanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeFanNumber.setStatus('current')
extremeFanOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 9, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeFanOperational.setStatus('current')
extremeFanEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeFanEntPhysicalIndex.setStatus('current')
extremePrimaryPowerOperational = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePrimaryPowerOperational.setStatus('current')
extremeRedundantPowerStatus = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPresent", 1), ("presentOK", 2), ("presentNotOK", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeRedundantPowerStatus.setStatus('current')
extremeRedundantPowerAlarm = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeRedundantPowerAlarm.setStatus('current')
extremePrimarySoftwareRev = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePrimarySoftwareRev.setStatus('current')
extremeSecondarySoftwareRev = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSecondarySoftwareRev.setStatus('current')
extremeImageToUseOnReboot = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeImageToUseOnReboot.setStatus('current')
extremeSystemID = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSystemID.setStatus('current')
extremeSystemBoardID = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSystemBoardID.setStatus('current')
extremeSystemLeftBoardID = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSystemLeftBoardID.setStatus('current')
extremeSystemRightBoardID = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSystemRightBoardID.setStatus('current')
extremeInputPowerVoltage = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v110", 1), ("v220", 2), ("v48DC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeInputPowerVoltage.setStatus('current')
extremePowerStatus = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPresent", 1), ("presentOK", 2), ("presentNotOK", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePowerStatus.setStatus('current')
extremePowerAlarm = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePowerAlarm.setStatus('current')
extremeRmonEnable = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 23), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeRmonEnable.setStatus('current')
extremeBootROMVersion = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeBootROMVersion.setStatus('current')
extremeDot1dTpFdbTableEnable = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 26), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeDot1dTpFdbTableEnable.setStatus('current')
extremePowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 27), )
if mibBuilder.loadTexts: extremePowerSupplyTable.setStatus('current')
extremePowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 27, 1), ).setIndexNames((0, "EXTREME-SYSTEM-MIB", "extremePowerSupplyNumber"))
if mibBuilder.loadTexts: extremePowerSupplyEntry.setStatus('current')
extremePowerSupplyNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 27, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremePowerSupplyNumber.setStatus('current')
extremePowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 27, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPresent", 1), ("presentOK", 2), ("presentNotOK", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePowerSupplyStatus.setStatus('current')
extremePowerSupplyInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("v110", 1), ("v220", 2), ("v48DC", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePowerSupplyInputVoltage.setStatus('current')
extremePowerSupplySerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 27, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePowerSupplySerialNumber.setStatus('current')
extremePowerSupplyEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 27, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePowerSupplyEntPhysicalIndex.setStatus('current')
extremeCpuAggregateUtilization = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeCpuAggregateUtilization.setStatus('current')
extremeCpuTask2Table = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29), )
if mibBuilder.loadTexts: extremeCpuTask2Table.setStatus('current')
extremeCpuTask2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1), ).setIndexNames((0, "EXTREME-SYSTEM-MIB", "extremeCpuTask2CpuId"), (0, "EXTREME-SYSTEM-MIB", "extremeCpuTask2Name"))
if mibBuilder.loadTexts: extremeCpuTask2Entry.setStatus('current')
extremeCpuTask2CpuId = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1, 1), Unsigned32())
if mibBuilder.loadTexts: extremeCpuTask2CpuId.setStatus('current')
extremeCpuTask2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: extremeCpuTask2Name.setStatus('current')
extremeCpuTask2Id = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeCpuTask2Id.setStatus('current')
extremeCpuTask2Pc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeCpuTask2Pc.setStatus('current')
extremeCpuTask2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeCpuTask2Status.setStatus('current')
extremeCpuTask2Utilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeCpuTask2Utilization.setStatus('current')
extremeCpuTask2MaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 29, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeCpuTask2MaxUtilization.setStatus('current')
extremeAuthFailSrcAddr = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 30), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeAuthFailSrcAddr.setStatus('current')
extremeCpuTransmitPriority = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("high", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeCpuTransmitPriority.setStatus('deprecated')
extremeImageBooted = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageBooted.setStatus('current')
extremeMsmFailoverCause = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("never", 1), ("admin", 2), ("exception", 3), ("removal", 4), ("hwFailure", 5), ("watchdog", 6), ("keepalive", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMsmFailoverCause.setStatus('current')
extremeImageTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34), )
if mibBuilder.loadTexts: extremeImageTable.setStatus('current')
extremeImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1), ).setIndexNames((0, "EXTREME-SYSTEM-MIB", "extremeImageNumber"))
if mibBuilder.loadTexts: extremeImageEntry.setStatus('current')
extremeImageNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cur", 0), ("pri", 1), ("sec", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageNumber.setStatus('current')
extremeMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMajorVersion.setStatus('current')
extremeSubMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSubMajorVersion.setStatus('deprecated')
extremeMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMinorVersion.setStatus('current')
extremeBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeBuildNumber.setStatus('current')
extremeTechnologyReleaseNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTechnologyReleaseNumber.setStatus('current')
extremeSustainingReleaseNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSustainingReleaseNumber.setStatus('current')
extremeBranchRevisionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeBranchRevisionNumber.setStatus('current')
extremeImageType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("trunk", 0), ("branch", 1), ("patch", 2), ("technology", 3), ("beta", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageType.setStatus('current')
extremeImageDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageDescription.setStatus('current')
extremeImageSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("nossh", 1), ("ssh", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageSecurity.setStatus('deprecated')
extremePatchVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 34, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremePatchVersion.setStatus('current')
extremeImageFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 35), )
if mibBuilder.loadTexts: extremeImageFeatureTable.setStatus('current')
extremeImageFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 35, 1), ).setIndexNames((0, "EXTREME-SYSTEM-MIB", "extremeImageFeatureNumber"))
if mibBuilder.loadTexts: extremeImageFeatureEntry.setStatus('current')
extremeImageFeatureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 35, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cur", 0), ("pri", 1), ("sec", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageFeatureNumber.setStatus('current')
extremeImageSshCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 35, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("nossh", 1), ("ssh", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageSshCapability.setStatus('current')
extremeImageUAACapability = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 1, 35, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("nouaa", 1), ("uaa", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeImageUAACapability.setStatus('current')
extremeChassisGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2))
extremeMasterMSMSlot = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeMasterMSMSlot.setStatus('current')
extremeChassisPortsPerSlot = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeChassisPortsPerSlot.setStatus('current')
extremeSlotTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2), )
if mibBuilder.loadTexts: extremeSlotTable.setStatus('current')
extremeSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2, 1), ).setIndexNames((0, "EXTREME-SYSTEM-MIB", "extremeSlotNumber"))
if mibBuilder.loadTexts: extremeSlotEntry.setStatus('current')
extremeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSlotNumber.setStatus('current')
extremeSlotName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSlotName.setStatus('current')
extremeSlotModuleConfiguredType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50, 51, 52, 53, 54, 101, 102, 103, 104, 105, 106, 107, 108, 200, 201))).clone(namedValues=NamedValues(("none", 1), ("fe32", 2), ("g4x", 3), ("g6x", 4), ("fe32fx", 5), ("f48ti", 7), ("g8xi", 8), ("g8ti", 9), ("g12sxi", 10), ("g12ti", 11), ("fm32t", 21), ("gm4x", 22), ("gm4sx", 23), ("gm4t", 24), ("wdm8", 25), ("fm24f", 26), ("fm24sf", 27), ("fm24te", 28), ("f96ti", 29), ("wdm4", 30), ("f32fi", 31), ("tenGx3", 32), ("tenGigLR", 33), ("g16x3", 34), ("g24t3", 35), ("gm16x3", 36), ("gm16t3", 37), ("fm16t3", 38), ("fm32p", 39), ("fm8v", 50), ("wm4t1", 51), ("wm4t3", 52), ("wm1t3", 53), ("wm4e1", 54), ("p3c", 101), ("p12c", 102), ("arm", 103), ("mpls", 104), ("sma", 105), ("p48c", 106), ("a3c", 107), ("a12c", 108), ("pxm", 200), ("s300fixed", 201)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSlotModuleConfiguredType.setStatus('current')
extremeSlotModuleInsertedType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50, 51, 52, 53, 54, 55, 101, 102, 103, 104, 105, 106, 107, 108, 200, 201, 202))).clone(namedValues=NamedValues(("none", 1), ("fe32", 2), ("g4x", 3), ("g6x", 4), ("fe32fx", 5), ("msm", 6), ("f48ti", 7), ("g8xi", 8), ("g8ti", 9), ("g12sxi", 10), ("g12ti", 11), ("msm64i", 18), ("alpine3808", 19), ("alpine3804", 20), ("fm32t", 21), ("gm4x", 22), ("gm4sx", 23), ("gm4t", 24), ("wdm8", 25), ("fm24f", 26), ("fm24sf", 27), ("fm24te", 28), ("f96ti", 29), ("wdm4", 30), ("f32fi", 31), ("tenGx3", 32), ("tenGigLR", 33), ("g16x3", 34), ("g24t3", 35), ("gm16x3", 36), ("gm16t3", 37), ("fm16t3", 38), ("fm32p", 39), ("fm8v", 50), ("wm4t1", 51), ("wm4t3", 52), ("wm1t3", 53), ("wm4e1", 54), ("alpine3802", 55), ("p3c", 101), ("p12c", 102), ("arm", 103), ("mpls", 104), ("sma", 105), ("p48c", 106), ("a3c", 107), ("a12c", 108), ("pxm", 200), ("s300fixed", 201), ("msm3", 202)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSlotModuleInsertedType.setStatus('current')
extremeSlotModuleState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 100))).clone(namedValues=NamedValues(("notPresent", 1), ("testing", 2), ("mismatch", 3), ("failed", 4), ("operational", 5), ("powerdown", 6), ("unknown", 7), ("present", 8), ("poweron", 9), ("post", 10), ("downloading", 11), ("booting", 12), ("offline", 13), ("initializing", 14), ("invalid", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSlotModuleState.setStatus('current')
extremeSlotModuleSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 1, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeSlotModuleSerialNumber.setStatus('current')
extremeSystemHealthCheck = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 1, 3))
extremeHealthCheckErrorType = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("cpuPacket", 2), ("backplane", 3), ("hardwareFail", 4), ("pbusChecksum", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeHealthCheckErrorType.setStatus('current')
extremeHealthCheckAction = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("syslogOnly", 1), ("healthCheckTrap", 2), ("ioModuleDown", 3), ("systemDown", 4), ("autoRecovery", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeHealthCheckAction.setStatus('current')
extremeHealthCheckMaxRetries = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeHealthCheckMaxRetries.setStatus('current')
extremeSystemThresholds = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 1, 4))
extremeCpuUtilRisingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeCpuUtilRisingThreshold.setStatus('current')
extremeCpuTaskUtilPair = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 1, 4, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeCpuTaskUtilPair.setStatus('current')
mibBuilder.exportSymbols("EXTREME-SYSTEM-MIB", extremeImageFeatureNumber=extremeImageFeatureNumber, extremeFanOperational=extremeFanOperational, extremePowerAlarm=extremePowerAlarm, extremeSlotTable=extremeSlotTable, extremeSystemLeftBoardID=extremeSystemLeftBoardID, extremeImageEntry=extremeImageEntry, extremeCurrentConfigInUse=extremeCurrentConfigInUse, extremeFanEntPhysicalIndex=extremeFanEntPhysicalIndex, extremeRmonEnable=extremeRmonEnable, extremeSystemHealthCheck=extremeSystemHealthCheck, extremeImageUAACapability=extremeImageUAACapability, extremeRedundantPowerAlarm=extremeRedundantPowerAlarm, extremePowerSupplyInputVoltage=extremePowerSupplyInputVoltage, extremeCpuTask2Status=extremeCpuTask2Status, extremeTechnologyReleaseNumber=extremeTechnologyReleaseNumber, extremeCpuTask2Id=extremeCpuTask2Id, extremeOverTemperatureAlarm=extremeOverTemperatureAlarm, extremeFanNumber=extremeFanNumber, extremeAuthFailSrcAddr=extremeAuthFailSrcAddr, extremeMinorVersion=extremeMinorVersion, extremeCpuTask2CpuId=extremeCpuTask2CpuId, extremeImageToUseOnReboot=extremeImageToUseOnReboot, extremeCpuTask2Table=extremeCpuTask2Table, extremeSlotNumber=extremeSlotNumber, extremeFanStatusEntry=extremeFanStatusEntry, extremeImageSecurity=extremeImageSecurity, extremeImageSshCapability=extremeImageSshCapability, extremeImageNumber=extremeImageNumber, extremePrimarySoftwareRev=extremePrimarySoftwareRev, extremeBootROMVersion=extremeBootROMVersion, extremePowerStatus=extremePowerStatus, extremeCpuTask2MaxUtilization=extremeCpuTask2MaxUtilization, extremeBranchRevisionNumber=extremeBranchRevisionNumber, extremeHealthCheckMaxRetries=extremeHealthCheckMaxRetries, extremePowerSupplyNumber=extremePowerSupplyNumber, extremeBuildNumber=extremeBuildNumber, extremeSlotEntry=extremeSlotEntry, extremeDot1dTpFdbTableEnable=extremeDot1dTpFdbTableEnable, extremeImageFeatureTable=extremeImageFeatureTable, extremePowerSupplyStatus=extremePowerSupplyStatus, extremeCpuTaskUtilPair=extremeCpuTaskUtilPair, extremeCurrentTemperature=extremeCurrentTemperature, extremeSystem=extremeSystem, extremeCpuUtilRisingThreshold=extremeCpuUtilRisingThreshold, extremeMajorVersion=extremeMajorVersion, extremeRedundantPowerStatus=extremeRedundantPowerStatus, extremeSystemThresholds=extremeSystemThresholds, extremeCpuTask2Utilization=extremeCpuTask2Utilization, extremeConfigToUseOnReboot=extremeConfigToUseOnReboot, extremeImageFeatureEntry=extremeImageFeatureEntry, extremeChassisPortsPerSlot=extremeChassisPortsPerSlot, extremeCpuTask2Name=extremeCpuTask2Name, extremeImageBooted=extremeImageBooted, extremeSlotModuleState=extremeSlotModuleState, extremeImageType=extremeImageType, extremeSystemRightBoardID=extremeSystemRightBoardID, extremeSaveConfiguration=extremeSaveConfiguration, extremeFanStatusTable=extremeFanStatusTable, extremeSlotName=extremeSlotName, extremeSlotModuleConfiguredType=extremeSlotModuleConfiguredType, extremeCpuTask2Pc=extremeCpuTask2Pc, extremeSlotModuleInsertedType=extremeSlotModuleInsertedType, extremeHealthCheckErrorType=extremeHealthCheckErrorType, extremeSystemCommon=extremeSystemCommon, extremeSystemBoardID=extremeSystemBoardID, extremeCpuTransmitPriority=extremeCpuTransmitPriority, PYSNMP_MODULE_ID=extremeSystem, extremeCpuAggregateUtilization=extremeCpuAggregateUtilization, extremePowerSupplyEntPhysicalIndex=extremePowerSupplyEntPhysicalIndex, extremeSecondarySoftwareRev=extremeSecondarySoftwareRev, extremePowerSupplyEntry=extremePowerSupplyEntry, extremeHealthCheckAction=extremeHealthCheckAction, extremePrimaryPowerOperational=extremePrimaryPowerOperational, extremeInputPowerVoltage=extremeInputPowerVoltage, extremeMsmFailoverCause=extremeMsmFailoverCause, extremeImageDescription=extremeImageDescription, extremeImageTable=extremeImageTable, extremeSaveStatus=extremeSaveStatus, extremeCpuTask2Entry=extremeCpuTask2Entry, extremeSubMajorVersion=extremeSubMajorVersion, extremeSystemID=extremeSystemID, extremeSlotModuleSerialNumber=extremeSlotModuleSerialNumber, extremePatchVersion=extremePatchVersion, extremeChassisGroup=extremeChassisGroup, extremePowerSupplyTable=extremePowerSupplyTable, extremePowerSupplySerialNumber=extremePowerSupplySerialNumber, extremeMasterMSMSlot=extremeMasterMSMSlot, extremeSustainingReleaseNumber=extremeSustainingReleaseNumber)
