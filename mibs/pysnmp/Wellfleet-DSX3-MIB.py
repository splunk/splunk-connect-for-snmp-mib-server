#
# PySNMP MIB module Wellfleet-DSX3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DSX3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, iso, NotificationType, Unsigned32, ModuleIdentity, MibIdentifier, Integer32, Gauge32, Bits, TimeTicks, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "iso", "NotificationType", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Integer32", "Gauge32", "Bits", "TimeTicks", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfDsx3Group, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDsx3Group")
wfDsx3ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1), )
if mibBuilder.loadTexts: wfDsx3ConfigTable.setStatus('mandatory')
wfDsx3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3LineIndex"))
if mibBuilder.loadTexts: wfDsx3ConfigEntry.setStatus('mandatory')
wfDsx3LineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3LineIndex.setStatus('mandatory')
wfDsx3IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IfIndex.setStatus('mandatory')
wfDsx3TimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TimeElapsed.setStatus('mandatory')
wfDsx3ValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3ValidIntervals.setStatus('mandatory')
wfDsx3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ds3other", 1), ("ds3m23", 2), ("ds3syntran", 3), ("ds3cbitparity", 4), ("ds3clearchannel", 5), ("e3other", 6), ("e3framed", 7), ("e3plcp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3LineType.setStatus('mandatory')
wfDsx3LineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("b3zs", 2), ("hdb3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3LineCoding.setStatus('mandatory')
wfDsx3SendCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("nocode", 1), ("linecode", 2), ("payloadcode", 3), ("resetcode", 4), ("ds1loopcode", 5), ("testpattern", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3SendCode.setStatus('mandatory')
wfDsx3CircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CircuitIdentifier.setStatus('mandatory')
wfDsx3LoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noloop", 1), ("payloadloop", 2), ("lineloop", 3), ("otherloop", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3LoopbackConfig.setStatus('mandatory')
wfDsx3LineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512))).clone(namedValues=NamedValues(("noalarm", 1), ("rcrai", 2), ("txrai", 4), ("rcais", 8), ("txais", 16), ("lof", 32), ("los", 64), ("loopback", 128), ("rctestcode", 256), ("otherfailure", 512)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3LineStatus.setStatus('mandatory')
wfDsx3TransmitClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("looptiming", 1), ("localtiming", 2), ("throughtiming", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TransmitClockSource.setStatus('mandatory')
wfDsx3CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2), )
if mibBuilder.loadTexts: wfDsx3CurrentTable.setStatus('mandatory')
wfDsx3CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3CurrentIndex"))
if mibBuilder.loadTexts: wfDsx3CurrentEntry.setStatus('mandatory')
wfDsx3CurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentIndex.setStatus('mandatory')
wfDsx3CurrentPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentPESs.setStatus('mandatory')
wfDsx3CurrentPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentPSESs.setStatus('mandatory')
wfDsx3CurrentSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentSEFSs.setStatus('mandatory')
wfDsx3CurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentUASs.setStatus('mandatory')
wfDsx3CurrentLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentLCVs.setStatus('mandatory')
wfDsx3CurrentPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentPCVs.setStatus('mandatory')
wfDsx3CurrentLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentLESs.setStatus('mandatory')
wfDsx3CurrentCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentCCVs.setStatus('mandatory')
wfDsx3CurrentCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentCESs.setStatus('mandatory')
wfDsx3CurrentCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentCSESs.setStatus('mandatory')
wfDsx3CurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentSASs.setStatus('mandatory')
wfDsx3CurrentAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentAISSs.setStatus('mandatory')
wfDsx3CurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentFCs.setStatus('mandatory')
wfDsx3CurrentTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentTimeElapsed.setStatus('mandatory')
wfDsx3CurrentValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentValidIntervals.setStatus('mandatory')
wfDsx3CurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3CurrentValidFlag.setStatus('mandatory')
wfDsx3IntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3), )
if mibBuilder.loadTexts: wfDsx3IntervalTable.setStatus('mandatory')
wfDsx3IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3IntervalIndex"), (0, "Wellfleet-DSX3-MIB", "wfDsx3IntervalNumber"))
if mibBuilder.loadTexts: wfDsx3IntervalEntry.setStatus('mandatory')
wfDsx3IntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalIndex.setStatus('mandatory')
wfDsx3IntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalNumber.setStatus('mandatory')
wfDsx3IntervalPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalPESs.setStatus('mandatory')
wfDsx3IntervalPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalPSESs.setStatus('mandatory')
wfDsx3IntervalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalSEFSs.setStatus('mandatory')
wfDsx3IntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalUASs.setStatus('mandatory')
wfDsx3IntervalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalLCVs.setStatus('mandatory')
wfDsx3IntervalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalPCVs.setStatus('mandatory')
wfDsx3IntervalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalLESs.setStatus('mandatory')
wfDsx3IntervalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalCCVs.setStatus('mandatory')
wfDsx3IntervalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalCESs.setStatus('mandatory')
wfDsx3IntervalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalCSESs.setStatus('mandatory')
wfDsx3IntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalSASs.setStatus('mandatory')
wfDsx3IntervalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalAISSs.setStatus('mandatory')
wfDsx3IntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalFCs.setStatus('mandatory')
wfDsx3IntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3IntervalValidFlag.setStatus('mandatory')
wfDsx3TotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4), )
if mibBuilder.loadTexts: wfDsx3TotalTable.setStatus('mandatory')
wfDsx3TotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3TotalIndex"))
if mibBuilder.loadTexts: wfDsx3TotalEntry.setStatus('mandatory')
wfDsx3TotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalIndex.setStatus('mandatory')
wfDsx3TotalPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalPESs.setStatus('mandatory')
wfDsx3TotalPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalPSESs.setStatus('mandatory')
wfDsx3TotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalSEFSs.setStatus('mandatory')
wfDsx3TotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalUASs.setStatus('mandatory')
wfDsx3TotalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalLCVs.setStatus('mandatory')
wfDsx3TotalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalPCVs.setStatus('mandatory')
wfDsx3TotalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalLESs.setStatus('mandatory')
wfDsx3TotalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalCCVs.setStatus('mandatory')
wfDsx3TotalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalCESs.setStatus('mandatory')
wfDsx3TotalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalCSESs.setStatus('mandatory')
wfDsx3TotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalSASs.setStatus('mandatory')
wfDsx3TotalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalAISSs.setStatus('mandatory')
wfDsx3TotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalFCs.setStatus('mandatory')
wfDsx3TotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3TotalValidFlag.setStatus('mandatory')
wfDsx3FarEndConfigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5), )
if mibBuilder.loadTexts: wfDsx3FarEndConfigTable.setStatus('mandatory')
wfDsx3FarEndConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndLineIndex"))
if mibBuilder.loadTexts: wfDsx3FarEndConfigEntry.setStatus('mandatory')
wfDsx3FarEndLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndLineIndex.setStatus('mandatory')
wfDsx3FarEndEquipCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndEquipCode.setStatus('mandatory')
wfDsx3FarEndLocationIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndLocationIDCode.setStatus('mandatory')
wfDsx3FarEndFrameIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndFrameIDCode.setStatus('mandatory')
wfDsx3FarEndUnitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndUnitCode.setStatus('mandatory')
wfDsx3FarEndFacilityIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndFacilityIDCode.setStatus('mandatory')
wfDsx3FarEndCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6), )
if mibBuilder.loadTexts: wfDsx3FarEndCurrentTable.setStatus('mandatory')
wfDsx3FarEndCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndCurrentIndex"))
if mibBuilder.loadTexts: wfDsx3FarEndCurrentEntry.setStatus('mandatory')
wfDsx3FarEndCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentIndex.setStatus('mandatory')
wfDsx3FarEndTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTimeElapsed.setStatus('mandatory')
wfDsx3FarEndValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndValidIntervals.setStatus('mandatory')
wfDsx3FarEndCurrentCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentCESs.setStatus('mandatory')
wfDsx3FarEndCurrentCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentCSESs.setStatus('mandatory')
wfDsx3FarEndCurrentCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentCCVs.setStatus('mandatory')
wfDsx3FarEndCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentUASs.setStatus('mandatory')
wfDsx3FarEndCurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentSASs.setStatus('mandatory')
wfDsx3FarEndCurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentFCs.setStatus('mandatory')
wfDsx3FarEndCurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndCurrentValidFlag.setStatus('mandatory')
wfDsx3FarEndIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7), )
if mibBuilder.loadTexts: wfDsx3FarEndIntervalTable.setStatus('mandatory')
wfDsx3FarEndIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndIntervalIndex"), (0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndIntervalNumber"))
if mibBuilder.loadTexts: wfDsx3FarEndIntervalEntry.setStatus('mandatory')
wfDsx3FarEndIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalIndex.setStatus('mandatory')
wfDsx3FarEndIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalNumber.setStatus('mandatory')
wfDsx3FarEndIntervalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalCESs.setStatus('mandatory')
wfDsx3FarEndIntervalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalCSESs.setStatus('mandatory')
wfDsx3FarEndIntervalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalCCVs.setStatus('mandatory')
wfDsx3FarEndIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalUASs.setStatus('mandatory')
wfDsx3FarEndIntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalSASs.setStatus('mandatory')
wfDsx3FarEndIntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalFCs.setStatus('mandatory')
wfDsx3FarEndIntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndIntervalValidFlag.setStatus('mandatory')
wfDsx3FarEndTotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8), )
if mibBuilder.loadTexts: wfDsx3FarEndTotalTable.setStatus('mandatory')
wfDsx3FarEndTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndTotalIndex"))
if mibBuilder.loadTexts: wfDsx3FarEndTotalEntry.setStatus('mandatory')
wfDsx3FarEndTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalIndex.setStatus('mandatory')
wfDsx3FarEndTotalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalCESs.setStatus('mandatory')
wfDsx3FarEndTotalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalCSESs.setStatus('mandatory')
wfDsx3FarEndTotalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalCCVs.setStatus('mandatory')
wfDsx3FarEndTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalUASs.setStatus('mandatory')
wfDsx3FarEndTotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalSASs.setStatus('mandatory')
wfDsx3FarEndTotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalFCs.setStatus('mandatory')
wfDsx3FarEndTotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndTotalValidFlag.setStatus('mandatory')
wfAtmInterfaceDs3PlcpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 9), )
if mibBuilder.loadTexts: wfAtmInterfaceDs3PlcpTable.setStatus('mandatory')
wfAtmInterfaceDs3PlcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 9, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfAtmInterfaceDs3PlcpIndex"))
if mibBuilder.loadTexts: wfAtmInterfaceDs3PlcpEntry.setStatus('mandatory')
wfAtmInterfaceDs3PlcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAtmInterfaceDs3PlcpIndex.setStatus('mandatory')
wfAtmInterfaceDs3PlcpSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAtmInterfaceDs3PlcpSEFSs.setStatus('mandatory')
wfAtmInterfaceDs3PlcpAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noalarm", 1), ("farendalarm", 2), ("lof", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAtmInterfaceDs3PlcpAlarmState.setStatus('mandatory')
wfAtmInterfaceDs3PlcpUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAtmInterfaceDs3PlcpUASs.setStatus('mandatory')
wfDsx3DayCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11), )
if mibBuilder.loadTexts: wfDsx3DayCurrentTable.setStatus('mandatory')
wfDsx3DayCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3DayCurrentIndex"))
if mibBuilder.loadTexts: wfDsx3DayCurrentEntry.setStatus('mandatory')
wfDsx3DayCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentIndex.setStatus('mandatory')
wfDsx3DayCurrentPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentPESs.setStatus('mandatory')
wfDsx3DayCurrentPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentPSESs.setStatus('mandatory')
wfDsx3DayCurrentSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentSEFSs.setStatus('mandatory')
wfDsx3DayCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentUASs.setStatus('mandatory')
wfDsx3DayCurrentLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentLCVs.setStatus('mandatory')
wfDsx3DayCurrentPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentPCVs.setStatus('mandatory')
wfDsx3DayCurrentLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentLESs.setStatus('mandatory')
wfDsx3DayCurrentCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentCCVs.setStatus('mandatory')
wfDsx3DayCurrentCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentCESs.setStatus('mandatory')
wfDsx3DayCurrentCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentCSESs.setStatus('mandatory')
wfDsx3DayCurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentSASs.setStatus('mandatory')
wfDsx3DayCurrentAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentAISSs.setStatus('mandatory')
wfDsx3DayCurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentFCs.setStatus('mandatory')
wfDsx3DayCurrentTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentTimeElapsed.setStatus('mandatory')
wfDsx3DayCurrentValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentValidIntervals.setStatus('mandatory')
wfDsx3DayCurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayCurrentValidFlag.setStatus('mandatory')
wfDsx3DayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12), )
if mibBuilder.loadTexts: wfDsx3DayIntervalTable.setStatus('mandatory')
wfDsx3DayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3DayIntervalIndex"), (0, "Wellfleet-DSX3-MIB", "wfDsx3DayIntervalNumber"))
if mibBuilder.loadTexts: wfDsx3DayIntervalEntry.setStatus('mandatory')
wfDsx3DayIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalIndex.setStatus('mandatory')
wfDsx3DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalNumber.setStatus('mandatory')
wfDsx3DayIntervalPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalPESs.setStatus('mandatory')
wfDsx3DayIntervalPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalPSESs.setStatus('mandatory')
wfDsx3DayIntervalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalSEFSs.setStatus('mandatory')
wfDsx3DayIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalUASs.setStatus('mandatory')
wfDsx3DayIntervalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalLCVs.setStatus('mandatory')
wfDsx3DayIntervalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalPCVs.setStatus('mandatory')
wfDsx3DayIntervalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalLESs.setStatus('mandatory')
wfDsx3DayIntervalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalCCVs.setStatus('mandatory')
wfDsx3DayIntervalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalCESs.setStatus('mandatory')
wfDsx3DayIntervalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalCSESs.setStatus('mandatory')
wfDsx3DayIntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalSASs.setStatus('mandatory')
wfDsx3DayIntervalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalAISSs.setStatus('mandatory')
wfDsx3DayIntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalFCs.setStatus('mandatory')
wfDsx3DayIntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 12, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayIntervalValidFlag.setStatus('mandatory')
wfDsx3DayTotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13), )
if mibBuilder.loadTexts: wfDsx3DayTotalTable.setStatus('mandatory')
wfDsx3DayTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3DayTotalIndex"))
if mibBuilder.loadTexts: wfDsx3DayTotalEntry.setStatus('mandatory')
wfDsx3DayTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalIndex.setStatus('mandatory')
wfDsx3DayTotalPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalPESs.setStatus('mandatory')
wfDsx3DayTotalPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalPSESs.setStatus('mandatory')
wfDsx3DayTotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalSEFSs.setStatus('mandatory')
wfDsx3DayTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalUASs.setStatus('mandatory')
wfDsx3DayTotalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalLCVs.setStatus('mandatory')
wfDsx3DayTotalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalPCVs.setStatus('mandatory')
wfDsx3DayTotalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalLESs.setStatus('mandatory')
wfDsx3DayTotalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalCCVs.setStatus('mandatory')
wfDsx3DayTotalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalCESs.setStatus('mandatory')
wfDsx3DayTotalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalCSESs.setStatus('mandatory')
wfDsx3DayTotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalSASs.setStatus('mandatory')
wfDsx3DayTotalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalAISSs.setStatus('mandatory')
wfDsx3DayTotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalFCs.setStatus('mandatory')
wfDsx3DayTotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 13, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayTotalValidFlag.setStatus('mandatory')
wfDsx3FarEndDayCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14), )
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentTable.setStatus('mandatory')
wfDsx3FarEndDayCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndDayCurrentIndex"))
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentEntry.setStatus('mandatory')
wfDsx3FarEndDayCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentIndex.setStatus('mandatory')
wfDsx3FarEndDayTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTimeElapsed.setStatus('mandatory')
wfDsx3FarEndDayValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayValidIntervals.setStatus('mandatory')
wfDsx3FarEndDayCurrentCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentCESs.setStatus('mandatory')
wfDsx3FarEndDayCurrentCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentCSESs.setStatus('mandatory')
wfDsx3FarEndDayCurrentCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentCCVs.setStatus('mandatory')
wfDsx3FarEndDayCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentUASs.setStatus('mandatory')
wfDsx3FarEndDayCurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentSASs.setStatus('mandatory')
wfDsx3FarEndDayCurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentFCs.setStatus('mandatory')
wfDsx3FarEndDayCurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayCurrentValidFlag.setStatus('mandatory')
wfDsx3FarEndDayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15), )
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalTable.setStatus('mandatory')
wfDsx3FarEndDayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndDayIntervalIndex"), (0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndDayIntervalNumber"))
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalEntry.setStatus('mandatory')
wfDsx3FarEndDayIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalIndex.setStatus('mandatory')
wfDsx3FarEndDayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalNumber.setStatus('mandatory')
wfDsx3FarEndDayIntervalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalCESs.setStatus('mandatory')
wfDsx3FarEndDayIntervalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalCSESs.setStatus('mandatory')
wfDsx3FarEndDayIntervalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalCCVs.setStatus('mandatory')
wfDsx3FarEndDayIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalUASs.setStatus('mandatory')
wfDsx3FarEndDayIntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalSASs.setStatus('mandatory')
wfDsx3FarEndDayIntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalFCs.setStatus('mandatory')
wfDsx3FarEndDayIntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayIntervalValidFlag.setStatus('mandatory')
wfDsx3FarEndDayTotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16), )
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalTable.setStatus('mandatory')
wfDsx3FarEndDayTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndDayTotalIndex"))
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalEntry.setStatus('mandatory')
wfDsx3FarEndDayTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalIndex.setStatus('mandatory')
wfDsx3FarEndDayTotalCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalCESs.setStatus('mandatory')
wfDsx3FarEndDayTotalCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalCSESs.setStatus('mandatory')
wfDsx3FarEndDayTotalCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalCCVs.setStatus('mandatory')
wfDsx3FarEndDayTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalUASs.setStatus('mandatory')
wfDsx3FarEndDayTotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalSASs.setStatus('mandatory')
wfDsx3FarEndDayTotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalFCs.setStatus('mandatory')
wfDsx3FarEndDayTotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayTotalValidFlag.setStatus('mandatory')
wfDsx3ThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18), )
if mibBuilder.loadTexts: wfDsx3ThrAlrtTable.setStatus('mandatory')
wfDsx3ThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3ThrAlrtIndex"))
if mibBuilder.loadTexts: wfDsx3ThrAlrtEntry.setStatus('mandatory')
wfDsx3ThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtDelete.setStatus('mandatory')
wfDsx3ThrAlrtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3ThrAlrtIndex.setStatus('mandatory')
wfDsx3ThrAlrtPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 3), Gauge32().clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtPESs.setStatus('mandatory')
wfDsx3ThrAlrtPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 4), Gauge32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtPSESs.setStatus('mandatory')
wfDsx3ThrAlrtSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtSEFSs.setStatus('mandatory')
wfDsx3ThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtUASs.setStatus('mandatory')
wfDsx3ThrAlrtLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 7), Gauge32().clone(387)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtLCVs.setStatus('mandatory')
wfDsx3ThrAlrtPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 8), Gauge32().clone(382)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtPCVs.setStatus('mandatory')
wfDsx3ThrAlrtLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 9), Gauge32().clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtLESs.setStatus('mandatory')
wfDsx3ThrAlrtCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 10), Gauge32().clone(382)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtCCVs.setStatus('mandatory')
wfDsx3ThrAlrtCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 11), Gauge32().clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtCESs.setStatus('mandatory')
wfDsx3ThrAlrtCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 12), Gauge32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtCSESs.setStatus('mandatory')
wfDsx3ThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 13), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtSASs.setStatus('mandatory')
wfDsx3ThrAlrtAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtAISSs.setStatus('mandatory')
wfDsx3ThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 18, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3ThrAlrtFCs.setStatus('mandatory')
wfDsx3FarEndThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19), )
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtTable.setStatus('mandatory')
wfDsx3FarEndThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndThrAlrtIndex"))
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtEntry.setStatus('mandatory')
wfDsx3FarEndThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtDelete.setStatus('mandatory')
wfDsx3FarEndThrAlrtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtIndex.setStatus('mandatory')
wfDsx3FarEndThrAlrtCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 3), Gauge32().clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtCESs.setStatus('mandatory')
wfDsx3FarEndThrAlrtCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 4), Gauge32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtCSESs.setStatus('mandatory')
wfDsx3FarEndThrAlrtCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 5), Gauge32().clone(382)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtCCVs.setStatus('mandatory')
wfDsx3FarEndThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtUASs.setStatus('mandatory')
wfDsx3FarEndThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtSASs.setStatus('mandatory')
wfDsx3FarEndThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 19, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndThrAlrtFCs.setStatus('mandatory')
wfDsx3DayThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20), )
if mibBuilder.loadTexts: wfDsx3DayThrAlrtTable.setStatus('mandatory')
wfDsx3DayThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3DayThrAlrtIndex"))
if mibBuilder.loadTexts: wfDsx3DayThrAlrtEntry.setStatus('mandatory')
wfDsx3DayThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtDelete.setStatus('mandatory')
wfDsx3DayThrAlrtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtIndex.setStatus('mandatory')
wfDsx3DayThrAlrtPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 3), Gauge32().clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtPESs.setStatus('mandatory')
wfDsx3DayThrAlrtPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 4), Gauge32().clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtPSESs.setStatus('mandatory')
wfDsx3DayThrAlrtSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtSEFSs.setStatus('mandatory')
wfDsx3DayThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtUASs.setStatus('mandatory')
wfDsx3DayThrAlrtLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 7), Gauge32().clone(3865)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtLCVs.setStatus('mandatory')
wfDsx3DayThrAlrtPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 8), Gauge32().clone(3820)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtPCVs.setStatus('mandatory')
wfDsx3DayThrAlrtLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 9), Gauge32().clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtLESs.setStatus('mandatory')
wfDsx3DayThrAlrtCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 10), Gauge32().clone(3820)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtCCVs.setStatus('mandatory')
wfDsx3DayThrAlrtCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 11), Gauge32().clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtCESs.setStatus('mandatory')
wfDsx3DayThrAlrtCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 12), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtCSESs.setStatus('mandatory')
wfDsx3DayThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 13), Gauge32().clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtSASs.setStatus('mandatory')
wfDsx3DayThrAlrtAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtAISSs.setStatus('mandatory')
wfDsx3DayThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 20, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3DayThrAlrtFCs.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21), )
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtTable.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1), ).setIndexNames((0, "Wellfleet-DSX3-MIB", "wfDsx3FarEndDayThrAlrtIndex"))
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtEntry.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtDelete.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtIndex.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 3), Gauge32().clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtCESs.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtCSESs.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 5), Gauge32().clone(3820)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtCCVs.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtUASs.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 7), Gauge32().clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtSASs.setStatus('mandatory')
wfDsx3FarEndDayThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 26, 21, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDsx3FarEndDayThrAlrtFCs.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-DSX3-MIB", wfDsx3CurrentPCVs=wfDsx3CurrentPCVs, wfDsx3CurrentPSESs=wfDsx3CurrentPSESs, wfDsx3DayThrAlrtIndex=wfDsx3DayThrAlrtIndex, wfDsx3DayThrAlrtLESs=wfDsx3DayThrAlrtLESs, wfDsx3FarEndIntervalTable=wfDsx3FarEndIntervalTable, wfDsx3IntervalPESs=wfDsx3IntervalPESs, wfDsx3CurrentSASs=wfDsx3CurrentSASs, wfDsx3TotalPESs=wfDsx3TotalPESs, wfDsx3DayCurrentLESs=wfDsx3DayCurrentLESs, wfDsx3FarEndDayCurrentValidFlag=wfDsx3FarEndDayCurrentValidFlag, wfDsx3FarEndDayThrAlrtCSESs=wfDsx3FarEndDayThrAlrtCSESs, wfDsx3TimeElapsed=wfDsx3TimeElapsed, wfDsx3ValidIntervals=wfDsx3ValidIntervals, wfDsx3DayCurrentSEFSs=wfDsx3DayCurrentSEFSs, wfDsx3FarEndDayCurrentCSESs=wfDsx3FarEndDayCurrentCSESs, wfDsx3DayThrAlrtSEFSs=wfDsx3DayThrAlrtSEFSs, wfDsx3FarEndDayTotalValidFlag=wfDsx3FarEndDayTotalValidFlag, wfDsx3DayThrAlrtFCs=wfDsx3DayThrAlrtFCs, wfDsx3DayCurrentPSESs=wfDsx3DayCurrentPSESs, wfDsx3IfIndex=wfDsx3IfIndex, wfDsx3ThrAlrtUASs=wfDsx3ThrAlrtUASs, wfDsx3CurrentTable=wfDsx3CurrentTable, wfDsx3DayCurrentValidFlag=wfDsx3DayCurrentValidFlag, wfDsx3TotalCSESs=wfDsx3TotalCSESs, wfDsx3TotalSASs=wfDsx3TotalSASs, wfDsx3FarEndIntervalNumber=wfDsx3FarEndIntervalNumber, wfDsx3LoopbackConfig=wfDsx3LoopbackConfig, wfDsx3IntervalLESs=wfDsx3IntervalLESs, wfDsx3ThrAlrtTable=wfDsx3ThrAlrtTable, wfDsx3IntervalIndex=wfDsx3IntervalIndex, wfDsx3DayTotalSEFSs=wfDsx3DayTotalSEFSs, wfDsx3DayTotalCCVs=wfDsx3DayTotalCCVs, wfDsx3FarEndIntervalUASs=wfDsx3FarEndIntervalUASs, wfDsx3FarEndCurrentValidFlag=wfDsx3FarEndCurrentValidFlag, wfDsx3IntervalLCVs=wfDsx3IntervalLCVs, wfDsx3FarEndCurrentTable=wfDsx3FarEndCurrentTable, wfDsx3FarEndTotalCSESs=wfDsx3FarEndTotalCSESs, wfDsx3FarEndTotalCCVs=wfDsx3FarEndTotalCCVs, wfDsx3FarEndIntervalValidFlag=wfDsx3FarEndIntervalValidFlag, wfDsx3FarEndThrAlrtEntry=wfDsx3FarEndThrAlrtEntry, wfDsx3FarEndLocationIDCode=wfDsx3FarEndLocationIDCode, wfDsx3ThrAlrtAISSs=wfDsx3ThrAlrtAISSs, wfDsx3IntervalValidFlag=wfDsx3IntervalValidFlag, wfDsx3DayIntervalLESs=wfDsx3DayIntervalLESs, wfDsx3ThrAlrtLCVs=wfDsx3ThrAlrtLCVs, wfDsx3IntervalFCs=wfDsx3IntervalFCs, wfDsx3DayTotalAISSs=wfDsx3DayTotalAISSs, wfDsx3FarEndThrAlrtCSESs=wfDsx3FarEndThrAlrtCSESs, wfDsx3DayThrAlrtCSESs=wfDsx3DayThrAlrtCSESs, wfDsx3FarEndIntervalEntry=wfDsx3FarEndIntervalEntry, wfDsx3DayThrAlrtSASs=wfDsx3DayThrAlrtSASs, wfDsx3DayIntervalNumber=wfDsx3DayIntervalNumber, wfDsx3FarEndConfigTable=wfDsx3FarEndConfigTable, wfDsx3FarEndTotalIndex=wfDsx3FarEndTotalIndex, wfDsx3ThrAlrtDelete=wfDsx3ThrAlrtDelete, wfDsx3DayIntervalCCVs=wfDsx3DayIntervalCCVs, wfDsx3FarEndThrAlrtCCVs=wfDsx3FarEndThrAlrtCCVs, wfDsx3ThrAlrtPSESs=wfDsx3ThrAlrtPSESs, wfDsx3CurrentIndex=wfDsx3CurrentIndex, wfDsx3FarEndCurrentSASs=wfDsx3FarEndCurrentSASs, wfDsx3DayIntervalCESs=wfDsx3DayIntervalCESs, wfDsx3FarEndTotalEntry=wfDsx3FarEndTotalEntry, wfDsx3CurrentCESs=wfDsx3CurrentCESs, wfDsx3TotalIndex=wfDsx3TotalIndex, wfDsx3FarEndDayIntervalIndex=wfDsx3FarEndDayIntervalIndex, wfDsx3CurrentLESs=wfDsx3CurrentLESs, wfDsx3DayIntervalPESs=wfDsx3DayIntervalPESs, wfDsx3TotalLESs=wfDsx3TotalLESs, wfDsx3TotalFCs=wfDsx3TotalFCs, wfDsx3TransmitClockSource=wfDsx3TransmitClockSource, wfDsx3FarEndDayIntervalCESs=wfDsx3FarEndDayIntervalCESs, wfDsx3FarEndFrameIDCode=wfDsx3FarEndFrameIDCode, wfDsx3IntervalEntry=wfDsx3IntervalEntry, wfDsx3ThrAlrtIndex=wfDsx3ThrAlrtIndex, wfDsx3DayCurrentPCVs=wfDsx3DayCurrentPCVs, wfDsx3FarEndIntervalCSESs=wfDsx3FarEndIntervalCSESs, wfDsx3FarEndThrAlrtDelete=wfDsx3FarEndThrAlrtDelete, wfDsx3DayCurrentAISSs=wfDsx3DayCurrentAISSs, wfDsx3DayIntervalTable=wfDsx3DayIntervalTable, wfDsx3FarEndCurrentIndex=wfDsx3FarEndCurrentIndex, wfDsx3FarEndEquipCode=wfDsx3FarEndEquipCode, wfDsx3FarEndDayTotalFCs=wfDsx3FarEndDayTotalFCs, wfDsx3LineCoding=wfDsx3LineCoding, wfDsx3TotalSEFSs=wfDsx3TotalSEFSs, wfDsx3ThrAlrtPCVs=wfDsx3ThrAlrtPCVs, wfDsx3FarEndDayTotalCSESs=wfDsx3FarEndDayTotalCSESs, wfDsx3ThrAlrtEntry=wfDsx3ThrAlrtEntry, wfDsx3CurrentUASs=wfDsx3CurrentUASs, wfDsx3TotalTable=wfDsx3TotalTable, wfDsx3FarEndDayThrAlrtSASs=wfDsx3FarEndDayThrAlrtSASs, wfDsx3FarEndCurrentCCVs=wfDsx3FarEndCurrentCCVs, wfDsx3CurrentFCs=wfDsx3CurrentFCs, wfDsx3FarEndDayTotalUASs=wfDsx3FarEndDayTotalUASs, wfDsx3FarEndDayIntervalCSESs=wfDsx3FarEndDayIntervalCSESs, wfDsx3CurrentLCVs=wfDsx3CurrentLCVs, wfDsx3FarEndDayIntervalSASs=wfDsx3FarEndDayIntervalSASs, wfDsx3FarEndValidIntervals=wfDsx3FarEndValidIntervals, wfDsx3FarEndDayThrAlrtEntry=wfDsx3FarEndDayThrAlrtEntry, wfAtmInterfaceDs3PlcpUASs=wfAtmInterfaceDs3PlcpUASs, wfDsx3FarEndDayTotalTable=wfDsx3FarEndDayTotalTable, wfDsx3FarEndCurrentFCs=wfDsx3FarEndCurrentFCs, wfDsx3FarEndDayIntervalNumber=wfDsx3FarEndDayIntervalNumber, wfDsx3FarEndIntervalIndex=wfDsx3FarEndIntervalIndex, wfDsx3TotalCCVs=wfDsx3TotalCCVs, wfDsx3FarEndIntervalFCs=wfDsx3FarEndIntervalFCs, wfDsx3DayThrAlrtEntry=wfDsx3DayThrAlrtEntry, wfDsx3DayCurrentUASs=wfDsx3DayCurrentUASs, wfDsx3DayTotalLCVs=wfDsx3DayTotalLCVs, wfDsx3TotalAISSs=wfDsx3TotalAISSs, wfDsx3FarEndDayCurrentIndex=wfDsx3FarEndDayCurrentIndex, wfDsx3DayCurrentCCVs=wfDsx3DayCurrentCCVs, wfDsx3FarEndThrAlrtCESs=wfDsx3FarEndThrAlrtCESs, wfDsx3LineType=wfDsx3LineType, wfDsx3TotalCESs=wfDsx3TotalCESs, wfAtmInterfaceDs3PlcpTable=wfAtmInterfaceDs3PlcpTable, wfDsx3FarEndDayValidIntervals=wfDsx3FarEndDayValidIntervals, wfDsx3TotalPSESs=wfDsx3TotalPSESs, wfDsx3FarEndDayTotalEntry=wfDsx3FarEndDayTotalEntry, wfDsx3DayTotalFCs=wfDsx3DayTotalFCs, wfDsx3FarEndDayIntervalValidFlag=wfDsx3FarEndDayIntervalValidFlag, wfDsx3FarEndIntervalSASs=wfDsx3FarEndIntervalSASs, wfDsx3DayIntervalPSESs=wfDsx3DayIntervalPSESs, wfDsx3DayIntervalEntry=wfDsx3DayIntervalEntry, wfDsx3FarEndDayCurrentCCVs=wfDsx3FarEndDayCurrentCCVs, wfAtmInterfaceDs3PlcpSEFSs=wfAtmInterfaceDs3PlcpSEFSs, wfAtmInterfaceDs3PlcpIndex=wfAtmInterfaceDs3PlcpIndex, wfDsx3ThrAlrtPESs=wfDsx3ThrAlrtPESs, wfDsx3IntervalPSESs=wfDsx3IntervalPSESs, wfDsx3FarEndCurrentUASs=wfDsx3FarEndCurrentUASs, wfDsx3DayThrAlrtUASs=wfDsx3DayThrAlrtUASs, wfDsx3FarEndDayTotalSASs=wfDsx3FarEndDayTotalSASs, wfDsx3FarEndUnitCode=wfDsx3FarEndUnitCode, wfDsx3FarEndDayCurrentEntry=wfDsx3FarEndDayCurrentEntry, wfDsx3ConfigEntry=wfDsx3ConfigEntry, wfDsx3IntervalPCVs=wfDsx3IntervalPCVs, wfDsx3DayIntervalLCVs=wfDsx3DayIntervalLCVs, wfDsx3DayTotalTable=wfDsx3DayTotalTable, wfDsx3DayIntervalAISSs=wfDsx3DayIntervalAISSs, wfDsx3DayTotalSASs=wfDsx3DayTotalSASs, wfDsx3SendCode=wfDsx3SendCode, wfDsx3FarEndCurrentCSESs=wfDsx3FarEndCurrentCSESs, wfDsx3DayTotalPESs=wfDsx3DayTotalPESs, wfDsx3ThrAlrtSASs=wfDsx3ThrAlrtSASs, wfDsx3TotalValidFlag=wfDsx3TotalValidFlag, wfDsx3CurrentPESs=wfDsx3CurrentPESs, wfDsx3ConfigTable=wfDsx3ConfigTable, wfDsx3DayThrAlrtTable=wfDsx3DayThrAlrtTable, wfDsx3DayCurrentFCs=wfDsx3DayCurrentFCs, wfDsx3DayTotalPSESs=wfDsx3DayTotalPSESs, wfDsx3TotalLCVs=wfDsx3TotalLCVs, wfDsx3TotalPCVs=wfDsx3TotalPCVs, wfDsx3DayIntervalCSESs=wfDsx3DayIntervalCSESs, wfDsx3FarEndDayTotalIndex=wfDsx3FarEndDayTotalIndex, wfDsx3CurrentCCVs=wfDsx3CurrentCCVs, wfDsx3FarEndTimeElapsed=wfDsx3FarEndTimeElapsed, wfDsx3ThrAlrtSEFSs=wfDsx3ThrAlrtSEFSs, wfDsx3FarEndDayIntervalUASs=wfDsx3FarEndDayIntervalUASs, wfDsx3IntervalSASs=wfDsx3IntervalSASs, wfDsx3IntervalSEFSs=wfDsx3IntervalSEFSs, wfDsx3IntervalTable=wfDsx3IntervalTable, wfDsx3FarEndDayThrAlrtUASs=wfDsx3FarEndDayThrAlrtUASs, wfDsx3FarEndTotalUASs=wfDsx3FarEndTotalUASs, wfDsx3FarEndLineIndex=wfDsx3FarEndLineIndex, wfDsx3DayThrAlrtPCVs=wfDsx3DayThrAlrtPCVs, wfDsx3IntervalAISSs=wfDsx3IntervalAISSs, wfDsx3FarEndDayCurrentUASs=wfDsx3FarEndDayCurrentUASs, wfDsx3DayCurrentLCVs=wfDsx3DayCurrentLCVs, wfDsx3DayTotalPCVs=wfDsx3DayTotalPCVs, wfDsx3DayThrAlrtDelete=wfDsx3DayThrAlrtDelete, wfDsx3IntervalCESs=wfDsx3IntervalCESs, wfDsx3TotalEntry=wfDsx3TotalEntry, wfDsx3TotalUASs=wfDsx3TotalUASs, wfDsx3FarEndDayCurrentCESs=wfDsx3FarEndDayCurrentCESs, wfDsx3FarEndDayThrAlrtDelete=wfDsx3FarEndDayThrAlrtDelete, wfDsx3DayTotalValidFlag=wfDsx3DayTotalValidFlag, wfDsx3DayThrAlrtAISSs=wfDsx3DayThrAlrtAISSs, wfDsx3DayCurrentTimeElapsed=wfDsx3DayCurrentTimeElapsed, wfDsx3DayThrAlrtCCVs=wfDsx3DayThrAlrtCCVs, wfDsx3ThrAlrtCCVs=wfDsx3ThrAlrtCCVs, wfDsx3FarEndDayIntervalCCVs=wfDsx3FarEndDayIntervalCCVs, wfAtmInterfaceDs3PlcpAlarmState=wfAtmInterfaceDs3PlcpAlarmState, wfDsx3FarEndFacilityIDCode=wfDsx3FarEndFacilityIDCode, wfDsx3DayCurrentTable=wfDsx3DayCurrentTable, wfDsx3DayCurrentSASs=wfDsx3DayCurrentSASs, wfDsx3CurrentAISSs=wfDsx3CurrentAISSs, wfDsx3FarEndDayIntervalFCs=wfDsx3FarEndDayIntervalFCs, wfDsx3DayIntervalValidFlag=wfDsx3DayIntervalValidFlag, wfDsx3FarEndThrAlrtUASs=wfDsx3FarEndThrAlrtUASs, wfDsx3FarEndCurrentCESs=wfDsx3FarEndCurrentCESs, wfDsx3FarEndThrAlrtTable=wfDsx3FarEndThrAlrtTable, wfDsx3DayIntervalFCs=wfDsx3DayIntervalFCs, wfDsx3FarEndDayThrAlrtCCVs=wfDsx3FarEndDayThrAlrtCCVs, wfDsx3DayIntervalSEFSs=wfDsx3DayIntervalSEFSs, wfDsx3DayTotalUASs=wfDsx3DayTotalUASs, wfDsx3FarEndDayCurrentTable=wfDsx3FarEndDayCurrentTable, wfDsx3FarEndDayThrAlrtFCs=wfDsx3FarEndDayThrAlrtFCs, wfDsx3DayCurrentValidIntervals=wfDsx3DayCurrentValidIntervals, wfDsx3FarEndDayTotalCCVs=wfDsx3FarEndDayTotalCCVs, wfDsx3FarEndDayThrAlrtTable=wfDsx3FarEndDayThrAlrtTable, wfDsx3CurrentValidFlag=wfDsx3CurrentValidFlag, wfDsx3DayTotalLESs=wfDsx3DayTotalLESs, wfDsx3DayTotalIndex=wfDsx3DayTotalIndex, wfDsx3FarEndDayCurrentSASs=wfDsx3FarEndDayCurrentSASs, wfDsx3DayThrAlrtLCVs=wfDsx3DayThrAlrtLCVs, wfDsx3FarEndDayTimeElapsed=wfDsx3FarEndDayTimeElapsed, wfDsx3ThrAlrtCESs=wfDsx3ThrAlrtCESs, wfDsx3FarEndThrAlrtSASs=wfDsx3FarEndThrAlrtSASs, wfDsx3CurrentSEFSs=wfDsx3CurrentSEFSs, wfDsx3DayCurrentEntry=wfDsx3DayCurrentEntry, wfDsx3DayCurrentIndex=wfDsx3DayCurrentIndex, wfDsx3FarEndCurrentEntry=wfDsx3FarEndCurrentEntry, wfDsx3DayIntervalSASs=wfDsx3DayIntervalSASs, wfDsx3ThrAlrtLESs=wfDsx3ThrAlrtLESs, wfDsx3FarEndDayIntervalTable=wfDsx3FarEndDayIntervalTable, wfDsx3FarEndTotalCESs=wfDsx3FarEndTotalCESs, wfDsx3FarEndDayThrAlrtIndex=wfDsx3FarEndDayThrAlrtIndex, wfDsx3DayIntervalIndex=wfDsx3DayIntervalIndex, wfDsx3FarEndDayThrAlrtCESs=wfDsx3FarEndDayThrAlrtCESs, wfDsx3CircuitIdentifier=wfDsx3CircuitIdentifier, wfDsx3FarEndThrAlrtIndex=wfDsx3FarEndThrAlrtIndex, wfDsx3DayTotalCSESs=wfDsx3DayTotalCSESs, wfDsx3FarEndThrAlrtFCs=wfDsx3FarEndThrAlrtFCs, wfDsx3CurrentCSESs=wfDsx3CurrentCSESs, wfDsx3LineStatus=wfDsx3LineStatus, wfDsx3ThrAlrtCSESs=wfDsx3ThrAlrtCSESs, wfDsx3DayTotalCESs=wfDsx3DayTotalCESs, wfDsx3FarEndTotalTable=wfDsx3FarEndTotalTable, wfDsx3CurrentValidIntervals=wfDsx3CurrentValidIntervals, wfDsx3DayCurrentCSESs=wfDsx3DayCurrentCSESs, wfDsx3FarEndDayIntervalEntry=wfDsx3FarEndDayIntervalEntry, wfDsx3DayThrAlrtPESs=wfDsx3DayThrAlrtPESs, wfDsx3IntervalNumber=wfDsx3IntervalNumber, wfDsx3FarEndIntervalCESs=wfDsx3FarEndIntervalCESs, wfAtmInterfaceDs3PlcpEntry=wfAtmInterfaceDs3PlcpEntry, wfDsx3DayThrAlrtPSESs=wfDsx3DayThrAlrtPSESs, wfDsx3ThrAlrtFCs=wfDsx3ThrAlrtFCs, wfDsx3LineIndex=wfDsx3LineIndex, wfDsx3DayCurrentCESs=wfDsx3DayCurrentCESs, wfDsx3DayIntervalUASs=wfDsx3DayIntervalUASs, wfDsx3FarEndTotalSASs=wfDsx3FarEndTotalSASs, wfDsx3FarEndDayCurrentFCs=wfDsx3FarEndDayCurrentFCs, wfDsx3FarEndIntervalCCVs=wfDsx3FarEndIntervalCCVs, wfDsx3DayCurrentPESs=wfDsx3DayCurrentPESs, wfDsx3IntervalUASs=wfDsx3IntervalUASs, wfDsx3FarEndDayTotalCESs=wfDsx3FarEndDayTotalCESs, wfDsx3FarEndTotalValidFlag=wfDsx3FarEndTotalValidFlag, wfDsx3CurrentEntry=wfDsx3CurrentEntry, wfDsx3FarEndConfigEntry=wfDsx3FarEndConfigEntry, wfDsx3DayTotalEntry=wfDsx3DayTotalEntry, wfDsx3DayThrAlrtCESs=wfDsx3DayThrAlrtCESs, wfDsx3FarEndTotalFCs=wfDsx3FarEndTotalFCs, wfDsx3DayIntervalPCVs=wfDsx3DayIntervalPCVs, wfDsx3IntervalCCVs=wfDsx3IntervalCCVs, wfDsx3IntervalCSESs=wfDsx3IntervalCSESs)
mibBuilder.exportSymbols("Wellfleet-DSX3-MIB", wfDsx3CurrentTimeElapsed=wfDsx3CurrentTimeElapsed)
