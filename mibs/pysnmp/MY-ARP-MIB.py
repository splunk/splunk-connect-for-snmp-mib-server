#
# PySNMP MIB module MY-ARP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-ARP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ip, = mibBuilder.importSymbols("IP-MIB", "ip")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
IfIndex, = mibBuilder.importSymbols("MY-TC", "IfIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Unsigned32, Bits, Counter32, IpAddress, Gauge32, MibIdentifier, ModuleIdentity, iso, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Unsigned32", "Bits", "Counter32", "IpAddress", "Gauge32", "MibIdentifier", "ModuleIdentity", "iso", "Integer32", "NotificationType")
RowStatus, DisplayString, TextualConvention, TruthValue, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue", "PhysAddress")
myArpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2))
myArpMIB.setRevisions(('2002-03-20 00:00',))
if mibBuilder.loadTexts: myArpMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myArpMIB.setOrganization('D-Link Crop.')
myArpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1))
myArpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1), )
if mibBuilder.loadTexts: myArpTable.setStatus('current')
myArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1), ).setIndexNames((0, "MY-ARP-MIB", "myArpIfIndex"), (0, "MY-ARP-MIB", "myArpNetAddress"))
if mibBuilder.loadTexts: myArpEntry.setStatus('current')
myArpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpIfIndex.setStatus('current')
myArpPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 2), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myArpPhysAddress.setStatus('current')
myArpNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpNetAddress.setStatus('current')
myArpRemainAge = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpRemainAge.setStatus('current')
myArpType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("arpa", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myArpType.setStatus('current')
myArpEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("interface", 3), ("vrrp", 4), ("trusted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpEntryType.setStatus('current')
myArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myArpStatus.setStatus('current')
myArpIfTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2), )
if mibBuilder.loadTexts: myArpIfTable.setStatus('current')
myArpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2, 1), ).setIndexNames((0, "MY-ARP-MIB", "myArpIfIfIndex"))
if mibBuilder.loadTexts: myArpIfEntry.setStatus('current')
myArpIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpIfIfIndex.setStatus('current')
myArpIfCacheTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 18000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myArpIfCacheTimeOut.setStatus('current')
myArpCurrentTotalNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpCurrentTotalNumber.setStatus('current')
myArpCurrentUnresolveNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myArpCurrentUnresolveNumber.setStatus('current')
myArpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2))
myArpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 1))
myArpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 2))
myArpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 1, 1)).setObjects(("MY-ARP-MIB", "myArpMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myArpMIBCompliance = myArpMIBCompliance.setStatus('current')
myArpMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 2, 2, 2, 1)).setObjects(("MY-ARP-MIB", "myArpIfIndex"), ("MY-ARP-MIB", "myArpPhysAddress"), ("MY-ARP-MIB", "myArpNetAddress"), ("MY-ARP-MIB", "myArpRemainAge"), ("MY-ARP-MIB", "myArpType"), ("MY-ARP-MIB", "myArpEntryType"), ("MY-ARP-MIB", "myArpStatus"), ("MY-ARP-MIB", "myArpIfIfIndex"), ("MY-ARP-MIB", "myArpIfCacheTimeOut"), ("MY-ARP-MIB", "myArpCurrentTotalNumber"), ("MY-ARP-MIB", "myArpCurrentUnresolveNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myArpMIBGroup = myArpMIBGroup.setStatus('current')
mibBuilder.exportSymbols("MY-ARP-MIB", myArpCurrentTotalNumber=myArpCurrentTotalNumber, myArpPhysAddress=myArpPhysAddress, myArpMIBGroup=myArpMIBGroup, myArpIfEntry=myArpIfEntry, myArpNetAddress=myArpNetAddress, myArpMIB=myArpMIB, myArpRemainAge=myArpRemainAge, myArpMIBObjects=myArpMIBObjects, myArpIfCacheTimeOut=myArpIfCacheTimeOut, myArpMIBCompliances=myArpMIBCompliances, myArpMIBCompliance=myArpMIBCompliance, myArpIfIfIndex=myArpIfIfIndex, myArpTable=myArpTable, PYSNMP_MODULE_ID=myArpMIB, myArpMIBConformance=myArpMIBConformance, myArpEntryType=myArpEntryType, myArpIfIndex=myArpIfIndex, myArpIfTable=myArpIfTable, myArpType=myArpType, myArpStatus=myArpStatus, myArpMIBGroups=myArpMIBGroups, myArpCurrentUnresolveNumber=myArpCurrentUnresolveNumber, myArpEntry=myArpEntry)
