#
# PySNMP MIB module TPLINK-NDDETECTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-NDDETECTION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:17:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, ModuleIdentity, Bits, Unsigned32, Counter64, ObjectIdentity, NotificationType, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "ModuleIdentity", "Bits", "Unsigned32", "Counter64", "ObjectIdentity", "NotificationType", "Counter32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkNdDetectionMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 93))
tplinkNdDetectionMIB.setRevisions(('2012-12-17 10:14',))
if mibBuilder.loadTexts: tplinkNdDetectionMIB.setLastUpdated('201212171014Z')
if mibBuilder.loadTexts: tplinkNdDetectionMIB.setOrganization('TPLINK')
tplinkNdDetectionMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1))
tplinkNdDetectionNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 93, 2))
ndDetectionGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 1))
ndDetectionPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 3))
ndDetectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ndDetectionEnable.setStatus('current')
ndDetectionVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 1, 2), )
if mibBuilder.loadTexts: ndDetectionVlanConfigTable.setStatus('current')
ndDetectionVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 1, 2, 1), ).setIndexNames((0, "TPLINK-NDDETECTION-MIB", "ndDetectionVlanId"))
if mibBuilder.loadTexts: ndDetectionVlanConfigEntry.setStatus('current')
ndDetectionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ndDetectionVlanId.setStatus('current')
ndDetectionVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ndDetectionVlanStatus.setStatus('current')
ndDetectionPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 3, 1), )
if mibBuilder.loadTexts: ndDetectionPortConfigTable.setStatus('current')
ndDetectionPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ndDetectionPortConfigEntry.setStatus('current')
ndDetectionPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ndDetectionPort.setStatus('current')
ndDetectionPortConfigTrustedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ndDetectionPortConfigTrustedPort.setStatus('current')
ndDetectionPortConfigPortLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 93, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ndDetectionPortConfigPortLag.setStatus('current')
mibBuilder.exportSymbols("TPLINK-NDDETECTION-MIB", tplinkNdDetectionNotifications=tplinkNdDetectionNotifications, tplinkNdDetectionMIBObjects=tplinkNdDetectionMIBObjects, ndDetectionVlanConfigTable=ndDetectionVlanConfigTable, ndDetectionPortConfigTrustedPort=ndDetectionPortConfigTrustedPort, ndDetectionPortConfigPortLag=ndDetectionPortConfigPortLag, ndDetectionVlanId=ndDetectionVlanId, ndDetectionVlanStatus=ndDetectionVlanStatus, ndDetectionPortConfigTable=ndDetectionPortConfigTable, ndDetectionEnable=ndDetectionEnable, tplinkNdDetectionMIB=tplinkNdDetectionMIB, ndDetectionVlanConfigEntry=ndDetectionVlanConfigEntry, ndDetectionPort=ndDetectionPort, ndDetectionPortConfigEntry=ndDetectionPortConfigEntry, ndDetectionGlobalConfig=ndDetectionGlobalConfig, ndDetectionPortConfig=ndDetectionPortConfig, PYSNMP_MODULE_ID=tplinkNdDetectionMIB)
