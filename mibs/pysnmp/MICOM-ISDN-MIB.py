#
# PySNMP MIB module MICOM-ISDN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MICOM-ISDN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:02:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
dialCtlPeerCfgId, callActiveSetupTime, callActiveIndex = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "dialCtlPeerCfgId", "callActiveSetupTime", "callActiveIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
micom_oscar, = mibBuilder.importSymbols("MICOM-OSCAR-MIB", "micom-oscar")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, Unsigned32, Integer32, ModuleIdentity, ObjectIdentity, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, iso, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "Unsigned32", "Integer32", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "iso", "NotificationType", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
micom_isdn = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 24)).setLabel("micom-isdn")
configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1))
control = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2))
nvmIsdnBasicRateTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 1), )
if mibBuilder.loadTexts: nvmIsdnBasicRateTable.setStatus('mandatory')
nvmIsdnBasicRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nvmIsdnBasicRateEntry.setStatus('mandatory')
nvmIsdnBasicRateLineTopology = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pointToPoint", 1), ("pointToMultipoint", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnBasicRateLineTopology.setStatus('mandatory')
nvmIsdnBasicRateSignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dialup", 1), ("leased", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnBasicRateSignalMode.setStatus('mandatory')
nvmIsdnSignalingTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 2), )
if mibBuilder.loadTexts: nvmIsdnSignalingTable.setStatus('mandatory')
nvmIsdnSignalingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 2, 1), ).setIndexNames((0, "MICOM-ISDN-MIB", "nvmIsdnSignalingIndex"))
if mibBuilder.loadTexts: nvmIsdnSignalingEntry.setStatus('mandatory')
nvmIsdnSignalingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmIsdnSignalingIndex.setStatus('mandatory')
nvmIsdnSignalingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 6, 7, 9, 12, 13, 17, 19, 23))).clone(namedValues=NamedValues(("dss1", 2), ("etsi", 3), ("ess5", 6), ("dms100", 7), ("ni1", 9), ("vn2", 12), ("vn3", 13), ("ins64", 17), ("itr6", 19), ("qsig", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnSignalingProtocol.setStatus('mandatory')
nvmIsdnSignalingCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 131))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnSignalingCallingAddress.setStatus('mandatory')
nvmIsdnSignalingSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 131))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnSignalingSubAddress.setStatus('mandatory')
nvmIsdnSignalingInfoTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnSignalingInfoTrapEnable.setStatus('mandatory')
mcmIsdnLapdTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3), )
if mibBuilder.loadTexts: mcmIsdnLapdTable.setStatus('mandatory')
mcmIsdnLapdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: mcmIsdnLapdEntry.setStatus('mandatory')
mcmIsdnLapdTxwinsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdTxwinsiz.setStatus('mandatory')
mcmIsdnLapdRxwinsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdRxwinsiz.setStatus('mandatory')
mcmIsdnLapdTxfrmsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdTxfrmsiz.setStatus('mandatory')
mcmIsdnLapdRxfrmsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdRxfrmsiz.setStatus('mandatory')
mcmIsdnLapdTimert200 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(1000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdTimert200.setStatus('mandatory')
mcmIsdnLapdTimert201 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(1000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdTimert201.setStatus('mandatory')
mcmIsdnLapdTimert202 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(2000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdTimert202.setStatus('mandatory')
mcmIsdnLapdTimert203 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(10000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdTimert203.setStatus('mandatory')
mcmIsdnLapdTimertm20 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdTimertm20.setStatus('mandatory')
mcmIsdnLapdn200 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdn200.setStatus('mandatory')
mcmIsdnLapdn202 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdn202.setStatus('mandatory')
mcmIsdnLapdnm20 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdnm20.setStatus('mandatory')
nvmIsdnLapdTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4), )
if mibBuilder.loadTexts: nvmIsdnLapdTable.setStatus('mandatory')
nvmIsdnLapdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nvmIsdnLapdEntry.setStatus('mandatory')
nvmIsdnLapdTxwinsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdTxwinsiz.setStatus('mandatory')
nvmIsdnLapdRxwinsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdRxwinsiz.setStatus('mandatory')
nvmIsdnLapdTxfrmsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdTxfrmsiz.setStatus('mandatory')
nvmIsdnLapdRxfrmsiz = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdRxfrmsiz.setStatus('mandatory')
nvmIsdnLapdTimert200 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdTimert200.setStatus('mandatory')
nvmIsdnLapdTimert201 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdTimert201.setStatus('mandatory')
nvmIsdnLapdTimert202 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdTimert202.setStatus('mandatory')
nvmIsdnLapdTimert203 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdTimert203.setStatus('mandatory')
nvmIsdnLapdTimertm20 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdTimertm20.setStatus('mandatory')
nvmIsdnLapdn200 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdn200.setStatus('mandatory')
nvmIsdnLapdn202 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdn202.setStatus('mandatory')
nvmIsdnLapdnm20 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnLapdnm20.setStatus('mandatory')
nvmIsdnEndpointTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 5), )
if mibBuilder.loadTexts: nvmIsdnEndpointTable.setStatus('mandatory')
nvmIsdnEndpointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 5, 1), ).setIndexNames((0, "MICOM-ISDN-MIB", "nvmIsdnEndpointIndex"))
if mibBuilder.loadTexts: nvmIsdnEndpointEntry.setStatus('mandatory')
nvmIsdnEndpointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmIsdnEndpointIndex.setStatus('mandatory')
nvmIsdnEndpointTeiType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnEndpointTeiType.setStatus('mandatory')
nvmIsdnEndpointTeiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnEndpointTeiValue.setStatus('mandatory')
nvmIsdnEndpointSpid = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 131))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnEndpointSpid.setStatus('mandatory')
nvmIsdnDirectoryTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 6), )
if mibBuilder.loadTexts: nvmIsdnDirectoryTable.setStatus('mandatory')
nvmIsdnDirectoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 6, 1), ).setIndexNames((0, "MICOM-ISDN-MIB", "nvmIsdnDirectoryIndex"))
if mibBuilder.loadTexts: nvmIsdnDirectoryEntry.setStatus('mandatory')
nvmIsdnDirectoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmIsdnDirectoryIndex.setStatus('mandatory')
nvmIsdnDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 131))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnDirectoryNumber.setStatus('mandatory')
nvmIsdnDirectorySigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnDirectorySigIndex.setStatus('mandatory')
nvmIsdnDirectoryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("delete", 2), ("active", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIsdnDirectoryStatus.setStatus('mandatory')
nvmDialCtlConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 7))
nvmDialCtlAcceptMode = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acceptNone", 1), ("acceptAll", 2), ("acceptKnown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlAcceptMode.setStatus('mandatory')
nvmDialCtlTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlTrapEnable.setStatus('mandatory')
mcmDialCtlPeerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 8), )
if mibBuilder.loadTexts: mcmDialCtlPeerCfgTable.setStatus('mandatory')
mcmDialCtlPeerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 8, 1), ).setIndexNames((0, "MICOM-ISDN-MIB", "mcmDialCtlPeerCfgId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: mcmDialCtlPeerCfgEntry.setStatus('mandatory')
mcmDialCtlPeerCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmDialCtlPeerCfgId.setStatus('mandatory')
mcmDialCtlPeerCfgBchannel = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmDialCtlPeerCfgBchannel.setStatus('mandatory')
nvmDialCtlPeerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9), )
if mibBuilder.loadTexts: nvmDialCtlPeerCfgTable.setStatus('mandatory')
nvmDialCtlPeerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1), ).setIndexNames((0, "MICOM-ISDN-MIB", "nvmDialCtlPeerCfgId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nvmDialCtlPeerCfgEntry.setStatus('mandatory')
nvmDialCtlPeerCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgId.setStatus('mandatory')
nvmDialCtlPeerCfgBchannel = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgBchannel.setStatus('mandatory')
nvmDialCtlPeerCfgLowerIf = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgLowerIf.setStatus('mandatory')
nvmDialCtlPeerCfgOriginateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 131))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgOriginateAddress.setStatus('mandatory')
nvmDialCtlPeerCfgSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 131))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgSubAddress.setStatus('mandatory')
nvmDialCtlPeerCfgClosedUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 131))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgClosedUserGroup.setStatus('mandatory')
nvmDialCtlPeerCfgSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgSpeed.setStatus('mandatory')
nvmDialCtlPeerCfgInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("other", 1), ("speech", 2), ("unrestrictedDigital", 3), ("unrestrictedDigital56", 4), ("restrictedDigital", 5), ("audio31", 6), ("audio7", 7), ("video", 8), ("packetSwitched", 9), ("fax", 10))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgInfoType.setStatus('mandatory')
nvmDialCtlPeerCfgPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("originate", 1), ("answer", 2), ("both", 3), ("none", 5))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgPermission.setStatus('mandatory')
nvmDialCtlPeerCfgCallRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgCallRetries.setStatus('mandatory')
nvmDialCtlPeerCfgRetryDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgRetryDelay.setStatus('mandatory')
nvmDialCtlPeerCfgFailureDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgFailureDelay.setStatus('mandatory')
nvmDialCtlPeerCfgTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgTrapEnable.setStatus('mandatory')
nvmDialCtlPeerCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 9, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("delete", 2), ("active", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmDialCtlPeerCfgStatus.setStatus('mandatory')
nvmCallHistoryTableMaxLength = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmCallHistoryTableMaxLength.setStatus('mandatory')
mcmIsdnSigStatsCntrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 1), )
if mibBuilder.loadTexts: mcmIsdnSigStatsCntrTable.setStatus('obsolete')
mcmIsdnSigStatsCntrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 1, 1), ).setIndexNames((0, "MICOM-ISDN-MIB", "mcmIsdnSigStatsCntrIndex"))
if mibBuilder.loadTexts: mcmIsdnSigStatsCntrEntry.setStatus('obsolete')
mcmIsdnSigStatsCntrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnSigStatsCntrIndex.setStatus('obsolete')
mcmIsdnSigStatsCntrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcmIsdnSigStatsCntrAction.setStatus('obsolete')
mcmIsdnLapdCntrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 2), )
if mibBuilder.loadTexts: mcmIsdnLapdCntrTable.setStatus('obsolete')
mcmIsdnLapdCntrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 2, 1), ).setIndexNames((0, "MICOM-ISDN-MIB", "mcmIsdnLapdCntrIndex"))
if mibBuilder.loadTexts: mcmIsdnLapdCntrEntry.setStatus('obsolete')
mcmIsdnLapdCntrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIsdnLapdCntrIndex.setStatus('obsolete')
mcmIsdnLapdCntrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcmIsdnLapdCntrAction.setStatus('obsolete')
mcmDialCtlPeerStatsGaugeTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 3), )
if mibBuilder.loadTexts: mcmDialCtlPeerStatsGaugeTable.setStatus('obsolete')
mcmDialCtlPeerStatsGaugeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 3, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "dialCtlPeerCfgId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: mcmDialCtlPeerStatsGaugeEntry.setStatus('obsolete')
mcmDialCtlPeerStatsGaugeAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcmDialCtlPeerStatsGaugeAction.setStatus('obsolete')
mcmCallActiveGaugeTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 4), )
if mibBuilder.loadTexts: mcmCallActiveGaugeTable.setStatus('obsolete')
mcmCallActiveGaugeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 4, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: mcmCallActiveGaugeEntry.setStatus('obsolete')
mcmCallActiveGaugeAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcmCallActiveGaugeAction.setStatus('obsolete')
mcmCallHistoryTableResetCmd = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 24, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcmCallHistoryTableResetCmd.setStatus('obsolete')
mibBuilder.exportSymbols("MICOM-ISDN-MIB", nvmIsdnEndpointTeiType=nvmIsdnEndpointTeiType, nvmIsdnLapdRxfrmsiz=nvmIsdnLapdRxfrmsiz, nvmDialCtlPeerCfgSubAddress=nvmDialCtlPeerCfgSubAddress, nvmIsdnDirectoryTable=nvmIsdnDirectoryTable, nvmDialCtlPeerCfgCallRetries=nvmDialCtlPeerCfgCallRetries, mcmIsdnLapdn200=mcmIsdnLapdn200, nvmDialCtlPeerCfgEntry=nvmDialCtlPeerCfgEntry, nvmIsdnEndpointEntry=nvmIsdnEndpointEntry, mcmDialCtlPeerCfgBchannel=mcmDialCtlPeerCfgBchannel, nvmDialCtlPeerCfgOriginateAddress=nvmDialCtlPeerCfgOriginateAddress, nvmIsdnLapdTimert203=nvmIsdnLapdTimert203, nvmDialCtlPeerCfgLowerIf=nvmDialCtlPeerCfgLowerIf, nvmIsdnLapdTimertm20=nvmIsdnLapdTimertm20, mcmIsdnLapdTimertm20=mcmIsdnLapdTimertm20, mcmDialCtlPeerCfgEntry=mcmDialCtlPeerCfgEntry, mcmIsdnLapdRxfrmsiz=mcmIsdnLapdRxfrmsiz, nvmDialCtlPeerCfgStatus=nvmDialCtlPeerCfgStatus, mcmCallHistoryTableResetCmd=mcmCallHistoryTableResetCmd, nvmIsdnSignalingProtocol=nvmIsdnSignalingProtocol, nvmIsdnDirectorySigIndex=nvmIsdnDirectorySigIndex, nvmIsdnLapdTimert201=nvmIsdnLapdTimert201, mcmIsdnLapdn202=mcmIsdnLapdn202, mcmCallActiveGaugeAction=mcmCallActiveGaugeAction, nvmDialCtlPeerCfgId=nvmDialCtlPeerCfgId, mcmIsdnLapdTimert201=mcmIsdnLapdTimert201, nvmDialCtlPeerCfgClosedUserGroup=nvmDialCtlPeerCfgClosedUserGroup, nvmIsdnLapdEntry=nvmIsdnLapdEntry, mcmIsdnLapdCntrIndex=mcmIsdnLapdCntrIndex, nvmDialCtlPeerCfgBchannel=nvmDialCtlPeerCfgBchannel, nvmIsdnSignalingInfoTrapEnable=nvmIsdnSignalingInfoTrapEnable, nvmIsdnEndpointTable=nvmIsdnEndpointTable, nvmIsdnLapdTimert202=nvmIsdnLapdTimert202, mcmIsdnLapdCntrAction=mcmIsdnLapdCntrAction, micom_isdn=micom_isdn, mcmDialCtlPeerStatsGaugeAction=mcmDialCtlPeerStatsGaugeAction, nvmIsdnLapdn200=nvmIsdnLapdn200, nvmDialCtlPeerCfgInfoType=nvmDialCtlPeerCfgInfoType, nvmDialCtlConfiguration=nvmDialCtlConfiguration, control=control, nvmCallHistoryTableMaxLength=nvmCallHistoryTableMaxLength, mcmIsdnSigStatsCntrEntry=mcmIsdnSigStatsCntrEntry, mcmIsdnLapdTable=mcmIsdnLapdTable, configuration=configuration, nvmDialCtlTrapEnable=nvmDialCtlTrapEnable, nvmIsdnSignalingTable=nvmIsdnSignalingTable, nvmIsdnEndpointSpid=nvmIsdnEndpointSpid, mcmIsdnLapdTxfrmsiz=mcmIsdnLapdTxfrmsiz, mcmIsdnSigStatsCntrIndex=mcmIsdnSigStatsCntrIndex, mcmDialCtlPeerCfgTable=mcmDialCtlPeerCfgTable, mcmIsdnLapdTxwinsiz=mcmIsdnLapdTxwinsiz, mcmIsdnSigStatsCntrTable=mcmIsdnSigStatsCntrTable, mcmDialCtlPeerStatsGaugeEntry=mcmDialCtlPeerStatsGaugeEntry, nvmDialCtlPeerCfgPermission=nvmDialCtlPeerCfgPermission, mcmDialCtlPeerCfgId=mcmDialCtlPeerCfgId, nvmIsdnBasicRateSignalMode=nvmIsdnBasicRateSignalMode, mcmIsdnLapdnm20=mcmIsdnLapdnm20, mcmCallActiveGaugeTable=mcmCallActiveGaugeTable, nvmDialCtlPeerCfgRetryDelay=nvmDialCtlPeerCfgRetryDelay, nvmIsdnEndpointIndex=nvmIsdnEndpointIndex, nvmIsdnDirectoryNumber=nvmIsdnDirectoryNumber, mcmDialCtlPeerStatsGaugeTable=mcmDialCtlPeerStatsGaugeTable, nvmDialCtlPeerCfgTable=nvmDialCtlPeerCfgTable, mcmIsdnLapdTimert203=mcmIsdnLapdTimert203, nvmIsdnBasicRateEntry=nvmIsdnBasicRateEntry, nvmIsdnLapdn202=nvmIsdnLapdn202, nvmIsdnSignalingSubAddress=nvmIsdnSignalingSubAddress, nvmIsdnDirectoryIndex=nvmIsdnDirectoryIndex, mcmCallActiveGaugeEntry=mcmCallActiveGaugeEntry, mcmIsdnLapdTimert200=mcmIsdnLapdTimert200, nvmDialCtlPeerCfgTrapEnable=nvmDialCtlPeerCfgTrapEnable, nvmIsdnLapdTxfrmsiz=nvmIsdnLapdTxfrmsiz, nvmIsdnLapdTable=nvmIsdnLapdTable, mcmIsdnLapdCntrTable=mcmIsdnLapdCntrTable, nvmIsdnLapdTimert200=nvmIsdnLapdTimert200, nvmDialCtlAcceptMode=nvmDialCtlAcceptMode, nvmIsdnSignalingCallingAddress=nvmIsdnSignalingCallingAddress, mcmIsdnLapdTimert202=mcmIsdnLapdTimert202, mcmIsdnLapdCntrEntry=mcmIsdnLapdCntrEntry, nvmIsdnLapdTxwinsiz=nvmIsdnLapdTxwinsiz, nvmDialCtlPeerCfgSpeed=nvmDialCtlPeerCfgSpeed, nvmIsdnEndpointTeiValue=nvmIsdnEndpointTeiValue, nvmIsdnLapdnm20=nvmIsdnLapdnm20, mcmIsdnLapdEntry=mcmIsdnLapdEntry, nvmIsdnSignalingEntry=nvmIsdnSignalingEntry, nvmDialCtlPeerCfgFailureDelay=nvmDialCtlPeerCfgFailureDelay, nvmIsdnBasicRateTable=nvmIsdnBasicRateTable, nvmIsdnLapdRxwinsiz=nvmIsdnLapdRxwinsiz, mcmIsdnLapdRxwinsiz=mcmIsdnLapdRxwinsiz, nvmIsdnDirectoryEntry=nvmIsdnDirectoryEntry, nvmIsdnSignalingIndex=nvmIsdnSignalingIndex, nvmIsdnDirectoryStatus=nvmIsdnDirectoryStatus, mcmIsdnSigStatsCntrAction=mcmIsdnSigStatsCntrAction, nvmIsdnBasicRateLineTopology=nvmIsdnBasicRateLineTopology)
