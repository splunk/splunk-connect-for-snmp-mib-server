#
# PySNMP MIB module NETSCREEN-ADDR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-ADDR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
netscreenAddr, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenAddr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, NotificationType, Integer32, ObjectIdentity, MibIdentifier, Unsigned32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, iso, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Integer32", "ObjectIdentity", "MibIdentifier", "Unsigned32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "iso", "Counter64", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenAddrMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 12, 0))
netscreenAddrMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-10 00:00', '2001-09-28 00:00', '2001-05-14 00:00',))
if mibBuilder.loadTexts: netscreenAddrMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenAddrMibModule.setOrganization('Juniper Networks, Inc.')
nsAddrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 12, 1), )
if mibBuilder.loadTexts: nsAddrTable.setStatus('current')
nsAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1), ).setIndexNames((0, "NETSCREEN-ADDR-MIB", "nsAddrIndex"))
if mibBuilder.loadTexts: nsAddrEntry.setStatus('current')
nsAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrIndex.setStatus('current')
nsAddrName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrName.setStatus('current')
nsAddrVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrVsys.setStatus('current')
nsAddrZone = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrZone.setStatus('current')
nsAddrIpOrDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrIpOrDomain.setStatus('current')
nsAddrNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrNetmask.setStatus('current')
nsAddrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrComment.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-ADDR-MIB", nsAddrZone=nsAddrZone, nsAddrEntry=nsAddrEntry, PYSNMP_MODULE_ID=netscreenAddrMibModule, nsAddrName=nsAddrName, nsAddrComment=nsAddrComment, nsAddrIndex=nsAddrIndex, nsAddrTable=nsAddrTable, nsAddrIpOrDomain=nsAddrIpOrDomain, nsAddrVsys=nsAddrVsys, nsAddrNetmask=nsAddrNetmask, netscreenAddrMibModule=netscreenAddrMibModule)
