#
# PySNMP MIB module HPN-ICF-STORM-CONSTRAIN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-STORM-CONSTRAIN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, TimeTicks, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, MibIdentifier, Gauge32, ObjectIdentity, Counter64, Counter32, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "MibIdentifier", "Gauge32", "ObjectIdentity", "Counter64", "Counter32", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hpnicfStormConstrain = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66))
if mibBuilder.loadTexts: hpnicfStormConstrain.setLastUpdated('200806060000Z')
if mibBuilder.loadTexts: hpnicfStormConstrain.setOrganization('')
class HpnicfStormConstrainUnit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 1), ("packetsPerSecond", 2), ("ratio", 3), ("bytesPerSecond", 4), ("kbitsPerSecond", 5))

hpnicfStormScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 1))
hpnicfStormTrapType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unicast", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfStormTrapType.setStatus('current')
hpnicfStormTrapThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfStormTrapThreshold.setStatus('current')
hpnicfStormTableGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2))
hpnicfStormCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1), )
if mibBuilder.loadTexts: hpnicfStormCtrlTable.setStatus('current')
hpnicfStormCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfStormCtrlEntry.setStatus('current')
hpnicfStormCtrlPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("controlled", 1), ("normal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfStormCtrlPortStatus.setStatus('current')
hpnicfStormCtrlBroadcastUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 2), HpnicfStormConstrainUnit()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlBroadcastUnit.setStatus('current')
hpnicfStormCtrlBroadcastUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlBroadcastUpper.setStatus('current')
hpnicfStormCtrlBroadcastLower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlBroadcastLower.setStatus('current')
hpnicfStormCtrlMulticastUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 5), HpnicfStormConstrainUnit()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlMulticastUnit.setStatus('current')
hpnicfStormCtrlMulticastUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlMulticastUpper.setStatus('current')
hpnicfStormCtrlMulticastLower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlMulticastLower.setStatus('current')
hpnicfStormCtrlUnicastUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 8), HpnicfStormConstrainUnit()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlUnicastUnit.setStatus('current')
hpnicfStormCtrlUnicastUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlUnicastUpper.setStatus('current')
hpnicfStormCtrlUnicastLower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlUnicastLower.setStatus('current')
hpnicfStormCtrlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlRowStatus.setStatus('current')
hpnicfStormCtrlPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("block", 2), ("shutdown", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfStormCtrlPortMode.setStatus('current')
hpnicfStormNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 3))
hpnicfStormRising = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 3, 1)).setObjects(("IF-MIB", "ifIndex"), ("HPN-ICF-STORM-CONSTRAIN-MIB", "hpnicfStormTrapType"), ("HPN-ICF-STORM-CONSTRAIN-MIB", "hpnicfStormTrapThreshold"), ("HPN-ICF-STORM-CONSTRAIN-MIB", "hpnicfStormCtrlPortStatus"))
if mibBuilder.loadTexts: hpnicfStormRising.setStatus('current')
hpnicfStormFalling = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 66, 3, 2)).setObjects(("IF-MIB", "ifIndex"), ("HPN-ICF-STORM-CONSTRAIN-MIB", "hpnicfStormTrapType"), ("HPN-ICF-STORM-CONSTRAIN-MIB", "hpnicfStormTrapThreshold"), ("HPN-ICF-STORM-CONSTRAIN-MIB", "hpnicfStormCtrlPortStatus"))
if mibBuilder.loadTexts: hpnicfStormFalling.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-STORM-CONSTRAIN-MIB", hpnicfStormScalarGroup=hpnicfStormScalarGroup, hpnicfStormCtrlPortStatus=hpnicfStormCtrlPortStatus, hpnicfStormCtrlMulticastLower=hpnicfStormCtrlMulticastLower, hpnicfStormCtrlBroadcastUpper=hpnicfStormCtrlBroadcastUpper, HpnicfStormConstrainUnit=HpnicfStormConstrainUnit, hpnicfStormTableGroup=hpnicfStormTableGroup, hpnicfStormCtrlUnicastUpper=hpnicfStormCtrlUnicastUpper, hpnicfStormRising=hpnicfStormRising, hpnicfStormCtrlUnicastLower=hpnicfStormCtrlUnicastLower, hpnicfStormCtrlMulticastUnit=hpnicfStormCtrlMulticastUnit, hpnicfStormCtrlEntry=hpnicfStormCtrlEntry, hpnicfStormCtrlPortMode=hpnicfStormCtrlPortMode, hpnicfStormCtrlTable=hpnicfStormCtrlTable, hpnicfStormCtrlUnicastUnit=hpnicfStormCtrlUnicastUnit, hpnicfStormTrapType=hpnicfStormTrapType, hpnicfStormCtrlBroadcastLower=hpnicfStormCtrlBroadcastLower, hpnicfStormConstrain=hpnicfStormConstrain, hpnicfStormTrapThreshold=hpnicfStormTrapThreshold, hpnicfStormNotifications=hpnicfStormNotifications, hpnicfStormCtrlRowStatus=hpnicfStormCtrlRowStatus, hpnicfStormCtrlMulticastUpper=hpnicfStormCtrlMulticastUpper, hpnicfStormFalling=hpnicfStormFalling, hpnicfStormCtrlBroadcastUnit=hpnicfStormCtrlBroadcastUnit, PYSNMP_MODULE_ID=hpnicfStormConstrain)
