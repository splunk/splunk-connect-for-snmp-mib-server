#
# PySNMP MIB module WWP-EXT-BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-EXT-BRIDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, Integer32, TimeTicks, ObjectIdentity, Bits, IpAddress, Counter32, iso, Counter64, MibIdentifier, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Integer32", "TimeTicks", "ObjectIdentity", "Bits", "IpAddress", "Counter32", "iso", "Counter64", "MibIdentifier", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
MacAddress, RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpExtBridgeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 4))
wwpExtBridgeMIB.setRevisions(('2005-11-23 09:00', '2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpExtBridgeMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpExtBridgeMIB.setOrganization('World Wide Packets, Inc')
class PortList(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class VlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

wwpExtBridgeMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1))
wwpPort = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1))
wwpVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2))
wwpExtBridgeMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 2))
wwpExtBridgeMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 2, 0))
wwpExtBridgeMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 3))
wwpExtBridgeMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 3, 1))
wwpExtBridgeMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 4, 3, 2))
wwpPortTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1), )
if mibBuilder.loadTexts: wwpPortTable.setStatus('current')
wwpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1), ).setIndexNames((0, "WWP-EXT-BRIDGE-MIB", "wwpPortId"))
if mibBuilder.loadTexts: wwpPortEntry.setStatus('current')
wwpPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPortId.setStatus('current')
wwpPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("lx", 1), ("fastEth", 2), ("voip", 3), ("sx", 4), ("hundredFx", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPortType.setStatus('current')
wwpPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortName.setStatus('current')
wwpPortPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPortPhysAddr.setStatus('current')
wwpPortAutoNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortAutoNeg.setStatus('current')
wwpPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortAdminStatus.setStatus('current')
wwpPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPortOperStatus.setStatus('current')
wwpPortAdminSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tenMb", 1), ("hundredMb", 2), ("gig", 3), ("auto", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortAdminSpeed.setStatus('current')
wwpPortOperSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPortOperSpeed.setStatus('current')
wwpPortAdminDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("half", 1), ("full", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortAdminDuplex.setStatus('current')
wwpPortOperDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("half", 1), ("full", 2), ("auto", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPortOperDuplex.setStatus('current')
wwpPortAdminFlowCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortAdminFlowCtrl.setStatus('current')
wwpPortOperFlowCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPortOperFlowCtrl.setStatus('current')
wwpPortTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("untagged", 0), ("tagged", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortTagged.setStatus('current')
wwpPortUntaggedPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("p0", 0), ("p1", 1), ("p2", 2), ("p3", 3), ("p4", 4), ("p5", 5), ("p6", 6), ("p7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortUntaggedPriority.setStatus('current')
wwpPortMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1522, 9126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortMaxFrameSize.setStatus('current')
wwpPortIngressFiltering = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortIngressFiltering.setStatus('current')
wwpPortRateLimitState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortRateLimitState.setStatus('current')
wwpPortRateLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10000000)).setUnits('Bits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPortRateLimitValue.setStatus('current')
wwpLocalMgmtPortEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLocalMgmtPortEnable.setStatus('deprecated')
wwpVlanVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("version1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpVlanVersionNumber.setStatus('current')
wwpMaxVlanId = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 2), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpMaxVlanId.setStatus('current')
wwpMaxSupportedVlans = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpMaxSupportedVlans.setStatus('current')
wwpNumVlans = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpNumVlans.setStatus('current')
wwpVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5), )
if mibBuilder.loadTexts: wwpVlanTable.setStatus('current')
wwpVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5, 1), ).setIndexNames((0, "WWP-EXT-BRIDGE-MIB", "wwpVlanId"))
if mibBuilder.loadTexts: wwpVlanEntry.setStatus('current')
wwpVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpVlanId.setStatus('current')
wwpVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpVlanName.setStatus('current')
wwpVlanCurrentEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5, 1, 3), PortList().clone(hexValue="0000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpVlanCurrentEgressPorts.setStatus('current')
wwpVlanCurrentUntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpVlanCurrentUntaggedPorts.setStatus('current')
wwpVlanMgmtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notMgmtVlan", 0), ("remoteMgmtVlan", 1), ("localMgmtVlan", 2))).clone('notMgmtVlan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpVlanMgmtStatus.setStatus('current')
wwpVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 5, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpVlanRowStatus.setStatus('current')
wwpVlanXTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 6), )
if mibBuilder.loadTexts: wwpVlanXTable.setStatus('current')
wwpVlanXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 6, 1), )
wwpVlanEntry.registerAugmentions(("WWP-EXT-BRIDGE-MIB", "wwpVlanXEntry"))
wwpVlanXEntry.setIndexNames(*wwpVlanEntry.getIndexNames())
if mibBuilder.loadTexts: wwpVlanXEntry.setStatus('current')
wwpVlanTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 4, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpVlanTunnel.setStatus('current')
mibBuilder.exportSymbols("WWP-EXT-BRIDGE-MIB", wwpVlan=wwpVlan, wwpVlanXTable=wwpVlanXTable, wwpPortOperSpeed=wwpPortOperSpeed, wwpExtBridgeMIBNotificationPrefix=wwpExtBridgeMIBNotificationPrefix, wwpExtBridgeMIBNotifications=wwpExtBridgeMIBNotifications, wwpPortAdminDuplex=wwpPortAdminDuplex, wwpExtBridgeMIBCompliances=wwpExtBridgeMIBCompliances, wwpPortAdminStatus=wwpPortAdminStatus, wwpPortAutoNeg=wwpPortAutoNeg, wwpVlanXEntry=wwpVlanXEntry, wwpVlanTunnel=wwpVlanTunnel, wwpNumVlans=wwpNumVlans, wwpPortRateLimitValue=wwpPortRateLimitValue, wwpVlanId=wwpVlanId, wwpPortTagged=wwpPortTagged, wwpVlanCurrentUntaggedPorts=wwpVlanCurrentUntaggedPorts, wwpVlanName=wwpVlanName, wwpPortOperStatus=wwpPortOperStatus, wwpLocalMgmtPortEnable=wwpLocalMgmtPortEnable, wwpPortEntry=wwpPortEntry, wwpExtBridgeMIBConformance=wwpExtBridgeMIBConformance, wwpPortName=wwpPortName, wwpVlanVersionNumber=wwpVlanVersionNumber, wwpMaxVlanId=wwpMaxVlanId, wwpVlanTable=wwpVlanTable, PortList=PortList, wwpExtBridgeMIBObjects=wwpExtBridgeMIBObjects, wwpPortIngressFiltering=wwpPortIngressFiltering, wwpPortId=wwpPortId, wwpVlanEntry=wwpVlanEntry, wwpPortOperFlowCtrl=wwpPortOperFlowCtrl, wwpPortType=wwpPortType, wwpPortPhysAddr=wwpPortPhysAddr, wwpPortAdminSpeed=wwpPortAdminSpeed, wwpPortUntaggedPriority=wwpPortUntaggedPriority, wwpPortOperDuplex=wwpPortOperDuplex, wwpVlanMgmtStatus=wwpVlanMgmtStatus, wwpMaxSupportedVlans=wwpMaxSupportedVlans, PYSNMP_MODULE_ID=wwpExtBridgeMIB, wwpVlanRowStatus=wwpVlanRowStatus, wwpPortTable=wwpPortTable, VlanId=VlanId, wwpExtBridgeMIB=wwpExtBridgeMIB, wwpPortRateLimitState=wwpPortRateLimitState, wwpPort=wwpPort, wwpPortAdminFlowCtrl=wwpPortAdminFlowCtrl, wwpExtBridgeMIBGroups=wwpExtBridgeMIBGroups, wwpPortMaxFrameSize=wwpPortMaxFrameSize, wwpVlanCurrentEgressPorts=wwpVlanCurrentEgressPorts)
