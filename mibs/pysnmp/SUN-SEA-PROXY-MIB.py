#
# PySNMP MIB module SUN-SEA-PROXY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SUN-SEA-PROXY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, NotificationType, Integer32, Gauge32, Unsigned32, Counter32, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, ModuleIdentity, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Integer32", "Gauge32", "Unsigned32", "Counter32", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "ModuleIdentity", "iso", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
products, = mibBuilder.importSymbols("SUN-MIB", "products")
sunSeaProxyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 2, 15))
if mibBuilder.loadTexts: sunSeaProxyMIB.setLastUpdated('200309180000Z')
if mibBuilder.loadTexts: sunSeaProxyMIB.setOrganization('Sun Microsystems, Inc.')
sunSeaProxyMIBStatusFile = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSeaProxyMIBStatusFile.setStatus('mandatory')
sunSeaProxyMIBResourceConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSeaProxyMIBResourceConfigFile.setStatus('mandatory')
sunSeaProxyMIBConfigurationDir = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSeaProxyMIBConfigurationDir.setStatus('mandatory')
sunSeaProxyMIBTrapPort = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSeaProxyMIBTrapPort.setStatus('mandatory')
sunCheckSubAgentName = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunCheckSubAgentName.setStatus('mandatory')
sunSeaProxyMIBPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSeaProxyMIBPollInterval.setStatus('mandatory')
sunSeaProxyMIBMaxAgentTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSeaProxyMIBMaxAgentTimeOut.setStatus('mandatory')
sunSubAgentTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 15, 8), )
if mibBuilder.loadTexts: sunSubAgentTable.setStatus('mandatory')
sunSubAgentTableIndex = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentTableIndex.setStatus('mandatory')
sunSubAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1), ).setIndexNames((0, "SUN-SEA-PROXY-MIB", "sunSubAgentID"))
if mibBuilder.loadTexts: sunSubAgentEntry.setStatus('mandatory')
sunSubAgentID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubAgentID.setStatus('mandatory')
sunSubAgentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 1), ("load", 2), ("active", 3), ("inactive", 4), ("destroy", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentStatus.setStatus('mandatory')
sunSubAgentTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentTimeout.setStatus('mandatory')
sunSubAgentPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentPortNumber.setStatus('mandatory')
sunSubAgentRegistrationFile = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentRegistrationFile.setStatus('mandatory')
sunSubAgentAccessControlFile = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentAccessControlFile.setStatus('mandatory')
sunSubAgentExecutable = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentExecutable.setStatus('mandatory')
sunSubAgentVersionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentVersionNum.setStatus('mandatory')
sunSubAgentProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentProcessID.setStatus('mandatory')
sunSubAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentName.setStatus('mandatory')
sunSubAgentSystemUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 11), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentSystemUpTime.setStatus('mandatory')
sunSubAgentWatchDogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 8, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubAgentWatchDogTime.setStatus('mandatory')
sunSubTreeConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 15, 10), )
if mibBuilder.loadTexts: sunSubTreeConfigurationTable.setStatus('mandatory')
sunSubTreeConfigurationTableIndex = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeConfigurationTableIndex.setStatus('mandatory')
sunSubTreeConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1), ).setIndexNames((0, "SUN-SEA-PROXY-MIB", "sunSubTreeAgentID"), (0, "SUN-SEA-PROXY-MIB", "sunSubTreeIndex"))
if mibBuilder.loadTexts: sunSubTreeConfigurationEntry.setStatus('mandatory')
sunSubTreeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeIndex.setStatus('mandatory')
sunSubTreeAgentID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeAgentID.setStatus('mandatory')
sunSubTreeOID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeOID.setStatus('mandatory')
sunSubTreeStartColumn = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeStartColumn.setStatus('mandatory')
sunSubTreeEndColumn = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeEndColumn.setStatus('mandatory')
sunSubTreeStartRow = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeStartRow.setStatus('mandatory')
sunSubTreeEndRow = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeEndRow.setStatus('mandatory')
sunSubTreeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeStatus.setStatus('mandatory')
sunSubTreeDispatchTable = MibTable((1, 3, 6, 1, 4, 1, 42, 2, 15, 12), )
if mibBuilder.loadTexts: sunSubTreeDispatchTable.setStatus('mandatory')
sunSubTreeDispatchTableIndex = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 15, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeDispatchTableIndex.setStatus('mandatory')
sunSubTreeDispatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1), ).setIndexNames((0, "SUN-SEA-PROXY-MIB", "sunSubTreeDispatchAgentID"), (0, "SUN-SEA-PROXY-MIB", "sunSubTreeDispatchIndex"))
if mibBuilder.loadTexts: sunSubTreeDispatchEntry.setStatus('mandatory')
sunSubTreeDispatchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeDispatchIndex.setStatus('mandatory')
sunSubTreeDispatchAgentID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunSubTreeDispatchAgentID.setStatus('mandatory')
sunSubTreeDispatchOID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeDispatchOID.setStatus('mandatory')
sunSubTreeDispatchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 2, 15, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sunSubTreeDispatchStatus.setStatus('mandatory')
mibBuilder.exportSymbols("SUN-SEA-PROXY-MIB", sunSubTreeDispatchEntry=sunSubTreeDispatchEntry, sunSubTreeDispatchStatus=sunSubTreeDispatchStatus, sunSubTreeStartColumn=sunSubTreeStartColumn, sunSubTreeConfigurationEntry=sunSubTreeConfigurationEntry, sunSeaProxyMIB=sunSeaProxyMIB, sunSubAgentTimeout=sunSubAgentTimeout, sunSubTreeAgentID=sunSubTreeAgentID, sunSubTreeEndRow=sunSubTreeEndRow, sunSubTreeDispatchAgentID=sunSubTreeDispatchAgentID, PYSNMP_MODULE_ID=sunSeaProxyMIB, sunSubAgentAccessControlFile=sunSubAgentAccessControlFile, sunSeaProxyMIBStatusFile=sunSeaProxyMIBStatusFile, sunSubAgentName=sunSubAgentName, sunSubAgentTable=sunSubAgentTable, sunSeaProxyMIBPollInterval=sunSeaProxyMIBPollInterval, sunSubTreeConfigurationTableIndex=sunSubTreeConfigurationTableIndex, sunSubAgentSystemUpTime=sunSubAgentSystemUpTime, sunSubTreeEndColumn=sunSubTreeEndColumn, sunSubTreeStartRow=sunSubTreeStartRow, sunSubTreeConfigurationTable=sunSubTreeConfigurationTable, sunSubTreeIndex=sunSubTreeIndex, sunSeaProxyMIBMaxAgentTimeOut=sunSeaProxyMIBMaxAgentTimeOut, sunSubAgentStatus=sunSubAgentStatus, sunSubAgentExecutable=sunSubAgentExecutable, sunSubTreeDispatchOID=sunSubTreeDispatchOID, sunSubAgentPortNumber=sunSubAgentPortNumber, sunSeaProxyMIBResourceConfigFile=sunSeaProxyMIBResourceConfigFile, sunSubTreeOID=sunSubTreeOID, sunSeaProxyMIBTrapPort=sunSeaProxyMIBTrapPort, sunSubAgentEntry=sunSubAgentEntry, sunSubTreeDispatchIndex=sunSubTreeDispatchIndex, sunSubAgentProcessID=sunSubAgentProcessID, sunSubAgentID=sunSubAgentID, sunSubAgentVersionNum=sunSubAgentVersionNum, sunSubTreeStatus=sunSubTreeStatus, sunSubTreeDispatchTable=sunSubTreeDispatchTable, sunSubAgentRegistrationFile=sunSubAgentRegistrationFile, sunSeaProxyMIBConfigurationDir=sunSeaProxyMIBConfigurationDir, sunSubTreeDispatchTableIndex=sunSubTreeDispatchTableIndex, sunSubAgentTableIndex=sunSubAgentTableIndex, sunCheckSubAgentName=sunCheckSubAgentName, sunSubAgentWatchDogTime=sunSubAgentWatchDogTime)
