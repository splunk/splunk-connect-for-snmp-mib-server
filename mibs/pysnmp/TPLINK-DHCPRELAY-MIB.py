#
# PySNMP MIB module TPLINK-DHCPRELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-DHCPRELAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:17:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, iso, ModuleIdentity, TimeTicks, Counter32, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Bits, ObjectIdentity, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "ModuleIdentity", "TimeTicks", "Counter32", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Bits", "ObjectIdentity", "IpAddress", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkDhcpRelayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 39))
tplinkDhcpRelayMIB.setRevisions(('2012-12-17 11:21',))
if mibBuilder.loadTexts: tplinkDhcpRelayMIB.setLastUpdated('201212171121Z')
if mibBuilder.loadTexts: tplinkDhcpRelayMIB.setOrganization('TPLINK')
tplinkDhcpRelayMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1))
tplinkDhcpRelayNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 2))
dhcpRelayGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1))
dhcpRelayServerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2))
dhcpRelayEnableState = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayEnableState.setStatus('current')
dhcpRelayOption82Support = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82Support.setStatus('current')
dhcpRelayExistedOption82Field = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("keep", 0), ("replace", 1), ("drop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayExistedOption82Field.setStatus('current')
dhcpRelayOption82Customization = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82Customization.setStatus('current')
dhcpRelayOption82CircuitID = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82CircuitID.setStatus('current')
dhcpRelayOption82RemoteID = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82RemoteID.setStatus('current')
dhcpRelayServerVlanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1), )
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceTable.setStatus('current')
dhcpRelayServerVlanInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerVlanId"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerVlanInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceEntry.setStatus('current')
dhcpRelayServerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerVlanId.setStatus('current')
dhcpRelayServerVlanInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceIp.setStatus('current')
dhcpRelayServerVlanInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceStatus.setStatus('current')
dhcpRelayServerLoopbackInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2), )
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceTable.setStatus('current')
dhcpRelayServerLoopbackInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1), ).setIndexNames((0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerLoopbackId"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerLoopbackInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceEntry.setStatus('current')
dhcpRelayServerLoopbackId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerLoopbackId.setStatus('current')
dhcpRelayServerLoopbackInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceIp.setStatus('current')
dhcpRelayServerLoopbackInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceStatus.setStatus('current')
dhcpRelayServerRoutedPortInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3), )
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceTable.setStatus('current')
dhcpRelayServerRoutedPortInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerRoutedPortInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceEntry.setStatus('current')
dhcpRelayServerRoutedPortPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortPortId.setStatus('current')
dhcpRelayServerRoutedPortInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceIp.setStatus('current')
dhcpRelayServerRoutedPortInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceStatus.setStatus('current')
dhcpRelayServerPortChannelInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4), )
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceTable.setStatus('current')
dhcpRelayServerPortChannelInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerPortChannelInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceEntry.setStatus('current')
dhcpRelayServerPortChannelPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerPortChannelPortId.setStatus('current')
dhcpRelayServerPortChannelInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceIp.setStatus('current')
dhcpRelayServerPortChannelInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceStatus.setStatus('current')
mibBuilder.exportSymbols("TPLINK-DHCPRELAY-MIB", dhcpRelayServerRoutedPortInterfaceEntry=dhcpRelayServerRoutedPortInterfaceEntry, dhcpRelayServerPortChannelPortId=dhcpRelayServerPortChannelPortId, dhcpRelayServerPortChannelInterfaceStatus=dhcpRelayServerPortChannelInterfaceStatus, dhcpRelayServerPortChannelInterfaceTable=dhcpRelayServerPortChannelInterfaceTable, dhcpRelayServerVlanInterfaceEntry=dhcpRelayServerVlanInterfaceEntry, dhcpRelayServerRoutedPortInterfaceIp=dhcpRelayServerRoutedPortInterfaceIp, dhcpRelayServerVlanInterfaceIp=dhcpRelayServerVlanInterfaceIp, dhcpRelayOption82Customization=dhcpRelayOption82Customization, dhcpRelayServerPortChannelInterfaceEntry=dhcpRelayServerPortChannelInterfaceEntry, dhcpRelayOption82RemoteID=dhcpRelayOption82RemoteID, dhcpRelayEnableState=dhcpRelayEnableState, tplinkDhcpRelayMIBObjects=tplinkDhcpRelayMIBObjects, tplinkDhcpRelayMIB=tplinkDhcpRelayMIB, dhcpRelayServerLoopbackInterfaceTable=dhcpRelayServerLoopbackInterfaceTable, dhcpRelayServerRoutedPortPortId=dhcpRelayServerRoutedPortPortId, dhcpRelayExistedOption82Field=dhcpRelayExistedOption82Field, PYSNMP_MODULE_ID=tplinkDhcpRelayMIB, dhcpRelayServerPortChannelInterfaceIp=dhcpRelayServerPortChannelInterfaceIp, dhcpRelayServerVlanInterfaceTable=dhcpRelayServerVlanInterfaceTable, dhcpRelayServerVlanId=dhcpRelayServerVlanId, dhcpRelayGlobalConfig=dhcpRelayGlobalConfig, dhcpRelayServerVlanInterfaceStatus=dhcpRelayServerVlanInterfaceStatus, dhcpRelayServerLoopbackInterfaceStatus=dhcpRelayServerLoopbackInterfaceStatus, dhcpRelayServerRoutedPortInterfaceTable=dhcpRelayServerRoutedPortInterfaceTable, dhcpRelayServerRoutedPortInterfaceStatus=dhcpRelayServerRoutedPortInterfaceStatus, dhcpRelayOption82CircuitID=dhcpRelayOption82CircuitID, dhcpRelayServerConfig=dhcpRelayServerConfig, dhcpRelayServerLoopbackId=dhcpRelayServerLoopbackId, dhcpRelayServerLoopbackInterfaceIp=dhcpRelayServerLoopbackInterfaceIp, dhcpRelayOption82Support=dhcpRelayOption82Support, tplinkDhcpRelayNotifications=tplinkDhcpRelayNotifications, dhcpRelayServerLoopbackInterfaceEntry=dhcpRelayServerLoopbackInterfaceEntry)
