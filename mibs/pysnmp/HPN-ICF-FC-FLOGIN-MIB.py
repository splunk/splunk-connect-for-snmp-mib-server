#
# PySNMP MIB module HPN-ICF-FC-FLOGIN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FC-FLOGIN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
HpnicfFcBbCredit, HpnicfFcClassOfServices, HpnicfFcNameId, HpnicfFcRxMTU, HpnicfFcAddressId = mibBuilder.importSymbols("HPN-ICF-FC-TC-MIB", "HpnicfFcBbCredit", "HpnicfFcClassOfServices", "HpnicfFcNameId", "HpnicfFcRxMTU", "HpnicfFcAddressId")
hpnicfVsanIndex, hpnicfSan = mibBuilder.importSymbols("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex", "hpnicfSan")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibIdentifier, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Bits, ModuleIdentity, Integer32, Counter64, Gauge32, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Bits", "ModuleIdentity", "Integer32", "Counter64", "Gauge32", "Counter32", "IpAddress")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hpnicfFcFLogin = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3))
hpnicfFcFLogin.setRevisions(('2013-02-27 11:00',))
if mibBuilder.loadTexts: hpnicfFcFLogin.setLastUpdated('201302271100Z')
if mibBuilder.loadTexts: hpnicfFcFLogin.setOrganization('')
hpnicfFcFLoginMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1))
hpnicfFcFLoginTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1), )
if mibBuilder.loadTexts: hpnicfFcFLoginTable.setStatus('current')
hpnicfFcFLoginEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "HPN-ICF-FC-FLOGIN-MIB", "hpnicfFcFLoginIndex"))
if mibBuilder.loadTexts: hpnicfFcFLoginEntry.setStatus('current')
hpnicfFcFLoginIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 1), HpnicfFcAddressId())
if mibBuilder.loadTexts: hpnicfFcFLoginIndex.setStatus('current')
hpnicfFcFLoginPortNodeWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 2), HpnicfFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginPortNodeWWN.setStatus('current')
hpnicfFcFLoginPortWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 3), HpnicfFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginPortWWN.setStatus('current')
hpnicfFcFLoginPortFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 4), HpnicfFcAddressId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginPortFcId.setStatus('current')
hpnicfFcFLoginRxBbCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 5), HpnicfFcBbCredit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginRxBbCredit.setStatus('current')
hpnicfFcFLoginTxBbCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 6), HpnicfFcBbCredit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginTxBbCredit.setStatus('current')
hpnicfFcFLoginClass2RxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 7), HpnicfFcRxMTU()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginClass2RxMTU.setStatus('current')
hpnicfFcFLoginClass3RxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 8), HpnicfFcRxMTU()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginClass3RxMTU.setStatus('current')
hpnicfFcFLoginSuppClassRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 9), HpnicfFcClassOfServices()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginSuppClassRequested.setStatus('current')
hpnicfFcFLoginClass2ReqAgreed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginClass2ReqAgreed.setStatus('current')
hpnicfFcFLoginClass3ReqAgreed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 3, 1, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcFLoginClass3ReqAgreed.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-FC-FLOGIN-MIB", hpnicfFcFLoginRxBbCredit=hpnicfFcFLoginRxBbCredit, hpnicfFcFLogin=hpnicfFcFLogin, hpnicfFcFLoginMibObjects=hpnicfFcFLoginMibObjects, hpnicfFcFLoginPortNodeWWN=hpnicfFcFLoginPortNodeWWN, hpnicfFcFLoginSuppClassRequested=hpnicfFcFLoginSuppClassRequested, hpnicfFcFLoginEntry=hpnicfFcFLoginEntry, hpnicfFcFLoginPortFcId=hpnicfFcFLoginPortFcId, hpnicfFcFLoginClass2RxMTU=hpnicfFcFLoginClass2RxMTU, hpnicfFcFLoginTxBbCredit=hpnicfFcFLoginTxBbCredit, hpnicfFcFLoginClass2ReqAgreed=hpnicfFcFLoginClass2ReqAgreed, hpnicfFcFLoginTable=hpnicfFcFLoginTable, PYSNMP_MODULE_ID=hpnicfFcFLogin, hpnicfFcFLoginIndex=hpnicfFcFLoginIndex, hpnicfFcFLoginClass3RxMTU=hpnicfFcFLoginClass3RxMTU, hpnicfFcFLoginClass3ReqAgreed=hpnicfFcFLoginClass3ReqAgreed, hpnicfFcFLoginPortWWN=hpnicfFcFLoginPortWWN)
