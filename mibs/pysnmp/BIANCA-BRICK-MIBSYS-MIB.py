#
# PySNMP MIB module BIANCA-BRICK-MIBSYS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-MIBSYS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, IpAddress, NotificationType, Bits, ObjectIdentity, iso, MibIdentifier, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "IpAddress", "NotificationType", "Bits", "ObjectIdentity", "iso", "MibIdentifier", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
sys = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 17))
sysPCMTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 17, 1), )
if mibBuilder.loadTexts: sysPCMTable.setStatus('mandatory')
sysPCMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 17, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-MIBSYS-MIB", "sysPCMSlot"), (0, "BIANCA-BRICK-MIBSYS-MIB", "sysPCMUnit"))
if mibBuilder.loadTexts: sysPCMEntry.setStatus('mandatory')
sysPCMSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPCMSlot.setStatus('mandatory')
sysPCMUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPCMUnit.setStatus('mandatory')
sysPCMClockStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("not-ready", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPCMClockStatus.setStatus('mandatory')
sysPCMClockMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("candidate", 1), ("master", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPCMClockMaster.setStatus('mandatory')
sysPCMMasterPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPCMMasterPrio.setStatus('mandatory')
sysPCMChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 17, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPCMChanges.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-MIBSYS-MIB", sysPCMSlot=sysPCMSlot, bibo=bibo, sysPCMChanges=sysPCMChanges, sysPCMClockMaster=sysPCMClockMaster, dod=dod, sysPCMClockStatus=sysPCMClockStatus, sysPCMEntry=sysPCMEntry, bintec=bintec, sysPCMUnit=sysPCMUnit, internet=internet, sys=sys, sysPCMMasterPrio=sysPCMMasterPrio, enterprises=enterprises, sysPCMTable=sysPCMTable, org=org, private=private)
