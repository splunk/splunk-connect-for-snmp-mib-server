#
# PySNMP MIB module HUAWEI-VO-DIGITAL-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VO-DIGITAL-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:37:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
voice, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "voice")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Unsigned32, ObjectIdentity, Gauge32, TimeTicks, MibIdentifier, Counter64, Counter32, Integer32, ModuleIdentity, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Unsigned32", "ObjectIdentity", "Gauge32", "TimeTicks", "MibIdentifier", "Counter64", "Counter32", "Integer32", "ModuleIdentity", "iso", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwVoiceDigitalInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4))
hwVoiceDigitalInterfaceMIB.setRevisions(('2004-04-08 13:45',))
if mibBuilder.loadTexts: hwVoiceDigitalInterfaceMIB.setLastUpdated('200410200000Z')
if mibBuilder.loadTexts: hwVoiceDigitalInterfaceMIB.setOrganization('Huawei-3COM Technologies Co., Ltd.')
hwVoDigitalIfCommonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1))
hwVoDigitalIfCommonCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1), )
if mibBuilder.loadTexts: hwVoDigitalIfCommonCfgTable.setStatus('current')
hwVoDigitalIfCommonCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfCommonCfgEntry.setStatus('current')
hwVoDigitalIfCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgPortNumber.setStatus('current')
hwVoDigitalIfCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgGroupNumber.setStatus('current')
hwVoDigitalIfCfgBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1vi", 1), ("t1vi", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgBoardType.setStatus('current')
hwVoDigitalIfCfgSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("r2", 1), ("dss1", 2), ("em", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgSignalType.setStatus('current')
hwVoDigitalIfCfgTimeSlotsConfigurable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(24, 24), ValueSizeConstraint(32, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgTimeSlotsConfigurable.setStatus('current')
hwVoDigitalIfEMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2))
hwVoDigitalIfEMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1), )
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTable.setStatus('current')
hwVoDigitalIfEMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgEntry.setStatus('current')
hwVoDigitalIfEMCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgPortNumber.setStatus('current')
hwVoDigitalIfEMCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgGroupNumber.setStatus('current')
hwVoDigitalIfEMCfgTimeoutInterDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutInterDigits.setStatus('current')
hwVoDigitalIfEMCfgTimeoutRinging = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 600), ValueRangeConstraint(65535, 65535), )).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutRinging.setStatus('current')
hwVoDigitalIfEMCfgTimeoutWaitDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 600), ValueRangeConstraint(65535, 65535), )).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutWaitDigit.setStatus('current')
hwVoDigitalIfEMABCDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2), )
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgTable.setStatus('current')
hwVoDigitalIfEMABCDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMABCDCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMABCDCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgEntry.setStatus('current')
hwVoDigitalIfEMABCDCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgPortNumber.setStatus('current')
hwVoDigitalIfEMABCDCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgGroupNumber.setStatus('current')
hwVoDigitalIfEMABCDRxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDRxIdle.setStatus('current')
hwVoDigitalIfEMABCDRxSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDRxSeize.setStatus('current')
hwVoDigitalIfEMABCDTxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDTxIdle.setStatus('current')
hwVoDigitalIfEMABCDTxSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDTxSeize.setStatus('current')
hwVoDigitalIfEMTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4), )
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerTable.setStatus('current')
hwVoDigitalIfEMTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMTimerPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMTimerGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerEntry.setStatus('current')
hwVoDigitalIfEMTimerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerPortNumber.setStatus('current')
hwVoDigitalIfEMTimerGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerGroupNumber.setStatus('current')
hwVoDigitalIfEMTimerCallInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 2000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerCallInterval.setStatus('current')
hwVoDigitalIfEMTimerSendWink = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerSendWink.setStatus('current')
hwVoDigitalIfEMTimerWinkRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerWinkRising.setStatus('current')
hwVoDigitalIfEMTimerWinkHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 3000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerWinkHold.setStatus('current')
hwVoDigitalIfEMTimerDialoutDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 5000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDialoutDelay.setStatus('current')
hwVoDigitalIfEMTimerRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerRising.setStatus('current')
hwVoDigitalIfEMTimerHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerHold.setStatus('current')
hwVoDigitalIfEMTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDtmf.setStatus('current')
hwVoDigitalIfEMTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDtmfInterval.setStatus('current')
hwVoDigitalIfR2Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3))
hwVoDigitalIfR2CfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1), )
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgTable.setStatus('current')
hwVoDigitalIfR2CfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2CfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2CfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgEntry.setStatus('current')
hwVoDigitalIfR2CfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgPortNumber.setStatus('current')
hwVoDigitalIfR2CfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgGroupNumber.setStatus('current')
hwVoDigitalIfR2CfgAniSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAniSwitch.setStatus('deprecated')
hwVoDigitalIfR2CallerDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CallerDigits.setStatus('deprecated')
hwVoDigitalIfR2DebounceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 40)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2DebounceTime.setStatus('deprecated')
hwVoDigitalIfR2Ka = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2Ka.setStatus('deprecated')
hwVoDigitalIfR2Kd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2Kd.setStatus('deprecated')
hwVoDigitalIfR2SeizureAckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2SeizureAckTime.setStatus('deprecated')
hwVoDigitalIfR2SelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("max", 1), ("maxpoll", 2), ("min", 3), ("minpoll", 4))).clone('min')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2SelectMode.setStatus('deprecated')
hwVoDigitalIfR2TimeoutKb = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 50000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutKb.setStatus('deprecated')
hwVoDigitalIfR2TimeoutKd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 50000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutKd.setStatus('deprecated')
hwVoDigitalIfR2TimeoutNextNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 50000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutNextNumber.setStatus('deprecated')
hwVoDigitalIfR2TimeoutReleaseApprove = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutReleaseApprove.setStatus('deprecated')
hwVoDigitalIfR2TimeoutRing = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 240000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutRing.setStatus('deprecated')
hwVoDigitalIfR2TimeoutSendAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 1000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutSendAnswer.setStatus('deprecated')
hwVoDigitalIfR2CfgBillingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgBillingCategory.setStatus('current')
hwVoDigitalIfR2CfgCallingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCallingCategory.setStatus('current')
hwVoDigitalIfR2CfgCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCongestion.setStatus('current')
hwVoDigitalIfR2CfgDemandRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDemandRefused.setStatus('current')
hwVoDigitalIfR2CfgDigitEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDigitEnd.setStatus('current')
hwVoDigitalIfR2CfgNullnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgNullnum.setStatus('current')
hwVoDigitalIfR2CfgReqBillingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqBillingCategory.setStatus('current')
hwVoDigitalIfR2CfgReqCallingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallingCategory.setStatus('current')
hwVoDigitalIfR2CfgReqCurrentdigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCurrentdigit.setStatus('current')
hwVoDigitalIfR2CfgReqFirstCallingnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqFirstCallingnum.setStatus('current')
hwVoDigitalIfR2CfgReqFirstDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqFirstDigit.setStatus('current')
hwVoDigitalIfR2CfgReqNextCallednum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqNextCallednum.setStatus('current')
hwVoDigitalIfR2CfgReqNextCallingnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqNextCallingnum.setStatus('current')
hwVoDigitalIfR2CfgReqLastFirstDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastFirstDigit.setStatus('current')
hwVoDigitalIfR2CfgReqLastSecondDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastSecondDigit.setStatus('current')
hwVoDigitalIfR2CfgReqLastThirdDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastThirdDigit.setStatus('current')
hwVoDigitalIfR2CfgReqSwitchGroupB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqSwitchGroupB.setStatus('current')
hwVoDigitalIfR2CfgSubscriberIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSubscriberIdle.setStatus('current')
hwVoDigitalIfR2CfgSubscriberBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSubscriberBusy.setStatus('current')
hwVoDigitalIfR2CfgDebounceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 40)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDebounceTime.setStatus('current')
hwVoDigitalIfR2CfgSendringBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 90000)).clone(60000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendringBackTime.setStatus('current')
hwVoDigitalIfR2CfgSendringBusyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 90000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendringBusyTime.setStatus('current')
hwVoDigitalIfR2CfgPulseSignalPersistenceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 3000)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgPulseSignalPersistenceTime.setStatus('current')
hwVoDigitalIfR2CfgDlAnswerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 120000)).clone(60000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlAnswerTime.setStatus('current')
hwVoDigitalIfR2CfgDlClearBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlClearBackTime.setStatus('current')
hwVoDigitalIfR2CfgDlClearForwardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlClearForwardTime.setStatus('current')
hwVoDigitalIfR2CfgDlSeizureTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlSeizureTime.setStatus('current')
hwVoDigitalIfR2CfgDlReanswerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlReanswerTime.setStatus('current')
hwVoDigitalIfR2CfgDlReleaseGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlReleaseGuardTime.setStatus('current')
hwVoDigitalIfR2CfgMfcGroupBTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 90000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgMfcGroupBTime.setStatus('current')
hwVoDigitalIfR2CfgAniEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAniEnable.setStatus('current')
hwVoDigitalIfR2CfgGroupBEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgGroupBEnable.setStatus('current')
hwVoDigitalIfR2CfgClearForwardAckEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgClearForwardAckEnable.setStatus('current')
hwVoDigitalIfR2CfgDlSeizureAckEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlSeizureAckEnable.setStatus('current')
hwVoDigitalIfR2CfgDTMFEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDTMFEnable.setStatus('current')
hwVoDigitalIfR2CfgAnswerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAnswerEnable.setStatus('current')
hwVoDigitalIfR2CfgReanswerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReanswerEnable.setStatus('current')
hwVoDigitalIfR2CfgFinalCallnumEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgFinalCallnumEnable.setStatus('current')
hwVoDigitalIfR2CfgForceMeteringEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgForceMeteringEnable.setStatus('current')
hwVoDigitalIfR2CfgSendRingBackEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendRingBackEnable.setStatus('current')
hwVoDigitalIfR2CfgSendRingBusyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendRingBusyEnable.setStatus('current')
hwVoDigitalIfR2CfgReqCategoryOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCategoryOffset.setStatus('current')
hwVoDigitalIfR2CfgReqCallingnumOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallingnumOffset.setStatus('current')
hwVoDigitalIfR2CfgCountryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("argentina", 0), ("australia", 1), ("bengal", 2), ("brazil", 3), ("china", 4), ("customer", 5), ("hongkong", 6), ("india", 7), ("indonesia", 8), ("itu-t", 9), ("korea", 10), ("malaysia", 11), ("mexico", 12), ("newzealand", 13), ("singapore", 14), ("thailand", 15))).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCountryMode.setStatus('current')
hwVoDigitalIfR2CfgSpecialCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 65, 66, 67, 68, 35, 42))).clone(namedValues=NamedValues(("null", 0), ("a", 65), ("b", 66), ("c", 67), ("d", 68), ("pound", 35), ("asterisk", 42)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSpecialCharacter.setStatus('current')
hwVoDigitalIfR2CfgSpecialSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(11, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSpecialSignal.setStatus('current')
hwVoDigitalIfR2CfgSelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("min", 1), ("max", 2), ("minpoll", 3), ("maxpoll", 4))).clone('min')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSelectMode.setStatus('current')
hwVoDigitalIfR2CfgDTMFTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDTMFTime.setStatus('current')
hwVoDigitalIfR2CfgReqCallCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallCreate.setStatus('current')
hwVoDigitalIfR2ABCDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2), )
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgTable.setStatus('current')
hwVoDigitalIfR2ABCDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2ABCDCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2ABCDCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgEntry.setStatus('current')
hwVoDigitalIfR2ABCDCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgPortNumber.setStatus('current')
hwVoDigitalIfR2ABCDCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgGroupNumber.setStatus('current')
hwVoDigitalIfR2ABCDReverseABCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0000')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDReverseABCD.setStatus('current')
hwVoDigitalIfR2ABCDRenewABCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1111')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRenewABCD.setStatus('current')
hwVoDigitalIfR2ABCDRxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxIdle.setStatus('current')
hwVoDigitalIfR2ABCDTxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxIdle.setStatus('current')
hwVoDigitalIfR2ABCDRxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxSeizure.setStatus('current')
hwVoDigitalIfR2ABCDTxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxSeizure.setStatus('current')
hwVoDigitalIfR2ABCDRxSeizureAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxSeizureAck.setStatus('current')
hwVoDigitalIfR2ABCDTxSeizureAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxSeizureAck.setStatus('current')
hwVoDigitalIfR2ABCDRxAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxAnswer.setStatus('current')
hwVoDigitalIfR2ABCDTxAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxAnswer.setStatus('current')
hwVoDigitalIfR2ABCDRxClearForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxClearForward.setStatus('current')
hwVoDigitalIfR2ABCDTxClearForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxClearForward.setStatus('current')
hwVoDigitalIfR2ABCDRxClearBack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxClearBack.setStatus('current')
hwVoDigitalIfR2ABCDTxClearBack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxClearBack.setStatus('current')
hwVoDigitalIfR2ABCDRxReleaseGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxReleaseGuard.setStatus('current')
hwVoDigitalIfR2ABCDTxReleaseGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxReleaseGuard.setStatus('current')
hwVoDigitalIfR2ABCDRxBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxBlocking.setStatus('current')
hwVoDigitalIfR2ABCDTxBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxBlocking.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-VO-DIGITAL-IF-MIB", hwVoDigitalIfCommonCfgTable=hwVoDigitalIfCommonCfgTable, hwVoDigitalIfR2CfgForceMeteringEnable=hwVoDigitalIfR2CfgForceMeteringEnable, hwVoDigitalIfR2ABCDReverseABCD=hwVoDigitalIfR2ABCDReverseABCD, hwVoDigitalIfR2CfgEntry=hwVoDigitalIfR2CfgEntry, hwVoDigitalIfR2CfgAniSwitch=hwVoDigitalIfR2CfgAniSwitch, hwVoDigitalIfCommonObjects=hwVoDigitalIfCommonObjects, hwVoDigitalIfEMABCDCfgGroupNumber=hwVoDigitalIfEMABCDCfgGroupNumber, hwVoDigitalIfR2CfgDlClearBackTime=hwVoDigitalIfR2CfgDlClearBackTime, hwVoDigitalIfR2CfgSendringBusyTime=hwVoDigitalIfR2CfgSendringBusyTime, hwVoDigitalIfR2CfgSendRingBackEnable=hwVoDigitalIfR2CfgSendRingBackEnable, hwVoDigitalIfR2CfgReqNextCallingnum=hwVoDigitalIfR2CfgReqNextCallingnum, hwVoDigitalIfR2DebounceTime=hwVoDigitalIfR2DebounceTime, hwVoDigitalIfR2CfgReqCallCreate=hwVoDigitalIfR2CfgReqCallCreate, hwVoDigitalIfEMABCDTxIdle=hwVoDigitalIfEMABCDTxIdle, hwVoDigitalIfR2CfgReqBillingCategory=hwVoDigitalIfR2CfgReqBillingCategory, hwVoDigitalIfR2CfgClearForwardAckEnable=hwVoDigitalIfR2CfgClearForwardAckEnable, hwVoDigitalIfR2CfgDebounceTime=hwVoDigitalIfR2CfgDebounceTime, hwVoDigitalIfEMCfgGroupNumber=hwVoDigitalIfEMCfgGroupNumber, hwVoDigitalIfR2CfgSubscriberBusy=hwVoDigitalIfR2CfgSubscriberBusy, hwVoDigitalIfEMABCDCfgTable=hwVoDigitalIfEMABCDCfgTable, hwVoDigitalIfCfgPortNumber=hwVoDigitalIfCfgPortNumber, hwVoDigitalIfR2CfgReqFirstCallingnum=hwVoDigitalIfR2CfgReqFirstCallingnum, hwVoDigitalIfR2CfgSendringBackTime=hwVoDigitalIfR2CfgSendringBackTime, hwVoDigitalIfR2ABCDRenewABCD=hwVoDigitalIfR2ABCDRenewABCD, hwVoDigitalIfR2CfgDigitEnd=hwVoDigitalIfR2CfgDigitEnd, hwVoDigitalIfCfgTimeSlotsConfigurable=hwVoDigitalIfCfgTimeSlotsConfigurable, hwVoDigitalIfEMTimerGroupNumber=hwVoDigitalIfEMTimerGroupNumber, hwVoDigitalIfR2CfgAniEnable=hwVoDigitalIfR2CfgAniEnable, hwVoDigitalIfR2CfgSpecialSignal=hwVoDigitalIfR2CfgSpecialSignal, hwVoDigitalIfR2CfgFinalCallnumEnable=hwVoDigitalIfR2CfgFinalCallnumEnable, hwVoDigitalIfR2CfgDTMFEnable=hwVoDigitalIfR2CfgDTMFEnable, hwVoDigitalIfR2ABCDRxClearBack=hwVoDigitalIfR2ABCDRxClearBack, hwVoDigitalIfR2ABCDTxBlocking=hwVoDigitalIfR2ABCDTxBlocking, hwVoDigitalIfR2ABCDCfgEntry=hwVoDigitalIfR2ABCDCfgEntry, hwVoDigitalIfR2CfgTable=hwVoDigitalIfR2CfgTable, hwVoDigitalIfEMObjects=hwVoDigitalIfEMObjects, hwVoDigitalIfR2TimeoutSendAnswer=hwVoDigitalIfR2TimeoutSendAnswer, hwVoDigitalIfEMTimerWinkRising=hwVoDigitalIfEMTimerWinkRising, hwVoDigitalIfR2CfgDTMFTime=hwVoDigitalIfR2CfgDTMFTime, hwVoDigitalIfEMTimerCallInterval=hwVoDigitalIfEMTimerCallInterval, hwVoDigitalIfR2CfgSendRingBusyEnable=hwVoDigitalIfR2CfgSendRingBusyEnable, hwVoDigitalIfR2ABCDRxSeizureAck=hwVoDigitalIfR2ABCDRxSeizureAck, hwVoDigitalIfEMCfgTimeoutRinging=hwVoDigitalIfEMCfgTimeoutRinging, hwVoDigitalIfR2CfgReqCallingnumOffset=hwVoDigitalIfR2CfgReqCallingnumOffset, hwVoDigitalIfR2Kd=hwVoDigitalIfR2Kd, hwVoDigitalIfR2ABCDRxBlocking=hwVoDigitalIfR2ABCDRxBlocking, hwVoDigitalIfEMABCDCfgEntry=hwVoDigitalIfEMABCDCfgEntry, hwVoDigitalIfR2ABCDRxReleaseGuard=hwVoDigitalIfR2ABCDRxReleaseGuard, hwVoDigitalIfR2ABCDTxAnswer=hwVoDigitalIfR2ABCDTxAnswer, hwVoDigitalIfR2CfgDlSeizureTime=hwVoDigitalIfR2CfgDlSeizureTime, hwVoDigitalIfEMCfgEntry=hwVoDigitalIfEMCfgEntry, hwVoDigitalIfCfgGroupNumber=hwVoDigitalIfCfgGroupNumber, hwVoDigitalIfEMABCDCfgPortNumber=hwVoDigitalIfEMABCDCfgPortNumber, hwVoDigitalIfR2CfgDemandRefused=hwVoDigitalIfR2CfgDemandRefused, hwVoDigitalIfEMCfgTimeoutInterDigits=hwVoDigitalIfEMCfgTimeoutInterDigits, hwVoDigitalIfEMTimerDtmf=hwVoDigitalIfEMTimerDtmf, hwVoDigitalIfR2ABCDTxReleaseGuard=hwVoDigitalIfR2ABCDTxReleaseGuard, hwVoDigitalIfR2ABCDTxClearForward=hwVoDigitalIfR2ABCDTxClearForward, hwVoDigitalIfR2CfgCongestion=hwVoDigitalIfR2CfgCongestion, hwVoDigitalIfR2CfgReqCallingCategory=hwVoDigitalIfR2CfgReqCallingCategory, hwVoDigitalIfR2ABCDTxClearBack=hwVoDigitalIfR2ABCDTxClearBack, hwVoDigitalIfR2CfgMfcGroupBTime=hwVoDigitalIfR2CfgMfcGroupBTime, PYSNMP_MODULE_ID=hwVoiceDigitalInterfaceMIB, hwVoDigitalIfR2CfgDlSeizureAckEnable=hwVoDigitalIfR2CfgDlSeizureAckEnable, hwVoDigitalIfR2TimeoutRing=hwVoDigitalIfR2TimeoutRing, hwVoDigitalIfR2CfgPulseSignalPersistenceTime=hwVoDigitalIfR2CfgPulseSignalPersistenceTime, hwVoDigitalIfR2CfgReqCurrentdigit=hwVoDigitalIfR2CfgReqCurrentdigit, hwVoDigitalIfR2CfgDlClearForwardTime=hwVoDigitalIfR2CfgDlClearForwardTime, hwVoDigitalIfR2CfgAnswerEnable=hwVoDigitalIfR2CfgAnswerEnable, hwVoDigitalIfR2SeizureAckTime=hwVoDigitalIfR2SeizureAckTime, hwVoDigitalIfR2TimeoutNextNumber=hwVoDigitalIfR2TimeoutNextNumber, hwVoDigitalIfEMTimerDtmfInterval=hwVoDigitalIfEMTimerDtmfInterval, hwVoDigitalIfR2ABCDCfgGroupNumber=hwVoDigitalIfR2ABCDCfgGroupNumber, hwVoDigitalIfR2ABCDRxClearForward=hwVoDigitalIfR2ABCDRxClearForward, hwVoDigitalIfEMTimerSendWink=hwVoDigitalIfEMTimerSendWink, hwVoDigitalIfR2SelectMode=hwVoDigitalIfR2SelectMode, hwVoDigitalIfEMCfgTimeoutWaitDigit=hwVoDigitalIfEMCfgTimeoutWaitDigit, hwVoDigitalIfR2CfgNullnum=hwVoDigitalIfR2CfgNullnum, hwVoDigitalIfR2CallerDigits=hwVoDigitalIfR2CallerDigits, hwVoDigitalIfR2ABCDCfgPortNumber=hwVoDigitalIfR2ABCDCfgPortNumber, hwVoDigitalIfR2TimeoutKb=hwVoDigitalIfR2TimeoutKb, hwVoDigitalIfR2ABCDTxSeizure=hwVoDigitalIfR2ABCDTxSeizure, hwVoDigitalIfEMCfgTable=hwVoDigitalIfEMCfgTable, hwVoDigitalIfEMABCDTxSeize=hwVoDigitalIfEMABCDTxSeize, hwVoDigitalIfCfgSignalType=hwVoDigitalIfCfgSignalType, hwVoDigitalIfR2CfgReqCategoryOffset=hwVoDigitalIfR2CfgReqCategoryOffset, hwVoDigitalIfCommonCfgEntry=hwVoDigitalIfCommonCfgEntry, hwVoDigitalIfEMABCDRxIdle=hwVoDigitalIfEMABCDRxIdle, hwVoDigitalIfR2ABCDTxIdle=hwVoDigitalIfR2ABCDTxIdle, hwVoDigitalIfR2CfgBillingCategory=hwVoDigitalIfR2CfgBillingCategory, hwVoDigitalIfEMTimerRising=hwVoDigitalIfEMTimerRising, hwVoDigitalIfR2CfgSubscriberIdle=hwVoDigitalIfR2CfgSubscriberIdle, hwVoDigitalIfR2ABCDCfgTable=hwVoDigitalIfR2ABCDCfgTable, hwVoDigitalIfCfgBoardType=hwVoDigitalIfCfgBoardType, hwVoDigitalIfEMTimerHold=hwVoDigitalIfEMTimerHold, hwVoDigitalIfEMTimerDialoutDelay=hwVoDigitalIfEMTimerDialoutDelay, hwVoDigitalIfR2CfgGroupNumber=hwVoDigitalIfR2CfgGroupNumber, hwVoDigitalIfR2CfgGroupBEnable=hwVoDigitalIfR2CfgGroupBEnable, hwVoDigitalIfR2CfgReqSwitchGroupB=hwVoDigitalIfR2CfgReqSwitchGroupB, hwVoDigitalIfR2TimeoutReleaseApprove=hwVoDigitalIfR2TimeoutReleaseApprove, hwVoDigitalIfR2ABCDTxSeizureAck=hwVoDigitalIfR2ABCDTxSeizureAck, hwVoDigitalIfR2CfgDlReleaseGuardTime=hwVoDigitalIfR2CfgDlReleaseGuardTime, hwVoDigitalIfR2Objects=hwVoDigitalIfR2Objects, hwVoDigitalIfR2CfgReanswerEnable=hwVoDigitalIfR2CfgReanswerEnable, hwVoDigitalIfEMCfgPortNumber=hwVoDigitalIfEMCfgPortNumber, hwVoDigitalIfR2CfgPortNumber=hwVoDigitalIfR2CfgPortNumber, hwVoDigitalIfR2Ka=hwVoDigitalIfR2Ka, hwVoDigitalIfR2CfgCallingCategory=hwVoDigitalIfR2CfgCallingCategory, hwVoDigitalIfEMTimerTable=hwVoDigitalIfEMTimerTable, hwVoDigitalIfR2CfgSelectMode=hwVoDigitalIfR2CfgSelectMode, hwVoDigitalIfR2ABCDRxSeizure=hwVoDigitalIfR2ABCDRxSeizure, hwVoDigitalIfR2CfgReqLastThirdDigit=hwVoDigitalIfR2CfgReqLastThirdDigit, hwVoiceDigitalInterfaceMIB=hwVoiceDigitalInterfaceMIB, hwVoDigitalIfEMABCDRxSeize=hwVoDigitalIfEMABCDRxSeize, hwVoDigitalIfR2CfgCountryMode=hwVoDigitalIfR2CfgCountryMode, hwVoDigitalIfR2CfgReqFirstDigit=hwVoDigitalIfR2CfgReqFirstDigit, hwVoDigitalIfEMTimerPortNumber=hwVoDigitalIfEMTimerPortNumber, hwVoDigitalIfR2CfgSpecialCharacter=hwVoDigitalIfR2CfgSpecialCharacter, hwVoDigitalIfR2TimeoutKd=hwVoDigitalIfR2TimeoutKd, hwVoDigitalIfEMTimerWinkHold=hwVoDigitalIfEMTimerWinkHold, hwVoDigitalIfR2CfgReqLastFirstDigit=hwVoDigitalIfR2CfgReqLastFirstDigit, hwVoDigitalIfR2CfgDlAnswerTime=hwVoDigitalIfR2CfgDlAnswerTime, hwVoDigitalIfR2ABCDRxIdle=hwVoDigitalIfR2ABCDRxIdle, hwVoDigitalIfR2ABCDRxAnswer=hwVoDigitalIfR2ABCDRxAnswer, hwVoDigitalIfR2CfgDlReanswerTime=hwVoDigitalIfR2CfgDlReanswerTime, hwVoDigitalIfR2CfgReqLastSecondDigit=hwVoDigitalIfR2CfgReqLastSecondDigit, hwVoDigitalIfEMTimerEntry=hwVoDigitalIfEMTimerEntry, hwVoDigitalIfR2CfgReqNextCallednum=hwVoDigitalIfR2CfgReqNextCallednum)
