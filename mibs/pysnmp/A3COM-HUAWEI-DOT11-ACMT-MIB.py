#
# PySNMP MIB module A3COM-HUAWEI-DOT11-ACMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-DOT11-ACMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cDot11, H3cDot11ObjectIDType, H3cDot11MACModeType, H3cDot11TunnelSecSchemType = mibBuilder.importSymbols("A3COM-HUAWEI-DOT11-REF-MIB", "h3cDot11", "H3cDot11ObjectIDType", "H3cDot11MACModeType", "H3cDot11TunnelSecSchemType")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, ObjectIdentity, Bits, ModuleIdentity, IpAddress, NotificationType, iso, Counter64, Unsigned32, MibIdentifier, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "ObjectIdentity", "Bits", "ModuleIdentity", "IpAddress", "NotificationType", "iso", "Counter64", "Unsigned32", "MibIdentifier", "Integer32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
h3cDot11ACMT = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1))
h3cDot11ACMT.setRevisions(('2010-08-04 18:00', '2009-08-07 18:00', '2009-07-29 18:00', '2009-05-07 20:00', '2008-07-09 18:00', '2007-12-21 18:00', '2007-06-19 18:00', '2007-04-27 20:00', '2006-05-10 19:00',))
if mibBuilder.loadTexts: h3cDot11ACMT.setLastUpdated('201008041800Z')
if mibBuilder.loadTexts: h3cDot11ACMT.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cDot11ACObjectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1))
h3cDot11ACObject = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 1))
h3cDot11ACLoadInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2))
h3cDot11WLANAssocStatisInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 3))
h3cDot11ACBASInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4))
h3cDot11ACStaUserSecAuthStatis = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 5))
h3cDot11CAPWAPTunnelGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2))
h3cDot11ACMtNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3))
h3cDot11CurrentACMACMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 1, 1), H3cDot11MACModeType().clone('split')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11CurrentACMACMode.setStatus('current')
h3cDot11MaxAPNumPermitted = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MaxAPNumPermitted.setStatus('current')
h3cDot11MaxStationNumPermitted = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MaxStationNumPermitted.setStatus('current')
h3cDot11APConnectCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11APConnectCount.setStatus('current')
h3cDot11StationConnectCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11StationConnectCount.setStatus('current')
h3cDot11ACIFLoadInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 3), )
if mibBuilder.loadTexts: h3cDot11ACIFLoadInfoTable.setStatus('current')
h3cDot11ACIFLoadInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACIfIndex"))
if mibBuilder.loadTexts: h3cDot11ACIFLoadInfoEntry.setStatus('current')
h3cDot11ACIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACIfIndex.setStatus('current')
h3cDot11ACIfApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACIfApNum.setStatus('current')
h3cDot11ACIfStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACIfStaNum.setStatus('current')
h3cDot11ACIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACIfName.setStatus('current')
h3cDot11MasterAPCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MasterAPCount.setStatus('current')
h3cDot11SlaveAPCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11SlaveAPCount.setStatus('current')
h3cDot11ConnectAutoAPCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ConnectAutoAPCount.setStatus('current')
h3cDot11PersistentAPCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11PersistentAPCount.setStatus('current')
h3cDot11AcUploadFrameCnt = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AcUploadFrameCnt.setStatus('current')
h3cDot11AcDownloadFrameCnt = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AcDownloadFrameCnt.setStatus('current')
h3cDot11AcUploadFrameBytes = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AcUploadFrameBytes.setStatus('current')
h3cDot11AcDownloadFrameBytes = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AcDownloadFrameBytes.setStatus('current')
h3cDot11BackupACRole = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("null", 1), ("master", 2), ("slave", 3))).clone('null')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11BackupACRole.setStatus('current')
h3cDot11BackupACNMSIP = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11BackupACNMSIP.setStatus('current')
h3cDot11ACBackupMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("null", 1), ("hotBackup", 2), ("coldBackup", 3))).clone('null')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACBackupMode.setStatus('current')
h3cDot11ACBackupStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("standby", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACBackupStatus.setStatus('current')
h3cDot11ACSwitchCnt = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACSwitchCnt.setStatus('current')
h3cDot11StationAssocSum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11StationAssocSum.setStatus('current')
h3cDot11StationAssocFailSum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11StationAssocFailSum.setStatus('current')
h3cDot11StationReassocSum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11StationReassocSum.setStatus('current')
h3cDot11StationAssocRejectedSum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11StationAssocRejectedSum.setStatus('current')
h3cDot11StationExDeAuthenSum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11StationExDeAuthenSum.setStatus('current')
h3cDot11StationCurAssocSum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11StationCurAssocSum.setStatus('current')
h3cDot11ACBASSysObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4, 1))
h3cDot11ACBASTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4, 2))
h3cDot11ACBASIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4, 2, 3), )
if mibBuilder.loadTexts: h3cDot11ACBASIfTable.setStatus('current')
h3cDot11ACBASIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACBASIfIndex"))
if mibBuilder.loadTexts: h3cDot11ACBASIfEntry.setStatus('current')
h3cDot11ACBASIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11ACBASIfIndex.setStatus('current')
h3cDot11ACBASIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACBASIfDescr.setStatus('current')
h3cDot11ACBASIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 4, 2, 3, 1, 3), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACBASIfType.setStatus('current')
h3cDot11ACStaUserAuthCurNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACStaUserAuthCurNumber.setStatus('current')
h3cDot11ACStaUserConnFailCnt = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACStaUserConnFailCnt.setStatus('current')
h3cDot11ACStaUserAuthReqCnt = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACStaUserAuthReqCnt.setStatus('current')
h3cDot11ACStaUserAuthSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACStaUserAuthSuccCnt.setStatus('current')
h3cDot11ACStaUserAuthFailCnt = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 1, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11ACStaUserAuthFailCnt.setStatus('current')
h3cDot11CAPWAPTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1), )
if mibBuilder.loadTexts: h3cDot11CAPWAPTunnelTable.setStatus('current')
h3cDot11CAPWAPTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11CurrTunnelAPID"))
if mibBuilder.loadTexts: h3cDot11CAPWAPTunnelEntry.setStatus('current')
h3cDot11CurrTunnelAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1, 1, 1), H3cDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11CurrTunnelAPID.setStatus('current')
h3cDot11CtrlTunnelCurrSec = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1, 1, 2), H3cDot11TunnelSecSchemType().clone('cleartxt')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11CtrlTunnelCurrSec.setStatus('current')
h3cDot11CtrlTunnelUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1, 1, 3), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11CtrlTunnelUpTime.setStatus('current')
h3cDot11DataTunnelCurrSec = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1, 1, 4), H3cDot11TunnelSecSchemType().clone('cleartxt')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DataTunnelCurrSec.setStatus('current')
h3cDot11DataTunnelUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1, 1, 5), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DataTunnelUpTime.setStatus('current')
h3cDot11CtrlTunnelUpTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11CtrlTunnelUpTimeTicks.setStatus('current')
h3cDot11ACMtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 0))
h3cDot11ACMtTunnelSetupTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 0, 1)).setObjects(("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11CurrTunnelAPID"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTunlUpInfo"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTnlAPName"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTnlAPIPAddr"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapAPIPv6Addr"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtFirstTrapTime"))
if mibBuilder.loadTexts: h3cDot11ACMtTunnelSetupTrap.setStatus('current')
h3cDot11ACMtTunnelDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 0, 2)).setObjects(("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11CurrTunnelAPID"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTunlDwnInfo"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTnlAPName"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTnlAPIPAddr"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapAPIPv6Addr"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTunlDwnCount"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapTnlAPSysName"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtFirstTrapTime"))
if mibBuilder.loadTexts: h3cDot11ACMtTunnelDownTrap.setStatus('current')
h3cDot11ACMtBackupSwtTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 0, 3)).setObjects(("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtTrapBackupSwitchInfo"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMtFirstTrapTime"))
if mibBuilder.loadTexts: h3cDot11ACMtBackupSwtTrap.setStatus('current')
h3cDot11ACLoadBalanceTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 0, 4)).setObjects(("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11LoadBalanceType"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11LoadBalanceThreshold"))
if mibBuilder.loadTexts: h3cDot11ACLoadBalanceTrap.setStatus('current')
h3cDot11ACStaFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 0, 5)).setObjects(("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACMaxStaNum"))
if mibBuilder.loadTexts: h3cDot11ACStaFullTrap.setStatus('current')
h3cDot11ACStatusSwitchTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 0, 6)).setObjects(("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11ACStatusSwitchInfo"), ("A3COM-HUAWEI-DOT11-ACMT-MIB", "h3cDot11SourceACNmsIP"))
if mibBuilder.loadTexts: h3cDot11ACStatusSwitchTrap.setStatus('current')
h3cDot11ACMtTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1))
h3cDot11ACMtTrapTunlDwnInfo = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("tunnelTimeout", 1), ("keyUpdateFailure", 2), ("apReset", 3), ("apCrash", 4), ("apDeleted", 5), ("apCfgChange", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapTunlDwnInfo.setStatus('current')
h3cDot11ACMtTrapTunlUpInfo = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("up", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapTunlUpInfo.setStatus('current')
h3cDot11ACMtTrapBackupSwitchInfo = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("masterToSlave", 1), ("slaveToMaster", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapBackupSwitchInfo.setStatus('current')
h3cDot11ACMtTrapTnlAPName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 4), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapTnlAPName.setStatus('current')
h3cDot11ACMtTrapTnlAPIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 5), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapTnlAPIPAddr.setStatus('current')
h3cDot11LoadBalanceType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("traffic", 1), ("session", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11LoadBalanceType.setStatus('current')
h3cDot11LoadBalanceThreshold = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11LoadBalanceThreshold.setStatus('current')
h3cDot11ACMtTrapAPIPv6Addr = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapAPIPv6Addr.setStatus('current')
h3cDot11ACMtTrapTunlDwnCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 9), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapTunlDwnCount.setStatus('current')
h3cDot11ACMaxStaNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 10), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMaxStaNum.setStatus('current')
h3cDot11ACMtTrapTnlAPSysName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtTrapTnlAPSysName.setStatus('current')
h3cDot11ACMtFirstTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 12), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACMtFirstTrapTime.setStatus('current')
h3cDot11ACStatusSwitchInfo = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activeToStandby", 1), ("standbyToActive", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ACStatusSwitchInfo.setStatus('current')
h3cDot11SourceACNmsIP = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 1, 3, 1, 14), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11SourceACNmsIP.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-DOT11-ACMT-MIB", h3cDot11ACBASIfType=h3cDot11ACBASIfType, h3cDot11StationCurAssocSum=h3cDot11StationCurAssocSum, h3cDot11AcUploadFrameCnt=h3cDot11AcUploadFrameCnt, h3cDot11ACMtTunnelDownTrap=h3cDot11ACMtTunnelDownTrap, h3cDot11ACMtTrapVarObjects=h3cDot11ACMtTrapVarObjects, h3cDot11ACStaUserAuthFailCnt=h3cDot11ACStaUserAuthFailCnt, h3cDot11CurrentACMACMode=h3cDot11CurrentACMACMode, h3cDot11ACIfName=h3cDot11ACIfName, h3cDot11ACMtBackupSwtTrap=h3cDot11ACMtBackupSwtTrap, h3cDot11APConnectCount=h3cDot11APConnectCount, h3cDot11DataTunnelCurrSec=h3cDot11DataTunnelCurrSec, h3cDot11ACMaxStaNum=h3cDot11ACMaxStaNum, PYSNMP_MODULE_ID=h3cDot11ACMT, h3cDot11ACStaUserAuthSuccCnt=h3cDot11ACStaUserAuthSuccCnt, h3cDot11ACMtTrapBackupSwitchInfo=h3cDot11ACMtTrapBackupSwitchInfo, h3cDot11ACStaFullTrap=h3cDot11ACStaFullTrap, h3cDot11ACBackupMode=h3cDot11ACBackupMode, h3cDot11ACObjectGroup=h3cDot11ACObjectGroup, h3cDot11ConnectAutoAPCount=h3cDot11ConnectAutoAPCount, h3cDot11CAPWAPTunnelTable=h3cDot11CAPWAPTunnelTable, h3cDot11ACIfIndex=h3cDot11ACIfIndex, h3cDot11ACBASIfEntry=h3cDot11ACBASIfEntry, h3cDot11ACIfStaNum=h3cDot11ACIfStaNum, h3cDot11ACBASSysObjects=h3cDot11ACBASSysObjects, h3cDot11ACMtNotifyGroup=h3cDot11ACMtNotifyGroup, h3cDot11ACIFLoadInfoEntry=h3cDot11ACIFLoadInfoEntry, h3cDot11SlaveAPCount=h3cDot11SlaveAPCount, h3cDot11BackupACRole=h3cDot11BackupACRole, h3cDot11CurrTunnelAPID=h3cDot11CurrTunnelAPID, h3cDot11CtrlTunnelUpTimeTicks=h3cDot11CtrlTunnelUpTimeTicks, h3cDot11AcUploadFrameBytes=h3cDot11AcUploadFrameBytes, h3cDot11StationAssocSum=h3cDot11StationAssocSum, h3cDot11AcDownloadFrameCnt=h3cDot11AcDownloadFrameCnt, h3cDot11StationExDeAuthenSum=h3cDot11StationExDeAuthenSum, h3cDot11ACStatusSwitchTrap=h3cDot11ACStatusSwitchTrap, h3cDot11StationAssocRejectedSum=h3cDot11StationAssocRejectedSum, h3cDot11ACStaUserAuthCurNumber=h3cDot11ACStaUserAuthCurNumber, h3cDot11CAPWAPTunnelEntry=h3cDot11CAPWAPTunnelEntry, h3cDot11ACBackupStatus=h3cDot11ACBackupStatus, h3cDot11PersistentAPCount=h3cDot11PersistentAPCount, h3cDot11AcDownloadFrameBytes=h3cDot11AcDownloadFrameBytes, h3cDot11CtrlTunnelCurrSec=h3cDot11CtrlTunnelCurrSec, h3cDot11ACMtTrapTunlUpInfo=h3cDot11ACMtTrapTunlUpInfo, h3cDot11StationReassocSum=h3cDot11StationReassocSum, h3cDot11MaxStationNumPermitted=h3cDot11MaxStationNumPermitted, h3cDot11ACMtTrapAPIPv6Addr=h3cDot11ACMtTrapAPIPv6Addr, h3cDot11StationConnectCount=h3cDot11StationConnectCount, h3cDot11ACSwitchCnt=h3cDot11ACSwitchCnt, h3cDot11MaxAPNumPermitted=h3cDot11MaxAPNumPermitted, h3cDot11MasterAPCount=h3cDot11MasterAPCount, h3cDot11SourceACNmsIP=h3cDot11SourceACNmsIP, h3cDot11ACMtTrapTnlAPName=h3cDot11ACMtTrapTnlAPName, h3cDot11ACIFLoadInfoTable=h3cDot11ACIFLoadInfoTable, h3cDot11ACMtTraps=h3cDot11ACMtTraps, h3cDot11ACBASTableObjects=h3cDot11ACBASTableObjects, h3cDot11ACMtTrapTunlDwnInfo=h3cDot11ACMtTrapTunlDwnInfo, h3cDot11DataTunnelUpTime=h3cDot11DataTunnelUpTime, h3cDot11ACMtTunnelSetupTrap=h3cDot11ACMtTunnelSetupTrap, h3cDot11ACMtTrapTnlAPSysName=h3cDot11ACMtTrapTnlAPSysName, h3cDot11ACMtTrapTnlAPIPAddr=h3cDot11ACMtTrapTnlAPIPAddr, h3cDot11ACBASIfTable=h3cDot11ACBASIfTable, h3cDot11ACStatusSwitchInfo=h3cDot11ACStatusSwitchInfo, h3cDot11LoadBalanceType=h3cDot11LoadBalanceType, h3cDot11CAPWAPTunnelGroup=h3cDot11CAPWAPTunnelGroup, h3cDot11ACIfApNum=h3cDot11ACIfApNum, h3cDot11ACMT=h3cDot11ACMT, h3cDot11BackupACNMSIP=h3cDot11BackupACNMSIP, h3cDot11ACBASIfIndex=h3cDot11ACBASIfIndex, h3cDot11ACBASInfo=h3cDot11ACBASInfo, h3cDot11CtrlTunnelUpTime=h3cDot11CtrlTunnelUpTime, h3cDot11ACLoadInfo=h3cDot11ACLoadInfo, h3cDot11StationAssocFailSum=h3cDot11StationAssocFailSum, h3cDot11ACObject=h3cDot11ACObject, h3cDot11ACBASIfDescr=h3cDot11ACBASIfDescr, h3cDot11ACStaUserAuthReqCnt=h3cDot11ACStaUserAuthReqCnt, h3cDot11ACLoadBalanceTrap=h3cDot11ACLoadBalanceTrap, h3cDot11ACStaUserSecAuthStatis=h3cDot11ACStaUserSecAuthStatis, h3cDot11ACMtFirstTrapTime=h3cDot11ACMtFirstTrapTime, h3cDot11WLANAssocStatisInfo=h3cDot11WLANAssocStatisInfo, h3cDot11ACMtTrapTunlDwnCount=h3cDot11ACMtTrapTunlDwnCount, h3cDot11ACStaUserConnFailCnt=h3cDot11ACStaUserConnFailCnt, h3cDot11LoadBalanceThreshold=h3cDot11LoadBalanceThreshold)
