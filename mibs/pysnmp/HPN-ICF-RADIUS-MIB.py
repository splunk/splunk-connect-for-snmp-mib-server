#
# PySNMP MIB module HPN-ICF-RADIUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-RADIUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
radiusAccServerIndex, radiusAccClientServerPortNumber, radiusAccServerAddress = mibBuilder.importSymbols("RADIUS-ACC-CLIENT-MIB", "radiusAccServerIndex", "radiusAccClientServerPortNumber", "radiusAccServerAddress")
radiusAuthServerIndex, radiusAuthServerAddress, radiusAuthClientServerPortNumber = mibBuilder.importSymbols("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerIndex", "radiusAuthServerAddress", "radiusAuthClientServerPortNumber")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, Counter32, TimeTicks, iso, MibIdentifier, Unsigned32, ModuleIdentity, NotificationType, Integer32, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "Counter32", "TimeTicks", "iso", "MibIdentifier", "Unsigned32", "ModuleIdentity", "NotificationType", "Integer32", "Gauge32", "IpAddress")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
hpnicfRadius = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13))
if mibBuilder.loadTexts: hpnicfRadius.setLastUpdated('201303300000Z')
if mibBuilder.loadTexts: hpnicfRadius.setOrganization('')
hpnicfRdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1))
hpnicfRdInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1), )
if mibBuilder.loadTexts: hpnicfRdInfoTable.setStatus('current')
hpnicfRdInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-RADIUS-MIB", "hpnicfRdGroupName"))
if mibBuilder.loadTexts: hpnicfRdInfoEntry.setStatus('current')
hpnicfRdGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpnicfRdGroupName.setStatus('current')
hpnicfRdPrimAuthIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAuthIp.setStatus('deprecated')
hpnicfRdPrimUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimUdpPort.setStatus('current')
hpnicfRdPrimState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("block", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimState.setStatus('current')
hpnicfRdSecAuthIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAuthIp.setStatus('deprecated')
hpnicfRdSecUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecUdpPort.setStatus('current')
hpnicfRdSecState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("block", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecState.setStatus('current')
hpnicfRdKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdKey.setStatus('current')
hpnicfRdRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdRetry.setStatus('current')
hpnicfRdTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdTimeout.setStatus('current')
hpnicfRdPrimAuthIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 11), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAuthIpAddrType.setStatus('current')
hpnicfRdPrimAuthIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 12), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAuthIpAddr.setStatus('current')
hpnicfRdSecAuthIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 13), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAuthIpAddrType.setStatus('current')
hpnicfRdSecAuthIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 14), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAuthIpAddr.setStatus('current')
hpnicfRdServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("standard", 1), ("iphotel", 2), ("portal", 3), ("extended", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdServerType.setStatus('current')
hpnicfRdQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdQuietTime.setStatus('current')
hpnicfRdUserNameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("withoutdomain", 1), ("withdomain", 2), ("keeporignal", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdUserNameFormat.setStatus('current')
hpnicfRdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdRowStatus.setStatus('current')
hpnicfRdSecKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecKey.setStatus('current')
hpnicfRdPrimVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimVpnName.setStatus('current')
hpnicfRdSecVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecVpnName.setStatus('current')
hpnicfRdAuthNasIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 22), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAuthNasIpAddrType.setStatus('current')
hpnicfRdAuthNasIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 23), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAuthNasIpAddr.setStatus('current')
hpnicfRdAuthNasIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 1, 1, 24), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAuthNasIpv6Addr.setStatus('current')
hpnicfRdAccInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2), )
if mibBuilder.loadTexts: hpnicfRdAccInfoTable.setStatus('current')
hpnicfRdAccInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-RADIUS-MIB", "hpnicfRdAccGroupName"))
if mibBuilder.loadTexts: hpnicfRdAccInfoEntry.setStatus('current')
hpnicfRdAccGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpnicfRdAccGroupName.setStatus('current')
hpnicfRdPrimAccIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAccIpAddrType.setStatus('current')
hpnicfRdPrimAccIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAccIpAddr.setStatus('current')
hpnicfRdPrimAccUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAccUdpPort.setStatus('current')
hpnicfRdPrimAccState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("block", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAccState.setStatus('current')
hpnicfRdSecAccIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAccIpAddrType.setStatus('current')
hpnicfRdSecAccIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAccIpAddr.setStatus('current')
hpnicfRdSecAccUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAccUdpPort.setStatus('current')
hpnicfRdSecAccState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("block", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAccState.setStatus('current')
hpnicfRdAccKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccKey.setStatus('current')
hpnicfRdAccRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccRetry.setStatus('current')
hpnicfRdAccTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccTimeout.setStatus('current')
hpnicfRdAccServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("standard", 1), ("iphotel", 2), ("portal", 3), ("extended", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccServerType.setStatus('current')
hpnicfRdAccQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccQuietTime.setStatus('current')
hpnicfRdAccFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ignore", 1), ("reject", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccFailureAction.setStatus('current')
hpnicfRdAccRealTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccRealTime.setStatus('current')
hpnicfRdAccRealTimeRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccRealTimeRetry.setStatus('current')
hpnicfRdAccSaveStopPktEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 18), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccSaveStopPktEnable.setStatus('current')
hpnicfRdAccStopRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccStopRetry.setStatus('current')
hpnicfRdAccDataFlowUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("byte", 1), ("kiloByte", 2), ("megaByte", 3), ("gigaByte", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccDataFlowUnit.setStatus('current')
hpnicfRdAccPacketUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("onePacket", 1), ("kiloPacket", 2), ("megaPacket", 3), ("gigaPacket", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccPacketUnit.setStatus('current')
hpnicfRdAccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccRowStatus.setStatus('current')
hpnicfRdAcctOnEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAcctOnEnable.setStatus('current')
hpnicfRdAcctOnSendTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 24), Integer32().clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAcctOnSendTimes.setStatus('current')
hpnicfRdAcctOnSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 25), Integer32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAcctOnSendInterval.setStatus('current')
hpnicfRdSecAccKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAccKey.setStatus('current')
hpnicfRdPrimAccVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdPrimAccVpnName.setStatus('current')
hpnicfRdSecAccVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecAccVpnName.setStatus('current')
hpnicfRdAccNasIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 29), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccNasIpAddrType.setStatus('current')
hpnicfRdAccNasIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 30), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccNasIpAddr.setStatus('current')
hpnicfRdAccNasIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 2, 1, 31), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdAccNasIpv6Addr.setStatus('current')
hpnicfRadiusGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 3))
hpnicfRadiusAuthErrThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(30)).setUnits('percentage').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfRadiusAuthErrThreshold.setStatus('current')
hpnicfRdSecondaryAuthServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4), )
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthServerTable.setStatus('current')
hpnicfRdSecondaryAuthServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-RADIUS-MIB", "hpnicfRdGroupName"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAuthIpAddrType"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAuthIpAddr"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAuthVpnName"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAuthUdpPort"))
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthServerEntry.setStatus('current')
hpnicfRdSecondaryAuthIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthIpAddrType.setStatus('current')
hpnicfRdSecondaryAuthIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthIpAddr.setStatus('current')
hpnicfRdSecondaryAuthVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthVpnName.setStatus('current')
hpnicfRdSecondaryAuthUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthUdpPort.setStatus('current')
hpnicfRdSecondaryAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("block", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthState.setStatus('current')
hpnicfRdSecondaryAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthKey.setStatus('current')
hpnicfRdSecondaryAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 4, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecondaryAuthRowStatus.setStatus('current')
hpnicfRdSecondaryAccServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5), )
if mibBuilder.loadTexts: hpnicfRdSecondaryAccServerTable.setStatus('current')
hpnicfRdSecondaryAccServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-RADIUS-MIB", "hpnicfRdAccGroupName"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAccIpAddrType"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAccIpAddr"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAccVpnName"), (0, "HPN-ICF-RADIUS-MIB", "hpnicfRdSecondaryAccUdpPort"))
if mibBuilder.loadTexts: hpnicfRdSecondaryAccServerEntry.setStatus('current')
hpnicfRdSecondaryAccIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfRdSecondaryAccIpAddrType.setStatus('current')
hpnicfRdSecondaryAccIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpnicfRdSecondaryAccIpAddr.setStatus('current')
hpnicfRdSecondaryAccVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hpnicfRdSecondaryAccVpnName.setStatus('current')
hpnicfRdSecondaryAccUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfRdSecondaryAccUdpPort.setStatus('current')
hpnicfRdSecondaryAccState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("block", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecondaryAccState.setStatus('current')
hpnicfRdSecondaryAccKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecondaryAccKey.setStatus('current')
hpnicfRdSecondaryAccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 1, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRdSecondaryAccRowStatus.setStatus('current')
hpnicfRadiusAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2))
hpnicfRadiusAccClient = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1))
hpnicfRadiusAccServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1), )
if mibBuilder.loadTexts: hpnicfRadiusAccServerTable.setStatus('current')
hpnicfRadiusAccServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1, 1), ).setIndexNames((0, "RADIUS-ACC-CLIENT-MIB", "radiusAccServerIndex"))
if mibBuilder.loadTexts: hpnicfRadiusAccServerEntry.setStatus('current')
hpnicfRadiusAccClientStartRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAccClientStartRequests.setStatus('current')
hpnicfRadiusAccClientStartResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAccClientStartResponses.setStatus('current')
hpnicfRadiusAccClientInterimRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAccClientInterimRequests.setStatus('current')
hpnicfRadiusAccClientInterimResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAccClientInterimResponses.setStatus('current')
hpnicfRadiusAccClientStopRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAccClientStopRequests.setStatus('current')
hpnicfRadiusAccClientStopResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 2, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAccClientStopResponses.setStatus('current')
hpnicfRadiusServerTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 3))
hpnicfRadiusAuthServerDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 3, 1)).setObjects(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerAddress"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientServerPortNumber"), ("HPN-ICF-RADIUS-MIB", "hpnicfRadiusServerFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfRadiusAuthServerDownTrap.setStatus('current')
hpnicfRadiusAccServerDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 3, 2)).setObjects(("RADIUS-ACC-CLIENT-MIB", "radiusAccServerAddress"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientServerPortNumber"), ("HPN-ICF-RADIUS-MIB", "hpnicfRadiusServerFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfRadiusAccServerDownTrap.setStatus('current')
hpnicfRadiusServerTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 3, 0))
hpnicfRadiusAuthServerUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 3, 0, 1)).setObjects(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerAddress"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientServerPortNumber"), ("HPN-ICF-RADIUS-MIB", "hpnicfRadiusServerFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfRadiusAuthServerUpTrap.setStatus('current')
hpnicfRadiusAccServerUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 3, 0, 2)).setObjects(("RADIUS-ACC-CLIENT-MIB", "radiusAccServerAddress"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientServerPortNumber"), ("HPN-ICF-RADIUS-MIB", "hpnicfRadiusServerFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfRadiusAccServerUpTrap.setStatus('current')
hpnicfRadiusAuthErrTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 3, 0, 3)).setObjects(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerAddress"), ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthClientServerPortNumber"))
if mibBuilder.loadTexts: hpnicfRadiusAuthErrTrap.setStatus('current')
hpnicfRadiusAuthenticating = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 4))
hpnicfRadiusAuthClient = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 4, 1))
hpnicfRadiusAuthServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 4, 1, 1), )
if mibBuilder.loadTexts: hpnicfRadiusAuthServerTable.setStatus('current')
hpnicfRadiusAuthServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 4, 1, 1, 1), ).setIndexNames((0, "RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerIndex"))
if mibBuilder.loadTexts: hpnicfRadiusAuthServerEntry.setStatus('current')
hpnicfRadiusAuthFailureTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 4, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAuthFailureTimes.setStatus('current')
hpnicfRadiusAuthTimeoutTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 4, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAuthTimeoutTimes.setStatus('current')
hpnicfRadiusAuthRejectTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 4, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusAuthRejectTimes.setStatus('current')
hpnicfRadiusExtend = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5))
hpnicfRadiusExtendObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 1))
hpnicfRadiusExtendTables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2))
hpnicfRadiusExtendTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 3))
hpnicfRadiusSchAuthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1), )
if mibBuilder.loadTexts: hpnicfRadiusSchAuthTable.setStatus('current')
hpnicfRadiusSchAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-RADIUS-MIB", "hpnicfRadiusSchAuthGroupName"))
if mibBuilder.loadTexts: hpnicfRadiusSchAuthEntry.setStatus('current')
hpnicfRadiusSchAuthGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 1), DisplayString())
if mibBuilder.loadTexts: hpnicfRadiusSchAuthGroupName.setStatus('current')
hpnicfRadiusSchAuthPrimIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAuthPrimIpAddr.setStatus('current')
hpnicfRadiusSchAuthPrimUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 3), Integer32().clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAuthPrimUdpPort.setStatus('current')
hpnicfRadiusSchAuthPrimKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAuthPrimKey.setStatus('current')
hpnicfRadiusSchAuthSecIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAuthSecIpAddr.setStatus('current')
hpnicfRadiusSchAuthSecUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 6), Integer32().clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAuthSecUdpPort.setStatus('current')
hpnicfRadiusSchAuthSecKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAuthSecKey.setStatus('current')
hpnicfRadiusSchAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAuthRowStatus.setStatus('current')
hpnicfRadiusSchAccTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2), )
if mibBuilder.loadTexts: hpnicfRadiusSchAccTable.setStatus('current')
hpnicfRadiusSchAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-RADIUS-MIB", "hpnicfRadiusSchAccGroupName"))
if mibBuilder.loadTexts: hpnicfRadiusSchAccEntry.setStatus('current')
hpnicfRadiusSchAccGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 1), DisplayString())
if mibBuilder.loadTexts: hpnicfRadiusSchAccGroupName.setStatus('current')
hpnicfRadiusSchAccPrimIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAccPrimIpAddr.setStatus('current')
hpnicfRadiusSchAccPrimUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 3), Integer32().clone(1813)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAccPrimUdpPort.setStatus('current')
hpnicfRadiusSchAccPrimKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAccPrimKey.setStatus('current')
hpnicfRadiusSchAccSecIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAccSecIpAddr.setStatus('current')
hpnicfRadiusSchAccSecUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 6), Integer32().clone(1813)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAccSecUdpPort.setStatus('current')
hpnicfRadiusSchAccSecKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAccSecKey.setStatus('current')
hpnicfRadiusSchAccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 5, 2, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRadiusSchAccRowStatus.setStatus('current')
hpnicfRadiusStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 6))
hpnicfRadiusStatAccReq = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusStatAccReq.setStatus('current')
hpnicfRadiusStatAccAck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 6, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusStatAccAck.setStatus('current')
hpnicfRadiusStatLogoutReq = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 6, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusStatLogoutReq.setStatus('current')
hpnicfRadiusStatLogoutAck = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 6, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRadiusStatLogoutAck.setStatus('current')
hpnicfRadiusServerTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 7))
hpnicfRadiusServerFirstTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 13, 7, 1), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfRadiusServerFirstTrapTime.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-RADIUS-MIB", hpnicfRadiusStatLogoutReq=hpnicfRadiusStatLogoutReq, hpnicfRadiusSchAuthSecIpAddr=hpnicfRadiusSchAuthSecIpAddr, hpnicfRdSecondaryAccServerEntry=hpnicfRdSecondaryAccServerEntry, hpnicfRadiusAccounting=hpnicfRadiusAccounting, hpnicfRdAccDataFlowUnit=hpnicfRdAccDataFlowUnit, hpnicfRdSecondaryAccIpAddrType=hpnicfRdSecondaryAccIpAddrType, hpnicfRadiusExtendObjects=hpnicfRadiusExtendObjects, hpnicfRdAuthNasIpAddr=hpnicfRdAuthNasIpAddr, hpnicfRadiusAuthErrTrap=hpnicfRadiusAuthErrTrap, hpnicfRadiusExtendTables=hpnicfRadiusExtendTables, hpnicfRadiusAuthServerDownTrap=hpnicfRadiusAuthServerDownTrap, hpnicfRadiusAuthServerTable=hpnicfRadiusAuthServerTable, hpnicfRdAccServerType=hpnicfRdAccServerType, hpnicfRdSecondaryAuthState=hpnicfRdSecondaryAuthState, hpnicfRdAccGroupName=hpnicfRdAccGroupName, hpnicfRadiusSchAccPrimKey=hpnicfRadiusSchAccPrimKey, hpnicfRdAccNasIpAddr=hpnicfRdAccNasIpAddr, hpnicfRdPrimAuthIp=hpnicfRdPrimAuthIp, hpnicfRdAcctOnEnable=hpnicfRdAcctOnEnable, hpnicfRdSecondaryAccIpAddr=hpnicfRdSecondaryAccIpAddr, hpnicfRdAccSaveStopPktEnable=hpnicfRdAccSaveStopPktEnable, hpnicfRdAccRetry=hpnicfRdAccRetry, hpnicfRdPrimAccVpnName=hpnicfRdPrimAccVpnName, hpnicfRdQuietTime=hpnicfRdQuietTime, hpnicfRdSecAccIpAddr=hpnicfRdSecAccIpAddr, hpnicfRdRowStatus=hpnicfRdRowStatus, hpnicfRdSecVpnName=hpnicfRdSecVpnName, hpnicfRdSecondaryAuthKey=hpnicfRdSecondaryAuthKey, hpnicfRdAccFailureAction=hpnicfRdAccFailureAction, hpnicfRadiusSchAuthSecKey=hpnicfRadiusSchAuthSecKey, hpnicfRadiusAccServerEntry=hpnicfRadiusAccServerEntry, hpnicfRdPrimVpnName=hpnicfRdPrimVpnName, hpnicfRadiusSchAuthEntry=hpnicfRadiusSchAuthEntry, hpnicfRadiusServerTrapPrefix=hpnicfRadiusServerTrapPrefix, hpnicfRdSecondaryAuthVpnName=hpnicfRdSecondaryAuthVpnName, hpnicfRdSecondaryAccState=hpnicfRdSecondaryAccState, hpnicfRdPrimAuthIpAddr=hpnicfRdPrimAuthIpAddr, hpnicfRdGroupName=hpnicfRdGroupName, hpnicfRadiusSchAccGroupName=hpnicfRadiusSchAccGroupName, hpnicfRdSecState=hpnicfRdSecState, hpnicfRadiusSchAuthSecUdpPort=hpnicfRadiusSchAuthSecUdpPort, hpnicfRdAccStopRetry=hpnicfRdAccStopRetry, hpnicfRadiusServerTrap=hpnicfRadiusServerTrap, hpnicfRdRetry=hpnicfRdRetry, hpnicfRdKey=hpnicfRdKey, hpnicfRdSecUdpPort=hpnicfRdSecUdpPort, hpnicfRdAcctOnSendTimes=hpnicfRdAcctOnSendTimes, hpnicfRdAuthNasIpAddrType=hpnicfRdAuthNasIpAddrType, hpnicfRdSecAuthIpAddrType=hpnicfRdSecAuthIpAddrType, hpnicfRadiusServerTrapVarObjects=hpnicfRadiusServerTrapVarObjects, hpnicfRdSecondaryAccVpnName=hpnicfRdSecondaryAccVpnName, hpnicfRdAccInfoTable=hpnicfRdAccInfoTable, hpnicfRadiusAuthServerEntry=hpnicfRadiusAuthServerEntry, hpnicfRdPrimAccState=hpnicfRdPrimAccState, hpnicfRadiusGlobalConfig=hpnicfRadiusGlobalConfig, hpnicfRdSecAccVpnName=hpnicfRdSecAccVpnName, hpnicfRdInfoEntry=hpnicfRdInfoEntry, hpnicfRadiusSchAccPrimIpAddr=hpnicfRadiusSchAccPrimIpAddr, hpnicfRadiusSchAuthPrimIpAddr=hpnicfRadiusSchAuthPrimIpAddr, hpnicfRadiusSchAccSecKey=hpnicfRadiusSchAccSecKey, hpnicfRdSecondaryAuthServerEntry=hpnicfRdSecondaryAuthServerEntry, hpnicfRadiusAccClientInterimRequests=hpnicfRadiusAccClientInterimRequests, hpnicfRadiusStatAccAck=hpnicfRadiusStatAccAck, hpnicfRdAccKey=hpnicfRdAccKey, hpnicfRdSecondaryAuthIpAddrType=hpnicfRdSecondaryAuthIpAddrType, hpnicfRadiusSchAuthPrimUdpPort=hpnicfRadiusSchAuthPrimUdpPort, hpnicfRdSecondaryAccRowStatus=hpnicfRdSecondaryAccRowStatus, hpnicfRdAccPacketUnit=hpnicfRdAccPacketUnit, hpnicfRdSecAccState=hpnicfRdSecAccState, hpnicfRdAccRealTime=hpnicfRdAccRealTime, hpnicfRadiusAccClientStartResponses=hpnicfRadiusAccClientStartResponses, hpnicfRadiusAccClientStopResponses=hpnicfRadiusAccClientStopResponses, hpnicfRadiusAccClientInterimResponses=hpnicfRadiusAccClientInterimResponses, hpnicfRdSecondaryAuthServerTable=hpnicfRdSecondaryAuthServerTable, hpnicfRdAcctOnSendInterval=hpnicfRdAcctOnSendInterval, hpnicfRdPrimAccIpAddr=hpnicfRdPrimAccIpAddr, hpnicfRdSecondaryAuthIpAddr=hpnicfRdSecondaryAuthIpAddr, hpnicfRdSecondaryAuthUdpPort=hpnicfRdSecondaryAuthUdpPort, hpnicfRdAccInfoEntry=hpnicfRdAccInfoEntry, hpnicfRdAccNasIpAddrType=hpnicfRdAccNasIpAddrType, hpnicfRadiusSchAccEntry=hpnicfRadiusSchAccEntry, hpnicfRadiusAuthClient=hpnicfRadiusAuthClient, hpnicfRadiusSchAuthTable=hpnicfRadiusSchAuthTable, hpnicfRadiusAccServerTable=hpnicfRadiusAccServerTable, hpnicfRadiusAuthTimeoutTimes=hpnicfRadiusAuthTimeoutTimes, hpnicfRadiusSchAccPrimUdpPort=hpnicfRadiusSchAccPrimUdpPort, hpnicfRadiusSchAuthGroupName=hpnicfRadiusSchAuthGroupName, hpnicfRadiusExtend=hpnicfRadiusExtend, hpnicfRadiusAccServerDownTrap=hpnicfRadiusAccServerDownTrap, hpnicfRadiusAuthServerUpTrap=hpnicfRadiusAuthServerUpTrap, hpnicfRdAuthNasIpv6Addr=hpnicfRdAuthNasIpv6Addr, hpnicfRdSecAccIpAddrType=hpnicfRdSecAccIpAddrType, hpnicfRadiusAccClient=hpnicfRadiusAccClient, hpnicfRdAccTimeout=hpnicfRdAccTimeout, hpnicfRadiusSchAccSecIpAddr=hpnicfRadiusSchAccSecIpAddr, hpnicfRdSecKey=hpnicfRdSecKey, hpnicfRdSecondaryAuthRowStatus=hpnicfRdSecondaryAuthRowStatus, hpnicfRadiusAuthRejectTimes=hpnicfRadiusAuthRejectTimes, hpnicfRadiusAccClientStopRequests=hpnicfRadiusAccClientStopRequests, hpnicfRdAccNasIpv6Addr=hpnicfRdAccNasIpv6Addr, hpnicfRdObjects=hpnicfRdObjects, hpnicfRdSecondaryAccUdpPort=hpnicfRdSecondaryAccUdpPort, hpnicfRadiusServerFirstTrapTime=hpnicfRadiusServerFirstTrapTime, hpnicfRdPrimAccIpAddrType=hpnicfRdPrimAccIpAddrType, hpnicfRadiusExtendTraps=hpnicfRadiusExtendTraps, PYSNMP_MODULE_ID=hpnicfRadius, hpnicfRdServerType=hpnicfRdServerType, hpnicfRadiusAuthFailureTimes=hpnicfRadiusAuthFailureTimes, hpnicfRadiusSchAccSecUdpPort=hpnicfRadiusSchAccSecUdpPort, hpnicfRdSecAuthIpAddr=hpnicfRdSecAuthIpAddr, hpnicfRadiusStatLogoutAck=hpnicfRadiusStatLogoutAck, hpnicfRadiusSchAuthRowStatus=hpnicfRadiusSchAuthRowStatus, hpnicfRadiusStatistic=hpnicfRadiusStatistic, hpnicfRadiusSchAccRowStatus=hpnicfRadiusSchAccRowStatus, hpnicfRdTimeout=hpnicfRdTimeout, hpnicfRdSecondaryAccServerTable=hpnicfRdSecondaryAccServerTable, hpnicfRdPrimAuthIpAddrType=hpnicfRdPrimAuthIpAddrType, hpnicfRdUserNameFormat=hpnicfRdUserNameFormat, hpnicfRdPrimAccUdpPort=hpnicfRdPrimAccUdpPort, hpnicfRadiusAccServerUpTrap=hpnicfRadiusAccServerUpTrap, hpnicfRdSecAccUdpPort=hpnicfRdSecAccUdpPort, hpnicfRadius=hpnicfRadius, hpnicfRdAccRowStatus=hpnicfRdAccRowStatus, hpnicfRdAccQuietTime=hpnicfRdAccQuietTime, hpnicfRdAccRealTimeRetry=hpnicfRdAccRealTimeRetry, hpnicfRdSecondaryAccKey=hpnicfRdSecondaryAccKey, hpnicfRadiusAccClientStartRequests=hpnicfRadiusAccClientStartRequests, hpnicfRdInfoTable=hpnicfRdInfoTable, hpnicfRadiusSchAuthPrimKey=hpnicfRadiusSchAuthPrimKey, hpnicfRdPrimUdpPort=hpnicfRdPrimUdpPort, hpnicfRadiusAuthErrThreshold=hpnicfRadiusAuthErrThreshold, hpnicfRadiusStatAccReq=hpnicfRadiusStatAccReq, hpnicfRdPrimState=hpnicfRdPrimState, hpnicfRdSecAccKey=hpnicfRdSecAccKey, hpnicfRdSecAuthIp=hpnicfRdSecAuthIp, hpnicfRadiusSchAccTable=hpnicfRadiusSchAccTable, hpnicfRadiusAuthenticating=hpnicfRadiusAuthenticating)
