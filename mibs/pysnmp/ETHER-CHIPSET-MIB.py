#
# PySNMP MIB module ETHER-CHIPSET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ETHER-CHIPSET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:52:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
dot3, = mibBuilder.importSymbols("EtherLike-MIB", "dot3")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, TimeTicks, NotificationType, Integer32, iso, Gauge32, MibIdentifier, Unsigned32, mib_2, ObjectIdentity, Counter64, Bits, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "NotificationType", "Integer32", "iso", "Gauge32", "MibIdentifier", "Unsigned32", "mib-2", "ObjectIdentity", "Counter64", "Bits", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
etherChipsetMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 70))
etherChipsetMIB.setRevisions(('1999-08-24 04:00',))
if mibBuilder.loadTexts: etherChipsetMIB.setLastUpdated('9908240400Z')
if mibBuilder.loadTexts: etherChipsetMIB.setOrganization('IETF 802.3 Hub MIB Working Group')
dot3ChipSets = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8))
dot3ChipSetAMD = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 1))
dot3ChipSetAMD7990 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 1))
if mibBuilder.loadTexts: dot3ChipSetAMD7990.setStatus('current')
dot3ChipSetAMD79900 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 2))
if mibBuilder.loadTexts: dot3ChipSetAMD79900.setStatus('current')
dot3ChipSetAMD79C940 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 3))
if mibBuilder.loadTexts: dot3ChipSetAMD79C940.setStatus('current')
dot3ChipSetAMD79C90 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 4))
if mibBuilder.loadTexts: dot3ChipSetAMD79C90.setStatus('current')
dot3ChipSetAMD79C960 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 5))
if mibBuilder.loadTexts: dot3ChipSetAMD79C960.setStatus('current')
dot3ChipSetAMD79C961 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 6))
if mibBuilder.loadTexts: dot3ChipSetAMD79C961.setStatus('current')
dot3ChipSetAMD79C961A = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 7))
if mibBuilder.loadTexts: dot3ChipSetAMD79C961A.setStatus('current')
dot3ChipSetAMD79C965 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 8))
if mibBuilder.loadTexts: dot3ChipSetAMD79C965.setStatus('current')
dot3ChipSetAMD79C970 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 9))
if mibBuilder.loadTexts: dot3ChipSetAMD79C970.setStatus('current')
dot3ChipSetAMD79C970A = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 10))
if mibBuilder.loadTexts: dot3ChipSetAMD79C970A.setStatus('current')
dot3ChipSetAMD79C971 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 11))
if mibBuilder.loadTexts: dot3ChipSetAMD79C971.setStatus('current')
dot3ChipSetAMD79C972 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 12))
if mibBuilder.loadTexts: dot3ChipSetAMD79C972.setStatus('current')
dot3ChipSetIntel = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 2))
dot3ChipSetIntel82586 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 2, 1))
if mibBuilder.loadTexts: dot3ChipSetIntel82586.setStatus('current')
dot3ChipSetIntel82596 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 2, 2))
if mibBuilder.loadTexts: dot3ChipSetIntel82596.setStatus('current')
dot3ChipSetIntel82595 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 2, 3))
if mibBuilder.loadTexts: dot3ChipSetIntel82595.setStatus('current')
dot3ChipSetIntel82557 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 2, 4))
if mibBuilder.loadTexts: dot3ChipSetIntel82557.setStatus('current')
dot3ChipSetIntel82558 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 2, 5))
if mibBuilder.loadTexts: dot3ChipSetIntel82558.setStatus('current')
dot3ChipSetSeeq = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 3))
dot3ChipSetSeeq8003 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 1))
if mibBuilder.loadTexts: dot3ChipSetSeeq8003.setStatus('current')
dot3ChipSetSeeq80C03 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 2))
if mibBuilder.loadTexts: dot3ChipSetSeeq80C03.setStatus('current')
dot3ChipSetSeeq84C30 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 3))
if mibBuilder.loadTexts: dot3ChipSetSeeq84C30.setStatus('current')
dot3ChipSetSeeq8431 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 4))
if mibBuilder.loadTexts: dot3ChipSetSeeq8431.setStatus('current')
dot3ChipSetSeeq80C300 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 5))
if mibBuilder.loadTexts: dot3ChipSetSeeq80C300.setStatus('current')
dot3ChipSetSeeq84C300 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 6))
if mibBuilder.loadTexts: dot3ChipSetSeeq84C300.setStatus('current')
dot3ChipSetSeeq84301 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 7))
if mibBuilder.loadTexts: dot3ChipSetSeeq84301.setStatus('current')
dot3ChipSetSeeq84302 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 8))
if mibBuilder.loadTexts: dot3ChipSetSeeq84302.setStatus('current')
dot3ChipSetSeeq8100 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 9))
if mibBuilder.loadTexts: dot3ChipSetSeeq8100.setStatus('current')
dot3ChipSetNational = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 4))
dot3ChipSetNational8390 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 1))
if mibBuilder.loadTexts: dot3ChipSetNational8390.setStatus('current')
dot3ChipSetNationalSonic = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 2))
if mibBuilder.loadTexts: dot3ChipSetNationalSonic.setStatus('current')
dot3ChipSetNational83901 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 3))
if mibBuilder.loadTexts: dot3ChipSetNational83901.setStatus('current')
dot3ChipSetNational83902 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 4))
if mibBuilder.loadTexts: dot3ChipSetNational83902.setStatus('current')
dot3ChipSetNational83905 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 5))
if mibBuilder.loadTexts: dot3ChipSetNational83905.setStatus('current')
dot3ChipSetNational83907 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 6))
if mibBuilder.loadTexts: dot3ChipSetNational83907.setStatus('current')
dot3ChipSetNational83916 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 7))
if mibBuilder.loadTexts: dot3ChipSetNational83916.setStatus('current')
dot3ChipSetNational83934 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 8))
if mibBuilder.loadTexts: dot3ChipSetNational83934.setStatus('current')
dot3ChipSetNational83936 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 9))
if mibBuilder.loadTexts: dot3ChipSetNational83936.setStatus('current')
dot3ChipSetFujitsu = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 5))
dot3ChipSetFujitsu86950 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 5, 1))
if mibBuilder.loadTexts: dot3ChipSetFujitsu86950.setStatus('current')
dot3ChipSetFujitsu86960 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 5, 2))
if mibBuilder.loadTexts: dot3ChipSetFujitsu86960.setStatus('current')
dot3ChipSetFujitsu86964 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 5, 3))
if mibBuilder.loadTexts: dot3ChipSetFujitsu86964.setStatus('current')
dot3ChipSetFujitsu86965A = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 5, 4))
if mibBuilder.loadTexts: dot3ChipSetFujitsu86965A.setStatus('current')
dot3ChipSetFujitsu86965B = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 5, 5))
if mibBuilder.loadTexts: dot3ChipSetFujitsu86965B.setStatus('current')
dot3ChipSetDigital = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 6))
dot3ChipSetDigitalDC21040 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 6, 1))
if mibBuilder.loadTexts: dot3ChipSetDigitalDC21040.setStatus('current')
dot3ChipSetDigital21041 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 6, 2))
if mibBuilder.loadTexts: dot3ChipSetDigital21041.setStatus('current')
dot3ChipSetDigital21140 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 6, 3))
if mibBuilder.loadTexts: dot3ChipSetDigital21140.setStatus('current')
dot3ChipSetDigital21143 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 6, 4))
if mibBuilder.loadTexts: dot3ChipSetDigital21143.setStatus('current')
dot3ChipSetDigital21340 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 6, 5))
if mibBuilder.loadTexts: dot3ChipSetDigital21340.setStatus('current')
dot3ChipSetDigital21440 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 6, 6))
if mibBuilder.loadTexts: dot3ChipSetDigital21440.setStatus('current')
dot3ChipSetDigital21540 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 6, 7))
if mibBuilder.loadTexts: dot3ChipSetDigital21540.setStatus('current')
dot3ChipSetTI = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 7))
dot3ChipSetTIE100 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 7, 1))
if mibBuilder.loadTexts: dot3ChipSetTIE100.setStatus('current')
dot3ChipSetTIE110 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 7, 2))
if mibBuilder.loadTexts: dot3ChipSetTIE110.setStatus('current')
dot3ChipSetTIX3100 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 7, 3))
if mibBuilder.loadTexts: dot3ChipSetTIX3100.setStatus('current')
dot3ChipSetTIX3150 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 7, 4))
if mibBuilder.loadTexts: dot3ChipSetTIX3150.setStatus('current')
dot3ChipSetTIX3270 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 7, 5))
if mibBuilder.loadTexts: dot3ChipSetTIX3270.setStatus('current')
dot3ChipSetToshiba = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 8))
dot3ChipSetToshibaTC35815F = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 8, 1))
if mibBuilder.loadTexts: dot3ChipSetToshibaTC35815F.setStatus('current')
dot3ChipSetLucent = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 9))
dot3ChipSetLucentATT1MX10 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 9, 1))
if mibBuilder.loadTexts: dot3ChipSetLucentATT1MX10.setStatus('current')
dot3ChipSetLucentLUC3M08 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 9, 2))
if mibBuilder.loadTexts: dot3ChipSetLucentLUC3M08.setStatus('current')
dot3ChipSetGalileo = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 10))
dot3ChipSetGalileoGT48001 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 10, 1))
if mibBuilder.loadTexts: dot3ChipSetGalileoGT48001.setStatus('current')
dot3ChipSetGalileoGT48002 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 10, 2))
if mibBuilder.loadTexts: dot3ChipSetGalileoGT48002.setStatus('current')
dot3ChipSetGalileoGT48004 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 10, 3))
if mibBuilder.loadTexts: dot3ChipSetGalileoGT48004.setStatus('current')
dot3ChipSetGalileoGT48207 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 10, 4))
if mibBuilder.loadTexts: dot3ChipSetGalileoGT48207.setStatus('current')
dot3ChipSetGalileoGT48208 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 10, 5))
if mibBuilder.loadTexts: dot3ChipSetGalileoGT48208.setStatus('current')
dot3ChipSetGalileoGT48212 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 10, 6))
if mibBuilder.loadTexts: dot3ChipSetGalileoGT48212.setStatus('current')
dot3ChipSetJato = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 11))
dot3ChipSetJatoJT1001 = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 11, 1))
if mibBuilder.loadTexts: dot3ChipSetJatoJT1001.setStatus('current')
dot3ChipSetXaQti = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 12))
dot3ChipSetXaQtiXQ11800FP = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 12, 1))
if mibBuilder.loadTexts: dot3ChipSetXaQtiXQ11800FP.setStatus('current')
dot3ChipSetXaQtiXQ18110FP = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 8, 12, 2))
if mibBuilder.loadTexts: dot3ChipSetXaQtiXQ18110FP.setStatus('current')
mibBuilder.exportSymbols("ETHER-CHIPSET-MIB", dot3ChipSetTIX3270=dot3ChipSetTIX3270, dot3ChipSetSeeq84C300=dot3ChipSetSeeq84C300, dot3ChipSetGalileoGT48001=dot3ChipSetGalileoGT48001, dot3ChipSetSeeq8431=dot3ChipSetSeeq8431, dot3ChipSetNational83916=dot3ChipSetNational83916, dot3ChipSetTI=dot3ChipSetTI, dot3ChipSetNational8390=dot3ChipSetNational8390, dot3ChipSetIntel=dot3ChipSetIntel, dot3ChipSetLucentLUC3M08=dot3ChipSetLucentLUC3M08, dot3ChipSetFujitsu86964=dot3ChipSetFujitsu86964, dot3ChipSetAMD79C970A=dot3ChipSetAMD79C970A, dot3ChipSetSeeq84302=dot3ChipSetSeeq84302, dot3ChipSetNationalSonic=dot3ChipSetNationalSonic, dot3ChipSetDigital21340=dot3ChipSetDigital21340, dot3ChipSetAMD79900=dot3ChipSetAMD79900, dot3ChipSetDigital21143=dot3ChipSetDigital21143, dot3ChipSetNational83907=dot3ChipSetNational83907, dot3ChipSets=dot3ChipSets, dot3ChipSetLucent=dot3ChipSetLucent, dot3ChipSetDigital21140=dot3ChipSetDigital21140, dot3ChipSetDigital21540=dot3ChipSetDigital21540, dot3ChipSetTIX3150=dot3ChipSetTIX3150, dot3ChipSetJato=dot3ChipSetJato, etherChipsetMIB=etherChipsetMIB, dot3ChipSetGalileoGT48208=dot3ChipSetGalileoGT48208, dot3ChipSetTIE100=dot3ChipSetTIE100, dot3ChipSetSeeq84301=dot3ChipSetSeeq84301, dot3ChipSetAMD79C90=dot3ChipSetAMD79C90, dot3ChipSetSeeq80C300=dot3ChipSetSeeq80C300, dot3ChipSetNational=dot3ChipSetNational, dot3ChipSetNational83902=dot3ChipSetNational83902, dot3ChipSetJatoJT1001=dot3ChipSetJatoJT1001, dot3ChipSetXaQtiXQ18110FP=dot3ChipSetXaQtiXQ18110FP, dot3ChipSetXaQti=dot3ChipSetXaQti, dot3ChipSetIntel82558=dot3ChipSetIntel82558, dot3ChipSetAMD79C940=dot3ChipSetAMD79C940, dot3ChipSetSeeq=dot3ChipSetSeeq, dot3ChipSetNational83901=dot3ChipSetNational83901, dot3ChipSetGalileoGT48212=dot3ChipSetGalileoGT48212, dot3ChipSetDigital21041=dot3ChipSetDigital21041, dot3ChipSetIntel82557=dot3ChipSetIntel82557, dot3ChipSetAMD=dot3ChipSetAMD, dot3ChipSetDigitalDC21040=dot3ChipSetDigitalDC21040, dot3ChipSetFujitsu86965B=dot3ChipSetFujitsu86965B, dot3ChipSetNational83934=dot3ChipSetNational83934, dot3ChipSetDigital=dot3ChipSetDigital, dot3ChipSetTIE110=dot3ChipSetTIE110, dot3ChipSetLucentATT1MX10=dot3ChipSetLucentATT1MX10, dot3ChipSetIntel82595=dot3ChipSetIntel82595, dot3ChipSetAMD79C961A=dot3ChipSetAMD79C961A, dot3ChipSetAMD79C961=dot3ChipSetAMD79C961, dot3ChipSetGalileoGT48207=dot3ChipSetGalileoGT48207, dot3ChipSetFujitsu86965A=dot3ChipSetFujitsu86965A, dot3ChipSetFujitsu=dot3ChipSetFujitsu, dot3ChipSetFujitsu86950=dot3ChipSetFujitsu86950, dot3ChipSetXaQtiXQ11800FP=dot3ChipSetXaQtiXQ11800FP, dot3ChipSetAMD79C960=dot3ChipSetAMD79C960, dot3ChipSetGalileoGT48002=dot3ChipSetGalileoGT48002, dot3ChipSetAMD79C965=dot3ChipSetAMD79C965, dot3ChipSetToshibaTC35815F=dot3ChipSetToshibaTC35815F, dot3ChipSetAMD79C970=dot3ChipSetAMD79C970, dot3ChipSetAMD79C972=dot3ChipSetAMD79C972, dot3ChipSetSeeq8100=dot3ChipSetSeeq8100, dot3ChipSetTIX3100=dot3ChipSetTIX3100, dot3ChipSetGalileoGT48004=dot3ChipSetGalileoGT48004, dot3ChipSetIntel82596=dot3ChipSetIntel82596, dot3ChipSetNational83936=dot3ChipSetNational83936, dot3ChipSetToshiba=dot3ChipSetToshiba, dot3ChipSetFujitsu86960=dot3ChipSetFujitsu86960, dot3ChipSetSeeq84C30=dot3ChipSetSeeq84C30, dot3ChipSetDigital21440=dot3ChipSetDigital21440, dot3ChipSetIntel82586=dot3ChipSetIntel82586, dot3ChipSetGalileo=dot3ChipSetGalileo, dot3ChipSetSeeq80C03=dot3ChipSetSeeq80C03, dot3ChipSetSeeq8003=dot3ChipSetSeeq8003, dot3ChipSetAMD7990=dot3ChipSetAMD7990, PYSNMP_MODULE_ID=etherChipsetMIB, dot3ChipSetAMD79C971=dot3ChipSetAMD79C971, dot3ChipSetNational83905=dot3ChipSetNational83905)
