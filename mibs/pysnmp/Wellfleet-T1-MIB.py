#
# PySNMP MIB module Wellfleet-T1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-T1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Opaque, Counter32, mib_2, Integer32, TimeTicks, NotificationType, Gauge32, enterprises, iso, mgmt, Unsigned32, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Opaque", "Counter32", "mib-2", "Integer32", "TimeTicks", "NotificationType", "Gauge32", "enterprises", "iso", "mgmt", "Unsigned32", "Counter64", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfLine, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfLine")
wfT1Table = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 10), )
if mibBuilder.loadTexts: wfT1Table.setStatus('mandatory')
wfT1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1), ).setIndexNames((0, "Wellfleet-T1-MIB", "wfT1Slot"), (0, "Wellfleet-T1-MIB", "wfT1Connector"))
if mibBuilder.loadTexts: wfT1Entry.setStatus('mandatory')
wfT1Delete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1Delete.setStatus('mandatory')
wfT1Disable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1Disable.setStatus('mandatory')
wfT1State = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1State.setStatus('mandatory')
wfT1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1Slot.setStatus('mandatory')
wfT1Connector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1Connector.setStatus('mandatory')
wfT1Madr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1Madr.setStatus('mandatory')
wfT1FrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("d4", 1), ("esf", 2))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1FrameType.setStatus('mandatory')
wfT1LineBuildout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 655)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1LineBuildout.setStatus('mandatory')
wfT1B8ZSSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1B8ZSSupport.setStatus('mandatory')
wfT1ClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("internal", 1), ("slave", 2), ("manual", 4))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1ClockMode.setStatus('mandatory')
wfT1MiniDacs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1MiniDacs.setStatus('mandatory')
wfT1BipolarVios = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1BipolarVios.setStatus('mandatory')
wfT1FrameBitErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1FrameBitErrs.setStatus('mandatory')
wfT1OutOfFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1OutOfFrameErrs.setStatus('mandatory')
wfT1SuperFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1SuperFrameErrs.setStatus('mandatory')
wfT1RcvYelAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1RcvYelAlarms.setStatus('mandatory')
wfT1RcvCarrierLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1RcvCarrierLoss.setStatus('mandatory')
wfT1RcvRedAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1RcvRedAlarms.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-T1-MIB", wfT1RcvYelAlarms=wfT1RcvYelAlarms, wfT1SuperFrameErrs=wfT1SuperFrameErrs, wfT1B8ZSSupport=wfT1B8ZSSupport, wfT1Madr=wfT1Madr, wfT1MiniDacs=wfT1MiniDacs, wfT1Table=wfT1Table, wfT1BipolarVios=wfT1BipolarVios, wfT1OutOfFrameErrs=wfT1OutOfFrameErrs, wfT1FrameBitErrs=wfT1FrameBitErrs, wfT1Slot=wfT1Slot, wfT1RcvCarrierLoss=wfT1RcvCarrierLoss, wfT1Entry=wfT1Entry, wfT1Delete=wfT1Delete, wfT1LineBuildout=wfT1LineBuildout, wfT1State=wfT1State, wfT1RcvRedAlarms=wfT1RcvRedAlarms, wfT1Connector=wfT1Connector, wfT1FrameType=wfT1FrameType, wfT1ClockMode=wfT1ClockMode, wfT1Disable=wfT1Disable)
