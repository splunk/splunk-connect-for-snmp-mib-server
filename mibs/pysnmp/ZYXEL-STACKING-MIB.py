#
# PySNMP MIB module ZYXEL-STACKING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-STACKING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:45:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter32, Bits, TimeTicks, NotificationType, iso, ModuleIdentity, Integer32, Counter64, Gauge32, ObjectIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "Bits", "TimeTicks", "NotificationType", "iso", "ModuleIdentity", "Integer32", "Counter64", "Gauge32", "ObjectIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelStacking = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97))
if mibBuilder.loadTexts: zyxelStacking.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelStacking.setOrganization('Enterprise Solution ZyXEL')
zyxelStackingSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1))
zyxelStackingStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2))
zyxelStackingTrapInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 3))
zyxelStackingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4))
zyStackingPriority = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyStackingPriority.setStatus('current')
zyStackingForceMasterModeState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyStackingForceMasterModeState.setStatus('current')
zyxelStackingSlotTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1, 3), )
if mibBuilder.loadTexts: zyxelStackingSlotTable.setStatus('current')
zyxelStackingSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1, 3, 1), ).setIndexNames((0, "ZYXEL-STACKING-MIB", "zyStackingSlotCurrentSlotId"))
if mibBuilder.loadTexts: zyxelStackingSlotEntry.setStatus('current')
zyStackingSlotCurrentSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyStackingSlotCurrentSlotId.setStatus('current')
zyStackingSlotActiveSlotIdAfterReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("auto", 0), ("slotId1", 1), ("slotId2", 2), ("slotId3", 3), ("slotId4", 4), ("slotId5", 5), ("slotId6", 6), ("slotId7", 7), ("slotId8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyStackingSlotActiveSlotIdAfterReboot.setStatus('current')
zyStackingSlotIdFreeze = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyStackingSlotIdFreeze.setStatus('current')
zyxelStackingSlotInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1), )
if mibBuilder.loadTexts: zyxelStackingSlotInfoTable.setStatus('current')
zyxelStackingSlotInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1), ).setIndexNames((0, "ZYXEL-STACKING-MIB", "zyStackingSlotInfoSlot"))
if mibBuilder.loadTexts: zyxelStackingSlotInfoEntry.setStatus('current')
zyStackingSlotInfoSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: zyStackingSlotInfoSlot.setStatus('current')
zyStackingSlotInfoStackingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("init", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoStackingStatus.setStatus('current')
zyStackingSlotInfoForceMasterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 3), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoForceMasterMode.setStatus('current')
zyStackingSlotInfoPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoPriority.setStatus('current')
zyStackingSlotInfoRole = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("master", 1), ("backup", 2), ("linecard", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoRole.setStatus('current')
zyStackingSlotInfoMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoMacAddress.setStatus('current')
zyStackingSlotInfoUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoUptime.setStatus('current')
zyStackingSlotInfoFirmwareVersionRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoFirmwareVersionRunning.setStatus('current')
zyStackingSlotInfoFirmwareVersionFlash1 = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoFirmwareVersionFlash1.setStatus('current')
zyStackingSlotInfoFirmwareVersionFlash2 = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotInfoFirmwareVersionFlash2.setStatus('current')
zyxelStackingSlotChannelInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2), )
if mibBuilder.loadTexts: zyxelStackingSlotChannelInfoTable.setStatus('current')
zyxelStackingSlotChannelInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2, 1), ).setIndexNames((0, "ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"), (0, "ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoChannnel"))
if mibBuilder.loadTexts: zyxelStackingSlotChannelInfoEntry.setStatus('current')
zyStackingSlotChannelInfoSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyStackingSlotChannelInfoSlot.setStatus('current')
zyStackingSlotChannelInfoChannnel = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: zyStackingSlotChannelInfoChannnel.setStatus('current')
zyStackingSlotChannelInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotChannelInfoStatus.setStatus('current')
zyStackingSlotChannelInfoPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotChannelInfoPorts.setStatus('current')
zyStackingSlotChannelInfoNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotChannelInfoNeighbor.setStatus('current')
zyStackingSlotChannelInfoSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("speed_10G", 1), ("speed_12G", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingSlotChannelInfoSpeed.setStatus('current')
zyStackingTopology = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("chain", 1), ("ring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyStackingTopology.setStatus('current')
zyStackingTrapInfoMsg = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 3, 1), OctetString())
if mibBuilder.loadTexts: zyStackingTrapInfoMsg.setStatus('current')
zyStackingChannelUp = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 1)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"), ("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoChannnel"))
if mibBuilder.loadTexts: zyStackingChannelUp.setStatus('current')
zyStackingChannelDown = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 2)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"), ("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoChannnel"))
if mibBuilder.loadTexts: zyStackingChannelDown.setStatus('current')
zyStackingSlotAttach = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 3)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingSlotAttach.setStatus('current')
zyStackingSlotDetach = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 4)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingSlotDetach.setStatus('current')
zyStackingNewMaster = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 5)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingNewMaster.setStatus('current')
zyStackingUpgradeFirmwareFail = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 6)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingUpgradeFirmwareFail.setStatus('current')
zyStackingNewBackup = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 7)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingNewBackup.setStatus('current')
zyStackingBackupTakeover = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 8)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingBackupTakeover.setStatus('current')
zyStackingNewMasterFromTakeover = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 9)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingNewMasterFromTakeover.setStatus('current')
zyStackingSyncConfFail = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 10)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingSyncConfFail.setStatus('current')
zyStackingSysRestoreConfFail = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 11)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingSlotChannelInfoSlot"))
if mibBuilder.loadTexts: zyStackingSysRestoreConfFail.setStatus('current')
zyStackingSlotInitFail = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 12)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingTrapInfoMsg"))
if mibBuilder.loadTexts: zyStackingSlotInitFail.setStatus('current')
zyStackingSlotChangeIndex = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 13)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingTrapInfoMsg"))
if mibBuilder.loadTexts: zyStackingSlotChangeIndex.setStatus('current')
zyStackingPriorityChange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 14)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingTrapInfoMsg"))
if mibBuilder.loadTexts: zyStackingPriorityChange.setStatus('current')
zyStackingTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 97, 4, 15)).setObjects(("ZYXEL-STACKING-MIB", "zyStackingTrapInfoMsg"))
if mibBuilder.loadTexts: zyStackingTopologyChange.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-STACKING-MIB", zyStackingSlotInfoMacAddress=zyStackingSlotInfoMacAddress, zyStackingSlotInfoFirmwareVersionRunning=zyStackingSlotInfoFirmwareVersionRunning, zyxelStackingSlotEntry=zyxelStackingSlotEntry, zyStackingSlotChannelInfoStatus=zyStackingSlotChannelInfoStatus, zyxelStackingSlotChannelInfoTable=zyxelStackingSlotChannelInfoTable, zyStackingSlotCurrentSlotId=zyStackingSlotCurrentSlotId, zyStackingUpgradeFirmwareFail=zyStackingUpgradeFirmwareFail, zyxelStackingSetup=zyxelStackingSetup, zyStackingSlotAttach=zyStackingSlotAttach, zyStackingSyncConfFail=zyStackingSyncConfFail, zyStackingSlotChannelInfoSlot=zyStackingSlotChannelInfoSlot, zyStackingTopologyChange=zyStackingTopologyChange, zyxelStackingTrapInfoObjects=zyxelStackingTrapInfoObjects, zyStackingSlotActiveSlotIdAfterReboot=zyStackingSlotActiveSlotIdAfterReboot, zyStackingSlotChannelInfoPorts=zyStackingSlotChannelInfoPorts, zyxelStackingStatus=zyxelStackingStatus, zyStackingChannelUp=zyStackingChannelUp, zyxelStacking=zyxelStacking, zyStackingNewMaster=zyStackingNewMaster, zyxelStackingSlotChannelInfoEntry=zyxelStackingSlotChannelInfoEntry, zyStackingPriorityChange=zyStackingPriorityChange, zyxelStackingNotifications=zyxelStackingNotifications, zyxelStackingSlotTable=zyxelStackingSlotTable, zyStackingNewBackup=zyStackingNewBackup, zyStackingNewMasterFromTakeover=zyStackingNewMasterFromTakeover, zyStackingSysRestoreConfFail=zyStackingSysRestoreConfFail, zyStackingSlotInfoForceMasterMode=zyStackingSlotInfoForceMasterMode, zyStackingSlotInfoFirmwareVersionFlash2=zyStackingSlotInfoFirmwareVersionFlash2, zyStackingSlotInfoSlot=zyStackingSlotInfoSlot, zyStackingSlotChannelInfoChannnel=zyStackingSlotChannelInfoChannnel, PYSNMP_MODULE_ID=zyxelStacking, zyStackingForceMasterModeState=zyStackingForceMasterModeState, zyxelStackingSlotInfoEntry=zyxelStackingSlotInfoEntry, zyStackingPriority=zyStackingPriority, zyStackingSlotInfoRole=zyStackingSlotInfoRole, zyStackingChannelDown=zyStackingChannelDown, zyStackingSlotInfoFirmwareVersionFlash1=zyStackingSlotInfoFirmwareVersionFlash1, zyStackingSlotChangeIndex=zyStackingSlotChangeIndex, zyStackingSlotInfoStackingStatus=zyStackingSlotInfoStackingStatus, zyStackingSlotInfoUptime=zyStackingSlotInfoUptime, zyStackingBackupTakeover=zyStackingBackupTakeover, zyStackingSlotInfoPriority=zyStackingSlotInfoPriority, zyStackingSlotDetach=zyStackingSlotDetach, zyxelStackingSlotInfoTable=zyxelStackingSlotInfoTable, zyStackingSlotIdFreeze=zyStackingSlotIdFreeze, zyStackingTopology=zyStackingTopology, zyStackingSlotChannelInfoSpeed=zyStackingSlotChannelInfoSpeed, zyStackingSlotChannelInfoNeighbor=zyStackingSlotChannelInfoNeighbor, zyStackingSlotInitFail=zyStackingSlotInitFail, zyStackingTrapInfoMsg=zyStackingTrapInfoMsg)
