#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-AtmNetworkingMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-AtmNetworkingMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
mscAtmIfIndex, mscAtmIfVptIndex, mscAtmIfVcc, mscAtmIfVptVccIndex, mscAtmIfVpc, mscAtmIfVptVcc, mscAtmIfVccIndex, mscAtmIfVpcIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex", "mscAtmIfVptIndex", "mscAtmIfVcc", "mscAtmIfVptVccIndex", "mscAtmIfVpc", "mscAtmIfVptVcc", "mscAtmIfVccIndex", "mscAtmIfVpcIndex")
Integer32, RowPointer, Counter32, DisplayString, Gauge32, Unsigned32, StorageType, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "RowPointer", "Counter32", "DisplayString", "Gauge32", "Unsigned32", "StorageType", "RowStatus")
HexString, NonReplicated, AsciiString, IntegerSequence, AsciiStringIndex, FixedPoint1 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "HexString", "NonReplicated", "AsciiString", "IntegerSequence", "AsciiStringIndex", "FixedPoint1")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, ModuleIdentity, Bits, Counter32, IpAddress, Gauge32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "ModuleIdentity", "Bits", "Counter32", "IpAddress", "Gauge32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmNetworkingMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42))
mscARtg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95))
mscARtgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 1), )
if mibBuilder.loadTexts: mscARtgRowStatusTable.setStatus('mandatory')
mscARtgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"))
if mibBuilder.loadTexts: mscARtgRowStatusEntry.setStatus('mandatory')
mscARtgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgRowStatus.setStatus('mandatory')
mscARtgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgComponentName.setStatus('mandatory')
mscARtgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgStorageType.setStatus('mandatory')
mscARtgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscARtgIndex.setStatus('mandatory')
mscARtgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 10), )
if mibBuilder.loadTexts: mscARtgStatsTable.setStatus('mandatory')
mscARtgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"))
if mibBuilder.loadTexts: mscARtgStatsEntry.setStatus('mandatory')
mscARtgRoutingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgRoutingAttempts.setStatus('mandatory')
mscARtgFailedRoutingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgFailedRoutingAttempts.setStatus('mandatory')
mscARtgDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2))
mscARtgDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 1), )
if mibBuilder.loadTexts: mscARtgDnaRowStatusTable.setStatus('mandatory')
mscARtgDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgDnaIndex"))
if mibBuilder.loadTexts: mscARtgDnaRowStatusEntry.setStatus('mandatory')
mscARtgDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaRowStatus.setStatus('mandatory')
mscARtgDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaComponentName.setStatus('mandatory')
mscARtgDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaStorageType.setStatus('mandatory')
mscARtgDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscARtgDnaIndex.setStatus('mandatory')
mscARtgDnaDestInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2))
mscARtgDnaDestInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 1), )
if mibBuilder.loadTexts: mscARtgDnaDestInfoRowStatusTable.setStatus('mandatory')
mscARtgDnaDestInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgDnaDestInfoIndex"))
if mibBuilder.loadTexts: mscARtgDnaDestInfoRowStatusEntry.setStatus('mandatory')
mscARtgDnaDestInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaDestInfoRowStatus.setStatus('mandatory')
mscARtgDnaDestInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaDestInfoComponentName.setStatus('mandatory')
mscARtgDnaDestInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaDestInfoStorageType.setStatus('mandatory')
mscARtgDnaDestInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50)))
if mibBuilder.loadTexts: mscARtgDnaDestInfoIndex.setStatus('mandatory')
mscARtgDnaDestInfoOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 10), )
if mibBuilder.loadTexts: mscARtgDnaDestInfoOperTable.setStatus('mandatory')
mscARtgDnaDestInfoOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgDnaDestInfoIndex"))
if mibBuilder.loadTexts: mscARtgDnaDestInfoOperEntry.setStatus('mandatory')
mscARtgDnaDestInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("registered", 2), ("default", 3), ("ebr", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaDestInfoType.setStatus('mandatory')
mscARtgDnaDestInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaDestInfoScope.setStatus('mandatory')
mscARtgDnaDestInfoStdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 10, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaDestInfoStdComponentName.setStatus('mandatory')
mscARtgDnaDestInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 2, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgDnaDestInfoReachability.setStatus('mandatory')
mscARtgPnni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3))
mscARtgPnniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 1), )
if mibBuilder.loadTexts: mscARtgPnniRowStatusTable.setStatus('mandatory')
mscARtgPnniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniRowStatusEntry.setStatus('mandatory')
mscARtgPnniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRowStatus.setStatus('mandatory')
mscARtgPnniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniComponentName.setStatus('mandatory')
mscARtgPnniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniStorageType.setStatus('mandatory')
mscARtgPnniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscARtgPnniIndex.setStatus('mandatory')
mscARtgPnniProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 10), )
if mibBuilder.loadTexts: mscARtgPnniProvTable.setStatus('mandatory')
mscARtgPnniProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniProvEntry.setStatus('mandatory')
mscARtgPnniNodeAddressPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniNodeAddressPrefix.setStatus('mandatory')
mscARtgPnniDefaultScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 104))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniDefaultScope.setStatus('mandatory')
mscARtgPnniDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone(hexValue="31")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniDomain.setStatus('mandatory')
mscARtgPnniRestrictTransit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRestrictTransit.setStatus('mandatory')
mscARtgPnniMaxAlternateRoutesOnCrankback = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniMaxAlternateRoutesOnCrankback.setStatus('mandatory')
mscARtgPnniPglParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 11), )
if mibBuilder.loadTexts: mscARtgPnniPglParmsTable.setStatus('mandatory')
mscARtgPnniPglParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniPglParmsEntry.setStatus('mandatory')
mscARtgPnniPglInitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniPglInitTime.setStatus('mandatory')
mscARtgPnniOverrideDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniOverrideDelay.setStatus('mandatory')
mscARtgPnniReElectionInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniReElectionInterval.setStatus('mandatory')
mscARtgPnniHlParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 12), )
if mibBuilder.loadTexts: mscARtgPnniHlParmsTable.setStatus('mandatory')
mscARtgPnniHlParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniHlParmsEntry.setStatus('mandatory')
mscARtgPnniHelloHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 12, 1, 1), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(1, 655350)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniHelloHoldDown.setStatus('mandatory')
mscARtgPnniHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniHelloInterval.setStatus('mandatory')
mscARtgPnniHelloInactivityFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniHelloInactivityFactor.setStatus('mandatory')
mscARtgPnniPtseParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 13), )
if mibBuilder.loadTexts: mscARtgPnniPtseParmsTable.setStatus('mandatory')
mscARtgPnniPtseParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniPtseParmsEntry.setStatus('mandatory')
mscARtgPnniPtseHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 13, 1, 1), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(1, 655350)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniPtseHoldDown.setStatus('mandatory')
mscARtgPnniPtseRefreshInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(300, 65535)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniPtseRefreshInterval.setStatus('mandatory')
mscARtgPnniPtseLifetimeFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(101, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniPtseLifetimeFactor.setStatus('mandatory')
mscARtgPnniRequestRxmtInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRequestRxmtInterval.setStatus('mandatory')
mscARtgPnniPeerDelayedAckInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 13, 1, 5), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(1, 655350)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniPeerDelayedAckInterval.setStatus('mandatory')
mscARtgPnniThreshParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 14), )
if mibBuilder.loadTexts: mscARtgPnniThreshParmsTable.setStatus('mandatory')
mscARtgPnniThreshParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniThreshParmsEntry.setStatus('mandatory')
mscARtgPnniAvcrMt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniAvcrMt.setStatus('mandatory')
mscARtgPnniAvcrPm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniAvcrPm.setStatus('mandatory')
mscARtgPnniOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 15), )
if mibBuilder.loadTexts: mscARtgPnniOperTable.setStatus('mandatory')
mscARtgPnniOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniOperEntry.setStatus('mandatory')
mscARtgPnniTopologyMemoryExhaustion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopologyMemoryExhaustion.setStatus('mandatory')
mscARtgPnniStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 16), )
if mibBuilder.loadTexts: mscARtgPnniStatsTable.setStatus('mandatory')
mscARtgPnniStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"))
if mibBuilder.loadTexts: mscARtgPnniStatsEntry.setStatus('mandatory')
mscARtgPnniSuccessfulRoutingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 16, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniSuccessfulRoutingAttempts.setStatus('mandatory')
mscARtgPnniFailedRoutingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniFailedRoutingAttempts.setStatus('mandatory')
mscARtgPnniAlternateRoutingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniAlternateRoutingAttempts.setStatus('mandatory')
mscARtgPnniOptMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 386), )
if mibBuilder.loadTexts: mscARtgPnniOptMetricTable.setStatus('mandatory')
mscARtgPnniOptMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 386, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniOptMetricIndex"))
if mibBuilder.loadTexts: mscARtgPnniOptMetricEntry.setStatus('mandatory')
mscARtgPnniOptMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 386, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3), ("ubr", 4))))
if mibBuilder.loadTexts: mscARtgPnniOptMetricIndex.setStatus('mandatory')
mscARtgPnniOptMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 386, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cdv", 0), ("maxCtd", 1), ("aw", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniOptMetricValue.setStatus('mandatory')
mscARtgPnniRf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2))
mscARtgPnniRfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 1), )
if mibBuilder.loadTexts: mscARtgPnniRfRowStatusTable.setStatus('mandatory')
mscARtgPnniRfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfIndex"))
if mibBuilder.loadTexts: mscARtgPnniRfRowStatusEntry.setStatus('mandatory')
mscARtgPnniRfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniRfRowStatus.setStatus('mandatory')
mscARtgPnniRfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniRfComponentName.setStatus('mandatory')
mscARtgPnniRfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniRfStorageType.setStatus('mandatory')
mscARtgPnniRfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscARtgPnniRfIndex.setStatus('mandatory')
mscARtgPnniRfCriteriaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10), )
if mibBuilder.loadTexts: mscARtgPnniRfCriteriaTable.setStatus('mandatory')
mscARtgPnniRfCriteriaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfIndex"))
if mibBuilder.loadTexts: mscARtgPnniRfCriteriaEntry.setStatus('mandatory')
mscARtgPnniRfDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfDestinationAddress.setStatus('mandatory')
mscARtgPnniRfMaxRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfMaxRoutes.setStatus('mandatory')
mscARtgPnniRfTxTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfTxTrafficDescType.setStatus('mandatory')
mscARtgPnniRfRxTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 15))).clone(namedValues=NamedValues(("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("sameAsTx", 15))).clone('sameAsTx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfRxTrafficDescType.setStatus('mandatory')
mscARtgPnniRfAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 15))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3), ("derivedFromBBC", 15))).clone('unspecifiedBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfAtmServiceCategory.setStatus('mandatory')
mscARtgPnniRfFwdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfFwdQosClass.setStatus('mandatory')
mscARtgPnniRfBwdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("sameAsFwd", 15))).clone('sameAsFwd')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfBwdQosClass.setStatus('mandatory')
mscARtgPnniRfBearerClassBbc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 16, 31))).clone(namedValues=NamedValues(("a", 1), ("c", 3), ("x", 16), ("derivedFromServiceCategory", 31))).clone('derivedFromServiceCategory')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfBearerClassBbc.setStatus('mandatory')
mscARtgPnniRfTransferCapabilityBbc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 5, 8, 9, 10, 30, 31))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n5", 5), ("n8", 8), ("n9", 9), ("n10", 10), ("notApplicable", 30), ("derivedFromServiceCategory", 31))).clone('derivedFromServiceCategory')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfTransferCapabilityBbc.setStatus('mandatory')
mscARtgPnniRfClippingBbc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfClippingBbc.setStatus('mandatory')
mscARtgPnniRfBestEffort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 15))).clone(namedValues=NamedValues(("indicated", 0), ("notIndicated", 1), ("derivedFromServiceCategory", 15))).clone('derivedFromServiceCategory')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfBestEffort.setStatus('mandatory')
mscARtgPnniRfOptimizationMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cdv", 0), ("maxCtd", 1), ("aw", 2))).clone('aw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfOptimizationMetric.setStatus('mandatory')
mscARtgPnniRfRxTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 388), )
if mibBuilder.loadTexts: mscARtgPnniRfRxTdpTable.setStatus('mandatory')
mscARtgPnniRfRxTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 388, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfRxTdpIndex"))
if mibBuilder.loadTexts: mscARtgPnniRfRxTdpEntry.setStatus('mandatory')
mscARtgPnniRfRxTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 388, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscARtgPnniRfRxTdpIndex.setStatus('mandatory')
mscARtgPnniRfRxTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 388, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfRxTdpValue.setStatus('mandatory')
mscARtgPnniRfTxTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 389), )
if mibBuilder.loadTexts: mscARtgPnniRfTxTdpTable.setStatus('mandatory')
mscARtgPnniRfTxTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 389, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfTxTdpIndex"))
if mibBuilder.loadTexts: mscARtgPnniRfTxTdpEntry.setStatus('mandatory')
mscARtgPnniRfTxTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 389, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscARtgPnniRfTxTdpIndex.setStatus('mandatory')
mscARtgPnniRfTxTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 389, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfTxTdpValue.setStatus('mandatory')
mscARtgPnniRfFqpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 390), )
if mibBuilder.loadTexts: mscARtgPnniRfFqpTable.setStatus('mandatory')
mscARtgPnniRfFqpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 390, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfFqpIndex"))
if mibBuilder.loadTexts: mscARtgPnniRfFqpEntry.setStatus('mandatory')
mscARtgPnniRfFqpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 390, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cdv", 0), ("ctd", 1), ("clr", 2))))
if mibBuilder.loadTexts: mscARtgPnniRfFqpIndex.setStatus('mandatory')
mscARtgPnniRfFqpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 390, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfFqpValue.setStatus('mandatory')
mscARtgPnniRfBqpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 393), )
if mibBuilder.loadTexts: mscARtgPnniRfBqpTable.setStatus('mandatory')
mscARtgPnniRfBqpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 393, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniRfBqpIndex"))
if mibBuilder.loadTexts: mscARtgPnniRfBqpEntry.setStatus('mandatory')
mscARtgPnniRfBqpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 393, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cdv", 0), ("ctd", 1), ("clr", 2))))
if mibBuilder.loadTexts: mscARtgPnniRfBqpIndex.setStatus('mandatory')
mscARtgPnniRfBqpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 2, 393, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniRfBqpValue.setStatus('mandatory')
mscARtgPnniCfgNode = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3))
mscARtgPnniCfgNodeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 1), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeRowStatusTable.setStatus('mandatory')
mscARtgPnniCfgNodeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeRowStatusEntry.setStatus('mandatory')
mscARtgPnniCfgNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeRowStatus.setStatus('mandatory')
mscARtgPnniCfgNodeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeComponentName.setStatus('mandatory')
mscARtgPnniCfgNodeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeStorageType.setStatus('mandatory')
mscARtgPnniCfgNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 104)))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeIndex.setStatus('mandatory')
mscARtgPnniCfgNodeProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 10), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeProvTable.setStatus('mandatory')
mscARtgPnniCfgNodeProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeProvEntry.setStatus('mandatory')
mscARtgPnniCfgNodeNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 10, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNodeId.setStatus('mandatory')
mscARtgPnniCfgNodePeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniCfgNodePeerGroupId.setStatus('mandatory')
mscARtgPnniCfgNodeOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeOperTable.setStatus('mandatory')
mscARtgPnniCfgNodeOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeOperEntry.setStatus('mandatory')
mscARtgPnniCfgNodeNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNodeAddress.setStatus('mandatory')
mscARtgPnniCfgNodeOpNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeOpNodeId.setStatus('mandatory')
mscARtgPnniCfgNodeOpPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeOpPeerGroupId.setStatus('mandatory')
mscARtgPnniCfgNodeNumNeighbors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNumNeighbors.setStatus('mandatory')
mscARtgPnniCfgNodeNumRccs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNumRccs.setStatus('mandatory')
mscARtgPnniCfgNodeCurrentLeadershipPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 205))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeCurrentLeadershipPriority.setStatus('mandatory')
mscARtgPnniCfgNodePglElectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("starting", 0), ("awaiting", 1), ("awaitingFull", 2), ("initialDelay", 3), ("calculating", 4), ("operNotPgl", 5), ("operPgl", 6), ("awaitUnanimity", 7), ("hungElection", 8), ("awaitReElection", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodePglElectionState.setStatus('mandatory')
mscARtgPnniCfgNodeSAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2))
mscARtgPnniCfgNodeSAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrRowStatusTable.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrPrefixLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrReachabilityIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrRowStatusEntry.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrRowStatus.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrComponentName.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrStorageType.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1, 1, 10), HexString().subtype(subtypeSpec=ValueSizeConstraint(19, 19)).setFixedLength(19))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrAddressIndex.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrPrefixLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 152)))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrPrefixLengthIndex.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrReachabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrReachabilityIndex.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 10), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrProvTable.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrPrefixLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrReachabilityIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrProvEntry.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrSuppress.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 11), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrOperTable.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrPrefixLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeSAddrReachabilityIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrOperEntry.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("advertising", 0), ("suppressing", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrState.setStatus('mandatory')
mscARtgPnniCfgNodeSAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeSAddrScope.setStatus('mandatory')
mscARtgPnniCfgNodeNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3))
mscARtgPnniCfgNodeNbrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 1), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrRowStatusTable.setStatus('mandatory')
mscARtgPnniCfgNodeNbrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeNbrIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrRowStatusEntry.setStatus('mandatory')
mscARtgPnniCfgNodeNbrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrRowStatus.setStatus('mandatory')
mscARtgPnniCfgNodeNbrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrComponentName.setStatus('mandatory')
mscARtgPnniCfgNodeNbrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrStorageType.setStatus('mandatory')
mscARtgPnniCfgNodeNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 1, 1, 10), HexString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrIndex.setStatus('mandatory')
mscARtgPnniCfgNodeNbrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 10), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrOperTable.setStatus('mandatory')
mscARtgPnniCfgNodeNbrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeNbrIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrOperEntry.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("npDown", 0), ("negotiating", 1), ("exchanging", 2), ("loading", 3), ("full", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPeerState.setStatus('mandatory')
mscARtgPnniCfgNodeNbrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrStatsTable.setStatus('mandatory')
mscARtgPnniCfgNodeNbrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeNbrIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrStatsEntry.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtspRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtspTx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtseRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtseRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtseTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtseTx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtseReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtseReqRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtseReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtseReqTx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtseAcksRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtseAcksRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrPtseAcksTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrPtseAcksTx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrDbSummariesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrDbSummariesRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrDbSummariesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrDbSummariesTx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrBadPtspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrBadPtspRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrBadPtseRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrBadPtseRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrBadPtseReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrBadPtseReqRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrBadPtseAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrBadPtseAckRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrBadDbSummariesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrBadDbSummariesRx.setStatus('mandatory')
mscARtgPnniCfgNodeNbrRccListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 385), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrRccListTable.setStatus('mandatory')
mscARtgPnniCfgNodeNbrRccListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 385, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeNbrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeNbrRccListValue"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrRccListEntry.setStatus('mandatory')
mscARtgPnniCfgNodeNbrRccListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 3, 385, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeNbrRccListValue.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4))
mscARtgPnniCfgNodeDefSAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 1), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrRowStatusTable.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeDefSAddrIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrRowStatusEntry.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrRowStatus.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrComponentName.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrStorageType.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrIndex.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrDefAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 10), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrDefAddrTable.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrDefAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeDefSAddrIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrDefAddrEntry.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrAddress.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 11), )
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrOperTable.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniCfgNodeDefSAddrIndex"))
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrOperEntry.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("advertising", 0), ("suppressing", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrState.setStatus('mandatory')
mscARtgPnniCfgNodeDefSAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 3, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniCfgNodeDefSAddrScope.setStatus('mandatory')
mscARtgPnniTop = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4))
mscARtgPnniTopRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 1), )
if mibBuilder.loadTexts: mscARtgPnniTopRowStatusTable.setStatus('mandatory')
mscARtgPnniTopRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopIndex"))
if mibBuilder.loadTexts: mscARtgPnniTopRowStatusEntry.setStatus('mandatory')
mscARtgPnniTopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopRowStatus.setStatus('mandatory')
mscARtgPnniTopComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopComponentName.setStatus('mandatory')
mscARtgPnniTopStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopStorageType.setStatus('mandatory')
mscARtgPnniTopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 104)))
if mibBuilder.loadTexts: mscARtgPnniTopIndex.setStatus('mandatory')
mscARtgPnniTopOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 10), )
if mibBuilder.loadTexts: mscARtgPnniTopOperTable.setStatus('mandatory')
mscARtgPnniTopOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopIndex"))
if mibBuilder.loadTexts: mscARtgPnniTopOperEntry.setStatus('mandatory')
mscARtgPnniTopPtsesInDatabase = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 10, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopPtsesInDatabase.setStatus('mandatory')
mscARtgPnniTopPglNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 10, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopPglNodeId.setStatus('mandatory')
mscARtgPnniTopActiveParentNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopActiveParentNodeId.setStatus('mandatory')
mscARtgPnniTopPreferredPglNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 10, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopPreferredPglNodeId.setStatus('mandatory')
mscARtgPnniTopNode = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2))
mscARtgPnniTopNodeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 1), )
if mibBuilder.loadTexts: mscARtgPnniTopNodeRowStatusTable.setStatus('mandatory')
mscARtgPnniTopNodeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeIndex"))
if mibBuilder.loadTexts: mscARtgPnniTopNodeRowStatusEntry.setStatus('mandatory')
mscARtgPnniTopNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeRowStatus.setStatus('mandatory')
mscARtgPnniTopNodeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeComponentName.setStatus('mandatory')
mscARtgPnniTopNodeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeStorageType.setStatus('mandatory')
mscARtgPnniTopNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 1, 1, 10), HexString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22))
if mibBuilder.loadTexts: mscARtgPnniTopNodeIndex.setStatus('mandatory')
mscARtgPnniTopNodeAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2))
mscARtgPnniTopNodeAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1), )
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrRowStatusTable.setStatus('mandatory')
mscARtgPnniTopNodeAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeAddrPrefixLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeAddrReachabilityIndex"))
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrRowStatusEntry.setStatus('mandatory')
mscARtgPnniTopNodeAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrRowStatus.setStatus('mandatory')
mscARtgPnniTopNodeAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrComponentName.setStatus('mandatory')
mscARtgPnniTopNodeAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrStorageType.setStatus('mandatory')
mscARtgPnniTopNodeAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1, 1, 10), HexString().subtype(subtypeSpec=ValueSizeConstraint(19, 19)).setFixedLength(19))
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrAddressIndex.setStatus('mandatory')
mscARtgPnniTopNodeAddrPrefixLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 152)))
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrPrefixLengthIndex.setStatus('mandatory')
mscARtgPnniTopNodeAddrReachabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))))
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrReachabilityIndex.setStatus('mandatory')
mscARtgPnniTopNodeAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 10), )
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrOperTable.setStatus('mandatory')
mscARtgPnniTopNodeAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeAddrPrefixLengthIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeAddrReachabilityIndex"))
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrOperEntry.setStatus('mandatory')
mscARtgPnniTopNodeAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeAddrScope.setStatus('mandatory')
mscARtgPnniTopNodeLink = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3))
mscARtgPnniTopNodeLinkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 1), )
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkRowStatusTable.setStatus('mandatory')
mscARtgPnniTopNodeLinkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeLinkIndex"))
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkRowStatusEntry.setStatus('mandatory')
mscARtgPnniTopNodeLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkRowStatus.setStatus('mandatory')
mscARtgPnniTopNodeLinkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkComponentName.setStatus('mandatory')
mscARtgPnniTopNodeLinkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkStorageType.setStatus('mandatory')
mscARtgPnniTopNodeLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435455)))
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkIndex.setStatus('mandatory')
mscARtgPnniTopNodeLinkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 10), )
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkOperTable.setStatus('mandatory')
mscARtgPnniTopNodeLinkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniTopNodeLinkIndex"))
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkOperEntry.setStatus('mandatory')
mscARtgPnniTopNodeLinkRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkRemoteNodeId.setStatus('mandatory')
mscARtgPnniTopNodeLinkRemotePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 4, 2, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniTopNodeLinkRemotePortId.setStatus('mandatory')
mscARtgPnniPort = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5))
mscARtgPnniPortRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 1), )
if mibBuilder.loadTexts: mscARtgPnniPortRowStatusTable.setStatus('mandatory')
mscARtgPnniPortRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniPortIndex"))
if mibBuilder.loadTexts: mscARtgPnniPortRowStatusEntry.setStatus('mandatory')
mscARtgPnniPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniPortRowStatus.setStatus('mandatory')
mscARtgPnniPortComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniPortComponentName.setStatus('mandatory')
mscARtgPnniPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniPortStorageType.setStatus('mandatory')
mscARtgPnniPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435455)))
if mibBuilder.loadTexts: mscARtgPnniPortIndex.setStatus('mandatory')
mscARtgPnniPortOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 10), )
if mibBuilder.loadTexts: mscARtgPnniPortOperTable.setStatus('mandatory')
mscARtgPnniPortOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscARtgPnniPortIndex"))
if mibBuilder.loadTexts: mscARtgPnniPortOperEntry.setStatus('mandatory')
mscARtgPnniPortStdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 95, 3, 5, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscARtgPnniPortStdComponentName.setStatus('mandatory')
mscAtmCR = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113))
mscAtmCRRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 1), )
if mibBuilder.loadTexts: mscAtmCRRowStatusTable.setStatus('mandatory')
mscAtmCRRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRIndex"))
if mibBuilder.loadTexts: mscAtmCRRowStatusEntry.setStatus('mandatory')
mscAtmCRRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmCRRowStatus.setStatus('mandatory')
mscAtmCRComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRComponentName.setStatus('mandatory')
mscAtmCRStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRStorageType.setStatus('mandatory')
mscAtmCRIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmCRIndex.setStatus('mandatory')
mscAtmCRProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 10), )
if mibBuilder.loadTexts: mscAtmCRProvTable.setStatus('mandatory')
mscAtmCRProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRIndex"))
if mibBuilder.loadTexts: mscAtmCRProvEntry.setStatus('mandatory')
mscAtmCRNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(26, 26)).setFixedLength(26)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmCRNodeAddress.setStatus('obsolete')
mscAtmCRStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 11), )
if mibBuilder.loadTexts: mscAtmCRStatsTable.setStatus('obsolete')
mscAtmCRStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRIndex"))
if mibBuilder.loadTexts: mscAtmCRStatsEntry.setStatus('obsolete')
mscAtmCRCallsRouted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRCallsRouted.setStatus('obsolete')
mscAtmCRCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRCallsFailed.setStatus('obsolete')
mscAtmCRDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2))
mscAtmCRDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 1), )
if mibBuilder.loadTexts: mscAtmCRDnaRowStatusTable.setStatus('mandatory')
mscAtmCRDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRDnaIndex"))
if mibBuilder.loadTexts: mscAtmCRDnaRowStatusEntry.setStatus('mandatory')
mscAtmCRDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRDnaRowStatus.setStatus('mandatory')
mscAtmCRDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRDnaComponentName.setStatus('mandatory')
mscAtmCRDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRDnaStorageType.setStatus('mandatory')
mscAtmCRDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmCRDnaIndex.setStatus('mandatory')
mscAtmCRDnaDestinationNameTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 289), )
if mibBuilder.loadTexts: mscAtmCRDnaDestinationNameTable.setStatus('obsolete')
mscAtmCRDnaDestinationNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 289, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmCRDnaDestinationNameValue"))
if mibBuilder.loadTexts: mscAtmCRDnaDestinationNameEntry.setStatus('obsolete')
mscAtmCRDnaDestinationNameValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 113, 2, 289, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmCRDnaDestinationNameValue.setStatus('obsolete')
mscAtmIfVpcSrc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6))
mscAtmIfVpcSrcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 1), )
if mibBuilder.loadTexts: mscAtmIfVpcSrcRowStatusTable.setStatus('mandatory')
mscAtmIfVpcSrcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcSrcRowStatusEntry.setStatus('mandatory')
mscAtmIfVpcSrcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcSrcRowStatus.setStatus('mandatory')
mscAtmIfVpcSrcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcSrcComponentName.setStatus('mandatory')
mscAtmIfVpcSrcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcSrcStorageType.setStatus('mandatory')
mscAtmIfVpcSrcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVpcSrcIndex.setStatus('mandatory')
mscAtmIfVpcSrcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 10), )
if mibBuilder.loadTexts: mscAtmIfVpcSrcProvTable.setStatus('mandatory')
mscAtmIfVpcSrcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcSrcProvEntry.setStatus('mandatory')
mscAtmIfVpcSrcCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcSrcCallingAddress.setStatus('mandatory')
mscAtmIfVpcSrcCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 10, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcSrcCalledAddress.setStatus('mandatory')
mscAtmIfVpcSrcCalledVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcSrcCalledVpi.setStatus('mandatory')
mscAtmIfVpcSrcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 11), )
if mibBuilder.loadTexts: mscAtmIfVpcSrcOperTable.setStatus('mandatory')
mscAtmIfVpcSrcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcSrcOperEntry.setStatus('mandatory')
mscAtmIfVpcSrcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcSrcState.setStatus('mandatory')
mscAtmIfVpcSrcRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcSrcRetryCount.setStatus('mandatory')
mscAtmIfVpcSrcLastFailureCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcSrcLastFailureCauseCode.setStatus('mandatory')
mscAtmIfVpcSrcLastFailureDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 6, 11, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcSrcLastFailureDiagCode.setStatus('mandatory')
mscAtmIfVpcRp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7))
mscAtmIfVpcRpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 1), )
if mibBuilder.loadTexts: mscAtmIfVpcRpRowStatusTable.setStatus('mandatory')
mscAtmIfVpcRpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcRpIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcRpRowStatusEntry.setStatus('mandatory')
mscAtmIfVpcRpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcRpRowStatus.setStatus('mandatory')
mscAtmIfVpcRpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcRpComponentName.setStatus('mandatory')
mscAtmIfVpcRpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcRpStorageType.setStatus('mandatory')
mscAtmIfVpcRpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVpcRpIndex.setStatus('mandatory')
mscAtmIfVpcRpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 10), )
if mibBuilder.loadTexts: mscAtmIfVpcRpOperTable.setStatus('mandatory')
mscAtmIfVpcRpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcRpIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcRpOperEntry.setStatus('mandatory')
mscAtmIfVpcRpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcRpNextHop.setStatus('obsolete')
mscAtmIfVpcRpNextHopsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 430), )
if mibBuilder.loadTexts: mscAtmIfVpcRpNextHopsTable.setStatus('mandatory')
mscAtmIfVpcRpNextHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 430, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcRpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcRpNextHopsValue"))
if mibBuilder.loadTexts: mscAtmIfVpcRpNextHopsEntry.setStatus('mandatory')
mscAtmIfVpcRpNextHopsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 7, 430, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcRpNextHopsValue.setStatus('mandatory')
mscAtmIfVpcDst = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8))
mscAtmIfVpcDstRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 1), )
if mibBuilder.loadTexts: mscAtmIfVpcDstRowStatusTable.setStatus('mandatory')
mscAtmIfVpcDstRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcDstIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcDstRowStatusEntry.setStatus('mandatory')
mscAtmIfVpcDstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcDstRowStatus.setStatus('mandatory')
mscAtmIfVpcDstComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcDstComponentName.setStatus('mandatory')
mscAtmIfVpcDstStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcDstStorageType.setStatus('mandatory')
mscAtmIfVpcDstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVpcDstIndex.setStatus('mandatory')
mscAtmIfVpcDstOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 10), )
if mibBuilder.loadTexts: mscAtmIfVpcDstOperTable.setStatus('mandatory')
mscAtmIfVpcDstOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVpcDstIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcDstOperEntry.setStatus('mandatory')
mscAtmIfVpcDstCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcDstCalledAddress.setStatus('mandatory')
mscAtmIfVpcDstCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(7, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcDstCallingAddress.setStatus('mandatory')
mscAtmIfVpcDstCallingVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 8, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcDstCallingVpi.setStatus('mandatory')
mscAtmIfVccSrc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8))
mscAtmIfVccSrcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 1), )
if mibBuilder.loadTexts: mscAtmIfVccSrcRowStatusTable.setStatus('mandatory')
mscAtmIfVccSrcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVccSrcRowStatusEntry.setStatus('mandatory')
mscAtmIfVccSrcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccSrcRowStatus.setStatus('mandatory')
mscAtmIfVccSrcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccSrcComponentName.setStatus('mandatory')
mscAtmIfVccSrcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccSrcStorageType.setStatus('mandatory')
mscAtmIfVccSrcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVccSrcIndex.setStatus('mandatory')
mscAtmIfVccSrcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 10), )
if mibBuilder.loadTexts: mscAtmIfVccSrcProvTable.setStatus('mandatory')
mscAtmIfVccSrcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVccSrcProvEntry.setStatus('mandatory')
mscAtmIfVccSrcRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccSrcRemoteAddress.setStatus('obsolete')
mscAtmIfVccSrcRemoteVpiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 10, 1, 2), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccSrcRemoteVpiVci.setStatus('obsolete')
mscAtmIfVccSrcCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccSrcCallingAddress.setStatus('mandatory')
mscAtmIfVccSrcCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 10, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccSrcCalledAddress.setStatus('mandatory')
mscAtmIfVccSrcCalledVpiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 10, 1, 5), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccSrcCalledVpiVci.setStatus('mandatory')
mscAtmIfVccSrcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 11), )
if mibBuilder.loadTexts: mscAtmIfVccSrcOperTable.setStatus('mandatory')
mscAtmIfVccSrcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVccSrcOperEntry.setStatus('mandatory')
mscAtmIfVccSrcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccSrcState.setStatus('mandatory')
mscAtmIfVccSrcRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccSrcRetryCount.setStatus('mandatory')
mscAtmIfVccSrcLastFailureCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccSrcLastFailureCauseCode.setStatus('mandatory')
mscAtmIfVccSrcLastFailureDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 8, 11, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccSrcLastFailureDiagCode.setStatus('mandatory')
mscAtmIfVccEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9))
mscAtmIfVccEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 1), )
if mibBuilder.loadTexts: mscAtmIfVccEpRowStatusTable.setStatus('mandatory')
mscAtmIfVccEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccEpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccEpRowStatusEntry.setStatus('mandatory')
mscAtmIfVccEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccEpRowStatus.setStatus('mandatory')
mscAtmIfVccEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccEpComponentName.setStatus('mandatory')
mscAtmIfVccEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccEpStorageType.setStatus('mandatory')
mscAtmIfVccEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVccEpIndex.setStatus('mandatory')
mscAtmIfVccEpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 10), )
if mibBuilder.loadTexts: mscAtmIfVccEpOperTable.setStatus('mandatory')
mscAtmIfVccEpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccEpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccEpOperEntry.setStatus('mandatory')
mscAtmIfVccEpApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 9, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccEpApplicationName.setStatus('mandatory')
mscAtmIfVccRp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10))
mscAtmIfVccRpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 1), )
if mibBuilder.loadTexts: mscAtmIfVccRpRowStatusTable.setStatus('mandatory')
mscAtmIfVccRpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccRpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccRpRowStatusEntry.setStatus('mandatory')
mscAtmIfVccRpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccRpRowStatus.setStatus('mandatory')
mscAtmIfVccRpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccRpComponentName.setStatus('mandatory')
mscAtmIfVccRpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccRpStorageType.setStatus('mandatory')
mscAtmIfVccRpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVccRpIndex.setStatus('mandatory')
mscAtmIfVccRpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 10), )
if mibBuilder.loadTexts: mscAtmIfVccRpOperTable.setStatus('mandatory')
mscAtmIfVccRpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccRpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccRpOperEntry.setStatus('mandatory')
mscAtmIfVccRpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccRpNextHop.setStatus('obsolete')
mscAtmIfVccRpNextHopsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 430), )
if mibBuilder.loadTexts: mscAtmIfVccRpNextHopsTable.setStatus('mandatory')
mscAtmIfVccRpNextHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 430, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccRpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccRpNextHopsValue"))
if mibBuilder.loadTexts: mscAtmIfVccRpNextHopsEntry.setStatus('mandatory')
mscAtmIfVccRpNextHopsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 10, 430, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccRpNextHopsValue.setStatus('mandatory')
mscAtmIfVccDst = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11))
mscAtmIfVccDstRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 1), )
if mibBuilder.loadTexts: mscAtmIfVccDstRowStatusTable.setStatus('mandatory')
mscAtmIfVccDstRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccDstIndex"))
if mibBuilder.loadTexts: mscAtmIfVccDstRowStatusEntry.setStatus('mandatory')
mscAtmIfVccDstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccDstRowStatus.setStatus('mandatory')
mscAtmIfVccDstComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccDstComponentName.setStatus('mandatory')
mscAtmIfVccDstStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccDstStorageType.setStatus('mandatory')
mscAtmIfVccDstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVccDstIndex.setStatus('mandatory')
mscAtmIfVccDstOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 10), )
if mibBuilder.loadTexts: mscAtmIfVccDstOperTable.setStatus('mandatory')
mscAtmIfVccDstOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVccDstIndex"))
if mibBuilder.loadTexts: mscAtmIfVccDstOperEntry.setStatus('mandatory')
mscAtmIfVccDstCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccDstCalledAddress.setStatus('mandatory')
mscAtmIfVccDstCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 10, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(7, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccDstCallingAddress.setStatus('mandatory')
mscAtmIfVccDstCallingVpiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 11, 10, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(7, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccDstCallingVpiVci.setStatus('mandatory')
mscAtmIfVptVccSrc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8))
mscAtmIfVptVccSrcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 1), )
if mibBuilder.loadTexts: mscAtmIfVptVccSrcRowStatusTable.setStatus('mandatory')
mscAtmIfVptVccSrcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccSrcRowStatusEntry.setStatus('mandatory')
mscAtmIfVptVccSrcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcRowStatus.setStatus('mandatory')
mscAtmIfVptVccSrcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcComponentName.setStatus('mandatory')
mscAtmIfVptVccSrcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcStorageType.setStatus('mandatory')
mscAtmIfVptVccSrcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptVccSrcIndex.setStatus('mandatory')
mscAtmIfVptVccSrcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 10), )
if mibBuilder.loadTexts: mscAtmIfVptVccSrcProvTable.setStatus('mandatory')
mscAtmIfVptVccSrcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccSrcProvEntry.setStatus('mandatory')
mscAtmIfVptVccSrcRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcRemoteAddress.setStatus('obsolete')
mscAtmIfVptVccSrcRemoteVpiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 10, 1, 2), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcRemoteVpiVci.setStatus('obsolete')
mscAtmIfVptVccSrcCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcCallingAddress.setStatus('mandatory')
mscAtmIfVptVccSrcCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 10, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcCalledAddress.setStatus('mandatory')
mscAtmIfVptVccSrcCalledVpiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 10, 1, 5), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcCalledVpiVci.setStatus('mandatory')
mscAtmIfVptVccSrcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 11), )
if mibBuilder.loadTexts: mscAtmIfVptVccSrcOperTable.setStatus('mandatory')
mscAtmIfVptVccSrcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccSrcIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccSrcOperEntry.setStatus('mandatory')
mscAtmIfVptVccSrcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcState.setStatus('mandatory')
mscAtmIfVptVccSrcRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcRetryCount.setStatus('mandatory')
mscAtmIfVptVccSrcLastFailureCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcLastFailureCauseCode.setStatus('mandatory')
mscAtmIfVptVccSrcLastFailureDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 8, 11, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccSrcLastFailureDiagCode.setStatus('mandatory')
mscAtmIfVptVccEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9))
mscAtmIfVptVccEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 1), )
if mibBuilder.loadTexts: mscAtmIfVptVccEpRowStatusTable.setStatus('mandatory')
mscAtmIfVptVccEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccEpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccEpRowStatusEntry.setStatus('mandatory')
mscAtmIfVptVccEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccEpRowStatus.setStatus('mandatory')
mscAtmIfVptVccEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccEpComponentName.setStatus('mandatory')
mscAtmIfVptVccEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccEpStorageType.setStatus('mandatory')
mscAtmIfVptVccEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptVccEpIndex.setStatus('mandatory')
mscAtmIfVptVccEpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 10), )
if mibBuilder.loadTexts: mscAtmIfVptVccEpOperTable.setStatus('mandatory')
mscAtmIfVptVccEpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccEpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccEpOperEntry.setStatus('mandatory')
mscAtmIfVptVccEpApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 9, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccEpApplicationName.setStatus('mandatory')
mscAtmIfVptVccRp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10))
mscAtmIfVptVccRpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 1), )
if mibBuilder.loadTexts: mscAtmIfVptVccRpRowStatusTable.setStatus('mandatory')
mscAtmIfVptVccRpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccRpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccRpRowStatusEntry.setStatus('mandatory')
mscAtmIfVptVccRpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccRpRowStatus.setStatus('mandatory')
mscAtmIfVptVccRpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccRpComponentName.setStatus('mandatory')
mscAtmIfVptVccRpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccRpStorageType.setStatus('mandatory')
mscAtmIfVptVccRpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptVccRpIndex.setStatus('mandatory')
mscAtmIfVptVccRpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 10), )
if mibBuilder.loadTexts: mscAtmIfVptVccRpOperTable.setStatus('mandatory')
mscAtmIfVptVccRpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccRpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccRpOperEntry.setStatus('mandatory')
mscAtmIfVptVccRpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccRpNextHop.setStatus('obsolete')
mscAtmIfVptVccRpNextHopsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 430), )
if mibBuilder.loadTexts: mscAtmIfVptVccRpNextHopsTable.setStatus('mandatory')
mscAtmIfVptVccRpNextHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 430, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccRpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccRpNextHopsValue"))
if mibBuilder.loadTexts: mscAtmIfVptVccRpNextHopsEntry.setStatus('mandatory')
mscAtmIfVptVccRpNextHopsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 10, 430, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccRpNextHopsValue.setStatus('mandatory')
mscAtmIfVptVccDst = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11))
mscAtmIfVptVccDstRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 1), )
if mibBuilder.loadTexts: mscAtmIfVptVccDstRowStatusTable.setStatus('mandatory')
mscAtmIfVptVccDstRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccDstIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccDstRowStatusEntry.setStatus('mandatory')
mscAtmIfVptVccDstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccDstRowStatus.setStatus('mandatory')
mscAtmIfVptVccDstComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccDstComponentName.setStatus('mandatory')
mscAtmIfVptVccDstStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccDstStorageType.setStatus('mandatory')
mscAtmIfVptVccDstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptVccDstIndex.setStatus('mandatory')
mscAtmIfVptVccDstOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 10), )
if mibBuilder.loadTexts: mscAtmIfVptVccDstOperTable.setStatus('mandatory')
mscAtmIfVptVccDstOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", "mscAtmIfVptVccDstIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccDstOperEntry.setStatus('mandatory')
mscAtmIfVptVccDstCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccDstCalledAddress.setStatus('mandatory')
mscAtmIfVptVccDstCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 10, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(7, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccDstCallingAddress.setStatus('mandatory')
mscAtmIfVptVccDstCallingVpiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 11, 10, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(7, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccDstCallingVpiVci.setStatus('mandatory')
atmNetworkingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 1))
atmNetworkingGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 1, 1))
atmNetworkingGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 1, 1, 3))
atmNetworkingGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 1, 1, 3, 2))
atmNetworkingCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 3))
atmNetworkingCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 3, 1))
atmNetworkingCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 3, 1, 3))
atmNetworkingCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 42, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", mscAtmIfVpcSrcRowStatusTable=mscAtmIfVpcSrcRowStatusTable, mscAtmIfVccSrcStorageType=mscAtmIfVccSrcStorageType, mscAtmIfVptVccEpRowStatusEntry=mscAtmIfVptVccEpRowStatusEntry, mscAtmCRStatsEntry=mscAtmCRStatsEntry, mscARtgPnniRfTxTdpValue=mscARtgPnniRfTxTdpValue, mscARtgPnniCfgNodeNbrPtseAcksRx=mscARtgPnniCfgNodeNbrPtseAcksRx, mscARtgPnniTopNodeRowStatusEntry=mscARtgPnniTopNodeRowStatusEntry, mscAtmIfVpcRpIndex=mscAtmIfVpcRpIndex, mscAtmCRDnaStorageType=mscAtmCRDnaStorageType, mscARtgDna=mscARtgDna, mscARtgPnniRfFqpIndex=mscARtgPnniRfFqpIndex, mscAtmIfVpcDstRowStatusEntry=mscAtmIfVpcDstRowStatusEntry, mscARtgPnniRowStatus=mscARtgPnniRowStatus, mscARtgPnniRfTxTdpIndex=mscARtgPnniRfTxTdpIndex, mscAtmIfVptVccEpStorageType=mscAtmIfVptVccEpStorageType, mscAtmIfVptVccRpNextHopsEntry=mscAtmIfVptVccRpNextHopsEntry, mscARtgPnniTopNodeRowStatusTable=mscARtgPnniTopNodeRowStatusTable, mscARtgPnniRf=mscARtgPnniRf, mscARtgPnniCfgNodeComponentName=mscARtgPnniCfgNodeComponentName, mscAtmCRDnaDestinationNameTable=mscAtmCRDnaDestinationNameTable, mscARtgPnniTopActiveParentNodeId=mscARtgPnniTopActiveParentNodeId, mscARtgPnniCfgNodeSAddrRowStatusEntry=mscARtgPnniCfgNodeSAddrRowStatusEntry, mscARtgPnniRfTxTdpEntry=mscARtgPnniRfTxTdpEntry, mscAtmIfVpcDstComponentName=mscAtmIfVpcDstComponentName, mscARtgPnniReElectionInterval=mscARtgPnniReElectionInterval, mscARtgPnniCfgNodeSAddrStorageType=mscARtgPnniCfgNodeSAddrStorageType, mscARtgPnniRfBearerClassBbc=mscARtgPnniRfBearerClassBbc, mscARtgPnniTopNodeIndex=mscARtgPnniTopNodeIndex, mscARtgPnniOptMetricValue=mscARtgPnniOptMetricValue, mscAtmIfVccSrcProvTable=mscAtmIfVccSrcProvTable, mscARtgPnniRequestRxmtInterval=mscARtgPnniRequestRxmtInterval, mscAtmIfVccDstCallingVpiVci=mscAtmIfVccDstCallingVpiVci, mscARtgPnniRfRxTrafficDescType=mscARtgPnniRfRxTrafficDescType, mscARtgRowStatus=mscARtgRowStatus, mscAtmIfVpcSrcLastFailureDiagCode=mscAtmIfVpcSrcLastFailureDiagCode, mscAtmIfVccEpRowStatusTable=mscAtmIfVccEpRowStatusTable, mscARtgDnaDestInfoScope=mscARtgDnaDestInfoScope, mscAtmCRIndex=mscAtmCRIndex, mscAtmIfVptVccSrcCalledAddress=mscAtmIfVptVccSrcCalledAddress, mscAtmCRDnaDestinationNameEntry=mscAtmCRDnaDestinationNameEntry, mscARtgPnniRfBqpValue=mscARtgPnniRfBqpValue, mscAtmIfVptVccDstComponentName=mscAtmIfVptVccDstComponentName, mscARtgPnniTopNodeAddrScope=mscARtgPnniTopNodeAddrScope, mscAtmIfVptVccRpNextHopsTable=mscAtmIfVptVccRpNextHopsTable, mscARtgPnniCfgNodeNbrPtseTx=mscARtgPnniCfgNodeNbrPtseTx, mscAtmIfVpcDstStorageType=mscAtmIfVpcDstStorageType, mscAtmIfVpcDstRowStatusTable=mscAtmIfVpcDstRowStatusTable, mscARtgPnniTopNodeAddrAddressIndex=mscARtgPnniTopNodeAddrAddressIndex, mscAtmIfVptVccSrcRowStatus=mscAtmIfVptVccSrcRowStatus, mscAtmIfVccRpNextHopsEntry=mscAtmIfVccRpNextHopsEntry, mscAtmIfVccDstRowStatus=mscAtmIfVccDstRowStatus, mscAtmIfVccEpRowStatus=mscAtmIfVccEpRowStatus, mscARtgPnniCfgNodeDefSAddr=mscARtgPnniCfgNodeDefSAddr, mscAtmIfVptVccRpNextHopsValue=mscAtmIfVptVccRpNextHopsValue, mscARtgPnniTopPglNodeId=mscARtgPnniTopPglNodeId, mscARtgPnniCfgNodeNbrOperTable=mscARtgPnniCfgNodeNbrOperTable, mscAtmIfVccRpNextHopsTable=mscAtmIfVccRpNextHopsTable, mscARtgPnniCfgNodeNbrRccListTable=mscARtgPnniCfgNodeNbrRccListTable, mscARtgPnniCfgNodeDefSAddrComponentName=mscARtgPnniCfgNodeDefSAddrComponentName, mscARtgPnniTopNodeAddrOperTable=mscARtgPnniTopNodeAddrOperTable, mscARtgPnniTopNodeLinkRemotePortId=mscARtgPnniTopNodeLinkRemotePortId, mscARtgPnniRestrictTransit=mscARtgPnniRestrictTransit, mscARtgPnniTopNodeLink=mscARtgPnniTopNodeLink, mscARtgPnniCfgNodeDefSAddrDefAddrEntry=mscARtgPnniCfgNodeDefSAddrDefAddrEntry, mscARtgPnniCfgNodeSAddrProvTable=mscARtgPnniCfgNodeSAddrProvTable, mscAtmIfVpcSrcState=mscAtmIfVpcSrcState, mscARtgPnniProvTable=mscARtgPnniProvTable, mscARtgPnniPtseLifetimeFactor=mscARtgPnniPtseLifetimeFactor, mscARtgPnniRfTxTdpTable=mscARtgPnniRfTxTdpTable, mscAtmCRNodeAddress=mscAtmCRNodeAddress, mscARtgPnniDefaultScope=mscARtgPnniDefaultScope, mscARtgDnaDestInfo=mscARtgDnaDestInfo, mscARtgPnniThreshParmsEntry=mscARtgPnniThreshParmsEntry, mscAtmIfVpcSrcProvEntry=mscAtmIfVpcSrcProvEntry, mscAtmIfVptVccSrcRowStatusEntry=mscAtmIfVptVccSrcRowStatusEntry, mscAtmIfVpcSrcCallingAddress=mscAtmIfVpcSrcCallingAddress, atmNetworkingCapabilitiesCA02A=atmNetworkingCapabilitiesCA02A, mscARtgDnaDestInfoRowStatusEntry=mscARtgDnaDestInfoRowStatusEntry, mscAtmIfVptVccSrcOperTable=mscAtmIfVptVccSrcOperTable, mscARtgDnaStorageType=mscARtgDnaStorageType, mscARtgPnniProvEntry=mscARtgPnniProvEntry, atmNetworkingGroupCA=atmNetworkingGroupCA, mscARtgPnniCfgNodeSAddrComponentName=mscARtgPnniCfgNodeSAddrComponentName, mscAtmIfVptVccDstOperTable=mscAtmIfVptVccDstOperTable, mscAtmIfVptVccRpOperEntry=mscAtmIfVptVccRpOperEntry, mscAtmIfVptVccEpIndex=mscAtmIfVptVccEpIndex, mscARtgDnaRowStatusTable=mscARtgDnaRowStatusTable, mscARtgPnniCfgNodeStorageType=mscARtgPnniCfgNodeStorageType, mscAtmIfVccRpOperTable=mscAtmIfVccRpOperTable, mscARtgPnniCfgNodeNbrPtseAcksTx=mscARtgPnniCfgNodeNbrPtseAcksTx, mscARtgPnniRfFqpValue=mscARtgPnniRfFqpValue, mscARtgPnniCfgNodeDefSAddrRowStatus=mscARtgPnniCfgNodeDefSAddrRowStatus, mscARtgPnniTopPreferredPglNodeId=mscARtgPnniTopPreferredPglNodeId, mscARtgPnniCfgNodeNbrPtspRx=mscARtgPnniCfgNodeNbrPtspRx, mscARtgPnniCfgNodeProvTable=mscARtgPnniCfgNodeProvTable, mscARtgStatsEntry=mscARtgStatsEntry, mscARtgPnniComponentName=mscARtgPnniComponentName, mscARtgPnniPtseParmsEntry=mscARtgPnniPtseParmsEntry, mscARtgPnniCfgNodeOperEntry=mscARtgPnniCfgNodeOperEntry, mscAtmCRDnaRowStatus=mscAtmCRDnaRowStatus, mscAtmIfVccRpRowStatusEntry=mscAtmIfVccRpRowStatusEntry, mscAtmIfVptVccEpRowStatus=mscAtmIfVptVccEpRowStatus, mscAtmIfVptVccEpOperTable=mscAtmIfVptVccEpOperTable, mscAtmIfVccSrcRowStatusTable=mscAtmIfVccSrcRowStatusTable, mscARtgPnniTopNodeLinkIndex=mscARtgPnniTopNodeLinkIndex, mscAtmIfVpcDstCallingAddress=mscAtmIfVpcDstCallingAddress, mscARtgPnniRfBqpEntry=mscARtgPnniRfBqpEntry, mscARtgPnniTopNodeAddr=mscARtgPnniTopNodeAddr, mscARtgPnniPglParmsTable=mscARtgPnniPglParmsTable, mscARtgPnniPtseHoldDown=mscARtgPnniPtseHoldDown, mscAtmCRDna=mscAtmCRDna, mscAtmIfVpcSrcCalledAddress=mscAtmIfVpcSrcCalledAddress, mscAtmIfVccSrcCalledAddress=mscAtmIfVccSrcCalledAddress, mscAtmIfVpcSrcComponentName=mscAtmIfVpcSrcComponentName, mscAtmIfVpcRpRowStatusEntry=mscAtmIfVpcRpRowStatusEntry, mscARtgPnniPtseRefreshInterval=mscARtgPnniPtseRefreshInterval, mscARtg=mscARtg, mscAtmIfVccEpIndex=mscAtmIfVccEpIndex, mscAtmIfVccRpNextHopsValue=mscAtmIfVccRpNextHopsValue, mscARtgPnniRfBqpTable=mscARtgPnniRfBqpTable, mscARtgPnniRfRxTdpEntry=mscARtgPnniRfRxTdpEntry, mscAtmIfVptVccSrc=mscAtmIfVptVccSrc, mscAtmIfVptVccDstRowStatusTable=mscAtmIfVptVccDstRowStatusTable, mscARtgPnniRfDestinationAddress=mscARtgPnniRfDestinationAddress, mscARtgPnniTop=mscARtgPnniTop, mscARtgPnniCfgNodeNbrPtspTx=mscARtgPnniCfgNodeNbrPtspTx, mscARtgRowStatusTable=mscARtgRowStatusTable, atmNetworkingMIB=atmNetworkingMIB, mscARtgPnniTopNodeLinkRemoteNodeId=mscARtgPnniTopNodeLinkRemoteNodeId, mscAtmIfVpcDstCalledAddress=mscAtmIfVpcDstCalledAddress, mscARtgPnniOptMetricIndex=mscARtgPnniOptMetricIndex, mscAtmIfVptVccEpApplicationName=mscAtmIfVptVccEpApplicationName, mscARtgPnniCfgNodeNodeId=mscARtgPnniCfgNodeNodeId, mscARtgPnniPortOperTable=mscARtgPnniPortOperTable, mscARtgPnniTopNodeLinkComponentName=mscARtgPnniTopNodeLinkComponentName, mscARtgPnniOperTable=mscARtgPnniOperTable, mscARtgPnniCfgNodeOperTable=mscARtgPnniCfgNodeOperTable, mscAtmIfVccDstRowStatusEntry=mscAtmIfVccDstRowStatusEntry, mscARtgPnniTopNodeAddrRowStatusTable=mscARtgPnniTopNodeAddrRowStatusTable, mscARtgPnniPortStdComponentName=mscARtgPnniPortStdComponentName, mscARtgPnniTopNodeLinkRowStatus=mscARtgPnniTopNodeLinkRowStatus, mscAtmIfVptVccSrcIndex=mscAtmIfVptVccSrcIndex, mscARtgPnniRfBestEffort=mscARtgPnniRfBestEffort, mscARtgPnniAvcrPm=mscARtgPnniAvcrPm, mscARtgPnniRfTransferCapabilityBbc=mscARtgPnniRfTransferCapabilityBbc, mscARtgPnniCfgNodeNbrDbSummariesRx=mscARtgPnniCfgNodeNbrDbSummariesRx, mscARtgPnniRfFwdQosClass=mscARtgPnniRfFwdQosClass, mscAtmCRDnaIndex=mscAtmCRDnaIndex, mscAtmCRRowStatusTable=mscAtmCRRowStatusTable, mscAtmIfVpcSrcCalledVpi=mscAtmIfVpcSrcCalledVpi, mscARtgPnniCfgNodeNbrBadPtseRx=mscARtgPnniCfgNodeNbrBadPtseRx, mscARtgPnniPeerDelayedAckInterval=mscARtgPnniPeerDelayedAckInterval, mscAtmIfVptVccDstCalledAddress=mscAtmIfVptVccDstCalledAddress, mscAtmIfVccSrcLastFailureCauseCode=mscAtmIfVccSrcLastFailureCauseCode, mscAtmIfVccRpStorageType=mscAtmIfVccRpStorageType, mscARtgPnniCfgNodeNbrRccListEntry=mscARtgPnniCfgNodeNbrRccListEntry, mscARtgRoutingAttempts=mscARtgRoutingAttempts, mscAtmIfVccRpNextHop=mscAtmIfVccRpNextHop, mscARtgPnniCfgNodeSAddrScope=mscARtgPnniCfgNodeSAddrScope, mscARtgPnniCfgNodeRowStatus=mscARtgPnniCfgNodeRowStatus, mscAtmCRStatsTable=mscAtmCRStatsTable, mscARtgPnniTopComponentName=mscARtgPnniTopComponentName, mscARtgPnniTopPtsesInDatabase=mscARtgPnniTopPtsesInDatabase, mscAtmCRCallsFailed=mscAtmCRCallsFailed, mscAtmIfVccRp=mscAtmIfVccRp, mscARtgPnniRfBwdQosClass=mscARtgPnniRfBwdQosClass, mscARtgPnniCfgNodeSAddrAddressIndex=mscARtgPnniCfgNodeSAddrAddressIndex, mscARtgPnniStatsEntry=mscARtgPnniStatsEntry, mscAtmIfVccDstOperTable=mscAtmIfVccDstOperTable, mscARtgPnniCfgNodeNumRccs=mscARtgPnniCfgNodeNumRccs, mscAtmCRComponentName=mscAtmCRComponentName, mscARtgPnniPortStorageType=mscARtgPnniPortStorageType, mscARtgPnniOptMetricEntry=mscARtgPnniOptMetricEntry, mscARtgPnniTopNodeLinkRowStatusTable=mscARtgPnniTopNodeLinkRowStatusTable, mscAtmIfVccDstCalledAddress=mscAtmIfVccDstCalledAddress, mscAtmIfVptVccSrcLastFailureCauseCode=mscAtmIfVptVccSrcLastFailureCauseCode, mscARtgPnniPglInitTime=mscARtgPnniPglInitTime, mscARtgPnniTopNodeLinkRowStatusEntry=mscARtgPnniTopNodeLinkRowStatusEntry, mscARtgPnniCfgNodeDefSAddrOperTable=mscARtgPnniCfgNodeDefSAddrOperTable, mscARtgPnniCfgNodeDefSAddrAddress=mscARtgPnniCfgNodeDefSAddrAddress, mscAtmIfVptVccRp=mscAtmIfVptVccRp, mscAtmIfVccDst=mscAtmIfVccDst, mscAtmIfVptVccRpIndex=mscAtmIfVptVccRpIndex, mscARtgPnniFailedRoutingAttempts=mscARtgPnniFailedRoutingAttempts, mscARtgPnniPortIndex=mscARtgPnniPortIndex, mscARtgPnniRfFqpTable=mscARtgPnniRfFqpTable, mscAtmIfVpcRpStorageType=mscAtmIfVpcRpStorageType, mscAtmIfVccSrcOperTable=mscAtmIfVccSrcOperTable, mscARtgPnniCfgNodeOpPeerGroupId=mscARtgPnniCfgNodeOpPeerGroupId, mscARtgPnniCfgNodeSAddrRowStatus=mscARtgPnniCfgNodeSAddrRowStatus, mscAtmIfVccDstIndex=mscAtmIfVccDstIndex, mscAtmIfVptVccDstCallingAddress=mscAtmIfVptVccDstCallingAddress, mscARtgPnniRfIndex=mscARtgPnniRfIndex, mscARtgPnniThreshParmsTable=mscARtgPnniThreshParmsTable, mscAtmIfVccSrcIndex=mscAtmIfVccSrcIndex, mscARtgDnaDestInfoOperTable=mscARtgDnaDestInfoOperTable, mscAtmIfVptVccRpRowStatusTable=mscAtmIfVptVccRpRowStatusTable, mscARtgPnniCfgNodeSAddr=mscARtgPnniCfgNodeSAddr, mscARtgPnniDomain=mscARtgPnniDomain, mscARtgDnaDestInfoRowStatus=mscARtgDnaDestInfoRowStatus, mscAtmIfVptVccDstStorageType=mscAtmIfVptVccDstStorageType, mscAtmCRProvEntry=mscAtmCRProvEntry, mscARtgPnniCfgNodeNbrPtseRx=mscARtgPnniCfgNodeNbrPtseRx, mscARtgStatsTable=mscARtgStatsTable, mscAtmIfVccRpOperEntry=mscAtmIfVccRpOperEntry, mscARtgDnaDestInfoType=mscARtgDnaDestInfoType, mscARtgPnniTopNode=mscARtgPnniTopNode, mscARtgPnniRfRxTdpTable=mscARtgPnniRfRxTdpTable, mscARtgPnniCfgNodeNumNeighbors=mscARtgPnniCfgNodeNumNeighbors, mscARtgPnniCfgNodeProvEntry=mscARtgPnniCfgNodeProvEntry, mscAtmIfVccDstComponentName=mscAtmIfVccDstComponentName, mscAtmIfVpcSrcRowStatus=mscAtmIfVpcSrcRowStatus, mscARtgPnni=mscARtgPnni, mscAtmIfVptVccSrcProvTable=mscAtmIfVptVccSrcProvTable, mscARtgPnniOverrideDelay=mscARtgPnniOverrideDelay, mscARtgPnniCfgNodeDefSAddrState=mscARtgPnniCfgNodeDefSAddrState, mscARtgPnniCfgNodeNbrDbSummariesTx=mscARtgPnniCfgNodeNbrDbSummariesTx, mscARtgPnniPortRowStatus=mscARtgPnniPortRowStatus, mscARtgPnniTopologyMemoryExhaustion=mscARtgPnniTopologyMemoryExhaustion, mscAtmIfVpcRpOperTable=mscAtmIfVpcRpOperTable, mscARtgDnaDestInfoStdComponentName=mscARtgDnaDestInfoStdComponentName, mscARtgDnaRowStatusEntry=mscARtgDnaRowStatusEntry, mscAtmIfVptVccDstRowStatus=mscAtmIfVptVccDstRowStatus, mscAtmIfVptVccEp=mscAtmIfVptVccEp, mscAtmIfVptVccSrcOperEntry=mscAtmIfVptVccSrcOperEntry, mscARtgPnniStatsTable=mscARtgPnniStatsTable, mscAtmCRRowStatus=mscAtmCRRowStatus, mscARtgPnniOperEntry=mscARtgPnniOperEntry, mscAtmIfVpcSrcStorageType=mscAtmIfVpcSrcStorageType, mscAtmIfVccSrcRowStatus=mscAtmIfVccSrcRowStatus, mscAtmIfVpcSrcProvTable=mscAtmIfVpcSrcProvTable, mscAtmIfVpcSrcRetryCount=mscAtmIfVpcSrcRetryCount, atmNetworkingGroup=atmNetworkingGroup, mscAtmIfVccRpComponentName=mscAtmIfVccRpComponentName, mscAtmIfVptVccRpStorageType=mscAtmIfVptVccRpStorageType, mscARtgPnniCfgNodeNbrStatsTable=mscARtgPnniCfgNodeNbrStatsTable, mscAtmIfVpcRpOperEntry=mscAtmIfVpcRpOperEntry, mscARtgPnniHelloInactivityFactor=mscARtgPnniHelloInactivityFactor, mscAtmIfVptVccEpComponentName=mscAtmIfVptVccEpComponentName, mscARtgPnniCfgNodeNbrPtseReqTx=mscARtgPnniCfgNodeNbrPtseReqTx, mscARtgPnniStorageType=mscARtgPnniStorageType, mscARtgComponentName=mscARtgComponentName, mscARtgPnniCfgNodeSAddrState=mscARtgPnniCfgNodeSAddrState, mscARtgPnniCfgNodeSAddrProvEntry=mscARtgPnniCfgNodeSAddrProvEntry, mscAtmIfVccEpStorageType=mscAtmIfVccEpStorageType, mscAtmIfVpcDstIndex=mscAtmIfVpcDstIndex, mscARtgPnniCfgNodeDefSAddrIndex=mscARtgPnniCfgNodeDefSAddrIndex, mscARtgPnniCfgNodeNbrPeerState=mscARtgPnniCfgNodeNbrPeerState, mscARtgPnniCfgNodeDefSAddrDefAddrTable=mscARtgPnniCfgNodeDefSAddrDefAddrTable, mscAtmCRDnaRowStatusTable=mscAtmCRDnaRowStatusTable, mscAtmIfVpcSrcIndex=mscAtmIfVpcSrcIndex, mscAtmIfVccSrcCalledVpiVci=mscAtmIfVccSrcCalledVpiVci, mscAtmIfVpcDstOperEntry=mscAtmIfVpcDstOperEntry, mscARtgPnniCfgNodeDefSAddrStorageType=mscARtgPnniCfgNodeDefSAddrStorageType)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmNetworkingMIB", mscAtmIfVccEpOperTable=mscAtmIfVccEpOperTable, mscAtmIfVptVccDstOperEntry=mscAtmIfVptVccDstOperEntry, mscAtmIfVptVccSrcCallingAddress=mscAtmIfVptVccSrcCallingAddress, mscARtgPnniCfgNodeSAddrOperEntry=mscARtgPnniCfgNodeSAddrOperEntry, mscAtmIfVptVccDstCallingVpiVci=mscAtmIfVptVccDstCallingVpiVci, mscAtmIfVptVccSrcState=mscAtmIfVptVccSrcState, mscARtgPnniHelloHoldDown=mscARtgPnniHelloHoldDown, mscARtgRowStatusEntry=mscARtgRowStatusEntry, mscAtmIfVccDstRowStatusTable=mscAtmIfVccDstRowStatusTable, mscARtgPnniRfRowStatusTable=mscARtgPnniRfRowStatusTable, mscARtgPnniCfgNodeNbrOperEntry=mscARtgPnniCfgNodeNbrOperEntry, mscARtgDnaDestInfoReachability=mscARtgDnaDestInfoReachability, mscAtmIfVptVccSrcLastFailureDiagCode=mscAtmIfVptVccSrcLastFailureDiagCode, mscARtgIndex=mscARtgIndex, mscARtgPnniCfgNodeNbrRowStatusEntry=mscARtgPnniCfgNodeNbrRowStatusEntry, mscARtgDnaDestInfoIndex=mscARtgDnaDestInfoIndex, mscARtgPnniNodeAddressPrefix=mscARtgPnniNodeAddressPrefix, mscARtgPnniPortRowStatusTable=mscARtgPnniPortRowStatusTable, mscARtgPnniRfTxTrafficDescType=mscARtgPnniRfTxTrafficDescType, mscAtmCRDnaRowStatusEntry=mscAtmCRDnaRowStatusEntry, mscAtmIfVpcSrc=mscAtmIfVpcSrc, mscAtmIfVpcRpNextHopsTable=mscAtmIfVpcRpNextHopsTable, mscAtmIfVccRpRowStatus=mscAtmIfVccRpRowStatus, mscAtmCRDnaDestinationNameValue=mscAtmCRDnaDestinationNameValue, mscARtgPnniCfgNodeNbrBadPtseAckRx=mscARtgPnniCfgNodeNbrBadPtseAckRx, mscAtmIfVccEpOperEntry=mscAtmIfVccEpOperEntry, mscAtmIfVpcRp=mscAtmIfVpcRp, mscARtgPnniPortOperEntry=mscARtgPnniPortOperEntry, mscAtmIfVpcSrcOperEntry=mscAtmIfVpcSrcOperEntry, mscARtgPnniTopNodeAddrStorageType=mscARtgPnniTopNodeAddrStorageType, mscARtgPnniRfRowStatus=mscARtgPnniRfRowStatus, mscARtgPnniTopNodeAddrOperEntry=mscARtgPnniTopNodeAddrOperEntry, mscAtmIfVpcDst=mscAtmIfVpcDst, mscARtgPnniRfOptimizationMetric=mscARtgPnniRfOptimizationMetric, mscARtgDnaRowStatus=mscARtgDnaRowStatus, mscAtmIfVccSrcRowStatusEntry=mscAtmIfVccSrcRowStatusEntry, mscARtgPnniRfRowStatusEntry=mscARtgPnniRfRowStatusEntry, mscARtgPnniCfgNodeDefSAddrOperEntry=mscARtgPnniCfgNodeDefSAddrOperEntry, mscARtgPnniCfgNodePglElectionState=mscARtgPnniCfgNodePglElectionState, mscAtmIfVccDstOperEntry=mscAtmIfVccDstOperEntry, mscARtgStorageType=mscARtgStorageType, mscARtgDnaIndex=mscARtgDnaIndex, mscARtgPnniRfMaxRoutes=mscARtgPnniRfMaxRoutes, mscAtmIfVccRpRowStatusTable=mscAtmIfVccRpRowStatusTable, mscARtgDnaDestInfoStorageType=mscARtgDnaDestInfoStorageType, mscAtmIfVccSrcRemoteAddress=mscAtmIfVccSrcRemoteAddress, atmNetworkingCapabilities=atmNetworkingCapabilities, mscAtmIfVccEp=mscAtmIfVccEp, mscARtgPnniCfgNodeIndex=mscARtgPnniCfgNodeIndex, mscAtmIfVccSrc=mscAtmIfVccSrc, mscAtmIfVptVccSrcRowStatusTable=mscAtmIfVptVccSrcRowStatusTable, mscARtgPnniPglParmsEntry=mscARtgPnniPglParmsEntry, mscARtgDnaDestInfoRowStatusTable=mscARtgDnaDestInfoRowStatusTable, mscARtgPnniTopNodeLinkStorageType=mscARtgPnniTopNodeLinkStorageType, mscARtgDnaDestInfoComponentName=mscARtgDnaDestInfoComponentName, mscARtgPnniTopNodeAddrRowStatus=mscARtgPnniTopNodeAddrRowStatus, mscAtmIfVptVccSrcComponentName=mscAtmIfVptVccSrcComponentName, mscARtgPnniRfRxTdpValue=mscARtgPnniRfRxTdpValue, mscARtgPnniCfgNodeNbrBadPtseReqRx=mscARtgPnniCfgNodeNbrBadPtseReqRx, mscARtgPnniMaxAlternateRoutesOnCrankback=mscARtgPnniMaxAlternateRoutesOnCrankback, mscAtmIfVccDstStorageType=mscAtmIfVccDstStorageType, mscAtmIfVccSrcRetryCount=mscAtmIfVccSrcRetryCount, atmNetworkingGroupCA02A=atmNetworkingGroupCA02A, mscARtgPnniCfgNodeNbrRowStatusTable=mscARtgPnniCfgNodeNbrRowStatusTable, mscAtmIfVccEpRowStatusEntry=mscAtmIfVccEpRowStatusEntry, mscAtmCR=mscAtmCR, mscARtgPnniCfgNodeCurrentLeadershipPriority=mscARtgPnniCfgNodeCurrentLeadershipPriority, mscAtmIfVptVccDstIndex=mscAtmIfVptVccDstIndex, mscAtmIfVpcSrcRowStatusEntry=mscAtmIfVpcSrcRowStatusEntry, mscAtmIfVccSrcProvEntry=mscAtmIfVccSrcProvEntry, mscARtgPnniCfgNodeDefSAddrScope=mscARtgPnniCfgNodeDefSAddrScope, mscAtmIfVpcRpNextHopsEntry=mscAtmIfVpcRpNextHopsEntry, mscARtgPnniTopOperTable=mscARtgPnniTopOperTable, mscARtgPnniTopNodeLinkOperEntry=mscARtgPnniTopNodeLinkOperEntry, mscARtgDnaDestInfoOperEntry=mscARtgDnaDestInfoOperEntry, mscAtmIfVptVccRpRowStatusEntry=mscAtmIfVptVccRpRowStatusEntry, mscAtmCRRowStatusEntry=mscAtmCRRowStatusEntry, mscARtgFailedRoutingAttempts=mscARtgFailedRoutingAttempts, mscARtgPnniCfgNodeSAddrOperTable=mscARtgPnniCfgNodeSAddrOperTable, atmNetworkingCapabilitiesCA=atmNetworkingCapabilitiesCA, mscAtmIfVpcDstRowStatus=mscAtmIfVpcDstRowStatus, mscARtgPnniTopRowStatus=mscARtgPnniTopRowStatus, mscARtgPnniRowStatusTable=mscARtgPnniRowStatusTable, mscAtmIfVccEpComponentName=mscAtmIfVccEpComponentName, mscAtmIfVptVccEpOperEntry=mscAtmIfVptVccEpOperEntry, mscAtmIfVccEpApplicationName=mscAtmIfVccEpApplicationName, mscAtmIfVptVccRpComponentName=mscAtmIfVptVccRpComponentName, mscARtgPnniPtseParmsTable=mscARtgPnniPtseParmsTable, mscARtgPnniTopRowStatusTable=mscARtgPnniTopRowStatusTable, mscAtmIfVpcRpRowStatus=mscAtmIfVpcRpRowStatus, mscARtgPnniRfAtmServiceCategory=mscARtgPnniRfAtmServiceCategory, mscARtgPnniAlternateRoutingAttempts=mscARtgPnniAlternateRoutingAttempts, mscARtgPnniCfgNodeNbrBadPtspRx=mscARtgPnniCfgNodeNbrBadPtspRx, mscARtgPnniRfStorageType=mscARtgPnniRfStorageType, mscAtmIfVccSrcOperEntry=mscAtmIfVccSrcOperEntry, mscAtmIfVccSrcLastFailureDiagCode=mscAtmIfVccSrcLastFailureDiagCode, mscARtgPnniRfRxTdpIndex=mscARtgPnniRfRxTdpIndex, mscAtmIfVpcDstCallingVpi=mscAtmIfVpcDstCallingVpi, mscARtgPnniAvcrMt=mscARtgPnniAvcrMt, mscAtmIfVccSrcRemoteVpiVci=mscAtmIfVccSrcRemoteVpiVci, mscAtmCRDnaComponentName=mscAtmCRDnaComponentName, mscAtmIfVptVccEpRowStatusTable=mscAtmIfVptVccEpRowStatusTable, mscARtgPnniCfgNodeRowStatusTable=mscARtgPnniCfgNodeRowStatusTable, mscARtgPnniCfgNodeNbrRowStatus=mscARtgPnniCfgNodeNbrRowStatus, mscAtmIfVpcRpNextHopsValue=mscAtmIfVpcRpNextHopsValue, mscARtgPnniTopIndex=mscARtgPnniTopIndex, mscARtgPnniTopNodeStorageType=mscARtgPnniTopNodeStorageType, mscAtmCRCallsRouted=mscAtmCRCallsRouted, mscARtgPnniCfgNodeNbrComponentName=mscARtgPnniCfgNodeNbrComponentName, mscARtgPnniCfgNodeNbrIndex=mscARtgPnniCfgNodeNbrIndex, mscARtgPnniCfgNodeNodeAddress=mscARtgPnniCfgNodeNodeAddress, mscARtgPnniCfgNodeSAddrReachabilityIndex=mscARtgPnniCfgNodeSAddrReachabilityIndex, mscARtgPnniIndex=mscARtgPnniIndex, mscARtgPnniTopNodeLinkOperTable=mscARtgPnniTopNodeLinkOperTable, mscARtgPnniPortRowStatusEntry=mscARtgPnniPortRowStatusEntry, mscAtmIfVptVccDst=mscAtmIfVptVccDst, mscAtmIfVptVccRpNextHop=mscAtmIfVptVccRpNextHop, mscARtgPnniHlParmsTable=mscARtgPnniHlParmsTable, mscAtmIfVpcSrcLastFailureCauseCode=mscAtmIfVpcSrcLastFailureCauseCode, mscARtgPnniRfBqpIndex=mscARtgPnniRfBqpIndex, mscARtgPnniSuccessfulRoutingAttempts=mscARtgPnniSuccessfulRoutingAttempts, mscARtgPnniTopNodeComponentName=mscARtgPnniTopNodeComponentName, mscARtgPnniOptMetricTable=mscARtgPnniOptMetricTable, mscAtmCRStorageType=mscAtmCRStorageType, mscARtgPnniRfComponentName=mscARtgPnniRfComponentName, mscAtmCRProvTable=mscAtmCRProvTable, mscAtmIfVptVccRpRowStatus=mscAtmIfVptVccRpRowStatus, mscARtgPnniCfgNodeNbrBadDbSummariesRx=mscARtgPnniCfgNodeNbrBadDbSummariesRx, mscARtgPnniPortComponentName=mscARtgPnniPortComponentName, mscARtgPnniCfgNodeNbrStatsEntry=mscARtgPnniCfgNodeNbrStatsEntry, mscAtmIfVpcRpComponentName=mscAtmIfVpcRpComponentName, mscARtgPnniRowStatusEntry=mscARtgPnniRowStatusEntry, mscARtgPnniCfgNodeNbrPtseReqRx=mscARtgPnniCfgNodeNbrPtseReqRx, atmNetworkingCapabilitiesCA02=atmNetworkingCapabilitiesCA02, mscARtgPnniTopNodeAddrRowStatusEntry=mscARtgPnniTopNodeAddrRowStatusEntry, mscARtgPnniRfFqpEntry=mscARtgPnniRfFqpEntry, mscARtgPnniCfgNodeSAddrRowStatusTable=mscARtgPnniCfgNodeSAddrRowStatusTable, mscAtmIfVptVccSrcRemoteAddress=mscAtmIfVptVccSrcRemoteAddress, atmNetworkingGroupCA02=atmNetworkingGroupCA02, mscARtgPnniRfCriteriaTable=mscARtgPnniRfCriteriaTable, mscARtgPnniCfgNodeOpNodeId=mscARtgPnniCfgNodeOpNodeId, mscAtmIfVccRpIndex=mscAtmIfVccRpIndex, mscAtmIfVptVccSrcRemoteVpiVci=mscAtmIfVptVccSrcRemoteVpiVci, mscAtmIfVptVccSrcCalledVpiVci=mscAtmIfVptVccSrcCalledVpiVci, mscARtgPnniCfgNodeNbrStorageType=mscARtgPnniCfgNodeNbrStorageType, mscARtgPnniCfgNodePeerGroupId=mscARtgPnniCfgNodePeerGroupId, mscARtgPnniRfCriteriaEntry=mscARtgPnniRfCriteriaEntry, mscAtmIfVptVccSrcProvEntry=mscAtmIfVptVccSrcProvEntry, mscARtgPnniCfgNodeDefSAddrRowStatusEntry=mscARtgPnniCfgNodeDefSAddrRowStatusEntry, mscARtgPnniTopStorageType=mscARtgPnniTopStorageType, mscAtmIfVccSrcCallingAddress=mscAtmIfVccSrcCallingAddress, mscAtmIfVptVccRpOperTable=mscAtmIfVptVccRpOperTable, mscARtgPnniCfgNodeDefSAddrRowStatusTable=mscARtgPnniCfgNodeDefSAddrRowStatusTable, mscAtmIfVptVccDstRowStatusEntry=mscAtmIfVptVccDstRowStatusEntry, mscARtgPnniTopNodeRowStatus=mscARtgPnniTopNodeRowStatus, mscARtgPnniTopNodeAddrPrefixLengthIndex=mscARtgPnniTopNodeAddrPrefixLengthIndex, mscAtmIfVccSrcState=mscAtmIfVccSrcState, mscARtgPnniTopNodeAddrReachabilityIndex=mscARtgPnniTopNodeAddrReachabilityIndex, mscARtgPnniCfgNodeSAddrPrefixLengthIndex=mscARtgPnniCfgNodeSAddrPrefixLengthIndex, mscARtgPnniCfgNodeNbrRccListValue=mscARtgPnniCfgNodeNbrRccListValue, mscARtgPnniCfgNodeRowStatusEntry=mscARtgPnniCfgNodeRowStatusEntry, mscARtgPnniCfgNodeSAddrSuppress=mscARtgPnniCfgNodeSAddrSuppress, mscAtmIfVptVccSrcRetryCount=mscAtmIfVptVccSrcRetryCount, mscAtmIfVpcRpRowStatusTable=mscAtmIfVpcRpRowStatusTable, mscARtgPnniTopNodeAddrComponentName=mscARtgPnniTopNodeAddrComponentName, mscARtgPnniRfClippingBbc=mscARtgPnniRfClippingBbc, mscARtgPnniHelloInterval=mscARtgPnniHelloInterval, mscARtgPnniCfgNodeNbr=mscARtgPnniCfgNodeNbr, mscARtgPnniPort=mscARtgPnniPort, mscAtmIfVpcRpNextHop=mscAtmIfVpcRpNextHop, mscARtgPnniCfgNode=mscARtgPnniCfgNode, mscAtmIfVpcDstOperTable=mscAtmIfVpcDstOperTable, mscAtmIfVccDstCallingAddress=mscAtmIfVccDstCallingAddress, mscAtmIfVptVccSrcStorageType=mscAtmIfVptVccSrcStorageType, mscAtmIfVccSrcComponentName=mscAtmIfVccSrcComponentName, mscARtgPnniTopOperEntry=mscARtgPnniTopOperEntry, mscARtgDnaComponentName=mscARtgDnaComponentName, mscARtgPnniHlParmsEntry=mscARtgPnniHlParmsEntry, mscAtmIfVpcSrcOperTable=mscAtmIfVpcSrcOperTable, mscARtgPnniTopRowStatusEntry=mscARtgPnniTopRowStatusEntry)
