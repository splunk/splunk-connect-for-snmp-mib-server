#
# PySNMP MIB module ALCATEL-IND1-GVRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-GVRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Gvrp, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Gvrp")
VlanBitmap, = mibBuilder.importSymbols("ALCATEL-IND1-VLAN-STP-MIB", "VlanBitmap")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, Bits, iso, Counter64, ModuleIdentity, Integer32, Gauge32, Counter32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "Bits", "iso", "Counter64", "ModuleIdentity", "Integer32", "Gauge32", "Counter32", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
alcatelIND1GVRPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1))
alcatelIND1GVRPMIB.setRevisions(('2010-05-13 00:00', '2007-07-02 00:00',))
if mibBuilder.loadTexts: alcatelIND1GVRPMIB.setLastUpdated('201005130000Z')
if mibBuilder.loadTexts: alcatelIND1GVRPMIB.setOrganization('Alcatel - Architects Of An Internet World')
alcatelIND1GVRPMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 0))
if mibBuilder.loadTexts: alcatelIND1GVRPMIBNotifications.setStatus('current')
alcatelIND1GVRPMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1))
if mibBuilder.loadTexts: alcatelIND1GVRPMIBObjects.setStatus('current')
alcatelIND1GVRPMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2))
if mibBuilder.loadTexts: alcatelIND1GVRPMIBConformance.setStatus('current')
alcatelIND1GVRPMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1GVRPMIBGroups.setStatus('current')
alcatelIND1GVRPMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1GVRPMIBCompliances.setStatus('current')
alaGvrpGlobalClearStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpGlobalClearStats.setStatus('current')
alaGvrpTransparentSwitching = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpTransparentSwitching.setStatus('current')
alaGvrpMaxVlanLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 4094)).clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpMaxVlanLimit.setStatus('current')
gvrpPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4))
alaGvrpPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1), )
if mibBuilder.loadTexts: alaGvrpPortConfigTable.setStatus('current')
alaGvrpPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigIfIndex"))
if mibBuilder.loadTexts: alaGvrpPortConfigEntry.setStatus('current')
alaGvrpPortConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaGvrpPortConfigIfIndex.setStatus('current')
alaGvrpPortConfigRegistrarMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("fixed", 2), ("forbidden", 3))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigRegistrarMode.setStatus('current')
alaGvrpPortConfigApplicantMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("participant", 1), ("nonparticipant", 2), ("active", 3))).clone('participant')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigApplicantMode.setStatus('current')
alaGvrpPortConfigRestrictedRegistrationBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 4), VlanBitmap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigRestrictedRegistrationBitmap.setStatus('current')
alaGvrpPortConfigAllowRegistrationBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 5), VlanBitmap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigAllowRegistrationBitmap.setStatus('current')
alaGvrpPortConfigRegistrationBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 6), VlanBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortConfigRegistrationBitmap.setStatus('current')
alaGvrpPortConfigRestrictedApplicantBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 7), VlanBitmap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigRestrictedApplicantBitmap.setStatus('current')
alaGvrpPortConfigAllowApplicantBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 8), VlanBitmap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigAllowApplicantBitmap.setStatus('current')
alaGvrpPortConfigApplicantBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 9), VlanBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortConfigApplicantBitmap.setStatus('current')
alaGvrpPortConfigRegistrationToStaticVlanLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 10), VlanBitmap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigRegistrationToStaticVlanLearn.setStatus('current')
alaGvrpPortConfigRegistrationToStaticVlanRestrict = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 11), VlanBitmap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigRegistrationToStaticVlanRestrict.setStatus('current')
alaGvrpPortConfigRegistrationToStaticVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 12), VlanBitmap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortConfigRegistrationToStaticVlan.setStatus('current')
alaGvrpPortConfigJoinTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(600)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigJoinTimer.setStatus('current')
alaGvrpPortConfigLeaveTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 2147483647)).clone(1800)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigLeaveTimer.setStatus('current')
alaGvrpPortConfigLeaveAllTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 2147483647)).clone(30000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigLeaveAllTimer.setStatus('current')
alaGvrpPortConfigProviderBpduMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortConfigProviderBpduMac.setStatus('current')
gvrpPortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5))
alaGvrpPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1), )
if mibBuilder.loadTexts: alaGvrpPortStatsTable.setStatus('current')
alaGvrpPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsIfIndex"))
if mibBuilder.loadTexts: alaGvrpPortStatsEntry.setStatus('current')
alaGvrpPortStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaGvrpPortStatsIfIndex.setStatus('current')
alaGvrpPortStatsJoinEmptyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsJoinEmptyReceived.setStatus('current')
alaGvrpPortStatsJoinInReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsJoinInReceived.setStatus('current')
alaGvrpPortStatsEmptyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsEmptyReceived.setStatus('current')
alaGvrpPortStatsLeaveInReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsLeaveInReceived.setStatus('current')
alaGvrpPortStatsLeaveEmptyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsLeaveEmptyReceived.setStatus('current')
alaGvrpPortStatsLeaveAllReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsLeaveAllReceived.setStatus('current')
alaGvrpPortStatsJoinEmptyTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsJoinEmptyTransmitted.setStatus('current')
alaGvrpPortStatsJoinInTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsJoinInTransmitted.setStatus('current')
alaGvrpPortStatsEmptyTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsEmptyTransmitted.setStatus('current')
alaGvrpPortStatsLeaveInTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsLeaveInTransmitted.setStatus('current')
alaGvrpPortStatsLeaveEmptyTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsLeaveEmptyTransmitted.setStatus('current')
alaGvrpPortStatsLeaveAllTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsLeaveAllTransmitted.setStatus('current')
alaGvrpPortStatsTotalPDUReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsTotalPDUReceived.setStatus('current')
alaGvrpPortStatsTotalPDUTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsTotalPDUTransmitted.setStatus('current')
alaGvrpPortStatsTotalMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsTotalMsgsReceived.setStatus('current')
alaGvrpPortStatsTotalMsgsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsTotalMsgsTransmitted.setStatus('current')
alaGvrpPortStatsInvalidMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGvrpPortStatsInvalidMsgsReceived.setStatus('current')
alaGvrpPortStatsClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 1, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaGvrpPortStatsClearStats.setStatus('current')
gvrpVlanLimitReachedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 0, 1)).setObjects(("ALCATEL-IND1-GVRP-MIB", "alaGvrpMaxVlanLimit"))
if mibBuilder.loadTexts: gvrpVlanLimitReachedEvent.setStatus('current')
alcatelIND1GVRPMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-GVRP-MIB", "gvrpPortBaseGroup"), ("ALCATEL-IND1-GVRP-MIB", "gvrpPortConfigGroup"), ("ALCATEL-IND1-GVRP-MIB", "gvrpPortStatsGroup"), ("ALCATEL-IND1-GVRP-MIB", "gvrpNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1GVRPMIBCompliance = alcatelIND1GVRPMIBCompliance.setStatus('current')
gvrpPortBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-GVRP-MIB", "alaGvrpGlobalClearStats"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpTransparentSwitching"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpMaxVlanLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gvrpPortBaseGroup = gvrpPortBaseGroup.setStatus('current')
gvrpPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigRegistrarMode"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigApplicantMode"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigRestrictedRegistrationBitmap"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigAllowRegistrationBitmap"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigRegistrationBitmap"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigRestrictedApplicantBitmap"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigAllowApplicantBitmap"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigApplicantBitmap"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigRegistrationToStaticVlanLearn"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigRegistrationToStaticVlanRestrict"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigRegistrationToStaticVlan"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigJoinTimer"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigLeaveTimer"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigLeaveAllTimer"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortConfigProviderBpduMac"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gvrpPortConfigGroup = gvrpPortConfigGroup.setStatus('current')
gvrpPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsJoinEmptyReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsJoinInReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsEmptyReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsLeaveInReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsLeaveEmptyReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsLeaveAllReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsJoinEmptyTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsJoinInTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsEmptyTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsLeaveInTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsLeaveEmptyTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsLeaveAllTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsTotalPDUReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsTotalPDUTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsTotalMsgsReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsTotalMsgsTransmitted"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsInvalidMsgsReceived"), ("ALCATEL-IND1-GVRP-MIB", "alaGvrpPortStatsClearStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gvrpPortStatsGroup = gvrpPortStatsGroup.setStatus('current')
gvrpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 36, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-GVRP-MIB", "gvrpVlanLimitReachedEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gvrpNotificationGroup = gvrpNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-GVRP-MIB", alaGvrpPortConfigIfIndex=alaGvrpPortConfigIfIndex, alaGvrpPortStatsJoinEmptyReceived=alaGvrpPortStatsJoinEmptyReceived, alaGvrpPortStatsEmptyReceived=alaGvrpPortStatsEmptyReceived, alaGvrpPortStatsTotalPDUTransmitted=alaGvrpPortStatsTotalPDUTransmitted, alcatelIND1GVRPMIBCompliance=alcatelIND1GVRPMIBCompliance, alcatelIND1GVRPMIBConformance=alcatelIND1GVRPMIBConformance, alcatelIND1GVRPMIBNotifications=alcatelIND1GVRPMIBNotifications, alaGvrpPortConfigRegistrationBitmap=alaGvrpPortConfigRegistrationBitmap, gvrpPortBaseGroup=gvrpPortBaseGroup, alaGvrpPortStatsJoinEmptyTransmitted=alaGvrpPortStatsJoinEmptyTransmitted, alcatelIND1GVRPMIB=alcatelIND1GVRPMIB, alaGvrpPortConfigTable=alaGvrpPortConfigTable, gvrpPortStatsGroup=gvrpPortStatsGroup, alaGvrpPortConfigRegistrationToStaticVlanRestrict=alaGvrpPortConfigRegistrationToStaticVlanRestrict, alaGvrpPortConfigApplicantBitmap=alaGvrpPortConfigApplicantBitmap, PYSNMP_MODULE_ID=alcatelIND1GVRPMIB, alaGvrpPortStatsLeaveAllTransmitted=alaGvrpPortStatsLeaveAllTransmitted, alaGvrpPortStatsLeaveInTransmitted=alaGvrpPortStatsLeaveInTransmitted, alaGvrpPortConfigLeaveAllTimer=alaGvrpPortConfigLeaveAllTimer, gvrpPortConfig=gvrpPortConfig, alaGvrpPortConfigProviderBpduMac=alaGvrpPortConfigProviderBpduMac, alaGvrpPortConfigAllowRegistrationBitmap=alaGvrpPortConfigAllowRegistrationBitmap, alaGvrpPortStatsTable=alaGvrpPortStatsTable, alaGvrpPortStatsJoinInTransmitted=alaGvrpPortStatsJoinInTransmitted, alaGvrpPortStatsTotalPDUReceived=alaGvrpPortStatsTotalPDUReceived, alaGvrpPortStatsIfIndex=alaGvrpPortStatsIfIndex, alcatelIND1GVRPMIBObjects=alcatelIND1GVRPMIBObjects, alaGvrpPortConfigRestrictedRegistrationBitmap=alaGvrpPortConfigRestrictedRegistrationBitmap, alaGvrpPortConfigRestrictedApplicantBitmap=alaGvrpPortConfigRestrictedApplicantBitmap, alaGvrpPortConfigApplicantMode=alaGvrpPortConfigApplicantMode, alaGvrpPortStatsLeaveEmptyReceived=alaGvrpPortStatsLeaveEmptyReceived, alaGvrpPortConfigEntry=alaGvrpPortConfigEntry, alaGvrpGlobalClearStats=alaGvrpGlobalClearStats, alaGvrpPortConfigJoinTimer=alaGvrpPortConfigJoinTimer, gvrpPortConfigGroup=gvrpPortConfigGroup, alaGvrpPortStatsTotalMsgsTransmitted=alaGvrpPortStatsTotalMsgsTransmitted, alaGvrpPortConfigLeaveTimer=alaGvrpPortConfigLeaveTimer, alaGvrpPortStatsLeaveInReceived=alaGvrpPortStatsLeaveInReceived, alaGvrpPortConfigRegistrationToStaticVlanLearn=alaGvrpPortConfigRegistrationToStaticVlanLearn, alaGvrpPortStatsLeaveEmptyTransmitted=alaGvrpPortStatsLeaveEmptyTransmitted, alaGvrpPortStatsJoinInReceived=alaGvrpPortStatsJoinInReceived, alaGvrpPortStatsClearStats=alaGvrpPortStatsClearStats, alaGvrpPortConfigRegistrationToStaticVlan=alaGvrpPortConfigRegistrationToStaticVlan, alaGvrpPortConfigRegistrarMode=alaGvrpPortConfigRegistrarMode, gvrpNotificationGroup=gvrpNotificationGroup, alaGvrpPortStatsEntry=alaGvrpPortStatsEntry, alaGvrpPortStatsTotalMsgsReceived=alaGvrpPortStatsTotalMsgsReceived, alaGvrpPortStatsInvalidMsgsReceived=alaGvrpPortStatsInvalidMsgsReceived, alcatelIND1GVRPMIBCompliances=alcatelIND1GVRPMIBCompliances, alaGvrpTransparentSwitching=alaGvrpTransparentSwitching, gvrpPortStats=gvrpPortStats, alaGvrpPortStatsLeaveAllReceived=alaGvrpPortStatsLeaveAllReceived, gvrpVlanLimitReachedEvent=gvrpVlanLimitReachedEvent, alaGvrpPortConfigAllowApplicantBitmap=alaGvrpPortConfigAllowApplicantBitmap, alaGvrpPortStatsEmptyTransmitted=alaGvrpPortStatsEmptyTransmitted, alaGvrpMaxVlanLimit=alaGvrpMaxVlanLimit, alcatelIND1GVRPMIBGroups=alcatelIND1GVRPMIBGroups)
