#
# PySNMP MIB module RT-CFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RT-CFG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:50:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, iso, Bits, ObjectIdentity, NotificationType, TimeTicks, Counter32, NotificationType, Gauge32, ModuleIdentity, Counter64, Unsigned32, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "iso", "Bits", "ObjectIdentity", "NotificationType", "TimeTicks", "Counter32", "NotificationType", "Gauge32", "ModuleIdentity", "Counter64", "Unsigned32", "IpAddress", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class ActionListName(DisplayString):
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(1, 20)

class DirectionType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("ingress", 2), ("egress", 3))

class AccountCouter(Counter32):
    pass

class AccountCounter64(Counter64):
    pass

nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
nbRouterConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12))
nbRtConfigGen = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 1))
nbRtDevDiffServMode = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("byTOS", 3), ("byTag", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDevDiffServMode.setStatus('mandatory')
nbRtDevDiffServMappingSupport = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDevDiffServMappingSupport.setStatus('mandatory')
nbRtVifTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2), )
if mibBuilder.loadTexts: nbRtVifTable.setStatus('mandatory')
nbRtVifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtVifId"))
if mibBuilder.loadTexts: nbRtVifEntry.setStatus('mandatory')
nbRtVifId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtVifId.setStatus('mandatory')
nbRtVifIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifIpAddress.setStatus('mandatory')
nbRtVifMask = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifMask.setStatus('mandatory')
nbRtVifProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ipV4IF", 2), ("ipxIF", 3), ("portsIF", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifProtocol.setStatus('mandatory')
nbRtVifName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifName.setStatus('mandatory')
nbRtVifPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifPortList.setStatus('mandatory')
nbRtVifMac = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 7), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifMac.setStatus('mandatory')
nbRtVifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifAdminStatus.setStatus('mandatory')
nbRtVifConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifConfigType.setStatus('mandatory')
nbRtVifSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("unsecure", 2), ("secure", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifSecurity.setStatus('mandatory')
nbRtVifIsTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifIsTagged.setStatus('mandatory')
nbRtVifTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifTag.setStatus('mandatory')
nbRtVifGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3))
nbVifTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifTableSize.setStatus('mandatory')
nbVifDeviceLimitTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 2), )
if mibBuilder.loadTexts: nbVifDeviceLimitTable.setStatus('mandatory')
nbVifDeviceLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 2, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifLimitType"))
if mibBuilder.loadTexts: nbVifDeviceLimitEntry.setStatus('mandatory')
nbVifLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("lanEthernet", 2), ("wanPPP", 3), ("wanFrameRelay", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifLimitType.setStatus('mandatory')
nbVifDevNoMin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifDevNoMin.setStatus('mandatory')
nbVifDevNoMax = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifDevNoMax.setStatus('mandatory')
nbVifDevNoFirstEmpty = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifDevNoFirstEmpty.setStatus('mandatory')
nbVifAliasDLimitTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 3), )
if mibBuilder.loadTexts: nbVifAliasDLimitTable.setStatus('mandatory')
nbVifAliasDLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 3, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifAliasLimitType"), (0, "RT-CFG-MIB", "nbVifAliasLimitDevNo"))
if mibBuilder.loadTexts: nbVifAliasDLimitEntry.setStatus('mandatory')
nbVifAliasLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("lanEthernet", 2), ("wanPPP", 3), ("wanFrameRelay", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifAliasLimitType.setStatus('mandatory')
nbVifAliasLimitDevNo = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifAliasLimitDevNo.setStatus('mandatory')
nbVifAliasLimitDevAliasMin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifAliasLimitDevAliasMin.setStatus('mandatory')
nbVifAliasLimitDevAliasMax = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifAliasLimitDevAliasMax.setStatus('mandatory')
nbVifAliasLimitDevAliasFirstEmpty = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifAliasLimitDevAliasFirstEmpty.setStatus('mandatory')
nbVifTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11), )
if mibBuilder.loadTexts: nbVifTable.setStatus('mandatory')
nbVifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifType"), (0, "RT-CFG-MIB", "nbVifDevNo"), (0, "RT-CFG-MIB", "nbVifIsAlias"), (0, "RT-CFG-MIB", "nbVifAliasDev"))
if mibBuilder.loadTexts: nbVifEntry.setStatus('mandatory')
nbVifType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 12))).clone(namedValues=NamedValues(("other", 1), ("lanEthernet", 2), ("wanPPP", 3), ("wanFrameRelay", 4), ("bridge", 5), ("loopback", 6), ("dummy", 7), ("logical", 8), ("outOfBand", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifType.setStatus('mandatory')
nbVifDevNo = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifDevNo.setStatus('mandatory')
nbVifIsAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("primary", 2), ("alias", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifIsAlias.setStatus('mandatory')
nbVifAliasDev = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifAliasDev.setStatus('mandatory')
nbVifDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifDevName.setStatus('mandatory')
nbVifIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifIpAddress.setStatus('mandatory')
nbVifMask = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifMask.setStatus('mandatory')
nbVifPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifPeer.setStatus('mandatory')
nbVifPhysType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("eth0", 2), ("wp1", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifPhysType.setStatus('mandatory')
nbVifProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ipV4IF", 2), ("ipxIF", 3), ("portsIF", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifProtocol.setStatus('mandatory')
nbVifName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifName.setStatus('mandatory')
nbVifPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifPortList.setStatus('mandatory')
nbVifMac = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifMac.setStatus('mandatory')
nbVifState = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3), ("adminDown", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifState.setStatus('mandatory')
nbVifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifAdminStatus.setStatus('mandatory')
nbVifConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifConfigType.setStatus('mandatory')
nbVifSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("unsecure", 2), ("secure", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifSecurity.setStatus('mandatory')
nbVifIsTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifIsTagged.setStatus('mandatory')
nbVifTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifTag.setStatus('mandatory')
nbVifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifDescr.setStatus('mandatory')
nbVifLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 23), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbVifLastChange.setStatus('mandatory')
nbVifL2SwitchingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("interfaceTagFlood", 3), ("unicastToLinux", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifL2SwitchingMode.setStatus('mandatory')
nbVifProxyArpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("enableAll", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifProxyArpMode.setStatus('mandatory')
nbVifIpOnlyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifIpOnlyMode.setStatus('mandatory')
nbVifIpForwardingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 3, 11, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbVifIpForwardingMode.setStatus('mandatory')
nbRtFib = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4))
nbRtFibNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtFibNumEntries.setStatus('mandatory')
nbRtFibTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2), )
if mibBuilder.loadTexts: nbRtFibTable.setStatus('mandatory')
nbRtFibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtFibEntryIpAddress"), (0, "RT-CFG-MIB", "nbRtFibEntryIpMask"), (0, "RT-CFG-MIB", "nbRtFibEntryProtocol"))
if mibBuilder.loadTexts: nbRtFibEntry.setStatus('mandatory')
nbRtFibEntryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtFibEntryIpAddress.setStatus('mandatory')
nbRtFibEntryIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtFibEntryIpMask.setStatus('mandatory')
nbRtFibEntryProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("other", 1), ("direct", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("is-is", 9), ("es-is", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("arp", 15), ("larp", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtFibEntryProtocol.setStatus('mandatory')
nbRtFibEntryNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtFibEntryNextHop.setStatus('mandatory')
nbRtFibEntryNextPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtFibEntryNextPhysAddress.setStatus('mandatory')
nbRtFibEntryNextPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtFibEntryNextPort.setStatus('mandatory')
nbRtFibEntryLastChTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtFibEntryLastChTime.setStatus('mandatory')
nbRtFibEntryAge = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtFibEntryAge.setStatus('mandatory')
nbRtFibEntryMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtFibEntryMetric.setStatus('mandatory')
nbRtFibEntryAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtFibEntryAdminStatus.setStatus('mandatory')
nbRtFibEntryTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtFibEntryTag.setStatus('mandatory')
nbRtDiffServ = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5))
nbRtDiffServTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 2), )
if mibBuilder.loadTexts: nbRtDiffServTable.setStatus('mandatory')
nbRtDiffServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 2, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifType"), (0, "RT-CFG-MIB", "nbVifDevNo"), (0, "RT-CFG-MIB", "nbVifIsAlias"), (0, "RT-CFG-MIB", "nbVifAliasDev"))
if mibBuilder.loadTexts: nbRtDiffServEntry.setStatus('mandatory')
nbRtDiffServMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 10))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("byTOS", 3), ("byTag", 4), ("asGlobal", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServMode.setStatus('mandatory')
nbRtDiffServVptMapNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServVptMapNameIndex.setStatus('mandatory')
nbRtDiffServDscpMapNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServDscpMapNameIndex.setStatus('mandatory')
nbRtDiffServMgmtVptMapNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServMgmtVptMapNameIndex.setStatus('mandatory')
nbRtDiffServMgmtDscpMapNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServMgmtDscpMapNameIndex.setStatus('mandatory')
nbRtVifDiffServRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 4), )
if mibBuilder.loadTexts: nbRtVifDiffServRateLimitTable.setStatus('mandatory')
nbRtVifDiffServRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 4, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifType"), (0, "RT-CFG-MIB", "nbVifDevNo"), (0, "RT-CFG-MIB", "nbVifIsAlias"), (0, "RT-CFG-MIB", "nbVifAliasDev"), (0, "IF-MIB", "ifIndex"), (0, "RT-CFG-MIB", "nbRtVifDiffServDirect"))
if mibBuilder.loadTexts: nbRtVifDiffServRateLimitEntry.setStatus('mandatory')
nbRtVifDiffServDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 4, 1, 1), DirectionType())
if mibBuilder.loadTexts: nbRtVifDiffServDirect.setStatus('mandatory')
nbRtVifDiffServBuckRate = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifDiffServBuckRate.setStatus('mandatory')
nbRtVifDiffServBuckSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifDiffServBuckSize.setStatus('mandatory')
nbRtVifDiffServREDmode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifDiffServREDmode.setStatus('mandatory')
nbRtVifDiffServAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("createOrModify", 2), ("delete", 3), ("exist", 4), ("absent", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtVifDiffServAdminStatus.setStatus('mandatory')
nbRtDiffServVptMapTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 6), )
if mibBuilder.loadTexts: nbRtDiffServVptMapTable.setStatus('mandatory')
nbRtDiffServVptMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 6, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtDiffServVptMapNameId"))
if mibBuilder.loadTexts: nbRtDiffServVptMapEntry.setStatus('mandatory')
nbRtDiffServVptMapNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServVptMapNameId.setStatus('mandatory')
nbRtDiffServVptMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServVptMapName.setStatus('mandatory')
nbRtDiffServVptMapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServVptMapStatus.setStatus('mandatory')
nbRtDiffServVptMapAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("restoreDefaultConfig", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServVptMapAdminStatus.setStatus('mandatory')
nbRtDiffServVptMapPrflTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 8), )
if mibBuilder.loadTexts: nbRtDiffServVptMapPrflTable.setStatus('mandatory')
nbRtDiffServVptMapPrflEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 8, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtDiffServVptMapPrflNameId"), (0, "RT-CFG-MIB", "nbRtDiffServVptMapPrflInValueId"))
if mibBuilder.loadTexts: nbRtDiffServVptMapPrflEntry.setStatus('mandatory')
nbRtDiffServVptMapPrflNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServVptMapPrflNameId.setStatus('mandatory')
nbRtDiffServVptMapPrflInValueId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServVptMapPrflInValueId.setStatus('mandatory')
nbRtDiffServVptMapPrflInValue = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServVptMapPrflInValue.setStatus('mandatory')
nbRtDiffServVptMapPrflSl = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 8, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServVptMapPrflSl.setStatus('mandatory')
nbRtDiffServVptMapPrflOutValue = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 8, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServVptMapPrflOutValue.setStatus('mandatory')
nbRtDiffServDscpMapTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 10), )
if mibBuilder.loadTexts: nbRtDiffServDscpMapTable.setStatus('mandatory')
nbRtDiffServDscpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 10, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtDiffServDscpMapNameId"))
if mibBuilder.loadTexts: nbRtDiffServDscpMapEntry.setStatus('mandatory')
nbRtDiffServDscpMapNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServDscpMapNameId.setStatus('mandatory')
nbRtDiffServDscpMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServDscpMapName.setStatus('mandatory')
nbRtDiffServDscpMapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServDscpMapStatus.setStatus('mandatory')
nbRtDiffServDscpMapAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("restoreDefaultConfig", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServDscpMapAdminStatus.setStatus('mandatory')
nbRtDiffServDscpMapPrflTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 12), )
if mibBuilder.loadTexts: nbRtDiffServDscpMapPrflTable.setStatus('mandatory')
nbRtDiffServDscpMapPrflEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 12, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtDiffServDscpMapPrflNameId"), (0, "RT-CFG-MIB", "nbRtDiffServDscpMapPrflInValueId"))
if mibBuilder.loadTexts: nbRtDiffServDscpMapPrflEntry.setStatus('mandatory')
nbRtDiffServDscpMapPrflNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServDscpMapPrflNameId.setStatus('mandatory')
nbRtDiffServDscpMapPrflInValueId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServDscpMapPrflInValueId.setStatus('mandatory')
nbRtDiffServDscpMapPrflInValue = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtDiffServDscpMapPrflInValue.setStatus('mandatory')
nbRtDiffServDscpMapPrflSl = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 12, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServDscpMapPrflSl.setStatus('mandatory')
nbRtDiffServDscpMapPrflOutValue = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 5, 12, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtDiffServDscpMapPrflOutValue.setStatus('mandatory')
nbRtAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6))
nbRtAccVifTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10), )
if mibBuilder.loadTexts: nbRtAccVifTable.setStatus('mandatory')
nbRtAccVifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifType"), (0, "RT-CFG-MIB", "nbVifDevNo"), (0, "RT-CFG-MIB", "nbVifIsAlias"), (0, "RT-CFG-MIB", "nbVifAliasDev"), (0, "RT-CFG-MIB", "nbRtAccVifDirection"))
if mibBuilder.loadTexts: nbRtAccVifEntry.setStatus('mandatory')
nbRtAccVifDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 1), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifDirection.setStatus('mandatory')
nbRtAccVifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3), ("pause", 4), ("resume", 5), ("clear", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtAccVifAdminStatus.setStatus('mandatory')
nbRtAccVifOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("active", 2), ("paused", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifOperStatus.setStatus('mandatory')
nbRtAccVifConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 6), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifConformingBytes.setStatus('mandatory')
nbRtAccVifExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 7), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifExceedingBytes.setStatus('mandatory')
nbRtAccVifConformingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 8), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifConformingPackets.setStatus('mandatory')
nbRtAccVifExceedingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 9), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifExceedingPackets.setStatus('mandatory')
nbRtAccVifHighConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifHighConformingBytes.setStatus('mandatory')
nbRtAccVifHighExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifHighExceedingBytes.setStatus('mandatory')
nbRtAccVifHighConformingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifHighConformingPackets.setStatus('mandatory')
nbRtAccVifHighExceedingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifHighExceedingPackets.setStatus('mandatory')
nbRtAccVifLowConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifLowConformingBytes.setStatus('mandatory')
nbRtAccVifLowExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifLowExceedingBytes.setStatus('mandatory')
nbRtAccVifLowConformingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifLowConformingPackets.setStatus('mandatory')
nbRtAccVifLowExceedingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifLowExceedingPackets.setStatus('mandatory')
nbRtAccVif64ConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 19), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVif64ConformingBytes.setStatus('mandatory')
nbRtAccVif64ExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 20), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVif64ExceedingBytes.setStatus('mandatory')
nbRtAccVifConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 21), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifConformingUcastPackets.setStatus('mandatory')
nbRtAccVifHighConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifHighConformingUcastPackets.setStatus('mandatory')
nbRtAccVifLowConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifLowConformingUcastPackets.setStatus('mandatory')
nbRtAccVif64ConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 24), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVif64ConformingUcastPackets.setStatus('mandatory')
nbRtAccVifConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 25), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifConformingMcastPackets.setStatus('mandatory')
nbRtAccVifHighConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifHighConformingMcastPackets.setStatus('mandatory')
nbRtAccVifLowConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifLowConformingMcastPackets.setStatus('mandatory')
nbRtAccVif64ConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 28), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVif64ConformingMcastPackets.setStatus('mandatory')
nbRtAccVifConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 29), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifConformingBcastPackets.setStatus('mandatory')
nbRtAccVifHighConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifHighConformingBcastPackets.setStatus('mandatory')
nbRtAccVifLowConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVifLowConformingBcastPackets.setStatus('mandatory')
nbRtAccVif64ConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 10, 1, 32), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccVif64ConformingBcastPackets.setStatus('mandatory')
nbRtAccVifPortTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12), )
if mibBuilder.loadTexts: nbRtAccVifPortTable.setStatus('mandatory')
nbRtAccVifPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifType"), (0, "RT-CFG-MIB", "nbVifDevNo"), (0, "RT-CFG-MIB", "nbVifIsAlias"), (0, "RT-CFG-MIB", "nbVifAliasDev"), (0, "RT-CFG-MIB", "nbRtVifPortId"), (0, "RT-CFG-MIB", "nbRtAccVifDirection"))
if mibBuilder.loadTexts: nbRtAccVifPortEntry.setStatus('mandatory')
nbRtVifPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtVifPortId.setStatus('mandatory')
nbRtAccPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3), ("pause", 4), ("resume", 5), ("clear", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtAccPortAdminStatus.setStatus('mandatory')
nbRtAccPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("active", 2), ("paused", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortOperStatus.setStatus('mandatory')
nbRtAccPortConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 6), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortConformingBytes.setStatus('mandatory')
nbRtAccPortExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 7), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortExceedingBytes.setStatus('mandatory')
nbRtAccPortConformingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 8), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortConformingPackets.setStatus('mandatory')
nbRtAccPortExceedingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 9), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortExceedingPackets.setStatus('mandatory')
nbRtAccPortHighConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortHighConformingBytes.setStatus('mandatory')
nbRtAccPortHighExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortHighExceedingBytes.setStatus('mandatory')
nbRtAccPortHighConformingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortHighConformingPackets.setStatus('mandatory')
nbRtAccPortHighExceedingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortHighExceedingPackets.setStatus('mandatory')
nbRtAccPortLowConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortLowConformingBytes.setStatus('mandatory')
nbRtAccPortLowExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortLowExceedingBytes.setStatus('mandatory')
nbRtAccPortLowConformingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortLowConformingPackets.setStatus('mandatory')
nbRtAccPortLowExceedingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortLowExceedingPackets.setStatus('mandatory')
nbRtAccPortVif64ConformingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 19), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortVif64ConformingBytes.setStatus('mandatory')
nbRtAccPortVif64ExceedingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 20), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortVif64ExceedingBytes.setStatus('mandatory')
nbRtAccPortConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 21), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortConformingUcastPackets.setStatus('mandatory')
nbRtAccPortHighConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortHighConformingUcastPackets.setStatus('mandatory')
nbRtAccPortLowConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortLowConformingUcastPackets.setStatus('mandatory')
nbRtAccPort64ConformingUcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 24), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPort64ConformingUcastPackets.setStatus('mandatory')
nbRtAccPortConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 25), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortConformingMcastPackets.setStatus('mandatory')
nbRtAccPortHighConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortHighConformingMcastPackets.setStatus('mandatory')
nbRtAccPortLowConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortLowConformingMcastPackets.setStatus('mandatory')
nbRtAccPort64ConformingMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 28), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPort64ConformingMcastPackets.setStatus('mandatory')
nbRtAccPortConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 29), AccountCouter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortConformingBcastPackets.setStatus('mandatory')
nbRtAccPortHighConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortHighConformingBcastPackets.setStatus('mandatory')
nbRtAccPortLowConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPortLowConformingBcastPackets.setStatus('mandatory')
nbRtAccPort64ConformingBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 6, 12, 1, 32), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtAccPort64ConformingBcastPackets.setStatus('mandatory')
nbRtAccessLists = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 7))
nbAclVifTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 7, 5), )
if mibBuilder.loadTexts: nbAclVifTable.setStatus('mandatory')
nbAclVifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 7, 5, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifType"), (0, "RT-CFG-MIB", "nbVifDevNo"), (0, "RT-CFG-MIB", "nbVifIsAlias"), (0, "RT-CFG-MIB", "nbVifAliasDev"), (0, "RT-CFG-MIB", "nbAclVifDirection"), (0, "RT-CFG-MIB", "nbAclVifId"))
if mibBuilder.loadTexts: nbAclVifEntry.setStatus('mandatory')
nbAclVifDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 7, 5, 1, 5), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbAclVifDirection.setStatus('mandatory')
nbAclVifId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 7, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbAclVifId.setStatus('mandatory')
nbAclVifAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 7, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbAclVifAccessListName.setStatus('mandatory')
nbAclVifBindingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 7, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bind", 1), ("unbind", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbAclVifBindingStatus.setStatus('mandatory')
nbRtPortTagGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8))
nbRtPortTagTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5), )
if mibBuilder.loadTexts: nbRtPortTagTable.setStatus('mandatory')
nbRtPortTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtPortTagId"))
if mibBuilder.loadTexts: nbRtPortTagEntry.setStatus('mandatory')
nbRtPortTagId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPortTagId.setStatus('mandatory')
nbRtPortTagAwareMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("tagged", 2), ("untagged", 3), ("hybrid", 4), ("qInQtagged", 5), ("qInQuntagged", 6), ("qInQuntagged2", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPortTagAwareMode.setStatus('mandatory')
nbRtPortTagEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPortTagEtherType.setStatus('mandatory')
nbRtPortTagIpDefTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPortTagIpDefTag.setStatus('mandatory')
nbRtPortTagPortDefTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPortTagPortDefTag.setStatus('mandatory')
nbRtPortTagVmanDefTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPortTagVmanDefTag.setStatus('mandatory')
nbRtPortTagNumberOfTags = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPortTagNumberOfTags.setStatus('mandatory')
nbRtPortTagMplsForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 8, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("mplsForceTag", 2), ("noMplsForceTag", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPortTagMplsForceMode.setStatus('mandatory')
nbRtActionLists = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9))
nbRtActionListSupport = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtActionListSupport.setStatus('mandatory')
nbRtActionListTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 2), )
if mibBuilder.loadTexts: nbRtActionListTable.setStatus('mandatory')
nbRtActionListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 2, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtActionListName"))
if mibBuilder.loadTexts: nbRtActionListEntry.setStatus('mandatory')
nbRtActionListName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 2, 1, 1), ActionListName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtActionListName.setStatus('mandatory')
nbRtActionListAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtActionListAdminStatus.setStatus('mandatory')
nbRtActionListOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtActionListOperStatus.setStatus('mandatory')
nbRtActionListPoliceType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtActionListPoliceType.setStatus('mandatory')
nbRtActionListMplsType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtActionListMplsType.setStatus('mandatory')
nbRtPoliceAction = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3))
nbRtPoliceActionTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1), )
if mibBuilder.loadTexts: nbRtPoliceActionTable.setStatus('mandatory')
nbRtPoliceActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtPoliceActionName"))
if mibBuilder.loadTexts: nbRtPoliceActionEntry.setStatus('mandatory')
nbRtPoliceActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 1), ActionListName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionName.setStatus('mandatory')
nbRtPoliceActionOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("noREDnoCoS", 2), ("redTCPnoCoS", 3), ("redAllnoCoS", 4), ("coSaware", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceActionOperMode.setStatus('mandatory')
nbRtPoliceActionSharingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceActionSharingMode.setStatus('mandatory')
nbRtPoliceActionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceActionAdminStatus.setStatus('mandatory')
nbRtPoliceActionExceedCntAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3), ("pause", 4), ("resume", 5), ("clear", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceActionExceedCntAdminStatus.setStatus('mandatory')
nbRtPoliceActionExceedCntOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("active", 2), ("paused", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionExceedCntOperStatus.setStatus('mandatory')
nbRtPoliceActionTotalExceedBytesCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 7), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionTotalExceedBytesCnt.setStatus('mandatory')
nbRtPoliceActionTotalExceedFramesCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 8), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionTotalExceedFramesCnt.setStatus('mandatory')
nbRtPoliceActionTotalHighExceedBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionTotalHighExceedBytes32.setStatus('mandatory')
nbRtPoliceActionTotalLowExceedBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionTotalLowExceedBytes32.setStatus('mandatory')
nbRtPoliceActionTotalHighExceedFrames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionTotalHighExceedFrames32.setStatus('mandatory')
nbRtPoliceActionTotalLowExceedFrames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionTotalLowExceedFrames32.setStatus('mandatory')
nbRtPoliceRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2), )
if mibBuilder.loadTexts: nbRtPoliceRateLimitTable.setStatus('mandatory')
nbRtPoliceRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbRtPoliceRateLimitName"), (0, "RT-CFG-MIB", "nbRtPoliceRateLimitCoSlevel"))
if mibBuilder.loadTexts: nbRtPoliceRateLimitEntry.setStatus('mandatory')
nbRtPoliceRateLimitName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 1), ActionListName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitName.setStatus('mandatory')
nbRtPoliceRateLimitCoSlevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitCoSlevel.setStatus('mandatory')
nbRtPoliceRateLimitBuckRate = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceRateLimitBuckRate.setStatus('mandatory')
nbRtPoliceRateLimitBuckSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceRateLimitBuckSize.setStatus('mandatory')
nbRtPoliceRateLimitOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("other", 1), ("noREDnoCoS", 2), ("redTCPnoCoS", 3), ("redAllnoCoS", 4), ("coSnoRED", 5), ("coSguarantee", 6), ("coSREDtcp", 7), ("coSREDall", 8), ("coSguaranteeREDtcp", 9), ("coSguaranteeREDall", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceRateLimitOperMode.setStatus('mandatory')
nbRtPoliceRateLimitExceedBytesCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 6), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitExceedBytesCnt.setStatus('mandatory')
nbRtPoliceRateLimitExceedFramesCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 7), AccountCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitExceedFramesCnt.setStatus('mandatory')
nbRtPoliceRateLimitHighExceedBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitHighExceedBytes32.setStatus('mandatory')
nbRtPoliceRateLimitLowExceedBytes32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitLowExceedBytes32.setStatus('mandatory')
nbRtPoliceRateLimitHighExceedFrames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitHighExceedFrames32.setStatus('mandatory')
nbRtPoliceRateLimitLowExceedFrames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceRateLimitLowExceedFrames32.setStatus('mandatory')
nbRtPoliceActionVifTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 4), )
if mibBuilder.loadTexts: nbRtPoliceActionVifTable.setStatus('mandatory')
nbRtPoliceActionVifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 4, 1), ).setIndexNames((0, "RT-CFG-MIB", "nbVifType"), (0, "RT-CFG-MIB", "nbVifDevNo"), (0, "RT-CFG-MIB", "nbVifIsAlias"), (0, "RT-CFG-MIB", "nbVifAliasDev"), (0, "RT-CFG-MIB", "nbRtPoliceActionVifDirection"), (0, "RT-CFG-MIB", "nbRtPoliceActionVifName"))
if mibBuilder.loadTexts: nbRtPoliceActionVifEntry.setStatus('mandatory')
nbRtPoliceActionVifDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 4, 1, 1), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionVifDirection.setStatus('mandatory')
nbRtPoliceActionVifName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 4, 1, 2), ActionListName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbRtPoliceActionVifName.setStatus('mandatory')
nbRtPoliceActionVifPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 4, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceActionVifPortList.setStatus('mandatory')
nbRtPoliceActionVifBindingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("addNewBind", 1), ("unbind", 2), ("editExistingBind", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbRtPoliceActionVifBindingStatus.setStatus('mandatory')
nbRtMplsAction = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 5))
nbVifModify = NotificationType((1, 3, 6, 1, 4, 1, 629, 1, 50, 12) + (0,11)).setObjects(("RT-CFG-MIB", "nbVifDevName"), ("RT-CFG-MIB", "nbVifAdminStatus"), ("RT-CFG-MIB", "nbVifPhysType"), ("RT-CFG-MIB", "nbVifProtocol"), ("RT-CFG-MIB", "nbVifState"), ("RT-CFG-MIB", "nbVifName"), ("RT-CFG-MIB", "nbVifIpAddress"), ("RT-CFG-MIB", "nbVifMask"), ("RT-CFG-MIB", "nbVifPortList"), ("RT-CFG-MIB", "nbVifMac"), ("RT-CFG-MIB", "nbVifPeer"), ("RT-CFG-MIB", "nbVifConfigType"), ("RT-CFG-MIB", "nbVifSecurity"))
mibBuilder.exportSymbols("RT-CFG-MIB", nbVifMask=nbVifMask, nbRtDiffServTable=nbRtDiffServTable, nbAclVifDirection=nbAclVifDirection, nbRtAccPortExceedingBytes=nbRtAccPortExceedingBytes, nbRtDiffServVptMapPrflOutValue=nbRtDiffServVptMapPrflOutValue, nbVifAliasDLimitTable=nbVifAliasDLimitTable, nbRtDiffServVptMapPrflInValue=nbRtDiffServVptMapPrflInValue, nbRtAccVifLowExceedingBytes=nbRtAccVifLowExceedingBytes, nbRtActionListName=nbRtActionListName, nbRtAccVifConformingBcastPackets=nbRtAccVifConformingBcastPackets, nbRtDiffServDscpMapAdminStatus=nbRtDiffServDscpMapAdminStatus, nbRtDiffServDscpMapPrflTable=nbRtDiffServDscpMapPrflTable, nbVifAliasDev=nbVifAliasDev, nbRtPoliceActionSharingMode=nbRtPoliceActionSharingMode, nbRtDiffServVptMapName=nbRtDiffServVptMapName, nbRtVifDiffServBuckRate=nbRtVifDiffServBuckRate, nbRouterConfig=nbRouterConfig, nbRtAccVifHighExceedingPackets=nbRtAccVifHighExceedingPackets, nbRtAccPortVif64ExceedingBytes=nbRtAccPortVif64ExceedingBytes, nbRtPortTagEntry=nbRtPortTagEntry, nbVifDevNoMax=nbVifDevNoMax, nbRtPoliceActionVifPortList=nbRtPoliceActionVifPortList, nbRtAccVifLowConformingBytes=nbRtAccVifLowConformingBytes, nbRtPortTagIpDefTag=nbRtPortTagIpDefTag, nbRtVifPortId=nbRtVifPortId, nbRtAccPortHighConformingUcastPackets=nbRtAccPortHighConformingUcastPackets, AccountCounter64=AccountCounter64, nbRtDiffServDscpMapNameId=nbRtDiffServDscpMapNameId, nbRtAccVifPortEntry=nbRtAccVifPortEntry, nbRtPoliceRateLimitHighExceedBytes32=nbRtPoliceRateLimitHighExceedBytes32, nbRtAccPortVif64ConformingBytes=nbRtAccPortVif64ConformingBytes, nbRtVifSecurity=nbRtVifSecurity, nbRtPortTagEtherType=nbRtPortTagEtherType, nbVifDescr=nbVifDescr, nbRtPoliceActionTotalHighExceedFrames32=nbRtPoliceActionTotalHighExceedFrames32, DirectionType=DirectionType, nbRtDiffServDscpMapPrflOutValue=nbRtDiffServDscpMapPrflOutValue, nbRtDevDiffServMode=nbRtDevDiffServMode, nbRtAccPortAdminStatus=nbRtAccPortAdminStatus, nbVifL2SwitchingMode=nbVifL2SwitchingMode, nbVifTable=nbVifTable, nbRtAccVifEntry=nbRtAccVifEntry, AccountCouter=AccountCouter, nbVifDeviceLimitTable=nbVifDeviceLimitTable, nbVifIsTagged=nbVifIsTagged, nbRtDiffServVptMapPrflInValueId=nbRtDiffServVptMapPrflInValueId, nbRtAccVifConformingPackets=nbRtAccVifConformingPackets, nbRtVifMac=nbRtVifMac, nbRtAccVifHighConformingBytes=nbRtAccVifHighConformingBytes, nbRtAccVif64ExceedingBytes=nbRtAccVif64ExceedingBytes, nbRtAccPortLowConformingMcastPackets=nbRtAccPortLowConformingMcastPackets, nbVifDeviceLimitEntry=nbVifDeviceLimitEntry, nbRtAccPortOperStatus=nbRtAccPortOperStatus, nbRtAccVifConformingUcastPackets=nbRtAccVifConformingUcastPackets, nbRtActionListEntry=nbRtActionListEntry, nbRtFibEntryMetric=nbRtFibEntryMetric, nbVifName=nbVifName, nbRtPoliceActionVifName=nbRtPoliceActionVifName, nbRtPortTagMplsForceMode=nbRtPortTagMplsForceMode, nbRtVifPortList=nbRtVifPortList, nbRtAccPort64ConformingMcastPackets=nbRtAccPort64ConformingMcastPackets, nbRtAccVif64ConformingMcastPackets=nbRtAccVif64ConformingMcastPackets, nbRtAccVif64ConformingUcastPackets=nbRtAccVif64ConformingUcastPackets, nbRtFibEntryProtocol=nbRtFibEntryProtocol, nbRtAccVifHighConformingBcastPackets=nbRtAccVifHighConformingBcastPackets, nbVifPeer=nbVifPeer, nbVifSecurity=nbVifSecurity, nbRtAccVifTable=nbRtAccVifTable, nbRtActionListPoliceType=nbRtActionListPoliceType, nbVifDevNo=nbVifDevNo, nbRtMplsAction=nbRtMplsAction, nbRtFibEntryAdminStatus=nbRtFibEntryAdminStatus, nbRtAccPortConformingUcastPackets=nbRtAccPortConformingUcastPackets, nbRtAccVifLowConformingUcastPackets=nbRtAccVifLowConformingUcastPackets, nbRtPoliceActionExceedCntOperStatus=nbRtPoliceActionExceedCntOperStatus, nbRtVifDiffServRateLimitEntry=nbRtVifDiffServRateLimitEntry, nbRtAccPortLowExceedingBytes=nbRtAccPortLowExceedingBytes, nbRtPoliceRateLimitEntry=nbRtPoliceRateLimitEntry, nbRtVifProtocol=nbRtVifProtocol, nbRtPoliceRateLimitLowExceedBytes32=nbRtPoliceRateLimitLowExceedBytes32, nbRtVifDiffServRateLimitTable=nbRtVifDiffServRateLimitTable, nbRtAccVif64ConformingBytes=nbRtAccVif64ConformingBytes, nbRtAccPortHighConformingBytes=nbRtAccPortHighConformingBytes, nbRtAccPortHighConformingPackets=nbRtAccPortHighConformingPackets, nbRtVifIpAddress=nbRtVifIpAddress, nbRtAccPortExceedingPackets=nbRtAccPortExceedingPackets, nbRtAccPortLowConformingUcastPackets=nbRtAccPortLowConformingUcastPackets, nbVifPhysType=nbVifPhysType, nbRtAccounting=nbRtAccounting, nbRtPoliceActionVifEntry=nbRtPoliceActionVifEntry, nbRtAccPortLowConformingBytes=nbRtAccPortLowConformingBytes, nbRtAccPort64ConformingBcastPackets=nbRtAccPort64ConformingBcastPackets, nbRtVifTable=nbRtVifTable, nbVifAliasLimitDevNo=nbVifAliasLimitDevNo, nbRtAccVifAdminStatus=nbRtAccVifAdminStatus, nbVifPortList=nbVifPortList, nbVifDevNoMin=nbVifDevNoMin, nbRtPoliceRateLimitHighExceedFrames32=nbRtPoliceRateLimitHighExceedFrames32, nbRtAccVifConformingMcastPackets=nbRtAccVifConformingMcastPackets, nbRtDiffServVptMapTable=nbRtDiffServVptMapTable, nbRtPoliceRateLimitName=nbRtPoliceRateLimitName, nbRtPoliceRateLimitLowExceedFrames32=nbRtPoliceRateLimitLowExceedFrames32, nbRtPoliceActionVifDirection=nbRtPoliceActionVifDirection, nbVifConfigType=nbVifConfigType, nbRtAccVifHighConformingUcastPackets=nbRtAccVifHighConformingUcastPackets, nbRtFibNumEntries=nbRtFibNumEntries, nbRtPoliceRateLimitExceedBytesCnt=nbRtPoliceRateLimitExceedBytesCnt, nbRtAccPortConformingBytes=nbRtAccPortConformingBytes, nbRtAccVifLowConformingBcastPackets=nbRtAccVifLowConformingBcastPackets, MacAddress=MacAddress, nbRtDiffServDscpMapEntry=nbRtDiffServDscpMapEntry, nbRtAccVifLowConformingPackets=nbRtAccVifLowConformingPackets, nbSwitchG1=nbSwitchG1, nbVifMac=nbVifMac, nbRtAccPortHighConformingBcastPackets=nbRtAccPortHighConformingBcastPackets, nbAclVifAccessListName=nbAclVifAccessListName, nbRtVifId=nbRtVifId, nbRtPortTagVmanDefTag=nbRtPortTagVmanDefTag, nbRtActionListTable=nbRtActionListTable, nbRtActionListAdminStatus=nbRtActionListAdminStatus, nbRtDiffServ=nbRtDiffServ, nbRtAccPortConformingPackets=nbRtAccPortConformingPackets, nbRtPoliceActionAdminStatus=nbRtPoliceActionAdminStatus, nbRtActionListMplsType=nbRtActionListMplsType, nbRtPoliceRateLimitExceedFramesCnt=nbRtPoliceRateLimitExceedFramesCnt, nbVifAliasLimitType=nbVifAliasLimitType, nbRtActionListOperStatus=nbRtActionListOperStatus, nbRtPoliceActionTotalLowExceedFrames32=nbRtPoliceActionTotalLowExceedFrames32, nbRtPortTagGroup=nbRtPortTagGroup, nbRtAccPortConformingMcastPackets=nbRtAccPortConformingMcastPackets, nbRtVifConfigType=nbRtVifConfigType, nbRtAccPortLowExceedingPackets=nbRtAccPortLowExceedingPackets, nbRtDiffServVptMapPrflEntry=nbRtDiffServVptMapPrflEntry, nbVifProxyArpMode=nbVifProxyArpMode, nbVifAliasLimitDevAliasMax=nbVifAliasLimitDevAliasMax, nbVifProtocol=nbVifProtocol, nbRtAccPortHighExceedingPackets=nbRtAccPortHighExceedingPackets, nbRtPoliceRateLimitTable=nbRtPoliceRateLimitTable, nbVifIpAddress=nbVifIpAddress, nbRtPoliceActionOperMode=nbRtPoliceActionOperMode, nbRtDiffServVptMapNameIndex=nbRtDiffServVptMapNameIndex, nbRtDiffServVptMapPrflNameId=nbRtDiffServVptMapPrflNameId, nbVifModify=nbVifModify, nbRtAccPortLowConformingBcastPackets=nbRtAccPortLowConformingBcastPackets, nbRtVifDiffServDirect=nbRtVifDiffServDirect, nbRtDiffServVptMapPrflTable=nbRtDiffServVptMapPrflTable, nbRtAccVifPortTable=nbRtAccVifPortTable, nbRtAccPortHighConformingMcastPackets=nbRtAccPortHighConformingMcastPackets, nbRtFibTable=nbRtFibTable, nbVifIpOnlyMode=nbVifIpOnlyMode, nbRtVifGroup=nbRtVifGroup, nbRtDiffServDscpMapNameIndex=nbRtDiffServDscpMapNameIndex, nbRtDiffServDscpMapName=nbRtDiffServDscpMapName, nbRtDiffServDscpMapPrflInValue=nbRtDiffServDscpMapPrflInValue, nbRtPoliceRateLimitCoSlevel=nbRtPoliceRateLimitCoSlevel, nbRtDiffServMode=nbRtDiffServMode, nbRtDiffServDscpMapPrflNameId=nbRtDiffServDscpMapPrflNameId, nbAclVifEntry=nbAclVifEntry, nbRtPortTagAwareMode=nbRtPortTagAwareMode, nbRtVifTag=nbRtVifTag, nbRtAccessLists=nbRtAccessLists, nbRtDiffServVptMapNameId=nbRtDiffServVptMapNameId, nbRtAccVifExceedingPackets=nbRtAccVifExceedingPackets, nbRtAccVifLowExceedingPackets=nbRtAccVifLowExceedingPackets, nbRtAccPortConformingBcastPackets=nbRtAccPortConformingBcastPackets, nbRtPoliceActionTotalExceedBytesCnt=nbRtPoliceActionTotalExceedBytesCnt, nbRtPoliceActionExceedCntAdminStatus=nbRtPoliceActionExceedCntAdminStatus, nbRtDiffServDscpMapPrflEntry=nbRtDiffServDscpMapPrflEntry, nbRtActionListSupport=nbRtActionListSupport, nbRtPoliceActionTable=nbRtPoliceActionTable, nbase=nbase, nbRtDiffServVptMapPrflSl=nbRtDiffServVptMapPrflSl, nbRtDiffServDscpMapPrflSl=nbRtDiffServDscpMapPrflSl, nbRtVifAdminStatus=nbRtVifAdminStatus, nbVifAliasLimitDevAliasMin=nbVifAliasLimitDevAliasMin, nbVifAdminStatus=nbVifAdminStatus, nbVifAliasLimitDevAliasFirstEmpty=nbVifAliasLimitDevAliasFirstEmpty, nbRtPoliceRateLimitOperMode=nbRtPoliceRateLimitOperMode, nbRtFibEntryIpMask=nbRtFibEntryIpMask, nbRtVifDiffServAdminStatus=nbRtVifDiffServAdminStatus, nbRtFibEntryNextHop=nbRtFibEntryNextHop, nbRtDiffServDscpMapTable=nbRtDiffServDscpMapTable, nbVifTableSize=nbVifTableSize, nbVifIsAlias=nbVifIsAlias, nbRtDiffServDscpMapPrflInValueId=nbRtDiffServDscpMapPrflInValueId, nbSwitchG1Il=nbSwitchG1Il, nbRtVifMask=nbRtVifMask, nbRtAccVifDirection=nbRtAccVifDirection, ActionListName=ActionListName, nbVifDevNoFirstEmpty=nbVifDevNoFirstEmpty, nbRtPoliceActionEntry=nbRtPoliceActionEntry, nbVifLimitType=nbVifLimitType, nbRtFibEntryNextPort=nbRtFibEntryNextPort, nbRtAccVifLowConformingMcastPackets=nbRtAccVifLowConformingMcastPackets, nbVifLastChange=nbVifLastChange, nbRtAccVif64ConformingBcastPackets=nbRtAccVif64ConformingBcastPackets, nbRtFibEntryAge=nbRtFibEntryAge, nbRtAccVifOperStatus=nbRtAccVifOperStatus, nbRtPoliceActionName=nbRtPoliceActionName, nbVifIpForwardingMode=nbVifIpForwardingMode, nbRtDiffServVptMapEntry=nbRtDiffServVptMapEntry, nbRtPortTagId=nbRtPortTagId, nbRtPoliceActionTotalHighExceedBytes32=nbRtPoliceActionTotalHighExceedBytes32, nbRtAccPortHighExceedingBytes=nbRtAccPortHighExceedingBytes, nbRtPoliceActionTotalLowExceedBytes32=nbRtPoliceActionTotalLowExceedBytes32, nbRtVifIsTagged=nbRtVifIsTagged, nbRtFibEntryNextPhysAddress=nbRtFibEntryNextPhysAddress, nbVifState=nbVifState, nbRtVifName=nbRtVifName, nbRtVifDiffServBuckSize=nbRtVifDiffServBuckSize, nbRtPortTagPortDefTag=nbRtPortTagPortDefTag, nbRtConfigGen=nbRtConfigGen, nbRtAccVifExceedingBytes=nbRtAccVifExceedingBytes, nbRtPoliceActionTotalExceedFramesCnt=nbRtPoliceActionTotalExceedFramesCnt, nbRtDevDiffServMappingSupport=nbRtDevDiffServMappingSupport, nbRtVifEntry=nbRtVifEntry, nbVifAliasDLimitEntry=nbVifAliasDLimitEntry, nbRtPoliceRateLimitBuckRate=nbRtPoliceRateLimitBuckRate, nbRtPoliceRateLimitBuckSize=nbRtPoliceRateLimitBuckSize, nbRtDiffServVptMapAdminStatus=nbRtDiffServVptMapAdminStatus, nbRtDiffServDscpMapStatus=nbRtDiffServDscpMapStatus, nbRtDiffServMgmtDscpMapNameIndex=nbRtDiffServMgmtDscpMapNameIndex, nbRtAccVifHighExceedingBytes=nbRtAccVifHighExceedingBytes, nbRtPoliceAction=nbRtPoliceAction, nbRtFibEntryLastChTime=nbRtFibEntryLastChTime, nbRtAccPortLowConformingPackets=nbRtAccPortLowConformingPackets, nbRtPoliceActionVifBindingStatus=nbRtPoliceActionVifBindingStatus, nbAclVifId=nbAclVifId, nbRtVifDiffServREDmode=nbRtVifDiffServREDmode, nbRtDiffServEntry=nbRtDiffServEntry, nbAclVifBindingStatus=nbAclVifBindingStatus, nbRtPortTagTable=nbRtPortTagTable, nbRtFibEntryIpAddress=nbRtFibEntryIpAddress, nbRtPoliceActionVifTable=nbRtPoliceActionVifTable, nbRtFibEntryTag=nbRtFibEntryTag, nbRtAccVifConformingBytes=nbRtAccVifConformingBytes, nbVifEntry=nbVifEntry, nbRtAccVifHighConformingPackets=nbRtAccVifHighConformingPackets, nbRtAccPort64ConformingUcastPackets=nbRtAccPort64ConformingUcastPackets, nbRtDiffServVptMapStatus=nbRtDiffServVptMapStatus, nbAclVifTable=nbAclVifTable, nbRtDiffServMgmtVptMapNameIndex=nbRtDiffServMgmtVptMapNameIndex, nbRtActionLists=nbRtActionLists, nbVifTag=nbVifTag, nbVifType=nbVifType, nbRtFibEntry=nbRtFibEntry, nbVifDevName=nbVifDevName, nbRtPortTagNumberOfTags=nbRtPortTagNumberOfTags, nbRtAccVifHighConformingMcastPackets=nbRtAccVifHighConformingMcastPackets, nbRtFib=nbRtFib)
