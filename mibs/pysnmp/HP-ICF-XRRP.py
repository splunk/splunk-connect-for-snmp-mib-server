#
# PySNMP MIB module HP-ICF-XRRP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-XRRP
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
LastCreateTime, = mibBuilder.importSymbols("RMON2-MIB", "LastCreateTime")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, ObjectIdentity, Counter32, ModuleIdentity, IpAddress, Gauge32, Bits, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "ObjectIdentity", "Counter32", "ModuleIdentity", "IpAddress", "Gauge32", "Bits", "MibIdentifier", "Unsigned32")
TextualConvention, TimeStamp, MacAddress, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "MacAddress", "RowStatus", "DisplayString")
hpicfXrrpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18))
hpicfXrrpMIB.setRevisions(('2005-08-05 00:00', '2004-10-20 00:00', '2002-08-19 00:00',))
if mibBuilder.loadTexts: hpicfXrrpMIB.setLastUpdated('200508050000Z')
if mibBuilder.loadTexts: hpicfXrrpMIB.setOrganization('HP Networking')
class XrrpRouterId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

hpicfXrrpOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2))
hpicfXrrpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3))
hpicfXrrpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4))
hpicfXrrpVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpVersion.setStatus('current')
hpicfXrrpAdminState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfXrrpAdminState.setStatus('current')
hpicfXrrpDomain = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfXrrpDomain.setStatus('current')
hpicfXrrpRouterId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 4), XrrpRouterId().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfXrrpRouterId.setStatus('current')
hpicfXrrpFailback = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 999)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfXrrpFailback.setStatus('current')
hpicfXrrpTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 6), Bits().clone(namedValues=NamedValues(("stateChange", 0), ("masterState", 1), ("authFailure", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfXrrpTrapCntl.setStatus('current')
hpicfXrrpInstancesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7), )
if mibBuilder.loadTexts: hpicfXrrpInstancesTable.setStatus('current')
hpicfXrrpInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1), ).setIndexNames((0, "HP-ICF-XRRP", "hpicfXrrpInstanceRouterId"), (0, "HP-ICF-XRRP", "hpicfXrrpInstanceVlanId"))
if mibBuilder.loadTexts: hpicfXrrpInstanceEntry.setStatus('current')
hpicfXrrpInstanceRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 1), XrrpRouterId())
if mibBuilder.loadTexts: hpicfXrrpInstanceRouterId.setStatus('current')
hpicfXrrpInstanceVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 2), VlanId())
if mibBuilder.loadTexts: hpicfXrrpInstanceVlanId.setStatus('current')
hpicfXrrpInstanceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initialize", 1), ("backup", 2), ("master", 3), ("vlandown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpInstanceOperState.setStatus('current')
hpicfXrrpInstanceAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAuthentication", 1), ("simpleTextPassword", 2))).clone('noAuthentication')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfXrrpInstanceAuthType.setStatus('current')
hpicfXrrpInstanceAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfXrrpInstanceAuthKey.setStatus('current')
hpicfXrrpInstanceAdvertiseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfXrrpInstanceAdvertiseInterval.setStatus('current')
hpicfXrrpInstanceUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpInstanceUpTime.setStatus('current')
hpicfXrrpInstanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfXrrpInstanceRowStatus.setStatus('current')
hpicfXrrpInstanceAssoIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8), )
if mibBuilder.loadTexts: hpicfXrrpInstanceAssoIpAddrTable.setStatus('current')
hpicfXrrpInstanceAssoIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1), ).setIndexNames((0, "HP-ICF-XRRP", "hpicfXrrpInstanceRouterId"), (0, "HP-ICF-XRRP", "hpicfXrrpInstanceVlanId"), (0, "HP-ICF-XRRP", "hpicfXrrpAssoIpAddr"))
if mibBuilder.loadTexts: hpicfXrrpInstanceAssoIpAddrEntry.setStatus('current')
hpicfXrrpAssoIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpicfXrrpAssoIpAddr.setStatus('current')
hpicfXrrpAssoIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfXrrpAssoIpMask.setStatus('current')
hpicfXrrpAssoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfXrrpAssoRowStatus.setStatus('current')
hpicfXrrpTransferControl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transferCtrl", 1), ("notransferCtrl", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfXrrpTransferControl.setStatus('current')
hpicfXrrpInfiniteFailback = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfXrrpInfiniteFailback.setStatus('current')
hpicfXrrpStatsXrrpMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsXrrpMacAddress.setStatus('current')
hpicfXrrpStatsMacAndMask = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsMacAndMask.setStatus('current')
hpicfXrrpStatsPktsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsPktsRcvd.setStatus('current')
hpicfXrrpStatsNotDomainPktsReject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsNotDomainPktsReject.setStatus('current')
hpicfXrrpStatsCheckSumPktsReject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsCheckSumPktsReject.setStatus('current')
hpicfXrrpStatsBadValuePktsReject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsBadValuePktsReject.setStatus('current')
hpicfXrrpStatsCorruptedPktsReject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsCorruptedPktsReject.setStatus('current')
hpicfXrrpStatsVersionErrorPktsReject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsVersionErrorPktsReject.setStatus('current')
hpicfXrrpStatsBcastArpsXmtd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsBcastArpsXmtd.setStatus('current')
hpicfXrrpStatsUpTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsUpTime.setStatus('current')
hpicfXrrpStatsProtocolCreateTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 11), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsProtocolCreateTime.setStatus('current')
hpicfXrrpStatsInstancesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12), )
if mibBuilder.loadTexts: hpicfXrrpStatsInstancesTable.setStatus('current')
hpicfXrrpStatsInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1), ).setIndexNames((0, "HP-ICF-XRRP", "hpicfXrrpInstanceRouterId"), (0, "HP-ICF-XRRP", "hpicfXrrpInstanceVlanId"))
if mibBuilder.loadTexts: hpicfXrrpStatsInstanceEntry.setStatus('current')
hpicfXrrpStatsInstancePktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstancePktsRcvd.setStatus('current')
hpicfXrrpStatsInstancePktsXmtd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstancePktsXmtd.setStatus('current')
hpicfXrrpStatsInstanceVersionErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstanceVersionErrPkts.setStatus('current')
hpicfXrrpStatsInstancePriorityZeroPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstancePriorityZeroPktsRcvd.setStatus('current')
hpicfXrrpStatsInstancePriorityZeroPktsXmtd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstancePriorityZeroPktsXmtd.setStatus('current')
hpicfXrrpStatsInstanceMismatchedIpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstanceMismatchedIpPkts.setStatus('current')
hpicfXrrpStatsInstanceAuthFailPktsReject = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstanceAuthFailPktsReject.setStatus('current')
hpicfXrrpStatsInstanceIntervalMismatchPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstanceIntervalMismatchPkts.setStatus('current')
hpicfXrrpStatsInstanceCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 12, 1, 9), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsInstanceCreateTime.setStatus('current')
hpicfXrrpStatsRcTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13), )
if mibBuilder.loadTexts: hpicfXrrpStatsRcTable.setStatus('current')
hpicfXrrpStatsRcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1), ).setIndexNames((0, "HP-ICF-XRRP", "hpicfXrrpStatsRcRouterId"))
if mibBuilder.loadTexts: hpicfXrrpStatsRcEntry.setStatus('current')
hpicfXrrpStatsRcRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 1), XrrpRouterId())
if mibBuilder.loadTexts: hpicfXrrpStatsRcRouterId.setStatus('current')
hpicfXrrpStatsRcOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initialize", 1), ("backup", 2), ("master", 3), ("failback", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcOperState.setStatus('current')
hpicfXrrpStatsRcType1PktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcType1PktsRcvd.setStatus('current')
hpicfXrrpStatsRcType1PktsXmtd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcType1PktsXmtd.setStatus('current')
hpicfXrrpStatsRcType2PktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcType2PktsRcvd.setStatus('current')
hpicfXrrpStatsRcType2PktsXmtd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcType2PktsXmtd.setStatus('current')
hpicfXrrpStatsRcBecomeMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcBecomeMaster.setStatus('current')
hpicfXrrpStatsRcMasterTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcMasterTime.setStatus('current')
hpicfXrrpStatsRcUnknownVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcUnknownVlanId.setStatus('current')
hpicfXrrpStatsRcCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 3, 13, 1, 10), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfXrrpStatsRcCreateTime.setStatus('current')
hpicfXrrpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1))
hpicfXrrpNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 0))
hpicfXrrpNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 1))
hpicfXrrpTrapAuthErrorType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalidAuthType", 1), ("authTypeMismatch", 2), ("authFailure", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfXrrpTrapAuthErrorType.setStatus('current')
hpicfXrrpTrapStateChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 0, 1)).setObjects(("HP-ICF-XRRP", "hpicfXrrpDomain"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcRouterId"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcOperState"))
if mibBuilder.loadTexts: hpicfXrrpTrapStateChange.setStatus('current')
hpicfXrrpTrapAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 1, 0, 2)).setObjects(("HP-ICF-XRRP", "hpicfXrrpDomain"), ("HP-ICF-XRRP", "hpicfXrrpRouterId"), ("HP-ICF-XRRP", "hpicfXrrpInstanceRouterId"), ("HP-ICF-XRRP", "hpicfXrrpInstanceVlanId"), ("HP-ICF-XRRP", "hpicfXrrpTrapAuthErrorType"))
if mibBuilder.loadTexts: hpicfXrrpTrapAuthFailure.setStatus('current')
hpicfXrrpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 1))
hpicfXrrpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2))
hpicfXrrpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 1, 1)).setObjects(("HP-ICF-XRRP", "hpicfXrrpOperGroup"), ("HP-ICF-XRRP", "hpicfXrrpStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpMIBCompliance = hpicfXrrpMIBCompliance.setStatus('deprecated')
hpicfXrrpMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 1, 2)).setObjects(("HP-ICF-XRRP", "hpicfXrrpOperGroup1"), ("HP-ICF-XRRP", "hpicfXrrpStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpMIBCompliance1 = hpicfXrrpMIBCompliance1.setStatus('current')
hpicfXrrpMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 1, 3)).setObjects(("HP-ICF-XRRP", "hpicfXrrpOperGroup1"), ("HP-ICF-XRRP", "hpicfXrrpOperGroup2"), ("HP-ICF-XRRP", "hpicfXrrpStatsGroup"), ("HP-ICF-XRRP", "hpicfXrrpNotificationGroup"), ("HP-ICF-XRRP", "hpicfXrrpTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpMIBCompliance2 = hpicfXrrpMIBCompliance2.setStatus('current')
hpicfXrrpOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 1)).setObjects(("HP-ICF-XRRP", "hpicfXrrpVersion"), ("HP-ICF-XRRP", "hpicfXrrpAdminState"), ("HP-ICF-XRRP", "hpicfXrrpDomain"), ("HP-ICF-XRRP", "hpicfXrrpRouterId"), ("HP-ICF-XRRP", "hpicfXrrpTrapCntl"), ("HP-ICF-XRRP", "hpicfXrrpInstanceOperState"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAuthType"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAuthKey"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAdvertiseInterval"), ("HP-ICF-XRRP", "hpicfXrrpInstanceUpTime"), ("HP-ICF-XRRP", "hpicfXrrpInstanceRowStatus"), ("HP-ICF-XRRP", "hpicfXrrpAssoIpMask"), ("HP-ICF-XRRP", "hpicfXrrpAssoRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpOperGroup = hpicfXrrpOperGroup.setStatus('deprecated')
hpicfXrrpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 2)).setObjects(("HP-ICF-XRRP", "hpicfXrrpStatsXrrpMacAddress"), ("HP-ICF-XRRP", "hpicfXrrpStatsMacAndMask"), ("HP-ICF-XRRP", "hpicfXrrpStatsPktsRcvd"), ("HP-ICF-XRRP", "hpicfXrrpStatsNotDomainPktsReject"), ("HP-ICF-XRRP", "hpicfXrrpStatsCheckSumPktsReject"), ("HP-ICF-XRRP", "hpicfXrrpStatsBadValuePktsReject"), ("HP-ICF-XRRP", "hpicfXrrpStatsCorruptedPktsReject"), ("HP-ICF-XRRP", "hpicfXrrpStatsVersionErrorPktsReject"), ("HP-ICF-XRRP", "hpicfXrrpStatsBcastArpsXmtd"), ("HP-ICF-XRRP", "hpicfXrrpStatsUpTime"), ("HP-ICF-XRRP", "hpicfXrrpStatsProtocolCreateTime"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstancePktsRcvd"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstancePktsXmtd"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstanceVersionErrPkts"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstancePriorityZeroPktsRcvd"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstancePriorityZeroPktsXmtd"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstanceMismatchedIpPkts"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstanceAuthFailPktsReject"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstanceIntervalMismatchPkts"), ("HP-ICF-XRRP", "hpicfXrrpStatsInstanceCreateTime"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcOperState"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcType1PktsRcvd"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcType1PktsXmtd"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcType2PktsRcvd"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcType2PktsXmtd"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcBecomeMaster"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcMasterTime"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcUnknownVlanId"), ("HP-ICF-XRRP", "hpicfXrrpStatsRcCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpStatsGroup = hpicfXrrpStatsGroup.setStatus('current')
hpicfXrrpTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 3)).setObjects(("HP-ICF-XRRP", "hpicfXrrpTrapAuthErrorType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpTrapGroup = hpicfXrrpTrapGroup.setStatus('current')
hpicfXrrpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 4)).setObjects(("HP-ICF-XRRP", "hpicfXrrpTrapStateChange"), ("HP-ICF-XRRP", "hpicfXrrpTrapAuthFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpNotificationGroup = hpicfXrrpNotificationGroup.setStatus('current')
hpicfXrrpOperGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 5)).setObjects(("HP-ICF-XRRP", "hpicfXrrpVersion"), ("HP-ICF-XRRP", "hpicfXrrpAdminState"), ("HP-ICF-XRRP", "hpicfXrrpDomain"), ("HP-ICF-XRRP", "hpicfXrrpRouterId"), ("HP-ICF-XRRP", "hpicfXrrpTrapCntl"), ("HP-ICF-XRRP", "hpicfXrrpInstanceOperState"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAuthType"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAuthKey"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAdvertiseInterval"), ("HP-ICF-XRRP", "hpicfXrrpInstanceUpTime"), ("HP-ICF-XRRP", "hpicfXrrpInstanceRowStatus"), ("HP-ICF-XRRP", "hpicfXrrpAssoIpMask"), ("HP-ICF-XRRP", "hpicfXrrpAssoRowStatus"), ("HP-ICF-XRRP", "hpicfXrrpTransferControl"), ("HP-ICF-XRRP", "hpicfXrrpInfiniteFailback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpOperGroup1 = hpicfXrrpOperGroup1.setStatus('current')
hpicfXrrpOperGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18, 4, 2, 6)).setObjects(("HP-ICF-XRRP", "hpicfXrrpVersion"), ("HP-ICF-XRRP", "hpicfXrrpAdminState"), ("HP-ICF-XRRP", "hpicfXrrpDomain"), ("HP-ICF-XRRP", "hpicfXrrpRouterId"), ("HP-ICF-XRRP", "hpicfXrrpFailback"), ("HP-ICF-XRRP", "hpicfXrrpTrapCntl"), ("HP-ICF-XRRP", "hpicfXrrpInstanceOperState"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAuthType"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAuthKey"), ("HP-ICF-XRRP", "hpicfXrrpInstanceAdvertiseInterval"), ("HP-ICF-XRRP", "hpicfXrrpInstanceUpTime"), ("HP-ICF-XRRP", "hpicfXrrpInstanceRowStatus"), ("HP-ICF-XRRP", "hpicfXrrpAssoIpMask"), ("HP-ICF-XRRP", "hpicfXrrpAssoRowStatus"), ("HP-ICF-XRRP", "hpicfXrrpTransferControl"), ("HP-ICF-XRRP", "hpicfXrrpInfiniteFailback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfXrrpOperGroup2 = hpicfXrrpOperGroup2.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-XRRP", hpicfXrrpStatsInstancePktsRcvd=hpicfXrrpStatsInstancePktsRcvd, hpicfXrrpInstanceVlanId=hpicfXrrpInstanceVlanId, hpicfXrrpStatsUpTime=hpicfXrrpStatsUpTime, hpicfXrrpStatistics=hpicfXrrpStatistics, hpicfXrrpTrapStateChange=hpicfXrrpTrapStateChange, hpicfXrrpStatsInstanceVersionErrPkts=hpicfXrrpStatsInstanceVersionErrPkts, hpicfXrrpStatsCheckSumPktsReject=hpicfXrrpStatsCheckSumPktsReject, hpicfXrrpStatsMacAndMask=hpicfXrrpStatsMacAndMask, hpicfXrrpStatsInstanceAuthFailPktsReject=hpicfXrrpStatsInstanceAuthFailPktsReject, hpicfXrrpStatsRcBecomeMaster=hpicfXrrpStatsRcBecomeMaster, hpicfXrrpFailback=hpicfXrrpFailback, hpicfXrrpStatsRcType1PktsRcvd=hpicfXrrpStatsRcType1PktsRcvd, hpicfXrrpInstanceEntry=hpicfXrrpInstanceEntry, hpicfXrrpInfiniteFailback=hpicfXrrpInfiniteFailback, hpicfXrrpRouterId=hpicfXrrpRouterId, hpicfXrrpAdminState=hpicfXrrpAdminState, hpicfXrrpNotificationsPrefix=hpicfXrrpNotificationsPrefix, hpicfXrrpStatsRcCreateTime=hpicfXrrpStatsRcCreateTime, hpicfXrrpDomain=hpicfXrrpDomain, hpicfXrrpStatsCorruptedPktsReject=hpicfXrrpStatsCorruptedPktsReject, hpicfXrrpAssoIpAddr=hpicfXrrpAssoIpAddr, XrrpRouterId=XrrpRouterId, hpicfXrrpStatsRcEntry=hpicfXrrpStatsRcEntry, hpicfXrrpTrapCntl=hpicfXrrpTrapCntl, hpicfXrrpStatsRcType2PktsXmtd=hpicfXrrpStatsRcType2PktsXmtd, hpicfXrrpMIBCompliances=hpicfXrrpMIBCompliances, hpicfXrrpAssoRowStatus=hpicfXrrpAssoRowStatus, hpicfXrrpNotificationGroup=hpicfXrrpNotificationGroup, hpicfXrrpStatsRcTable=hpicfXrrpStatsRcTable, hpicfXrrpMIBGroups=hpicfXrrpMIBGroups, hpicfXrrpStatsRcMasterTime=hpicfXrrpStatsRcMasterTime, hpicfXrrpMIBCompliance2=hpicfXrrpMIBCompliance2, hpicfXrrpStatsRcRouterId=hpicfXrrpStatsRcRouterId, hpicfXrrpNotifications=hpicfXrrpNotifications, hpicfXrrpInstanceOperState=hpicfXrrpInstanceOperState, hpicfXrrpInstanceAssoIpAddrTable=hpicfXrrpInstanceAssoIpAddrTable, hpicfXrrpStatsInstanceCreateTime=hpicfXrrpStatsInstanceCreateTime, hpicfXrrpInstanceAssoIpAddrEntry=hpicfXrrpInstanceAssoIpAddrEntry, hpicfXrrpConformance=hpicfXrrpConformance, hpicfXrrpInstanceAuthKey=hpicfXrrpInstanceAuthKey, hpicfXrrpStatsProtocolCreateTime=hpicfXrrpStatsProtocolCreateTime, hpicfXrrpMIBCompliance1=hpicfXrrpMIBCompliance1, hpicfXrrpStatsInstancesTable=hpicfXrrpStatsInstancesTable, hpicfXrrpNotificationsObjects=hpicfXrrpNotificationsObjects, hpicfXrrpInstanceRowStatus=hpicfXrrpInstanceRowStatus, hpicfXrrpVersion=hpicfXrrpVersion, hpicfXrrpTransferControl=hpicfXrrpTransferControl, hpicfXrrpOperGroup2=hpicfXrrpOperGroup2, hpicfXrrpStatsVersionErrorPktsReject=hpicfXrrpStatsVersionErrorPktsReject, hpicfXrrpStatsInstancePktsXmtd=hpicfXrrpStatsInstancePktsXmtd, hpicfXrrpStatsInstanceIntervalMismatchPkts=hpicfXrrpStatsInstanceIntervalMismatchPkts, hpicfXrrpInstanceRouterId=hpicfXrrpInstanceRouterId, hpicfXrrpStatsRcType1PktsXmtd=hpicfXrrpStatsRcType1PktsXmtd, hpicfXrrpStatsInstanceMismatchedIpPkts=hpicfXrrpStatsInstanceMismatchedIpPkts, hpicfXrrpStatsBadValuePktsReject=hpicfXrrpStatsBadValuePktsReject, hpicfXrrpStatsRcType2PktsRcvd=hpicfXrrpStatsRcType2PktsRcvd, hpicfXrrpStatsRcOperState=hpicfXrrpStatsRcOperState, hpicfXrrpStatsNotDomainPktsReject=hpicfXrrpStatsNotDomainPktsReject, hpicfXrrpTrapAuthErrorType=hpicfXrrpTrapAuthErrorType, hpicfXrrpMIB=hpicfXrrpMIB, hpicfXrrpAssoIpMask=hpicfXrrpAssoIpMask, hpicfXrrpMIBCompliance=hpicfXrrpMIBCompliance, hpicfXrrpOperGroup1=hpicfXrrpOperGroup1, hpicfXrrpStatsInstanceEntry=hpicfXrrpStatsInstanceEntry, hpicfXrrpOperations=hpicfXrrpOperations, hpicfXrrpInstancesTable=hpicfXrrpInstancesTable, hpicfXrrpStatsInstancePriorityZeroPktsXmtd=hpicfXrrpStatsInstancePriorityZeroPktsXmtd, hpicfXrrpTrapAuthFailure=hpicfXrrpTrapAuthFailure, hpicfXrrpInstanceUpTime=hpicfXrrpInstanceUpTime, hpicfXrrpTrapGroup=hpicfXrrpTrapGroup, hpicfXrrpStatsBcastArpsXmtd=hpicfXrrpStatsBcastArpsXmtd, hpicfXrrpStatsPktsRcvd=hpicfXrrpStatsPktsRcvd, hpicfXrrpInstanceAuthType=hpicfXrrpInstanceAuthType, hpicfXrrpInstanceAdvertiseInterval=hpicfXrrpInstanceAdvertiseInterval, hpicfXrrpStatsInstancePriorityZeroPktsRcvd=hpicfXrrpStatsInstancePriorityZeroPktsRcvd, PYSNMP_MODULE_ID=hpicfXrrpMIB, hpicfXrrpStatsGroup=hpicfXrrpStatsGroup, hpicfXrrpOperGroup=hpicfXrrpOperGroup, hpicfXrrpStatsRcUnknownVlanId=hpicfXrrpStatsRcUnknownVlanId, hpicfXrrpStatsXrrpMacAddress=hpicfXrrpStatsXrrpMacAddress)
