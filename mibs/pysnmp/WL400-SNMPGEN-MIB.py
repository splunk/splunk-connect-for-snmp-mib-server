#
# PySNMP MIB module WL400-SNMPGEN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WL400-SNMPGEN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, NotificationType, ModuleIdentity, ObjectIdentity, Gauge32, Counter32, Counter64, MibIdentifier, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Gauge32", "Counter32", "Counter64", "MibIdentifier", "iso", "IpAddress")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
wl400Modules, wl400Generic = mibBuilder.importSymbols("WL400-GLOBAL-REG", "wl400Modules", "wl400Generic")
snmpGenMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 232, 143, 1, 3))
if mibBuilder.loadTexts: snmpGenMIBModule.setLastUpdated('9905260000Z')
if mibBuilder.loadTexts: snmpGenMIBModule.setOrganization('Compaq Computer Corporation')
snmpGenMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 144, 1))
snmpGenConf = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 144, 1, 1))
snmpGenGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 144, 1, 1, 1))
snmpGenCompl = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 144, 1, 1, 2))
snmpGenObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 144, 1, 2))
snmpGenReadCommunityString = MibScalar((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGenReadCommunityString.setStatus('current')
snmpGenWriteCommunityString = MibScalar((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGenWriteCommunityString.setStatus('current')
snmpGenTrapDstMaxTableLength = MibScalar((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpGenTrapDstMaxTableLength.setStatus('current')
snmpGenTrapDstTable = MibTable((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 4), )
if mibBuilder.loadTexts: snmpGenTrapDstTable.setStatus('current')
snmpGenTrapDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 4, 1), ).setIndexNames((0, "WL400-SNMPGEN-MIB", "snmpGenTrapDstIndex"))
if mibBuilder.loadTexts: snmpGenTrapDstEntry.setStatus('current')
snmpGenTrapDstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: snmpGenTrapDstIndex.setStatus('current')
snmpGenTrapDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpGenTrapDstIpAddress.setStatus('current')
snmpGenTrapDstType = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("trapOnly", 1), ("syslogOnly", 2), ("trapAndSyslog", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpGenTrapDstType.setStatus('current')
snmpGenTrapDstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpGenTrapDstRowStatus.setStatus('current')
snmpGenLockStatus = MibScalar((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("locked", 1), ("unlocked", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGenLockStatus.setStatus('current')
snmpGenChangeIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGenChangeIPAddress.setStatus('current')
snmpGenUseDHCP = MibScalar((1, 3, 6, 1, 4, 1, 232, 144, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("always", 1), ("smart", 2), ("never", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGenUseDHCP.setStatus('current')
snmpGenBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 232, 144, 1, 1, 1, 1)).setObjects(("WL400-SNMPGEN-MIB", "snmpGenReadCommunityString"), ("WL400-SNMPGEN-MIB", "snmpGenWriteCommunityString"), ("WL400-SNMPGEN-MIB", "snmpGenTrapDstMaxTableLength"), ("WL400-SNMPGEN-MIB", "snmpGenTrapDstIpAddress"), ("WL400-SNMPGEN-MIB", "snmpGenTrapDstType"), ("WL400-SNMPGEN-MIB", "snmpGenTrapDstRowStatus"), ("WL400-SNMPGEN-MIB", "snmpGenLockStatus"), ("WL400-SNMPGEN-MIB", "snmpGenChangeIPAddress"), ("WL400-SNMPGEN-MIB", "snmpGenUseDHCP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snmpGenBasicGroup = snmpGenBasicGroup.setStatus('current')
snmpGenBasicCompl = ModuleCompliance((1, 3, 6, 1, 4, 1, 232, 144, 1, 1, 2, 1)).setObjects(("WL400-SNMPGEN-MIB", "snmpGenBasicGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snmpGenBasicCompl = snmpGenBasicCompl.setStatus('current')
mibBuilder.exportSymbols("WL400-SNMPGEN-MIB", snmpGenTrapDstRowStatus=snmpGenTrapDstRowStatus, snmpGenWriteCommunityString=snmpGenWriteCommunityString, snmpGenObjs=snmpGenObjs, snmpGenUseDHCP=snmpGenUseDHCP, snmpGenMIB=snmpGenMIB, snmpGenTrapDstTable=snmpGenTrapDstTable, snmpGenMIBModule=snmpGenMIBModule, snmpGenTrapDstIndex=snmpGenTrapDstIndex, snmpGenCompl=snmpGenCompl, snmpGenTrapDstIpAddress=snmpGenTrapDstIpAddress, snmpGenTrapDstMaxTableLength=snmpGenTrapDstMaxTableLength, snmpGenBasicCompl=snmpGenBasicCompl, snmpGenTrapDstEntry=snmpGenTrapDstEntry, snmpGenTrapDstType=snmpGenTrapDstType, snmpGenBasicGroup=snmpGenBasicGroup, snmpGenConf=snmpGenConf, snmpGenLockStatus=snmpGenLockStatus, PYSNMP_MODULE_ID=snmpGenMIBModule, snmpGenGroups=snmpGenGroups, snmpGenReadCommunityString=snmpGenReadCommunityString, snmpGenChangeIPAddress=snmpGenChangeIPAddress)
