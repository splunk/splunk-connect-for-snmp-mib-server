#
# PySNMP MIB module ASCEND-ADSL-CAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-ADSL-CAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:09:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wanTypeAdslCap, = mibBuilder.importSymbols("ASCEND-WAN-MIB", "wanTypeAdslCap")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Bits, Integer32, Counter32, MibIdentifier, Gauge32, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Bits", "Integer32", "Counter32", "MibIdentifier", "Gauge32", "Unsigned32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
adslCapLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 4, 9, 1), )
if mibBuilder.loadTexts: adslCapLineStatusTable.setStatus('mandatory')
adslCapLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1), ).setIndexNames((0, "ASCEND-ADSL-CAP-MIB", "adslCapStatusIfEntryIndex"))
if mibBuilder.loadTexts: adslCapLineStatusEntry.setStatus('mandatory')
adslCapStatusIfEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusIfEntryIndex.setStatus('mandatory')
adslCapStatusShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusShelfIndex.setStatus('mandatory')
adslCapStatusSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusSlotIndex.setStatus('mandatory')
adslCapStatusLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusLineIndex.setStatus('mandatory')
adslCapStatusUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("coe", 2), ("cpe", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusUnitType.setStatus('mandatory')
adslCapStatusLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("other", 1), ("configure", 2), ("deactivate", 3), ("deactive-lost", 4), ("start-up", 5), ("pend-port-up", 6), ("up", 7), ("pend-deactivate", 8), ("out-of-service", 9), ("analog-loopback", 10), ("digital-loopback", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusLineState.setStatus('mandatory')
adslCapStatusUpRate = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1088000, 952000, 816000, 680000, 544000, 408000, 272000))).clone(namedValues=NamedValues(("m1088000", 1088000), ("k952000", 952000), ("k816000", 816000), ("k680000", 680000), ("k544000", 544000), ("k408000", 408000), ("k272000", 272000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adslCapStatusUpRate.setStatus('mandatory')
adslCapStatusDownRate = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7168000, 6272000, 5120000, 4480000, 3200000, 2688000, 2560000, 2240000, 1920000, 1600000, 1280000, 960000, 640000))).clone(namedValues=NamedValues(("m7168000", 7168000), ("m6272000", 6272000), ("m5120000", 5120000), ("m4480000", 4480000), ("m3200000", 3200000), ("m2688000", 2688000), ("m2560000", 2560000), ("m2240000", 2240000), ("m1920000", 1920000), ("m1600000", 1600000), ("m1280000", 1280000), ("k960000", 960000), ("k640000", 640000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adslCapStatusDownRate.setStatus('mandatory')
adslCapStatusVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusVendorId.setStatus('mandatory')
adslCapStatusMajorFirmWareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusMajorFirmWareVer.setStatus('mandatory')
adslCapStatusMinorFirmWareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusMinorFirmWareVer.setStatus('mandatory')
adslCapStatusHardWareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatusHardWareVer.setStatus('mandatory')
adslCapLineStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 529, 4, 9, 2), )
if mibBuilder.loadTexts: adslCapLineStatisticTable.setStatus('mandatory')
adslCapLineStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1), ).setIndexNames((0, "ASCEND-ADSL-CAP-MIB", "adslCapStatIfEntryIndex"))
if mibBuilder.loadTexts: adslCapLineStatisticEntry.setStatus('mandatory')
adslCapStatIfEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatIfEntryIndex.setStatus('mandatory')
adslCapStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatShelfIndex.setStatus('mandatory')
adslCapStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatSlotIndex.setStatus('mandatory')
adslCapStatLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatLineIndex.setStatus('mandatory')
adslCapStatConnUpDays = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatConnUpDays.setStatus('mandatory')
adslCapStatConnUpHours = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatConnUpHours.setStatus('mandatory')
adslCapStatConnUpMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatConnUpMinutes.setStatus('mandatory')
adslCapStatRxSignalPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatRxSignalPresent.setStatus('mandatory')
adslCapStatLineQualityDb = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatLineQualityDb.setStatus('mandatory')
adslCapStatUpDwnCntr = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatUpDwnCntr.setStatus('mandatory')
adslCapStatLineSelfTest = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 1, 2, 3))).clone(namedValues=NamedValues(("other", 4), ("selfTestFailed", 1), ("localLoopBackFailed", 2), ("passed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatLineSelfTest.setStatus('mandatory')
adslCapStatBertTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("one-minute", 1), ("two-minutes", 2), ("three-minutes", 3), ("four-minutes", 4), ("five-minutes", 5), ("ten-minutes", 6), ("fifteen-minutes", 7), ("twenty-minutes", 8), ("thirty-minutes", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adslCapStatBertTimer.setStatus('mandatory')
adslCapStatBertEna = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adslCapStatBertEna.setStatus('mandatory')
adslCapStatBertState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("waiting-for-511-sync", 1), ("local-loop-active", 2), ("active", 3), ("stopped", 4), ("loop-back-setup", 5), ("start-up", 6), ("data-overflow", 7), ("ber-sync-loss", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatBertState.setStatus('mandatory')
adslCapStatBertErrorCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 9, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslCapStatBertErrorCounter.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-ADSL-CAP-MIB", adslCapStatusHardWareVer=adslCapStatusHardWareVer, adslCapStatBertEna=adslCapStatBertEna, adslCapStatBertTimer=adslCapStatBertTimer, adslCapStatLineSelfTest=adslCapStatLineSelfTest, adslCapStatLineIndex=adslCapStatLineIndex, adslCapStatBertState=adslCapStatBertState, adslCapStatBertErrorCounter=adslCapStatBertErrorCounter, adslCapLineStatisticEntry=adslCapLineStatisticEntry, adslCapStatusLineIndex=adslCapStatusLineIndex, adslCapStatLineQualityDb=adslCapStatLineQualityDb, adslCapStatConnUpDays=adslCapStatConnUpDays, adslCapStatusSlotIndex=adslCapStatusSlotIndex, adslCapStatusUnitType=adslCapStatusUnitType, adslCapStatusMajorFirmWareVer=adslCapStatusMajorFirmWareVer, adslCapStatusDownRate=adslCapStatusDownRate, adslCapStatusMinorFirmWareVer=adslCapStatusMinorFirmWareVer, adslCapStatIfEntryIndex=adslCapStatIfEntryIndex, adslCapStatSlotIndex=adslCapStatSlotIndex, adslCapLineStatusTable=adslCapLineStatusTable, adslCapStatusShelfIndex=adslCapStatusShelfIndex, adslCapLineStatisticTable=adslCapLineStatisticTable, adslCapStatRxSignalPresent=adslCapStatRxSignalPresent, adslCapStatusLineState=adslCapStatusLineState, adslCapStatusVendorId=adslCapStatusVendorId, adslCapStatConnUpMinutes=adslCapStatConnUpMinutes, adslCapLineStatusEntry=adslCapLineStatusEntry, adslCapStatShelfIndex=adslCapStatShelfIndex, adslCapStatUpDwnCntr=adslCapStatUpDwnCntr, adslCapStatConnUpHours=adslCapStatConnUpHours, adslCapStatusIfEntryIndex=adslCapStatusIfEntryIndex, adslCapStatusUpRate=adslCapStatusUpRate)
