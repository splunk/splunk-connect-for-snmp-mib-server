#
# PySNMP MIB module RUCKUS-ZD-AP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RUCKUS-ZD-AP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:51:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
ruckusZDWLANModule, = mibBuilder.importSymbols("RUCKUS-ROOT-MIB", "ruckusZDWLANModule")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, Bits, NotificationType, Gauge32, Counter64, Counter32, IpAddress, Unsigned32, MibIdentifier, ModuleIdentity, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "NotificationType", "Gauge32", "Counter64", "Counter32", "IpAddress", "Unsigned32", "MibIdentifier", "ModuleIdentity", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, TruthValue, RowStatus, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString", "MacAddress")
ruckusZDAPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4))
if mibBuilder.loadTexts: ruckusZDAPMIB.setLastUpdated('201010150800Z')
if mibBuilder.loadTexts: ruckusZDAPMIB.setOrganization('Ruckus Wireless, Inc.')
ruckusZDAPObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1))
ruckusZDAPConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1))
ruckusZDAPConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1), )
if mibBuilder.loadTexts: ruckusZDAPConfigTable.setStatus('current')
ruckusZDAPConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1), ).setIndexNames((0, "RUCKUS-ZD-AP-MIB", "ruckusZDAPConfigID"))
if mibBuilder.loadTexts: ruckusZDAPConfigEntry.setStatus('current')
ruckusZDAPConfigID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5000)))
if mibBuilder.loadTexts: ruckusZDAPConfigID.setStatus('current')
ruckusZDAPConfigMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusZDAPConfigMacAddress.setStatus('current')
ruckusZDAPConfigAPModel = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusZDAPConfigAPModel.setStatus('current')
ruckusZDAPConfigDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigDeviceName.setStatus('current')
ruckusZDAPConfigDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigDescription.setStatus('current')
ruckusZDAPConfigLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigLocation.setStatus('current')
ruckusZDAPConfigGpsLatitude = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigGpsLatitude.setStatus('current')
ruckusZDAPConfigGpsLongitude = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigGpsLongitude.setStatus('current')
ruckusZDAPConfigIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2), ("dualstack", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigIPVersion.setStatus('current')
ruckusZDAPConfigIpAddressSettingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("admin-by-zd", 1), ("admin-by-dhcp", 2), ("admin-by-ap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigIpAddressSettingMode.setStatus('current')
ruckusZDAPConfigIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigIpAddress.setStatus('current')
ruckusZDAPConfigIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigIpAddressMask.setStatus('current')
ruckusZDAPConfigGatewayIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigGatewayIpAddress.setStatus('current')
ruckusZDAPConfigIpV6AddressSettingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("admin-by-zd", 1), ("admin-by-autoconfig", 2), ("admin-by-ap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigIpV6AddressSettingMode.setStatus('current')
ruckusZDAPConfigIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigIpV6Address.setStatus('current')
ruckusZDAPConfigIpV6PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigIpV6PrefixLen.setStatus('current')
ruckusZDAPConfigGatewayIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigGatewayIpV6Address.setStatus('current')
ruckusZDAPConfigPrimaryDnsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigPrimaryDnsIpAddress.setStatus('current')
ruckusZDAPConfigSecondaryDnsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 26), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigSecondaryDnsIpAddress.setStatus('current')
ruckusZDAPConfigPrimaryDnsIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigPrimaryDnsIpV6Address.setStatus('current')
ruckusZDAPConfigSecondaryDnsV6IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigSecondaryDnsV6IpAddress.setStatus('current')
ruckusZDAPConfigRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ieee80211bg", 1), ("ieee80211na", 2), ("ieee80211a", 3), ("ieee80211n", 4), ("ieee80211ng", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioType.setStatus('current')
ruckusZDAPConfigRadioChannel24 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioChannel24.setStatus('current')
ruckusZDAPConfigRadioTxPowerLevel24 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioTxPowerLevel24.setStatus('current')
ruckusZDAPConfigRadioWlanGroup24 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioWlanGroup24.setStatus('current')
ruckusZDAPConfigRadioEnableWlanService24 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioEnableWlanService24.setStatus('current')
ruckusZDAPConfigRadioChannel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(36, 165), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioChannel5.setStatus('current')
ruckusZDAPConfigRadioTxPowerLevel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioTxPowerLevel5.setStatus('current')
ruckusZDAPConfigRadioWlanGroup5 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 42), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioWlanGroup5.setStatus('current')
ruckusZDAPConfigRadioEnableWlanService5 = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRadioEnableWlanService5.setStatus('current')
ruckusZDAPConfigMeshConfigurationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("root-ap", 2), ("mesh-ap", 3), ("disabled", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigMeshConfigurationMode.setStatus('current')
ruckusZDAPConfigUplinkSelectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("smart", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigUplinkSelectionMode.setStatus('current')
ruckusZDAPConfigApproveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("approved", 1), ("not-approved", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigApproveMode.setStatus('current')
ruckusZDAPConfigManagementAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("delete", 1), ("associated", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigManagementAdmin.setStatus('current')
ruckusZDAPConfigRebootNow = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 4, 1, 1, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDAPConfigRebootNow.setStatus('current')
mibBuilder.exportSymbols("RUCKUS-ZD-AP-MIB", ruckusZDAPConfigRebootNow=ruckusZDAPConfigRebootNow, ruckusZDAPConfigEntry=ruckusZDAPConfigEntry, ruckusZDAPMIB=ruckusZDAPMIB, PYSNMP_MODULE_ID=ruckusZDAPMIB, ruckusZDAPConfigMeshConfigurationMode=ruckusZDAPConfigMeshConfigurationMode, ruckusZDAPConfigIpAddressMask=ruckusZDAPConfigIpAddressMask, ruckusZDAPConfigAPModel=ruckusZDAPConfigAPModel, ruckusZDAPConfigIpAddressSettingMode=ruckusZDAPConfigIpAddressSettingMode, ruckusZDAPConfigID=ruckusZDAPConfigID, ruckusZDAPConfigTable=ruckusZDAPConfigTable, ruckusZDAPConfigGatewayIpAddress=ruckusZDAPConfigGatewayIpAddress, ruckusZDAPConfigManagementAdmin=ruckusZDAPConfigManagementAdmin, ruckusZDAPConfigPrimaryDnsIpV6Address=ruckusZDAPConfigPrimaryDnsIpV6Address, ruckusZDAPConfigRadioEnableWlanService24=ruckusZDAPConfigRadioEnableWlanService24, ruckusZDAPConfigDescription=ruckusZDAPConfigDescription, ruckusZDAPConfigSecondaryDnsIpAddress=ruckusZDAPConfigSecondaryDnsIpAddress, ruckusZDAPConfigLocation=ruckusZDAPConfigLocation, ruckusZDAPConfigRadioTxPowerLevel5=ruckusZDAPConfigRadioTxPowerLevel5, ruckusZDAPConfigGpsLatitude=ruckusZDAPConfigGpsLatitude, ruckusZDAPConfigRadioEnableWlanService5=ruckusZDAPConfigRadioEnableWlanService5, ruckusZDAPConfigRadioType=ruckusZDAPConfigRadioType, ruckusZDAPConfigIpAddress=ruckusZDAPConfigIpAddress, ruckusZDAPConfigPrimaryDnsIpAddress=ruckusZDAPConfigPrimaryDnsIpAddress, ruckusZDAPConfigIpV6AddressSettingMode=ruckusZDAPConfigIpV6AddressSettingMode, ruckusZDAPConfigRadioWlanGroup5=ruckusZDAPConfigRadioWlanGroup5, ruckusZDAPConfigUplinkSelectionMode=ruckusZDAPConfigUplinkSelectionMode, ruckusZDAPObjects=ruckusZDAPObjects, ruckusZDAPConfigRadioChannel5=ruckusZDAPConfigRadioChannel5, ruckusZDAPConfigRadioWlanGroup24=ruckusZDAPConfigRadioWlanGroup24, ruckusZDAPConfigSecondaryDnsV6IpAddress=ruckusZDAPConfigSecondaryDnsV6IpAddress, ruckusZDAPConfigApproveMode=ruckusZDAPConfigApproveMode, ruckusZDAPConfig=ruckusZDAPConfig, ruckusZDAPConfigIPVersion=ruckusZDAPConfigIPVersion, ruckusZDAPConfigRadioTxPowerLevel24=ruckusZDAPConfigRadioTxPowerLevel24, ruckusZDAPConfigMacAddress=ruckusZDAPConfigMacAddress, ruckusZDAPConfigGatewayIpV6Address=ruckusZDAPConfigGatewayIpV6Address, ruckusZDAPConfigDeviceName=ruckusZDAPConfigDeviceName, ruckusZDAPConfigIpV6Address=ruckusZDAPConfigIpV6Address, ruckusZDAPConfigIpV6PrefixLen=ruckusZDAPConfigIpV6PrefixLen, ruckusZDAPConfigGpsLongitude=ruckusZDAPConfigGpsLongitude, ruckusZDAPConfigRadioChannel24=ruckusZDAPConfigRadioChannel24)
