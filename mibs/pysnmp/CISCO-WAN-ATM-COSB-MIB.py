#
# PySNMP MIB module CISCO-WAN-ATM-COSB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-ATM-COSB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:03:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, Integer32, Bits, ModuleIdentity, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, IpAddress, Counter64, iso, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "Bits", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "IpAddress", "Counter64", "iso", "Counter32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoWanAtmCosbMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 16))
ciscoWanAtmCosbMIB.setRevisions(('2003-03-21 00:00', '2002-06-10 00:00', '2000-04-17 00:00',))
if mibBuilder.loadTexts: ciscoWanAtmCosbMIB.setLastUpdated('200303210000Z')
if mibBuilder.loadTexts: ciscoWanAtmCosbMIB.setOrganization('Cisco Systems, Inc.')
ciscoWanAtmCosbMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 16, 1))
cwacConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 1))
cwacStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2))
cwacStatsAlarmConfgTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 1), )
if mibBuilder.loadTexts: cwacStatsAlarmConfgTable.setStatus('current')
cwacStatsAlarmConfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-ATM-COSB-MIB", "cwacCosbIndex"))
if mibBuilder.loadTexts: cwacStatsAlarmConfgEntry.setStatus('current')
cwacCosbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: cwacCosbIndex.setStatus('current')
cwacCosbCurrentCellsDiscThres = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwacCosbCurrentCellsDiscThres.setStatus('current')
cwacStatsAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacStatsAlarmStatus.setStatus('current')
cwacValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacValidIntervals.setStatus('current')
cwacIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2), )
if mibBuilder.loadTexts: cwacIntervalTable.setStatus('current')
cwacIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-ATM-COSB-MIB", "cwacCosbIndex"), (0, "CISCO-WAN-ATM-COSB-MIB", "cwacIntervalNumber"))
if mibBuilder.loadTexts: cwacIntervalEntry.setStatus('current')
cwacIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96)))
if mibBuilder.loadTexts: cwacIntervalNumber.setStatus('current')
cwacIntCellArrivals = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacIntCellArrivals.setStatus('current')
cwacIntCellDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacIntCellDiscards.setStatus('current')
cwacIntCellDeparts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacIntCellDeparts.setStatus('current')
cwacHighIntCellArrivals = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacHighIntCellArrivals.setStatus('current')
cwacHighIntCellDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacHighIntCellDiscards.setStatus('current')
cwacHighIntCellDeparts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacHighIntCellDeparts.setStatus('current')
cwacHCIntCellArrivals = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacHCIntCellArrivals.setStatus('current')
cwacHCIntCellDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacHCIntCellDiscards.setStatus('current')
cwacHCIntCellDeparts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 16, 1, 2, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacHCIntCellDeparts.setStatus('current')
ciscoWanAtmCosbMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 16, 2))
ciscoWanAtmCosbMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 16, 2, 1))
ciscoWanAtmCosbMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 16, 2, 2))
ciscoWanAtmCosbMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 16, 2, 1, 1)).setObjects(("CISCO-WAN-ATM-COSB-MIB", "ciscoWanAtmCosbAlarmMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmCosbMIBCompliance = ciscoWanAtmCosbMIBCompliance.setStatus('deprecated')
ciscoWanAtmCosbMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 16, 2, 1, 2)).setObjects(("CISCO-WAN-ATM-COSB-MIB", "ciscoWanAtmCosbAlarmMIBGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmCosbMIBCompliance1 = ciscoWanAtmCosbMIBCompliance1.setStatus('current')
ciscoWanAtmCosbAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 16, 2, 2, 1)).setObjects(("CISCO-WAN-ATM-COSB-MIB", "cwacCosbCurrentCellsDiscThres"), ("CISCO-WAN-ATM-COSB-MIB", "cwacStatsAlarmStatus"), ("CISCO-WAN-ATM-COSB-MIB", "cwacValidIntervals"), ("CISCO-WAN-ATM-COSB-MIB", "cwacIntCellArrivals"), ("CISCO-WAN-ATM-COSB-MIB", "cwacIntCellDiscards"), ("CISCO-WAN-ATM-COSB-MIB", "cwacIntCellDeparts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmCosbAlarmMIBGroup = ciscoWanAtmCosbAlarmMIBGroup.setStatus('deprecated')
ciscoWanAtmCosbAlarmMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 16, 2, 2, 2)).setObjects(("CISCO-WAN-ATM-COSB-MIB", "cwacCosbCurrentCellsDiscThres"), ("CISCO-WAN-ATM-COSB-MIB", "cwacStatsAlarmStatus"), ("CISCO-WAN-ATM-COSB-MIB", "cwacValidIntervals"), ("CISCO-WAN-ATM-COSB-MIB", "cwacIntCellArrivals"), ("CISCO-WAN-ATM-COSB-MIB", "cwacIntCellDiscards"), ("CISCO-WAN-ATM-COSB-MIB", "cwacIntCellDeparts"), ("CISCO-WAN-ATM-COSB-MIB", "cwacHighIntCellArrivals"), ("CISCO-WAN-ATM-COSB-MIB", "cwacHighIntCellDiscards"), ("CISCO-WAN-ATM-COSB-MIB", "cwacHighIntCellDeparts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmCosbAlarmMIBGroup1 = ciscoWanAtmCosbAlarmMIBGroup1.setStatus('current')
ciscoHCWanAtmCosbAlarmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 16, 2, 2, 3)).setObjects(("CISCO-WAN-ATM-COSB-MIB", "cwacHCIntCellArrivals"), ("CISCO-WAN-ATM-COSB-MIB", "cwacHCIntCellDiscards"), ("CISCO-WAN-ATM-COSB-MIB", "cwacHCIntCellDeparts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHCWanAtmCosbAlarmMIBGroup = ciscoHCWanAtmCosbAlarmMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-ATM-COSB-MIB", cwacIntCellArrivals=cwacIntCellArrivals, ciscoWanAtmCosbMIB=ciscoWanAtmCosbMIB, cwacHCIntCellArrivals=cwacHCIntCellArrivals, ciscoWanAtmCosbAlarmMIBGroup1=ciscoWanAtmCosbAlarmMIBGroup1, ciscoWanAtmCosbMIBGroups=ciscoWanAtmCosbMIBGroups, ciscoWanAtmCosbMIBCompliance=ciscoWanAtmCosbMIBCompliance, cwacIntCellDiscards=cwacIntCellDiscards, ciscoWanAtmCosbAlarmMIBGroup=ciscoWanAtmCosbAlarmMIBGroup, cwacConfig=cwacConfig, cwacHighIntCellArrivals=cwacHighIntCellArrivals, cwacHighIntCellDeparts=cwacHighIntCellDeparts, cwacHighIntCellDiscards=cwacHighIntCellDiscards, ciscoWanAtmCosbMIBConformance=ciscoWanAtmCosbMIBConformance, cwacValidIntervals=cwacValidIntervals, ciscoWanAtmCosbMIBCompliance1=ciscoWanAtmCosbMIBCompliance1, cwacCosbIndex=cwacCosbIndex, cwacStatsAlarmConfgEntry=cwacStatsAlarmConfgEntry, cwacHCIntCellDeparts=cwacHCIntCellDeparts, cwacStatistics=cwacStatistics, ciscoWanAtmCosbMIBObjects=ciscoWanAtmCosbMIBObjects, cwacStatsAlarmStatus=cwacStatsAlarmStatus, cwacIntervalTable=cwacIntervalTable, cwacIntCellDeparts=cwacIntCellDeparts, ciscoHCWanAtmCosbAlarmMIBGroup=ciscoHCWanAtmCosbAlarmMIBGroup, PYSNMP_MODULE_ID=ciscoWanAtmCosbMIB, ciscoWanAtmCosbMIBCompliances=ciscoWanAtmCosbMIBCompliances, cwacIntervalEntry=cwacIntervalEntry, cwacCosbCurrentCellsDiscThres=cwacCosbCurrentCellsDiscThres, cwacHCIntCellDiscards=cwacHCIntCellDiscards, cwacStatsAlarmConfgTable=cwacStatsAlarmConfgTable, cwacIntervalNumber=cwacIntervalNumber)
