#
# PySNMP MIB module Wellfleet-PCAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-PCAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, iso, Integer32, TimeTicks, Gauge32, Bits, ModuleIdentity, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Integer32", "TimeTicks", "Gauge32", "Bits", "ModuleIdentity", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "Counter64", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfPktCaptureGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfPktCaptureGroup")
wfPktCaptureTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1), )
if mibBuilder.loadTexts: wfPktCaptureTable.setStatus('mandatory')
wfPktCaptureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1), ).setIndexNames((0, "Wellfleet-PCAP-MIB", "wfPktCaptureLineNumber"))
if mibBuilder.loadTexts: wfPktCaptureEntry.setStatus('mandatory')
wfPktCaptureDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureDelete.setStatus('mandatory')
wfPktCaptureDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureDisable.setStatus('mandatory')
wfPktCaptureState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPktCaptureState.setStatus('mandatory')
wfPktCaptureFname = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPktCaptureFname.setStatus('mandatory')
wfPktCaptureControl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("stop", 2))).clone('stop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureControl.setStatus('mandatory')
wfPktCaptureCapture = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("started", 1), ("stopped", 2))).clone('stopped')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPktCaptureCapture.setStatus('mandatory')
wfPktCaptureLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPktCaptureLineNumber.setStatus('mandatory')
wfPktCaptureBufSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureBufSize.setStatus('mandatory')
wfPktCapturePktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCapturePktSize.setStatus('mandatory')
wfPktCaptureDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rx", 1), ("tx", 2), ("both", 3))).clone('rx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureDirection.setStatus('mandatory')
wfPktCaptureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPktCaptureCount.setStatus('mandatory')
wfPktCaptureRxTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 1), ("match1", 2), ("match2", 3), ("notused", 4))).clone('notused')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxTrigger.setStatus('mandatory')
wfPktCaptureTxTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 1), ("match1", 2), ("match2", 3), ("notused", 4))).clone('notused')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxTrigger.setStatus('mandatory')
wfPktCaptureRxFltr1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("capture", 1), ("trigger", 2), ("notused", 3))).clone('notused')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr1Type.setStatus('mandatory')
wfPktCaptureRxFltr1Offset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr1Offset.setStatus('mandatory')
wfPktCaptureRxFltr1Ref = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("dl", 2), ("mcast", 3))).clone('mac')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr1Ref.setStatus('mandatory')
wfPktCaptureRxFltr1Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr1Size.setStatus('mandatory')
wfPktCaptureRxFltr1Match = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr1Match.setStatus('mandatory')
wfPktCaptureTxFltr1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("capture", 1), ("trigger", 2), ("notused", 3))).clone('notused')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr1Type.setStatus('mandatory')
wfPktCaptureTxFltr1Offset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr1Offset.setStatus('mandatory')
wfPktCaptureTxFltr1Ref = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("dl", 2), ("mcast", 3))).clone('mac')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr1Ref.setStatus('mandatory')
wfPktCaptureTxFltr1Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr1Size.setStatus('mandatory')
wfPktCaptureTxFltr1Match = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 23), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr1Match.setStatus('mandatory')
wfPktCaptureRxFltr2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("capture", 1), ("trigger", 2), ("notused", 3))).clone('notused')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr2Type.setStatus('mandatory')
wfPktCaptureRxFltr2Offset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr2Offset.setStatus('mandatory')
wfPktCaptureRxFltr2Ref = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("dl", 2), ("mcast", 3))).clone('mac')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr2Ref.setStatus('mandatory')
wfPktCaptureRxFltr2Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr2Size.setStatus('mandatory')
wfPktCaptureRxFltr2Match = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 28), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr2Match.setStatus('mandatory')
wfPktCaptureRxFltr2Group = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("or", 1), ("and", 2))).clone('or')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureRxFltr2Group.setStatus('mandatory')
wfPktCaptureTxFltr2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("capture", 1), ("trigger", 2), ("notused", 3))).clone('notused')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr2Type.setStatus('mandatory')
wfPktCaptureTxFltr2Offset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr2Offset.setStatus('mandatory')
wfPktCaptureTxFltr2Ref = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("dl", 2), ("mcast", 3))).clone('mac')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr2Ref.setStatus('mandatory')
wfPktCaptureTxFltr2Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr2Size.setStatus('mandatory')
wfPktCaptureTxFltr2Match = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 34), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr2Match.setStatus('mandatory')
wfPktCaptureTxFltr2Group = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("or", 1), ("and", 2))).clone('or')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureTxFltr2Group.setStatus('mandatory')
wfPktCaptureAtmVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureAtmVpi.setStatus('mandatory')
wfPktCaptureAtmVci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 21, 1, 1, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPktCaptureAtmVci.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-PCAP-MIB", wfPktCaptureTxFltr1Type=wfPktCaptureTxFltr1Type, wfPktCaptureTxFltr2Group=wfPktCaptureTxFltr2Group, wfPktCaptureRxTrigger=wfPktCaptureRxTrigger, wfPktCaptureTxFltr1Offset=wfPktCaptureTxFltr1Offset, wfPktCaptureCapture=wfPktCaptureCapture, wfPktCaptureTxFltr2Offset=wfPktCaptureTxFltr2Offset, wfPktCaptureRxFltr2Group=wfPktCaptureRxFltr2Group, wfPktCaptureAtmVci=wfPktCaptureAtmVci, wfPktCaptureState=wfPktCaptureState, wfPktCaptureRxFltr1Match=wfPktCaptureRxFltr1Match, wfPktCaptureAtmVpi=wfPktCaptureAtmVpi, wfPktCaptureRxFltr1Size=wfPktCaptureRxFltr1Size, wfPktCaptureDelete=wfPktCaptureDelete, wfPktCaptureCount=wfPktCaptureCount, wfPktCaptureTxFltr1Ref=wfPktCaptureTxFltr1Ref, wfPktCaptureTxFltr2Match=wfPktCaptureTxFltr2Match, wfPktCaptureBufSize=wfPktCaptureBufSize, wfPktCapturePktSize=wfPktCapturePktSize, wfPktCaptureRxFltr2Match=wfPktCaptureRxFltr2Match, wfPktCaptureLineNumber=wfPktCaptureLineNumber, wfPktCaptureRxFltr1Offset=wfPktCaptureRxFltr1Offset, wfPktCaptureTxFltr1Size=wfPktCaptureTxFltr1Size, wfPktCaptureRxFltr2Offset=wfPktCaptureRxFltr2Offset, wfPktCaptureTxTrigger=wfPktCaptureTxTrigger, wfPktCaptureDirection=wfPktCaptureDirection, wfPktCaptureTxFltr2Type=wfPktCaptureTxFltr2Type, wfPktCaptureRxFltr2Type=wfPktCaptureRxFltr2Type, wfPktCaptureRxFltr2Size=wfPktCaptureRxFltr2Size, wfPktCaptureTxFltr2Size=wfPktCaptureTxFltr2Size, wfPktCaptureControl=wfPktCaptureControl, wfPktCaptureRxFltr2Ref=wfPktCaptureRxFltr2Ref, wfPktCaptureTable=wfPktCaptureTable, wfPktCaptureEntry=wfPktCaptureEntry, wfPktCaptureDisable=wfPktCaptureDisable, wfPktCaptureRxFltr1Type=wfPktCaptureRxFltr1Type, wfPktCaptureFname=wfPktCaptureFname, wfPktCaptureTxFltr2Ref=wfPktCaptureTxFltr2Ref, wfPktCaptureRxFltr1Ref=wfPktCaptureRxFltr1Ref, wfPktCaptureTxFltr1Match=wfPktCaptureTxFltr1Match)
