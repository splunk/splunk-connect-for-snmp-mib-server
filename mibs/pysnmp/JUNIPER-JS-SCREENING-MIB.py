#
# PySNMP MIB module JUNIPER-JS-SCREENING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-JS-SCREENING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ifName, = mibBuilder.importSymbols("IF-MIB", "ifName")
jnxJsScreening, = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsScreening")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Counter32, NotificationType, Gauge32, ObjectIdentity, Counter64, TimeTicks, iso, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "NotificationType", "Gauge32", "ObjectIdentity", "Counter64", "TimeTicks", "iso", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxJsScreenMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1))
jnxJsScreenMIB.setRevisions(('2014-04-02 00:00', '2013-11-07 00:00', '2013-06-06 00:00', '2012-04-06 10:30', '2009-02-04 00:00', '2007-09-24 00:00',))
if mibBuilder.loadTexts: jnxJsScreenMIB.setLastUpdated('201404020000Z')
if mibBuilder.loadTexts: jnxJsScreenMIB.setOrganization('Juniper Networks, Inc.')
jnxJsScreenNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 0))
jnxJsScreenObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1))
jnxJsScreenTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 2))
jnxJsScreenMonTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1), )
if mibBuilder.loadTexts: jnxJsScreenMonTable.setStatus('current')
jnxJsScreenMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-JS-SCREENING-MIB", "jnxJsScreenZoneName"))
if mibBuilder.loadTexts: jnxJsScreenMonEntry.setStatus('current')
jnxJsScreenZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsScreenZoneName.setStatus('current')
jnxJsScreenNumOfIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenNumOfIf.setStatus('current')
jnxJsScreenMonSynAttk = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonSynAttk.setStatus('current')
jnxJsScreenMonTearDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonTearDrop.setStatus('current')
jnxJsScreenMonSrcRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonSrcRoute.setStatus('current')
jnxJsScreenMonPingDeath = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonPingDeath.setStatus('current')
jnxJsScreenMonAddrSpoof = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonAddrSpoof.setStatus('current')
jnxJsScreenMonLand = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonLand.setStatus('current')
jnxJsScreenMonIcmpFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIcmpFlood.setStatus('current')
jnxJsScreenMonUdpFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonUdpFlood.setStatus('current')
jnxJsScreenMonWinnuke = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonWinnuke.setStatus('current')
jnxJsScreenMonPortScan = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonPortScan.setStatus('current')
jnxJsScreenMonIpSweep = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpSweep.setStatus('current')
jnxJsScreenMonSynFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonSynFrag.setStatus('current')
jnxJsScreenMonTcpNoFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonTcpNoFlag.setStatus('current')
jnxJsScreenMonIpUnknownProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpUnknownProt.setStatus('current')
jnxJsScreenMonIpOptBad = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpOptBad.setStatus('current')
jnxJsScreenMonIpOptRecRt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpOptRecRt.setStatus('current')
jnxJsScreenMonIpOptTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpOptTimestamp.setStatus('current')
jnxJsScreenMonIpOptSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpOptSecurity.setStatus('current')
jnxJsScreenMonIpOptLSR = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpOptLSR.setStatus('current')
jnxJsScreenMonIpOptSSR = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpOptSSR.setStatus('current')
jnxJsScreenMonIpOptStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpOptStream.setStatus('current')
jnxJsScreenMonIcmpFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIcmpFrag.setStatus('current')
jnxJsScreenMonIcmpLarge = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIcmpLarge.setStatus('current')
jnxJsScreenMonTcpSynFin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonTcpSynFin.setStatus('current')
jnxJsScreenMonTcpFinNoAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonTcpFinNoAck.setStatus('current')
jnxJsScreenMonLimitSessSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonLimitSessSrc.setStatus('current')
jnxJsScreenMonLimitSessDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonLimitSessDest.setStatus('current')
jnxJsScreenMonSynAckAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonSynAckAck.setStatus('current')
jnxJsScreenMonIpFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpFrag.setStatus('current')
jnxJsScreenSynAttackThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynAttackThresh.setStatus('current')
jnxJsScreenSynAttackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynAttackTimeout.setStatus('current')
jnxJsScreenSynAttackAlmTh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynAttackAlmTh.setStatus('current')
jnxJsScreenSynAttackQueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynAttackQueSize.setStatus('deprecated')
jnxJsScreenSynAttackAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynAttackAgeTime.setStatus('deprecated')
jnxJsScreenIcmpFloodThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenIcmpFloodThresh.setStatus('current')
jnxJsScreenUdpFloodThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenUdpFloodThresh.setStatus('current')
jnxJsScreenPortScanThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenPortScanThresh.setStatus('current')
jnxJsScreenIpSweepThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenIpSweepThresh.setStatus('current')
jnxJsScreenSynAckAckThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynAckAckThres.setStatus('current')
jnxJsScreenMonIpv6ExtHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpv6ExtHdr.setStatus('current')
jnxJsScreenMonIpv6HopOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpv6HopOpt.setStatus('current')
jnxJsScreenMonIpv6DstOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpv6DstOpt.setStatus('current')
jnxJsScreenMonIpv6ExtLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpv6ExtLimit.setStatus('current')
jnxJsScreenMonIpMalIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpMalIpv6.setStatus('current')
jnxJsScreenMonIcmpMalIcmpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIcmpMalIcmpv6.setStatus('current')
jnxJsScreenIpv6ExtNumLim = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenIpv6ExtNumLim.setStatus('current')
jnxJsScreenUdpPortScanThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenUdpPortScanThresh.setStatus('current')
jnxJsScreenMonUdpPortScan = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonUdpPortScan.setStatus('current')
jnxJsScreenMonIpTunnelGre6in4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelGre6in4.setStatus('current')
jnxJsScreenMonIpTunnelGre4in6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelGre4in6.setStatus('current')
jnxJsScreenMonIpTunnelGre6in6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelGre6in6.setStatus('current')
jnxJsScreenMonIpTunnelGre4in4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelGre4in4.setStatus('current')
jnxJsScreenMonIpTunnelIpInUdpTeredo = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpInUdpTeredo.setStatus('current')
jnxJsScreenMonIpTunnelBadInnerHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelBadInnerHeader.setStatus('current')
jnxJsScreenMonIpTunnelIpIp6to4relay = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIp6to4relay.setStatus('current')
jnxJsScreenMonIpTunnelIpIp6in4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIp6in4.setStatus('current')
jnxJsScreenMonIpTunnelIpIp6over4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIp6over4.setStatus('current')
jnxJsScreenMonIpTunnelIpIp4in6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIp4in6.setStatus('current')
jnxJsScreenMonIpTunnelIpIp4in4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIp4in4.setStatus('current')
jnxJsScreenMonIpTunnelIpIp6in6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIp6in6.setStatus('current')
jnxJsScreenMonIpTunnelIpIpIsatap = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIpIsatap.setStatus('current')
jnxJsScreenMonIpTunnelIpIpDsLite = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 1, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonIpTunnelIpIpDsLite.setStatus('current')
jnxJsScreenMonThreshTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2), )
if mibBuilder.loadTexts: jnxJsScreenMonThreshTable.setStatus('current')
jnxJsScreenMonThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2, 1), ).setMaxAccess("readonly")
jnxJsScreenMonEntry.registerAugmentions(("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenMonThreshEntry"))
jnxJsScreenMonThreshEntry.setIndexNames(*jnxJsScreenMonEntry.getIndexNames())
if mibBuilder.loadTexts: jnxJsScreenMonThreshEntry.setStatus('current')
jnxJsScreenSynFloodSrcThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynFloodSrcThresh.setStatus('current')
jnxJsScreenSynFloodDstThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSynFloodDstThresh.setStatus('current')
jnxJsScreenSessLimitSrcThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSessLimitSrcThresh.setStatus('current')
jnxJsScreenSessLimitDstThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenSessLimitDstThresh.setStatus('current')
jnxJsScreenMonSynFloodSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonSynFloodSrc.setStatus('current')
jnxJsScreenMonSynFloodDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonSynFloodDst.setStatus('current')
jnxJsScreenSweepTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 3), )
if mibBuilder.loadTexts: jnxJsScreenSweepTable.setStatus('current')
jnxJsScreenSweepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 3, 1), )
jnxJsScreenMonEntry.registerAugmentions(("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenSweepEntry"))
jnxJsScreenSweepEntry.setIndexNames(*jnxJsScreenMonEntry.getIndexNames())
if mibBuilder.loadTexts: jnxJsScreenSweepEntry.setStatus('current')
jnxJsScreenTcpSweepThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenTcpSweepThresh.setStatus('current')
jnxJsScreenUdpSweepThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenUdpSweepThresh.setStatus('current')
jnxJsScreenMonTcpSweep = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonTcpSweep.setStatus('current')
jnxJsScreenMonUdpSweep = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsScreenMonUdpSweep.setStatus('current')
jnxJsScreenAttack = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 0, 1)).setObjects(("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenZoneName"), ("IF-MIB", "ifName"), ("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenAttackType"), ("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenAttackCounter"), ("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenAttackDescr"))
if mibBuilder.loadTexts: jnxJsScreenAttack.setStatus('current')
jnxJsScreenCfgChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 0, 2)).setObjects(("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenZoneName"), ("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenAttackType"), ("JUNIPER-JS-SCREENING-MIB", "jnxJsScreenCfgStatus"))
if mibBuilder.loadTexts: jnxJsScreenCfgChange.setStatus('current')
jnxJsScreenAttackType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("icmpFlood", 1), ("udpFlood", 2), ("portScanning", 3), ("ipSweeping", 4), ("synfloodSrcIP", 5), ("synfloodDstIP", 6), ("sessLimitSrcBased", 7), ("sessLimitDestBased", 8), ("synAckAck", 9), ("synAttack", 10), ("winNuke", 11), ("tearDrop", 12), ("ipAddressSpoof", 13), ("pingDeath", 14), ("sourceRoute", 15), ("landAttack", 16), ("synFragmentation", 17), ("tcpNoFlag", 18), ("ipUnknownProtocol", 19), ("ipOptionBad", 20), ("ipOptionRecRt", 21), ("ipOptionTimeStamp", 22), ("ipOptionSecurity", 23), ("ipOptionLSR", 24), ("ipOptionSRR", 25), ("ipOptionStream", 26), ("icmpFragmentation", 27), ("icmpLarge", 28), ("tcpSynFin", 29), ("tcpFinNoAck", 30), ("ipFragmentation", 31), ("tcpSweeping", 32), ("udpSweeping", 33), ("ipv6exthdr", 34), ("ipv6hbyhopt", 35), ("ipv6dstopt", 36), ("ipv6extlim", 37), ("ipv6malhdr", 38), ("icmpv6malpkt", 39), ("udpportScanning", 40), ("ipTunnelGre6in4", 41), ("ipTunnelGre4in6", 42), ("ipTunnelGre6in6", 43), ("ipTunnelGre4in4", 44), ("ipTunnelIpInUdpTeredo", 45), ("ipTunnelBadInnerHeader", 46), ("ipTunnelIpIp6to4relay", 47), ("ipTunnelIpIp6in4", 48), ("ipTunnelIpIp6over4", 49), ("ipTunnelIpIp4in6", 50), ("ipTunnelIpIp4in4", 51), ("ipTunnelIpIp6in6", 52), ("ipTunnelIpIpIsatap", 53), ("ipTunnelIpIpDsLite", 54)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsScreenAttackType.setStatus('current')
jnxJsScreenAttackCounter = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 2, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsScreenAttackCounter.setStatus('current')
jnxJsScreenAttackDescr = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsScreenAttackDescr.setStatus('current')
jnxJsScreenCfgStatus = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 8, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsScreenCfgStatus.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-JS-SCREENING-MIB", jnxJsScreenUdpFloodThresh=jnxJsScreenUdpFloodThresh, jnxJsScreenMonUdpPortScan=jnxJsScreenMonUdpPortScan, jnxJsScreenMonTable=jnxJsScreenMonTable, jnxJsScreenMonIcmpLarge=jnxJsScreenMonIcmpLarge, jnxJsScreenMonThreshTable=jnxJsScreenMonThreshTable, jnxJsScreenAttackType=jnxJsScreenAttackType, jnxJsScreenMonUdpSweep=jnxJsScreenMonUdpSweep, jnxJsScreenUdpSweepThresh=jnxJsScreenUdpSweepThresh, jnxJsScreenSynAttackQueSize=jnxJsScreenSynAttackQueSize, jnxJsScreenSweepEntry=jnxJsScreenSweepEntry, jnxJsScreenTrapVars=jnxJsScreenTrapVars, jnxJsScreenMonIpOptSecurity=jnxJsScreenMonIpOptSecurity, jnxJsScreenMonIpTunnelIpIp4in6=jnxJsScreenMonIpTunnelIpIp4in6, jnxJsScreenAttackCounter=jnxJsScreenAttackCounter, jnxJsScreenMonIpTunnelIpIp6to4relay=jnxJsScreenMonIpTunnelIpIp6to4relay, jnxJsScreenMonTcpNoFlag=jnxJsScreenMonTcpNoFlag, jnxJsScreenMonTcpSweep=jnxJsScreenMonTcpSweep, jnxJsScreenMonIpv6DstOpt=jnxJsScreenMonIpv6DstOpt, jnxJsScreenSynAckAckThres=jnxJsScreenSynAckAckThres, jnxJsScreenMonIpTunnelIpIp4in4=jnxJsScreenMonIpTunnelIpIp4in4, jnxJsScreenMonIpTunnelIpIpDsLite=jnxJsScreenMonIpTunnelIpIpDsLite, jnxJsScreenAttackDescr=jnxJsScreenAttackDescr, jnxJsScreenMonIpOptBad=jnxJsScreenMonIpOptBad, jnxJsScreenIpv6ExtNumLim=jnxJsScreenIpv6ExtNumLim, jnxJsScreenMonPortScan=jnxJsScreenMonPortScan, jnxJsScreenMonIpTunnelGre6in4=jnxJsScreenMonIpTunnelGre6in4, jnxJsScreenMonIcmpMalIcmpv6=jnxJsScreenMonIcmpMalIcmpv6, jnxJsScreenMonAddrSpoof=jnxJsScreenMonAddrSpoof, jnxJsScreenMonIpOptStream=jnxJsScreenMonIpOptStream, jnxJsScreenMonLand=jnxJsScreenMonLand, jnxJsScreenIcmpFloodThresh=jnxJsScreenIcmpFloodThresh, jnxJsScreenMonIpFrag=jnxJsScreenMonIpFrag, jnxJsScreenTcpSweepThresh=jnxJsScreenTcpSweepThresh, jnxJsScreenUdpPortScanThresh=jnxJsScreenUdpPortScanThresh, jnxJsScreenObjects=jnxJsScreenObjects, jnxJsScreenMonWinnuke=jnxJsScreenMonWinnuke, jnxJsScreenMonIpOptRecRt=jnxJsScreenMonIpOptRecRt, jnxJsScreenPortScanThresh=jnxJsScreenPortScanThresh, jnxJsScreenMonIpTunnelGre6in6=jnxJsScreenMonIpTunnelGre6in6, jnxJsScreenMonLimitSessSrc=jnxJsScreenMonLimitSessSrc, jnxJsScreenMonEntry=jnxJsScreenMonEntry, jnxJsScreenMonLimitSessDest=jnxJsScreenMonLimitSessDest, jnxJsScreenMIB=jnxJsScreenMIB, jnxJsScreenMonIpTunnelIpIp6in6=jnxJsScreenMonIpTunnelIpIp6in6, jnxJsScreenMonTcpFinNoAck=jnxJsScreenMonTcpFinNoAck, jnxJsScreenMonUdpFlood=jnxJsScreenMonUdpFlood, jnxJsScreenMonPingDeath=jnxJsScreenMonPingDeath, jnxJsScreenSynAttackTimeout=jnxJsScreenSynAttackTimeout, jnxJsScreenMonIpv6HopOpt=jnxJsScreenMonIpv6HopOpt, jnxJsScreenMonIpTunnelIpInUdpTeredo=jnxJsScreenMonIpTunnelIpInUdpTeredo, jnxJsScreenMonIpTunnelGre4in6=jnxJsScreenMonIpTunnelGre4in6, jnxJsScreenSynFloodSrcThresh=jnxJsScreenSynFloodSrcThresh, jnxJsScreenMonIpSweep=jnxJsScreenMonIpSweep, jnxJsScreenMonIpv6ExtLimit=jnxJsScreenMonIpv6ExtLimit, jnxJsScreenMonIpMalIpv6=jnxJsScreenMonIpMalIpv6, jnxJsScreenMonTearDrop=jnxJsScreenMonTearDrop, jnxJsScreenMonTcpSynFin=jnxJsScreenMonTcpSynFin, jnxJsScreenNotifications=jnxJsScreenNotifications, jnxJsScreenNumOfIf=jnxJsScreenNumOfIf, jnxJsScreenMonSynFloodDst=jnxJsScreenMonSynFloodDst, jnxJsScreenMonIpOptTimestamp=jnxJsScreenMonIpOptTimestamp, jnxJsScreenMonSynFloodSrc=jnxJsScreenMonSynFloodSrc, jnxJsScreenMonIpTunnelBadInnerHeader=jnxJsScreenMonIpTunnelBadInnerHeader, jnxJsScreenMonIcmpFrag=jnxJsScreenMonIcmpFrag, jnxJsScreenSweepTable=jnxJsScreenSweepTable, jnxJsScreenSessLimitSrcThresh=jnxJsScreenSessLimitSrcThresh, jnxJsScreenAttack=jnxJsScreenAttack, jnxJsScreenSynAttackAgeTime=jnxJsScreenSynAttackAgeTime, jnxJsScreenMonIpTunnelGre4in4=jnxJsScreenMonIpTunnelGre4in4, jnxJsScreenMonIpUnknownProt=jnxJsScreenMonIpUnknownProt, jnxJsScreenMonIpTunnelIpIp6over4=jnxJsScreenMonIpTunnelIpIp6over4, jnxJsScreenSynAttackThresh=jnxJsScreenSynAttackThresh, jnxJsScreenMonIpTunnelIpIp6in4=jnxJsScreenMonIpTunnelIpIp6in4, jnxJsScreenZoneName=jnxJsScreenZoneName, PYSNMP_MODULE_ID=jnxJsScreenMIB, jnxJsScreenMonSrcRoute=jnxJsScreenMonSrcRoute, jnxJsScreenMonIpOptSSR=jnxJsScreenMonIpOptSSR, jnxJsScreenSynFloodDstThresh=jnxJsScreenSynFloodDstThresh, jnxJsScreenMonIcmpFlood=jnxJsScreenMonIcmpFlood, jnxJsScreenMonIpOptLSR=jnxJsScreenMonIpOptLSR, jnxJsScreenMonIpv6ExtHdr=jnxJsScreenMonIpv6ExtHdr, jnxJsScreenIpSweepThresh=jnxJsScreenIpSweepThresh, jnxJsScreenSessLimitDstThresh=jnxJsScreenSessLimitDstThresh, jnxJsScreenCfgChange=jnxJsScreenCfgChange, jnxJsScreenMonSynAttk=jnxJsScreenMonSynAttk, jnxJsScreenMonIpTunnelIpIpIsatap=jnxJsScreenMonIpTunnelIpIpIsatap, jnxJsScreenSynAttackAlmTh=jnxJsScreenSynAttackAlmTh, jnxJsScreenMonSynFrag=jnxJsScreenMonSynFrag, jnxJsScreenMonThreshEntry=jnxJsScreenMonThreshEntry, jnxJsScreenCfgStatus=jnxJsScreenCfgStatus, jnxJsScreenMonSynAckAck=jnxJsScreenMonSynAckAck)
