#
# PySNMP MIB module Wellfleet-FR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-FR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Integer32, Gauge32, Opaque, mib_2, NotificationType, NotificationType, Unsigned32, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, mgmt, ObjectIdentity, iso, MibIdentifier, enterprises, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Gauge32", "Opaque", "mib-2", "NotificationType", "NotificationType", "Unsigned32", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "mgmt", "ObjectIdentity", "iso", "MibIdentifier", "enterprises", "IpAddress", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfFrameRelayGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfFrameRelayGroup")
wfFrDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1), )
if mibBuilder.loadTexts: wfFrDlcmiTable.setStatus('mandatory')
wfFrDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1), ).setIndexNames((0, "Wellfleet-FR-MIB", "wfFr1DlcmiCircuit"))
if mibBuilder.loadTexts: wfFrDlcmiEntry.setStatus('mandatory')
wfFr1DlcmiDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiDelete.setStatus('mandatory')
wfFr1DlcmiDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiDisable.setStatus('mandatory')
wfFr1DlcmiState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiState.setStatus('mandatory')
wfFr1DlcmiCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiCircuit.setStatus('mandatory')
wfFr1DlcmiManagementType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("lmi", 2), ("t1617d", 3), ("t1617b", 4), ("annexa", 5), ("lmiswitch", 6), ("annexdswitch", 7), ("annexaswitch", 8))).clone('t1617d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiManagementType.setStatus('mandatory')
wfFr1DlcmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("start", 1), ("running", 2), ("fault", 3), ("recovered", 4))).clone('start')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiStatus.setStatus('mandatory')
wfFr1DlcmiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("q921", 1), ("q922march90", 2), ("q922november90", 3), ("q922", 4))).clone('q922')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiAddress.setStatus('mandatory')
wfFr1DlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("twobyte", 2), ("threebyte", 3), ("fourbyte", 4))).clone('twobyte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiAddressLen.setStatus('mandatory')
wfFr1DlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiPollingInterval.setStatus('mandatory')
wfFr1DlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiFullEnquiryInterval.setStatus('mandatory')
wfFr1DlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 11), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiErrorThreshold.setStatus('mandatory')
wfFr1DlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 12), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiMonitoredEvents.setStatus('mandatory')
wfFr1DlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiMaxSupportedVCs.setStatus('mandatory')
wfFr1DlcmiMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1DlcmiMulticast.setStatus('mandatory')
wfFr1DlcmiSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiSeqCount.setStatus('mandatory')
wfFr1DlcmiLastReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiLastReceived.setStatus('mandatory')
wfFr1DlcmiPassiveSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiPassiveSeqCount.setStatus('mandatory')
wfFr1DlcmiPassiveReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiPassiveReceived.setStatus('mandatory')
wfFr1DlcmiPolls = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiPolls.setStatus('mandatory')
wfFr1DlcmiAlarmTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1DlcmiAlarmTimer.setStatus('mandatory')
wfFr1ErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 1), ("short", 2), ("long", 3), ("illegaldlci", 4), ("unknowndlci", 5), ("protoerr", 6), ("unknownie", 7), ("sequenceerr", 8), ("unknownrpt", 9), ("reset", 10), ("cntrl", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1ErrType.setStatus('mandatory')
wfFr1ErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 22), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1ErrData.setStatus('mandatory')
wfFr1ErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 23), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1ErrTime.setStatus('mandatory')
wfFr1ErrDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1ErrDiscards.setStatus('mandatory')
wfFr1ErrDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1ErrDrops.setStatus('mandatory')
wfFrCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2), )
if mibBuilder.loadTexts: wfFrCircuitTable.setStatus('mandatory')
wfFrCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1), ).setIndexNames((0, "Wellfleet-FR-MIB", "wfFr1CircuitNumber"), (0, "Wellfleet-FR-MIB", "wfFr1CircuitDlci"))
if mibBuilder.loadTexts: wfFrCircuitEntry.setStatus('mandatory')
wfFr1CircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2), ("system", 3))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitDelete.setStatus('mandatory')
wfFr1CircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitNumber.setStatus('mandatory')
wfFr1CircuitDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1007, 1024, 64511, 131072, 8257535))).clone(namedValues=NamedValues(("twobyteminimum", 16), ("twobytemaximum", 1007), ("threebyteminimum", 1024), ("threebytemaximum", 64511), ("fourbyteminimum", 131072), ("fourbytemaximum", 8257535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitDlci.setStatus('mandatory')
wfFr1CircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3), ("xoff", 4), ("control", 5))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitState.setStatus('mandatory')
wfFr1CircuitStateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3))).clone('invalid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitStateSet.setStatus('mandatory')
wfFr1CircuitReceivedFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitReceivedFECNs.setStatus('mandatory')
wfFr1CircuitReceivedBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitReceivedBECNs.setStatus('mandatory')
wfFr1CircuitSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitSentFrames.setStatus('mandatory')
wfFr1CircuitSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitSentOctets.setStatus('mandatory')
wfFr1CircuitReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitReceivedFrames.setStatus('mandatory')
wfFr1CircuitReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitReceivedOctets.setStatus('mandatory')
wfFr1CircuitCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitCreationTime.setStatus('mandatory')
wfFr1CircuitLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitLastTimeChange.setStatus('mandatory')
wfFr1CircuitCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitCommittedBurst.setStatus('mandatory')
wfFr1CircuitExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitExcessBurst.setStatus('mandatory')
wfFr1CircuitThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitThroughput.setStatus('mandatory')
wfFr1CircuitMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multicast", 1), ("unicast", 2))).clone('unicast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitMulticast.setStatus('mandatory')
wfFr1CircuitDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitDiscards.setStatus('mandatory')
wfFr1CircuitDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFr1CircuitDrops.setStatus('mandatory')
wfFr1CircuitSubCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitSubCct.setStatus('mandatory')
wfFr1CircuitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("group", 1), ("hybrid", 2), ("direct", 3))).clone('group')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFr1CircuitMode.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-FR-MIB", wfFr1ErrDrops=wfFr1ErrDrops, wfFr1CircuitMode=wfFr1CircuitMode, wfFr1DlcmiPassiveReceived=wfFr1DlcmiPassiveReceived, wfFr1DlcmiSeqCount=wfFr1DlcmiSeqCount, wfFr1CircuitSubCct=wfFr1CircuitSubCct, wfFr1DlcmiState=wfFr1DlcmiState, wfFr1DlcmiDisable=wfFr1DlcmiDisable, wfFr1CircuitMulticast=wfFr1CircuitMulticast, wfFr1CircuitCommittedBurst=wfFr1CircuitCommittedBurst, wfFr1DlcmiDelete=wfFr1DlcmiDelete, wfFr1DlcmiAddress=wfFr1DlcmiAddress, wfFr1DlcmiCircuit=wfFr1DlcmiCircuit, wfFr1CircuitState=wfFr1CircuitState, wfFr1CircuitCreationTime=wfFr1CircuitCreationTime, wfFr1CircuitThroughput=wfFr1CircuitThroughput, wfFr1DlcmiFullEnquiryInterval=wfFr1DlcmiFullEnquiryInterval, wfFr1CircuitReceivedFECNs=wfFr1CircuitReceivedFECNs, wfFr1CircuitLastTimeChange=wfFr1CircuitLastTimeChange, wfFr1CircuitReceivedFrames=wfFr1CircuitReceivedFrames, wfFr1CircuitDlci=wfFr1CircuitDlci, wfFr1CircuitDrops=wfFr1CircuitDrops, wfFr1DlcmiAlarmTimer=wfFr1DlcmiAlarmTimer, wfFr1CircuitSentOctets=wfFr1CircuitSentOctets, wfFr1DlcmiStatus=wfFr1DlcmiStatus, wfFr1DlcmiLastReceived=wfFr1DlcmiLastReceived, wfFrCircuitTable=wfFrCircuitTable, wfFr1CircuitDelete=wfFr1CircuitDelete, wfFr1CircuitReceivedBECNs=wfFr1CircuitReceivedBECNs, wfFr1ErrDiscards=wfFr1ErrDiscards, wfFr1ErrData=wfFr1ErrData, wfFr1CircuitNumber=wfFr1CircuitNumber, wfFr1DlcmiPolls=wfFr1DlcmiPolls, wfFr1DlcmiMonitoredEvents=wfFr1DlcmiMonitoredEvents, wfFr1DlcmiAddressLen=wfFr1DlcmiAddressLen, wfFrDlcmiTable=wfFrDlcmiTable, wfFr1DlcmiPollingInterval=wfFr1DlcmiPollingInterval, wfFr1CircuitStateSet=wfFr1CircuitStateSet, wfFr1CircuitSentFrames=wfFr1CircuitSentFrames, wfFrCircuitEntry=wfFrCircuitEntry, wfFrDlcmiEntry=wfFrDlcmiEntry, wfFr1DlcmiMaxSupportedVCs=wfFr1DlcmiMaxSupportedVCs, wfFr1DlcmiErrorThreshold=wfFr1DlcmiErrorThreshold, wfFr1DlcmiMulticast=wfFr1DlcmiMulticast, wfFr1DlcmiPassiveSeqCount=wfFr1DlcmiPassiveSeqCount, wfFr1CircuitReceivedOctets=wfFr1CircuitReceivedOctets, wfFr1CircuitExcessBurst=wfFr1CircuitExcessBurst, wfFr1DlcmiManagementType=wfFr1DlcmiManagementType, wfFr1ErrType=wfFr1ErrType, wfFr1ErrTime=wfFr1ErrTime, wfFr1CircuitDiscards=wfFr1CircuitDiscards)
