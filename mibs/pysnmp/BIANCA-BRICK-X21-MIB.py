#
# PySNMP MIB module BIANCA-BRICK-X21-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-X21-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Counter32, ObjectIdentity, Unsigned32, TimeTicks, Counter64, MibIdentifier, Bits, NotificationType, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "ObjectIdentity", "Unsigned32", "TimeTicks", "Counter64", "MibIdentifier", "Bits", "NotificationType", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
x21 = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 10))
class Date(Integer32):
    pass

class HexValue(Integer32):
    pass

x21IfTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 10, 1), )
if mibBuilder.loadTexts: x21IfTable.setStatus('mandatory')
x21IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-X21-MIB", "x21IfIndex"))
if mibBuilder.loadTexts: x21IfEntry.setStatus('mandatory')
x21IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfIndex.setStatus('mandatory')
x21IfL1State = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dn", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfL1State.setStatus('mandatory')
x21IfL1Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x21IfL1Mode.setStatus('mandatory')
x21IfIfLeads = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x21IfIfLeads.setStatus('mandatory')
x21IfSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("s2048k", 1), ("s1024k", 2), ("s512k", 3), ("s256k", 4), ("s128k", 5), ("s64000", 6), ("s38400", 7), ("s19200", 8), ("s14400", 9), ("s9600", 10), ("s2400", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x21IfSpeed.setStatus('mandatory')
x21IfL2Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x21IfL2Mode.setStatus('mandatory')
x21IfSpeedReal = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfSpeedReal.setStatus('mandatory')
x21IfRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfRxPackets.setStatus('mandatory')
x21IfRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfRxOctets.setStatus('mandatory')
x21IfTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfTxPackets.setStatus('mandatory')
x21IfTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfTxOctets.setStatus('mandatory')
x21IfRxResets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfRxResets.setStatus('mandatory')
x21IfRxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfRxAborts.setStatus('mandatory')
x21IfRxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfRxOverruns.setStatus('mandatory')
x21IfRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfRxCRCErrors.setStatus('mandatory')
x21IfRxGiantFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfRxGiantFrames.setStatus('mandatory')
x21IfTxResets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfTxResets.setStatus('mandatory')
x21IfTxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfTxAborts.setStatus('mandatory')
x21IfTxUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfTxUnderruns.setStatus('mandatory')
x21IfTxGiantFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 10, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x21IfTxGiantFrames.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-X21-MIB", org=org, x21IfTxOctets=x21IfTxOctets, x21IfSpeed=x21IfSpeed, x21IfTxUnderruns=x21IfTxUnderruns, x21IfEntry=x21IfEntry, x21IfRxResets=x21IfRxResets, internet=internet, enterprises=enterprises, bintec=bintec, bibo=bibo, x21IfRxCRCErrors=x21IfRxCRCErrors, x21IfTxResets=x21IfTxResets, x21IfL1Mode=x21IfL1Mode, x21IfRxOctets=x21IfRxOctets, x21IfTxPackets=x21IfTxPackets, x21IfIfLeads=x21IfIfLeads, x21IfRxAborts=x21IfRxAborts, dod=dod, x21IfTxGiantFrames=x21IfTxGiantFrames, x21IfRxOverruns=x21IfRxOverruns, x21IfRxGiantFrames=x21IfRxGiantFrames, private=private, Date=Date, x21=x21, x21IfL2Mode=x21IfL2Mode, x21IfTable=x21IfTable, HexValue=HexValue, x21IfTxAborts=x21IfTxAborts, x21IfIndex=x21IfIndex, x21IfL1State=x21IfL1State, x21IfRxPackets=x21IfRxPackets, x21IfSpeedReal=x21IfSpeedReal)
