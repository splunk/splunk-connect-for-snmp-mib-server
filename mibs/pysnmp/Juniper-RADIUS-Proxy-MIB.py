#
# PySNMP MIB module Juniper-RADIUS-Proxy-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-RADIUS-Proxy-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:53:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, Counter32, NotificationType, Integer32, MibIdentifier, iso, Unsigned32, Gauge32, Bits, Counter64, ObjectIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "NotificationType", "Integer32", "MibIdentifier", "iso", "Unsigned32", "Gauge32", "Bits", "Counter64", "ObjectIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
juniRadiusProxyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73))
juniRadiusProxyMIB.setRevisions(('2004-01-23 19:32',))
if mibBuilder.loadTexts: juniRadiusProxyMIB.setLastUpdated('200401231932Z')
if mibBuilder.loadTexts: juniRadiusProxyMIB.setOrganization('Juniper Networks, Inc.')
juniRadiusProxyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1))
juniRadiusGeneralProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 1))
juniRadiusAuthProxyCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2))
juniRadiusAcctProxyCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3))
juniRadiusProxyUdpChecksum = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniRadiusProxyUdpChecksum.setStatus('current')
juniRadiusAuthProxyCfgPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniRadiusAuthProxyCfgPortNumber.setStatus('current')
juniRadiusAuthProxyCfgClientTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2, 2), )
if mibBuilder.loadTexts: juniRadiusAuthProxyCfgClientTable.setStatus('current')
juniRadiusAuthProxyCfgClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2, 2, 1), ).setIndexNames((0, "Juniper-RADIUS-Proxy-MIB", "juniRadiusAuthProxyCfgClientAddress"), (0, "Juniper-RADIUS-Proxy-MIB", "juniRadiusAuthProxyCfgClientMask"))
if mibBuilder.loadTexts: juniRadiusAuthProxyCfgClientEntry.setStatus('current')
juniRadiusAuthProxyCfgClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniRadiusAuthProxyCfgClientAddress.setStatus('current')
juniRadiusAuthProxyCfgClientMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: juniRadiusAuthProxyCfgClientMask.setStatus('current')
juniRadiusAuthProxyCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniRadiusAuthProxyCfgRowStatus.setStatus('current')
juniRadiusAuthProxyCfgClientKey = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniRadiusAuthProxyCfgClientKey.setStatus('current')
juniRadiusAcctProxyCfgPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniRadiusAcctProxyCfgPortNumber.setStatus('current')
juniRadiusAcctProxyCfgClientTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3, 2), )
if mibBuilder.loadTexts: juniRadiusAcctProxyCfgClientTable.setStatus('current')
juniRadiusAcctProxyCfgClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3, 2, 1), ).setIndexNames((0, "Juniper-RADIUS-Proxy-MIB", "juniRadiusAcctProxyCfgClientAddress"), (0, "Juniper-RADIUS-Proxy-MIB", "juniRadiusAcctProxyCfgClientMask"))
if mibBuilder.loadTexts: juniRadiusAcctProxyCfgClientEntry.setStatus('current')
juniRadiusAcctProxyCfgClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniRadiusAcctProxyCfgClientAddress.setStatus('current')
juniRadiusAcctProxyCfgClientMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: juniRadiusAcctProxyCfgClientMask.setStatus('current')
juniRadiusAcctProxyCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniRadiusAcctProxyCfgRowStatus.setStatus('current')
juniRadiusAcctProxyCfgClientKey = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 1, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniRadiusAcctProxyCfgClientKey.setStatus('current')
juniRadiusProxyMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 2))
juniRadiusProxyMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 2, 1))
juniRadiusProxyMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 2, 2))
juniRadiusProxyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 2, 1, 1)).setObjects(("Juniper-RADIUS-Proxy-MIB", "juniRadiusBasicProxyGroup"), ("Juniper-RADIUS-Proxy-MIB", "juniRadiusAuthProxyGroup"), ("Juniper-RADIUS-Proxy-MIB", "juniRadiusAcctProxyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniRadiusProxyCompliance = juniRadiusProxyCompliance.setStatus('current')
juniRadiusBasicProxyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 2, 2, 1)).setObjects(("Juniper-RADIUS-Proxy-MIB", "juniRadiusProxyUdpChecksum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniRadiusBasicProxyGroup = juniRadiusBasicProxyGroup.setStatus('current')
juniRadiusAuthProxyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 2, 2, 2)).setObjects(("Juniper-RADIUS-Proxy-MIB", "juniRadiusAuthProxyCfgPortNumber"), ("Juniper-RADIUS-Proxy-MIB", "juniRadiusAuthProxyCfgRowStatus"), ("Juniper-RADIUS-Proxy-MIB", "juniRadiusAuthProxyCfgClientKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniRadiusAuthProxyGroup = juniRadiusAuthProxyGroup.setStatus('current')
juniRadiusAcctProxyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 73, 2, 2, 3)).setObjects(("Juniper-RADIUS-Proxy-MIB", "juniRadiusAcctProxyCfgPortNumber"), ("Juniper-RADIUS-Proxy-MIB", "juniRadiusAcctProxyCfgRowStatus"), ("Juniper-RADIUS-Proxy-MIB", "juniRadiusAcctProxyCfgClientKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniRadiusAcctProxyGroup = juniRadiusAcctProxyGroup.setStatus('current')
mibBuilder.exportSymbols("Juniper-RADIUS-Proxy-MIB", juniRadiusProxyMIBConformance=juniRadiusProxyMIBConformance, juniRadiusAcctProxyGroup=juniRadiusAcctProxyGroup, juniRadiusProxyMIBCompliances=juniRadiusProxyMIBCompliances, juniRadiusAuthProxyCfgClientAddress=juniRadiusAuthProxyCfgClientAddress, juniRadiusAcctProxyCfgClientMask=juniRadiusAcctProxyCfgClientMask, juniRadiusAcctProxyCfgClientKey=juniRadiusAcctProxyCfgClientKey, juniRadiusAuthProxyCfgPortNumber=juniRadiusAuthProxyCfgPortNumber, juniRadiusAuthProxyCfg=juniRadiusAuthProxyCfg, juniRadiusProxyMIBGroups=juniRadiusProxyMIBGroups, juniRadiusAuthProxyCfgClientEntry=juniRadiusAuthProxyCfgClientEntry, juniRadiusAuthProxyCfgClientTable=juniRadiusAuthProxyCfgClientTable, juniRadiusProxyMIB=juniRadiusProxyMIB, juniRadiusAcctProxyCfgClientTable=juniRadiusAcctProxyCfgClientTable, juniRadiusAcctProxyCfgClientEntry=juniRadiusAcctProxyCfgClientEntry, juniRadiusAcctProxyCfgRowStatus=juniRadiusAcctProxyCfgRowStatus, juniRadiusAuthProxyCfgClientKey=juniRadiusAuthProxyCfgClientKey, juniRadiusProxyUdpChecksum=juniRadiusProxyUdpChecksum, juniRadiusAcctProxyCfg=juniRadiusAcctProxyCfg, juniRadiusAuthProxyCfgClientMask=juniRadiusAuthProxyCfgClientMask, juniRadiusGeneralProxy=juniRadiusGeneralProxy, juniRadiusAuthProxyGroup=juniRadiusAuthProxyGroup, PYSNMP_MODULE_ID=juniRadiusProxyMIB, juniRadiusProxyCompliance=juniRadiusProxyCompliance, juniRadiusAcctProxyCfgPortNumber=juniRadiusAcctProxyCfgPortNumber, juniRadiusAcctProxyCfgClientAddress=juniRadiusAcctProxyCfgClientAddress, juniRadiusBasicProxyGroup=juniRadiusBasicProxyGroup, juniRadiusAuthProxyCfgRowStatus=juniRadiusAuthProxyCfgRowStatus, juniRadiusProxyObjects=juniRadiusProxyObjects)
