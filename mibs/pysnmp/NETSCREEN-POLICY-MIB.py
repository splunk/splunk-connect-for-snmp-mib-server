#
# PySNMP MIB module NETSCREEN-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-POLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
netscreenPolicy, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenPolicy")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, ObjectIdentity, Counter64, Bits, NotificationType, MibIdentifier, TimeTicks, Gauge32, Unsigned32, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "ObjectIdentity", "Counter64", "Bits", "NotificationType", "MibIdentifier", "TimeTicks", "Gauge32", "Unsigned32", "Counter32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenPolicyMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 10, 0))
netscreenPolicyMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-08-13 00:00', '2001-05-14 00:00',))
if mibBuilder.loadTexts: netscreenPolicyMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenPolicyMibModule.setOrganization('Juniper Networks, Inc.')
nsPlyTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 10, 1), )
if mibBuilder.loadTexts: nsPlyTable.setStatus('current')
nsPlyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1), ).setIndexNames((0, "NETSCREEN-POLICY-MIB", "nsPlyVsys"), (0, "NETSCREEN-POLICY-MIB", "nsPlyId"))
if mibBuilder.loadTexts: nsPlyEntry.setStatus('current')
nsPlyId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyId.setStatus('current')
nsPlyVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyVsys.setStatus('current')
nsPlySrcZone = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlySrcZone.setStatus('current')
nsPlyDstZone = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyDstZone.setStatus('current')
nsPlySrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlySrcAddr.setStatus('current')
nsPlyDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyDstAddr.setStatus('current')
nsPlyService = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50))).clone(namedValues=NamedValues(("any", 0), ("aol", 1), ("bgp", 2), ("dpcp-relay", 3), ("dns", 4), ("finger", 5), ("ftp", 6), ("ftp-get", 7), ("ftp-put", 8), ("gopher", 9), ("h323", 10), ("http", 11), ("https", 12), ("icmp-info", 13), ("icmp-timestamp", 14), ("ike", 15), ("imap", 16), ("internet-locator-service", 17), ("irc", 18), ("l2tp", 19), ("ldap", 20), ("mail", 21), ("netmeeting", 22), ("nfs", 23), ("nntp", 24), ("ns-global", 25), ("ns-global-pro", 26), ("ntp", 27), ("ospf", 28), ("pc-anywhere", 29), ("ping", 30), ("pop3", 31), ("pptp", 32), ("real-media", 33), ("rip", 34), ("rlogin", 35), ("snmp", 36), ("ssh", 37), ("syslog", 38), ("talk", 39), ("tcp-any", 40), ("telnet", 41), ("tftp", 42), ("traceroute", 43), ("udp-any", 44), ("uucp", 45), ("vdo-live", 46), ("wais", 47), ("winframe", 48), ("x-windows", 49), ("other", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyService.setStatus('current')
nsPlyAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("deny", 0), ("permit", 1), ("tunnel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyAction.setStatus('current')
nsPlyNat = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyNat.setStatus('current')
nsPlyFixPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyFixPort.setStatus('current')
nsPlyDipId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyDipId.setStatus('current')
nsPlyVpnTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyVpnTunnel.setStatus('current')
nsPlyL2tpTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyL2tpTunnel.setStatus('current')
nsPlyAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyAuth.setStatus('current')
nsPlyLogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyLogEnable.setStatus('current')
nsPlyCountEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyCountEnable.setStatus('current')
nsPlyAlarmBPS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyAlarmBPS.setStatus('current')
nsPlyAlarmBPM = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyAlarmBPM.setStatus('current')
nsPlySchedule = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlySchedule.setStatus('current')
nsPlyTrafficShapeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyTrafficShapeEnable.setStatus('current')
nsPlyTrafficPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("high", 0), ("priority2nd", 1), ("priority3rd", 2), ("priority4th", 3), ("priority5th", 4), ("priority6th", 5), ("priority7th", 6), ("priorityLow", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyTrafficPriority.setStatus('current')
nsPlyDSEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyDSEnable.setStatus('current')
nsPlyActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("inuse", 1), ("hidden", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyActiveStatus.setStatus('current')
nsPlyName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyName.setStatus('current')
nsPlyServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyServiceName.setStatus('current')
nsPlyMonTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 10, 2), )
if mibBuilder.loadTexts: nsPlyMonTable.setStatus('current')
nsPlyMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1), ).setIndexNames((0, "NETSCREEN-POLICY-MIB", "nsPlyMonId"), (0, "NETSCREEN-POLICY-MIB", "nsPlyMonVsys"))
if mibBuilder.loadTexts: nsPlyMonEntry.setStatus('current')
nsPlyMonId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonId.setStatus('current')
nsPlyMonVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonVsys.setStatus('current')
nsPlyMonPackPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonPackPerSec.setStatus('current')
nsPlyMonPackPerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonPackPerMin.setStatus('current')
nsPlyMonTotalPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonTotalPacket.setStatus('current')
nsPlyMonBytePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonBytePerSec.setStatus('current')
nsPlyMonBytePerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonBytePerMin.setStatus('current')
nsPlyMonTotalByte = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonTotalByte.setStatus('current')
nsPlyMonSessionPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonSessionPerSec.setStatus('current')
nsPlyMonSessionPerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonSessionPerMin.setStatus('current')
nsPlyMonTotalSession = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 10, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsPlyMonTotalSession.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-POLICY-MIB", nsPlyTrafficShapeEnable=nsPlyTrafficShapeEnable, nsPlyName=nsPlyName, nsPlyMonPackPerMin=nsPlyMonPackPerMin, nsPlyAuth=nsPlyAuth, nsPlyDstZone=nsPlyDstZone, nsPlyAlarmBPS=nsPlyAlarmBPS, nsPlyMonSessionPerSec=nsPlyMonSessionPerSec, nsPlyVsys=nsPlyVsys, nsPlyMonTotalPacket=nsPlyMonTotalPacket, nsPlyMonId=nsPlyMonId, nsPlyMonTotalSession=nsPlyMonTotalSession, nsPlyL2tpTunnel=nsPlyL2tpTunnel, nsPlyMonBytePerMin=nsPlyMonBytePerMin, nsPlyServiceName=nsPlyServiceName, nsPlyDSEnable=nsPlyDSEnable, nsPlyVpnTunnel=nsPlyVpnTunnel, nsPlyMonTable=nsPlyMonTable, nsPlyDipId=nsPlyDipId, nsPlyMonTotalByte=nsPlyMonTotalByte, PYSNMP_MODULE_ID=netscreenPolicyMibModule, nsPlyNat=nsPlyNat, nsPlyMonPackPerSec=nsPlyMonPackPerSec, nsPlyMonSessionPerMin=nsPlyMonSessionPerMin, nsPlyAlarmBPM=nsPlyAlarmBPM, nsPlySrcZone=nsPlySrcZone, nsPlyLogEnable=nsPlyLogEnable, nsPlyService=nsPlyService, nsPlyEntry=nsPlyEntry, nsPlyFixPort=nsPlyFixPort, nsPlyMonBytePerSec=nsPlyMonBytePerSec, nsPlyId=nsPlyId, nsPlyCountEnable=nsPlyCountEnable, nsPlySchedule=nsPlySchedule, nsPlyAction=nsPlyAction, nsPlyTrafficPriority=nsPlyTrafficPriority, nsPlyMonEntry=nsPlyMonEntry, nsPlySrcAddr=nsPlySrcAddr, nsPlyActiveStatus=nsPlyActiveStatus, netscreenPolicyMibModule=netscreenPolicyMibModule, nsPlyMonVsys=nsPlyMonVsys, nsPlyDstAddr=nsPlyDstAddr, nsPlyTable=nsPlyTable)
