#
# PySNMP MIB module JANITZA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JANITZA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
MibIdentifier, enterprises, mib_2, Bits, Unsigned32, IpAddress, iso, Counter64, ObjectIdentity, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "enterprises", "mib-2", "Bits", "Unsigned32", "IpAddress", "iso", "Counter64", "ObjectIdentity", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "Counter32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
system = MibIdentifier((1, 3, 6, 1, 2, 1, 1))
snmp = MibIdentifier((1, 3, 6, 1, 2, 1, 11))
sysDescr = MibScalar((1, 3, 6, 1, 2, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDescr.setStatus('current')
sysObjectID = MibScalar((1, 3, 6, 1, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysObjectID.setStatus('current')
sysUpTime = MibScalar((1, 3, 6, 1, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysUpTime.setStatus('current')
sysName = MibScalar((1, 3, 6, 1, 2, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysName.setStatus('current')
sysLocation = MibScalar((1, 3, 6, 1, 2, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocation.setStatus('current')
sysServices = MibScalar((1, 3, 6, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysServices.setStatus('current')
janitza = MibIdentifier((1, 3, 6, 1, 4, 1, 34278))
rmsPhase = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 1))
uLN1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uLN1.setStatus('mandatory')
uLN2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uLN2.setStatus('mandatory')
uLN3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uLN3.setStatus('mandatory')
uLN4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uLN4.setStatus('mandatory')
uL1L2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uL1L2.setStatus('mandatory')
uL2L3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uL2L3.setStatus('mandatory')
uL3L1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uL3L1.setStatus('mandatory')
iL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iL1.setStatus('mandatory')
iL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iL2.setStatus('mandatory')
iL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iL3.setStatus('mandatory')
iL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iL4.setStatus('mandatory')
pL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pL1.setStatus('mandatory')
pL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pL2.setStatus('mandatory')
pL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pL3.setStatus('mandatory')
pL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pL4.setStatus('mandatory')
qL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qL1.setStatus('mandatory')
qL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qL2.setStatus('mandatory')
qL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qL3.setStatus('mandatory')
qL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qL4.setStatus('mandatory')
sL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sL1.setStatus('mandatory')
sL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sL2.setStatus('mandatory')
sL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sL3.setStatus('mandatory')
sL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sL4.setStatus('mandatory')
cosPL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cosPL1.setStatus('mandatory')
cosPL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cosPL2.setStatus('mandatory')
cosPL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cosPL3.setStatus('mandatory')
cosPL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cosPL4.setStatus('mandatory')
rmsSumme3 = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 2))
p3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p3.setStatus('mandatory')
q3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: q3.setStatus('mandatory')
s3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s3.setStatus('mandatory')
cosP3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cosP3.setStatus('mandatory')
rmsSumme4 = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 3))
p4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p4.setStatus('mandatory')
q4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: q4.setStatus('mandatory')
s4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s4.setStatus('mandatory')
cosP4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cosP4.setStatus('mandatory')
energiePhase = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 4))
whL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: whL1.setStatus('mandatory')
whL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: whL2.setStatus('mandatory')
whL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: whL3.setStatus('mandatory')
whL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: whL4.setStatus('mandatory')
qhL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qhL1.setStatus('mandatory')
qhL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qhL2.setStatus('mandatory')
qhL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qhL3.setStatus('mandatory')
qhL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qhL4.setStatus('mandatory')
energieSumme3 = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 5))
wh3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wh3.setStatus('mandatory')
qh3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qh3.setStatus('mandatory')
energieSumme4 = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 6))
wh4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wh4.setStatus('mandatory')
qh4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qh4.setStatus('mandatory')
thd = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 7))
thdULN1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdULN1.setStatus('mandatory')
thdULN2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdULN2.setStatus('mandatory')
thdULN3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdULN3.setStatus('mandatory')
thdULN4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdULN4.setStatus('mandatory')
thdIL1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdIL1.setStatus('mandatory')
thdIL2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdIL2.setStatus('mandatory')
thdIL3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdIL3.setStatus('mandatory')
thdIL4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 7, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thdIL4.setStatus('mandatory')
misc = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 8))
frequenz = MibScalar((1, 3, 6, 1, 4, 1, 34278, 8, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frequenz.setStatus('mandatory')
user = MibIdentifier((1, 3, 6, 1, 4, 1, 34278, 9))
jasicVAR1 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR1.setStatus('mandatory')
jasicVAR2 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR2.setStatus('mandatory')
jasicVAR3 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR3.setStatus('mandatory')
jasicVAR4 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR4.setStatus('mandatory')
jasicVAR5 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR5.setStatus('mandatory')
jasicVAR6 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR6.setStatus('mandatory')
jasicVAR7 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR7.setStatus('mandatory')
jasicVAR8 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR8.setStatus('mandatory')
jasicVAR9 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR9.setStatus('mandatory')
jasicVAR10 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR10.setStatus('mandatory')
jasicVAR11 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR11.setStatus('mandatory')
jasicVAR12 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR12.setStatus('mandatory')
jasicVAR13 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR13.setStatus('mandatory')
jasicVAR14 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR14.setStatus('mandatory')
jasicVAR15 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR15.setStatus('mandatory')
jasicVAR16 = MibScalar((1, 3, 6, 1, 4, 1, 34278, 9, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jasicVAR16.setStatus('mandatory')
coldStart = NotificationType((1, 3, 6, 1, 2, 1, 11) + (0,0))
warmStart = NotificationType((1, 3, 6, 1, 2, 1, 11) + (0,1))
userTrap1 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,6))
userTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,7))
userTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,8))
userTrap4 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,9))
userTrap5 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,10))
userTrap6 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,11))
userTrap7 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,12))
userTrap8 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,13))
userTrap9 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,14))
userTrap10 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,15))
userTrap11 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,16))
userTrap12 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,17))
userTrap13 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,18))
userTrap14 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,19))
userTrap15 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,20))
userTrap16 = NotificationType((1, 3, 6, 1, 4, 1, 34278) + (0,21))
mibBuilder.exportSymbols("JANITZA-MIB", qhL2=qhL2, jasicVAR15=jasicVAR15, janitza=janitza, jasicVAR2=jasicVAR2, misc=misc, userTrap5=userTrap5, userTrap9=userTrap9, thdULN2=thdULN2, userTrap2=userTrap2, userTrap7=userTrap7, uLN2=uLN2, cosPL2=cosPL2, thdIL3=thdIL3, qL1=qL1, jasicVAR6=jasicVAR6, thdULN4=thdULN4, p3=p3, jasicVAR16=jasicVAR16, jasicVAR7=jasicVAR7, cosP4=cosP4, warmStart=warmStart, rmsPhase=rmsPhase, qL4=qL4, thdULN1=thdULN1, userTrap3=userTrap3, thd=thd, sL4=sL4, rmsSumme4=rmsSumme4, uL1L2=uL1L2, thdULN3=thdULN3, sL2=sL2, sysName=sysName, rmsSumme3=rmsSumme3, jasicVAR4=jasicVAR4, jasicVAR11=jasicVAR11, iL2=iL2, system=system, jasicVAR3=jasicVAR3, uLN1=uLN1, wh4=wh4, cosP3=cosP3, p4=p4, user=user, uLN4=uLN4, qhL1=qhL1, energieSumme4=energieSumme4, qL3=qL3, sysUpTime=sysUpTime, userTrap16=userTrap16, jasicVAR14=jasicVAR14, thdIL1=thdIL1, iL3=iL3, frequenz=frequenz, uL3L1=uL3L1, qhL4=qhL4, jasicVAR12=jasicVAR12, userTrap4=userTrap4, sL3=sL3, qhL3=qhL3, q4=q4, jasicVAR8=jasicVAR8, iL4=iL4, uLN3=uLN3, sysObjectID=sysObjectID, sysLocation=sysLocation, iL1=iL1, sysDescr=sysDescr, qh3=qh3, whL2=whL2, jasicVAR5=jasicVAR5, userTrap6=userTrap6, sL1=sL1, jasicVAR13=jasicVAR13, s3=s3, coldStart=coldStart, thdIL4=thdIL4, jasicVAR9=jasicVAR9, energiePhase=energiePhase, pL4=pL4, whL3=whL3, jasicVAR10=jasicVAR10, qL2=qL2, cosPL3=cosPL3, pL1=pL1, s4=s4, jasicVAR1=jasicVAR1, q3=q3, userTrap15=userTrap15, cosPL1=cosPL1, userTrap14=userTrap14, snmp=snmp, wh3=wh3, userTrap10=userTrap10, qh4=qh4, cosPL4=cosPL4, userTrap13=userTrap13, pL3=pL3, thdIL2=thdIL2, userTrap11=userTrap11, uL2L3=uL2L3, sysServices=sysServices, userTrap8=userTrap8, userTrap1=userTrap1, whL4=whL4, energieSumme3=energieSumme3, pL2=pL2, whL1=whL1, userTrap12=userTrap12)
