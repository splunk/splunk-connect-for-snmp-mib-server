#
# PySNMP MIB module HPN-ICF-MP-V2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MP-V2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Unsigned32, Bits, MibIdentifier, Gauge32, Counter32, TimeTicks, Counter64, IpAddress, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "Bits", "MibIdentifier", "Gauge32", "Counter32", "TimeTicks", "Counter64", "IpAddress", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfMultilinkPPPV2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140))
hpnicfMultilinkPPPV2.setRevisions(('2013-07-15 00:00',))
if mibBuilder.loadTexts: hpnicfMultilinkPPPV2.setLastUpdated('201307150000Z')
if mibBuilder.loadTexts: hpnicfMultilinkPPPV2.setOrganization('')
hpnicfMpObjectsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1))
hpnicfMpMultilinkV2Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1), )
if mibBuilder.loadTexts: hpnicfMpMultilinkV2Table.setStatus('current')
hpnicfMpMultilinkV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfMpMultilinkV2Entry.setStatus('current')
hpnicfMpMultilinkDescrV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMultilinkDescrV2.setStatus('current')
hpnicfMpBundleNameV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpBundleNameV2.setStatus('current')
hpnicfMpBundledSlotV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpBundledSlotV2.setStatus('current')
hpnicfMpBundledMemberCntV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpBundledMemberCntV2.setStatus('current')
hpnicfMpLostFragmentsV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpLostFragmentsV2.setStatus('current')
hpnicfMpReorderedPktsV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpReorderedPktsV2.setStatus('current')
hpnicfMpUnassignedPktsV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpUnassignedPktsV2.setStatus('current')
hpnicfMpInterleavedPktsV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpInterleavedPktsV2.setStatus('current')
hpnicfMpRcvdSequenceV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpRcvdSequenceV2.setStatus('current')
hpnicfMpSentSequenceV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpSentSequenceV2.setStatus('current')
hpnicfMpMemberlinkV2Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 2), )
if mibBuilder.loadTexts: hpnicfMpMemberlinkV2Table.setStatus('current')
hpnicfMpMemberlinkV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-MP-V2-MIB", "hpnicfMpMemberlinkSeqNumberV2"))
if mibBuilder.loadTexts: hpnicfMpMemberlinkV2Entry.setStatus('current')
hpnicfMpMemberlinkSeqNumberV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkSeqNumberV2.setStatus('current')
hpnicfMpMemberlinkIfIndexV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkIfIndexV2.setStatus('current')
hpnicfMpMemberlinkDescrV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkDescrV2.setStatus('current')
hpnicfMpMemberlinkMpStatusV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 140, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkMpStatusV2.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MP-V2-MIB", hpnicfMpMultilinkV2Entry=hpnicfMpMultilinkV2Entry, hpnicfMpInterleavedPktsV2=hpnicfMpInterleavedPktsV2, hpnicfMpLostFragmentsV2=hpnicfMpLostFragmentsV2, hpnicfMpBundledMemberCntV2=hpnicfMpBundledMemberCntV2, hpnicfMpMemberlinkDescrV2=hpnicfMpMemberlinkDescrV2, hpnicfMpMemberlinkSeqNumberV2=hpnicfMpMemberlinkSeqNumberV2, hpnicfMpUnassignedPktsV2=hpnicfMpUnassignedPktsV2, hpnicfMpReorderedPktsV2=hpnicfMpReorderedPktsV2, hpnicfMpMultilinkV2Table=hpnicfMpMultilinkV2Table, hpnicfMpMemberlinkV2Table=hpnicfMpMemberlinkV2Table, hpnicfMpBundleNameV2=hpnicfMpBundleNameV2, PYSNMP_MODULE_ID=hpnicfMultilinkPPPV2, hpnicfMpMultilinkDescrV2=hpnicfMpMultilinkDescrV2, hpnicfMpSentSequenceV2=hpnicfMpSentSequenceV2, hpnicfMpMemberlinkMpStatusV2=hpnicfMpMemberlinkMpStatusV2, hpnicfMpMemberlinkV2Entry=hpnicfMpMemberlinkV2Entry, hpnicfMpMemberlinkIfIndexV2=hpnicfMpMemberlinkIfIndexV2, hpnicfMpBundledSlotV2=hpnicfMpBundledSlotV2, hpnicfMpObjectsV2=hpnicfMpObjectsV2, hpnicfMultilinkPPPV2=hpnicfMultilinkPPPV2, hpnicfMpRcvdSequenceV2=hpnicfMpRcvdSequenceV2)
