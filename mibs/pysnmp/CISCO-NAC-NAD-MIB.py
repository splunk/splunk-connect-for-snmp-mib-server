#
# PySNMP MIB module CISCO-NAC-NAD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-NAC-NAD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:51:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
CnnEouAuthType, CnnEouState, CnnEouDeviceType, CnnEouPostureToken, CnnEouPostureTokenString = mibBuilder.importSymbols("CISCO-NAC-TC-MIB", "CnnEouAuthType", "CnnEouState", "CnnEouDeviceType", "CnnEouPostureToken", "CnnEouPostureTokenString")
CpgPolicyNameOrEmpty, = mibBuilder.importSymbols("CISCO-POLICY-GROUP-MIB", "CpgPolicyNameOrEmpty")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoURLString, = mibBuilder.importSymbols("CISCO-TC", "CiscoURLString")
InterfaceIndexOrZero, ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex", "InterfaceIndex")
InetPortNumber, InetAddressPrefixLength, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressPrefixLength", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, ModuleIdentity, Bits, Unsigned32, Counter32, Counter64, IpAddress, Gauge32, ObjectIdentity, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "ModuleIdentity", "Bits", "Unsigned32", "Counter32", "Counter64", "IpAddress", "Gauge32", "ObjectIdentity", "TimeTicks", "NotificationType")
RowStatus, TruthValue, TextualConvention, MacAddress, StorageType, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "MacAddress", "StorageType", "DisplayString", "TimeStamp")
ciscoNacNadMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 484))
ciscoNacNadMIB.setRevisions(('2008-06-23 00:00', '2007-11-12 00:00', '2007-02-23 00:00', '2005-06-28 00:00',))
if mibBuilder.loadTexts: ciscoNacNadMIB.setLastUpdated('200806230000Z')
if mibBuilder.loadTexts: ciscoNacNadMIB.setOrganization('Cisco Systems, Inc.')
ciscoNacNadMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 0))
ciscoNacNadMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 1))
ciscoNacNadMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 2))
cnnEouGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1))
cnnEouAuthorizeLists = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2))
cnnEouIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3))
cnnEouHostMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4))
cnnIpDeviceTrackingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 5))
cnnEouVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouVersion.setStatus('current')
cnnEouEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouEnabled.setStatus('current')
cnnEouAllowClientless = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouAllowClientless.setStatus('current')
cnnEouAllowIpStationId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouAllowIpStationId.setStatus('current')
cnnEouLoggingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouLoggingEnabled.setStatus('current')
cnnEouMaxRetry = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouMaxRetry.setStatus('current')
cnnEouPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 7), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouPort.setStatus('current')
cnnEouRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouRateLimit.setStatus('current')
cnnEouTimeoutAAA = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouTimeoutAAA.setStatus('current')
cnnEouTimeoutHoldPeriod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 10), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouTimeoutHoldPeriod.setStatus('current')
cnnEouTimeoutRetransmit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 11), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouTimeoutRetransmit.setStatus('current')
cnnEouTimeoutRevalidation = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 12), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouTimeoutRevalidation.setStatus('current')
cnnEouTimeoutStatusQuery = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 13), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouTimeoutStatusQuery.setStatus('current')
cnnEouCriticalRecoveryDelay = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 14), Unsigned32()).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouCriticalRecoveryDelay.setStatus('current')
cnnEouRevalidationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouRevalidationEnabled.setStatus('current')
cnnIpDeviceTrackingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnIpDeviceTrackingEnabled.setStatus('current')
cnnIpDeviceTrackingProbeCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 5, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnIpDeviceTrackingProbeCount.setStatus('current')
cnnIpDeviceTrackingProbeInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 5, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnIpDeviceTrackingProbeInterval.setStatus('current')
cnnEouIfIpDevTrackConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 5, 4), )
if mibBuilder.loadTexts: cnnEouIfIpDevTrackConfigTable.setStatus('current')
cnnEouIfIpDevTrackConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 5, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cnnEouIfIpDevTrackConfigEntry.setStatus('current')
cnnEouIfIpDevTrackEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 5, 4, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfIpDevTrackEnabled.setStatus('current')
cnnEouAuthIpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1), )
if mibBuilder.loadTexts: cnnEouAuthIpTable.setStatus('current')
cnnEouAuthIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-NAC-NAD-MIB", "cnnEouAuthIpAddrType"), (0, "CISCO-NAC-NAD-MIB", "cnnEouAuthIpAddr"))
if mibBuilder.loadTexts: cnnEouAuthIpEntry.setStatus('current')
cnnEouAuthIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cnnEouAuthIpAddrType.setStatus('current')
cnnEouAuthIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cnnEouAuthIpAddr.setStatus('current')
cnnEouAuthIpAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1, 1, 3), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthIpAddrMask.setStatus('current')
cnnEouAuthIpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1, 1, 4), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthIpPolicy.setStatus('current')
cnnEouAuthIpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthIpStorageType.setStatus('current')
cnnEouAuthIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthIpRowStatus.setStatus('current')
cnnEouAuthMacTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 2), )
if mibBuilder.loadTexts: cnnEouAuthMacTable.setStatus('current')
cnnEouAuthMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-NAC-NAD-MIB", "cnnEouAuthMacAddr"))
if mibBuilder.loadTexts: cnnEouAuthMacEntry.setStatus('current')
cnnEouAuthMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: cnnEouAuthMacAddr.setStatus('current')
cnnEouAuthMacAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthMacAddrMask.setStatus('current')
cnnEouAuthMacPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 2, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthMacPolicy.setStatus('current')
cnnEouAuthMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 2, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthMacStorageType.setStatus('current')
cnnEouAuthMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthMacRowStatus.setStatus('current')
cnnEouAuthDeviceTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 3), )
if mibBuilder.loadTexts: cnnEouAuthDeviceTypeTable.setStatus('current')
cnnEouAuthDeviceTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-NAC-NAD-MIB", "cnnEouAuthDeviceType"))
if mibBuilder.loadTexts: cnnEouAuthDeviceTypeEntry.setStatus('current')
cnnEouAuthDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 3, 1, 1), CnnEouDeviceType())
if mibBuilder.loadTexts: cnnEouAuthDeviceType.setStatus('current')
cnnEouAuthDeviceTypeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 3, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthDeviceTypeStorageType.setStatus('current')
cnnEouAuthDeviceTypeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouAuthDeviceTypeRowStatus.setStatus('current')
cnnEouIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1), )
if mibBuilder.loadTexts: cnnEouIfConfigTable.setStatus('current')
cnnEouIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cnnEouIfConfigEntry.setStatus('current')
cnnEouIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("disabled", 2), ("bypass", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfAdminStatus.setStatus('current')
cnnEouIfMaxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfMaxRetry.setStatus('current')
cnnEouIfValidateAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("initialize", 2), ("revalidate", 3), ("noRevalidate", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfValidateAction.setStatus('current')
cnnEouIfTimeoutGlobalConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 4), Bits().clone(namedValues=NamedValues(("aaa", 0), ("holdPeriod", 1), ("retransmit", 2), ("revalidation", 3), ("statusQuery", 4), ("maxRetry", 5), ("clientless", 6), ("ipStationId", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfTimeoutGlobalConfig.setStatus('current')
cnnEouIfTimeoutAAA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfTimeoutAAA.setStatus('current')
cnnEouIfTimeoutHoldPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfTimeoutHoldPeriod.setStatus('current')
cnnEouIfTimeoutRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfTimeoutRetransmit.setStatus('current')
cnnEouIfTimeoutRevalidation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfTimeoutRevalidation.setStatus('current')
cnnEouIfTimeoutStatusQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfTimeoutStatusQuery.setStatus('current')
cnnEouIfAaaFailPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 10), CpgPolicyNameOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfAaaFailPolicy.setStatus('current')
cnnEouIfAllowClientless = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfAllowClientless.setStatus('current')
cnnEouIfAllowIpStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 3, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouIfAllowIpStationId.setStatus('current')
cnnEouHostValidateAction = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("none", 1), ("initializeAll", 2), ("initializeAuthClientless", 3), ("initializeAuthEap", 4), ("initializeAuthStatic", 5), ("initializeIp", 6), ("initializeMac", 7), ("initializePostureToken", 8), ("revalidateAll", 9), ("revalidateAuthClientless", 10), ("revalidateAuthEap", 11), ("revalidateAuthStatic", 12), ("revalidateIp", 13), ("revalidateMac", 14), ("revalidatePostureToken", 15), ("noRevalidateAll", 16), ("noRevalidateAuthClientless", 17), ("noRevalidateAuthEap", 18), ("noRevalidateAuthStatic", 19), ("noRevalidateIp", 20), ("noRevalidateMac", 21), ("noRevalidatePostureToken", 22), ("initializePostureTokenStr", 23), ("revalidatePostureTokenStr", 24), ("noRevalidatePostureTokenStr", 25)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouHostValidateAction.setStatus('current')
cnnEouHostValidateIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouHostValidateIpAddrType.setStatus('current')
cnnEouHostValidateIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouHostValidateIpAddr.setStatus('current')
cnnEouHostValidateMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouHostValidateMacAddr.setStatus('current')
cnnEouHostValidatePostureToken = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 5), CnnEouPostureToken()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouHostValidatePostureToken.setStatus('deprecated')
cnnEouHostMaxQueries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostMaxQueries.setStatus('current')
cnnEouHostQueryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7), )
if mibBuilder.loadTexts: cnnEouHostQueryTable.setStatus('current')
cnnEouHostQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1), ).setIndexNames((0, "CISCO-NAC-NAD-MIB", "cnnEouHostQueryIndex"))
if mibBuilder.loadTexts: cnnEouHostQueryEntry.setStatus('current')
cnnEouHostQueryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cnnEouHostQueryIndex.setStatus('current')
cnnEouHostQueryMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("authenClientless", 1), ("authenEap", 2), ("authenStatic", 3), ("interface", 4), ("ip", 5), ("mac", 6), ("postureToken", 7), ("all", 8), ("postureTokenString", 9))).clone('all')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryMask.setStatus('current')
cnnEouHostQueryInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryInterface.setStatus('current')
cnnEouHostQueryIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 4), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryIpAddrType.setStatus('current')
cnnEouHostQueryIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 5), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryIpAddr.setStatus('current')
cnnEouHostQueryMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 6), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryMacAddr.setStatus('current')
cnnEouHostQueryPostureToken = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 7), CnnEouPostureToken().clone('healthy')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryPostureToken.setStatus('deprecated')
cnnEouHostQuerySkipNHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQuerySkipNHosts.setStatus('current')
cnnEouHostQueryMaxResultRows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryMaxResultRows.setStatus('current')
cnnEouHostQueryTotalHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostQueryTotalHosts.setStatus('current')
cnnEouHostQueryRows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostQueryRows.setStatus('current')
cnnEouHostQueryCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostQueryCreateTime.setStatus('current')
cnnEouHostQueryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryStatus.setStatus('current')
cnnEouHostQueryPostureTokenStr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 7, 1, 14), CnnEouPostureTokenString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnnEouHostQueryPostureTokenStr.setStatus('current')
cnnEouHostResultTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8), )
if mibBuilder.loadTexts: cnnEouHostResultTable.setStatus('current')
cnnEouHostResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1), ).setIndexNames((0, "CISCO-NAC-NAD-MIB", "cnnEouHostQueryIndex"), (0, "CISCO-NAC-NAD-MIB", "cnnEouHostResultIndex"))
if mibBuilder.loadTexts: cnnEouHostResultEntry.setStatus('current')
cnnEouHostResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cnnEouHostResultIndex.setStatus('current')
cnnEouHostResultAssocIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultAssocIf.setStatus('current')
cnnEouHostResultIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultIpAddrType.setStatus('current')
cnnEouHostResultIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultIpAddr.setStatus('current')
cnnEouHostResultMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultMacAddr.setStatus('current')
cnnEouHostResultAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 6), CnnEouAuthType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultAuthType.setStatus('current')
cnnEouHostResultPostureToken = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 7), CnnEouPostureToken()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultPostureToken.setStatus('deprecated')
cnnEouHostResultAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 8), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultAge.setStatus('current')
cnnEouHostResultUrlRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 9), CiscoURLString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultUrlRedir.setStatus('current')
cnnEouHostResultAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultAclName.setStatus('current')
cnnEouHostResultStatusQryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 11), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultStatusQryPeriod.setStatus('current')
cnnEouHostResultRevalidatePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 12), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultRevalidatePeriod.setStatus('current')
cnnEouHostResultState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 13), CnnEouState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultState.setStatus('current')
cnnEouHostResultPostureTokenStr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 14), CnnEouPostureTokenString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultPostureTokenStr.setStatus('current')
cnnEouHostResultUrlRedirectAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultUrlRedirectAcl.setStatus('current')
cnnEouHostResultTagName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultTagName.setStatus('current')
cnnEouHostResultAuditSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultAuditSessionId.setStatus('current')
cnnEouHostResultAaaFailPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 8, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnnEouHostResultAaaFailPolicy.setStatus('current')
cnnEouHostValidatePostureTokenStr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 484, 1, 4, 9), CnnEouPostureTokenString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnnEouHostValidatePostureTokenStr.setStatus('current')
ciscoNacNadMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 1))
ciscoNacNadMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2))
ciscoNacNadMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 1, 1)).setObjects(("CISCO-NAC-NAD-MIB", "ciscoNacNadEouGlobalGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthIpGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfConfigGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfTimeoutGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfMaxRetryGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouRateLimitGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfAdminGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthMacGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthDeviceTypeGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAgeGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostUrlRedir"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAclGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadMIBCompliance = ciscoNacNadMIBCompliance.setStatus('deprecated')
ciscoNacNadMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 1, 2)).setObjects(("CISCO-NAC-NAD-MIB", "ciscoNacNadEouGlobalGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthIpGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfConfigGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfTimeoutGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfMaxRetryGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouRateLimitGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfAdminGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthMacGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthDeviceTypeGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAgeGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostUrlRedir"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAclGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfAaaFailPolicyGrp"), ("CISCO-NAC-NAD-MIB", "cnnIpDeviceTrackingConfigGrp"), ("CISCO-NAC-NAD-MIB", "cnnEouCriticalRecoveryDelayGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadMIBCompliance2 = ciscoNacNadMIBCompliance2.setStatus('deprecated')
ciscoNacNadMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 1, 3)).setObjects(("CISCO-NAC-NAD-MIB", "ciscoNacNadEouGlobalGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthIpGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfConfigGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfTimeoutGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfMaxRetryGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouRateLimitGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfAdminGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthMacGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthDeviceTypeGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAgeGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostUrlRedir"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAclGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfAaaFailPolicyGrp"), ("CISCO-NAC-NAD-MIB", "cnnIpDeviceTrackingConfigGrp"), ("CISCO-NAC-NAD-MIB", "cnnEouCriticalRecoveryDelayGrp"), ("CISCO-NAC-NAD-MIB", "cnnEouIfIpDevTrackConfigGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadMIBCompliance3 = ciscoNacNadMIBCompliance3.setStatus('deprecated')
ciscoNacNadMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 1, 4)).setObjects(("CISCO-NAC-NAD-MIB", "ciscoNacNadEouGlobalGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthIpGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfConfigGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfTimeoutGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfMaxRetryGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouRateLimitGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfAdminGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthMacGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouAuthDeviceTypeGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAgeGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostUrlRedir"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostAclGroup"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfAaaFailPolicyGrp"), ("CISCO-NAC-NAD-MIB", "cnnIpDeviceTrackingConfigGrp"), ("CISCO-NAC-NAD-MIB", "cnnEouCriticalRecoveryDelayGrp"), ("CISCO-NAC-NAD-MIB", "cnnEouIfIpDevTrackConfigGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadRevalidateConfigGrp"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouHostGroup1"), ("CISCO-NAC-NAD-MIB", "ciscoNacNadEouIfExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadMIBCompliance4 = ciscoNacNadMIBCompliance4.setStatus('current')
ciscoNacNadEouGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 1)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouVersion"), ("CISCO-NAC-NAD-MIB", "cnnEouEnabled"), ("CISCO-NAC-NAD-MIB", "cnnEouAllowClientless"), ("CISCO-NAC-NAD-MIB", "cnnEouAllowIpStationId"), ("CISCO-NAC-NAD-MIB", "cnnEouLoggingEnabled"), ("CISCO-NAC-NAD-MIB", "cnnEouMaxRetry"), ("CISCO-NAC-NAD-MIB", "cnnEouPort"), ("CISCO-NAC-NAD-MIB", "cnnEouTimeoutAAA"), ("CISCO-NAC-NAD-MIB", "cnnEouTimeoutHoldPeriod"), ("CISCO-NAC-NAD-MIB", "cnnEouTimeoutRetransmit"), ("CISCO-NAC-NAD-MIB", "cnnEouTimeoutRevalidation"), ("CISCO-NAC-NAD-MIB", "cnnEouTimeoutStatusQuery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouGlobalGroup = ciscoNacNadEouGlobalGroup.setStatus('current')
ciscoNacNadEouAuthIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 2)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouAuthIpAddrMask"), ("CISCO-NAC-NAD-MIB", "cnnEouAuthIpPolicy"), ("CISCO-NAC-NAD-MIB", "cnnEouAuthIpStorageType"), ("CISCO-NAC-NAD-MIB", "cnnEouAuthIpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouAuthIpGroup = ciscoNacNadEouAuthIpGroup.setStatus('current')
ciscoNacNadEouAuthMacGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 3)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouAuthMacAddrMask"), ("CISCO-NAC-NAD-MIB", "cnnEouAuthMacPolicy"), ("CISCO-NAC-NAD-MIB", "cnnEouAuthMacStorageType"), ("CISCO-NAC-NAD-MIB", "cnnEouAuthMacRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouAuthMacGroup = ciscoNacNadEouAuthMacGroup.setStatus('current')
ciscoNacNadEouAuthDeviceTypeGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 4)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouAuthDeviceTypeStorageType"), ("CISCO-NAC-NAD-MIB", "cnnEouAuthDeviceTypeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouAuthDeviceTypeGrp = ciscoNacNadEouAuthDeviceTypeGrp.setStatus('current')
ciscoNacNadEouIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 5)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouIfValidateAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouIfConfigGroup = ciscoNacNadEouIfConfigGroup.setStatus('current')
ciscoNacNadEouHostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 6)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouHostValidateAction"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidateIpAddrType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidateIpAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidateMacAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidatePostureToken"), ("CISCO-NAC-NAD-MIB", "cnnEouHostMaxQueries"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryMask"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryInterface"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryIpAddrType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryIpAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryMacAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryPostureToken"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQuerySkipNHosts"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryMaxResultRows"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryTotalHosts"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryRows"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryCreateTime"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryStatus"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultAssocIf"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultIpAddrType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultIpAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultMacAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultAuthType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultPostureToken"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultStatusQryPeriod"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultRevalidatePeriod"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouHostGroup = ciscoNacNadEouHostGroup.setStatus('deprecated')
ciscoNacNadEouIfTimeoutGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 7)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouIfTimeoutGlobalConfig"), ("CISCO-NAC-NAD-MIB", "cnnEouIfTimeoutAAA"), ("CISCO-NAC-NAD-MIB", "cnnEouIfTimeoutHoldPeriod"), ("CISCO-NAC-NAD-MIB", "cnnEouIfTimeoutRetransmit"), ("CISCO-NAC-NAD-MIB", "cnnEouIfTimeoutRevalidation"), ("CISCO-NAC-NAD-MIB", "cnnEouIfTimeoutStatusQuery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouIfTimeoutGroup = ciscoNacNadEouIfTimeoutGroup.setStatus('current')
ciscoNacNadEouIfMaxRetryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 8)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouIfMaxRetry"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouIfMaxRetryGroup = ciscoNacNadEouIfMaxRetryGroup.setStatus('current')
ciscoNacNadEouRateLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 9)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouRateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouRateLimitGroup = ciscoNacNadEouRateLimitGroup.setStatus('current')
ciscoNacNadEouIfAdminGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 10)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouIfAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouIfAdminGroup = ciscoNacNadEouIfAdminGroup.setStatus('current')
ciscoNacNadEouHostAgeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 11)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouHostResultAge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouHostAgeGroup = ciscoNacNadEouHostAgeGroup.setStatus('current')
ciscoNacNadEouHostUrlRedir = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 12)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouHostResultUrlRedir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouHostUrlRedir = ciscoNacNadEouHostUrlRedir.setStatus('current')
ciscoNacNadEouHostAclGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 13)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouHostResultAclName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouHostAclGroup = ciscoNacNadEouHostAclGroup.setStatus('current')
ciscoNacNadEouIfAaaFailPolicyGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 14)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouIfAaaFailPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouIfAaaFailPolicyGrp = ciscoNacNadEouIfAaaFailPolicyGrp.setStatus('current')
ciscoNacNadEouHostGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 15)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouHostValidateAction"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidateIpAddrType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidateIpAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidateMacAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostValidatePostureTokenStr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostMaxQueries"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryMask"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryInterface"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryIpAddrType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryIpAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryMacAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryPostureTokenStr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQuerySkipNHosts"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryMaxResultRows"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryTotalHosts"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryRows"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryCreateTime"), ("CISCO-NAC-NAD-MIB", "cnnEouHostQueryStatus"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultAssocIf"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultIpAddrType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultIpAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultMacAddr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultAuthType"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultPostureTokenStr"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultStatusQryPeriod"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultRevalidatePeriod"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouHostGrp = ciscoNacNadEouHostGrp.setStatus('current')
cnnIpDeviceTrackingConfigGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 16)).setObjects(("CISCO-NAC-NAD-MIB", "cnnIpDeviceTrackingEnabled"), ("CISCO-NAC-NAD-MIB", "cnnIpDeviceTrackingProbeCount"), ("CISCO-NAC-NAD-MIB", "cnnIpDeviceTrackingProbeInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnnIpDeviceTrackingConfigGrp = cnnIpDeviceTrackingConfigGrp.setStatus('current')
cnnEouCriticalRecoveryDelayGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 17)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouCriticalRecoveryDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnnEouCriticalRecoveryDelayGrp = cnnEouCriticalRecoveryDelayGrp.setStatus('current')
cnnEouIfIpDevTrackConfigGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 18)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouIfIpDevTrackEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnnEouIfIpDevTrackConfigGrp = cnnEouIfIpDevTrackConfigGrp.setStatus('current')
ciscoNacNadRevalidateConfigGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 19)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouRevalidationEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadRevalidateConfigGrp = ciscoNacNadRevalidateConfigGrp.setStatus('current')
ciscoNacNadEouHostGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 20)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouHostResultUrlRedirectAcl"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultTagName"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultAuditSessionId"), ("CISCO-NAC-NAD-MIB", "cnnEouHostResultAaaFailPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouHostGroup1 = ciscoNacNadEouHostGroup1.setStatus('current')
ciscoNacNadEouIfExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 484, 2, 2, 21)).setObjects(("CISCO-NAC-NAD-MIB", "cnnEouIfAllowClientless"), ("CISCO-NAC-NAD-MIB", "cnnEouIfAllowIpStationId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNacNadEouIfExtGroup = ciscoNacNadEouIfExtGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-NAC-NAD-MIB", ciscoNacNadMIBCompliance=ciscoNacNadMIBCompliance, cnnEouHostResultTable=cnnEouHostResultTable, cnnEouAuthIpAddrType=cnnEouAuthIpAddrType, cnnEouHostValidatePostureToken=cnnEouHostValidatePostureToken, cnnEouTimeoutRevalidation=cnnEouTimeoutRevalidation, cnnEouAuthIpAddrMask=cnnEouAuthIpAddrMask, cnnEouAuthIpAddr=cnnEouAuthIpAddr, cnnEouHostQueryPostureToken=cnnEouHostQueryPostureToken, ciscoNacNadEouRateLimitGroup=ciscoNacNadEouRateLimitGroup, cnnEouHostResultIpAddrType=cnnEouHostResultIpAddrType, cnnEouVersion=cnnEouVersion, ciscoNacNadEouIfConfigGroup=ciscoNacNadEouIfConfigGroup, cnnEouAuthDeviceTypeRowStatus=cnnEouAuthDeviceTypeRowStatus, cnnEouHostQueryMaxResultRows=cnnEouHostQueryMaxResultRows, cnnEouHostResultPostureToken=cnnEouHostResultPostureToken, cnnEouIfAllowIpStationId=cnnEouIfAllowIpStationId, cnnEouIfTimeoutAAA=cnnEouIfTimeoutAAA, ciscoNacNadMIB=ciscoNacNadMIB, cnnIpDeviceTrackingObjects=cnnIpDeviceTrackingObjects, cnnEouHostResultMacAddr=cnnEouHostResultMacAddr, cnnEouIfTimeoutGlobalConfig=cnnEouIfTimeoutGlobalConfig, cnnEouHostValidateIpAddr=cnnEouHostValidateIpAddr, ciscoNacNadEouHostGroup1=ciscoNacNadEouHostGroup1, cnnEouTimeoutHoldPeriod=cnnEouTimeoutHoldPeriod, cnnEouHostResultAuthType=cnnEouHostResultAuthType, cnnEouAuthMacPolicy=cnnEouAuthMacPolicy, cnnEouHostValidateMacAddr=cnnEouHostValidateMacAddr, cnnEouHostQueryInterface=cnnEouHostQueryInterface, cnnEouHostValidatePostureTokenStr=cnnEouHostValidatePostureTokenStr, cnnEouTimeoutAAA=cnnEouTimeoutAAA, cnnEouHostQueryIpAddrType=cnnEouHostQueryIpAddrType, cnnEouAuthMacTable=cnnEouAuthMacTable, ciscoNacNadEouHostGroup=ciscoNacNadEouHostGroup, cnnEouHostResultIndex=cnnEouHostResultIndex, ciscoNacNadMIBCompliance3=ciscoNacNadMIBCompliance3, cnnEouCriticalRecoveryDelay=cnnEouCriticalRecoveryDelay, cnnEouAuthDeviceTypeTable=cnnEouAuthDeviceTypeTable, ciscoNacNadRevalidateConfigGrp=ciscoNacNadRevalidateConfigGrp, cnnEouAuthIpTable=cnnEouAuthIpTable, cnnEouHostQueryIpAddr=cnnEouHostQueryIpAddr, cnnEouAuthDeviceType=cnnEouAuthDeviceType, cnnEouHostResultAaaFailPolicy=cnnEouHostResultAaaFailPolicy, ciscoNacNadEouGlobalGroup=ciscoNacNadEouGlobalGroup, cnnEouHostValidateAction=cnnEouHostValidateAction, cnnEouIfAaaFailPolicy=cnnEouIfAaaFailPolicy, PYSNMP_MODULE_ID=ciscoNacNadMIB, cnnEouHostQueryRows=cnnEouHostQueryRows, cnnEouHostResultEntry=cnnEouHostResultEntry, cnnEouHostResultUrlRedir=cnnEouHostResultUrlRedir, cnnEouHostQueryPostureTokenStr=cnnEouHostQueryPostureTokenStr, cnnEouHostQueryStatus=cnnEouHostQueryStatus, ciscoNacNadMIBNotifs=ciscoNacNadMIBNotifs, cnnEouAuthIpEntry=cnnEouAuthIpEntry, cnnEouAuthDeviceTypeEntry=cnnEouAuthDeviceTypeEntry, cnnEouAuthDeviceTypeStorageType=cnnEouAuthDeviceTypeStorageType, cnnEouHostResultAuditSessionId=cnnEouHostResultAuditSessionId, cnnIpDeviceTrackingConfigGrp=cnnIpDeviceTrackingConfigGrp, cnnEouIfTimeoutRevalidation=cnnEouIfTimeoutRevalidation, ciscoNacNadMIBCompliance4=ciscoNacNadMIBCompliance4, ciscoNacNadMIBCompliance2=ciscoNacNadMIBCompliance2, ciscoNacNadEouHostAgeGroup=ciscoNacNadEouHostAgeGroup, ciscoNacNadEouAuthMacGroup=ciscoNacNadEouAuthMacGroup, ciscoNacNadEouIfAdminGroup=ciscoNacNadEouIfAdminGroup, cnnEouIfMIBObjects=cnnEouIfMIBObjects, cnnIpDeviceTrackingProbeInterval=cnnIpDeviceTrackingProbeInterval, cnnEouHostQueryTable=cnnEouHostQueryTable, cnnEouTimeoutStatusQuery=cnnEouTimeoutStatusQuery, cnnEouAuthMacStorageType=cnnEouAuthMacStorageType, ciscoNacNadEouHostUrlRedir=ciscoNacNadEouHostUrlRedir, cnnEouHostResultUrlRedirectAcl=cnnEouHostResultUrlRedirectAcl, cnnEouCriticalRecoveryDelayGrp=cnnEouCriticalRecoveryDelayGrp, cnnEouIfConfigTable=cnnEouIfConfigTable, cnnEouAllowClientless=cnnEouAllowClientless, cnnEouIfConfigEntry=cnnEouIfConfigEntry, cnnEouIfTimeoutStatusQuery=cnnEouIfTimeoutStatusQuery, cnnEouHostResultTagName=cnnEouHostResultTagName, cnnEouTimeoutRetransmit=cnnEouTimeoutRetransmit, cnnEouHostResultRevalidatePeriod=cnnEouHostResultRevalidatePeriod, cnnEouAuthMacEntry=cnnEouAuthMacEntry, cnnEouAuthIpStorageType=cnnEouAuthIpStorageType, ciscoNacNadMIBConformance=ciscoNacNadMIBConformance, ciscoNacNadEouHostAclGroup=ciscoNacNadEouHostAclGroup, cnnEouLoggingEnabled=cnnEouLoggingEnabled, cnnEouHostQuerySkipNHosts=cnnEouHostQuerySkipNHosts, ciscoNacNadEouAuthIpGroup=ciscoNacNadEouAuthIpGroup, cnnIpDeviceTrackingProbeCount=cnnIpDeviceTrackingProbeCount, cnnEouAuthMacAddrMask=cnnEouAuthMacAddrMask, cnnEouHostQueryTotalHosts=cnnEouHostQueryTotalHosts, cnnEouGlobalObjects=cnnEouGlobalObjects, cnnEouIfIpDevTrackConfigTable=cnnEouIfIpDevTrackConfigTable, cnnEouIfTimeoutRetransmit=cnnEouIfTimeoutRetransmit, cnnEouAllowIpStationId=cnnEouAllowIpStationId, cnnEouAuthIpPolicy=cnnEouAuthIpPolicy, cnnIpDeviceTrackingEnabled=cnnIpDeviceTrackingEnabled, cnnEouPort=cnnEouPort, ciscoNacNadEouIfTimeoutGroup=ciscoNacNadEouIfTimeoutGroup, cnnEouHostMaxQueries=cnnEouHostMaxQueries, cnnEouHostQueryIndex=cnnEouHostQueryIndex, ciscoNacNadMIBGroups=ciscoNacNadMIBGroups, ciscoNacNadEouIfMaxRetryGroup=ciscoNacNadEouIfMaxRetryGroup, cnnEouHostResultStatusQryPeriod=cnnEouHostResultStatusQryPeriod, cnnEouAuthorizeLists=cnnEouAuthorizeLists, cnnEouAuthMacRowStatus=cnnEouAuthMacRowStatus, cnnEouEnabled=cnnEouEnabled, cnnEouRateLimit=cnnEouRateLimit, cnnEouHostResultPostureTokenStr=cnnEouHostResultPostureTokenStr, cnnEouIfAdminStatus=cnnEouIfAdminStatus, cnnEouHostValidateIpAddrType=cnnEouHostValidateIpAddrType, cnnEouHostQueryCreateTime=cnnEouHostQueryCreateTime, cnnEouAuthIpRowStatus=cnnEouAuthIpRowStatus, cnnEouHostResultState=cnnEouHostResultState, ciscoNacNadEouHostGrp=ciscoNacNadEouHostGrp, cnnEouHostResultAclName=cnnEouHostResultAclName, cnnEouHostResultAssocIf=cnnEouHostResultAssocIf, cnnEouIfMaxRetry=cnnEouIfMaxRetry, ciscoNacNadEouAuthDeviceTypeGrp=ciscoNacNadEouAuthDeviceTypeGrp, ciscoNacNadMIBObjects=ciscoNacNadMIBObjects, cnnEouAuthMacAddr=cnnEouAuthMacAddr, cnnEouIfValidateAction=cnnEouIfValidateAction, cnnEouMaxRetry=cnnEouMaxRetry, cnnEouIfTimeoutHoldPeriod=cnnEouIfTimeoutHoldPeriod, cnnEouIfAllowClientless=cnnEouIfAllowClientless, cnnEouHostQueryMask=cnnEouHostQueryMask, ciscoNacNadMIBCompliances=ciscoNacNadMIBCompliances, cnnEouHostResultIpAddr=cnnEouHostResultIpAddr, cnnEouHostQueryMacAddr=cnnEouHostQueryMacAddr, cnnEouIfIpDevTrackConfigEntry=cnnEouIfIpDevTrackConfigEntry, cnnEouHostMIBObjects=cnnEouHostMIBObjects, ciscoNacNadEouIfExtGroup=ciscoNacNadEouIfExtGroup, ciscoNacNadEouIfAaaFailPolicyGrp=ciscoNacNadEouIfAaaFailPolicyGrp, cnnEouRevalidationEnabled=cnnEouRevalidationEnabled, cnnEouHostResultAge=cnnEouHostResultAge, cnnEouIfIpDevTrackConfigGrp=cnnEouIfIpDevTrackConfigGrp, cnnEouHostQueryEntry=cnnEouHostQueryEntry, cnnEouIfIpDevTrackEnabled=cnnEouIfIpDevTrackEnabled)
