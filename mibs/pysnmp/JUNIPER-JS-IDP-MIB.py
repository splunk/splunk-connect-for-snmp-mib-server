#
# PySNMP MIB module JUNIPER-JS-IDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-JS-IDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
jnxJsIdpRoot, = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsIdpRoot")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Bits, ObjectIdentity, TimeTicks, Integer32, ModuleIdentity, Gauge32, IpAddress, NotificationType, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Bits", "ObjectIdentity", "TimeTicks", "Integer32", "ModuleIdentity", "Gauge32", "IpAddress", "NotificationType", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxJsIdpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1))
if mibBuilder.loadTexts: jnxJsIdpMIB.setLastUpdated('200706132153Z')
if mibBuilder.loadTexts: jnxJsIdpMIB.setOrganization('Juniper Networks, Inc.')
jnxJsIdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1))
jnxJsIdpDataPlaneMemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 1), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpDataPlaneMemoryUsage.setStatus('current')
jnxJsIdpSessionsUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 2), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpSessionsUsage.setStatus('current')
jnxJsIdpSessionsMaximum = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpSessionsMaximum.setStatus('current')
jnxJsIdpPoliciesSupported = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpPoliciesSupported.setStatus('current')
jnxJsIdpPoliciesLoaded = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpPoliciesLoaded.setStatus('current')
jnxJsIdpActivePolicyName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpActivePolicyName.setStatus('current')
jnxJsIdpAttackTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 7), )
if mibBuilder.loadTexts: jnxJsIdpAttackTable.setStatus('current')
jnxJsIdpAttackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 7, 1), ).setIndexNames((0, "JUNIPER-JS-IDP-MIB", "jnxJsIdpAttackIndex"))
if mibBuilder.loadTexts: jnxJsIdpAttackEntry.setStatus('current')
jnxJsIdpAttackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxJsIdpAttackIndex.setStatus('current')
jnxJsIdpAttackName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpAttackName.setStatus('current')
jnxJsIdpAttackHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsIdpAttackHits.setStatus('current')
jnxJsIdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 2))
jnxJsIdpNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 2, 0))
jnxJsIdpRunningDetectorVersion = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsIdpRunningDetectorVersion.setStatus('current')
jnxJsIdpSecurityPackageVersion = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsIdpSecurityPackageVersion.setStatus('current')
jnxJsIdpLastSignatureUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 10), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsIdpLastSignatureUpdateTime.setStatus('current')
jnxJsIdpSignatureUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsIdpSignatureUpdateStatus.setStatus('current')
jnxJsIdpSignatureUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 2, 0, 1)).setObjects(("JUNIPER-JS-IDP-MIB", "jnxJsIdpRunningDetectorVersion"), ("JUNIPER-JS-IDP-MIB", "jnxJsIdpSecurityPackageVersion"), ("JUNIPER-JS-IDP-MIB", "jnxJsIdpLastSignatureUpdateTime"), ("JUNIPER-JS-IDP-MIB", "jnxJsIdpSignatureUpdateStatus"))
if mibBuilder.loadTexts: jnxJsIdpSignatureUpdate.setStatus('current')
jnxJsIdpAttackLog = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 11, 1, 2, 0, 2)).setObjects(("JUNIPER-JS-IDP-MIB", "jnxJsIdpAttackName"), ("JUNIPER-JS-IDP-MIB", "jnxJsIdpAttackHits"))
if mibBuilder.loadTexts: jnxJsIdpAttackLog.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-JS-IDP-MIB", jnxJsIdpAttackName=jnxJsIdpAttackName, jnxJsIdpAttackLog=jnxJsIdpAttackLog, PYSNMP_MODULE_ID=jnxJsIdpMIB, jnxJsIdpAttackTable=jnxJsIdpAttackTable, jnxJsIdpSessionsUsage=jnxJsIdpSessionsUsage, jnxJsIdpActivePolicyName=jnxJsIdpActivePolicyName, jnxJsIdpPoliciesSupported=jnxJsIdpPoliciesSupported, jnxJsIdpSignatureUpdate=jnxJsIdpSignatureUpdate, jnxJsIdpSignatureUpdateStatus=jnxJsIdpSignatureUpdateStatus, jnxJsIdpNotificationPrefix=jnxJsIdpNotificationPrefix, jnxJsIdpObjects=jnxJsIdpObjects, jnxJsIdpLastSignatureUpdateTime=jnxJsIdpLastSignatureUpdateTime, jnxJsIdpAttackHits=jnxJsIdpAttackHits, jnxJsIdpAttackEntry=jnxJsIdpAttackEntry, jnxJsIdpNotifications=jnxJsIdpNotifications, jnxJsIdpDataPlaneMemoryUsage=jnxJsIdpDataPlaneMemoryUsage, jnxJsIdpRunningDetectorVersion=jnxJsIdpRunningDetectorVersion, jnxJsIdpMIB=jnxJsIdpMIB, jnxJsIdpSecurityPackageVersion=jnxJsIdpSecurityPackageVersion, jnxJsIdpPoliciesLoaded=jnxJsIdpPoliciesLoaded, jnxJsIdpSessionsMaximum=jnxJsIdpSessionsMaximum, jnxJsIdpAttackIndex=jnxJsIdpAttackIndex)
