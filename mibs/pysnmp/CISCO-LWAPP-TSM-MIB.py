#
# PySNMP MIB module CISCO-LWAPP-TSM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-TSM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:49:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
cLApSysMacAddress, cLApDot11IfSlotId = mibBuilder.importSymbols("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress", "cLApDot11IfSlotId")
CLTsmDot11CurrentPackets, = mibBuilder.importSymbols("CISCO-LWAPP-TC-MIB", "CLTsmDot11CurrentPackets")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Counter32, Gauge32, ModuleIdentity, Bits, TimeTicks, Integer32, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "Gauge32", "ModuleIdentity", "Bits", "TimeTicks", "Integer32", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "ObjectIdentity", "iso")
DisplayString, TimeInterval, TruthValue, MacAddress, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeInterval", "TruthValue", "MacAddress", "TextualConvention", "TimeStamp")
ciscoLwappTsmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 525))
ciscoLwappTsmMIB.setRevisions(('2012-01-31 00:00', '2006-04-17 00:00',))
if mibBuilder.loadTexts: ciscoLwappTsmMIB.setLastUpdated('201201310000Z')
if mibBuilder.loadTexts: ciscoLwappTsmMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappTsmMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 0))
ciscoLwappTsmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 1))
ciscoLwappTsmMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 2))
ciscoLwappTsmDot11Config = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1))
ciscoLwappTsmDot11Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2))
cLTsmDot11aConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11aConfig.setStatus('current')
cLTsmDot11bgConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11bgConfig.setStatus('current')
cLTsmDot11MaxClientsPerDot11Intf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11MaxClientsPerDot11Intf.setStatus('current')
cLTsmDot11MaxTsmStatsEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11MaxTsmStatsEntries.setStatus('current')
cLTsmDot11ClientTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1), )
if mibBuilder.loadTexts: cLTsmDot11ClientTable.setStatus('current')
cLTsmDot11ClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientIndex"))
if mibBuilder.loadTexts: cLTsmDot11ClientEntry.setStatus('current')
cLTsmDot11ClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cLTsmDot11ClientIndex.setStatus('current')
cLTsmDot11ClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11ClientMacAddress.setStatus('current')
cLTsmDot11UplinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2), )
if mibBuilder.loadTexts: cLTsmDot11UplinkTable.setStatus('current')
cLTsmDot11UplinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkApMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkApIfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkTimeStamp"))
if mibBuilder.loadTexts: cLTsmDot11UplinkEntry.setStatus('current')
cLTsmDot11UplinkApMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLTsmDot11UplinkApMacAddress.setStatus('current')
cLTsmDot11UplinkApIfSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: cLTsmDot11UplinkApIfSlotId.setStatus('current')
cLTsmDot11UplinkTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 3), TimeStamp())
if mibBuilder.loadTexts: cLTsmDot11UplinkTimeStamp.setStatus('current')
cLTsmDot11UplinkAvgPktQDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 4), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkAvgPktQDelay.setStatus('current')
cLTsmDot11UplinkLt10Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 5), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkLt10Packets.setStatus('current')
cLTsmDot11UplinkPktGt10Lt20Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 6), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt10Lt20Packets.setStatus('current')
cLTsmDot11UplinkPktGt20Lt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 7), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt20Lt40Packets.setStatus('current')
cLTsmDot11UplinkPktGt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 8), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt40Packets.setStatus('current')
cLTsmDot11UplinkLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 9), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkLostPackets.setStatus('current')
cLTsmDot11UplinkTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 10), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkTotalPackets.setStatus('current')
cLTsmDot11UplinkRoamingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 11), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkRoamingPackets.setStatus('current')
cLTsmDot11UplinkRoamingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 12), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkRoamingDelay.setStatus('current')
cLTsmDot11DnlinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3), )
if mibBuilder.loadTexts: cLTsmDot11DnlinkTable.setStatus('current')
cLTsmDot11DnlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkApMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkApIfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkTimeStamp"))
if mibBuilder.loadTexts: cLTsmDot11DnlinkEntry.setStatus('current')
cLTsmDot11DnlinkApMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLTsmDot11DnlinkApMacAddress.setStatus('current')
cLTsmDot11DnlinkApIfSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: cLTsmDot11DnlinkApIfSlotId.setStatus('current')
cLTsmDot11DnlinkTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 3), TimeStamp())
if mibBuilder.loadTexts: cLTsmDot11DnlinkTimeStamp.setStatus('current')
cLTsmDot11DnlinkAvgPktQDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 4), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkAvgPktQDelay.setStatus('current')
cLTsmDot11DnlinkLt10Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 5), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkLt10Packets.setStatus('current')
cLTsmDot11DnlinkPktGt10Lt20Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 6), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt10Lt20Packets.setStatus('current')
cLTsmDot11DnlinkPktGt20Lt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 7), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt20Lt40Packets.setStatus('current')
cLTsmDot11DnlinkPktGt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 8), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt40Packets.setStatus('current')
cLTsmDot11DnlinkLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 9), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkLostPackets.setStatus('current')
cLTsmDot11DnlinkTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 10), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkTotalPackets.setStatus('current')
cLTsmDot11CUTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4), )
if mibBuilder.loadTexts: cLTsmDot11CUTable.setStatus('current')
cLTsmDot11CUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUTimeStamp"))
if mibBuilder.loadTexts: cLTsmDot11CUEntry.setStatus('current')
cLTsmDot11CUTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 1), TimeStamp())
if mibBuilder.loadTexts: cLTsmDot11CUTimeStamp.setStatus('current')
cLTsmDot11CUFiftyPercentilePicc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUFiftyPercentilePicc.setStatus('current')
cLTsmDot11CUNinetyPercentilePicc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUNinetyPercentilePicc.setStatus('current')
cLTsmDot11CUFiftyPercentilePib = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUFiftyPercentilePib.setStatus('current')
cLTsmDot11CUNinetyPercentilePib = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUNinetyPercentilePib.setStatus('current')
ciscoLwappTsmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 1))
ciscoLwappTsmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2))
ciscoLwappTsmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 1, 1)).setObjects(("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11ConfigGroup"), ("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11StatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmMIBCompliance = ciscoLwappTsmMIBCompliance.setStatus('deprecated')
ciscoLwappTsmMIBComplianceRev01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 1, 2)).setObjects(("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11ConfigGroup"), ("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11StatsGroup"), ("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11StatsGroupSupR01"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmMIBComplianceRev01 = ciscoLwappTsmMIBComplianceRev01.setStatus('current')
ciscoLwappTsmDot11ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2, 1)).setObjects(("CISCO-LWAPP-TSM-MIB", "cLTsmDot11aConfig"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11bgConfig"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11MaxClientsPerDot11Intf"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11MaxTsmStatsEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmDot11ConfigGroup = ciscoLwappTsmDot11ConfigGroup.setStatus('current')
ciscoLwappTsmDot11StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2, 2)).setObjects(("CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientMacAddress"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkAvgPktQDelay"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkLt10Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkPktGt10Lt20Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkPktGt20Lt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkPktGt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkLostPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkTotalPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkRoamingPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkRoamingDelay"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkAvgPktQDelay"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkLt10Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkPktGt10Lt20Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkPktGt20Lt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkPktGt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkLostPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkTotalPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmDot11StatsGroup = ciscoLwappTsmDot11StatsGroup.setStatus('current')
ciscoLwappTsmDot11StatsGroupSupR01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2, 3)).setObjects(("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUFiftyPercentilePicc"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUNinetyPercentilePicc"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUFiftyPercentilePib"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUNinetyPercentilePib"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmDot11StatsGroupSupR01 = ciscoLwappTsmDot11StatsGroupSupR01.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-TSM-MIB", cLTsmDot11UplinkPktGt10Lt20Packets=cLTsmDot11UplinkPktGt10Lt20Packets, cLTsmDot11UplinkLt10Packets=cLTsmDot11UplinkLt10Packets, cLTsmDot11DnlinkLostPackets=cLTsmDot11DnlinkLostPackets, cLTsmDot11DnlinkTable=cLTsmDot11DnlinkTable, cLTsmDot11ClientTable=cLTsmDot11ClientTable, cLTsmDot11CUFiftyPercentilePicc=cLTsmDot11CUFiftyPercentilePicc, cLTsmDot11UplinkLostPackets=cLTsmDot11UplinkLostPackets, cLTsmDot11UplinkTable=cLTsmDot11UplinkTable, ciscoLwappTsmMIBObjects=ciscoLwappTsmMIBObjects, cLTsmDot11UplinkRoamingPackets=cLTsmDot11UplinkRoamingPackets, ciscoLwappTsmDot11StatsGroup=ciscoLwappTsmDot11StatsGroup, ciscoLwappTsmMIBCompliance=ciscoLwappTsmMIBCompliance, cLTsmDot11MaxTsmStatsEntries=cLTsmDot11MaxTsmStatsEntries, ciscoLwappTsmMIBGroups=ciscoLwappTsmMIBGroups, cLTsmDot11DnlinkLt10Packets=cLTsmDot11DnlinkLt10Packets, cLTsmDot11aConfig=cLTsmDot11aConfig, ciscoLwappTsmDot11ConfigGroup=ciscoLwappTsmDot11ConfigGroup, ciscoLwappTsmDot11Config=ciscoLwappTsmDot11Config, cLTsmDot11MaxClientsPerDot11Intf=cLTsmDot11MaxClientsPerDot11Intf, cLTsmDot11UplinkTotalPackets=cLTsmDot11UplinkTotalPackets, ciscoLwappTsmMIBConform=ciscoLwappTsmMIBConform, cLTsmDot11DnlinkTotalPackets=cLTsmDot11DnlinkTotalPackets, cLTsmDot11CUTable=cLTsmDot11CUTable, ciscoLwappTsmMIBComplianceRev01=ciscoLwappTsmMIBComplianceRev01, PYSNMP_MODULE_ID=ciscoLwappTsmMIB, cLTsmDot11UplinkPktGt40Packets=cLTsmDot11UplinkPktGt40Packets, cLTsmDot11DnlinkEntry=cLTsmDot11DnlinkEntry, cLTsmDot11ClientEntry=cLTsmDot11ClientEntry, cLTsmDot11CUFiftyPercentilePib=cLTsmDot11CUFiftyPercentilePib, cLTsmDot11DnlinkApMacAddress=cLTsmDot11DnlinkApMacAddress, cLTsmDot11UplinkPktGt20Lt40Packets=cLTsmDot11UplinkPktGt20Lt40Packets, cLTsmDot11DnlinkAvgPktQDelay=cLTsmDot11DnlinkAvgPktQDelay, cLTsmDot11ClientMacAddress=cLTsmDot11ClientMacAddress, cLTsmDot11UplinkApIfSlotId=cLTsmDot11UplinkApIfSlotId, cLTsmDot11DnlinkPktGt20Lt40Packets=cLTsmDot11DnlinkPktGt20Lt40Packets, cLTsmDot11bgConfig=cLTsmDot11bgConfig, cLTsmDot11UplinkAvgPktQDelay=cLTsmDot11UplinkAvgPktQDelay, cLTsmDot11UplinkRoamingDelay=cLTsmDot11UplinkRoamingDelay, cLTsmDot11CUEntry=cLTsmDot11CUEntry, cLTsmDot11CUNinetyPercentilePicc=cLTsmDot11CUNinetyPercentilePicc, ciscoLwappTsmDot11Stats=ciscoLwappTsmDot11Stats, cLTsmDot11UplinkEntry=cLTsmDot11UplinkEntry, cLTsmDot11CUTimeStamp=cLTsmDot11CUTimeStamp, cLTsmDot11DnlinkApIfSlotId=cLTsmDot11DnlinkApIfSlotId, ciscoLwappTsmMIBCompliances=ciscoLwappTsmMIBCompliances, cLTsmDot11UplinkTimeStamp=cLTsmDot11UplinkTimeStamp, ciscoLwappTsmDot11StatsGroupSupR01=ciscoLwappTsmDot11StatsGroupSupR01, cLTsmDot11DnlinkPktGt10Lt20Packets=cLTsmDot11DnlinkPktGt10Lt20Packets, ciscoLwappTsmMIBNotifs=ciscoLwappTsmMIBNotifs, cLTsmDot11DnlinkPktGt40Packets=cLTsmDot11DnlinkPktGt40Packets, ciscoLwappTsmMIB=ciscoLwappTsmMIB, cLTsmDot11DnlinkTimeStamp=cLTsmDot11DnlinkTimeStamp, cLTsmDot11ClientIndex=cLTsmDot11ClientIndex, cLTsmDot11CUNinetyPercentilePib=cLTsmDot11CUNinetyPercentilePib, cLTsmDot11UplinkApMacAddress=cLTsmDot11UplinkApMacAddress)
