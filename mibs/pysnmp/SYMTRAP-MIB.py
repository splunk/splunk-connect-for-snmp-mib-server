#
# PySNMP MIB module SYMTRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SYMTRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:06:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Gauge32, Counter32, NotificationType, iso, Counter64, Integer32, ModuleIdentity, MibIdentifier, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, ObjectIdentity, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "Counter32", "NotificationType", "iso", "Counter64", "Integer32", "ModuleIdentity", "MibIdentifier", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "ObjectIdentity", "NotificationType", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
symbios = MibIdentifier((1, 3, 6, 1, 4, 1, 1123))
coloradosprings = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 3))
scsi = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 3, 1))
symc8xx = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2))
symTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2))
symTrapMajor = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: symTrapMajor.setStatus('mandatory')
symTrapMinor = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: symTrapMinor.setStatus('mandatory')
managerName = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 501), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managerName.setStatus('mandatory')
managerVersion = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 502), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: managerVersion.setStatus('mandatory')
controllerName = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 503), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerName.setStatus('mandatory')
scsiController = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 504), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scsiController.setStatus('mandatory')
scsiChannel = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 505), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scsiChannel.setStatus('mandatory')
scsiTarget = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 506), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scsiTarget.setStatus('mandatory')
scsiLun = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 507), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scsiLun.setStatus('mandatory')
vendorName = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 508), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vendorName.setStatus('mandatory')
productName = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 509), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: productName.setStatus('mandatory')
controllerModel = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 510), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerModel.setStatus('mandatory')
pciBusNumber = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 511), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pciBusNumber.setStatus('mandatory')
scsiSmartData = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 512), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scsiSmartData.setStatus('mandatory')
errorType = MibScalar((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2, 513), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorType.setStatus('mandatory')
symSCSI1 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,101))
symSCSI2 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,102))
symSCSI3 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,108)).setObjects(("SYMTRAP-MIB", "scsiController"), ("SYMTRAP-MIB", "controllerName"), ("SYMTRAP-MIB", "managerName"))
symSCSI4 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,109)).setObjects(("SYMTRAP-MIB", "scsiController"), ("SYMTRAP-MIB", "controllerName"), ("SYMTRAP-MIB", "managerName"))
symSCSI5 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,110)).setObjects(("SYMTRAP-MIB", "scsiController"))
symSCSI6 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,111)).setObjects(("SYMTRAP-MIB", "scsiController"))
symSCSI8 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,113)).setObjects(("SYMTRAP-MIB", "scsiController"), ("SYMTRAP-MIB", "scsiTarget"), ("SYMTRAP-MIB", "scsiLun"), ("SYMTRAP-MIB", "vendorName"), ("SYMTRAP-MIB", "productName"))
symSCSI10 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,115)).setObjects(("SYMTRAP-MIB", "scsiController"), ("SYMTRAP-MIB", "scsiTarget"), ("SYMTRAP-MIB", "scsiLun"), ("SYMTRAP-MIB", "vendorName"), ("SYMTRAP-MIB", "productName"))
symSCSI7 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,112)).setObjects(("SYMTRAP-MIB", "scsiController"), ("SYMTRAP-MIB", "scsiTarget"), ("SYMTRAP-MIB", "scsiLun"))
symSCSI9 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,114)).setObjects(("SYMTRAP-MIB", "scsiController"), ("SYMTRAP-MIB", "scsiTarget"), ("SYMTRAP-MIB", "scsiLun"))
symSCSI11 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,116)).setObjects(("SYMTRAP-MIB", "scsiController"), ("SYMTRAP-MIB", "scsiTarget"), ("SYMTRAP-MIB", "scsiLun"), ("SYMTRAP-MIB", "vendorName"), ("SYMTRAP-MIB", "productName"), ("SYMTRAP-MIB", "scsiSmartData"))
symSCSI12 = NotificationType((1, 3, 6, 1, 4, 1, 1123, 3, 1, 2, 2) + (0,117)).setObjects(("SYMTRAP-MIB", "errorType"))
mibBuilder.exportSymbols("SYMTRAP-MIB", symSCSI3=symSCSI3, pciBusNumber=pciBusNumber, controllerName=controllerName, controllerModel=controllerModel, scsi=scsi, vendorName=vendorName, symSCSI1=symSCSI1, symSCSI8=symSCSI8, errorType=errorType, scsiChannel=scsiChannel, symSCSI7=symSCSI7, scsiLun=scsiLun, scsiTarget=scsiTarget, symc8xx=symc8xx, symTrapMajor=symTrapMajor, symSCSI4=symSCSI4, symbios=symbios, scsiController=scsiController, symSCSI11=symSCSI11, scsiSmartData=scsiSmartData, symSCSI10=symSCSI10, symSCSI2=symSCSI2, symTrap=symTrap, symSCSI6=symSCSI6, symSCSI5=symSCSI5, symSCSI12=symSCSI12, managerVersion=managerVersion, productName=productName, symTrapMinor=symTrapMinor, symSCSI9=symSCSI9, coloradosprings=coloradosprings, managerName=managerName)
