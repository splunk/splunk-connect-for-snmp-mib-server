#
# PySNMP MIB module Wellfleet-MIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-MIP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, Gauge32, Unsigned32, Counter32, Counter64, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ModuleIdentity, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Gauge32", "Unsigned32", "Counter32", "Counter64", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ModuleIdentity", "ObjectIdentity", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfMobileIpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfMobileIpGroup")
wfMobileIpHaTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1), )
if mibBuilder.loadTexts: wfMobileIpHaTable.setStatus('mandatory')
wfMobileIpHaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1), ).setIndexNames((0, "Wellfleet-MIP-MIB", "wfMobileIpHaAddr"), (0, "Wellfleet-MIP-MIB", "wfMobileIpHaCct"))
if mibBuilder.loadTexts: wfMobileIpHaEntry.setStatus('mandatory')
wfMobileIpHaCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpHaCreate.setStatus('mandatory')
wfMobileIpHaEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpHaEnable.setStatus('mandatory')
wfMobileIpHaState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMobileIpHaState.setStatus('mandatory')
wfMobileIpHaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMobileIpHaAddr.setStatus('mandatory')
wfMobileIpHaCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMobileIpHaCct.setStatus('mandatory')
wfMobileIpHaProtoMap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpHaProtoMap.setStatus('mandatory')
wfMobileIpHaStatsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpHaStatsEnable.setStatus('mandatory')
wfMobileIpHaDebugLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpHaDebugLevel.setStatus('mandatory')
wfMobileIpSpiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 2), )
if mibBuilder.loadTexts: wfMobileIpSpiTable.setStatus('mandatory')
wfMobileIpSpiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 2, 1), ).setIndexNames((0, "Wellfleet-MIP-MIB", "wfMobileIpSpiValue"))
if mibBuilder.loadTexts: wfMobileIpSpiEntry.setStatus('mandatory')
wfMobileIpSpiCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpSpiCreate.setStatus('mandatory')
wfMobileIpSpiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMobileIpSpiValue.setStatus('mandatory')
wfMobileIpSpiKey = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpSpiKey.setStatus('mandatory')
wfMobileIpSpiAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("md5", 1))).clone('md5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMobileIpSpiAuthType.setStatus('mandatory')
wfHaMobilityBindingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3), )
if mibBuilder.loadTexts: wfHaMobilityBindingTable.setStatus('mandatory')
wfHaMobilityBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1), ).setIndexNames((0, "Wellfleet-MIP-MIB", "wfHaMobilityBindingIdx"), (0, "Wellfleet-MIP-MIB", "wfHaMobilityBindingCOA"))
if mibBuilder.loadTexts: wfHaMobilityBindingEntry.setStatus('mandatory')
wfHaMobilityBindingIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingIdx.setStatus('mandatory')
wfHaMobilityBindingMN = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingMN.setStatus('mandatory')
wfHaMobilityBindingCOA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingCOA.setStatus('mandatory')
wfHaMobilityBindingSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingSourceAddress.setStatus('mandatory')
wfHaMobilityBindingRegFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingRegFlags.setStatus('mandatory')
wfHaMobilityBindingRegIDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingRegIDLow.setStatus('mandatory')
wfHaMobilityBindingRegIDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingRegIDHigh.setStatus('mandatory')
wfHaMobilityBindingTimeGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingTimeGranted.setStatus('mandatory')
wfHaMobilityBindingTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaMobilityBindingTimeRemaining.setStatus('mandatory')
wfHaIpxMobilityBindingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4), )
if mibBuilder.loadTexts: wfHaIpxMobilityBindingTable.setStatus('mandatory')
wfHaIpxMobilityBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1), ).setIndexNames((0, "Wellfleet-MIP-MIB", "wfHaIpxMobilityBindingIdx"), (0, "Wellfleet-MIP-MIB", "wfHaIpxMobilityBindingCOA"))
if mibBuilder.loadTexts: wfHaIpxMobilityBindingEntry.setStatus('mandatory')
wfHaIpxMobilityBindingIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingIdx.setStatus('mandatory')
wfHaIpxMobilityBindingMN = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingMN.setStatus('mandatory')
wfHaIpxMobilityBindingCOA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingCOA.setStatus('mandatory')
wfHaIpxMobilityBindingSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingSourceAddress.setStatus('mandatory')
wfHaIpxMobilityBindingRegFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingRegFlags.setStatus('mandatory')
wfHaIpxMobilityBindingRegIDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingRegIDLow.setStatus('mandatory')
wfHaIpxMobilityBindingRegIDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingRegIDHigh.setStatus('mandatory')
wfHaIpxMobilityBindingTimeGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingTimeGranted.setStatus('mandatory')
wfHaIpxMobilityBindingTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 21, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHaIpxMobilityBindingTimeRemaining.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-MIP-MIB", wfHaIpxMobilityBindingTimeGranted=wfHaIpxMobilityBindingTimeGranted, wfHaIpxMobilityBindingTimeRemaining=wfHaIpxMobilityBindingTimeRemaining, wfHaMobilityBindingCOA=wfHaMobilityBindingCOA, wfHaIpxMobilityBindingSourceAddress=wfHaIpxMobilityBindingSourceAddress, wfHaIpxMobilityBindingRegIDHigh=wfHaIpxMobilityBindingRegIDHigh, wfMobileIpHaStatsEnable=wfMobileIpHaStatsEnable, wfHaMobilityBindingIdx=wfHaMobilityBindingIdx, wfHaMobilityBindingMN=wfHaMobilityBindingMN, wfMobileIpHaProtoMap=wfMobileIpHaProtoMap, wfMobileIpSpiValue=wfMobileIpSpiValue, wfMobileIpHaEnable=wfMobileIpHaEnable, wfMobileIpSpiAuthType=wfMobileIpSpiAuthType, wfMobileIpSpiKey=wfMobileIpSpiKey, wfHaMobilityBindingTable=wfHaMobilityBindingTable, wfHaIpxMobilityBindingTable=wfHaIpxMobilityBindingTable, wfMobileIpHaEntry=wfMobileIpHaEntry, wfHaIpxMobilityBindingMN=wfHaIpxMobilityBindingMN, wfHaMobilityBindingRegIDHigh=wfHaMobilityBindingRegIDHigh, wfHaMobilityBindingTimeGranted=wfHaMobilityBindingTimeGranted, wfMobileIpSpiTable=wfMobileIpSpiTable, wfHaIpxMobilityBindingCOA=wfHaIpxMobilityBindingCOA, wfMobileIpHaState=wfMobileIpHaState, wfMobileIpHaAddr=wfMobileIpHaAddr, wfHaMobilityBindingEntry=wfHaMobilityBindingEntry, wfHaMobilityBindingTimeRemaining=wfHaMobilityBindingTimeRemaining, wfMobileIpHaDebugLevel=wfMobileIpHaDebugLevel, wfHaIpxMobilityBindingIdx=wfHaIpxMobilityBindingIdx, wfMobileIpHaTable=wfMobileIpHaTable, wfHaIpxMobilityBindingRegFlags=wfHaIpxMobilityBindingRegFlags, wfMobileIpHaCct=wfMobileIpHaCct, wfHaMobilityBindingSourceAddress=wfHaMobilityBindingSourceAddress, wfHaIpxMobilityBindingRegIDLow=wfHaIpxMobilityBindingRegIDLow, wfMobileIpSpiCreate=wfMobileIpSpiCreate, wfMobileIpHaCreate=wfMobileIpHaCreate, wfHaMobilityBindingRegFlags=wfHaMobilityBindingRegFlags, wfHaIpxMobilityBindingEntry=wfHaIpxMobilityBindingEntry, wfMobileIpSpiEntry=wfMobileIpSpiEntry, wfHaMobilityBindingRegIDLow=wfHaMobilityBindingRegIDLow)
