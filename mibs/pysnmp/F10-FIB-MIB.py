#
# PySNMP MIB module F10-FIB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/F10-FIB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:57:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
chSysCardNumber, = mibBuilder.importSymbols("F10-CHASSIS-MIB", "chSysCardNumber")
f10Mgmt, = mibBuilder.importSymbols("FORCE10-SMI", "f10Mgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddressPrefixLength, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressPrefixLength", "InetAddress")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, Bits, ObjectIdentity, Counter32, Unsigned32, TimeTicks, IpAddress, iso, NotificationType, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "ObjectIdentity", "Counter32", "Unsigned32", "TimeTicks", "IpAddress", "iso", "NotificationType", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity")
MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString")
f10IpForwardMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6027, 3, 9))
f10IpForwardMib.setRevisions(('2011-07-08 12:00', '2007-09-14 12:00',))
if mibBuilder.loadTexts: f10IpForwardMib.setLastUpdated('200709141200Z')
if mibBuilder.loadTexts: f10IpForwardMib.setOrganization('Dell Inc')
f10IpForwardMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1))
f10IpForwardMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 9, 2))
f10IpForwardVersionTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 1), )
if mibBuilder.loadTexts: f10IpForwardVersionTable.setStatus('current')
f10IpForwardVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 1, 1), ).setIndexNames((0, "F10-CHASSIS-MIB", "chSysCardNumber"), (0, "F10-FIB-MIB", "f10IpForwardAddrFamily"))
if mibBuilder.loadTexts: f10IpForwardVersionEntry.setStatus('current')
f10IpForwardAddrFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: f10IpForwardAddrFamily.setStatus('current')
f10IpForwardVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpForwardVersion.setStatus('current')
f10IpForwardTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2), )
if mibBuilder.loadTexts: f10IpForwardTable.setStatus('deprecated')
f10IpForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1), ).setIndexNames((0, "F10-CHASSIS-MIB", "chSysCardNumber"), (0, "F10-FIB-MIB", "f10IpforwardDest"), (0, "F10-FIB-MIB", "f10IpforwardMask"), (0, "F10-FIB-MIB", "f10IpforwardNextHop"), (0, "F10-FIB-MIB", "f10IpforwardFirstHop"))
if mibBuilder.loadTexts: f10IpForwardEntry.setStatus('deprecated')
f10IpforwardDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardDest.setStatus('deprecated')
f10IpforwardMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardMask.setStatus('deprecated')
f10IpforwardNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardNextHop.setStatus('deprecated')
f10IpforwardFirstHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardFirstHop.setStatus('deprecated')
f10IpforwardIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardIfIndex.setStatus('deprecated')
f10IpforwardMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardMacAddress.setStatus('deprecated')
f10IpforwardEgressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardEgressPort.setStatus('deprecated')
f10IpforwardCamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10IpforwardCamIndex.setStatus('deprecated')
f10InetCidrIpv4RouteNumber = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10InetCidrIpv4RouteNumber.setStatus('current')
f10InetCidrIpv6RouteNumber = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10InetCidrIpv6RouteNumber.setStatus('current')
f10InetCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5), )
if mibBuilder.loadTexts: f10InetCidrRouteTable.setStatus('current')
f10InetCidrRouteTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1), ).setIndexNames((0, "F10-CHASSIS-MIB", "chSysCardNumber"), (0, "F10-FIB-MIB", "f10InetCidrRouteDestType"), (0, "F10-FIB-MIB", "f10InetCidrRouteDest"), (0, "F10-FIB-MIB", "f10InetCidrRoutePfxLen"), (0, "F10-FIB-MIB", "f10InetCidrRouteNextHopType"), (0, "F10-FIB-MIB", "f10InetCidrRouteNextHop"), (0, "F10-FIB-MIB", "f10InetCidrRouteFirstHopType"), (0, "F10-FIB-MIB", "f10InetCidrRouteFirstHop"))
if mibBuilder.loadTexts: f10InetCidrRouteTableEntry.setStatus('current')
f10InetCidrRouteDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: f10InetCidrRouteDestType.setStatus('current')
f10InetCidrRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: f10InetCidrRouteDest.setStatus('current')
f10InetCidrRoutePfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: f10InetCidrRoutePfxLen.setStatus('current')
f10InetCidrRouteNextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 4), InetAddressType())
if mibBuilder.loadTexts: f10InetCidrRouteNextHopType.setStatus('current')
f10InetCidrRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 5), InetAddress())
if mibBuilder.loadTexts: f10InetCidrRouteNextHop.setStatus('current')
f10InetCidrRouteFirstHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 6), InetAddressType())
if mibBuilder.loadTexts: f10InetCidrRouteFirstHopType.setStatus('current')
f10InetCidrRouteFirstHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 7), InetAddress())
if mibBuilder.loadTexts: f10InetCidrRouteFirstHop.setStatus('current')
f10InetCidrRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 8), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10InetCidrRouteIfIndex.setStatus('current')
f10InetCidrRouteMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10InetCidrRouteMacAddress.setStatus('current')
f10InetCidrRouteEgressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10InetCidrRouteEgressPort.setStatus('current')
f10InetCidrRouteCamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 9, 1, 5, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f10InetCidrRouteCamIndex.setStatus('current')
f10IpForwardMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 9, 2, 1))
f10IpForwardMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 9, 2, 2))
f10IpForwardMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6027, 3, 9, 2, 1, 1)).setObjects(("F10-FIB-MIB", "f10IpForwardObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f10IpForwardMibCompliance = f10IpForwardMibCompliance.setStatus('current')
f10IpForwardObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 9, 2, 2, 1)).setObjects(("F10-FIB-MIB", "f10IpForwardVersion"), ("F10-FIB-MIB", "f10InetCidrRouteIfIndex"), ("F10-FIB-MIB", "f10InetCidrRouteMacAddress"), ("F10-FIB-MIB", "f10InetCidrRouteEgressPort"), ("F10-FIB-MIB", "f10InetCidrRouteCamIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f10IpForwardObjectGroup = f10IpForwardObjectGroup.setStatus('current')
mibBuilder.exportSymbols("F10-FIB-MIB", f10InetCidrRoutePfxLen=f10InetCidrRoutePfxLen, f10IpForwardObjectGroup=f10IpForwardObjectGroup, f10IpforwardCamIndex=f10IpforwardCamIndex, f10IpforwardDest=f10IpforwardDest, f10InetCidrRouteNextHop=f10InetCidrRouteNextHop, f10InetCidrRouteTableEntry=f10InetCidrRouteTableEntry, f10InetCidrRouteNextHopType=f10InetCidrRouteNextHopType, f10IpforwardMacAddress=f10IpforwardMacAddress, f10IpforwardEgressPort=f10IpforwardEgressPort, f10IpforwardMask=f10IpforwardMask, f10IpForwardVersionEntry=f10IpForwardVersionEntry, f10IpforwardFirstHop=f10IpforwardFirstHop, f10IpforwardIfIndex=f10IpforwardIfIndex, f10IpForwardMibCompliances=f10IpForwardMibCompliances, f10IpForwardMibCompliance=f10IpForwardMibCompliance, f10InetCidrRouteFirstHopType=f10InetCidrRouteFirstHopType, f10IpForwardVersionTable=f10IpForwardVersionTable, f10InetCidrRouteTable=f10InetCidrRouteTable, f10InetCidrRouteIfIndex=f10InetCidrRouteIfIndex, f10InetCidrRouteMacAddress=f10InetCidrRouteMacAddress, f10InetCidrRouteDestType=f10InetCidrRouteDestType, f10IpForwardAddrFamily=f10IpForwardAddrFamily, f10IpforwardNextHop=f10IpforwardNextHop, f10InetCidrRouteDest=f10InetCidrRouteDest, f10IpForwardMibObjects=f10IpForwardMibObjects, f10InetCidrIpv6RouteNumber=f10InetCidrIpv6RouteNumber, f10IpForwardVersion=f10IpForwardVersion, f10InetCidrRouteFirstHop=f10InetCidrRouteFirstHop, PYSNMP_MODULE_ID=f10IpForwardMib, f10IpForwardMib=f10IpForwardMib, f10IpForwardMibConformance=f10IpForwardMibConformance, f10InetCidrIpv4RouteNumber=f10InetCidrIpv4RouteNumber, f10InetCidrRouteEgressPort=f10InetCidrRouteEgressPort, f10IpForwardMibGroups=f10IpForwardMibGroups, f10IpForwardTable=f10IpForwardTable, f10IpForwardEntry=f10IpForwardEntry, f10InetCidrRouteCamIndex=f10InetCidrRouteCamIndex)
