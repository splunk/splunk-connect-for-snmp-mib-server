#
# PySNMP MIB module CISCO-MGX82XX-RPM-RSRC-PART-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MGX82XX-RPM-RSRC-PART-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:50:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
rpmInterface, = mibBuilder.importSymbols("BASIS-MIB", "rpmInterface")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, iso, ObjectIdentity, ModuleIdentity, Counter64, Unsigned32, NotificationType, Counter32, Gauge32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "ObjectIdentity", "ModuleIdentity", "Counter64", "Unsigned32", "NotificationType", "Counter32", "Gauge32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoMgx82xxRpmRsrcPartMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 61))
ciscoMgx82xxRpmRsrcPartMIB.setRevisions(('2002-09-17 00:00',))
if mibBuilder.loadTexts: ciscoMgx82xxRpmRsrcPartMIB.setLastUpdated('200209170000Z')
if mibBuilder.loadTexts: ciscoMgx82xxRpmRsrcPartMIB.setOrganization('Cisco Systems, Inc.')
rpmIfCnfResPart = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2))
rpmIfCnfRscPartTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1), )
if mibBuilder.loadTexts: rpmIfCnfRscPartTable.setStatus('current')
rpmIfCnfRscPartEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscSlotNum"), (0, "CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPartIfNum"), (0, "CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPartCtrlrNum"))
if mibBuilder.loadTexts: rpmIfCnfRscPartEntry.setStatus('current')
rpmIfRscSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscSlotNum.setStatus('current')
rpmIfRscPartIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPartIfNum.setStatus('current')
rpmIfRscPartCtrlrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("par", 1), ("pnni", 2), ("tag", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPartCtrlrNum.setStatus('current')
rpmIfRscPrtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("del", 2), ("mod", 3))).clone('del')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtRowStatus.setStatus('current')
rpmIfRscPrtIngrPctBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtIngrPctBandwidth.setStatus('current')
rpmIfRscPrtEgrPctBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtEgrPctBandwidth.setStatus('current')
rpmIfRscPrtVpiLow = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtVpiLow.setStatus('current')
rpmIfRscPrtVpiHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtVpiHigh.setStatus('current')
rpmIfRscPrtVciLow = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtVciLow.setStatus('current')
rpmIfRscPrtVciHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtVciHigh.setStatus('current')
rpmIfRscPrtMaxChans = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpmIfRscPrtMaxChans.setStatus('current')
cmrRsrcPartMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 61, 3))
cmrRsrcPartMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 61, 3, 1))
cmrRsrcPartMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 61, 3, 2))
cmrRsrcPartMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 61, 3, 1, 1)).setObjects(("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "cmrRsrcPartMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmrRsrcPartMIBCompliance = cmrRsrcPartMIBCompliance.setStatus('current')
cmrRsrcPartMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 61, 3, 2, 1)).setObjects(("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscSlotNum"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPartIfNum"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPartCtrlrNum"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtRowStatus"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtIngrPctBandwidth"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtEgrPctBandwidth"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtVpiLow"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtVpiHigh"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtVciLow"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtVciHigh"), ("CISCO-MGX82XX-RPM-RSRC-PART-MIB", "rpmIfRscPrtMaxChans"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmrRsrcPartMIBGroup = cmrRsrcPartMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-MGX82XX-RPM-RSRC-PART-MIB", cmrRsrcPartMIBCompliance=cmrRsrcPartMIBCompliance, rpmIfCnfRscPartTable=rpmIfCnfRscPartTable, rpmIfRscPrtVpiHigh=rpmIfRscPrtVpiHigh, PYSNMP_MODULE_ID=ciscoMgx82xxRpmRsrcPartMIB, rpmIfRscPrtMaxChans=rpmIfRscPrtMaxChans, rpmIfRscPrtVciLow=rpmIfRscPrtVciLow, rpmIfCnfResPart=rpmIfCnfResPart, cmrRsrcPartMIBCompliances=cmrRsrcPartMIBCompliances, rpmIfRscPrtRowStatus=rpmIfRscPrtRowStatus, rpmIfRscPrtVciHigh=rpmIfRscPrtVciHigh, cmrRsrcPartMIBGroup=cmrRsrcPartMIBGroup, rpmIfRscPrtIngrPctBandwidth=rpmIfRscPrtIngrPctBandwidth, ciscoMgx82xxRpmRsrcPartMIB=ciscoMgx82xxRpmRsrcPartMIB, rpmIfRscPrtEgrPctBandwidth=rpmIfRscPrtEgrPctBandwidth, rpmIfRscPartIfNum=rpmIfRscPartIfNum, rpmIfRscPartCtrlrNum=rpmIfRscPartCtrlrNum, rpmIfRscSlotNum=rpmIfRscSlotNum, cmrRsrcPartMIBGroups=cmrRsrcPartMIBGroups, rpmIfRscPrtVpiLow=rpmIfRscPrtVpiLow, rpmIfCnfRscPartEntry=rpmIfCnfRscPartEntry, cmrRsrcPartMIBConformance=cmrRsrcPartMIBConformance)
