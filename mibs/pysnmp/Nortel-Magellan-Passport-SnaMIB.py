#
# PySNMP MIB module Nortel-Magellan-Passport-SnaMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-SnaMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
DisplayString, StorageType, RowPointer, Integer32, RowStatus, Gauge32, Unsigned32, Counter32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "StorageType", "RowPointer", "Integer32", "RowStatus", "Gauge32", "Unsigned32", "Counter32")
NonReplicated, HexString, DashedHexString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "HexString", "DashedHexString")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
vrIndex, vrPp, vrPpIndex, vr = mibBuilder.importSymbols("Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex", "vrPp", "vrPpIndex", "vr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, IpAddress, Counter64, Bits, Integer32, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, TimeTicks, ModuleIdentity, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "Counter64", "Bits", "Integer32", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
snaMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56))
vrPpSnaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15))
vrPpSnaPortRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 1), )
if mibBuilder.loadTexts: vrPpSnaPortRowStatusTable.setStatus('mandatory')
vrPpSnaPortRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortIndex"))
if mibBuilder.loadTexts: vrPpSnaPortRowStatusEntry.setStatus('mandatory')
vrPpSnaPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSnaPortRowStatus.setStatus('mandatory')
vrPpSnaPortComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortComponentName.setStatus('mandatory')
vrPpSnaPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortStorageType.setStatus('mandatory')
vrPpSnaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpSnaPortIndex.setStatus('mandatory')
vrPpSnaPortAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 100), )
if mibBuilder.loadTexts: vrPpSnaPortAdminControlTable.setStatus('mandatory')
vrPpSnaPortAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortIndex"))
if mibBuilder.loadTexts: vrPpSnaPortAdminControlEntry.setStatus('mandatory')
vrPpSnaPortSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSnaPortSnmpAdminStatus.setStatus('mandatory')
vrPpSnaPortProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 101), )
if mibBuilder.loadTexts: vrPpSnaPortProvTable.setStatus('mandatory')
vrPpSnaPortProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 101, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortIndex"))
if mibBuilder.loadTexts: vrPpSnaPortProvEntry.setStatus('mandatory')
vrPpSnaPortVirtualSegmentLFSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 101, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(635, 635), ValueRangeConstraint(754, 754), ValueRangeConstraint(873, 873), ValueRangeConstraint(993, 993), ValueRangeConstraint(1112, 1112), ValueRangeConstraint(1231, 1231), ValueRangeConstraint(1350, 1350), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(1542, 1542), ValueRangeConstraint(1615, 1615), ValueRangeConstraint(1688, 1688), ValueRangeConstraint(1761, 1761), ValueRangeConstraint(1833, 1833), ValueRangeConstraint(1906, 1906), ValueRangeConstraint(1979, 1979), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(2345, 2345), ValueRangeConstraint(5331, 5331), ValueRangeConstraint(5798, 5798), ValueRangeConstraint(6264, 6264), ValueRangeConstraint(6730, 6730), ValueRangeConstraint(7197, 7197), ValueRangeConstraint(7663, 7663), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(8539, 8539), ValueRangeConstraint(8949, 8949), ValueRangeConstraint(9358, 9358), ValueRangeConstraint(9768, 9768), ValueRangeConstraint(10178, 10178), ValueRangeConstraint(10587, 10587), ValueRangeConstraint(10997, 10997), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(12199, 12199), ValueRangeConstraint(12992, 12992), ValueRangeConstraint(13785, 13785), ValueRangeConstraint(14578, 14578), ValueRangeConstraint(15370, 15370), ValueRangeConstraint(16163, 16163), ValueRangeConstraint(16956, 16956), ValueRangeConstraint(17749, 17749), ValueRangeConstraint(20730, 20730), ValueRangeConstraint(23711, 23711), ValueRangeConstraint(26693, 26693), ValueRangeConstraint(29674, 29674), ValueRangeConstraint(32655, 32655), ValueRangeConstraint(35637, 35637), ValueRangeConstraint(38618, 38618), ValueRangeConstraint(41600, 41600), ValueRangeConstraint(44591, 44591), ValueRangeConstraint(47583, 47583), ValueRangeConstraint(50575, 50575), ValueRangeConstraint(53567, 53567), ValueRangeConstraint(56559, 56559), ValueRangeConstraint(59551, 59551), ValueRangeConstraint(65535, 65535), )).clone(2345)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpSnaPortVirtualSegmentLFSize.setStatus('mandatory')
vrPpSnaPortStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 103), )
if mibBuilder.loadTexts: vrPpSnaPortStateTable.setStatus('mandatory')
vrPpSnaPortStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 103, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortIndex"))
if mibBuilder.loadTexts: vrPpSnaPortStateEntry.setStatus('mandatory')
vrPpSnaPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortAdminState.setStatus('mandatory')
vrPpSnaPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 103, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortOperationalState.setStatus('mandatory')
vrPpSnaPortUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortUsageState.setStatus('mandatory')
vrPpSnaPortOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 104), )
if mibBuilder.loadTexts: vrPpSnaPortOperStatusTable.setStatus('mandatory')
vrPpSnaPortOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 104, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortIndex"))
if mibBuilder.loadTexts: vrPpSnaPortOperStatusEntry.setStatus('mandatory')
vrPpSnaPortSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortSnmpOperStatus.setStatus('mandatory')
vrPpSnaPortCircuit = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2))
vrPpSnaPortCircuitRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1), )
if mibBuilder.loadTexts: vrPpSnaPortCircuitRowStatusTable.setStatus('mandatory')
vrPpSnaPortCircuitRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS1MacIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS1SapIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS2MacIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS2SapIndex"))
if mibBuilder.loadTexts: vrPpSnaPortCircuitRowStatusEntry.setStatus('mandatory')
vrPpSnaPortCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitRowStatus.setStatus('mandatory')
vrPpSnaPortCircuitComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitComponentName.setStatus('mandatory')
vrPpSnaPortCircuitStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitStorageType.setStatus('mandatory')
vrPpSnaPortCircuitS1MacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: vrPpSnaPortCircuitS1MacIndex.setStatus('mandatory')
vrPpSnaPortCircuitS1SapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)))
if mibBuilder.loadTexts: vrPpSnaPortCircuitS1SapIndex.setStatus('mandatory')
vrPpSnaPortCircuitS2MacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1, 12), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: vrPpSnaPortCircuitS2MacIndex.setStatus('mandatory')
vrPpSnaPortCircuitS2SapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)))
if mibBuilder.loadTexts: vrPpSnaPortCircuitS2SapIndex.setStatus('mandatory')
vrPpSnaPortCircuitOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100), )
if mibBuilder.loadTexts: vrPpSnaPortCircuitOperTable.setStatus('mandatory')
vrPpSnaPortCircuitOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS1MacIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS1SapIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS2MacIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrPpSnaPortCircuitS2SapIndex"))
if mibBuilder.loadTexts: vrPpSnaPortCircuitOperEntry.setStatus('mandatory')
vrPpSnaPortCircuitS1DlcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("na", 2), ("llc", 3), ("sdlc", 4), ("qllc", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitS1DlcType.setStatus('mandatory')
vrPpSnaPortCircuitS1RouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitS1RouteInfo.setStatus('mandatory')
vrPpSnaPortCircuitS2Location = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("internal", 2), ("remote", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitS2Location.setStatus('mandatory')
vrPpSnaPortCircuitOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("s2", 0), ("s1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitOrigin.setStatus('mandatory')
vrPpSnaPortCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("disconnected", 1), ("circuitStart", 2), ("resolvePending", 3), ("circuitPending", 4), ("circuitEstablished", 5), ("connectPending", 6), ("contactPending", 7), ("connected", 8), ("disconnectPending", 9), ("haltPending", 10), ("haltPendingNoack", 11), ("circuitRestart", 12), ("restartPending", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitState.setStatus('mandatory')
vrPpSnaPortCircuitPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unsupported", 1), ("low", 2), ("medium", 3), ("high", 4), ("highest", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitPriority.setStatus('mandatory')
vrPpSnaPortCircuitVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 15, 2, 100, 1, 26), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpSnaPortCircuitVcId.setStatus('mandatory')
vrSna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14))
vrSnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 1), )
if mibBuilder.loadTexts: vrSnaRowStatusTable.setStatus('mandatory')
vrSnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrSnaIndex"))
if mibBuilder.loadTexts: vrSnaRowStatusEntry.setStatus('mandatory')
vrSnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrSnaRowStatus.setStatus('mandatory')
vrSnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaComponentName.setStatus('mandatory')
vrSnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaStorageType.setStatus('mandatory')
vrSnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrSnaIndex.setStatus('mandatory')
vrSnaAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 100), )
if mibBuilder.loadTexts: vrSnaAdminControlTable.setStatus('mandatory')
vrSnaAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrSnaIndex"))
if mibBuilder.loadTexts: vrSnaAdminControlEntry.setStatus('mandatory')
vrSnaSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrSnaSnmpAdminStatus.setStatus('mandatory')
vrSnaStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 101), )
if mibBuilder.loadTexts: vrSnaStateTable.setStatus('mandatory')
vrSnaStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 101, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrSnaIndex"))
if mibBuilder.loadTexts: vrSnaStateEntry.setStatus('mandatory')
vrSnaAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaAdminState.setStatus('mandatory')
vrSnaOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaOperationalState.setStatus('mandatory')
vrSnaUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 101, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaUsageState.setStatus('mandatory')
vrSnaOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 102), )
if mibBuilder.loadTexts: vrSnaOperStatusTable.setStatus('mandatory')
vrSnaOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 102, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrSnaIndex"))
if mibBuilder.loadTexts: vrSnaOperStatusEntry.setStatus('mandatory')
vrSnaSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaSnmpOperStatus.setStatus('mandatory')
vrSnaOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 103), )
if mibBuilder.loadTexts: vrSnaOperTable.setStatus('mandatory')
vrSnaOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 103, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrSnaIndex"))
if mibBuilder.loadTexts: vrSnaOperEntry.setStatus('mandatory')
vrSnaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 103, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaVersion.setStatus('mandatory')
vrSnaCircStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 104), )
if mibBuilder.loadTexts: vrSnaCircStatsTable.setStatus('mandatory')
vrSnaCircStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 104, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrSnaIndex"))
if mibBuilder.loadTexts: vrSnaCircStatsEntry.setStatus('mandatory')
vrSnaActives = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 104, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4292967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaActives.setStatus('mandatory')
vrSnaCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 104, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaCreates.setStatus('mandatory')
vrSnaDirStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 105), )
if mibBuilder.loadTexts: vrSnaDirStatsTable.setStatus('mandatory')
vrSnaDirStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 105, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SnaMIB", "vrSnaIndex"))
if mibBuilder.loadTexts: vrSnaDirStatsEntry.setStatus('mandatory')
vrSnaMacEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 105, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaMacEntries.setStatus('mandatory')
vrSnaMacCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 105, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaMacCacheHits.setStatus('mandatory')
vrSnaMacCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 14, 105, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSnaMacCacheMisses.setStatus('mandatory')
snaGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 1))
snaGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 1, 5))
snaGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 1, 5, 2))
snaGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 1, 5, 2, 2))
snaCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 3))
snaCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 3, 5))
snaCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 3, 5, 2))
snaCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 56, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-SnaMIB", vrPpSnaPortCircuitS2Location=vrPpSnaPortCircuitS2Location, vrSnaMacCacheHits=vrSnaMacCacheHits, vrSnaComponentName=vrSnaComponentName, snaMIB=snaMIB, vrSnaStateTable=vrSnaStateTable, vrPpSnaPortCircuit=vrPpSnaPortCircuit, vrPpSnaPortUsageState=vrPpSnaPortUsageState, vrPpSnaPortStorageType=vrPpSnaPortStorageType, vrPpSnaPortAdminControlEntry=vrPpSnaPortAdminControlEntry, vrPpSnaPortCircuitRowStatusTable=vrPpSnaPortCircuitRowStatusTable, vrSnaMacCacheMisses=vrSnaMacCacheMisses, snaCapabilitiesBE=snaCapabilitiesBE, vrSnaCircStatsEntry=vrSnaCircStatsEntry, vrSnaOperStatusEntry=vrSnaOperStatusEntry, snaGroupBE01A=snaGroupBE01A, vrPpSnaPortCircuitS1RouteInfo=vrPpSnaPortCircuitS1RouteInfo, vrPpSnaPortCircuitOperTable=vrPpSnaPortCircuitOperTable, vrPpSnaPortRowStatusEntry=vrPpSnaPortRowStatusEntry, vrPpSnaPortCircuitStorageType=vrPpSnaPortCircuitStorageType, vrPpSnaPortAdminState=vrPpSnaPortAdminState, vrPpSnaPortProvEntry=vrPpSnaPortProvEntry, vrSnaDirStatsEntry=vrSnaDirStatsEntry, vrSnaCircStatsTable=vrSnaCircStatsTable, vrPpSnaPortSnmpAdminStatus=vrPpSnaPortSnmpAdminStatus, vrSnaRowStatusTable=vrSnaRowStatusTable, vrPpSnaPortProvTable=vrPpSnaPortProvTable, vrPpSnaPortOperationalState=vrPpSnaPortOperationalState, vrPpSnaPortAdminControlTable=vrPpSnaPortAdminControlTable, vrSnaStorageType=vrSnaStorageType, snaCapabilitiesBE01=snaCapabilitiesBE01, vrSnaRowStatus=vrSnaRowStatus, vrPpSnaPortCircuitRowStatus=vrPpSnaPortCircuitRowStatus, vrPpSnaPortOperStatusTable=vrPpSnaPortOperStatusTable, snaCapabilitiesBE01A=snaCapabilitiesBE01A, vrPpSnaPortCircuitRowStatusEntry=vrPpSnaPortCircuitRowStatusEntry, vrPpSnaPortIndex=vrPpSnaPortIndex, vrSnaMacEntries=vrSnaMacEntries, vrSnaAdminControlEntry=vrSnaAdminControlEntry, vrSnaVersion=vrSnaVersion, vrPpSnaPortCircuitS1MacIndex=vrPpSnaPortCircuitS1MacIndex, vrPpSnaPortRowStatus=vrPpSnaPortRowStatus, vrPpSnaPortCircuitS1SapIndex=vrPpSnaPortCircuitS1SapIndex, vrSnaUsageState=vrSnaUsageState, vrSnaDirStatsTable=vrSnaDirStatsTable, vrPpSnaPortStateTable=vrPpSnaPortStateTable, vrSnaOperTable=vrSnaOperTable, vrPpSnaPortCircuitPriority=vrPpSnaPortCircuitPriority, vrSnaActives=vrSnaActives, vrPpSnaPortCircuitS1DlcType=vrPpSnaPortCircuitS1DlcType, vrPpSnaPort=vrPpSnaPort, snaGroupBE01=snaGroupBE01, vrPpSnaPortCircuitState=vrPpSnaPortCircuitState, vrPpSnaPortComponentName=vrPpSnaPortComponentName, vrSnaCreates=vrSnaCreates, snaCapabilities=snaCapabilities, vrSnaAdminState=vrSnaAdminState, vrPpSnaPortOperStatusEntry=vrPpSnaPortOperStatusEntry, vrSnaRowStatusEntry=vrSnaRowStatusEntry, vrPpSnaPortCircuitOrigin=vrPpSnaPortCircuitOrigin, snaGroupBE=snaGroupBE, vrPpSnaPortCircuitS2SapIndex=vrPpSnaPortCircuitS2SapIndex, vrSnaStateEntry=vrSnaStateEntry, snaGroup=snaGroup, vrPpSnaPortStateEntry=vrPpSnaPortStateEntry, vrSnaOperationalState=vrSnaOperationalState, vrPpSnaPortCircuitOperEntry=vrPpSnaPortCircuitOperEntry, vrSnaAdminControlTable=vrSnaAdminControlTable, vrPpSnaPortCircuitS2MacIndex=vrPpSnaPortCircuitS2MacIndex, vrSnaOperEntry=vrSnaOperEntry, vrSnaSnmpOperStatus=vrSnaSnmpOperStatus, vrPpSnaPortRowStatusTable=vrPpSnaPortRowStatusTable, vrSna=vrSna, vrSnaSnmpAdminStatus=vrSnaSnmpAdminStatus, vrPpSnaPortVirtualSegmentLFSize=vrPpSnaPortVirtualSegmentLFSize, vrPpSnaPortCircuitComponentName=vrPpSnaPortCircuitComponentName, vrSnaOperStatusTable=vrSnaOperStatusTable, vrSnaIndex=vrSnaIndex, vrPpSnaPortSnmpOperStatus=vrPpSnaPortSnmpOperStatus, vrPpSnaPortCircuitVcId=vrPpSnaPortCircuitVcId)
