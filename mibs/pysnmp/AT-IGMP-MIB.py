#
# PySNMP MIB module AT-IGMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-IGMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:14:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
modules, = mibBuilder.importSymbols("AT-SMI-MIB", "modules")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter64, TimeTicks, MibIdentifier, Unsigned32, Counter32, ModuleIdentity, Gauge32, iso, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "TimeTicks", "MibIdentifier", "Unsigned32", "Counter32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits")
DisplayString, TruthValue, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "MacAddress")
igmp = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139))
igmp.setRevisions(('2007-08-08 00:00',))
if mibBuilder.loadTexts: igmp.setLastUpdated('200708080000Z')
if mibBuilder.loadTexts: igmp.setOrganization('Allied Telesis, Inc.')
igmpIntInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1))
igmpIntMember = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 9))
igmpSnooping = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10))
igmpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 1), )
if mibBuilder.loadTexts: igmpInterfaceTable.setStatus('current')
igmpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 1, 1), ).setIndexNames((0, "AT-IGMP-MIB", "igmpInterface"))
if mibBuilder.loadTexts: igmpInterfaceEntry.setStatus('current')
igmpInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpInterface.setStatus('current')
igmpInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpInterfaceName.setStatus('current')
igmpQueryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpQueryTimeout.setStatus('current')
igmpProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("upstream", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpProxy.setStatus('current')
igmpIntStatsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2), )
if mibBuilder.loadTexts: igmpIntStatsTable.setStatus('current')
igmpIntStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1), ).setIndexNames((0, "AT-IGMP-MIB", "igmpInterface"))
if mibBuilder.loadTexts: igmpIntStatsEntry.setStatus('current')
igmpInQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpInQuery.setStatus('current')
igmpInReportV1 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpInReportV1.setStatus('current')
igmpInReportV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpInReportV2.setStatus('current')
igmpInLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpInLeave.setStatus('current')
igmpInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpInTotal.setStatus('current')
igmpOutQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpOutQuery.setStatus('current')
igmpOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpOutTotal.setStatus('current')
igmpBadQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpBadQuery.setStatus('current')
igmpBadReportV1 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpBadReportV1.setStatus('current')
igmpBadReportV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpBadReportV2.setStatus('current')
igmpBadLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpBadLeave.setStatus('current')
igmpBadTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpBadTotal.setStatus('current')
igmpIntGroupTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 9, 1), )
if mibBuilder.loadTexts: igmpIntGroupTable.setStatus('current')
igmpIntGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 9, 1, 1), ).setIndexNames((0, "AT-IGMP-MIB", "igmpInterface"))
if mibBuilder.loadTexts: igmpIntGroupEntry.setStatus('current')
igmpIntGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 9, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpIntGroupAddress.setStatus('current')
igmpLastHost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 9, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpLastHost.setStatus('current')
igmpRefreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 9, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpRefreshTime.setStatus('current')
igmpSnoopAdminInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 1))
igmpSnoopAdminEnabled = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopAdminEnabled.setStatus('current')
igmpSnoopVlanTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 2), )
if mibBuilder.loadTexts: igmpSnoopVlanTable.setStatus('current')
igmpSnoopVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 2, 1), ).setIndexNames((0, "AT-IGMP-MIB", "igmpSnoopVID"))
if mibBuilder.loadTexts: igmpSnoopVlanEntry.setStatus('current')
igmpSnoopVID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopVID.setStatus('current')
igmpSnoopVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopVlanName.setStatus('current')
igmpSnoopFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("single", 1), ("multi", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopFastLeave.setStatus('current')
igmpSnoopQuerySolicit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopQuerySolicit.setStatus('current')
igmpSnoopStaticRouterPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopStaticRouterPorts.setStatus('current')
igmpSnoopGroupTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 3), )
if mibBuilder.loadTexts: igmpSnoopGroupTable.setStatus('current')
igmpSnoopGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 3, 1), ).setIndexNames((0, "AT-IGMP-MIB", "igmpSnoopVID"), (0, "AT-IGMP-MIB", "igmpSnoopGroupAddress"))
if mibBuilder.loadTexts: igmpSnoopGroupEntry.setStatus('current')
igmpSnoopGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopGroupAddress.setStatus('current')
igmpSnoopGroupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopGroupTimer.setStatus('current')
igmpSnoopPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 4), )
if mibBuilder.loadTexts: igmpSnoopPortTable.setStatus('current')
igmpSnoopPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 4, 1), ).setIndexNames((0, "AT-IGMP-MIB", "igmpSnoopVID"), (0, "AT-IGMP-MIB", "igmpSnoopGroupAddress"), (0, "AT-IGMP-MIB", "igmpSnoopPortNumber"))
if mibBuilder.loadTexts: igmpSnoopPortEntry.setStatus('current')
igmpSnoopPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopPortNumber.setStatus('current')
igmpSnoopPortIsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 4, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopPortIsStatic.setStatus('current')
igmpSnoopPortTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopPortTimer.setStatus('current')
igmpSnoopHostTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 5), )
if mibBuilder.loadTexts: igmpSnoopHostTable.setStatus('current')
igmpSnoopHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 5, 1), ).setIndexNames((0, "AT-IGMP-MIB", "igmpSnoopVID"), (0, "AT-IGMP-MIB", "igmpSnoopGroupAddress"), (0, "AT-IGMP-MIB", "igmpSnoopPortNumber"), (0, "AT-IGMP-MIB", "igmpSnoopHostMAC"))
if mibBuilder.loadTexts: igmpSnoopHostEntry.setStatus('current')
igmpSnoopHostMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopHostMAC.setStatus('current')
igmpSnoopHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopHostIpAddress.setStatus('current')
igmpSnoopHostTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 139, 10, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopHostTimer.setStatus('current')
mibBuilder.exportSymbols("AT-IGMP-MIB", igmpIntStatsEntry=igmpIntStatsEntry, igmpBadLeave=igmpBadLeave, igmpSnoopAdminEnabled=igmpSnoopAdminEnabled, igmpSnoopPortEntry=igmpSnoopPortEntry, igmpSnoopHostMAC=igmpSnoopHostMAC, igmpIntStatsTable=igmpIntStatsTable, igmpBadReportV2=igmpBadReportV2, igmpBadReportV1=igmpBadReportV1, igmpIntInfo=igmpIntInfo, igmpInReportV1=igmpInReportV1, igmpOutTotal=igmpOutTotal, igmpOutQuery=igmpOutQuery, igmpSnoopFastLeave=igmpSnoopFastLeave, igmpInLeave=igmpInLeave, igmpInterfaceName=igmpInterfaceName, igmpSnoopHostEntry=igmpSnoopHostEntry, igmpSnoopHostIpAddress=igmpSnoopHostIpAddress, igmpBadTotal=igmpBadTotal, igmpSnoopGroupEntry=igmpSnoopGroupEntry, igmpIntGroupTable=igmpIntGroupTable, igmpInterface=igmpInterface, igmpIntMember=igmpIntMember, igmpSnoopHostTable=igmpSnoopHostTable, igmpProxy=igmpProxy, igmpSnoopStaticRouterPorts=igmpSnoopStaticRouterPorts, igmpSnoopVlanEntry=igmpSnoopVlanEntry, PYSNMP_MODULE_ID=igmp, igmpInTotal=igmpInTotal, igmpInReportV2=igmpInReportV2, igmpSnoopVlanName=igmpSnoopVlanName, igmpLastHost=igmpLastHost, igmpInQuery=igmpInQuery, igmpSnoopGroupTable=igmpSnoopGroupTable, igmpSnoopVID=igmpSnoopVID, igmpSnoopVlanTable=igmpSnoopVlanTable, igmpSnoopPortTimer=igmpSnoopPortTimer, igmpSnoopPortNumber=igmpSnoopPortNumber, igmpSnoopGroupTimer=igmpSnoopGroupTimer, igmp=igmp, igmpQueryTimeout=igmpQueryTimeout, igmpSnoopQuerySolicit=igmpSnoopQuerySolicit, igmpRefreshTime=igmpRefreshTime, igmpSnoopPortIsStatic=igmpSnoopPortIsStatic, igmpInterfaceEntry=igmpInterfaceEntry, igmpSnoopAdminInfo=igmpSnoopAdminInfo, igmpSnooping=igmpSnooping, igmpSnoopHostTimer=igmpSnoopHostTimer, igmpIntGroupEntry=igmpIntGroupEntry, igmpInterfaceTable=igmpInterfaceTable, igmpBadQuery=igmpBadQuery, igmpIntGroupAddress=igmpIntGroupAddress, igmpSnoopGroupAddress=igmpSnoopGroupAddress, igmpSnoopPortTable=igmpSnoopPortTable)
