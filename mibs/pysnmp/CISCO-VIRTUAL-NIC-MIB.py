#
# PySNMP MIB module CISCO-VIRTUAL-NIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VIRTUAL-NIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:01:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, NotificationType, ModuleIdentity, MibIdentifier, Counter32, TimeTicks, iso, Gauge32, IpAddress, Unsigned32, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "NotificationType", "ModuleIdentity", "MibIdentifier", "Counter32", "TimeTicks", "iso", "Gauge32", "IpAddress", "Unsigned32", "ObjectIdentity", "Bits")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
ciscoVirtualNicMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 710))
ciscoVirtualNicMIB.setRevisions(('2009-10-26 00:00',))
if mibBuilder.loadTexts: ciscoVirtualNicMIB.setLastUpdated('200910260000Z')
if mibBuilder.loadTexts: ciscoVirtualNicMIB.setOrganization('Cisco Systems, Inc.')
ciscoVirtualNicMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 710, 0))
ciscoVirtualNicMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 710, 1))
ciscoVirtualNicMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 710, 2))
cvnInterfaceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1))
cvnConnecteeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2))
cvnVethIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1), )
if mibBuilder.loadTexts: cvnVethIfTable.setStatus('current')
cvnVethIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-VIRTUAL-NIC-MIB", "cvnVethInterface"))
if mibBuilder.loadTexts: cvnVethIfEntry.setStatus('current')
cvnVethInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cvnVethInterface.setStatus('current')
cvnVethAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethAdapter.setStatus('current')
cvnVethOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethOwner.setStatus('current')
cvnVethHostID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethHostID.setStatus('current')
cvnVethHostAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethHostAddrType.setStatus('current')
cvnVethHostAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethHostAddr.setStatus('current')
cvnVethPortProfileUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethPortProfileUsed.setStatus('current')
cvnVethIfProfileAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethIfProfileAlias.setStatus('current')
cvnVethIfAdditionalState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("participating", 2), ("suspended", 3), ("errDisabled", 4), ("nonParticipating", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethIfAdditionalState.setStatus('current')
cvnVethStateReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 1, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnVethStateReason.setStatus('current')
cvnPinningTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 2), )
if mibBuilder.loadTexts: cvnPinningTable.setStatus('current')
cvnPinningEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-VIRTUAL-NIC-MIB", "cvnVethInterface"))
if mibBuilder.loadTexts: cvnPinningEntry.setStatus('current')
cvnPinnedSubGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvnPinnedSubGrpId.setStatus('current')
cvnConnecteeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1), )
if mibBuilder.loadTexts: cvnConnecteeTable.setStatus('current')
cvnConnecteeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VIRTUAL-NIC-MIB", "cvnVethInterface"))
if mibBuilder.loadTexts: cvnConnecteeEntry.setStatus('current')
cvnConnecteeAttachType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("vem", 2), ("niv", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnConnecteeAttachType.setStatus('current')
cvnDVSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnDVSPort.setStatus('current')
cvnConnecteeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnConnecteeName.setStatus('current')
cvnConnecteeUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnConnecteeUuid.setStatus('current')
cvnConnecteeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("vmwareVm", 2), ("vmwareHost", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnConnecteeType.setStatus('current')
cvnConnecteeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnConnecteeMac.setStatus('current')
cvnConnecteeDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnConnecteeDeviceName.setStatus('current')
cvnConnecteeDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 710, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("pnic", 2), ("vnic", 3), ("vswif", 4), ("vmknic", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvnConnecteeDeviceType.setStatus('current')
ciscoVirtualNicMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 710, 2, 1))
ciscoVirtualNicMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 710, 2, 2))
virtualNicMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 710, 2, 1, 1)).setObjects(("CISCO-VIRTUAL-NIC-MIB", "cvnVethGroup"), ("CISCO-VIRTUAL-NIC-MIB", "cvnPinningGroup"), ("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    virtualNicMIBCompliance = virtualNicMIBCompliance.setStatus('current')
cvnVethGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 710, 2, 2, 1)).setObjects(("CISCO-VIRTUAL-NIC-MIB", "cvnVethAdapter"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethOwner"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethHostID"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethHostAddrType"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethHostAddr"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethPortProfileUsed"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethIfProfileAlias"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethIfAdditionalState"), ("CISCO-VIRTUAL-NIC-MIB", "cvnVethStateReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvnVethGroup = cvnVethGroup.setStatus('current')
cvnPinningGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 710, 2, 2, 2)).setObjects(("CISCO-VIRTUAL-NIC-MIB", "cvnPinnedSubGrpId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvnPinningGroup = cvnPinningGroup.setStatus('current')
cvnConnecteeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 710, 2, 2, 3)).setObjects(("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeAttachType"), ("CISCO-VIRTUAL-NIC-MIB", "cvnDVSPort"), ("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeName"), ("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeUuid"), ("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeType"), ("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeMac"), ("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeDeviceName"), ("CISCO-VIRTUAL-NIC-MIB", "cvnConnecteeDeviceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvnConnecteeGroup = cvnConnecteeGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-VIRTUAL-NIC-MIB", cvnVethIfAdditionalState=cvnVethIfAdditionalState, PYSNMP_MODULE_ID=ciscoVirtualNicMIB, ciscoVirtualNicMIBNotifs=ciscoVirtualNicMIBNotifs, cvnConnecteeAttachType=cvnConnecteeAttachType, cvnConnecteeName=cvnConnecteeName, cvnPinningEntry=cvnPinningEntry, cvnConnecteeUuid=cvnConnecteeUuid, cvnVethInterface=cvnVethInterface, ciscoVirtualNicMIBObjects=ciscoVirtualNicMIBObjects, ciscoVirtualNicMIBConformance=ciscoVirtualNicMIBConformance, cvnVethHostAddr=cvnVethHostAddr, cvnPinnedSubGrpId=cvnPinnedSubGrpId, virtualNicMIBCompliance=virtualNicMIBCompliance, cvnVethPortProfileUsed=cvnVethPortProfileUsed, cvnDVSPort=cvnDVSPort, cvnConnecteeMac=cvnConnecteeMac, cvnConnecteeDeviceType=cvnConnecteeDeviceType, ciscoVirtualNicMIBCompliances=ciscoVirtualNicMIBCompliances, cvnVethStateReason=cvnVethStateReason, cvnVethIfTable=cvnVethIfTable, cvnConnecteeGroup=cvnConnecteeGroup, cvnPinningGroup=cvnPinningGroup, cvnConnecteeType=cvnConnecteeType, cvnVethIfProfileAlias=cvnVethIfProfileAlias, cvnVethHostID=cvnVethHostID, cvnVethHostAddrType=cvnVethHostAddrType, cvnConnecteeObjects=cvnConnecteeObjects, cvnVethOwner=cvnVethOwner, cvnVethAdapter=cvnVethAdapter, cvnConnecteeDeviceName=cvnConnecteeDeviceName, ciscoVirtualNicMIBGroups=ciscoVirtualNicMIBGroups, cvnInterfaceObjects=cvnInterfaceObjects, cvnPinningTable=cvnPinningTable, ciscoVirtualNicMIB=ciscoVirtualNicMIB, cvnVethGroup=cvnVethGroup, cvnConnecteeEntry=cvnConnecteeEntry, cvnVethIfEntry=cvnVethIfEntry, cvnConnecteeTable=cvnConnecteeTable)
