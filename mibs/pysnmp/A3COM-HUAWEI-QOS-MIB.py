#
# PySNMP MIB module A3COM-HUAWEI-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
hwInternetProtocol, hwLocal, vrpProtocol, huawei = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "hwInternetProtocol", "hwLocal", "vrpProtocol", "huawei")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ModuleIdentity, Integer32, iso, NotificationType, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, IpAddress, Counter64, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "Integer32", "iso", "NotificationType", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "IpAddress", "Counter64", "ObjectIdentity", "TimeTicks")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hwIfQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2))
if mibBuilder.loadTexts: hwIfQoSMib.setLastUpdated('200410110000Z')
if mibBuilder.loadTexts: hwIfQoSMib.setOrganization('Huawei Technologies Co. Ltd.')
qosFIFOTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1), )
if mibBuilder.loadTexts: qosFIFOTable.setStatus('current')
qosFIFOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosFIFOIfIndex"))
if mibBuilder.loadTexts: qosFIFOEntry.setStatus('current')
qosFIFOIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: qosFIFOIfIndex.setStatus('current')
qosFIFOIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosFIFOIfName.setStatus('current')
qosFIFOMaxQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosFIFOMaxQueueLen.setStatus('current')
qosFIFOCurQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosFIFOCurQueueLen.setStatus('current')
qosFIFODiscardPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosFIFODiscardPkt.setStatus('current')
qosUndoFIFO = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosFIFO", 0), ("qosNoFIFO", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoFIFO.setStatus('current')
qosPqlDefaultTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 2), )
if mibBuilder.loadTexts: qosPqlDefaultTable.setStatus('current')
qosPqlDefaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosPqlDefaultListNum"))
if mibBuilder.loadTexts: qosPqlDefaultEntry.setStatus('current')
qosPqlDefaultListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: qosPqlDefaultListNum.setStatus('current')
qosPqlDefaultQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlDefaultQueueType.setStatus('current')
qosUndoPqlDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlDefault", 0), ("qosNoPqlDefault", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlDefault.setStatus('current')
qosPqlQueueLenTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 3), )
if mibBuilder.loadTexts: qosPqlQueueLenTable.setStatus('current')
qosPqlQueueLenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosPqlQueLenListNum"), (0, "A3COM-HUAWEI-QOS-MIB", "qosPqlQueLenQueueType"))
if mibBuilder.loadTexts: qosPqlQueueLenEntry.setStatus('current')
qosPqlQueLenListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: qosPqlQueLenListNum.setStatus('current')
qosPqlQueLenQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3))))
if mibBuilder.loadTexts: qosPqlQueLenQueueType.setStatus('current')
qosPqlQueLenValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlQueLenValue.setStatus('current')
qosUndoPqlQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlQueLen", 0), ("qosNoPqlQueLen", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlQueLen.setStatus('current')
qosPqlIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 4), )
if mibBuilder.loadTexts: qosPqlIfTable.setStatus('current')
qosPqlIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosPqlIfListNum"), (0, "A3COM-HUAWEI-QOS-MIB", "qosPqlIfIndex"))
if mibBuilder.loadTexts: qosPqlIfEntry.setStatus('current')
qosPqlIfListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: qosPqlIfListNum.setStatus('current')
qosPqlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: qosPqlIfIndex.setStatus('current')
qosPqlIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlIfName.setStatus('current')
qosPqlIfQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlIfQueueType.setStatus('current')
qosUndoPqlIf = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlIF", 0), ("qosNoPqlIF", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlIf.setStatus('current')
qosPqlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5), )
if mibBuilder.loadTexts: qosPqlProtocolTable.setStatus('current')
qosPqlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosPqlProListNum"), (0, "A3COM-HUAWEI-QOS-MIB", "qosPqlProName"), (0, "A3COM-HUAWEI-QOS-MIB", "qosPqlProQueKey"), (0, "A3COM-HUAWEI-QOS-MIB", "qosPqlProQueKeyValue"))
if mibBuilder.loadTexts: qosPqlProtocolEntry.setStatus('current')
qosPqlProListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: qosPqlProListNum.setStatus('current')
qosPqlProName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("mpls", 2))))
if mibBuilder.loadTexts: qosPqlProName.setStatus('current')
qosPqlProQueKey = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("null", 1), ("fragment", 2), ("acl", 3), ("less-than", 4), ("greater-than", 5), ("tcp", 6), ("udp", 7), ("exp-mask", 8))))
if mibBuilder.loadTexts: qosPqlProQueKey.setStatus('current')
qosPqlProQueKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: qosPqlProQueKeyValue.setStatus('current')
qosPqlProQueType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlProQueType.setStatus('current')
qosUndoPqlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlProtocol", 0), ("qosNoPqlProtocol", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlProtocol.setStatus('current')
qosPQTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6), )
if mibBuilder.loadTexts: qosPQTable.setStatus('current')
qosPQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosPQIfIndex"))
if mibBuilder.loadTexts: qosPQEntry.setStatus('current')
qosPQIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: qosPQIfIndex.setStatus('current')
qosPQListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPQListNum.setStatus('current')
qosPQIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQIfName.setStatus('current')
qosPQTopPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQTopPkt.setStatus('current')
qosPQTopDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQTopDiscard.setStatus('current')
qosPQTopMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQTopMaxQueLen.setStatus('current')
qosPQMiddlePkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQMiddlePkt.setStatus('current')
qosPQMiddleDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQMiddleDiscard.setStatus('current')
qosPQMiddleMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQMiddleMaxQueLen.setStatus('current')
qosPQNormalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQNormalPkt.setStatus('current')
qosPQNormalDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQNormalDiscard.setStatus('current')
qosPQNormalMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQNormalMaxQueLen.setStatus('current')
qosPQBottomPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQBottomPkt.setStatus('current')
qosPQBottomDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQBottomDiscard.setStatus('current')
qosPQBottomMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQBottomMaxQueLen.setStatus('current')
qosUndoPQ = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPQ", 0), ("qosNoPQ", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPQ.setStatus('current')
qosCqlDefaultTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 7), )
if mibBuilder.loadTexts: qosCqlDefaultTable.setStatus('current')
qosCqlDefaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCqlListNum"))
if mibBuilder.loadTexts: qosCqlDefaultEntry.setStatus('current')
qosCqlListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: qosCqlListNum.setStatus('current')
qosCqlQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlQueueNum.setStatus('current')
qosUndoCqlDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlDefault", 0), ("qosNoCqlDefault", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlDefault.setStatus('current')
qosCqlIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 8), )
if mibBuilder.loadTexts: qosCqlIfTable.setStatus('current')
qosCqlIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCqlIfListNum"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCqlIfIndex"))
if mibBuilder.loadTexts: qosCqlIfEntry.setStatus('current')
qosCqlIfListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: qosCqlIfListNum.setStatus('current')
qosCqlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 8, 1, 2), Integer32())
if mibBuilder.loadTexts: qosCqlIfIndex.setStatus('current')
qosCqlIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 8, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlIfName.setStatus('current')
qosCqlIfQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlIfQueueNum.setStatus('current')
qosUndoCqlIf = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlIf", 0), ("qosNoCqlIf", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlIf.setStatus('current')
qosCqlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9), )
if mibBuilder.loadTexts: qosCqlProtocolTable.setStatus('current')
qosCqlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCqlProListNum"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCqlProName"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCqlProQueKey"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCqlProQueKeyValue"))
if mibBuilder.loadTexts: qosCqlProtocolEntry.setStatus('current')
qosCqlProListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: qosCqlProListNum.setStatus('current')
qosCqlProName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("mpls", 2))))
if mibBuilder.loadTexts: qosCqlProName.setStatus('current')
qosCqlProQueKey = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("null", 1), ("fragment", 2), ("acl", 3), ("less-than", 4), ("greater-than", 5), ("tcp", 6), ("udp", 7), ("exp-mask", 8))))
if mibBuilder.loadTexts: qosCqlProQueKey.setStatus('current')
qosCqlProQueKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: qosCqlProQueKeyValue.setStatus('current')
qosCqlProQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlProQueNum.setStatus('current')
qosUndoCqlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlProtocol", 0), ("qosNoCqlProtocol", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlProtocol.setStatus('current')
qosCqlQueParaTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10), )
if mibBuilder.loadTexts: qosCqlQueParaTable.setStatus('current')
qosCqlQueParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCqlQueParaListNum"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCqlQueParaQueNum"))
if mibBuilder.loadTexts: qosCqlQueParaEntry.setStatus('current')
qosCqlQueParaListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: qosCqlQueParaListNum.setStatus('current')
qosCqlQueParaQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: qosCqlQueParaQueNum.setStatus('current')
qosCqlQueParaServing = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlQueParaServing.setStatus('current')
qosCqlQueParaMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlQueParaMaxQueLen.setStatus('current')
qosUndoCqlQueParaServing = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlQueParaServing", 0), ("qosNoCqlQueParaServing", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlQueParaServing.setStatus('current')
qosUndoCqlQueParaMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlQueParaMaxQueLen", 0), ("qosNoCqlQueParaMaxQueLen", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlQueParaMaxQueLen.setStatus('current')
qosCQTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 11), )
if mibBuilder.loadTexts: qosCQTable.setStatus('current')
qosCQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCQIfIndex"))
if mibBuilder.loadTexts: qosCQEntry.setStatus('current')
qosCQIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: qosCQIfIndex.setStatus('current')
qosCQListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCQListNum.setStatus('current')
qosCQIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 11, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQIfName.setStatus('current')
qosUndoCQ = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCQ", 0), ("qosNoCQ", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCQ.setStatus('current')
qosCQRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12), )
if mibBuilder.loadTexts: qosCQRunInfoTable.setStatus('current')
qosCQRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCQRunInfoIfIndex"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCQRunInfoQueNum"))
if mibBuilder.loadTexts: qosCQRunInfoEntry.setStatus('current')
qosCQRunInfoIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12, 1, 1), Integer32())
if mibBuilder.loadTexts: qosCQRunInfoIfIndex.setStatus('current')
qosCQRunInfoQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: qosCQRunInfoQueNum.setStatus('current')
qosCQRunInfoIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoIfName.setStatus('current')
qosCQRunInfoQuePkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoQuePkt.setStatus('current')
qosCQRunInfoQueDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoQueDiscard.setStatus('current')
qosCQRunInfoMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoMaxQueLen.setStatus('current')
qosWFQTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13), )
if mibBuilder.loadTexts: qosWFQTable.setStatus('current')
qosWFQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosWFQIfIndex"))
if mibBuilder.loadTexts: qosWFQEntry.setStatus('current')
qosWFQIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: qosWFQIfIndex.setStatus('current')
qosWFQIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQIfName.setStatus('current')
qosWFQMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWFQMaxQueLen.setStatus('current')
qosWFQTotalQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("a16", 16), ("a32", 32), ("a64", 64), ("a128", 128), ("a256", 256), ("a512", 512), ("a1024", 1024), ("a2048", 2048), ("a4096", 4096)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWFQTotalQueNum.setStatus('current')
qosWFQCurQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQCurQueLen.setStatus('current')
qosWFQTotalDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQTotalDiscard.setStatus('current')
qosWFQActiveQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQActiveQueNum.setStatus('current')
qosWFQMaxActiveQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQMaxActiveQueNum.setStatus('current')
qosUndoWFQ = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosWFQ", 0), ("qosNoWFQ", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoWFQ.setStatus('current')
qosWFQQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip-precedence", 1), ("dscp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWFQQueueType.setStatus('current')
qosWREDTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 14), )
if mibBuilder.loadTexts: qosWREDTable.setStatus('current')
qosWREDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 14, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosWREDIfIndex"))
if mibBuilder.loadTexts: qosWREDEntry.setStatus('current')
qosWREDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 14, 1, 1), Integer32())
if mibBuilder.loadTexts: qosWREDIfIndex.setStatus('current')
qosWREDIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 14, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDIfName.setStatus('current')
qosWREDWeightConstant = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDWeightConstant.setStatus('current')
qosWREDEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDEnable.setStatus('current')
qosUndoWREDWeightConstant = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosWREDExponent", 0), ("qosNoWREDExponent", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoWREDWeightConstant.setStatus('current')
qosWREDPreTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15), )
if mibBuilder.loadTexts: qosWREDPreTable.setStatus('current')
qosWREDPreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosWREDPreIfIndex"), (0, "A3COM-HUAWEI-QOS-MIB", "qosWREDPrecedence"))
if mibBuilder.loadTexts: qosWREDPreEntry.setStatus('current')
qosWREDPreIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: qosWREDPreIfIndex.setStatus('current')
qosWREDPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: qosWREDPrecedence.setStatus('current')
qosWREDPreIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPreIfName.setStatus('current')
qosWREDPreLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDPreLowLimit.setStatus('current')
qosWREDPreHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDPreHighLimit.setStatus('current')
qosWREDPreDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDPreDiscardProbability.setStatus('current')
qosWREDPreRandomDropNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPreRandomDropNum.setStatus('current')
qosWREDPreTailDropNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPreTailDropNum.setStatus('current')
qosUndoWREDPre = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosWREDPre", 0), ("qosNoWREDPre", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoWREDPre.setStatus('current')
qosCarlTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 16), )
if mibBuilder.loadTexts: qosCarlTable.setStatus('current')
qosCarlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 16, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCarlListNum"))
if mibBuilder.loadTexts: qosCarlEntry.setStatus('current')
qosCarlListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: qosCarlListNum.setStatus('current')
qosCarlParaType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac-address", 1), ("prec-mask", 2), ("dscp-mask", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCarlParaType.setStatus('current')
qosCarlParaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 16, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCarlParaValue.setStatus('current')
qosUndoCarl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCARL", 0), ("qosNoCARL", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCarl.setStatus('current')
qosCARTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17), )
if mibBuilder.loadTexts: qosCARTable.setStatus('current')
qosCAREntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosCARIfIndex"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCARPktDirection"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCARType"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCARListNum"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCARCIR"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCARBurstSize"), (0, "A3COM-HUAWEI-QOS-MIB", "qosCARExcessBurstSize"))
if mibBuilder.loadTexts: qosCAREntry.setStatus('current')
qosCARIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 1), Integer32())
if mibBuilder.loadTexts: qosCARIfIndex.setStatus('current')
qosCARIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARIfName.setStatus('current')
qosCARPktDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))))
if mibBuilder.loadTexts: qosCARPktDirection.setStatus('current')
qosCARType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acl", 1), ("carl", 2), ("all", 3))))
if mibBuilder.loadTexts: qosCARType.setStatus('current')
qosCARListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 199), ValueRangeConstraint(2000, 3999), )))
if mibBuilder.loadTexts: qosCARListNum.setStatus('current')
qosCARCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 6), Integer32())
if mibBuilder.loadTexts: qosCARCIR.setStatus('current')
qosCARBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 7), Integer32())
if mibBuilder.loadTexts: qosCARBurstSize.setStatus('current')
qosCARExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 8), Integer32())
if mibBuilder.loadTexts: qosCARExcessBurstSize.setStatus('current')
qosCARConformAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("continue", 1), ("discard", 2), ("remark-prec-continue", 3), ("remark-prec-pass", 4), ("pass", 5), ("remark-mplsexp-continue", 6), ("remark-mplsexp-pass", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARConformAction.setStatus('current')
qosCARExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("continue", 1), ("discard", 2), ("remark-prec-continue", 3), ("remark-prec-pass", 4), ("pass", 5), ("remark-mplsexp-continue", 6), ("remark-mplsexp-pass", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARExceedAction.setStatus('current')
qosCARConformNewPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARConformNewPrec.setStatus('current')
qosCARExceedNewPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARExceedNewPrec.setStatus('current')
qosCARConformPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARConformPkt.setStatus('current')
qosCARConformByte = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARConformByte.setStatus('current')
qosCARExceedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARExceedPkt.setStatus('current')
qosCARExceedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARExceedByte.setStatus('current')
qosUndoCAR = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 17, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCAR", 0), ("qosNoCAR", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCAR.setStatus('current')
qosGTSTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18), )
if mibBuilder.loadTexts: qosGTSTable.setStatus('current')
qosGTSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosGTSIfIndex"), (0, "A3COM-HUAWEI-QOS-MIB", "qosGTSType"), (0, "A3COM-HUAWEI-QOS-MIB", "qosGTSACLNum"))
if mibBuilder.loadTexts: qosGTSEntry.setStatus('current')
qosGTSIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 1), Integer32())
if mibBuilder.loadTexts: qosGTSIfIndex.setStatus('current')
qosGTSIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSIfName.setStatus('current')
qosGTSType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acl", 1), ("all", 2))))
if mibBuilder.loadTexts: qosGTSType.setStatus('current')
qosGTSACLNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSACLNum.setStatus('current')
qosGTSCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSCIR.setStatus('current')
qosGTSBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSBurstSize.setStatus('current')
qosGTSExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSExcessBurstSize.setStatus('current')
qosGTSMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSMaxQueLen.setStatus('current')
qosGTSCurQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSCurQueLen.setStatus('current')
qosGTSPassPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSPassPkt.setStatus('current')
qosGTSPassByte = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSPassByte.setStatus('current')
qosGTSDelayPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDelayPkt.setStatus('current')
qosGTSDelayByte = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDelayByte.setStatus('current')
qosGTSDiscardPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDiscardPkt.setStatus('current')
qosGTSDiscardByte = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDiscardByte.setStatus('current')
qosUndoGTS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 18, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosGTS", 0), ("qosNoGTS", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoGTS.setStatus('current')
qosLRTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19), )
if mibBuilder.loadTexts: qosLRTable.setStatus('current')
qosLREntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosLRIfIndex"))
if mibBuilder.loadTexts: qosLREntry.setStatus('current')
qosLRIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 1), Integer32())
if mibBuilder.loadTexts: qosLRIfIndex.setStatus('current')
qosLRIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRIfName.setStatus('current')
qosLRCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosLRCIR.setStatus('current')
qosLRBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosLRBurstSize.setStatus('current')
qosLRExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosLRExcessBurstSize.setStatus('current')
qosLRPassPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRPassPkt.setStatus('current')
qosLRPassByte = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRPassByte.setStatus('current')
qosLRDelayPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRDelayPkt.setStatus('current')
qosLRDelayByte = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRDelayByte.setStatus('current')
qosUndoLR = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 19, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosLR", 0), ("qosNoLR", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoLR.setStatus('current')
qosIfBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20), )
if mibBuilder.loadTexts: qosIfBandwidthTable.setStatus('current')
qosIfBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosIfBandwidthIfIndex"))
if mibBuilder.loadTexts: qosIfBandwidthEntry.setStatus('current')
qosIfBandwidthIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20, 1, 1), Integer32())
if mibBuilder.loadTexts: qosIfBandwidthIfIndex.setStatus('current')
qosIFBandwidthMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIFBandwidthMaxBW.setStatus('current')
qosIFBandwidthMaxReservedBWPct = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIFBandwidthMaxReservedBWPct.setStatus('current')
qosIFBandwidthMaxReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosIFBandwidthMaxReservedBW.setStatus('current')
qosIFBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosIFBandwidthAvailable.setStatus('current')
qosIFBandwidthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 20, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIFBandwidthRowStatus.setStatus('current')
qosRTPIfApplyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21), )
if mibBuilder.loadTexts: qosRTPIfApplyTable.setStatus('current')
qosRTPIfApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosRTPIfApplyIfIndex"))
if mibBuilder.loadTexts: qosRTPIfApplyEntry.setStatus('current')
qosRTPIfApplyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21, 1, 1), Integer32())
if mibBuilder.loadTexts: qosRTPIfApplyIfIndex.setStatus('current')
qosRTPIfApplyStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyStartPort.setStatus('current')
qosRTPIfApplyEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyEndPort.setStatus('current')
qosRTPIfApplyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyBandWidth.setStatus('current')
qosRTPIfApplyCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyCbs.setStatus('current')
qosRTPIfApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 21, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyRowStatus.setStatus('current')
qosRTPIfQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 22), )
if mibBuilder.loadTexts: qosRTPIfQueueRunInfoTable.setStatus('current')
qosRTPIfQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 22, 1), ).setIndexNames((0, "A3COM-HUAWEI-QOS-MIB", "qosRTPIfApplyIfIndex"))
if mibBuilder.loadTexts: qosRTPIfQueueRunInfoEntry.setStatus('current')
qosRTPIfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 22, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueSize.setStatus('current')
qosRTPIfQueueMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 22, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueMaxSize.setStatus('current')
qosRTPIfQueueOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 22, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueOutputs.setStatus('current')
qosRTPIfQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 2, 22, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueDiscards.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-QOS-MIB", qosCARExceedPkt=qosCARExceedPkt, qosUndoPqlProtocol=qosUndoPqlProtocol, qosFIFOEntry=qosFIFOEntry, qosUndoCarl=qosUndoCarl, qosCARCIR=qosCARCIR, qosPqlProtocolEntry=qosPqlProtocolEntry, qosWREDIfName=qosWREDIfName, qosCarlEntry=qosCarlEntry, qosCqlIfQueueNum=qosCqlIfQueueNum, qosWFQTable=qosWFQTable, qosRTPIfApplyRowStatus=qosRTPIfApplyRowStatus, qosCQIfIndex=qosCQIfIndex, qosUndoCqlProtocol=qosUndoCqlProtocol, qosUndoCqlIf=qosUndoCqlIf, qosCQTable=qosCQTable, qosLRDelayPkt=qosLRDelayPkt, qosUndoPqlQueLen=qosUndoPqlQueLen, qosGTSTable=qosGTSTable, qosGTSEntry=qosGTSEntry, qosWREDPreIfName=qosWREDPreIfName, qosWREDPreTailDropNum=qosWREDPreTailDropNum, qosCarlListNum=qosCarlListNum, qosCqlProQueKey=qosCqlProQueKey, qosCqlQueParaQueNum=qosCqlQueParaQueNum, qosPqlIfTable=qosPqlIfTable, qosCQRunInfoMaxQueLen=qosCQRunInfoMaxQueLen, qosRTPIfApplyEntry=qosRTPIfApplyEntry, qosPqlProQueKeyValue=qosPqlProQueKeyValue, qosCQRunInfoEntry=qosCQRunInfoEntry, qosRTPIfQueueRunInfoEntry=qosRTPIfQueueRunInfoEntry, qosRTPIfQueueSize=qosRTPIfQueueSize, qosWREDPreHighLimit=qosWREDPreHighLimit, qosLRCIR=qosLRCIR, qosPQMiddlePkt=qosPQMiddlePkt, qosLRPassPkt=qosLRPassPkt, qosPqlIfIndex=qosPqlIfIndex, qosUndoLR=qosUndoLR, qosCqlIfEntry=qosCqlIfEntry, qosCQRunInfoIfName=qosCQRunInfoIfName, qosWFQEntry=qosWFQEntry, qosGTSCurQueLen=qosGTSCurQueLen, qosIfBandwidthEntry=qosIfBandwidthEntry, qosRTPIfApplyStartPort=qosRTPIfApplyStartPort, qosCARExceedAction=qosCARExceedAction, qosWFQTotalDiscard=qosWFQTotalDiscard, qosCqlDefaultTable=qosCqlDefaultTable, qosIFBandwidthMaxReservedBW=qosIFBandwidthMaxReservedBW, qosRTPIfApplyTable=qosRTPIfApplyTable, qosPqlIfQueueType=qosPqlIfQueueType, qosWREDEnable=qosWREDEnable, qosGTSBurstSize=qosGTSBurstSize, qosLRPassByte=qosLRPassByte, qosCARListNum=qosCARListNum, qosWFQTotalQueNum=qosWFQTotalQueNum, qosCARConformByte=qosCARConformByte, qosPqlQueLenValue=qosPqlQueLenValue, qosCARExceedNewPrec=qosCARExceedNewPrec, qosUndoPQ=qosUndoPQ, qosGTSACLNum=qosGTSACLNum, qosGTSDiscardByte=qosGTSDiscardByte, qosPQNormalMaxQueLen=qosPQNormalMaxQueLen, qosCarlTable=qosCarlTable, qosGTSDiscardPkt=qosGTSDiscardPkt, qosWFQMaxActiveQueNum=qosWFQMaxActiveQueNum, qosGTSExcessBurstSize=qosGTSExcessBurstSize, qosLRBurstSize=qosLRBurstSize, qosPQMiddleMaxQueLen=qosPQMiddleMaxQueLen, qosCqlProListNum=qosCqlProListNum, qosCqlQueParaMaxQueLen=qosCqlQueParaMaxQueLen, qosRTPIfApplyEndPort=qosRTPIfApplyEndPort, qosPQNormalDiscard=qosPQNormalDiscard, qosFIFOIfIndex=qosFIFOIfIndex, qosCAREntry=qosCAREntry, qosLRDelayByte=qosLRDelayByte, qosWFQQueueType=qosWFQQueueType, qosLRIfIndex=qosLRIfIndex, qosUndoGTS=qosUndoGTS, qosIFBandwidthRowStatus=qosIFBandwidthRowStatus, qosFIFOTable=qosFIFOTable, qosPqlProName=qosPqlProName, qosCarlParaValue=qosCarlParaValue, qosCqlProQueNum=qosCqlProQueNum, qosCqlQueParaListNum=qosCqlQueParaListNum, qosWREDPrecedence=qosWREDPrecedence, qosIFBandwidthAvailable=qosIFBandwidthAvailable, qosPQMiddleDiscard=qosPQMiddleDiscard, qosIFBandwidthMaxReservedBWPct=qosIFBandwidthMaxReservedBWPct, qosFIFODiscardPkt=qosFIFODiscardPkt, hwIfQoSMib=hwIfQoSMib, qosIfBandwidthTable=qosIfBandwidthTable, qosPqlProQueKey=qosPqlProQueKey, qosRTPIfQueueRunInfoTable=qosRTPIfQueueRunInfoTable, qosGTSCIR=qosGTSCIR, qosPqlIfName=qosPqlIfName, qosRTPIfApplyCbs=qosRTPIfApplyCbs, qosWREDPreLowLimit=qosWREDPreLowLimit, qosUndoCQ=qosUndoCQ, qosCQRunInfoQueDiscard=qosCQRunInfoQueDiscard, qosCqlQueParaTable=qosCqlQueParaTable, qosPQBottomPkt=qosPQBottomPkt, qosCQRunInfoIfIndex=qosCQRunInfoIfIndex, qosCARPktDirection=qosCARPktDirection, qosWFQCurQueLen=qosWFQCurQueLen, qosGTSIfName=qosGTSIfName, qosUndoFIFO=qosUndoFIFO, qosPqlQueueLenEntry=qosPqlQueueLenEntry, qosPqlIfEntry=qosPqlIfEntry, qosPqlDefaultListNum=qosPqlDefaultListNum, qosPqlProQueType=qosPqlProQueType, qosPQEntry=qosPQEntry, qosCqlProQueKeyValue=qosCqlProQueKeyValue, qosPqlDefaultTable=qosPqlDefaultTable, qosLRTable=qosLRTable, qosWREDTable=qosWREDTable, qosWREDEntry=qosWREDEntry, qosGTSPassByte=qosGTSPassByte, qosWREDPreEntry=qosWREDPreEntry, qosCqlIfName=qosCqlIfName, qosCARConformPkt=qosCARConformPkt, qosWREDPreDiscardProbability=qosWREDPreDiscardProbability, qosIfBandwidthIfIndex=qosIfBandwidthIfIndex, qosCqlQueParaEntry=qosCqlQueParaEntry, qosIFBandwidthMaxBW=qosIFBandwidthMaxBW, qosRTPIfQueueDiscards=qosRTPIfQueueDiscards, qosLRExcessBurstSize=qosLRExcessBurstSize, qosFIFOCurQueueLen=qosFIFOCurQueueLen, qosWREDIfIndex=qosWREDIfIndex, qosUndoCqlDefault=qosUndoCqlDefault, qosPQTopDiscard=qosPQTopDiscard, qosCqlProtocolTable=qosCqlProtocolTable, qosCARType=qosCARType, qosCqlIfListNum=qosCqlIfListNum, qosWFQMaxQueLen=qosWFQMaxQueLen, qosPqlDefaultQueueType=qosPqlDefaultQueueType, qosUndoCAR=qosUndoCAR, qosUndoWREDPre=qosUndoWREDPre, qosPQTopMaxQueLen=qosPQTopMaxQueLen, qosPQListNum=qosPQListNum, qosPqlProListNum=qosPqlProListNum, qosWREDPreIfIndex=qosWREDPreIfIndex, qosCARTable=qosCARTable, qosGTSPassPkt=qosGTSPassPkt, qosGTSIfIndex=qosGTSIfIndex, qosCqlIfIndex=qosCqlIfIndex, qosLRIfName=qosLRIfName, qosCqlIfTable=qosCqlIfTable, qosCqlQueParaServing=qosCqlQueParaServing, qosPqlProtocolTable=qosPqlProtocolTable, qosPQNormalPkt=qosPQNormalPkt, qosFIFOIfName=qosFIFOIfName, qosPqlQueLenListNum=qosPqlQueLenListNum, qosCqlListNum=qosCqlListNum, qosPqlQueueLenTable=qosPqlQueueLenTable, qosCarlParaType=qosCarlParaType, qosUndoCqlQueParaServing=qosUndoCqlQueParaServing, qosPQIfIndex=qosPQIfIndex, qosWFQIfName=qosWFQIfName, qosUndoWREDWeightConstant=qosUndoWREDWeightConstant, qosCARIfName=qosCARIfName, qosRTPIfQueueOutputs=qosRTPIfQueueOutputs, qosCQListNum=qosCQListNum, qosCqlProtocolEntry=qosCqlProtocolEntry, qosCARConformAction=qosCARConformAction, qosGTSType=qosGTSType, qosCQIfName=qosCQIfName, qosCQRunInfoTable=qosCQRunInfoTable, qosCQRunInfoQuePkt=qosCQRunInfoQuePkt, qosUndoCqlQueParaMaxQueLen=qosUndoCqlQueParaMaxQueLen, qosLREntry=qosLREntry, qosUndoPqlIf=qosUndoPqlIf, qosRTPIfApplyBandWidth=qosRTPIfApplyBandWidth, qosCARConformNewPrec=qosCARConformNewPrec, qosCARExceedByte=qosCARExceedByte, qosPqlIfListNum=qosPqlIfListNum, qosRTPIfApplyIfIndex=qosRTPIfApplyIfIndex, qosRTPIfQueueMaxSize=qosRTPIfQueueMaxSize, qosUndoPqlDefault=qosUndoPqlDefault, qosPQTable=qosPQTable, qosPQBottomMaxQueLen=qosPQBottomMaxQueLen, qosGTSMaxQueLen=qosGTSMaxQueLen, qosWFQIfIndex=qosWFQIfIndex, qosPqlDefaultEntry=qosPqlDefaultEntry, qosWREDWeightConstant=qosWREDWeightConstant, qosPQBottomDiscard=qosPQBottomDiscard, qosWFQActiveQueNum=qosWFQActiveQueNum, qosWREDPreTable=qosWREDPreTable, qosCARBurstSize=qosCARBurstSize, qosCQRunInfoQueNum=qosCQRunInfoQueNum, qosCARIfIndex=qosCARIfIndex, qosCARExcessBurstSize=qosCARExcessBurstSize, qosPqlQueLenQueueType=qosPqlQueLenQueueType, qosCqlQueueNum=qosCqlQueueNum, qosCQEntry=qosCQEntry, PYSNMP_MODULE_ID=hwIfQoSMib, qosWREDPreRandomDropNum=qosWREDPreRandomDropNum, qosGTSDelayPkt=qosGTSDelayPkt, qosGTSDelayByte=qosGTSDelayByte, qosFIFOMaxQueueLen=qosFIFOMaxQueueLen, qosPQIfName=qosPQIfName, qosCqlDefaultEntry=qosCqlDefaultEntry, qosPQTopPkt=qosPQTopPkt, qosUndoWFQ=qosUndoWFQ, qosCqlProName=qosCqlProName)
