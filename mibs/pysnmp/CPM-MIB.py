#
# PySNMP MIB module CPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:11:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
dialaccess, = mibBuilder.importSymbols("CPM-NORTEL-MIB", "dialaccess")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Integer32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, ObjectIdentity, NotificationType, Gauge32, ModuleIdentity, Bits, NotificationType, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "ObjectIdentity", "NotificationType", "Gauge32", "ModuleIdentity", "Bits", "NotificationType", "iso", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cpm = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 14, 3))
if mibBuilder.loadTexts: cpm.setLastUpdated('0002170000Z')
if mibBuilder.loadTexts: cpm.setOrganization('Nortel Networks')
cpm_conf = ObjectIdentity((1, 3, 6, 1, 4, 1, 562, 14, 3, 1)).setLabel("cpm-conf")
if mibBuilder.loadTexts: cpm_conf.setStatus('current')
cpm_performance = ObjectIdentity((1, 3, 6, 1, 4, 1, 562, 14, 3, 2)).setLabel("cpm-performance")
if mibBuilder.loadTexts: cpm_performance.setStatus('current')
cpm_surv = ObjectIdentity((1, 3, 6, 1, 4, 1, 562, 14, 3, 3)).setLabel("cpm-surv")
if mibBuilder.loadTexts: cpm_surv.setStatus('current')
cpm_sysconf = ObjectIdentity((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1)).setLabel("cpm-sysconf")
if mibBuilder.loadTexts: cpm_sysconf.setStatus('current')
sysAbsStartTime = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysAbsStartTime.setStatus('current')
sysMibRevision = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMibRevision.setStatus('current')
sysSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSoftwareRevision.setStatus('current')
sysConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysConfigFile.setStatus('current')
sysLogFile = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLogFile.setStatus('current')
sysLogFileMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLogFileMaxSize.setStatus('current')
sysTraceLevel = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTraceLevel.setStatus('current')
sysOperationalState = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("initializing", 0), ("discovering", 1), ("ready", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperationalState.setStatus('current')
cpmVpopOMTable = MibTable((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1), )
if mibBuilder.loadTexts: cpmVpopOMTable.setStatus('current')
cpmVpopOMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1), ).setIndexNames((0, "CPM-MIB", "cpmVpopOMVpopId"))
if mibBuilder.loadTexts: cpmVpopOMEntry.setStatus('current')
cpmVpopOMVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMVpopId.setStatus('current')
cpmVpopOMPortLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMPortLimit.setStatus('current')
cpmVpopOMOverflowPortLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMOverflowPortLimit.setStatus('current')
cpmVpopOMActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMActiveCalls.setStatus('current')
cpmVpopOMActivePortLimitCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMActivePortLimitCalls.setStatus('current')
cpmVpopOMAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMAcceptedCalls.setStatus('current')
cpmVpopOMAcceptedOverflowCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMAcceptedOverflowCalls.setStatus('current')
cpmVpopOMReleasedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMReleasedCalls.setStatus('current')
cpmVpopOMPortLimitReject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMPortLimitReject.setStatus('current')
cpmVpopOMOverflowPortLimitReject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMOverflowPortLimitReject.setStatus('current')
cpmVpopOMClidFilterReject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMClidFilterReject.setStatus('current')
cpmVpopOMProxyReject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMProxyReject.setStatus('current')
cpmVpopOMIPAddressReject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMIPAddressReject.setStatus('current')
cpmVpopOMGatewayReject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMGatewayReject.setStatus('current')
cpmVpopOMGuaranteeReject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMGuaranteeReject.setStatus('current')
cpmVpopOMSnapshotTable = MibTable((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 2), )
if mibBuilder.loadTexts: cpmVpopOMSnapshotTable.setStatus('current')
cpmVpopOMSnapshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 2, 1), ).setIndexNames((0, "CPM-MIB", "cpmVpopOMSnapshotVpopId"), (0, "CPM-MIB", "cpmVpopOMSnapshotTimeStamp"))
if mibBuilder.loadTexts: cpmVpopOMSnapshotEntry.setStatus('current')
cpmVpopOMSnapshotVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMSnapshotVpopId.setStatus('current')
cpmVpopOMSnapshotTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMSnapshotTimeStamp.setStatus('current')
cpmVpopOMSnapshotMinCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMSnapshotMinCalls.setStatus('current')
cpmVpopOMSnapshotMaxCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmVpopOMSnapshotMaxCalls.setStatus('current')
cpmAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2), )
if mibBuilder.loadTexts: cpmAlarmTable.setStatus('current')
cpmAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1), ).setIndexNames((0, "CPM-MIB", "cpmAlarmTableTrapGenNum"))
if mibBuilder.loadTexts: cpmAlarmTableEntry.setStatus('current')
cpmAlarmTableTrapGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmAlarmTableTrapGenNum.setStatus('current')
cpmAlarmTableTrapType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 6, 8, 10, 12, 14))).clone(namedValues=NamedValues(("nasNotResponding", 2), ("gatewayRemovedFromService", 4), ("gatewaysUnavailable", 6), ("mpGatewaysUnavailable", 8), ("ipAddressExhausted", 10), ("portsUnavailable", 12), ("overflowPortsInUse", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmAlarmTableTrapType.setStatus('current')
cpmAlarmTableTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("warning", 1), ("critical", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmAlarmTableTrapSeverity.setStatus('current')
cpmAlarmTableTrapTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmAlarmTableTrapTimeTicks.setStatus('current')
cpmAlarmTableTrapArg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmAlarmTableTrapArg1.setStatus('current')
cpmAlarmTableTrapArg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmAlarmTableTrapArg2.setStatus('current')
cpmAlarmTableTrapArg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpmAlarmTableTrapArg3.setStatus('current')
cpm_trapVariables = ObjectIdentity((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 1)).setLabel("cpm-trapVariables")
if mibBuilder.loadTexts: cpm_trapVariables.setStatus('current')
trap_severity = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 0), ("warning", 1), ("minor", 2), ("major", 3), ("critical", 4)))).setLabel("trap-severity")
if mibBuilder.loadTexts: trap_severity.setStatus('current')
trap_nasIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 1, 2), IpAddress()).setLabel("trap-nasIPAddress")
if mibBuilder.loadTexts: trap_nasIPAddress.setStatus('current')
trap_gatewayIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 1, 3), IpAddress()).setLabel("trap-gatewayIPAddress")
if mibBuilder.loadTexts: trap_gatewayIPAddress.setStatus('current')
trap_vpopId = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 1, 4), Integer32()).setLabel("trap-vpopId")
if mibBuilder.loadTexts: trap_vpopId.setStatus('current')
trap_gennum = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 1, 5), Integer32()).setLabel("trap-gennum")
if mibBuilder.loadTexts: trap_gennum.setStatus('current')
trap_AAAServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 562, 14, 3, 3, 1, 6), IpAddress()).setLabel("trap-AAAServerIPAddress")
if mibBuilder.loadTexts: trap_AAAServerIPAddress.setStatus('current')
cpmStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,1)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "sysOperationalState"))
nasNotRespondingTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,2)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_nasIPAddress"))
nasNowRespondingTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,3)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_nasIPAddress"))
gatewayRemovedFromService = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,4)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_gatewayIPAddress"))
gatewayReturnedToService = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,5)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_gatewayIPAddress"))
gatewaysUnavailable = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,6)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
gatewaysAvailable = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,7)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
mpGatewaysUnavailable = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,8)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
mpGatewaysAvailable = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,9)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
ipAddressesExhausted = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,10)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"), ("CPM-MIB", "trap_nasIPAddress"))
ipAddressesAvailable = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,11)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"), ("CPM-MIB", "trap_nasIPAddress"))
portsUnavailable = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,12)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
portsAvailable = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,13)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
overflowPortsInUse = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,14)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
overflowPortsNotInUse = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,15)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_vpopId"))
disconnectRequestDiscarded = NotificationType((1, 3, 6, 1, 4, 1, 562, 14, 3) + (0,16)).setObjects(("CPM-MIB", "trap_gennum"), ("CPM-MIB", "trap_severity"), ("CPM-MIB", "trap_AAAServerIPAddress"))
mibBuilder.exportSymbols("CPM-MIB", cpm_surv=cpm_surv, trap_AAAServerIPAddress=trap_AAAServerIPAddress, cpmVpopOMActivePortLimitCalls=cpmVpopOMActivePortLimitCalls, sysConfigFile=sysConfigFile, cpmAlarmTableTrapArg2=cpmAlarmTableTrapArg2, sysOperationalState=sysOperationalState, cpmVpopOMAcceptedOverflowCalls=cpmVpopOMAcceptedOverflowCalls, portsAvailable=portsAvailable, cpmVpopOMGuaranteeReject=cpmVpopOMGuaranteeReject, sysLogFile=sysLogFile, trap_severity=trap_severity, cpmVpopOMVpopId=cpmVpopOMVpopId, cpmVpopOMTable=cpmVpopOMTable, cpmVpopOMClidFilterReject=cpmVpopOMClidFilterReject, gatewayReturnedToService=gatewayReturnedToService, cpm_trapVariables=cpm_trapVariables, cpmVpopOMProxyReject=cpmVpopOMProxyReject, gatewayRemovedFromService=gatewayRemovedFromService, portsUnavailable=portsUnavailable, trap_gatewayIPAddress=trap_gatewayIPAddress, sysMibRevision=sysMibRevision, cpmVpopOMEntry=cpmVpopOMEntry, cpm_sysconf=cpm_sysconf, mpGatewaysUnavailable=mpGatewaysUnavailable, cpmVpopOMSnapshotMaxCalls=cpmVpopOMSnapshotMaxCalls, cpmAlarmTable=cpmAlarmTable, cpmVpopOMSnapshotEntry=cpmVpopOMSnapshotEntry, overflowPortsNotInUse=overflowPortsNotInUse, cpm_conf=cpm_conf, trap_nasIPAddress=trap_nasIPAddress, overflowPortsInUse=overflowPortsInUse, cpmAlarmTableTrapSeverity=cpmAlarmTableTrapSeverity, sysTraceLevel=sysTraceLevel, cpmVpopOMReleasedCalls=cpmVpopOMReleasedCalls, cpmAlarmTableTrapArg3=cpmAlarmTableTrapArg3, cpmVpopOMPortLimitReject=cpmVpopOMPortLimitReject, cpmStateChangeTrap=cpmStateChangeTrap, disconnectRequestDiscarded=disconnectRequestDiscarded, nasNowRespondingTrap=nasNowRespondingTrap, cpm=cpm, sysSoftwareRevision=sysSoftwareRevision, trap_vpopId=trap_vpopId, cpm_performance=cpm_performance, PYSNMP_MODULE_ID=cpm, cpmVpopOMSnapshotMinCalls=cpmVpopOMSnapshotMinCalls, cpmAlarmTableTrapGenNum=cpmAlarmTableTrapGenNum, ipAddressesExhausted=ipAddressesExhausted, cpmVpopOMGatewayReject=cpmVpopOMGatewayReject, cpmVpopOMAcceptedCalls=cpmVpopOMAcceptedCalls, cpmVpopOMPortLimit=cpmVpopOMPortLimit, cpmVpopOMOverflowPortLimit=cpmVpopOMOverflowPortLimit, cpmVpopOMSnapshotTable=cpmVpopOMSnapshotTable, cpmAlarmTableTrapTimeTicks=cpmAlarmTableTrapTimeTicks, cpmAlarmTableTrapArg1=cpmAlarmTableTrapArg1, trap_gennum=trap_gennum, cpmVpopOMActiveCalls=cpmVpopOMActiveCalls, sysLogFileMaxSize=sysLogFileMaxSize, mpGatewaysAvailable=mpGatewaysAvailable, nasNotRespondingTrap=nasNotRespondingTrap, sysAbsStartTime=sysAbsStartTime, cpmVpopOMIPAddressReject=cpmVpopOMIPAddressReject, cpmVpopOMSnapshotVpopId=cpmVpopOMSnapshotVpopId, cpmAlarmTableEntry=cpmAlarmTableEntry, gatewaysUnavailable=gatewaysUnavailable, cpmVpopOMOverflowPortLimitReject=cpmVpopOMOverflowPortLimitReject, cpmVpopOMSnapshotTimeStamp=cpmVpopOMSnapshotTimeStamp, ipAddressesAvailable=ipAddressesAvailable, cpmAlarmTableTrapType=cpmAlarmTableTrapType, gatewaysAvailable=gatewaysAvailable)
