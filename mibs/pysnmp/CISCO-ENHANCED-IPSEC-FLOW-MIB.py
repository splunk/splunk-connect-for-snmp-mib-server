#
# PySNMP MIB module CISCO-ENHANCED-IPSEC-FLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ENHANCED-IPSEC-FLOW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:39:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
CIPsecPhase2TunnelIndex, CIPsecEncapMode, CIPsecPhase1TunnelIndexOrZero, CIPsecDiffHellmanGrp, CIPsecPhase2SaDirection, CIPsecPmtu, CIPsecControlProtocol, CIPsecAuthAlgorithm, CIPsecEncryptAlgorithm, CIPsecCompAlgorithm, CIPsecSpi, CIPsecProtocol, CIPsecEncryptionKeySize, CIPsecEndPtType, CIPsecNATTraversalMode, CIPsecTunnelStatus = mibBuilder.importSymbols("CISCO-IPSEC-TC", "CIPsecPhase2TunnelIndex", "CIPsecEncapMode", "CIPsecPhase1TunnelIndexOrZero", "CIPsecDiffHellmanGrp", "CIPsecPhase2SaDirection", "CIPsecPmtu", "CIPsecControlProtocol", "CIPsecAuthAlgorithm", "CIPsecEncryptAlgorithm", "CIPsecCompAlgorithm", "CIPsecSpi", "CIPsecProtocol", "CIPsecEncryptionKeySize", "CIPsecEndPtType", "CIPsecNATTraversalMode", "CIPsecTunnelStatus")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPort, CiscoIpProtocol = mibBuilder.importSymbols("CISCO-TC", "CiscoPort", "CiscoIpProtocol")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, ObjectIdentity, NotificationType, TimeTicks, IpAddress, Counter32, MibIdentifier, iso, Counter64, Integer32, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "NotificationType", "TimeTicks", "IpAddress", "Counter32", "MibIdentifier", "iso", "Counter64", "Integer32", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
DateAndTime, TimeStamp, TextualConvention, TimeInterval, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TimeStamp", "TextualConvention", "TimeInterval", "TruthValue", "DisplayString")
ciscoEnhancedIpsecFlowMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 432))
ciscoEnhancedIpsecFlowMIB.setRevisions(('2013-06-28 00:00', '2011-07-19 00:00', '2005-01-12 00:00', '2004-08-31 00:00',))
if mibBuilder.loadTexts: ciscoEnhancedIpsecFlowMIB.setLastUpdated('201306280000Z')
if mibBuilder.loadTexts: ciscoEnhancedIpsecFlowMIB.setOrganization('Cisco Systems, Inc.')
ciscoEnhancedIpsecFlowMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 0))
ciscoEnhancedIpsecFlowMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1))
ciscoEnhancedIpsecFlowMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 2))
ceipSecPhaseTwo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1))
ceipSecHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2))
ceipSecFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3))
ceipSecNotificationCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5))
ceipSecCertNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 6))
ceipSecGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1))
ceipSecGlobalActiveTunnels = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 1), Gauge32()).setUnits('Tunnels').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalActiveTunnels.setStatus('current')
ceipSecGlobalPreviousTunnels = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 2), Counter64()).setUnits('Tunnels').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalPreviousTunnels.setStatus('current')
ceipSecGlobalInOctets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 3), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInOctets.setStatus('current')
ceipSecGlobalInDecompOctets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 4), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInDecompOctets.setStatus('current')
ceipSecGlobalInPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInPkts.setStatus('current')
ceipSecGlobalInDrops = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInDrops.setStatus('current')
ceipSecGlobalInReplayDrops = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInReplayDrops.setStatus('current')
ceipSecGlobalInAuths = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 8), Counter64()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInAuths.setStatus('current')
ceipSecGlobalInAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 9), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInAuthFails.setStatus('current')
ceipSecGlobalInDecrypts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInDecrypts.setStatus('current')
ceipSecGlobalInDecryptFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 11), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalInDecryptFails.setStatus('current')
ceipSecGlobalOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutOctets.setStatus('current')
ceipSecGlobalOutUncompOctets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 13), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutUncompOctets.setStatus('current')
ceipSecGlobalOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 14), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutPkts.setStatus('current')
ceipSecGlobalOutDrops = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 15), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutDrops.setStatus('current')
ceipSecGlobalOutAuths = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 16), Counter64()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutAuths.setStatus('current')
ceipSecGlobalOutAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 17), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutAuthFails.setStatus('current')
ceipSecGlobalOutEncrypts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 18), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutEncrypts.setStatus('current')
ceipSecCertSubjectName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 6, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecCertSubjectName.setStatus('current')
ceipSecCertSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 6, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecCertSerialNumber.setStatus('current')
ceipSecCertIssuerName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 6, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecCertIssuerName.setStatus('current')
ceipSecCertExpiryTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 6, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecCertExpiryTime.setStatus('current')
ceipSecCertRenewalStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("renewalNotNeeded", 1), ("renewalRequestNeeded", 2), ("renewalRequested", 3), ("renewalSuccess", 4), ("renewalFailedUpdate", 5), ("renewalFailedExpired", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecCertRenewalStatus.setStatus('current')
ceipSecCertExpiryStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("certOK", 1), ("certGoingExpired", 2), ("certExpired", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecCertExpiryStatus.setStatus('current')
ceipSecGlobalOutEncryptFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 19), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutEncryptFails.setStatus('current')
ceipSecGlobalProtocolUseFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 20), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalProtocolUseFails.setStatus('current')
ceipSecGlobalNoSaFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 21), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalNoSaFails.setStatus('current')
ceipSecGlobalSysCapFails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 22), Counter64()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalSysCapFails.setStatus('current')
ceipSecGlobalOutCompressedPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 23), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutCompressedPkts.setStatus('current')
ceipSecGlobalOutCompSkippedPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 24), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutCompSkippedPkts.setStatus('current')
ceipSecGlobalOutCompFailPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 25), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutCompFailPkts.setStatus('current')
ceipSecGlobalOutCompTooSmallPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 26), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalOutCompTooSmallPkts.setStatus('current')
ceipSecGlobalThroughputUtilizatioinTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 27), Unsigned32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalThroughputUtilizatioinTimeInterval.setStatus('current')
ceipSecGlobalThroughputLastUpdatedTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 28), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalThroughputLastUpdatedTime.setStatus('current')
ceipSecGlobalLastAveragePacketSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 29), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalLastAveragePacketSize.setStatus('current')
ceipSecGlobalLastThroughputInMbps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 30), Unsigned32()).setUnits('Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalLastThroughputInMbps.setStatus('current')
ceipSecGlobalLastThroughputInKpps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 31), Unsigned32()).setUnits('Kpps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalLastThroughputInKpps.setStatus('current')
ceipSecGlobalLastThroughputUtilization = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 32), Unsigned32()).setUnits('Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalLastThroughputUtilization.setStatus('current')
ceipSecGlobalPeakThroughputUtilization = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 33), Unsigned32()).setUnits('Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalPeakThroughputUtilization.setStatus('current')
ceipSecGlobalPeakThroughputDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 34), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalPeakThroughputDateAndTime.setStatus('current')
ceipSecGlobalPeakThroughputInMbps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 35), Unsigned32()).setUnits('Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalPeakThroughputInMbps.setStatus('current')
ceipSecGlobalPeakAvgPacketSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 1, 36), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecGlobalPeakAvgPacketSize.setStatus('current')
ceipSecTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2), )
if mibBuilder.loadTexts: ceipSecTunnelTable.setStatus('current')
ceipSecTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunIndex"))
if mibBuilder.loadTexts: ceipSecTunnelEntry.setStatus('current')
ceipSecTunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 1), CIPsecPhase2TunnelIndex())
if mibBuilder.loadTexts: ceipSecTunIndex.setStatus('current')
ceipSecTunLocalAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunLocalAddressType.setStatus('current')
ceipSecTunLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunLocalAddress.setStatus('current')
ceipSecTunRemoteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunRemoteAddressType.setStatus('current')
ceipSecTunRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunRemoteAddress.setStatus('current')
ceipSecTunControlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 6), CIPsecControlProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunControlProtocol.setStatus('current')
ceipSecTunControlTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 7), CIPsecPhase1TunnelIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunControlTunnelIndex.setStatus('current')
ceipSecTunControlTunnelAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunControlTunnelAlive.setStatus('current')
ceipSecTunEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 9), CIPsecEncapMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunEncapMode.setStatus('current')
ceipSecTunNATTraversalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 10), CIPsecNATTraversalMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunNATTraversalMode.setStatus('current')
ceipSecTunLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunLifeSize.setStatus('current')
ceipSecTunLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 12), Unsigned32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunLifeTime.setStatus('current')
ceipSecTunActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 13), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunActiveTime.setStatus('current')
ceipSecTunSaLifeSizeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 14), Unsigned32()).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaLifeSizeThreshold.setStatus('current')
ceipSecTunSaLifeTimeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 15), Unsigned32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaLifeTimeThreshold.setStatus('current')
ceipSecTunTotalRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 16), Counter32()).setUnits('QM Exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunTotalRefreshes.setStatus('current')
ceipSecTunExpiredSaInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 17), Counter32()).setUnits('SAs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunExpiredSaInstances.setStatus('current')
ceipSecTunCurrentSaInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunCurrentSaInstances.setStatus('current')
ceipSecTunInSaDHGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 19), CIPsecDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInSaDHGrp.setStatus('current')
ceipSecTunInSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 20), CIPsecEncryptAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInSaEncryptAlgo.setStatus('current')
ceipSecTunInSaEncryptKeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 21), CIPsecEncryptionKeySize()).setUnits('Bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInSaEncryptKeySize.setStatus('current')
ceipSecTunInSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 22), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInSaAhAuthAlgo.setStatus('current')
ceipSecTunInSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 23), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInSaEspAuthAlgo.setStatus('current')
ceipSecTunInSaDecompAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 24), CIPsecCompAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInSaDecompAlgo.setStatus('current')
ceipSecTunOutSaDHGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 25), CIPsecDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutSaDHGrp.setStatus('current')
ceipSecTunOutSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 26), CIPsecEncryptAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutSaEncryptAlgo.setStatus('current')
ceipSecTunOutSaEncryptKeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 27), CIPsecEncryptionKeySize()).setUnits('Bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutSaEncryptKeySize.setStatus('current')
ceipSecTunOutSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 28), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutSaAhAuthAlgo.setStatus('current')
ceipSecTunOutSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 29), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutSaEspAuthAlgo.setStatus('current')
ceipSecTunOutSaCompAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 30), CIPsecCompAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutSaCompAlgo.setStatus('current')
ceipSecTunPmtu = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 31), CIPsecPmtu()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunPmtu.setStatus('current')
ceipSecTunInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 32), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInOctets.setStatus('current')
ceipSecTunInDecompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInDecompOctets.setStatus('current')
ceipSecTunInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 34), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInPkts.setStatus('current')
ceipSecTunInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 35), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInDropPkts.setStatus('current')
ceipSecTunInReplayDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 36), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInReplayDropPkts.setStatus('current')
ceipSecTunInAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 37), Counter32()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInAuths.setStatus('current')
ceipSecTunInAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 38), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInAuthFails.setStatus('current')
ceipSecTunInDecrypts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 39), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInDecrypts.setStatus('current')
ceipSecTunInDecryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 40), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunInDecryptFails.setStatus('current')
ceipSecTunOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutOctets.setStatus('current')
ceipSecTunOutUncompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutUncompOctets.setStatus('current')
ceipSecTunOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 43), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutPkts.setStatus('current')
ceipSecTunOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 44), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutDropPkts.setStatus('current')
ceipSecTunOutAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 45), Counter32()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutAuths.setStatus('current')
ceipSecTunOutAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 46), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutAuthFails.setStatus('current')
ceipSecTunOutEncrypts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 47), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutEncrypts.setStatus('current')
ceipSecTunOutEncryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 48), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutEncryptFails.setStatus('current')
ceipSecTunOutCompressedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 49), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutCompressedPkts.setStatus('current')
ceipSecTunOutCompSkippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 50), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutCompSkippedPkts.setStatus('current')
ceipSecTunOutCompFailPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 51), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutCompFailPkts.setStatus('current')
ceipSecTunOutCompTooSmallPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 52), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunOutCompTooSmallPkts.setStatus('current')
ceipSecIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 53), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecIfIndex.setStatus('current')
ceipSecTunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 2, 1, 54), CIPsecTunnelStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecTunStatus.setStatus('current')
ceipSecEndPtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3), )
if mibBuilder.loadTexts: ceipSecEndPtTable.setStatus('current')
ceipSecEndPtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunIndex"), (0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtIndex"))
if mibBuilder.loadTexts: ceipSecEndPtEntry.setStatus('current')
ceipSecEndPtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ceipSecEndPtIndex.setStatus('current')
ceipSecEndPtLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalName.setStatus('current')
ceipSecEndPtLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 3), CIPsecEndPtType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalType.setStatus('current')
ceipSecEndPtLocalAddrType1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalAddrType1.setStatus('current')
ceipSecEndPtLocalAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalAddr1.setStatus('current')
ceipSecEndPtLocalAddrType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalAddrType2.setStatus('current')
ceipSecEndPtLocalAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalAddr2.setStatus('current')
ceipSecEndPtLocalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 8), CiscoIpProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalProtocol.setStatus('current')
ceipSecEndPtLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 9), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtLocalPort.setStatus('current')
ceipSecEndPtRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemoteName.setStatus('current')
ceipSecEndPtRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 11), CIPsecEndPtType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemoteType.setStatus('current')
ceipSecEndPtRemoteAddrType1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemoteAddrType1.setStatus('current')
ceipSecEndPtRemoteAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemoteAddr1.setStatus('current')
ceipSecEndPtRemoteAddrType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemoteAddrType2.setStatus('current')
ceipSecEndPtRemoteAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemoteAddr2.setStatus('current')
ceipSecEndPtRemoteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 16), CiscoIpProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemoteProtocol.setStatus('current')
ceipSecEndPtRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 3, 1, 17), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtRemotePort.setStatus('current')
ceipSecSaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 4), )
if mibBuilder.loadTexts: ceipSecSaTable.setStatus('current')
ceipSecSaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunIndex"), (0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecSaProtocol"), (0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecSaIndex"))
if mibBuilder.loadTexts: ceipSecSaEntry.setStatus('current')
ceipSecSaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 4, 1, 1), CIPsecProtocol())
if mibBuilder.loadTexts: ceipSecSaProtocol.setStatus('current')
ceipSecSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ceipSecSaIndex.setStatus('current')
ceipSecSaDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 4, 1, 3), CIPsecPhase2SaDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecSaDirection.setStatus('current')
ceipSecSaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 4, 1, 4), CIPsecSpi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecSaValue.setStatus('current')
ceipSecSaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("expiring", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecSaStatus.setStatus('current')
ceipSecTunnelSaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5), )
if mibBuilder.loadTexts: ceipSecTunnelSaTable.setStatus('current')
ceipSecTunnelSaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunIndex"), (0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaProtocol"), (0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaIndex"), (0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaDirection"))
if mibBuilder.loadTexts: ceipSecTunnelSaEntry.setStatus('current')
ceipSecTunSaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 1), CIPsecProtocol())
if mibBuilder.loadTexts: ceipSecTunSaProtocol.setStatus('current')
ceipSecTunSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ceipSecTunSaIndex.setStatus('current')
ceipSecTunSaDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 3), CIPsecPhase2SaDirection())
if mibBuilder.loadTexts: ceipSecTunSaDirection.setStatus('current')
ceipSecTunSaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 4), CIPsecSpi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaValue.setStatus('current')
ceipSecTunSaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaIfIndex.setStatus('current')
ceipSecTunSaInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInOctets.setStatus('current')
ceipSecTunSaInDecompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInDecompOctets.setStatus('current')
ceipSecTunSaInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInPkts.setStatus('current')
ceipSecTunSaInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInDropPkts.setStatus('current')
ceipSecTunSaInReplayDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInReplayDropPkts.setStatus('current')
ceipSecTunSaInAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInAuths.setStatus('current')
ceipSecTunSaInAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInAuthFails.setStatus('current')
ceipSecTunSaInDecrypts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInDecrypts.setStatus('current')
ceipSecTunSaInDecryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaInDecryptFails.setStatus('current')
ceipSecTunSaOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutOctets.setStatus('current')
ceipSecTunSaOutUncompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutUncompOctets.setStatus('current')
ceipSecTunSaOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutPkts.setStatus('current')
ceipSecTunSaOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutDropPkts.setStatus('current')
ceipSecTunSaOutAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutAuths.setStatus('current')
ceipSecTunSaOutAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutAuthFails.setStatus('current')
ceipSecTunSaOutEncrypts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutEncrypts.setStatus('current')
ceipSecTunSaOutEncryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutEncryptFails.setStatus('current')
ceipSecTunSaOutCompressedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutCompressedPkts.setStatus('current')
ceipSecTunSaOutCompSkippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutCompSkippedPkts.setStatus('current')
ceipSecTunSaOutCompFailPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutCompFailPkts.setStatus('current')
ceipSecTunSaOutCompTooSmallPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaOutCompTooSmallPkts.setStatus('current')
ceipSecTunSaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 5, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("expiring", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunSaStatus.setStatus('current')
ceipSecIfTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 6), )
if mibBuilder.loadTexts: ceipSecIfTunnelTable.setStatus('current')
ceipSecIfTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunIndex"))
if mibBuilder.loadTexts: ceipSecIfTunnelEntry.setStatus('current')
ceipSecIfTunnelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 1, 6, 1, 1), CIPsecTunnelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecIfTunnelStatus.setStatus('current')
ceipSecHistGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 1))
ceipSecHistGlobalCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 1, 1))
ceipSecHistTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecHistTableSize.setStatus('current')
ceipSecTunnelHistTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2), )
if mibBuilder.loadTexts: ceipSecTunnelHistTable.setStatus('current')
ceipSecTunnelHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistIndex"))
if mibBuilder.loadTexts: ceipSecTunnelHistEntry.setStatus('current')
ceipSecTunHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ceipSecTunHistIndex.setStatus('current')
ceipSecTunHistTermReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("operRequest", 3), ("peerDelRequest", 4), ("peerLost", 5), ("applicationInitiated", 6), ("xauthFailure", 7), ("seqNumRollOver", 8), ("checkPointReq", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistTermReason.setStatus('current')
ceipSecTunHistActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 3), CIPsecPhase2TunnelIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistActiveIndex.setStatus('current')
ceipSecTunHistLocalAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistLocalAddressType.setStatus('current')
ceipSecTunHistLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistLocalAddress.setStatus('current')
ceipSecTunHistRemoteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistRemoteAddressType.setStatus('current')
ceipSecTunHistRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistRemoteAddress.setStatus('current')
ceipSecTunHistControlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 8), CIPsecControlProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistControlProtocol.setStatus('current')
ceipSecTunHistControlTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 9), CIPsecPhase1TunnelIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistControlTunnelIndex.setStatus('current')
ceipSecTunHistEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 10), CIPsecEncapMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistEncapMode.setStatus('current')
ceipSecTunHistNATTraversalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 11), CIPsecNATTraversalMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistNATTraversalMode.setStatus('current')
ceipSecTunHistLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistLifeSize.setStatus('current')
ceipSecTunHistLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistLifeTime.setStatus('current')
ceipSecTunHistStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistStartTime.setStatus('current')
ceipSecTunHistActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 15), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistActiveTime.setStatus('current')
ceipSecTunHistTotalRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 16), Counter32()).setUnits('QM Exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistTotalRefreshes.setStatus('current')
ceipSecTunHistTotalSas = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 17), Counter32()).setUnits('SAs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistTotalSas.setStatus('current')
ceipSecTunHistInSaDHGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 18), CIPsecDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInSaDHGrp.setStatus('current')
ceipSecTunHistInSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 19), CIPsecEncryptAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInSaEncryptAlgo.setStatus('current')
ceipSecTunHistInSaEncryptKeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 20), CIPsecEncryptionKeySize()).setUnits('Bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInSaEncryptKeySize.setStatus('current')
ceipSecTunHistInSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 21), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInSaAhAuthAlgo.setStatus('current')
ceipSecTunHistInSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 22), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInSaEspAuthAlgo.setStatus('current')
ceipSecTunHistInSaDecompAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 23), CIPsecCompAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInSaDecompAlgo.setStatus('current')
ceipSecTunHistOutSaDHGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 24), CIPsecDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutSaDHGrp.setStatus('current')
ceipSecTunHistOutSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 25), CIPsecEncryptAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutSaEncryptAlgo.setStatus('current')
ceipSecTunHistOutSaEncryptKeySz = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 26), CIPsecEncryptionKeySize()).setUnits('Bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutSaEncryptKeySz.setStatus('current')
ceipSecTunHistOutSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 27), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutSaAhAuthAlgo.setStatus('current')
ceipSecTunHistOutSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 28), CIPsecAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutSaEspAuthAlgo.setStatus('current')
ceipSecTunHistOutSaCompAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 29), CIPsecCompAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutSaCompAlgo.setStatus('current')
ceipSecTunHistPmtu = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 30), CIPsecPmtu()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistPmtu.setStatus('current')
ceipSecTunHistInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInOctets.setStatus('current')
ceipSecTunHistInDecompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInDecompOctets.setStatus('current')
ceipSecTunHistInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 33), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInPkts.setStatus('current')
ceipSecTunHistInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 34), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInDropPkts.setStatus('current')
ceipSecTunHistInReplayDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 35), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInReplayDropPkts.setStatus('current')
ceipSecTunHistInAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 36), Counter32()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInAuths.setStatus('current')
ceipSecTunHistInAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 37), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInAuthFails.setStatus('current')
ceipSecTunHistInDecrypts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 38), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInDecrypts.setStatus('current')
ceipSecTunHistInDecryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 39), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistInDecryptFails.setStatus('current')
ceipSecTunHistOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutOctets.setStatus('current')
ceipSecTunHistOutUncompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 41), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutUncompOctets.setStatus('current')
ceipSecTunHistOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 42), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutPkts.setStatus('current')
ceipSecTunHistOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 43), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutDropPkts.setStatus('current')
ceipSecTunHistOutAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 44), Counter32()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutAuths.setStatus('current')
ceipSecTunHistOutAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 45), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutAuthFails.setStatus('current')
ceipSecTunHistOutEncrypts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 46), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutEncrypts.setStatus('current')
ceipSecTunHistOutEncryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 47), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutEncryptFails.setStatus('current')
ceipSecTunHistOutCompressedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 48), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutCompressedPkts.setStatus('current')
ceipSecTunHistOutCompSkippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 49), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutCompSkippedPkts.setStatus('current')
ceipSecTunHistOutCompFailPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 50), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutCompFailPkts.setStatus('current')
ceipSecTunHistOutCompSmallPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 2, 1, 51), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecTunHistOutCompSmallPkts.setStatus('current')
ceipSecEndPtHistTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3), )
if mibBuilder.loadTexts: ceipSecEndPtHistTable.setStatus('current')
ceipSecEndPtHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistIndex"))
if mibBuilder.loadTexts: ceipSecEndPtHistEntry.setStatus('current')
ceipSecEndPtHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ceipSecEndPtHistIndex.setStatus('current')
ceipSecEndPtHistTunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistTunIndex.setStatus('current')
ceipSecEndPtHistActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistActiveIndex.setStatus('current')
ceipSecEndPtHistLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalName.setStatus('current')
ceipSecEndPtHistLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 5), CIPsecEndPtType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalType.setStatus('current')
ceipSecEndPtHistLocalAddrType1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalAddrType1.setStatus('current')
ceipSecEndPtHistLocalAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalAddr1.setStatus('current')
ceipSecEndPtHistLocalAddrType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalAddrType2.setStatus('current')
ceipSecEndPtHistLocalAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalAddr2.setStatus('current')
ceipSecEndPtHistLocalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 10), CiscoIpProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalProtocol.setStatus('current')
ceipSecEndPtHistLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 11), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistLocalPort.setStatus('current')
ceipSecEndPtHistRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemoteName.setStatus('current')
ceipSecEndPtHistRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 13), CIPsecEndPtType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemoteType.setStatus('current')
ceipSecEndPtHistRemoteAddrType1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemoteAddrType1.setStatus('current')
ceipSecEndPtHistRemoteAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemoteAddr1.setStatus('current')
ceipSecEndPtHistRemoteAddrType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 16), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemoteAddrType2.setStatus('current')
ceipSecEndPtHistRemoteAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 17), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemoteAddr2.setStatus('current')
ceipSecEndPtHistRemoteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 18), CiscoIpProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemoteProtocol.setStatus('current')
ceipSecEndPtHistRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 2, 3, 1, 19), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecEndPtHistRemotePort.setStatus('current')
ceipSecFailGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 1))
ceipSecFailGlobalCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 1, 1))
ceipSecFailTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecFailTableSize.setStatus('current')
ceipSecFailTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2), )
if mibBuilder.loadTexts: ceipSecFailTable.setStatus('current')
ceipSecFailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailIndex"))
if mibBuilder.loadTexts: ceipSecFailEntry.setStatus('current')
ceipSecFailIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ceipSecFailIndex.setStatus('current')
ceipSecFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("internalError", 2), ("peerEncodingError", 3), ("proposalFailure", 4), ("protocolUseFail", 5), ("nonExistentSa", 6), ("decryptFailure", 7), ("encryptFailure", 8), ("inAuthFailure", 9), ("outAuthFailure", 10), ("compression", 11), ("sysCapExceeded", 12), ("peerDelRequest", 13), ("peerLost", 14), ("seqNumRollOver", 15), ("operRequest", 16), ("performanceUtilization", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailReason.setStatus('current')
ceipSecFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailTime.setStatus('current')
ceipSecFailTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 4), CIPsecPhase2TunnelIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailTunnelIndex.setStatus('current')
ceipSecFailSaSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 5), CIPsecSpi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailSaSpi.setStatus('current')
ceipSecFailPktSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailPktSrcAddressType.setStatus('current')
ceipSecFailPktSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailPktSrcAddress.setStatus('current')
ceipSecFailPktDstAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailPktDstAddressType.setStatus('current')
ceipSecFailPktDstAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 3, 2, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceipSecFailPktDstAddress.setStatus('current')
ceipSecNotiCntlIpSecAllNotifs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotiCntlIpSecAllNotifs.setStatus('current')
ceipSecNotifCntlIpSecTunnelStart = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotifCntlIpSecTunnelStart.setStatus('current')
ceipSecNotifCntlIpSecTunnelStop = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotifCntlIpSecTunnelStop.setStatus('current')
ceipSecNotifCntlIpSecSysFailure = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotifCntlIpSecSysFailure.setStatus('current')
ceipSecNotifCntlIpSecSetUpFail = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotifCntlIpSecSetUpFail.setStatus('current')
ceipSecNotifCntlIpSecBadSa = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotifCntlIpSecBadSa.setStatus('current')
ceipSecNotifCntlCertExpiry = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotifCntlCertExpiry.setStatus('current')
ceipSecNotifCntlCertRenewal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 432, 1, 5, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ceipSecNotifCntlCertRenewal.setStatus('current')
ciscoEnhIpsecFlowTunnelStart = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 432, 0, 1)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunLifeTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunLifeSize"))
if mibBuilder.loadTexts: ciscoEnhIpsecFlowTunnelStart.setStatus('current')
ciscoEnhIpsecFlowTunnelStop = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 432, 0, 2)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistTermReason"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunActiveTime"))
if mibBuilder.loadTexts: ciscoEnhIpsecFlowTunnelStop.setStatus('current')
ciscoEnhIpsecFlowSysFailure = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 432, 0, 3)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailReason"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktSrcAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktSrcAddress"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktDstAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktDstAddress"))
if mibBuilder.loadTexts: ciscoEnhIpsecFlowSysFailure.setStatus('current')
ciscoEnhIpsecFlowSetupFail = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 432, 0, 4)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailReason"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktSrcAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktSrcAddress"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktDstAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktDstAddress"))
if mibBuilder.loadTexts: ciscoEnhIpsecFlowSetupFail.setStatus('current')
ciscoEnhIpsecFlowBadSa = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 432, 0, 5)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailSaSpi"))
if mibBuilder.loadTexts: ciscoEnhIpsecFlowBadSa.setStatus('current')
ciscoEnhIpsecFlowCertExpiry = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 432, 0, 6)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertSubjectName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertSerialNumber"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertIssuerName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertExpiryTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertExpiryStatus"))
if mibBuilder.loadTexts: ciscoEnhIpsecFlowCertExpiry.setStatus('current')
ciscoEnhIpsecFlowCertRenewal = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 432, 0, 7)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertSubjectName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertSerialNumber"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertIssuerName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertRenewalStatus"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertExpiryTime"))
if mibBuilder.loadTexts: ciscoEnhIpsecFlowCertRenewal.setStatus('current')
ciscoEnhIPsecFlowMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 1))
ciscoIPsecFlowMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2))
ciscoEnhIPsecFlowMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 1, 1)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowActivityGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCoreHistGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCoreFailGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowTunnelSaGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowHistoryGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowFailureGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifCntlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowMIBCompliance = ciscoEnhIPsecFlowMIBCompliance.setStatus('deprecated')
ciscoEnhIPsecFlowMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 1, 2)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowActivityGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCoreHistGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCoreFailGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowTunnelSaGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowHistoryGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowFailureGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifCntlGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifGroupSup01"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifCntlGroupSup01"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCertObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowMIBComplianceRev1 = ciscoEnhIPsecFlowMIBComplianceRev1.setStatus('deprecated')
ciscoEnhIPsecFlowMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 1, 3)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowActivityGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCoreHistGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCoreFailGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowTunnelSaGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowHistoryGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowFailureGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifCntlGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifGroupSup01"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowNotifCntlGroupSup01"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowCertObjectGroup"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIPsecFlowPerformanceThroughputGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowMIBComplianceRev2 = ciscoEnhIPsecFlowMIBComplianceRev2.setStatus('current')
ciscoEnhIPsecFlowActivityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 1)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalActiveTunnels"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalPreviousTunnels"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInDecompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInDrops"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInReplayDrops"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInDecrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalInDecryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutUncompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutDrops"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutEncrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutEncryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalProtocolUseFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalNoSaFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalSysCapFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutCompressedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutCompSkippedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutCompFailPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalOutCompTooSmallPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunEncapMode"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunLifeSize"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunLifeTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunActiveTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaLifeSizeThreshold"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaLifeTimeThreshold"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunTotalRefreshes"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunExpiredSaInstances"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunCurrentSaInstances"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInSaDHGrp"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInSaEncryptAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInSaAhAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInSaEspAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInSaDecompAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutSaDHGrp"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutSaEncryptAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutSaAhAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutSaEspAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutSaCompAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunPmtu"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInDecompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInReplayDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInDecrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInDecryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutUncompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutEncrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutEncryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutCompressedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutCompSkippedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutCompFailPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutCompTooSmallPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecIfIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunStatus"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunControlTunnelIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunControlProtocol"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunControlTunnelAlive"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunInSaEncryptKeySize"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunOutSaEncryptKeySize"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunLocalAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunLocalAddress"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunRemoteAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunRemoteAddress"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunNATTraversalMode"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalAddrType1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalAddr1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalAddrType2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalAddr2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalProtocol"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtLocalPort"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemoteName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemoteType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemoteAddrType1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemoteAddr1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemoteAddrType2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemoteAddr2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemoteProtocol"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtRemotePort"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecSaDirection"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecSaValue"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecSaStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowActivityGroup = ciscoEnhIPsecFlowActivityGroup.setStatus('current')
ciscoEnhIPsecFlowCoreHistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 2)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecHistTableSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowCoreHistGroup = ciscoEnhIPsecFlowCoreHistGroup.setStatus('current')
ciscoEnhIPsecFlowHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 3)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistTermReason"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistActiveIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistEncapMode"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistLifeSize"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistLifeTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistStartTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistActiveTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistTotalRefreshes"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistTotalSas"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInSaDHGrp"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInSaEncryptAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInSaAhAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInSaEspAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInSaDecompAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutSaDHGrp"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutSaEncryptAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutSaAhAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutSaEspAuthAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutSaCompAlgo"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistPmtu"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInDecompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInReplayDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInDecrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInDecryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutUncompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutEncrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutEncryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutCompressedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutCompSkippedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutCompFailPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutCompSmallPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistControlProtocol"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistControlTunnelIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistInSaEncryptKeySize"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistOutSaEncryptKeySz"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistLocalAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistLocalAddress"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistRemoteAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistRemoteAddress"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunHistNATTraversalMode"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistTunIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistActiveIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalAddrType1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalAddr1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalAddrType2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalAddr2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalProtocol"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistLocalPort"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemoteName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemoteType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemoteAddrType1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemoteAddr1"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemoteAddrType2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemoteAddr2"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemoteProtocol"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecEndPtHistRemotePort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowHistoryGroup = ciscoEnhIPsecFlowHistoryGroup.setStatus('current')
ciscoEnhIPsecFlowCoreFailGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 4)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailTableSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowCoreFailGroup = ciscoEnhIPsecFlowCoreFailGroup.setStatus('current')
ciscoEnhIPsecFlowFailureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 5)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailReason"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailTunnelIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailSaSpi"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktSrcAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktSrcAddress"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktDstAddressType"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecFailPktDstAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowFailureGroup = ciscoEnhIPsecFlowFailureGroup.setStatus('current')
ciscoEnhIPsecFlowNotifCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 6)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotiCntlIpSecAllNotifs"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotifCntlIpSecTunnelStart"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotifCntlIpSecTunnelStop"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotifCntlIpSecSysFailure"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotifCntlIpSecSetUpFail"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotifCntlIpSecBadSa"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowNotifCntlGroup = ciscoEnhIPsecFlowNotifCntlGroup.setStatus('current')
ciscoEnhIPsecFlowNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 7)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIpsecFlowTunnelStart"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIpsecFlowTunnelStop"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIpsecFlowSysFailure"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIpsecFlowSetupFail"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIpsecFlowBadSa"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowNotifGroup = ciscoEnhIPsecFlowNotifGroup.setStatus('current')
ciscoEnhIPsecFlowTunnelSaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 8)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaValue"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaIfIndex"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInDecompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInReplayDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInDecrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaInDecryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutUncompOctets"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutDropPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutAuths"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutAuthFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutEncrypts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutEncryptFails"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutCompressedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutCompSkippedPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutCompFailPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaOutCompTooSmallPkts"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecTunSaStatus"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecIfTunnelStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowTunnelSaGroup = ciscoEnhIPsecFlowTunnelSaGroup.setStatus('current')
ciscoEnhIPsecFlowNotifCntlGroupSup01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 9)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotifCntlCertExpiry"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecNotifCntlCertRenewal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowNotifCntlGroupSup01 = ciscoEnhIPsecFlowNotifCntlGroupSup01.setStatus('current')
ciscoEnhIPsecFlowNotifGroupSup01 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 10)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIpsecFlowCertExpiry"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ciscoEnhIpsecFlowCertRenewal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowNotifGroupSup01 = ciscoEnhIPsecFlowNotifGroupSup01.setStatus('current')
ciscoEnhIPsecFlowCertObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 11)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertSubjectName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertSerialNumber"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertIssuerName"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertExpiryTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertRenewalStatus"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecCertExpiryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowCertObjectGroup = ciscoEnhIPsecFlowCertObjectGroup.setStatus('current')
ciscoEnhIPsecFlowPerformanceThroughputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 432, 2, 2, 12)).setObjects(("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalThroughputUtilizatioinTimeInterval"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalThroughputLastUpdatedTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalLastAveragePacketSize"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalLastThroughputInMbps"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalLastThroughputInKpps"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalLastThroughputUtilization"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalPeakThroughputUtilization"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalPeakThroughputDateAndTime"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalPeakThroughputInMbps"), ("CISCO-ENHANCED-IPSEC-FLOW-MIB", "ceipSecGlobalPeakAvgPacketSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEnhIPsecFlowPerformanceThroughputGroup = ciscoEnhIPsecFlowPerformanceThroughputGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ENHANCED-IPSEC-FLOW-MIB", ceipSecTunHistOutDropPkts=ceipSecTunHistOutDropPkts, ceipSecTunTotalRefreshes=ceipSecTunTotalRefreshes, ceipSecTunOutOctets=ceipSecTunOutOctets, ceipSecTunHistInReplayDropPkts=ceipSecTunHistInReplayDropPkts, ceipSecTunOutCompSkippedPkts=ceipSecTunOutCompSkippedPkts, ceipSecTunOutSaEncryptKeySize=ceipSecTunOutSaEncryptKeySize, ceipSecTunOutAuthFails=ceipSecTunOutAuthFails, ciscoEnhIpsecFlowTunnelStart=ciscoEnhIpsecFlowTunnelStart, ceipSecCertExpiryTime=ceipSecCertExpiryTime, ceipSecTunOutEncrypts=ceipSecTunOutEncrypts, ceipSecTunSaOutDropPkts=ceipSecTunSaOutDropPkts, ceipSecEndPtHistLocalAddrType1=ceipSecEndPtHistLocalAddrType1, ceipSecEndPtRemoteType=ceipSecEndPtRemoteType, ceipSecTunInOctets=ceipSecTunInOctets, ceipSecEndPtHistRemoteAddr1=ceipSecEndPtHistRemoteAddr1, ceipSecTunLocalAddressType=ceipSecTunLocalAddressType, ceipSecTunSaOutEncryptFails=ceipSecTunSaOutEncryptFails, ceipSecFailTableSize=ceipSecFailTableSize, ceipSecTunHistInSaEspAuthAlgo=ceipSecTunHistInSaEspAuthAlgo, ceipSecFailIndex=ceipSecFailIndex, ceipSecFailTable=ceipSecFailTable, ciscoEnhIPsecFlowCertObjectGroup=ciscoEnhIPsecFlowCertObjectGroup, ceipSecEndPtEntry=ceipSecEndPtEntry, ceipSecTunnelHistEntry=ceipSecTunnelHistEntry, ceipSecFailPktSrcAddressType=ceipSecFailPktSrcAddressType, ceipSecEndPtLocalAddr1=ceipSecEndPtLocalAddr1, ceipSecFailGlobal=ceipSecFailGlobal, ciscoEnhIPsecFlowMIBCompliances=ciscoEnhIPsecFlowMIBCompliances, ceipSecTunSaOutAuthFails=ceipSecTunSaOutAuthFails, ceipSecEndPtHistActiveIndex=ceipSecEndPtHistActiveIndex, ceipSecTunHistControlProtocol=ceipSecTunHistControlProtocol, ceipSecTunOutCompFailPkts=ceipSecTunOutCompFailPkts, ceipSecTunHistInSaDHGrp=ceipSecTunHistInSaDHGrp, ceipSecTunStatus=ceipSecTunStatus, ceipSecNotifCntlIpSecSysFailure=ceipSecNotifCntlIpSecSysFailure, ceipSecTunCurrentSaInstances=ceipSecTunCurrentSaInstances, ceipSecTunLifeTime=ceipSecTunLifeTime, ceipSecTunnelEntry=ceipSecTunnelEntry, ceipSecIfTunnelStatus=ceipSecIfTunnelStatus, ceipSecTunSaInPkts=ceipSecTunSaInPkts, ceipSecTunHistOutCompFailPkts=ceipSecTunHistOutCompFailPkts, ceipSecFailGlobalCntl=ceipSecFailGlobalCntl, ceipSecTunOutPkts=ceipSecTunOutPkts, ceipSecIfIndex=ceipSecIfIndex, ceipSecTunHistInOctets=ceipSecTunHistInOctets, ceipSecTunHistInDecryptFails=ceipSecTunHistInDecryptFails, ceipSecTunSaInOctets=ceipSecTunSaInOctets, ceipSecTunLifeSize=ceipSecTunLifeSize, ceipSecFailTunnelIndex=ceipSecFailTunnelIndex, ceipSecTunSaProtocol=ceipSecTunSaProtocol, ciscoEnhIPsecFlowHistoryGroup=ciscoEnhIPsecFlowHistoryGroup, ceipSecTunnelTable=ceipSecTunnelTable, ceipSecTunSaOutCompFailPkts=ceipSecTunSaOutCompFailPkts, ceipSecTunSaInDecryptFails=ceipSecTunSaInDecryptFails, ceipSecTunHistLocalAddressType=ceipSecTunHistLocalAddressType, ceipSecGlobalThroughputUtilizatioinTimeInterval=ceipSecGlobalThroughputUtilizatioinTimeInterval, ceipSecGlobalOutAuths=ceipSecGlobalOutAuths, PYSNMP_MODULE_ID=ciscoEnhancedIpsecFlowMIB, ceipSecPhaseTwo=ceipSecPhaseTwo, ceipSecHistory=ceipSecHistory, ceipSecTunOutUncompOctets=ceipSecTunOutUncompOctets, ceipSecTunSaInReplayDropPkts=ceipSecTunSaInReplayDropPkts, ceipSecTunHistOutPkts=ceipSecTunHistOutPkts, ceipSecTunHistOutAuths=ceipSecTunHistOutAuths, ceipSecNotifCntlIpSecTunnelStart=ceipSecNotifCntlIpSecTunnelStart, ciscoEnhIPsecFlowTunnelSaGroup=ciscoEnhIPsecFlowTunnelSaGroup, ceipSecGlobalLastAveragePacketSize=ceipSecGlobalLastAveragePacketSize, ceipSecGlobalOutAuthFails=ceipSecGlobalOutAuthFails, ceipSecTunOutEncryptFails=ceipSecTunOutEncryptFails, ceipSecTunHistControlTunnelIndex=ceipSecTunHistControlTunnelIndex, ceipSecTunHistOutEncrypts=ceipSecTunHistOutEncrypts, ceipSecEndPtHistEntry=ceipSecEndPtHistEntry, ceipSecEndPtHistRemoteAddrType1=ceipSecEndPtHistRemoteAddrType1, ceipSecFailReason=ceipSecFailReason, ciscoIPsecFlowMIBGroups=ciscoIPsecFlowMIBGroups, ceipSecNotifCntlCertRenewal=ceipSecNotifCntlCertRenewal, ceipSecEndPtLocalPort=ceipSecEndPtLocalPort, ceipSecEndPtHistLocalName=ceipSecEndPtHistLocalName, ceipSecTunIndex=ceipSecTunIndex, ciscoEnhIpsecFlowSetupFail=ciscoEnhIpsecFlowSetupFail, ceipSecTunSaInDecompOctets=ceipSecTunSaInDecompOctets, ceipSecTunInSaEspAuthAlgo=ceipSecTunInSaEspAuthAlgo, ceipSecTunHistTotalRefreshes=ceipSecTunHistTotalRefreshes, ceipSecTunHistOutCompSkippedPkts=ceipSecTunHistOutCompSkippedPkts, ceipSecEndPtHistIndex=ceipSecEndPtHistIndex, ciscoEnhancedIpsecFlowMIBNotifs=ciscoEnhancedIpsecFlowMIBNotifs, ceipSecTunLocalAddress=ceipSecTunLocalAddress, ceipSecTunOutDropPkts=ceipSecTunOutDropPkts, ceipSecGlobalPeakThroughputDateAndTime=ceipSecGlobalPeakThroughputDateAndTime, ceipSecEndPtLocalAddr2=ceipSecEndPtLocalAddr2, ceipSecTunHistRemoteAddress=ceipSecTunHistRemoteAddress, ceipSecEndPtRemotePort=ceipSecEndPtRemotePort, ceipSecTunSaInDecrypts=ceipSecTunSaInDecrypts, ceipSecTunHistOutCompressedPkts=ceipSecTunHistOutCompressedPkts, ciscoEnhIpsecFlowSysFailure=ciscoEnhIpsecFlowSysFailure, ceipSecTunHistActiveTime=ceipSecTunHistActiveTime, ceipSecEndPtRemoteAddrType1=ceipSecEndPtRemoteAddrType1, ceipSecTunSaOutEncrypts=ceipSecTunSaOutEncrypts, ceipSecTunSaLifeTimeThreshold=ceipSecTunSaLifeTimeThreshold, ceipSecTunSaOutPkts=ceipSecTunSaOutPkts, ceipSecGlobalInOctets=ceipSecGlobalInOctets, ceipSecTunHistInSaEncryptAlgo=ceipSecTunHistInSaEncryptAlgo, ceipSecSaDirection=ceipSecSaDirection, ceipSecTunSaOutCompSkippedPkts=ceipSecTunSaOutCompSkippedPkts, ciscoEnhIPsecFlowCoreFailGroup=ciscoEnhIPsecFlowCoreFailGroup, ceipSecGlobalPreviousTunnels=ceipSecGlobalPreviousTunnels, ceipSecGlobalOutEncryptFails=ceipSecGlobalOutEncryptFails, ceipSecEndPtRemoteAddr1=ceipSecEndPtRemoteAddr1, ceipSecGlobalInDecompOctets=ceipSecGlobalInDecompOctets, ceipSecTunHistOutOctets=ceipSecTunHistOutOctets, ceipSecIfTunnelEntry=ceipSecIfTunnelEntry, ceipSecFailEntry=ceipSecFailEntry, ceipSecEndPtHistLocalType=ceipSecEndPtHistLocalType, ciscoEnhancedIpsecFlowMIBConform=ciscoEnhancedIpsecFlowMIBConform, ceipSecTunHistIndex=ceipSecTunHistIndex, ceipSecCertSerialNumber=ceipSecCertSerialNumber, ceipSecTunSaInDropPkts=ceipSecTunSaInDropPkts, ceipSecGlobalInDecryptFails=ceipSecGlobalInDecryptFails, ceipSecGlobalStats=ceipSecGlobalStats, ceipSecGlobalPeakThroughputInMbps=ceipSecGlobalPeakThroughputInMbps, ceipSecTunHistEncapMode=ceipSecTunHistEncapMode, ceipSecTunHistLocalAddress=ceipSecTunHistLocalAddress, ceipSecEndPtHistRemoteAddrType2=ceipSecEndPtHistRemoteAddrType2, ceipSecEndPtHistRemoteProtocol=ceipSecEndPtHistRemoteProtocol, ceipSecTunSaIndex=ceipSecTunSaIndex, ceipSecTunHistInSaAhAuthAlgo=ceipSecTunHistInSaAhAuthAlgo, ceipSecGlobalOutCompTooSmallPkts=ceipSecGlobalOutCompTooSmallPkts, ceipSecTunActiveTime=ceipSecTunActiveTime, ceipSecFailPktSrcAddress=ceipSecFailPktSrcAddress, ceipSecTunOutSaEspAuthAlgo=ceipSecTunOutSaEspAuthAlgo, ceipSecIfTunnelTable=ceipSecIfTunnelTable, ceipSecGlobalActiveTunnels=ceipSecGlobalActiveTunnels, ceipSecEndPtRemoteName=ceipSecEndPtRemoteName, ceipSecEndPtTable=ceipSecEndPtTable, ceipSecHistGlobal=ceipSecHistGlobal, ciscoEnhIPsecFlowActivityGroup=ciscoEnhIPsecFlowActivityGroup, ceipSecEndPtRemoteAddr2=ceipSecEndPtRemoteAddr2, ceipSecEndPtHistRemotePort=ceipSecEndPtHistRemotePort, ceipSecCertSubjectName=ceipSecCertSubjectName, ceipSecHistGlobalCntl=ceipSecHistGlobalCntl, ceipSecEndPtLocalAddrType2=ceipSecEndPtLocalAddrType2, ciscoEnhIPsecFlowMIBCompliance=ciscoEnhIPsecFlowMIBCompliance, ciscoEnhIPsecFlowCoreHistGroup=ciscoEnhIPsecFlowCoreHistGroup, ciscoEnhIpsecFlowTunnelStop=ciscoEnhIpsecFlowTunnelStop, ceipSecTunInAuthFails=ceipSecTunInAuthFails, ceipSecSaEntry=ceipSecSaEntry, ciscoEnhIPsecFlowMIBComplianceRev2=ciscoEnhIPsecFlowMIBComplianceRev2, ceipSecTunHistOutSaEncryptKeySz=ceipSecTunHistOutSaEncryptKeySz, ceipSecTunHistInPkts=ceipSecTunHistInPkts, ciscoEnhIPsecFlowNotifGroupSup01=ciscoEnhIPsecFlowNotifGroupSup01, ceipSecTunExpiredSaInstances=ceipSecTunExpiredSaInstances, ceipSecGlobalLastThroughputUtilization=ceipSecGlobalLastThroughputUtilization, ceipSecTunHistTotalSas=ceipSecTunHistTotalSas, ceipSecEndPtHistRemoteName=ceipSecEndPtHistRemoteName, ceipSecCertExpiryStatus=ceipSecCertExpiryStatus, ceipSecSaIndex=ceipSecSaIndex, ceipSecTunHistStartTime=ceipSecTunHistStartTime, ceipSecGlobalInDrops=ceipSecGlobalInDrops, ceipSecNotifCntlIpSecSetUpFail=ceipSecNotifCntlIpSecSetUpFail, ceipSecGlobalOutOctets=ceipSecGlobalOutOctets, ceipSecEndPtLocalAddrType1=ceipSecEndPtLocalAddrType1, ceipSecTunSaOutUncompOctets=ceipSecTunSaOutUncompOctets, ceipSecTunnelSaEntry=ceipSecTunnelSaEntry, ceipSecEndPtHistLocalAddrType2=ceipSecEndPtHistLocalAddrType2, ceipSecSaProtocol=ceipSecSaProtocol, ceipSecCertRenewalStatus=ceipSecCertRenewalStatus, ceipSecFailTime=ceipSecFailTime, ceipSecGlobalInPkts=ceipSecGlobalInPkts, ceipSecTunSaInAuthFails=ceipSecTunSaInAuthFails, ceipSecTunInDropPkts=ceipSecTunInDropPkts, ceipSecSaTable=ceipSecSaTable, ceipSecTunHistInDecompOctets=ceipSecTunHistInDecompOctets, ceipSecFailPktDstAddress=ceipSecFailPktDstAddress, ceipSecNotiCntlIpSecAllNotifs=ceipSecNotiCntlIpSecAllNotifs, ceipSecTunHistTermReason=ceipSecTunHistTermReason, ceipSecTunHistLifeTime=ceipSecTunHistLifeTime, ciscoEnhIPsecFlowNotifGroup=ciscoEnhIPsecFlowNotifGroup, ceipSecGlobalLastThroughputInMbps=ceipSecGlobalLastThroughputInMbps, ceipSecGlobalPeakThroughputUtilization=ceipSecGlobalPeakThroughputUtilization, ceipSecNotifCntlIpSecBadSa=ceipSecNotifCntlIpSecBadSa, ciscoEnhIpsecFlowBadSa=ciscoEnhIpsecFlowBadSa, ceipSecTunHistOutSaCompAlgo=ceipSecTunHistOutSaCompAlgo, ciscoEnhIPsecFlowFailureGroup=ciscoEnhIPsecFlowFailureGroup, ceipSecEndPtHistRemoteType=ceipSecEndPtHistRemoteType, ceipSecGlobalNoSaFails=ceipSecGlobalNoSaFails, ceipSecTunInAuths=ceipSecTunInAuths, ceipSecTunInDecrypts=ceipSecTunInDecrypts, ceipSecSaValue=ceipSecSaValue, ceipSecTunInSaAhAuthAlgo=ceipSecTunInSaAhAuthAlgo, ceipSecTunSaOutCompTooSmallPkts=ceipSecTunSaOutCompTooSmallPkts, ceipSecTunRemoteAddress=ceipSecTunRemoteAddress, ceipSecTunControlProtocol=ceipSecTunControlProtocol, ceipSecGlobalOutCompSkippedPkts=ceipSecGlobalOutCompSkippedPkts, ceipSecTunRemoteAddressType=ceipSecTunRemoteAddressType, ceipSecHistTableSize=ceipSecHistTableSize, ceipSecTunHistInDropPkts=ceipSecTunHistInDropPkts, ceipSecTunOutSaCompAlgo=ceipSecTunOutSaCompAlgo, ceipSecTunSaOutAuths=ceipSecTunSaOutAuths, ceipSecFailPktDstAddressType=ceipSecFailPktDstAddressType, ceipSecTunHistInSaEncryptKeySize=ceipSecTunHistInSaEncryptKeySize, ceipSecTunHistOutSaAhAuthAlgo=ceipSecTunHistOutSaAhAuthAlgo, ceipSecTunOutSaDHGrp=ceipSecTunOutSaDHGrp, ceipSecTunSaOutCompressedPkts=ceipSecTunSaOutCompressedPkts, ceipSecTunHistInAuths=ceipSecTunHistInAuths, ceipSecTunInSaEncryptKeySize=ceipSecTunInSaEncryptKeySize, ceipSecEndPtHistTable=ceipSecEndPtHistTable, ceipSecTunOutSaAhAuthAlgo=ceipSecTunOutSaAhAuthAlgo, ceipSecEndPtHistLocalAddr1=ceipSecEndPtHistLocalAddr1, ceipSecGlobalInAuthFails=ceipSecGlobalInAuthFails, ceipSecTunSaValue=ceipSecTunSaValue, ceipSecGlobalPeakAvgPacketSize=ceipSecGlobalPeakAvgPacketSize, ceipSecTunInDecompOctets=ceipSecTunInDecompOctets, ceipSecEndPtRemoteProtocol=ceipSecEndPtRemoteProtocol, ciscoEnhIPsecFlowNotifCntlGroup=ciscoEnhIPsecFlowNotifCntlGroup, ceipSecGlobalSysCapFails=ceipSecGlobalSysCapFails, ceipSecGlobalInDecrypts=ceipSecGlobalInDecrypts, ceipSecTunSaInAuths=ceipSecTunSaInAuths, ceipSecTunHistLifeSize=ceipSecTunHistLifeSize, ceipSecTunHistPmtu=ceipSecTunHistPmtu, ceipSecTunInReplayDropPkts=ceipSecTunInReplayDropPkts, ceipSecTunHistActiveIndex=ceipSecTunHistActiveIndex, ceipSecEndPtHistTunIndex=ceipSecEndPtHistTunIndex, ceipSecTunHistOutEncryptFails=ceipSecTunHistOutEncryptFails, ceipSecEndPtHistLocalProtocol=ceipSecEndPtHistLocalProtocol, ceipSecEndPtHistLocalAddr2=ceipSecEndPtHistLocalAddr2, ceipSecTunHistOutSaEncryptAlgo=ceipSecTunHistOutSaEncryptAlgo, ceipSecTunHistOutSaDHGrp=ceipSecTunHistOutSaDHGrp, ceipSecGlobalProtocolUseFails=ceipSecGlobalProtocolUseFails, ceipSecTunOutSaEncryptAlgo=ceipSecTunOutSaEncryptAlgo, ciscoEnhIPsecFlowMIBComplianceRev1=ciscoEnhIPsecFlowMIBComplianceRev1, ceipSecTunHistInDecrypts=ceipSecTunHistInDecrypts, ceipSecTunSaStatus=ceipSecTunSaStatus, ciscoEnhIPsecFlowNotifCntlGroupSup01=ciscoEnhIPsecFlowNotifCntlGroupSup01, ceipSecNotifCntlIpSecTunnelStop=ceipSecNotifCntlIpSecTunnelStop, ceipSecTunHistNATTraversalMode=ceipSecTunHistNATTraversalMode, ceipSecTunHistInAuthFails=ceipSecTunHistInAuthFails, ceipSecGlobalOutPkts=ceipSecGlobalOutPkts, ceipSecCertIssuerName=ceipSecCertIssuerName, ceipSecGlobalThroughputLastUpdatedTime=ceipSecGlobalThroughputLastUpdatedTime, ceipSecGlobalOutCompFailPkts=ceipSecGlobalOutCompFailPkts, ceipSecEndPtHistRemoteAddr2=ceipSecEndPtHistRemoteAddr2, ceipSecTunPmtu=ceipSecTunPmtu, ceipSecSaStatus=ceipSecSaStatus, ceipSecTunSaLifeSizeThreshold=ceipSecTunSaLifeSizeThreshold, ceipSecTunEncapMode=ceipSecTunEncapMode, ceipSecTunHistOutSaEspAuthAlgo=ceipSecTunHistOutSaEspAuthAlgo, ceipSecTunOutCompTooSmallPkts=ceipSecTunOutCompTooSmallPkts, ceipSecTunHistOutCompSmallPkts=ceipSecTunHistOutCompSmallPkts, ceipSecGlobalInAuths=ceipSecGlobalInAuths, ceipSecTunControlTunnelIndex=ceipSecTunControlTunnelIndex, ceipSecEndPtLocalProtocol=ceipSecEndPtLocalProtocol, ceipSecGlobalInReplayDrops=ceipSecGlobalInReplayDrops, ceipSecGlobalOutDrops=ceipSecGlobalOutDrops, ceipSecTunSaDirection=ceipSecTunSaDirection)
mibBuilder.exportSymbols("CISCO-ENHANCED-IPSEC-FLOW-MIB", ceipSecTunSaOutOctets=ceipSecTunSaOutOctets, ceipSecTunnelHistTable=ceipSecTunnelHistTable, ceipSecTunInDecryptFails=ceipSecTunInDecryptFails, ceipSecFailSaSpi=ceipSecFailSaSpi, ceipSecGlobalOutCompressedPkts=ceipSecGlobalOutCompressedPkts, ceipSecTunOutCompressedPkts=ceipSecTunOutCompressedPkts, ciscoEnhIpsecFlowCertExpiry=ciscoEnhIpsecFlowCertExpiry, ceipSecNotifCntlCertExpiry=ceipSecNotifCntlCertExpiry, ciscoEnhIpsecFlowCertRenewal=ciscoEnhIpsecFlowCertRenewal, ceipSecNotificationCntl=ceipSecNotificationCntl, ceipSecEndPtHistLocalPort=ceipSecEndPtHistLocalPort, ciscoEnhIPsecFlowPerformanceThroughputGroup=ciscoEnhIPsecFlowPerformanceThroughputGroup, ceipSecEndPtIndex=ceipSecEndPtIndex, ceipSecTunInPkts=ceipSecTunInPkts, ciscoEnhancedIpsecFlowMIB=ciscoEnhancedIpsecFlowMIB, ceipSecTunInSaDecompAlgo=ceipSecTunInSaDecompAlgo, ceipSecFailures=ceipSecFailures, ceipSecTunHistOutAuthFails=ceipSecTunHistOutAuthFails, ceipSecCertNotification=ceipSecCertNotification, ceipSecTunNATTraversalMode=ceipSecTunNATTraversalMode, ceipSecEndPtRemoteAddrType2=ceipSecEndPtRemoteAddrType2, ceipSecEndPtLocalType=ceipSecEndPtLocalType, ceipSecTunnelSaTable=ceipSecTunnelSaTable, ceipSecTunSaIfIndex=ceipSecTunSaIfIndex, ciscoEnhancedIpsecFlowMIBObjects=ciscoEnhancedIpsecFlowMIBObjects, ceipSecTunControlTunnelAlive=ceipSecTunControlTunnelAlive, ceipSecTunOutAuths=ceipSecTunOutAuths, ceipSecTunHistOutUncompOctets=ceipSecTunHistOutUncompOctets, ceipSecEndPtLocalName=ceipSecEndPtLocalName, ceipSecTunInSaDHGrp=ceipSecTunInSaDHGrp, ceipSecTunHistRemoteAddressType=ceipSecTunHistRemoteAddressType, ceipSecTunHistInSaDecompAlgo=ceipSecTunHistInSaDecompAlgo, ceipSecGlobalLastThroughputInKpps=ceipSecGlobalLastThroughputInKpps, ceipSecTunInSaEncryptAlgo=ceipSecTunInSaEncryptAlgo, ceipSecGlobalOutUncompOctets=ceipSecGlobalOutUncompOctets, ceipSecGlobalOutEncrypts=ceipSecGlobalOutEncrypts)
