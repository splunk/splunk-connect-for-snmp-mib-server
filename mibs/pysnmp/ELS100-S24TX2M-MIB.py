#
# PySNMP MIB module ELS100-S24TX2M-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELS100-S24TX2M-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:45:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, internet, Bits, Counter64, Gauge32, Integer32, Counter32, NotificationType, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "internet", "Bits", "Counter64", "Gauge32", "Integer32", "Counter32", "NotificationType", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tpELS100S24TX2M = ModuleIdentity((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7))
tpELS100S24TX2M.setRevisions(('2002-08-05 17:53', '2002-02-20 22:02', '1999-10-01 00:00',))
if mibBuilder.loadTexts: tpELS100S24TX2M.setLastUpdated('200202202202Z')
if mibBuilder.loadTexts: tpELS100S24TX2M.setOrganization('Enterasys Networks, Inc.')
switchInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1))
switchPortMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2))
systemSTAMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 3))
tftpDownloadMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 4))
restartMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 5))
portMirrorMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 6))
igmpMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 7))
switchNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchNumber.setStatus('current')
switchInfoTable = MibTable((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2), )
if mibBuilder.loadTexts: switchInfoTable.setStatus('current')
switchInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1), ).setIndexNames((0, "ELS100-S24TX2M-MIB", "swUnitIndex"))
if mibBuilder.loadTexts: switchInfoEntry.setStatus('current')
swUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: swUnitIndex.setStatus('current')
swMainBoardHwVer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMainBoardHwVer.setStatus('current')
swMainBoardFwVer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMainBoardFwVer.setStatus('current')
swAgentBoardHwVer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swAgentBoardHwVer.setStatus('current')
swAgentBoardFwVer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swAgentBoardFwVer.setStatus('current')
swAgentBoardPOSTCodeVer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swAgentBoardPOSTCodeVer.setStatus('current')
swPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPortNumber.setStatus('current')
swPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internalPower", 1), ("redundantPower", 2), ("internalAndRedundantPower", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPowerStatus.setStatus('current')
swExpansionSlot1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("hundredBaseFX2Port", 1), ("thousandBaseSX", 2), ("stackingModule4GB", 3), ("hundredBaseFX1Port", 4), ("thousandBaseLX", 5), ("thousandBaseT", 6), ("thousandBaseGBIC", 7), ("stackingModule2GB", 8), ("other", 9), ("notPresent", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swExpansionSlot1.setStatus('current')
swExpansionSlot2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("hundredBaseFX2Port", 1), ("thousandBaseSX", 2), ("stackingModule4GB", 3), ("hundredBaseFX1Port", 4), ("thousandBaseLX", 5), ("thousandBaseT", 6), ("thousandBaseGBIC", 7), ("stackingModule2GB", 8), ("other", 9), ("notPresent", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swExpansionSlot2.setStatus('current')
swRoleInSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("backupMaster", 2), ("slave", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swRoleInSystem.setStatus('current')
switchOIDTable = MibTable((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 3), )
if mibBuilder.loadTexts: switchOIDTable.setStatus('current')
switchOIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 3, 1), ).setIndexNames((0, "ELS100-S24TX2M-MIB", "switchOIDIndex"))
if mibBuilder.loadTexts: switchOIDEntry.setStatus('current')
switchOIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: switchOIDIndex.setStatus('current')
switchOIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 1, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchOIDValue.setStatus('current')
switchPortMgtTable = MibTable((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1), )
if mibBuilder.loadTexts: switchPortMgtTable.setStatus('current')
switchPortMgtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1, 1), ).setIndexNames((0, "ELS100-S24TX2M-MIB", "swUnitIndex"), (0, "ELS100-S24TX2M-MIB", "swPortMgtIndex"))
if mibBuilder.loadTexts: switchPortMgtEntry.setStatus('current')
swPortMgtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: swPortMgtIndex.setStatus('current')
swPortMgtPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hundredBaseTX", 1), ("hundredBaseFX", 2), ("thousandBaseSX", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPortMgtPortType.setStatus('current')
swPortMgtSpeedDpxAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("halfDuplex10", 1), ("fullDuplex10", 2), ("halfDuplex100", 3), ("fullDuplex100", 4), ("halfDuplex1000", 5), ("fullDuplex1000", 6), ("autoNegotiation", 7))).clone('autoNegotiation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPortMgtSpeedDpxAdmin.setStatus('current')
swPortMgtSpeedDpxInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("halfDuplex10", 1), ("fullDuplex10", 2), ("halfDuplex100", 3), ("fullDuplex100", 4), ("halfDuplex1000", 5), ("fullDuplex1000", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPortMgtSpeedDpxInUse.setStatus('current')
swPortMgtFlowCtrlAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("backPressure", 3), ("dot3xFlowControl", 4))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPortMgtFlowCtrlAdmin.setStatus('current')
swPortMgtFlowCtrlInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("backPressure", 1), ("dot3xFlowControl", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPortMgtFlowCtrlInUse.setStatus('current')
systemSTAStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSTAStatus.setStatus('current')
tftpDownloadServerIP = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 4, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpDownloadServerIP.setStatus('current')
tftpDownloadAgentBoardFwFileName = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80)).clone('es3526f.bin')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpDownloadAgentBoardFwFileName.setStatus('current')
tftpDownloadAgentBoardFwDownloadNode = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permanent", 1), ("temporary", 2))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpDownloadAgentBoardFwDownloadNode.setStatus('current')
tftpDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notActive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tftpDownloadStatus.setStatus('current')
restartOptionPOST = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartOptionPOST.setStatus('current')
restartOptionReloadFactoryDefault = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartOptionReloadFactoryDefault.setStatus('current')
restartOptionKeepIpSetting = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartOptionKeepIpSetting.setStatus('current')
restartOptionKeepUserAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartOptionKeepUserAuthentication.setStatus('current')
restartAction = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notActive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartAction.setStatus('current')
portMirrorStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portMirrorStatus.setStatus('current')
portMirrorSnifferPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portMirrorSnifferPort.setStatus('current')
portMirrorMirroredPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portMirrorMirroredPort.setStatus('current')
igmpStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpStatus.setStatus('current')
igmpQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpQueryCount.setStatus('current')
igmpReportDelay = MibScalar((1, 3, 6, 1, 4, 1, 52, 3, 9, 1, 10, 7, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpReportDelay.setStatus('current')
mibBuilder.exportSymbols("ELS100-S24TX2M-MIB", switchNumber=switchNumber, restartOptionKeepIpSetting=restartOptionKeepIpSetting, swMainBoardHwVer=swMainBoardHwVer, swPortMgtFlowCtrlAdmin=swPortMgtFlowCtrlAdmin, tftpDownloadAgentBoardFwDownloadNode=tftpDownloadAgentBoardFwDownloadNode, switchInfoEntry=switchInfoEntry, swPortMgtPortType=swPortMgtPortType, restartOptionReloadFactoryDefault=restartOptionReloadFactoryDefault, swExpansionSlot2=swExpansionSlot2, portMirrorStatus=portMirrorStatus, igmpMgt=igmpMgt, portMirrorMgt=portMirrorMgt, switchOIDTable=switchOIDTable, swMainBoardFwVer=swMainBoardFwVer, swPortMgtSpeedDpxInUse=swPortMgtSpeedDpxInUse, swPortMgtIndex=swPortMgtIndex, tftpDownloadServerIP=tftpDownloadServerIP, switchOIDValue=switchOIDValue, restartMgt=restartMgt, restartOptionKeepUserAuthentication=restartOptionKeepUserAuthentication, swAgentBoardPOSTCodeVer=swAgentBoardPOSTCodeVer, tftpDownloadMgt=tftpDownloadMgt, swRoleInSystem=swRoleInSystem, switchOIDEntry=switchOIDEntry, swPortMgtSpeedDpxAdmin=swPortMgtSpeedDpxAdmin, swPortNumber=swPortNumber, systemSTAStatus=systemSTAStatus, switchInfoTable=switchInfoTable, switchPortMgtTable=switchPortMgtTable, restartOptionPOST=restartOptionPOST, systemSTAMgt=systemSTAMgt, swExpansionSlot1=swExpansionSlot1, switchInfo=switchInfo, igmpReportDelay=igmpReportDelay, swUnitIndex=swUnitIndex, igmpStatus=igmpStatus, tftpDownloadAgentBoardFwFileName=tftpDownloadAgentBoardFwFileName, swPortMgtFlowCtrlInUse=swPortMgtFlowCtrlInUse, tftpDownloadStatus=tftpDownloadStatus, PYSNMP_MODULE_ID=tpELS100S24TX2M, portMirrorSnifferPort=portMirrorSnifferPort, portMirrorMirroredPort=portMirrorMirroredPort, switchPortMgt=switchPortMgt, swAgentBoardHwVer=swAgentBoardHwVer, switchOIDIndex=switchOIDIndex, swPowerStatus=swPowerStatus, switchPortMgtEntry=switchPortMgtEntry, igmpQueryCount=igmpQueryCount, restartAction=restartAction, swAgentBoardFwVer=swAgentBoardFwVer, tpELS100S24TX2M=tpELS100S24TX2M)
