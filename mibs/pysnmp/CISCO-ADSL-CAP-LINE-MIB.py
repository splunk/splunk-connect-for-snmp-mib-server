#
# PySNMP MIB module CISCO-ADSL-CAP-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ADSL-CAP-LINE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:32:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adslAtucIntervalNumber, adslLineConfProfileName = mibBuilder.importSymbols("ADSL-LINE-MIB", "adslAtucIntervalNumber", "adslLineConfProfileName")
AdslPerfCurrDayCount, AdslPerfPrevDayCount = mibBuilder.importSymbols("ADSL-TC-MIB", "AdslPerfCurrDayCount", "AdslPerfPrevDayCount")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, TimeTicks, Counter32, Gauge32, Bits, Integer32, Counter64, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "Counter32", "Gauge32", "Bits", "Integer32", "Counter64", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "iso", "IpAddress")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
ciscoAdslLineCapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 149))
ciscoAdslLineCapMIB.setRevisions(('2001-03-01 00:00',))
if mibBuilder.loadTexts: ciscoAdslLineCapMIB.setLastUpdated('200103010000Z')
if mibBuilder.loadTexts: ciscoAdslLineCapMIB.setOrganization('Cisco Systems, Inc.')
class AdslLineCapDownstreamRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(7168000, 7168000), ValueRangeConstraint(6272000, 6272000), ValueRangeConstraint(5120000, 5120000), ValueRangeConstraint(4480000, 4480000), ValueRangeConstraint(3200000, 3200000), ValueRangeConstraint(2688000, 2688000), ValueRangeConstraint(2560000, 2560000), ValueRangeConstraint(2240000, 2240000), ValueRangeConstraint(1920000, 1920000), ValueRangeConstraint(1600000, 1600000), ValueRangeConstraint(1280000, 1280000), ValueRangeConstraint(1024000, 1024000), ValueRangeConstraint(960000, 960000), ValueRangeConstraint(896000, 896000), ValueRangeConstraint(768000, 768000), ValueRangeConstraint(640000, 640000), ValueRangeConstraint(512000, 512000), ValueRangeConstraint(384000, 384000), ValueRangeConstraint(256000, 256000), ValueRangeConstraint(0, 0), )
class AdslLineCapUpstreamRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(1088000, 1088000), ValueRangeConstraint(952000, 952000), ValueRangeConstraint(816000, 816000), ValueRangeConstraint(680000, 680000), ValueRangeConstraint(544000, 544000), ValueRangeConstraint(408000, 408000), ValueRangeConstraint(272000, 272000), ValueRangeConstraint(91000, 91000), ValueRangeConstraint(0, 0), )
ciscoAdslLineCapMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 149, 1))
cAdslAtucCapPhysTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 2), )
if mibBuilder.loadTexts: cAdslAtucCapPhysTable.setStatus('current')
cAdslAtucCapPhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cAdslAtucCapPhysEntry.setStatus('current')
cAdslAtucCapCurrState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("idle", 2), ("training", 3), ("steadyState", 4), ("downloading", 5), ("downloadFailed", 6), ("testing", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapCurrState.setStatus('current')
cAdslAtucCapCurrRxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 2, 1, 2), Gauge32()).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapCurrRxGain.setStatus('current')
cAdslAtucCapCurrRxSnr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 2, 1, 3), Gauge32()).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapCurrRxSnr.setStatus('current')
cAdslAturCapPhysTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 3), )
if mibBuilder.loadTexts: cAdslAturCapPhysTable.setStatus('current')
cAdslAturCapPhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cAdslAturCapPhysEntry.setStatus('current')
cAdslAturCapCurrRxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 3, 1, 1), Gauge32()).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAturCapCurrRxGain.setStatus('current')
cAdslAtucCapPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 6), )
if mibBuilder.loadTexts: cAdslAtucCapPerfDataTable.setStatus('current')
cAdslAtucCapPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cAdslAtucCapPerfDataEntry.setStatus('current')
cAdslAtucCapPerfInitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapPerfInitFailures.setStatus('current')
cAdslAtucCapPerfCurr15MinInitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 6, 1, 2), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapPerfCurr15MinInitFailures.setStatus('current')
cAdslAtucCapPerfCurr1DayInitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 6, 1, 3), AdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapPerfCurr1DayInitFailures.setStatus('current')
cAdslAtucCapPerfPrev1DayInitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 6, 1, 4), AdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapPerfPrev1DayInitFailures.setStatus('current')
cAdslAtucCapIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 8), )
if mibBuilder.loadTexts: cAdslAtucCapIntervalTable.setStatus('current')
cAdslAtucCapIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ADSL-LINE-MIB", "adslAtucIntervalNumber"))
if mibBuilder.loadTexts: cAdslAtucCapIntervalEntry.setStatus('current')
cAdslAtucCapIntervalInitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 8, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucCapIntervalInitFailures.setStatus('current')
cAdslLineCapConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14), )
if mibBuilder.loadTexts: cAdslLineCapConfProfileTable.setStatus('current')
cAdslLineCapConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1), ).setIndexNames((1, "ADSL-LINE-MIB", "adslLineConfProfileName"))
if mibBuilder.loadTexts: cAdslLineCapConfProfileEntry.setStatus('current')
cAdslLineCapConfTrainingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("fast", 2))).clone('standard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslLineCapConfTrainingMode.setStatus('current')
cAdslLineCapConfInterleaveDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("short", 2), ("long", 3))).clone('short')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslLineCapConfInterleaveDelay.setStatus('current')
cAdslLineCapConfCpeSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslLineCapConfCpeSignature.setStatus('current')
cAdslAtucCapConfTargetSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(60)).setUnits('tenth dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucCapConfTargetSnrMgn.setStatus('current')
cAdslAtucCapConfMinTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 5), AdslLineCapDownstreamRate()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucCapConfMinTxRate.setStatus('current')
cAdslAtucCapConfMaxTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 6), AdslLineCapDownstreamRate().clone(640000)).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucCapConfMaxTxRate.setStatus('current')
cAdslAtucCapConfDown136KBaudEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucCapConfDown136KBaudEnable.setStatus('current')
cAdslAtucCapConfUp68KBaudEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucCapConfUp68KBaudEnable.setStatus('current')
cAdslAtucCapConfUp17KBaudEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucCapConfUp17KBaudEnable.setStatus('current')
cAdslAtucCapConfPsdmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-52, -52), ValueRangeConstraint(-49, -49), ValueRangeConstraint(-46, -46), ValueRangeConstraint(-43, -43), ValueRangeConstraint(-40, -40), ValueRangeConstraint(-37, -37), )).clone(-40)).setUnits('dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucCapConfPsdmLevel.setStatus('current')
cAdslAturCapConfTargetSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(60)).setUnits('tenth dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturCapConfTargetSnrMgn.setStatus('current')
cAdslAturCapConfMinTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 12), AdslLineCapUpstreamRate()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturCapConfMinTxRate.setStatus('current')
cAdslAturCapConfMaxTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 13), AdslLineCapUpstreamRate().clone(91000)).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturCapConfMaxTxRate.setStatus('current')
cAdslAturCapConfPsdmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 149, 1, 14, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-53, -53), ValueRangeConstraint(-50, -50), ValueRangeConstraint(-47, -47), ValueRangeConstraint(-44, -44), ValueRangeConstraint(-41, -41), ValueRangeConstraint(-38, -38), )).clone(-38)).setUnits('dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturCapConfPsdmLevel.setStatus('current')
cAdslLineCapMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 149, 2))
cAdslLineCapMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 149, 2, 0))
ciscoAdslLineCapMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 149, 3))
ciscoAdslLineCapMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 1))
ciscoAdslLineCapMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 2))
ciscoAdslLineCapMIBAtucCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 1, 1)).setObjects(("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapBasicGroup"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapGroup"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapPM15MinIntervalGroup"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapPM1DayIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAdslLineCapMIBAtucCompliance = ciscoAdslLineCapMIBAtucCompliance.setStatus('current')
ciscoAdslLineCapMIBAturCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 1, 2)).setObjects(("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturBasicGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAdslLineCapMIBAturCompliance = ciscoAdslLineCapMIBAturCompliance.setStatus('current')
cAdslAtucCapBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 2, 1)).setObjects(("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapCurrState"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapCurrRxGain"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapCurrRxSnr"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapPerfInitFailures"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslLineCapConfTrainingMode"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslLineCapConfInterleaveDelay"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslLineCapConfCpeSignature"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapConfTargetSnrMgn"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapConfMinTxRate"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapConfMaxTxRate"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapConfDown136KBaudEnable"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapConfUp68KBaudEnable"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapConfUp17KBaudEnable"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapConfPsdmLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAtucCapBasicGroup = cAdslAtucCapBasicGroup.setStatus('current')
cAdslAturBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 2, 2)).setObjects(("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapCurrRxGain"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslLineCapConfTrainingMode"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfTargetSnrMgn"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfMinTxRate"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfMaxTxRate"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfPsdmLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAturBasicGroup = cAdslAturBasicGroup.setStatus('current')
cAdslAturCapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 2, 3)).setObjects(("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapCurrRxGain"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfTargetSnrMgn"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfMinTxRate"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfMaxTxRate"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAturCapConfPsdmLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAturCapGroup = cAdslAturCapGroup.setStatus('current')
cAdslAtucCapPM15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 2, 4)).setObjects(("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapPerfCurr15MinInitFailures"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapIntervalInitFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAtucCapPM15MinIntervalGroup = cAdslAtucCapPM15MinIntervalGroup.setStatus('current')
cAdslAtucCapPM1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 149, 3, 2, 5)).setObjects(("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapPerfCurr1DayInitFailures"), ("CISCO-ADSL-CAP-LINE-MIB", "cAdslAtucCapPerfPrev1DayInitFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAtucCapPM1DayIntervalGroup = cAdslAtucCapPM1DayIntervalGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ADSL-CAP-LINE-MIB", PYSNMP_MODULE_ID=ciscoAdslLineCapMIB, cAdslAtucCapPerfInitFailures=cAdslAtucCapPerfInitFailures, cAdslAtucCapCurrState=cAdslAtucCapCurrState, cAdslAtucCapConfMaxTxRate=cAdslAtucCapConfMaxTxRate, cAdslAtucCapConfUp17KBaudEnable=cAdslAtucCapConfUp17KBaudEnable, cAdslLineCapConfProfileEntry=cAdslLineCapConfProfileEntry, cAdslLineCapConfInterleaveDelay=cAdslLineCapConfInterleaveDelay, cAdslAtucCapIntervalEntry=cAdslAtucCapIntervalEntry, cAdslAturCapConfPsdmLevel=cAdslAturCapConfPsdmLevel, cAdslAtucCapBasicGroup=cAdslAtucCapBasicGroup, cAdslAtucCapPerfCurr1DayInitFailures=cAdslAtucCapPerfCurr1DayInitFailures, cAdslAtucCapPerfPrev1DayInitFailures=cAdslAtucCapPerfPrev1DayInitFailures, cAdslAtucCapCurrRxGain=cAdslAtucCapCurrRxGain, cAdslAturCapGroup=cAdslAturCapGroup, cAdslAturCapConfMinTxRate=cAdslAturCapConfMinTxRate, cAdslAtucCapIntervalTable=cAdslAtucCapIntervalTable, cAdslLineCapMIBNotifications=cAdslLineCapMIBNotifications, cAdslAtucCapPerfDataTable=cAdslAtucCapPerfDataTable, cAdslAtucCapPM1DayIntervalGroup=cAdslAtucCapPM1DayIntervalGroup, cAdslAtucCapPhysEntry=cAdslAtucCapPhysEntry, cAdslAtucCapConfPsdmLevel=cAdslAtucCapConfPsdmLevel, cAdslAturCapConfTargetSnrMgn=cAdslAturCapConfTargetSnrMgn, ciscoAdslLineCapMIBConformance=ciscoAdslLineCapMIBConformance, cAdslAtucCapCurrRxSnr=cAdslAtucCapCurrRxSnr, cAdslAtucCapConfUp68KBaudEnable=cAdslAtucCapConfUp68KBaudEnable, ciscoAdslLineCapMIB=ciscoAdslLineCapMIB, cAdslAturBasicGroup=cAdslAturBasicGroup, cAdslLineCapConfCpeSignature=cAdslLineCapConfCpeSignature, AdslLineCapDownstreamRate=AdslLineCapDownstreamRate, cAdslLineCapConfTrainingMode=cAdslLineCapConfTrainingMode, cAdslLineCapMIBNotificationsPrefix=cAdslLineCapMIBNotificationsPrefix, cAdslAtucCapPM15MinIntervalGroup=cAdslAtucCapPM15MinIntervalGroup, ciscoAdslLineCapMIBCompliances=ciscoAdslLineCapMIBCompliances, ciscoAdslLineCapMIBGroups=ciscoAdslLineCapMIBGroups, cAdslAtucCapIntervalInitFailures=cAdslAtucCapIntervalInitFailures, cAdslAtucCapPhysTable=cAdslAtucCapPhysTable, cAdslAturCapConfMaxTxRate=cAdslAturCapConfMaxTxRate, cAdslAturCapPhysEntry=cAdslAturCapPhysEntry, cAdslAtucCapPerfDataEntry=cAdslAtucCapPerfDataEntry, cAdslAtucCapConfDown136KBaudEnable=cAdslAtucCapConfDown136KBaudEnable, ciscoAdslLineCapMIBObjects=ciscoAdslLineCapMIBObjects, ciscoAdslLineCapMIBAturCompliance=ciscoAdslLineCapMIBAturCompliance, cAdslAtucCapPerfCurr15MinInitFailures=cAdslAtucCapPerfCurr15MinInitFailures, AdslLineCapUpstreamRate=AdslLineCapUpstreamRate, cAdslAturCapPhysTable=cAdslAturCapPhysTable, ciscoAdslLineCapMIBAtucCompliance=ciscoAdslLineCapMIBAtucCompliance, cAdslAtucCapConfMinTxRate=cAdslAtucCapConfMinTxRate, cAdslAturCapCurrRxGain=cAdslAturCapCurrRxGain, cAdslAtucCapConfTargetSnrMgn=cAdslAtucCapConfTargetSnrMgn, cAdslLineCapConfProfileTable=cAdslLineCapConfProfileTable)
