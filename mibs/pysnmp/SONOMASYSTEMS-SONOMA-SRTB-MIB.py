#
# PySNMP MIB module SONOMASYSTEMS-SONOMA-SRTB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONOMASYSTEMS-SONOMA-SRTB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Integer32, TimeTicks, Counter64, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, ModuleIdentity, IpAddress, MibIdentifier, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "TimeTicks", "Counter64", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "ModuleIdentity", "IpAddress", "MibIdentifier", "Counter32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sonomaBridging, = mibBuilder.importSymbols("SONOMASYSTEMS-SONOMA-MIB", "sonomaBridging")
srtBridging = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2))
srtBridgeNumber = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 1), Integer32().clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtBridgeNumber.setStatus('obsolete')
srtSourceRouteAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtSourceRouteAgingTime.setStatus('mandatory')
srtPortTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3), )
if mibBuilder.loadTexts: srtPortTable.setStatus('mandatory')
srtPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-SRTB-MIB", "srtPortIfIndex"))
if mibBuilder.loadTexts: srtPortEntry.setStatus('mandatory')
srtPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortIfIndex.setStatus('mandatory')
srtPortHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtPortHopCount.setStatus('mandatory')
srtPortLocalSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtPortLocalSegment.setStatus('mandatory')
srtPortLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("srtMtu516", 1), ("srtMtu1500", 2), ("srtMtu2052", 3), ("srtMtu4472", 4), ("srtMtu8144", 5), ("srtMtu11407", 6), ("srtMtu17800", 7), ("srtMtu65535", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtPortLargestFrame.setStatus('mandatory')
srtPortSTESpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto-span", 1), ("disabled", 2), ("forced", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtPortSTESpanMode.setStatus('mandatory')
srtPortSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortSpecInFrames.setStatus('mandatory')
srtPortSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortSpecOutFrames.setStatus('mandatory')
srtPortAREInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortAREInFrames.setStatus('mandatory')
srtPortAREOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortAREOutFrames.setStatus('mandatory')
srtPortSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortSteInFrames.setStatus('mandatory')
srtPortSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortSteOutFrames.setStatus('mandatory')
srtPortSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortSegmentMismatchDiscards.setStatus('mandatory')
srtPortDuplicateSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortDuplicateSegmentDiscards.setStatus('mandatory')
srtPortHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtPortHopCountExceededDiscards.setStatus('mandatory')
srtSourceRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 4), )
if mibBuilder.loadTexts: srtSourceRouteTable.setStatus('mandatory')
srtSourceRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 4, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-SRTB-MIB", "srtSourceRouteVlanID"), (0, "SONOMASYSTEMS-SONOMA-SRTB-MIB", "srtSourceRouteAddress"))
if mibBuilder.loadTexts: srtSourceRouteEntry.setStatus('mandatory')
srtSourceRouteVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtSourceRouteVlanID.setStatus('mandatory')
srtSourceRouteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtSourceRouteAddress.setStatus('mandatory')
srtSourceRouteRIF = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtSourceRouteRIF.setStatus('mandatory')
srtSourceRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("permanent", 1), ("temporary", 2), ("respondWithARE", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtSourceRouteType.setStatus('mandatory')
srtSourceRouteDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 3, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inOrder", 1), ("reverseOrder", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtSourceRouteDirection.setStatus('mandatory')
mibBuilder.exportSymbols("SONOMASYSTEMS-SONOMA-SRTB-MIB", srtBridging=srtBridging, srtPortLargestFrame=srtPortLargestFrame, srtPortSteOutFrames=srtPortSteOutFrames, srtSourceRouteRIF=srtSourceRouteRIF, srtPortIfIndex=srtPortIfIndex, srtPortAREInFrames=srtPortAREInFrames, srtPortSTESpanMode=srtPortSTESpanMode, srtBridgeNumber=srtBridgeNumber, srtPortSteInFrames=srtPortSteInFrames, srtSourceRouteAddress=srtSourceRouteAddress, srtPortAREOutFrames=srtPortAREOutFrames, srtSourceRouteAgingTime=srtSourceRouteAgingTime, srtPortLocalSegment=srtPortLocalSegment, srtSourceRouteType=srtSourceRouteType, srtSourceRouteEntry=srtSourceRouteEntry, srtPortHopCountExceededDiscards=srtPortHopCountExceededDiscards, srtSourceRouteTable=srtSourceRouteTable, srtPortDuplicateSegmentDiscards=srtPortDuplicateSegmentDiscards, srtSourceRouteVlanID=srtSourceRouteVlanID, srtPortTable=srtPortTable, srtSourceRouteDirection=srtSourceRouteDirection, srtPortHopCount=srtPortHopCount, srtPortSpecInFrames=srtPortSpecInFrames, srtPortEntry=srtPortEntry, srtPortSegmentMismatchDiscards=srtPortSegmentMismatchDiscards, srtPortSpecOutFrames=srtPortSpecOutFrames)
