#
# PySNMP MIB module JUNIPER-WX-EVENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-WX-GLOBAL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:50:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
jnxWxGrpEvents, = mibBuilder.importSymbols("JUNIPER-WX-GLOBAL-MIB", "jnxWxGrpEvents")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Gauge32, ModuleIdentity, Integer32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, NotificationType, Counter64, iso, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "ModuleIdentity", "Integer32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "NotificationType", "Counter64", "iso", "MibIdentifier", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxWxGrpEventV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0))
if mibBuilder.loadTexts: jnxWxGrpEventV2.setStatus('current')
jnxWxGrpEventDescr = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxWxGrpEventDescr.setStatus('current')
jnxWxGrpEventPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 1))
if mibBuilder.loadTexts: jnxWxGrpEventPowerSupplyFailure.setStatus('current')
jnxWxGrpEventPowerSupplyOk = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 2))
if mibBuilder.loadTexts: jnxWxGrpEventPowerSupplyOk.setStatus('current')
jnxWxGrpEventLicenseWillExpire = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 3)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventLicenseWillExpire.setStatus('current')
jnxWxGrpEventThruputLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 4)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventThruputLimitExceeded.setStatus('current')
jnxWxGrpEventLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 5)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventLicenseExpired.setStatus('current')
jnxWxGrpEventClientLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 6)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventClientLimitExceeded.setStatus('current')
jnxWxGrpEventInFailSafeMode = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 7))
if mibBuilder.loadTexts: jnxWxGrpEventInFailSafeMode.setStatus('current')
jnxWxGrpEventInterfaceSpeedMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 8)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventInterfaceSpeedMismatch.setStatus('current')
jnxWxGrpEventInterfaceSpeedOk = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 9)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventInterfaceSpeedOk.setStatus('current')
jnxWxGrpEventInterfaceDuplexMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 10)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventInterfaceDuplexMismatch.setStatus('current')
jnxWxGrpEventLoginFailure = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 11)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventLoginFailure.setStatus('current')
jnxWxGrpEventDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3, 0, 12)).setObjects(("JUNIPER-WX-EVENT-MIB", "jnxWxGrpEventDescr"))
if mibBuilder.loadTexts: jnxWxGrpEventDiskFailure.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-WX-EVENT-MIB", jnxWxGrpEventPowerSupplyFailure=jnxWxGrpEventPowerSupplyFailure, jnxWxGrpEventInterfaceDuplexMismatch=jnxWxGrpEventInterfaceDuplexMismatch, jnxWxGrpEventDiskFailure=jnxWxGrpEventDiskFailure, jnxWxGrpEventDescr=jnxWxGrpEventDescr, jnxWxGrpEventInterfaceSpeedMismatch=jnxWxGrpEventInterfaceSpeedMismatch, jnxWxGrpEventLicenseWillExpire=jnxWxGrpEventLicenseWillExpire, jnxWxGrpEventThruputLimitExceeded=jnxWxGrpEventThruputLimitExceeded, jnxWxGrpEventInterfaceSpeedOk=jnxWxGrpEventInterfaceSpeedOk, jnxWxGrpEventClientLimitExceeded=jnxWxGrpEventClientLimitExceeded, jnxWxGrpEventLoginFailure=jnxWxGrpEventLoginFailure, jnxWxGrpEventV2=jnxWxGrpEventV2, jnxWxGrpEventPowerSupplyOk=jnxWxGrpEventPowerSupplyOk, jnxWxGrpEventLicenseExpired=jnxWxGrpEventLicenseExpired, jnxWxGrpEventInFailSafeMode=jnxWxGrpEventInFailSafeMode)
