#
# PySNMP MIB module CBS-MODULE-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CBS-MODULE-RESOURCES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
cbsHwModuleID, = mibBuilder.importSymbols("CBS-HARDWARE-MIB", "cbsHwModuleID")
cbsVgVapGroupID, = mibBuilder.importSymbols("CBS-VAPGROUP-MIB", "cbsVgVapGroupID")
cbsMgmt, cbsTraps, cbsMIBs = mibBuilder.importSymbols("CROSSBEAM-SYSTEMS-MIB", "cbsMgmt", "cbsTraps", "cbsMIBs")
ProductID, KBytes = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "ProductID", "KBytes")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Integer32, Counter32, Gauge32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, NotificationType, MibIdentifier, Counter64, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Counter32", "Gauge32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "Counter64", "Unsigned32", "ObjectIdentity")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
cbsModuleResourcesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6848, 3, 3))
cbsModuleResourcesMIB.setRevisions(('2002-03-18 00:00', '2002-08-01 00:00', '2002-12-11 00:00', '2007-12-17 00:00', '2009-06-10 00:00', '2009-07-17 00:00', '2009-09-10 00:00', '2009-10-16 00:00', '2010-01-07 00:00', '2010-04-13 00:00', '2010-05-13 00:00', '2010-05-22 00:00', '2010-05-23 00:00',))
if mibBuilder.loadTexts: cbsModuleResourcesMIB.setLastUpdated('200909100000Z')
if mibBuilder.loadTexts: cbsModuleResourcesMIB.setOrganization('Crossbeam Systems, Inc.')
class UtilSeverityLvl(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("minor", 1), ("major", 2), ("critical", 3))

class BadSdramMemCfgStat(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("no-error", 0), ("no-four-gig-dimms-error", 1), ("bad-total-memory-error", 2), ("no-four-4gig-dimms-error", 3))

class BadDiskCfgStat(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("no-error", 0), ("no-raid-1-config-error", 1), ("no-two-500GB-or-greater-disks-error", 2))

class GuestHealthSeverityLvl(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("minor", 1), ("major", 2), ("critical", 3))

cbsModuleResources = MibIdentifier((1, 3, 6, 1, 4, 1, 6848, 2, 3))
cbsModuleResourceTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6848, 4, 2))
cbsModuleCPULoadTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1), )
if mibBuilder.loadTexts: cbsModuleCPULoadTable.setStatus('current')
cbsModuleCPULoadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleCPULoadEntry.setStatus('current')
cbsModuleCPUSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUSpeed.setStatus('current')
cbsModuleCPUCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUCount.setStatus('current')
cbsModuleCPULoad1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPULoad1.setStatus('current')
cbsModuleCPULoad5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPULoad5.setStatus('current')
cbsModuleCPULoad15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPULoad15.setStatus('current')
cbsModuleCPUUtil1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUUtil1.setStatus('current')
cbsModuleCPUUtil5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUUtil5.setStatus('current')
cbsModuleCPUUtil15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 1, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUUtil15.setStatus('current')
cbsModuleMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2), )
if mibBuilder.loadTexts: cbsModuleMemoryTable.setStatus('current')
cbsModuleMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleMemoryEntry.setStatus('current')
cbsModuleMemoryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 1), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryTotal.setStatus('current')
cbsModuleMemoryUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 2), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryUsed.setStatus('current')
cbsModuleMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 3), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryFree.setStatus('current')
cbsModuleMemoryTotalSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 4), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryTotalSwap.setStatus('current')
cbsModuleMemoryAvailSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 5), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryAvailSwap.setStatus('current')
cbsModuleMemoryTotalReal = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 6), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryTotalReal.setStatus('current')
cbsModuleMemoryAvailReal = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 7), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryAvailReal.setStatus('current')
cbsModuleMemoryTotalFree = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 8), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryTotalFree.setStatus('current')
cbsModuleMemoryShared = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 9), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryShared.setStatus('current')
cbsModuleMemoryBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 10), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryBuffer.setStatus('current')
cbsModuleMemoryCached = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 11), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryCached.setStatus('current')
cbsModuleMemoryHiTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 12), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryHiTotal.setStatus('current')
cbsModuleMemoryHiFree = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 13), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryHiFree.setStatus('current')
cbsModuleMemoryLoTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 14), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryLoTotal.setStatus('current')
cbsModuleMemoryLoFree = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 2, 1, 15), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleMemoryLoFree.setStatus('current')
cbsModuleSwapTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 3), )
if mibBuilder.loadTexts: cbsModuleSwapTable.setStatus('current')
cbsModuleSwapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 3, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleSwapEntry.setStatus('current')
cbsModuleSwapTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 3, 1, 1), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSwapTotal.setStatus('current')
cbsModuleSwapUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 3, 1, 2), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSwapUsed.setStatus('current')
cbsModuleSwapFree = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 3, 1, 3), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSwapFree.setStatus('current')
cbsModuleDUTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4), )
if mibBuilder.loadTexts: cbsModuleDUTable.setStatus('current')
cbsModuleDUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleDUEntry.setStatus('current')
cbsModuleDURoot = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleDURoot.setStatus('current')
cbsModuleDUBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleDUBoot.setStatus('current')
cbsModuleDUCbconfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleDUCbconfig.setStatus('current')
cbsModuleDUTftpboot = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleDUTftpboot.setStatus('current')
cbsModuleDUMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleDUMgmt.setStatus('current')
cbsModuleDUVar = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 4, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleDUVar.setStatus('current')
cbsModuleFreePageTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 5), )
if mibBuilder.loadTexts: cbsModuleFreePageTable.setStatus('current')
cbsModuleFreePageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 5, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleFreePageEntry.setStatus('current')
cbsModuleFreePageAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 5, 1, 1), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleFreePageAvailable.setStatus('current')
cbsModuleFreePageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 5, 1, 2), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleFreePageThreshold.setStatus('current')
cbsModuleFreePageSeverity = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 5, 1, 3), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleFreePageSeverity.setStatus('current')
cbsModuleFreePageVapName = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleFreePageVapName.setStatus('current')
cbsModuleCPUAvgUtilTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6), )
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilTable.setStatus('current')
cbsModuleCPUAvgUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilEntry.setStatus('current')
cbsModuleCPUAvgUtilCore1User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore1User.setStatus('current')
cbsModuleCPUAvgUtilCore1Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore1Nice.setStatus('current')
cbsModuleCPUAvgUtilCore1Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore1Syst.setStatus('current')
cbsModuleCPUAvgUtilCore1Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore1Idle.setStatus('current')
cbsModuleCPUAvgUtilCore1IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore1IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore1SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore1SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore1IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore1IOWait.setStatus('current')
cbsModuleCPUAvgUtilCore2User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore2User.setStatus('current')
cbsModuleCPUAvgUtilCore2Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore2Nice.setStatus('current')
cbsModuleCPUAvgUtilCore2Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore2Syst.setStatus('current')
cbsModuleCPUAvgUtilCore2Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore2Idle.setStatus('current')
cbsModuleCPUAvgUtilCore2IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore2IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore2SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore2SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore2IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore2IOWait.setStatus('current')
cbsModuleCPUAvgUtilCore3User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore3User.setStatus('current')
cbsModuleCPUAvgUtilCore3Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore3Nice.setStatus('current')
cbsModuleCPUAvgUtilCore3Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore3Syst.setStatus('current')
cbsModuleCPUAvgUtilCore3Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore3Idle.setStatus('current')
cbsModuleCPUAvgUtilCore3IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore3IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore3SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore3SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore3IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore3IOWait.setStatus('current')
cbsModuleCPUAvgUtilCore4User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore4User.setStatus('current')
cbsModuleCPUAvgUtilCore4Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore4Nice.setStatus('current')
cbsModuleCPUAvgUtilCore4Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore4Syst.setStatus('current')
cbsModuleCPUAvgUtilCore4Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore4Idle.setStatus('current')
cbsModuleCPUAvgUtilCore4IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore4IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore4SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore4SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore4IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore4IOWait.setStatus('current')
cbsModuleCPUAvgUtilCore5User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore5User.setStatus('current')
cbsModuleCPUAvgUtilCore5Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore5Nice.setStatus('current')
cbsModuleCPUAvgUtilCore5Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore5Syst.setStatus('current')
cbsModuleCPUAvgUtilCore5Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore5Idle.setStatus('current')
cbsModuleCPUAvgUtilCore5IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore5IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore5SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore5SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore5IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore5IOWait.setStatus('current')
cbsModuleCPUAvgUtilCore6User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore6User.setStatus('current')
cbsModuleCPUAvgUtilCore6Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore6Nice.setStatus('current')
cbsModuleCPUAvgUtilCore6Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore6Syst.setStatus('current')
cbsModuleCPUAvgUtilCore6Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore6Idle.setStatus('current')
cbsModuleCPUAvgUtilCore6IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore6IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore6SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore6SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore6IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore6IOWait.setStatus('current')
cbsModuleCPUAvgUtilCore7User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore7User.setStatus('current')
cbsModuleCPUAvgUtilCore7Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore7Nice.setStatus('current')
cbsModuleCPUAvgUtilCore7Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore7Syst.setStatus('current')
cbsModuleCPUAvgUtilCore7Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore7Idle.setStatus('current')
cbsModuleCPUAvgUtilCore7IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore7IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore7SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore7SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore7IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore7IOWait.setStatus('current')
cbsModuleCPUAvgUtilCore8User = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore8User.setStatus('current')
cbsModuleCPUAvgUtilCore8Nice = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore8Nice.setStatus('current')
cbsModuleCPUAvgUtilCore8Syst = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore8Syst.setStatus('current')
cbsModuleCPUAvgUtilCore8Idle = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore8Idle.setStatus('current')
cbsModuleCPUAvgUtilCore8IRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore8IRQ.setStatus('current')
cbsModuleCPUAvgUtilCore8SoftIRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore8SoftIRQ.setStatus('current')
cbsModuleCPUAvgUtilCore8IOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 6, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCPUAvgUtilCore8IOWait.setStatus('current')
cbsModuleSDPTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7), )
if mibBuilder.loadTexts: cbsModuleSDPTable.setStatus('current')
cbsModuleSDPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleSDPEntry.setStatus('current')
cbsModuleSDP0OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP0OutPkts.setStatus('current')
cbsModuleSDP0OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP0OutOctets.setStatus('current')
cbsModuleSDP0InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP0InPkts.setStatus('current')
cbsModuleSDP0InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP0InOctets.setStatus('current')
cbsModuleSDP1OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP1OutPkts.setStatus('current')
cbsModuleSDP1OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP1OutOctets.setStatus('current')
cbsModuleSDP1InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP1InPkts.setStatus('current')
cbsModuleSDP1InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP1InOctets.setStatus('current')
cbsModuleSDP2OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP2OutPkts.setStatus('current')
cbsModuleSDP2OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP2OutOctets.setStatus('current')
cbsModuleSDP2InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP2InPkts.setStatus('current')
cbsModuleSDP2InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP2InOctets.setStatus('current')
cbsModuleSDP3OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP3OutPkts.setStatus('current')
cbsModuleSDP3OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP3OutOctets.setStatus('current')
cbsModuleSDP3InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP3InPkts.setStatus('current')
cbsModuleSDP3InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP3InOctets.setStatus('current')
cbsModuleSDP4OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP4OutPkts.setStatus('current')
cbsModuleSDP4OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP4OutOctets.setStatus('current')
cbsModuleSDP4InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP4InPkts.setStatus('current')
cbsModuleSDP4InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP4InOctets.setStatus('current')
cbsModuleSDP5OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP5OutPkts.setStatus('current')
cbsModuleSDP5OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP5OutOctets.setStatus('current')
cbsModuleSDP5InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP5InPkts.setStatus('current')
cbsModuleSDP5InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP5InOctets.setStatus('current')
cbsModuleSDP6OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP6OutPkts.setStatus('current')
cbsModuleSDP6OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP6OutOctets.setStatus('current')
cbsModuleSDP6InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP6InPkts.setStatus('current')
cbsModuleSDP6InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP6InOctets.setStatus('current')
cbsModuleSDP7OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP7OutPkts.setStatus('current')
cbsModuleSDP7OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP7OutOctets.setStatus('current')
cbsModuleSDP7InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP7InPkts.setStatus('current')
cbsModuleSDP7InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 7, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSDP7InOctets.setStatus('current')
cbsModuleUptimeTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 8), )
if mibBuilder.loadTexts: cbsModuleUptimeTable.setStatus('current')
cbsModuleUptimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 8, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleUptimeEntry.setStatus('current')
cbsModuleUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 8, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleUptime.setStatus('current')
cbsModuleNPMFlowCountTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 9), )
if mibBuilder.loadTexts: cbsModuleNPMFlowCountTable.setStatus('current')
cbsModuleNPMFlowCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 9, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleNPMFlowCountEntry.setStatus('current')
cbsModuleNPMFlowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleNPMFlowCount.setStatus('current')
cbsModuleAppMonTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10), )
if mibBuilder.loadTexts: cbsModuleAppMonTable.setStatus('current')
cbsModuleAppMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleAppMonEntry.setStatus('current')
cbsModuleAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleAppName.setStatus('current')
cbsModuleAppVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleAppVersion.setStatus('current')
cbsModuleAppRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleAppRelease.setStatus('current')
cbsModuleAppCPMHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 4), DisplayString())
if mibBuilder.loadTexts: cbsModuleAppCPMHostName.setStatus('current')
cbsModuleAppCPMIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 5), DisplayString())
if mibBuilder.loadTexts: cbsModuleAppCPMIPAddress.setStatus('current')
cbsModuleAppVAPGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleAppVAPGroupName.setStatus('current')
cbsModuleAppVAPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleAppVAPIndex.setStatus('current')
cbsModuleAppOldState = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleAppOldState.setStatus('current')
cbsModuleAppNewState = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleAppNewState.setStatus('current')
cbsModuleRSWName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWName.setStatus('current')
cbsModuleRSWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWVersion.setStatus('current')
cbsModuleRSWRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWRelease.setStatus('current')
cbsModuleRSWStartOnBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWStartOnBoot.setStatus('current')
cbsModuleRSWCPMHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 14), DisplayString())
if mibBuilder.loadTexts: cbsModuleRSWCPMHostName.setStatus('current')
cbsModuleRSWCPMIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 15), DisplayString())
if mibBuilder.loadTexts: cbsModuleRSWCPMIPAddress.setStatus('current')
cbsModuleRSWVAPGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWVAPGroupName.setStatus('current')
cbsModuleRSWVAPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWVAPIndex.setStatus('current')
cbsModuleRSWOldState = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWOldState.setStatus('current')
cbsModuleRSWNewState = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 10, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleRSWNewState.setStatus('current')
cbsModuleNtpdMonTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 11), )
if mibBuilder.loadTexts: cbsModuleNtpdMonTable.setStatus('current')
cbsModuleNtpdMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 11, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleNtpdMonEntry.setStatus('current')
cbsModuleNtpdCPMHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 11, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleNtpdCPMHostName.setStatus('current')
cbsModuleNtpdCPMIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleNtpdCPMIPAddress.setStatus('current')
cbsModuleNtpdState = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleNtpdState.setStatus('current')
cbsModuleCpuCoreHiUtilTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 12), )
if mibBuilder.loadTexts: cbsModuleCpuCoreHiUtilTable.setStatus('current')
cbsModuleCpuCoreHiUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 12, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleCpuCoreHiUtilEntry.setStatus('current')
cbsModuleCpuCoreHiUtilSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 12, 1, 1), UtilSeverityLvl()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCpuCoreHiUtilSeverity.setStatus('current')
cbsModuleCpuCoreHiUtilPerc = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCpuCoreHiUtilPerc.setStatus('current')
cbsModuleCpuCoreHiUtilCores = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 12, 1, 3), Bits().clone(namedValues=NamedValues(("core7", 0), ("core6", 1), ("core5", 2), ("core4", 3), ("core3", 4), ("core2", 5), ("core1", 6), ("core0", 7), ("core15", 8), ("core14", 9), ("core13", 10), ("core12", 11), ("core11", 12), ("core10", 13), ("core9", 14), ("core8", 15), ("core23", 16), ("core22", 17), ("core21", 18), ("core20", 19), ("core19", 20), ("core18", 21), ("core17", 22), ("core16", 23), ("core31", 24), ("core30", 25), ("core29", 26), ("core28", 27), ("core27", 28), ("core26", 29), ("core25", 30), ("core24", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCpuCoreHiUtilCores.setStatus('current')
cbsModuleCpuCoreHiUtilDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleCpuCoreHiUtilDuration.setStatus('current')
cbsNpmFlowTableUtilTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13), )
if mibBuilder.loadTexts: cbsNpmFlowTableUtilTable.setStatus('current')
cbsNpmFlowTableUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsNpmFlowTableUtilEntry.setStatus('current')
cbsNpmFTUtilSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 1), UtilSeverityLvl()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTUtilSeverity.setStatus('current')
cbsNpmFTTriggerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTTriggerThreshold.setStatus('current')
cbsNpmFTUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTUsage.setStatus('current')
cbsNpmFTUdpLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTUdpLimitThreshold.setStatus('current')
cbsNpmFTUdpMedianThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTUdpMedianThreshold.setStatus('current')
cbsNpmFTUdpQuotaUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTUdpQuotaUsage.setStatus('current')
cbsNpmFTTcpLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTTcpLimitThreshold.setStatus('current')
cbsNpmFTTcpMedianThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTTcpMedianThreshold.setStatus('current')
cbsNpmFTTcpQuotaUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTTcpQuotaUsage.setStatus('current')
cbsNpmFTIcmpLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTIcmpLimitThreshold.setStatus('current')
cbsNpmFTIcmpMedianThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTIcmpMedianThreshold.setStatus('current')
cbsNpmFTIcmpQuotaUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTIcmpQuotaUsage.setStatus('current')
cbsNpmFTOtherIpLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTOtherIpLimitThreshold.setStatus('current')
cbsNpmFTOtherIpMedianThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTOtherIpMedianThreshold.setStatus('current')
cbsNpmFTOtherIpQuotaUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 13, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmFTOtherIpQuotaUsage.setStatus('current')
cbsModuleSdramMemCfgStatTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 14), )
if mibBuilder.loadTexts: cbsModuleSdramMemCfgStatTable.setStatus('current')
cbsModuleSdramMemCfgStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 14, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleSdramMemCfgStatEntry.setStatus('current')
cbsModuleSdramMemCfgStat = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 14, 1, 1), BadSdramMemCfgStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleSdramMemCfgStat.setStatus('current')
cbsModuleGuestHealthTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 15), )
if mibBuilder.loadTexts: cbsModuleGuestHealthTable.setStatus('current')
cbsModuleGuestHealthTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 15, 1), ).setIndexNames((0, "CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleGuestHealthTableEntry.setStatus('current')
cbsApmGuestHealthSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 15, 1, 1), GuestHealthSeverityLvl()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsApmGuestHealthSeverity.setStatus('current')
cbsCpmDiskCfgStat = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 16), BadDiskCfgStat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsCpmDiskCfgStat.setStatus('current')
cbsModuleApplicationTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 17), )
if mibBuilder.loadTexts: cbsModuleApplicationTable.setStatus('current')
cbsModuleApplicationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 17, 1), ).setIndexNames((0, "CBS-VAPGROUP-MIB", "cbsVgVapGroupID"))
if mibBuilder.loadTexts: cbsModuleApplicationEntry.setStatus('current')
cbsModuleApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 17, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleApplicationName.setStatus('current')
cbsModuleApplicationVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 17, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleApplicationVersion.setStatus('current')
cbsModuleApplicationRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 17, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleApplicationRelease.setStatus('current')
cbsModuleApplicationMonEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 17, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleApplicationMonEnabled.setStatus('current')
cbsModuleApplicationVgName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 17, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsModuleApplicationVgName.setStatus('current')
cbsFlowTablePartitionThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsFlowTablePartitionThreshold.setStatus('current')
cbsFlowTableCriticalAlarm = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsFlowTableCriticalAlarm.setStatus('current')
cbsFlowTableUtilization = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsFlowTableUtilization.setStatus('current')
cbsFlowTableUtilTcpFlowEntries = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsFlowTableUtilTcpFlowEntries.setStatus('current')
cbsFlowTableUtilUdpFlowEntries = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsFlowTableUtilUdpFlowEntries.setStatus('current')
cbsFlowTableUtilIcmpFlowEntries = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsFlowTableUtilIcmpFlowEntries.setStatus('current')
cbsFlowTableUtilOtherIpFlowEntries = MibScalar((1, 3, 6, 1, 4, 1, 6848, 2, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsFlowTableUtilOtherIpFlowEntries.setStatus('current')
cbsNpmFlowDistTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25), )
if mibBuilder.loadTexts: cbsNpmFlowDistTable.setStatus('current')
cbsNpmFlowDistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1), ).setIndexNames((0, "CBS-MODULE-RESOURCES-MIB", "cbsNpmSlotId"))
if mibBuilder.loadTexts: cbsNpmFlowDistEntry.setStatus('current')
cbsNpmSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmSlotId.setStatus('current')
cbsNpmTcpCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmTcpCurrentFlows.setStatus('current')
cbsNpmUdpCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmUdpCurrentFlows.setStatus('current')
cbsNpmIcmpCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmIcmpCurrentFlows.setStatus('current')
cbsNpmOtherIpCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmOtherIpCurrentFlows.setStatus('current')
cbsNpmNewFlowRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmNewFlowRate.setStatus('current')
cbsNpmAgedFlowRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 25, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsNpmAgedFlowRate.setStatus('current')
cbsVapFlowDistTable = MibTable((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26), )
if mibBuilder.loadTexts: cbsVapFlowDistTable.setStatus('current')
cbsVapFlowDistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26, 1), ).setIndexNames((0, "CBS-MODULE-RESOURCES-MIB", "cbsVapFlowGroupID"), (0, "CBS-MODULE-RESOURCES-MIB", "cbsVapFlowIndex"))
if mibBuilder.loadTexts: cbsVapFlowDistEntry.setStatus('current')
cbsVapFlowGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsVapFlowGroupID.setStatus('current')
cbsVapFlowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsVapFlowIndex.setStatus('current')
cbsVapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsVapName.setStatus('current')
cbsVapCurrentFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsVapCurrentFlows.setStatus('current')
cbsVapNewFlowRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsVapNewFlowRate.setStatus('current')
cbsVapAgedFlowRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6848, 2, 3, 26, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbsVapAgedFlowRate.setStatus('current')
cbsModuleCPULoadExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 1)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleCPULoad1"))
if mibBuilder.loadTexts: cbsModuleCPULoadExceeded.setStatus('obsolete')
cbsModuleCPULoadNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 2)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleCPULoad1"))
if mibBuilder.loadTexts: cbsModuleCPULoadNormal.setStatus('obsolete')
cbsModuleMemoryUsageExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 3)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleMemoryTotal"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleMemoryUsed"))
if mibBuilder.loadTexts: cbsModuleMemoryUsageExceeded.setStatus('obsolete')
cbsModuleMemoryUsageNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 4)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleMemoryTotal"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleMemoryUsed"))
if mibBuilder.loadTexts: cbsModuleMemoryUsageNormal.setStatus('obsolete')
cbsModuleCPUUtilExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 5)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleCPUUtil1"))
if mibBuilder.loadTexts: cbsModuleCPUUtilExceeded.setStatus('current')
cbsModuleCPUUtilNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 6)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleCPUUtil1"))
if mibBuilder.loadTexts: cbsModuleCPUUtilNormal.setStatus('current')
cbsModuleDURootHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 7)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDURoot"))
if mibBuilder.loadTexts: cbsModuleDURootHigh.setStatus('current')
cbsModuleDURootNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 8)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDURoot"))
if mibBuilder.loadTexts: cbsModuleDURootNormal.setStatus('current')
cbsModuleDUBootHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 9)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUBoot"))
if mibBuilder.loadTexts: cbsModuleDUBootHigh.setStatus('current')
cbsModuleDUBootNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 10)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUBoot"))
if mibBuilder.loadTexts: cbsModuleDUBootNormal.setStatus('current')
cbsModuleDUCbconfigHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 11)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUCbconfig"))
if mibBuilder.loadTexts: cbsModuleDUCbconfigHigh.setStatus('current')
cbsModuleDUCbconfigNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 12)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUCbconfig"))
if mibBuilder.loadTexts: cbsModuleDUCbconfigNormal.setStatus('current')
cbsModuleDUTftpbootHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 13)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUTftpboot"))
if mibBuilder.loadTexts: cbsModuleDUTftpbootHigh.setStatus('current')
cbsModuleDUTftpbootNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 14)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUTftpboot"))
if mibBuilder.loadTexts: cbsModuleDUTftpbootNormal.setStatus('current')
cbsModuleFreePageAvailableHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 15)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageAvailable"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageThreshold"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageVapName"))
if mibBuilder.loadTexts: cbsModuleFreePageAvailableHigh.setStatus('current')
cbsModuleFreePageAvailableNorm = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 16)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageAvailable"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageThreshold"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleFreePageVapName"))
if mibBuilder.loadTexts: cbsModuleFreePageAvailableNorm.setStatus('current')
cbsModuleMUHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 17)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleMUHigh.setStatus('current')
cbsModuleMUNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 18)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleMUNormal.setStatus('current')
cbsModuleFRHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 19)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleFRHigh.setStatus('current')
cbsModuleFRNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 20)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleFRNormal.setStatus('current')
cbsModuleBUHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 21)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleBUHigh.setStatus('current')
cbsModuleBUNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 22)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"))
if mibBuilder.loadTexts: cbsModuleBUNormal.setStatus('current')
cbsModuleAppStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 23)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppName"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppVersion"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppRelease"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppCPMHostName"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppCPMIPAddress"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppVAPGroupName"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppVAPIndex"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppOldState"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleAppNewState"))
if mibBuilder.loadTexts: cbsModuleAppStateChange.setStatus('current')
cbsModuleNtpdMonStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 24)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleNtpdCPMHostName"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleNtpdCPMIPAddress"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleNtpdState"))
if mibBuilder.loadTexts: cbsModuleNtpdMonStateChange.setStatus('current')
cbsModuleDUMgmtHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 25)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUMgmt"))
if mibBuilder.loadTexts: cbsModuleDUMgmtHigh.setStatus('current')
cbsModuleDUMgmtNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 26)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUMgmt"))
if mibBuilder.loadTexts: cbsModuleDUMgmtNormal.setStatus('current')
cbsModuleCpuCoreUtilExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 27)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleCpuCoreHiUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleCpuCoreHiUtilPerc"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleCpuCoreHiUtilDuration"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleCpuCoreHiUtilCores"))
if mibBuilder.loadTexts: cbsModuleCpuCoreUtilExceeded.setStatus('current')
cbsModuleCpuCoreUtilNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 28)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleCpuCoreHiUtilPerc"))
if mibBuilder.loadTexts: cbsModuleCpuCoreUtilNormal.setStatus('current')
cbsNpmFlowTableUsageHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 29)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTTriggerThreshold"))
if mibBuilder.loadTexts: cbsNpmFlowTableUsageHigh.setStatus('current')
cbsNpmFlowTableUsageNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 30))
if mibBuilder.loadTexts: cbsNpmFlowTableUsageNormal.setStatus('current')
cbsNpmFTUdpLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 31)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUdpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTUdpLimitExceeded.setStatus('current')
cbsNpmFTUdpLimitNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 32))
if mibBuilder.loadTexts: cbsNpmFTUdpLimitNormal.setStatus('current')
cbsNpmFTUdpMedianExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 33)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUdpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTUdpMedianExceeded.setStatus('current')
cbsNpmFTUdpMedianNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 34))
if mibBuilder.loadTexts: cbsNpmFTUdpMedianNormal.setStatus('current')
cbsNpmFTTcpLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 35)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTTcpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTTcpLimitExceeded.setStatus('current')
cbsNpmFTTcpLimitNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 36))
if mibBuilder.loadTexts: cbsNpmFTTcpLimitNormal.setStatus('current')
cbsNpmFTTcpMedianExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 37)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTTcpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTTcpMedianExceeded.setStatus('current')
cbsNpmFTTcpMedianNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 38))
if mibBuilder.loadTexts: cbsNpmFTTcpMedianNormal.setStatus('current')
cbsNpmFTIcmpLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 39)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTIcmpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTIcmpLimitExceeded.setStatus('current')
cbsNpmFTIcmpLimitNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 40))
if mibBuilder.loadTexts: cbsNpmFTIcmpLimitNormal.setStatus('current')
cbsNpmFTIcmpMedianExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 41)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTIcmpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTIcmpMedianExceeded.setStatus('current')
cbsNpmFTIcmpMedianNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 42))
if mibBuilder.loadTexts: cbsNpmFTIcmpMedianNormal.setStatus('current')
cbsNpmFTOtherIpLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 43)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTOtherIpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTOtherIpLimitExceeded.setStatus('current')
cbsNpmFTOtherIpLimitNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 44))
if mibBuilder.loadTexts: cbsNpmFTOtherIpLimitNormal.setStatus('current')
cbsNpmFTOtherIpMedianExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 45)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTUtilSeverity"), ("CBS-MODULE-RESOURCES-MIB", "cbsNpmFTOtherIpLimitThreshold"))
if mibBuilder.loadTexts: cbsNpmFTOtherIpMedianExceeded.setStatus('current')
cbsNpmFTOtherIpMedianNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 46))
if mibBuilder.loadTexts: cbsNpmFTOtherIpMedianNormal.setStatus('current')
cbsModuleSdramCheck = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 47)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleSdramMemCfgStat"))
if mibBuilder.loadTexts: cbsModuleSdramCheck.setStatus('current')
cbsApmGuestHealthCheck = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 48)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsApmGuestHealthSeverity"))
if mibBuilder.loadTexts: cbsApmGuestHealthCheck.setStatus('current')
cbsCpmDiskCheck = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 49)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsCpmDiskCfgStat"))
if mibBuilder.loadTexts: cbsCpmDiskCheck.setStatus('current')
cbsModuleDUVarHigh = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 50)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUVar"))
if mibBuilder.loadTexts: cbsModuleDUVarHigh.setStatus('current')
cbsModuleDUVarNormal = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 51)).setObjects(("CBS-MODULE-RESOURCES-MIB", "cbsModuleDUVar"))
if mibBuilder.loadTexts: cbsModuleDUVarNormal.setStatus('current')
cbsModuleRSWStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6848, 4, 2, 52)).setObjects(("CBS-HARDWARE-MIB", "cbsHwModuleID"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWName"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWVersion"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWRelease"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWStartOnBoot"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWCPMHostName"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWCPMIPAddress"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWVAPGroupName"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWVAPIndex"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWOldState"), ("CBS-MODULE-RESOURCES-MIB", "cbsModuleRSWNewState"))
if mibBuilder.loadTexts: cbsModuleRSWStateChange.setStatus('current')
mibBuilder.exportSymbols("CBS-MODULE-RESOURCES-MIB", cbsModuleCPUAvgUtilCore4Idle=cbsModuleCPUAvgUtilCore4Idle, cbsModuleSDP1InOctets=cbsModuleSDP1InOctets, cbsModuleDUVar=cbsModuleDUVar, cbsModuleResources=cbsModuleResources, cbsModuleNPMFlowCountEntry=cbsModuleNPMFlowCountEntry, cbsNpmTcpCurrentFlows=cbsNpmTcpCurrentFlows, cbsModuleFreePageAvailableNorm=cbsModuleFreePageAvailableNorm, cbsNpmFTTcpMedianExceeded=cbsNpmFTTcpMedianExceeded, cbsNpmFTTcpLimitExceeded=cbsNpmFTTcpLimitExceeded, cbsModuleSDPTable=cbsModuleSDPTable, cbsModuleCpuCoreHiUtilTable=cbsModuleCpuCoreHiUtilTable, cbsModuleNtpdMonStateChange=cbsModuleNtpdMonStateChange, cbsModuleSDP0OutPkts=cbsModuleSDP0OutPkts, cbsModuleCpuCoreHiUtilPerc=cbsModuleCpuCoreHiUtilPerc, cbsModuleDUBootNormal=cbsModuleDUBootNormal, cbsModuleFreePageEntry=cbsModuleFreePageEntry, cbsModuleRSWStartOnBoot=cbsModuleRSWStartOnBoot, cbsNpmFTIcmpLimitNormal=cbsNpmFTIcmpLimitNormal, cbsModuleApplicationRelease=cbsModuleApplicationRelease, cbsFlowTablePartitionThreshold=cbsFlowTablePartitionThreshold, cbsModuleAppVAPIndex=cbsModuleAppVAPIndex, cbsModuleCPUAvgUtilCore5Nice=cbsModuleCPUAvgUtilCore5Nice, BadSdramMemCfgStat=BadSdramMemCfgStat, cbsNpmFTIcmpMedianExceeded=cbsNpmFTIcmpMedianExceeded, cbsModuleCPUAvgUtilCore2IOWait=cbsModuleCPUAvgUtilCore2IOWait, cbsModuleSDP5OutPkts=cbsModuleSDP5OutPkts, cbsModuleSDP3InOctets=cbsModuleSDP3InOctets, cbsModuleCPUAvgUtilCore3User=cbsModuleCPUAvgUtilCore3User, cbsModuleCPULoad5=cbsModuleCPULoad5, cbsModuleSwapEntry=cbsModuleSwapEntry, cbsModuleNtpdCPMHostName=cbsModuleNtpdCPMHostName, cbsModuleCPUAvgUtilCore3IRQ=cbsModuleCPUAvgUtilCore3IRQ, cbsModuleDUTftpboot=cbsModuleDUTftpboot, cbsFlowTableUtilization=cbsFlowTableUtilization, cbsModuleCpuCoreHiUtilCores=cbsModuleCpuCoreHiUtilCores, cbsModuleSDP0InOctets=cbsModuleSDP0InOctets, cbsModuleMemoryUsageNormal=cbsModuleMemoryUsageNormal, cbsModuleCPUUtil1=cbsModuleCPUUtil1, cbsModuleDUVarHigh=cbsModuleDUVarHigh, cbsModuleMemoryTotalReal=cbsModuleMemoryTotalReal, cbsModuleDUTable=cbsModuleDUTable, cbsModuleMemoryTotalFree=cbsModuleMemoryTotalFree, cbsModuleDUTftpbootNormal=cbsModuleDUTftpbootNormal, cbsModuleApplicationName=cbsModuleApplicationName, cbsModuleSDP3InPkts=cbsModuleSDP3InPkts, cbsFlowTableUtilUdpFlowEntries=cbsFlowTableUtilUdpFlowEntries, cbsModuleRSWCPMHostName=cbsModuleRSWCPMHostName, cbsModuleCPUAvgUtilCore6Syst=cbsModuleCPUAvgUtilCore6Syst, cbsVapFlowDistEntry=cbsVapFlowDistEntry, cbsModuleSwapTotal=cbsModuleSwapTotal, cbsModuleSDP4OutPkts=cbsModuleSDP4OutPkts, cbsNpmFlowTableUsageNormal=cbsNpmFlowTableUsageNormal, cbsModuleMemoryHiTotal=cbsModuleMemoryHiTotal, cbsModuleFreePageThreshold=cbsModuleFreePageThreshold, cbsModuleMemoryUsageExceeded=cbsModuleMemoryUsageExceeded, cbsModuleCPUAvgUtilCore7Syst=cbsModuleCPUAvgUtilCore7Syst, cbsModuleCPUUtil15=cbsModuleCPUUtil15, cbsModuleCpuCoreHiUtilEntry=cbsModuleCpuCoreHiUtilEntry, cbsModuleNtpdState=cbsModuleNtpdState, cbsModuleCPUAvgUtilCore3Idle=cbsModuleCPUAvgUtilCore3Idle, cbsModuleSDP6OutPkts=cbsModuleSDP6OutPkts, cbsModuleNtpdMonEntry=cbsModuleNtpdMonEntry, cbsModuleDUMgmtNormal=cbsModuleDUMgmtNormal, cbsModuleAppVAPGroupName=cbsModuleAppVAPGroupName, cbsModuleCPUAvgUtilCore4Nice=cbsModuleCPUAvgUtilCore4Nice, cbsModuleUptimeTable=cbsModuleUptimeTable, cbsNpmFTOtherIpMedianNormal=cbsNpmFTOtherIpMedianNormal, cbsModuleDUVarNormal=cbsModuleDUVarNormal, cbsModuleMemoryLoTotal=cbsModuleMemoryLoTotal, cbsModuleCPUAvgUtilCore5User=cbsModuleCPUAvgUtilCore5User, cbsModuleDURoot=cbsModuleDURoot, cbsModuleCPUAvgUtilCore4SoftIRQ=cbsModuleCPUAvgUtilCore4SoftIRQ, cbsNpmSlotId=cbsNpmSlotId, cbsModuleAppNewState=cbsModuleAppNewState, cbsModuleFRNormal=cbsModuleFRNormal, cbsNpmFTUdpLimitExceeded=cbsNpmFTUdpLimitExceeded, cbsModuleResourceTraps=cbsModuleResourceTraps, cbsNpmFTIcmpLimitThreshold=cbsNpmFTIcmpLimitThreshold, cbsFlowTableCriticalAlarm=cbsFlowTableCriticalAlarm, cbsModuleCPUAvgUtilCore3SoftIRQ=cbsModuleCPUAvgUtilCore3SoftIRQ, cbsModuleSDP7OutPkts=cbsModuleSDP7OutPkts, cbsNpmFlowDistEntry=cbsNpmFlowDistEntry, cbsModuleMemoryShared=cbsModuleMemoryShared, cbsModuleCPUAvgUtilCore5IOWait=cbsModuleCPUAvgUtilCore5IOWait, cbsModuleCPUAvgUtilCore8Syst=cbsModuleCPUAvgUtilCore8Syst, cbsModuleCPUAvgUtilCore8IOWait=cbsModuleCPUAvgUtilCore8IOWait, cbsModuleSDP0OutOctets=cbsModuleSDP0OutOctets, cbsModuleDUMgmt=cbsModuleDUMgmt, cbsModuleCPUAvgUtilCore6IOWait=cbsModuleCPUAvgUtilCore6IOWait, cbsCpmDiskCfgStat=cbsCpmDiskCfgStat, cbsModuleDUBoot=cbsModuleDUBoot, cbsModuleSDP7InOctets=cbsModuleSDP7InOctets, cbsModuleCPULoad1=cbsModuleCPULoad1, cbsNpmFTTriggerThreshold=cbsNpmFTTriggerThreshold, cbsModuleCPUAvgUtilCore6Nice=cbsModuleCPUAvgUtilCore6Nice, cbsVapAgedFlowRate=cbsVapAgedFlowRate, cbsModuleCPUAvgUtilEntry=cbsModuleCPUAvgUtilEntry, cbsModuleNPMFlowCount=cbsModuleNPMFlowCount, cbsNpmFTIcmpLimitExceeded=cbsNpmFTIcmpLimitExceeded, cbsModuleSwapUsed=cbsModuleSwapUsed, cbsModuleAppStateChange=cbsModuleAppStateChange, cbsVapFlowIndex=cbsVapFlowIndex, cbsModuleCpuCoreUtilNormal=cbsModuleCpuCoreUtilNormal, cbsModuleCPUAvgUtilTable=cbsModuleCPUAvgUtilTable, cbsNpmFlowTableUsageHigh=cbsNpmFlowTableUsageHigh, cbsModuleCPUAvgUtilCore4IOWait=cbsModuleCPUAvgUtilCore4IOWait, cbsModuleSDP2OutOctets=cbsModuleSDP2OutOctets, cbsModuleNtpdCPMIPAddress=cbsModuleNtpdCPMIPAddress, cbsNpmFTTcpMedianNormal=cbsNpmFTTcpMedianNormal, cbsNpmFTOtherIpLimitNormal=cbsNpmFTOtherIpLimitNormal, cbsModuleDUCbconfigNormal=cbsModuleDUCbconfigNormal, cbsModuleCPULoadTable=cbsModuleCPULoadTable, cbsModuleSDP6InPkts=cbsModuleSDP6InPkts, cbsFlowTableUtilIcmpFlowEntries=cbsFlowTableUtilIcmpFlowEntries, cbsModuleCPULoadNormal=cbsModuleCPULoadNormal, cbsModuleBUNormal=cbsModuleBUNormal, cbsNpmFTIcmpMedianThreshold=cbsNpmFTIcmpMedianThreshold, cbsModuleMemoryBuffer=cbsModuleMemoryBuffer, cbsModuleCpuCoreUtilExceeded=cbsModuleCpuCoreUtilExceeded, cbsNpmFTOtherIpMedianExceeded=cbsNpmFTOtherIpMedianExceeded, cbsModuleDUCbconfigHigh=cbsModuleDUCbconfigHigh, cbsModuleCPUUtil5=cbsModuleCPUUtil5, cbsModuleDUMgmtHigh=cbsModuleDUMgmtHigh, cbsCpmDiskCheck=cbsCpmDiskCheck, cbsModuleCPUUtilNormal=cbsModuleCPUUtilNormal, cbsModuleMemoryHiFree=cbsModuleMemoryHiFree, cbsModuleDUBootHigh=cbsModuleDUBootHigh, cbsModuleCPUAvgUtilCore2Idle=cbsModuleCPUAvgUtilCore2Idle, cbsModuleSDP2OutPkts=cbsModuleSDP2OutPkts, cbsModuleAppOldState=cbsModuleAppOldState, cbsModuleAppRelease=cbsModuleAppRelease, cbsModuleRSWCPMIPAddress=cbsModuleRSWCPMIPAddress, cbsNpmFTOtherIpQuotaUsage=cbsNpmFTOtherIpQuotaUsage, cbsModuleApplicationVersion=cbsModuleApplicationVersion, cbsNpmFTOtherIpLimitThreshold=cbsNpmFTOtherIpLimitThreshold, cbsModuleCPUAvgUtilCore1User=cbsModuleCPUAvgUtilCore1User, BadDiskCfgStat=BadDiskCfgStat, cbsModuleCPUAvgUtilCore1Idle=cbsModuleCPUAvgUtilCore1Idle, cbsModuleSDP3OutPkts=cbsModuleSDP3OutPkts, cbsModuleSDP4InPkts=cbsModuleSDP4InPkts, cbsModuleSDP5OutOctets=cbsModuleSDP5OutOctets, cbsNpmFTUdpLimitThreshold=cbsNpmFTUdpLimitThreshold, cbsNpmFTTcpQuotaUsage=cbsNpmFTTcpQuotaUsage, cbsModuleBUHigh=cbsModuleBUHigh, cbsNpmFTIcmpMedianNormal=cbsNpmFTIcmpMedianNormal, cbsModuleCPUAvgUtilCore4Syst=cbsModuleCPUAvgUtilCore4Syst, cbsModuleRSWStateChange=cbsModuleRSWStateChange, cbsModuleSwapFree=cbsModuleSwapFree, cbsModuleSdramMemCfgStat=cbsModuleSdramMemCfgStat, cbsNpmFTUdpQuotaUsage=cbsNpmFTUdpQuotaUsage, cbsModuleCPUAvgUtilCore5IRQ=cbsModuleCPUAvgUtilCore5IRQ, cbsModuleCPUAvgUtilCore7Idle=cbsModuleCPUAvgUtilCore7Idle, cbsModuleMUHigh=cbsModuleMUHigh, cbsModuleSDP7InPkts=cbsModuleSDP7InPkts, cbsModuleFreePageAvailable=cbsModuleFreePageAvailable, cbsModuleSDP5InOctets=cbsModuleSDP5InOctets, cbsModuleRSWVAPIndex=cbsModuleRSWVAPIndex, cbsModuleCPUAvgUtilCore6SoftIRQ=cbsModuleCPUAvgUtilCore6SoftIRQ, cbsModuleGuestHealthTable=cbsModuleGuestHealthTable, cbsNpmIcmpCurrentFlows=cbsNpmIcmpCurrentFlows, cbsModuleRSWVAPGroupName=cbsModuleRSWVAPGroupName, cbsModuleApplicationEntry=cbsModuleApplicationEntry, cbsFlowTableUtilOtherIpFlowEntries=cbsFlowTableUtilOtherIpFlowEntries, cbsModuleCPULoadExceeded=cbsModuleCPULoadExceeded, cbsVapFlowGroupID=cbsVapFlowGroupID, cbsModuleFreePageSeverity=cbsModuleFreePageSeverity, cbsNpmUdpCurrentFlows=cbsNpmUdpCurrentFlows, cbsModuleCPUAvgUtilCore8SoftIRQ=cbsModuleCPUAvgUtilCore8SoftIRQ, cbsModuleCPUAvgUtilCore1IOWait=cbsModuleCPUAvgUtilCore1IOWait, cbsNpmFlowTableUtilEntry=cbsNpmFlowTableUtilEntry, cbsNpmFTUsage=cbsNpmFTUsage, GuestHealthSeverityLvl=GuestHealthSeverityLvl, cbsModuleSdramMemCfgStatTable=cbsModuleSdramMemCfgStatTable, cbsNpmOtherIpCurrentFlows=cbsNpmOtherIpCurrentFlows, cbsModuleMemoryFree=cbsModuleMemoryFree, cbsModuleSDP4OutOctets=cbsModuleSDP4OutOctets, cbsModuleCPUAvgUtilCore7Nice=cbsModuleCPUAvgUtilCore7Nice, cbsModuleMemoryTotalSwap=cbsModuleMemoryTotalSwap, cbsModuleCPUAvgUtilCore7IRQ=cbsModuleCPUAvgUtilCore7IRQ, cbsModuleSDP7OutOctets=cbsModuleSDP7OutOctets, cbsModuleFRHigh=cbsModuleFRHigh, cbsModuleCPUAvgUtilCore2User=cbsModuleCPUAvgUtilCore2User, cbsModuleSDP2InPkts=cbsModuleSDP2InPkts, cbsNpmFlowTableUtilTable=cbsNpmFlowTableUtilTable, cbsModuleCPUAvgUtilCore6Idle=cbsModuleCPUAvgUtilCore6Idle, PYSNMP_MODULE_ID=cbsModuleResourcesMIB, cbsModuleCPUAvgUtilCore6IRQ=cbsModuleCPUAvgUtilCore6IRQ, cbsModuleCPUAvgUtilCore8IRQ=cbsModuleCPUAvgUtilCore8IRQ, cbsModuleCPUAvgUtilCore1SoftIRQ=cbsModuleCPUAvgUtilCore1SoftIRQ, cbsModuleCPUAvgUtilCore3Syst=cbsModuleCPUAvgUtilCore3Syst, cbsModuleMemoryAvailReal=cbsModuleMemoryAvailReal, cbsModuleCPUAvgUtilCore7User=cbsModuleCPUAvgUtilCore7User, cbsModuleSDP1InPkts=cbsModuleSDP1InPkts, cbsModuleCPUAvgUtilCore2SoftIRQ=cbsModuleCPUAvgUtilCore2SoftIRQ, cbsModuleResourcesMIB=cbsModuleResourcesMIB, cbsModuleAppName=cbsModuleAppName, cbsModuleSDP5InPkts=cbsModuleSDP5InPkts, cbsNpmFTIcmpQuotaUsage=cbsNpmFTIcmpQuotaUsage, cbsModuleFreePageVapName=cbsModuleFreePageVapName, cbsNpmFTTcpLimitNormal=cbsNpmFTTcpLimitNormal, cbsModuleCPUSpeed=cbsModuleCPUSpeed, cbsModuleCPULoadEntry=cbsModuleCPULoadEntry, cbsModuleSDP1OutPkts=cbsModuleSDP1OutPkts, cbsModuleMemoryTable=cbsModuleMemoryTable, cbsNpmFTTcpLimitThreshold=cbsNpmFTTcpLimitThreshold, cbsModuleSwapTable=cbsModuleSwapTable, cbsModuleMemoryTotal=cbsModuleMemoryTotal, cbsModuleCPUAvgUtilCore1Nice=cbsModuleCPUAvgUtilCore1Nice, cbsModuleCpuCoreHiUtilSeverity=cbsModuleCpuCoreHiUtilSeverity, cbsModuleAppVersion=cbsModuleAppVersion, cbsModuleAppMonTable=cbsModuleAppMonTable, cbsNpmFTUtilSeverity=cbsNpmFTUtilSeverity, cbsNpmFTUdpMedianThreshold=cbsNpmFTUdpMedianThreshold, cbsNpmAgedFlowRate=cbsNpmAgedFlowRate, cbsApmGuestHealthCheck=cbsApmGuestHealthCheck, cbsModuleMemoryUsed=cbsModuleMemoryUsed, cbsModuleMemoryAvailSwap=cbsModuleMemoryAvailSwap, cbsModuleCPUAvgUtilCore5SoftIRQ=cbsModuleCPUAvgUtilCore5SoftIRQ, cbsModuleSDP6OutOctets=cbsModuleSDP6OutOctets, cbsModuleCPUAvgUtilCore2Nice=cbsModuleCPUAvgUtilCore2Nice, cbsModuleAppCPMHostName=cbsModuleAppCPMHostName, cbsModuleCPUAvgUtilCore1Syst=cbsModuleCPUAvgUtilCore1Syst, cbsModuleRSWRelease=cbsModuleRSWRelease, cbsModuleCPUUtilExceeded=cbsModuleCPUUtilExceeded, cbsModuleDURootNormal=cbsModuleDURootNormal, cbsModuleMemoryCached=cbsModuleMemoryCached, cbsModuleCPUAvgUtilCore6User=cbsModuleCPUAvgUtilCore6User, cbsModuleCPUAvgUtilCore4IRQ=cbsModuleCPUAvgUtilCore4IRQ, cbsModuleCPUAvgUtilCore5Idle=cbsModuleCPUAvgUtilCore5Idle, cbsModuleSdramMemCfgStatEntry=cbsModuleSdramMemCfgStatEntry, cbsModuleSDP0InPkts=cbsModuleSDP0InPkts, cbsModuleDUTftpbootHigh=cbsModuleDUTftpbootHigh, cbsModuleUptimeEntry=cbsModuleUptimeEntry, cbsModuleCPUAvgUtilCore1IRQ=cbsModuleCPUAvgUtilCore1IRQ, cbsModuleCPUAvgUtilCore3Nice=cbsModuleCPUAvgUtilCore3Nice, cbsModuleDUEntry=cbsModuleDUEntry, cbsNpmNewFlowRate=cbsNpmNewFlowRate, cbsVapName=cbsVapName, cbsModuleFreePageAvailableHigh=cbsModuleFreePageAvailableHigh, cbsModuleCPUAvgUtilCore3IOWait=cbsModuleCPUAvgUtilCore3IOWait, cbsModuleRSWNewState=cbsModuleRSWNewState, cbsModuleCPUAvgUtilCore8User=cbsModuleCPUAvgUtilCore8User, cbsModuleCPUCount=cbsModuleCPUCount, cbsModuleCPUAvgUtilCore8Nice=cbsModuleCPUAvgUtilCore8Nice, cbsModuleSDP4InOctets=cbsModuleSDP4InOctets, cbsModuleRSWName=cbsModuleRSWName, cbsModuleRSWVersion=cbsModuleRSWVersion, cbsModuleSDP6InOctets=cbsModuleSDP6InOctets, cbsModuleNtpdMonTable=cbsModuleNtpdMonTable, cbsModuleSDP1OutOctets=cbsModuleSDP1OutOctets, cbsVapFlowDistTable=cbsVapFlowDistTable, cbsModuleMUNormal=cbsModuleMUNormal, cbsModuleCPUAvgUtilCore2Syst=cbsModuleCPUAvgUtilCore2Syst, cbsModuleCPUAvgUtilCore2IRQ=cbsModuleCPUAvgUtilCore2IRQ)
mibBuilder.exportSymbols("CBS-MODULE-RESOURCES-MIB", cbsModuleUptime=cbsModuleUptime, cbsModuleCpuCoreHiUtilDuration=cbsModuleCpuCoreHiUtilDuration, cbsNpmFlowDistTable=cbsNpmFlowDistTable, cbsModuleSdramCheck=cbsModuleSdramCheck, cbsNpmFTUdpLimitNormal=cbsNpmFTUdpLimitNormal, cbsModuleMemoryEntry=cbsModuleMemoryEntry, cbsNpmFTTcpMedianThreshold=cbsNpmFTTcpMedianThreshold, cbsModuleApplicationVgName=cbsModuleApplicationVgName, cbsVapCurrentFlows=cbsVapCurrentFlows, cbsModuleDUCbconfig=cbsModuleDUCbconfig, cbsModuleCPUAvgUtilCore7SoftIRQ=cbsModuleCPUAvgUtilCore7SoftIRQ, cbsNpmFTOtherIpLimitExceeded=cbsNpmFTOtherIpLimitExceeded, cbsNpmFTUdpMedianNormal=cbsNpmFTUdpMedianNormal, cbsModuleSDP2InOctets=cbsModuleSDP2InOctets, cbsNpmFTUdpMedianExceeded=cbsNpmFTUdpMedianExceeded, cbsVapNewFlowRate=cbsVapNewFlowRate, cbsModuleApplicationMonEnabled=cbsModuleApplicationMonEnabled, cbsModuleCPULoad15=cbsModuleCPULoad15, cbsModuleSDPEntry=cbsModuleSDPEntry, cbsModuleAppMonEntry=cbsModuleAppMonEntry, cbsModuleFreePageTable=cbsModuleFreePageTable, cbsNpmFTOtherIpMedianThreshold=cbsNpmFTOtherIpMedianThreshold, cbsModuleGuestHealthTableEntry=cbsModuleGuestHealthTableEntry, cbsModuleCPUAvgUtilCore8Idle=cbsModuleCPUAvgUtilCore8Idle, cbsFlowTableUtilTcpFlowEntries=cbsFlowTableUtilTcpFlowEntries, cbsModuleDURootHigh=cbsModuleDURootHigh, UtilSeverityLvl=UtilSeverityLvl, cbsModuleCPUAvgUtilCore4User=cbsModuleCPUAvgUtilCore4User, cbsModuleSDP3OutOctets=cbsModuleSDP3OutOctets, cbsModuleCPUAvgUtilCore7IOWait=cbsModuleCPUAvgUtilCore7IOWait, cbsModuleNPMFlowCountTable=cbsModuleNPMFlowCountTable, cbsApmGuestHealthSeverity=cbsApmGuestHealthSeverity, cbsModuleAppCPMIPAddress=cbsModuleAppCPMIPAddress, cbsModuleMemoryLoFree=cbsModuleMemoryLoFree, cbsModuleApplicationTable=cbsModuleApplicationTable, cbsModuleCPUAvgUtilCore5Syst=cbsModuleCPUAvgUtilCore5Syst, cbsModuleRSWOldState=cbsModuleRSWOldState)
