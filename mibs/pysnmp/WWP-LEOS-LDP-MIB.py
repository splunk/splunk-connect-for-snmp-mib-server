#
# PySNMP MIB module WWP-LEOS-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
IndexInteger, = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexInteger")
MplsLdpIdentifier, = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLdpIdentifier")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, Counter64, Gauge32, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, Counter32, MibIdentifier, iso, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Counter64", "Gauge32", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "Counter32", "MibIdentifier", "iso", "Integer32", "IpAddress")
MacAddress, DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosLdpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32))
wwpLeosLdpMIB.setRevisions(('2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpLeosLdpMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpLeosLdpMIB.setOrganization('Ciena, Inc')
wwpLeosLdpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1))
wwpLeosLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 1))
wwpLeosLdp = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2))
wwpLeosLdpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosLdpAdminStatus.setStatus('current')
wwpLeosLdpOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpOperStatus.setStatus('current')
wwpLeosLdpHelloHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosLdpHelloHoldTime.setStatus('current')
wwpLeosLdpKeepAliveHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosLdpKeepAliveHoldTime.setStatus('current')
wwpLeosLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosLdpSessionTable.setStatus('current')
wwpLeosLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpEntityLdpId"), (0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpEntityIndex"), (0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpPeerLdpId"))
if mibBuilder.loadTexts: wwpLeosLdpSessionEntry.setStatus('current')
wwpLeosLdpEntityLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: wwpLeosLdpEntityLdpId.setStatus('current')
wwpLeosLdpEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1, 1, 2), IndexInteger())
if mibBuilder.loadTexts: wwpLeosLdpEntityIndex.setStatus('current')
wwpLeosLdpPeerLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1, 1, 3), MplsLdpIdentifier())
if mibBuilder.loadTexts: wwpLeosLdpPeerLdpId.setStatus('current')
wwpLeosLdpSessionConfiguredHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpSessionConfiguredHoldTime.setStatus('current')
wwpLeosLdpSessionPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpSessionPeerHoldTime.setStatus('current')
wwpLeosLdpSessionHoldTimeInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpSessionHoldTimeInUse.setStatus('current')
wwpLeosLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 2), )
if mibBuilder.loadTexts: wwpLeosLdpHelloAdjacencyTable.setStatus('current')
wwpLeosLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 2, 1), ).setIndexNames((0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpEntityLdpId"), (0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpEntityIndex"), (0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpPeerLdpId"), (0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpHelloAdjacencyIndex"))
if mibBuilder.loadTexts: wwpLeosLdpHelloAdjacencyEntry.setStatus('current')
wwpLeosLdpHelloAdjacencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: wwpLeosLdpHelloAdjacencyIndex.setStatus('current')
wwpLeosLdpHelloAdjacencyConfiguredHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpHelloAdjacencyConfiguredHoldTime.setStatus('current')
wwpLeosLdpHelloAdjacencyPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpHelloAdjacencyPeerHoldTime.setStatus('current')
wwpLeosLdpIfTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 3), )
if mibBuilder.loadTexts: wwpLeosLdpIfTable.setStatus('current')
wwpLeosLdpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 3, 1), ).setIndexNames((0, "WWP-LEOS-LDP-MIB", "wwpLeosLdpIfIndex"))
if mibBuilder.loadTexts: wwpLeosLdpIfEntry.setStatus('current')
wwpLeosLdpIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpIfName.setStatus('current')
wwpLeosLdpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: wwpLeosLdpIfIndex.setStatus('current')
wwpLeosLdpIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpIfIpAddr.setStatus('current')
wwpLeosLdpIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosLdpIfAdminStatus.setStatus('current')
wwpLeosLdpIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 32, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosLdpIfOperStatus.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-LDP-MIB", wwpLeosLdpHelloAdjacencyConfiguredHoldTime=wwpLeosLdpHelloAdjacencyConfiguredHoldTime, wwpLeosLdpSessionHoldTimeInUse=wwpLeosLdpSessionHoldTimeInUse, wwpLeosLdpObjects=wwpLeosLdpObjects, wwpLeosLdpIfIndex=wwpLeosLdpIfIndex, wwpLeosLdpIfAdminStatus=wwpLeosLdpIfAdminStatus, wwpLeosLdpPeerLdpId=wwpLeosLdpPeerLdpId, wwpLeosLdp=wwpLeosLdp, wwpLeosLdpOperStatus=wwpLeosLdpOperStatus, wwpLeosLdpHelloAdjacencyIndex=wwpLeosLdpHelloAdjacencyIndex, wwpLeosLdpMIBObjects=wwpLeosLdpMIBObjects, wwpLeosLdpEntityIndex=wwpLeosLdpEntityIndex, wwpLeosLdpIfOperStatus=wwpLeosLdpIfOperStatus, wwpLeosLdpIfIpAddr=wwpLeosLdpIfIpAddr, wwpLeosLdpSessionPeerHoldTime=wwpLeosLdpSessionPeerHoldTime, wwpLeosLdpKeepAliveHoldTime=wwpLeosLdpKeepAliveHoldTime, wwpLeosLdpSessionEntry=wwpLeosLdpSessionEntry, wwpLeosLdpIfEntry=wwpLeosLdpIfEntry, wwpLeosLdpHelloAdjacencyPeerHoldTime=wwpLeosLdpHelloAdjacencyPeerHoldTime, wwpLeosLdpHelloAdjacencyTable=wwpLeosLdpHelloAdjacencyTable, wwpLeosLdpSessionConfiguredHoldTime=wwpLeosLdpSessionConfiguredHoldTime, wwpLeosLdpHelloAdjacencyEntry=wwpLeosLdpHelloAdjacencyEntry, wwpLeosLdpMIB=wwpLeosLdpMIB, wwpLeosLdpHelloHoldTime=wwpLeosLdpHelloHoldTime, wwpLeosLdpEntityLdpId=wwpLeosLdpEntityLdpId, wwpLeosLdpSessionTable=wwpLeosLdpSessionTable, wwpLeosLdpIfTable=wwpLeosLdpIfTable, PYSNMP_MODULE_ID=wwpLeosLdpMIB, wwpLeosLdpIfName=wwpLeosLdpIfName, wwpLeosLdpAdminStatus=wwpLeosLdpAdminStatus)
