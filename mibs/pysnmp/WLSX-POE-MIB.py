#
# PySNMP MIB module WLSX-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSX-POE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, Integer32, NotificationType, Bits, Unsigned32, ObjectIdentity, Counter64, IpAddress, Gauge32, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "Integer32", "NotificationType", "Bits", "Unsigned32", "ObjectIdentity", "Counter64", "IpAddress", "Gauge32", "MibIdentifier", "iso")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
wlsxPoEMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18))
wlsxPoEMIB.setRevisions(('2011-05-16 00:00',))
if mibBuilder.loadTexts: wlsxPoEMIB.setLastUpdated('201105160000Z')
if mibBuilder.loadTexts: wlsxPoEMIB.setOrganization('Aruba Wireless Networks')
wlsxPoEMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 0))
wlsxPoEMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1))
wlsxPoEMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 2))
wlsxPoEMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 2, 1))
wlsxPoEMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 2, 2))
wlsxPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1), )
if mibBuilder.loadTexts: wlsxPsePortTable.setStatus('current')
wlsxPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1), ).setIndexNames((0, "WLSX-POE-MIB", "wlsxPsePortIndex"))
if mibBuilder.loadTexts: wlsxPsePortEntry.setStatus('current')
wlsxPsePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: wlsxPsePortIndex.setStatus('current')
wlsxPsePortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortAdminStatus.setStatus('current')
wlsxPsePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortState.setStatus('current')
wlsxPsePortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("offAdmin", 2), ("offPowerManagement", 3), ("offIllegalClass", 4), ("offDetectionProgress", 5), ("offHardwareError", 6), ("offNonStandardPd", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortStatus.setStatus('current')
wlsxPsePortDiscoveryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("off", 1), ("ieee", 2), ("cisco", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortDiscoveryMode.setStatus('current')
wlsxPsePortIsPdDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortIsPdDetected.setStatus('current')
wlsxPsePortIsIeeePd = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortIsIeeePd.setStatus('current')
wlsxPsePortPdClass = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknownClass", 0), ("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortPdClass.setStatus('current')
wlsxPsePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low", 1), ("high", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortPriority.setStatus('current')
wlsxPsePortDefaultPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 10), Integer32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortDefaultPowerMax.setStatus('current')
wlsxPsePortPowerAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 11), Integer32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortPowerAllocated.setStatus('current')
wlsxPsePortPowerConsumed = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 12), Integer32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortPowerConsumed.setStatus('current')
wlsxPsePortVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 13), Integer32()).setUnits('milliVolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortVoltage.setStatus('current')
wlsxPsePortCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 1, 1, 14), Integer32()).setUnits('milliAmps').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPsePortCurrent.setStatus('current')
wlsxPseSlotTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 2), )
if mibBuilder.loadTexts: wlsxPseSlotTable.setStatus('current')
wlsxPseSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 2, 1), ).setIndexNames((0, "WLSX-POE-MIB", "wlsxPseSlotIndex"))
if mibBuilder.loadTexts: wlsxPseSlotEntry.setStatus('current')
wlsxPseSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: wlsxPseSlotIndex.setStatus('current')
wlsxPseSlotPowerAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 2, 1, 2), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPseSlotPowerAvailable.setStatus('current')
wlsxPseSlotPowerConsumption = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 2, 1, 3), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPseSlotPowerConsumption.setStatus('current')
wlsxPseSlotGuardBand = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPseSlotGuardBand.setStatus('current')
wlsxPseSlotPoEManagementMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2), ("class", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxPseSlotPoEManagementMode.setStatus('current')
wlsxTrapInterfacePoEState = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 0, 1)).setObjects(("WLSX-POE-MIB", "wlsxPsePortIndex"), ("WLSX-POE-MIB", "wlsxPsePortState"), ("WLSX-POE-MIB", "wlsxPsePortStatus"))
if mibBuilder.loadTexts: wlsxTrapInterfacePoEState.setStatus('current')
wlsxPoEMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 2, 1, 1)).setObjects(("WLSX-POE-MIB", "wlsxPoEMIBPortGroup"), ("WLSX-POE-MIB", "wlsxPoEMIBMainPseGroup"), ("WLSX-POE-MIB", "wlsxPoEMIBNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wlsxPoEMIBCompliance = wlsxPoEMIBCompliance.setStatus('current')
wlsxPoEMIBPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 2, 2, 1)).setObjects(("WLSX-POE-MIB", "wlsxPsePortAdminStatus"), ("WLSX-POE-MIB", "wlsxPsePortState"), ("WLSX-POE-MIB", "wlsxPsePortStatus"), ("WLSX-POE-MIB", "wlsxPsePortDiscoveryMode"), ("WLSX-POE-MIB", "wlsxPsePortIsPdDetected"), ("WLSX-POE-MIB", "wlsxPsePortIsIeeePd"), ("WLSX-POE-MIB", "wlsxPsePortPdClass"), ("WLSX-POE-MIB", "wlsxPsePortPriority"), ("WLSX-POE-MIB", "wlsxPsePortDefaultPowerMax"), ("WLSX-POE-MIB", "wlsxPsePortPowerAllocated"), ("WLSX-POE-MIB", "wlsxPsePortPowerConsumed"), ("WLSX-POE-MIB", "wlsxPsePortVoltage"), ("WLSX-POE-MIB", "wlsxPsePortCurrent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wlsxPoEMIBPortGroup = wlsxPoEMIBPortGroup.setStatus('current')
wlsxPoEMIBMainPseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 2, 2, 2)).setObjects(("WLSX-POE-MIB", "wlsxPseSlotPowerAvailable"), ("WLSX-POE-MIB", "wlsxPseSlotPowerConsumption"), ("WLSX-POE-MIB", "wlsxPseSlotGuardBand"), ("WLSX-POE-MIB", "wlsxPseSlotPoEManagementMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wlsxPoEMIBMainPseGroup = wlsxPoEMIBMainPseGroup.setStatus('current')
wlsxPoEMIBNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 18, 2, 2, 3)).setObjects(("WLSX-POE-MIB", "wlsxTrapInterfacePoEState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wlsxPoEMIBNotificationsGroup = wlsxPoEMIBNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("WLSX-POE-MIB", wlsxPoEMIBCompliances=wlsxPoEMIBCompliances, wlsxPsePortPriority=wlsxPsePortPriority, wlsxPsePortPowerConsumed=wlsxPsePortPowerConsumed, wlsxPseSlotGuardBand=wlsxPseSlotGuardBand, wlsxPseSlotPoEManagementMode=wlsxPseSlotPoEManagementMode, wlsxPoEMIBConformance=wlsxPoEMIBConformance, wlsxPsePortTable=wlsxPsePortTable, wlsxPseSlotPowerAvailable=wlsxPseSlotPowerAvailable, PYSNMP_MODULE_ID=wlsxPoEMIB, wlsxPsePortIndex=wlsxPsePortIndex, wlsxPsePortPdClass=wlsxPsePortPdClass, wlsxPoEMIBObjects=wlsxPoEMIBObjects, wlsxPsePortDefaultPowerMax=wlsxPsePortDefaultPowerMax, wlsxPseSlotEntry=wlsxPseSlotEntry, wlsxPsePortIsIeeePd=wlsxPsePortIsIeeePd, wlsxPoEMIBCompliance=wlsxPoEMIBCompliance, wlsxPseSlotIndex=wlsxPseSlotIndex, wlsxPoEMIB=wlsxPoEMIB, wlsxPsePortEntry=wlsxPsePortEntry, wlsxPseSlotTable=wlsxPseSlotTable, wlsxPoEMIBMainPseGroup=wlsxPoEMIBMainPseGroup, wlsxPoEMIBGroups=wlsxPoEMIBGroups, wlsxPsePortAdminStatus=wlsxPsePortAdminStatus, wlsxPsePortIsPdDetected=wlsxPsePortIsPdDetected, wlsxPseSlotPowerConsumption=wlsxPseSlotPowerConsumption, wlsxPoEMIBPortGroup=wlsxPoEMIBPortGroup, wlsxPsePortDiscoveryMode=wlsxPsePortDiscoveryMode, wlsxTrapInterfacePoEState=wlsxTrapInterfacePoEState, wlsxPoEMIBNotifications=wlsxPoEMIBNotifications, wlsxPsePortPowerAllocated=wlsxPsePortPowerAllocated, wlsxPsePortCurrent=wlsxPsePortCurrent, wlsxPoEMIBNotificationsGroup=wlsxPoEMIBNotificationsGroup, wlsxPsePortStatus=wlsxPsePortStatus, wlsxPsePortVoltage=wlsxPsePortVoltage, wlsxPsePortState=wlsxPsePortState)
