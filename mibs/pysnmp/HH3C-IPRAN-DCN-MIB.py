#
# PySNMP MIB module HH3C-IPRAN-DCN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-IPRAN-DCN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter32, Counter64, Integer32, Gauge32, Unsigned32, IpAddress, Bits, ObjectIdentity, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "Counter64", "Integer32", "Gauge32", "Unsigned32", "IpAddress", "Bits", "ObjectIdentity", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
hh3cIpRanDcn = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 152))
hh3cIpRanDcn.setRevisions(('2013-07-24 00:00',))
if mibBuilder.loadTexts: hh3cIpRanDcn.setLastUpdated('201307240000Z')
if mibBuilder.loadTexts: hh3cIpRanDcn.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class Hh3cIpRanNeId(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d.1d.1d.1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

hh3cIpRanDcnMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1))
hh3cIpRanDcnObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1))
hh3cIpRanDcnInfoObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 1))
hh3cIpRanDcnNeId = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 1, 1), Hh3cIpRanNeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeId.setStatus('current')
hh3cIpRanDcnNeIpType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeIpType.setStatus('current')
hh3cIpRanDcnNeIp = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeIp.setStatus('current')
hh3cIpRanDcnMask = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnMask.setStatus('current')
hh3cIpRanDcnNeInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 2), )
if mibBuilder.loadTexts: hh3cIpRanDcnNeInfoTable.setStatus('current')
hh3cIpRanDcnNeInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 2, 1), ).setIndexNames((0, "HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnNeInfoNeId"))
if mibBuilder.loadTexts: hh3cIpRanDcnNeInfoEntry.setStatus('current')
hh3cIpRanDcnNeInfoNeId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 2, 1, 1), Hh3cIpRanNeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeInfoNeId.setStatus('current')
hh3cIpRanDcnNeInfoNeIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeInfoNeIpType.setStatus('current')
hh3cIpRanDcnNeInfoNeIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeInfoNeIp.setStatus('current')
hh3cIpRanDcnNeInfoMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeInfoMetric.setStatus('current')
hh3cIpRanDcnNeInfoDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeInfoDeviceType.setStatus('current')
hh3cIpRanDcnTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 2))
hh3cIpRanDcnNeNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeNumber.setStatus('current')
hh3cIpRanDcnNeChangeMode = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnNeChangeMode.setStatus('current')
hh3cIpRanDcnCompanyName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnCompanyName.setStatus('current')
hh3cIpRanDcnDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnDeviceType.setStatus('current')
hh3cIpRanDcnDeviceMac = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 2, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpRanDcnDeviceMac.setStatus('current')
hh3cIpRanDcnTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 3))
hh3cIpRanDcnTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 3, 0))
hh3cIpRanDcnNeOnline = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 3, 0, 1)).setObjects(("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnNeInfoNeId"), ("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnNeInfoNeIpType"), ("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnNeInfoNeIp"), ("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnCompanyName"), ("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnDeviceType"), ("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnDeviceMac"))
if mibBuilder.loadTexts: hh3cIpRanDcnNeOnline.setStatus('current')
hh3cIpRanDcnNeOffline = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 152, 1, 3, 0, 2)).setObjects(("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnNeInfoNeId"), ("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnNeInfoNeIpType"), ("HH3C-IPRAN-DCN-MIB", "hh3cIpRanDcnNeInfoNeIp"))
if mibBuilder.loadTexts: hh3cIpRanDcnNeOffline.setStatus('current')
mibBuilder.exportSymbols("HH3C-IPRAN-DCN-MIB", hh3cIpRanDcnDeviceMac=hh3cIpRanDcnDeviceMac, hh3cIpRanDcnMask=hh3cIpRanDcnMask, hh3cIpRanDcnTrapObjects=hh3cIpRanDcnTrapObjects, hh3cIpRanDcnNeOffline=hh3cIpRanDcnNeOffline, hh3cIpRanDcnInfoObject=hh3cIpRanDcnInfoObject, hh3cIpRanDcnNeOnline=hh3cIpRanDcnNeOnline, hh3cIpRanDcnNeInfoTable=hh3cIpRanDcnNeInfoTable, hh3cIpRanDcn=hh3cIpRanDcn, hh3cIpRanDcnDeviceType=hh3cIpRanDcnDeviceType, hh3cIpRanDcnNeInfoMetric=hh3cIpRanDcnNeInfoMetric, hh3cIpRanDcnMIB=hh3cIpRanDcnMIB, hh3cIpRanDcnNeInfoNeIp=hh3cIpRanDcnNeInfoNeIp, Hh3cIpRanNeId=Hh3cIpRanNeId, hh3cIpRanDcnCompanyName=hh3cIpRanDcnCompanyName, hh3cIpRanDcnNeNumber=hh3cIpRanDcnNeNumber, hh3cIpRanDcnNeId=hh3cIpRanDcnNeId, hh3cIpRanDcnNeIp=hh3cIpRanDcnNeIp, hh3cIpRanDcnNeInfoNeId=hh3cIpRanDcnNeInfoNeId, hh3cIpRanDcnNeInfoNeIpType=hh3cIpRanDcnNeInfoNeIpType, hh3cIpRanDcnTrapsPrefix=hh3cIpRanDcnTrapsPrefix, hh3cIpRanDcnNeInfoDeviceType=hh3cIpRanDcnNeInfoDeviceType, hh3cIpRanDcnNeChangeMode=hh3cIpRanDcnNeChangeMode, hh3cIpRanDcnObjects=hh3cIpRanDcnObjects, PYSNMP_MODULE_ID=hh3cIpRanDcn, hh3cIpRanDcnNeInfoEntry=hh3cIpRanDcnNeInfoEntry, hh3cIpRanDcnNeIpType=hh3cIpRanDcnNeIpType, hh3cIpRanDcnTraps=hh3cIpRanDcnTraps)
