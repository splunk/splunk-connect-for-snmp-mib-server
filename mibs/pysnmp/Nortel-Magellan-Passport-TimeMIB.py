#
# PySNMP MIB module Nortel-Magellan-Passport-TimeMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-TimeMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
Unsigned32, Integer32, Counter32, StorageType, DisplayString, RowPointer, RowStatus = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Unsigned32", "Integer32", "Counter32", "StorageType", "DisplayString", "RowPointer", "RowStatus")
EnterpriseDateAndTime, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "EnterpriseDateAndTime", "NonReplicated")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Unsigned32, TimeTicks, IpAddress, Integer32, Gauge32, Counter32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "TimeTicks", "IpAddress", "Integer32", "Gauge32", "Counter32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "ObjectIdentity", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
timeMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13))
time = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19))
timeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 1), )
if mibBuilder.loadTexts: timeRowStatusTable.setStatus('mandatory')
timeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "timeIndex"))
if mibBuilder.loadTexts: timeRowStatusEntry.setStatus('mandatory')
timeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeRowStatus.setStatus('mandatory')
timeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeComponentName.setStatus('mandatory')
timeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeStorageType.setStatus('mandatory')
timeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: timeIndex.setStatus('mandatory')
timeOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10), )
if mibBuilder.loadTexts: timeOperTable.setStatus('mandatory')
timeOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "timeIndex"))
if mibBuilder.loadTexts: timeOperEntry.setStatus('mandatory')
timeNetworkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 1), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeNetworkTime.setStatus('obsolete')
timeSyncStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 4, 5))).clone(namedValues=NamedValues(("synchronized", 0), ("unsynchronized", 1), ("synchronizing", 4), ("unspecified", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeSyncStatus.setStatus('mandatory')
timeSyncSource = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeSyncSource.setStatus('obsolete')
timeTimeOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeTimeOffset.setStatus('obsolete')
timeModuleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeModuleTime.setStatus('mandatory')
timeOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-720, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeOffset.setStatus('mandatory')
timeMainServer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeMainServer.setStatus('mandatory')
timeXntpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeXntpVersion.setStatus('mandatory')
timeSyncSourcesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 391), )
if mibBuilder.loadTexts: timeSyncSourcesTable.setStatus('mandatory')
timeSyncSourcesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 391, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "timeIndex"), (0, "Nortel-Magellan-Passport-TimeMIB", "timeSyncSourcesValue"))
if mibBuilder.loadTexts: timeSyncSourcesEntry.setStatus('mandatory')
timeSyncSourcesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 391, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeSyncSourcesValue.setStatus('mandatory')
timeServer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3))
timeServerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 1), )
if mibBuilder.loadTexts: timeServerRowStatusTable.setStatus('mandatory')
timeServerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "timeIndex"), (0, "Nortel-Magellan-Passport-TimeMIB", "timeServerIndex"))
if mibBuilder.loadTexts: timeServerRowStatusEntry.setStatus('mandatory')
timeServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServerRowStatus.setStatus('mandatory')
timeServerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerComponentName.setStatus('mandatory')
timeServerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerStorageType.setStatus('mandatory')
timeServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: timeServerIndex.setStatus('mandatory')
timeServerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 11), )
if mibBuilder.loadTexts: timeServerProvTable.setStatus('mandatory')
timeServerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "timeIndex"), (0, "Nortel-Magellan-Passport-TimeMIB", "timeServerIndex"))
if mibBuilder.loadTexts: timeServerProvEntry.setStatus('mandatory')
timeServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 11, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServerIpAddress.setStatus('mandatory')
timeServerIpStack = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipiFrIpiVc", 1), ("vrIp", 2))).clone('ipiFrIpiVc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServerIpStack.setStatus('mandatory')
timeServerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 12), )
if mibBuilder.loadTexts: timeServerStateTable.setStatus('mandatory')
timeServerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "timeIndex"), (0, "Nortel-Magellan-Passport-TimeMIB", "timeServerIndex"))
if mibBuilder.loadTexts: timeServerStateEntry.setStatus('mandatory')
timeServerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerAdminState.setStatus('mandatory')
timeServerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerOperationalState.setStatus('mandatory')
timeServerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerUsageState.setStatus('mandatory')
timeServerOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13), )
if mibBuilder.loadTexts: timeServerOperTable.setStatus('mandatory')
timeServerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "timeIndex"), (0, "Nortel-Magellan-Passport-TimeMIB", "timeServerIndex"))
if mibBuilder.loadTexts: timeServerOperEntry.setStatus('mandatory')
timeServerXntpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerXntpVersion.setStatus('mandatory')
timeServerStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerStratum.setStatus('mandatory')
timeServerPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerPoll.setStatus('mandatory')
timeServerPktSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerPktSent.setStatus('mandatory')
timeServerPktRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerPktRecv.setStatus('mandatory')
timeServerPktValid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerPktValid.setStatus('mandatory')
timeServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 19, 3, 13, 1, 392), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeServerStatus.setStatus('mandatory')
nS = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20))
nSRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 1), )
if mibBuilder.loadTexts: nSRowStatusTable.setStatus('mandatory')
nSRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "nSIndex"))
if mibBuilder.loadTexts: nSRowStatusEntry.setStatus('mandatory')
nSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nSRowStatus.setStatus('mandatory')
nSComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSComponentName.setStatus('mandatory')
nSStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSStorageType.setStatus('mandatory')
nSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: nSIndex.setStatus('mandatory')
nSProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 10), )
if mibBuilder.loadTexts: nSProvTable.setStatus('mandatory')
nSProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "nSIndex"))
if mibBuilder.loadTexts: nSProvEntry.setStatus('mandatory')
nSPrimaryReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 10, 1, 1), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nSPrimaryReference.setStatus('mandatory')
nSSecondaryReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 10, 1, 2), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nSSecondaryReference.setStatus('mandatory')
nSTertiaryReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 10, 1, 3), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nSTertiaryReference.setStatus('mandatory')
nSStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 11), )
if mibBuilder.loadTexts: nSStateTable.setStatus('mandatory')
nSStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "nSIndex"))
if mibBuilder.loadTexts: nSStateEntry.setStatus('mandatory')
nSAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSAdminState.setStatus('mandatory')
nSOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSOperationalState.setStatus('mandatory')
nSUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSUsageState.setStatus('mandatory')
nSOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 12), )
if mibBuilder.loadTexts: nSOperTable.setStatus('mandatory')
nSOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TimeMIB", "nSIndex"))
if mibBuilder.loadTexts: nSOperEntry.setStatus('mandatory')
nSClockSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("freeRun", 0), ("synchronizing", 1), ("synchronized", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSClockSyncState.setStatus('mandatory')
nSActiveReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 12, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSActiveReference.setStatus('mandatory')
nSStandbyReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 20, 12, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSStandbyReference.setStatus('mandatory')
timeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 1))
timeGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 1, 5))
timeGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 1, 5, 2))
timeGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 1, 5, 2, 2))
timeCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 3))
timeCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 3, 5))
timeCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 3, 5, 2))
timeCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 13, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-TimeMIB", nSProvEntry=nSProvEntry, timeGroupBE01A=timeGroupBE01A, timeServerXntpVersion=timeServerXntpVersion, timeServerOperTable=timeServerOperTable, timeServerProvTable=timeServerProvTable, nSPrimaryReference=nSPrimaryReference, timeSyncSourcesEntry=timeSyncSourcesEntry, timeCapabilitiesBE01=timeCapabilitiesBE01, timeServerRowStatusEntry=timeServerRowStatusEntry, timeSyncStatus=timeSyncStatus, nSIndex=nSIndex, nSStandbyReference=nSStandbyReference, timeSyncSourcesTable=timeSyncSourcesTable, timeRowStatusTable=timeRowStatusTable, nSProvTable=nSProvTable, nSTertiaryReference=nSTertiaryReference, timeComponentName=timeComponentName, timeServerStateTable=timeServerStateTable, timeIndex=timeIndex, timeCapabilities=timeCapabilities, timeServerRowStatus=timeServerRowStatus, timeServerStorageType=timeServerStorageType, nSSecondaryReference=nSSecondaryReference, timeServerOperationalState=timeServerOperationalState, timeServerOperEntry=timeServerOperEntry, timeOffset=timeOffset, nSRowStatusEntry=nSRowStatusEntry, timeRowStatusEntry=timeRowStatusEntry, nSComponentName=nSComponentName, nSStateEntry=nSStateEntry, timeSyncSourcesValue=timeSyncSourcesValue, nSUsageState=nSUsageState, timeRowStatus=timeRowStatus, timeOperEntry=timeOperEntry, timeGroup=timeGroup, timeSyncSource=timeSyncSource, timeServerStateEntry=timeServerStateEntry, nSClockSyncState=nSClockSyncState, nSStorageType=nSStorageType, timeCapabilitiesBE01A=timeCapabilitiesBE01A, timeServerPktValid=timeServerPktValid, nSOperTable=nSOperTable, timeMIB=timeMIB, timeStorageType=timeStorageType, timeCapabilitiesBE=timeCapabilitiesBE, timeOperTable=timeOperTable, timeModuleTime=timeModuleTime, timeServerIpAddress=timeServerIpAddress, nSOperEntry=nSOperEntry, timeMainServer=timeMainServer, timeServerPktSent=timeServerPktSent, timeServerStatus=timeServerStatus, nSRowStatusTable=nSRowStatusTable, nSAdminState=nSAdminState, nSStateTable=nSStateTable, timeGroupBE01=timeGroupBE01, timeXntpVersion=timeXntpVersion, timeServerComponentName=timeServerComponentName, timeServerProvEntry=timeServerProvEntry, timeServerIndex=timeServerIndex, timeNetworkTime=timeNetworkTime, timeServerIpStack=timeServerIpStack, timeServer=timeServer, timeServerAdminState=timeServerAdminState, nSRowStatus=nSRowStatus, time=time, timeTimeOffset=timeTimeOffset, timeGroupBE=timeGroupBE, timeServerStratum=timeServerStratum, timeServerRowStatusTable=timeServerRowStatusTable, timeServerPoll=timeServerPoll, nSActiveReference=nSActiveReference, timeServerPktRecv=timeServerPktRecv, nS=nS, timeServerUsageState=timeServerUsageState, nSOperationalState=nSOperationalState)
