#
# PySNMP MIB module ALCATEL-IND1-TIMETRA-FILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-TIMETRA-FILTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:03:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
tmnxSRObjs, timetraSRMIBModules, tmnxSRConfs, tmnxSRNotifyPrefix = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-GLOBAL-MIB", "tmnxSRObjs", "timetraSRMIBModules", "tmnxSRConfs", "tmnxSRNotifyPrefix")
TNamedItem, IpAddressPrefixLength, TItemDescription, TIpProtocol, TTcpUdpPortOperator, TmnxPortID, TmnxAdminState, TIpOption, TDSCPNameOrEmpty, TmnxServId, TDSCPFilterActionValue, TNamedItemOrEmpty, Dot1PPriority, ServiceAccessPoint, SdpBindId, TFrameType, TmnxEncapVal, TTcpUdpPort, TmnxOperState = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-TC-MIB", "TNamedItem", "IpAddressPrefixLength", "TItemDescription", "TIpProtocol", "TTcpUdpPortOperator", "TmnxPortID", "TmnxAdminState", "TIpOption", "TDSCPNameOrEmpty", "TmnxServId", "TDSCPFilterActionValue", "TNamedItemOrEmpty", "Dot1PPriority", "ServiceAccessPoint", "SdpBindId", "TFrameType", "TmnxEncapVal", "TTcpUdpPort", "TmnxOperState")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
InetAddressPrefixLength, InetAddressIPv6 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddressIPv6")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, TimeTicks, iso, Counter64, MibIdentifier, NotificationType, Unsigned32, Bits, ModuleIdentity, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Opaque, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "iso", "Counter64", "MibIdentifier", "NotificationType", "Unsigned32", "Bits", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Opaque", "Integer32", "Counter32")
MacAddress, TimeStamp, TextualConvention, DisplayString, RowPointer, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TimeStamp", "TextualConvention", "DisplayString", "RowPointer", "RowStatus", "TruthValue")
timetraFilterMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 21))
timetraFilterMIBModule.setRevisions(('1908-01-01 00:00', '1907-01-01 00:00', '1906-02-28 00:00', '1905-08-31 00:00', '1905-01-24 00:00', '1904-01-15 00:00', '1903-08-15 00:00', '2003-01-29 00:00',))
if mibBuilder.loadTexts: timetraFilterMIBModule.setLastUpdated('0801010000Z')
if mibBuilder.loadTexts: timetraFilterMIBModule.setOrganization('Alcatel')
tFilterObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21))
tFilterNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 21))
tFilterNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 21, 0))
tFilterMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21))
tFilterNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 8))
tFilterTimeStampObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 9))
class TFilterID(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TIPFilterID(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TMACFilterID(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TItemScope(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("exclusive", 1), ("template", 2))

class TItemMatch(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("off", 1), ("false", 2), ("true", 3))

class TEntryIndicator(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TEntryId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TEntryIdOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TFilterAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4))
    namedValues = NamedValues(("drop", 1), ("forward", 2), ("httpRedirect", 4))

class TFilterActionOrDefault(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("drop", 1), ("forward", 2), ("default", 3), ("httpRedirect", 4))

class TFilterLogId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(101, 199), )
class TFilterLogDestination(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("memory", 1), ("syslog", 2), ("file", 3))

class TTimeRangeState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("timeRangeNotApplic", 0), ("timeRangeNotActive", 1), ("timeRangeActive", 2), ("timeRangeActiveDownloadFailed", 3))

class TFilterLogSummaryCriterium(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("srcAddr", 0), ("dstAddr", 1))

class TFilterType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("fltrtypeselNone", 0), ("fltrtypeselIp", 1), ("fltrtypeselMac", 2), ("fltrtypeselCpm", 3), ("fltrtypeselIpv6", 4), ("fltrtypeselCpm6", 5))

tIPFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 1), )
if mibBuilder.loadTexts: tIPFilterTable.setStatus('current')
tIPFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterId"))
if mibBuilder.loadTexts: tIPFilterEntry.setStatus('current')
tIPFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 1, 1, 1), TIPFilterID().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tIPFilterId.setStatus('current')
tIPFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterRowStatus.setStatus('current')
tIPFilterScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 1, 1, 3), TItemScope().clone('template')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterScope.setStatus('current')
tIPFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 1, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterDescription.setStatus('current')
tIPFilterDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 1, 1, 5), TFilterAction().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterDefaultAction.setStatus('current')
tIPFilterParamsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2), )
if mibBuilder.loadTexts: tIPFilterParamsTable.setStatus('current')
tIPFilterParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterId"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIndex"))
if mibBuilder.loadTexts: tIPFilterParamsEntry.setStatus('current')
tIPFilterParamsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 1), TEntryId())
if mibBuilder.loadTexts: tIPFilterParamsIndex.setStatus('current')
tIPFilterParamsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsRowStatus.setStatus('current')
tIPFilterParamsLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 3), TFilterLogId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsLogId.setStatus('current')
tIPFilterParamsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDescription.setStatus('current')
tIPFilterParamsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 5), TFilterActionOrDefault().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsAction.setStatus('current')
tIPFilterParamsForwardNH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 6), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsForwardNH.setStatus('current')
tIPFilterParamsForwardNHIndirect = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsForwardNHIndirect.setStatus('current')
tIPFilterParamsRemarkDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 8), TDSCPFilterActionValue().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsRemarkDSCP.setStatus('current')
tIPFilterParamsRemarkDSCPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 9), TDSCPFilterActionValue().clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsRemarkDSCPMask.setStatus('current')
tIPFilterParamsRemarkDot1p = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 10), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsRemarkDot1p.setStatus('current')
tIPFilterParamsSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 11), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsSourceIpAddr.setStatus('current')
tIPFilterParamsSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 12), IpAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsSourceIpMask.setStatus('current')
tIPFilterParamsDestinationIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 13), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDestinationIpAddr.setStatus('current')
tIPFilterParamsDestinationIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 14), IpAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDestinationIpMask.setStatus('current')
tIPFilterParamsProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 15), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsProtocol.setStatus('current')
tIPFilterParamsSourcePortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 16), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsSourcePortValue1.setStatus('current')
tIPFilterParamsSourcePortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 17), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsSourcePortValue2.setStatus('current')
tIPFilterParamsSourcePortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 18), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsSourcePortOperator.setStatus('current')
tIPFilterParamsDestPortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 19), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDestPortValue1.setStatus('current')
tIPFilterParamsDestPortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 20), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDestPortValue2.setStatus('current')
tIPFilterParamsDestPortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 21), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDestPortOperator.setStatus('current')
tIPFilterParamsDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 22), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDSCP.setStatus('current')
tIPFilterParamsFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 24), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsFragment.setStatus('current')
tIPFilterParamsOptionPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 25), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsOptionPresent.setStatus('current')
tIPFilterParamsIpOptionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 26), TIpOption()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsIpOptionValue.setStatus('current')
tIPFilterParamsIpOptionMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 27), TIpOption()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsIpOptionMask.setStatus('current')
tIPFilterParamsMultipleOption = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 28), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsMultipleOption.setStatus('current')
tIPFilterParamsTcpSyn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 29), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsTcpSyn.setStatus('current')
tIPFilterParamsTcpAck = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 30), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsTcpAck.setStatus('current')
tIPFilterParamsIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsIcmpCode.setStatus('current')
tIPFilterParamsIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsIcmpType.setStatus('current')
tIPFilterParamsCflowdSample = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 33), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsCflowdSample.setStatus('current')
tIPFilterParamsCflowdIfSample = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 34), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsCflowdIfSample.setStatus('current')
tIPFilterParamsForwardNHInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsForwardNHInterface.setStatus('current')
tIPFilterParamsIngressHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsIngressHitCount.setStatus('current')
tIPFilterParamsEgressHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsEgressHitCount.setStatus('current')
tIPFilterParamsLogInstantiated = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsLogInstantiated.setStatus('current')
tIPFilterParamsForwardRedPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 39), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsForwardRedPlcy.setStatus('current')
tIPFilterParamsActiveDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 40), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsActiveDest.setStatus('current')
tIPFilterParamsFwdSvcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 41), TmnxServId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsFwdSvcId.setStatus('current')
tIPFilterParamsFwdSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 42), TmnxPortID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsFwdSapPortId.setStatus('current')
tIPFilterParamsFwdSapEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 43), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsFwdSapEncapVal.setStatus('current')
tIPFilterParamsFwdSdpBind = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 44), SdpBindId().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsFwdSdpBind.setStatus('current')
tIPFilterParamsTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 45), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsTimeRangeName.setStatus('current')
tIPFilterParamsTimeRangeState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 46), TTimeRangeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsTimeRangeState.setStatus('current')
tIPFilterParamsRedirectURL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 47), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsRedirectURL.setStatus('current')
tIPFilterParamsSrcIpFullMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 48), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsSrcIpFullMask.setStatus('current')
tIPFilterParamsDestIpFullMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 49), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPFilterParamsDestIpFullMask.setStatus('current')
tIPFilterParamsIngrHitByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsIngrHitByteCount.setStatus('current')
tIPFilterParamsEgrHitByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 2, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPFilterParamsEgrHitByteCount.setStatus('current')
tMacFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 3), )
if mibBuilder.loadTexts: tMacFilterTable.setStatus('current')
tMacFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterId"))
if mibBuilder.loadTexts: tMacFilterEntry.setStatus('current')
tMacFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 3, 1, 1), TMACFilterID().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tMacFilterId.setStatus('current')
tMacFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterRowStatus.setStatus('current')
tMacFilterScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 3, 1, 3), TItemScope().clone('template')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterScope.setStatus('current')
tMacFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 3, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterDescription.setStatus('current')
tMacFilterDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 3, 1, 5), TFilterAction().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterDefaultAction.setStatus('current')
tMacFilterParamsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4), )
if mibBuilder.loadTexts: tMacFilterParamsTable.setStatus('current')
tMacFilterParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterId"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsIndex"))
if mibBuilder.loadTexts: tMacFilterParamsEntry.setStatus('current')
tMacFilterParamsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 1), TEntryId())
if mibBuilder.loadTexts: tMacFilterParamsIndex.setStatus('current')
tMacFilterParamsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsRowStatus.setStatus('current')
tMacFilterParamsLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 3), TFilterLogId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsLogId.setStatus('current')
tMacFilterParamsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsDescription.setStatus('current')
tMacFilterParamsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 5), TFilterActionOrDefault().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsAction.setStatus('current')
tMacFilterParamsFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 6), TFrameType().clone('e802dot3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsFrameType.setStatus('current')
tMacFilterParamsSrcMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 8), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsSrcMAC.setStatus('current')
tMacFilterParamsSrcMACMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 9), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsSrcMACMask.setStatus('current')
tMacFilterParamsDstMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 10), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsDstMAC.setStatus('current')
tMacFilterParamsDstMACMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 11), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsDstMACMask.setStatus('current')
tMacFilterParamsDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 12), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsDot1pValue.setStatus('current')
tMacFilterParamsDot1pMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 13), Dot1PPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsDot1pMask.setStatus('current')
tMacFilterParamsEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsEtherType.setStatus('current')
tMacFilterParamsDsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 15), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsDsap.setStatus('current')
tMacFilterParamsDsapMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 16), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsDsapMask.setStatus('current')
tMacFilterParamsSsap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 17), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsSsap.setStatus('current')
tMacFilterParamsSsapMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 18), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsSsapMask.setStatus('current')
tMacFilterParamsSnapPid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsSnapPid.setStatus('current')
tMacFilterParamsSnapOui = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("zero", 2), ("nonZero", 3))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsSnapOui.setStatus('current')
tMacFilterParamsIngressHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMacFilterParamsIngressHitCount.setStatus('current')
tMacFilterParamsEgressHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMacFilterParamsEgressHitCount.setStatus('current')
tMacFilterParamsLogInstantiated = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMacFilterParamsLogInstantiated.setStatus('current')
tMacFilterParamsFwdSvcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 24), TmnxServId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMacFilterParamsFwdSvcId.setStatus('current')
tMacFilterParamsFwdSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 25), TmnxPortID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsFwdSapPortId.setStatus('current')
tMacFilterParamsFwdSapEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 26), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsFwdSapEncapVal.setStatus('current')
tMacFilterParamsFwdSdpBind = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 27), SdpBindId().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsFwdSdpBind.setStatus('current')
tMacFilterParamsTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 28), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsTimeRangeName.setStatus('current')
tMacFilterParamsTimeRangeState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 29), TTimeRangeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMacFilterParamsTimeRangeState.setStatus('current')
tMacFilterParamsRedirectURL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 30), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMacFilterParamsRedirectURL.setStatus('current')
tMacFilterParamsIngrHitByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMacFilterParamsIngrHitByteCount.setStatus('current')
tMacFilterParamsEgrHitByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 4, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMacFilterParamsEgrHitByteCount.setStatus('current')
tFilterLogTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5), )
if mibBuilder.loadTexts: tFilterLogTable.setStatus('current')
tFilterLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogId"))
if mibBuilder.loadTexts: tFilterLogEntry.setStatus('current')
tFilterLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 1), TFilterLogId())
if mibBuilder.loadTexts: tFilterLogId.setStatus('current')
tFilterLogRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogRowStatus.setStatus('current')
tFilterLogDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 3), TFilterLogDestination().clone('memory')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogDestination.setStatus('current')
tFilterLogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogDescription.setStatus('current')
tFilterLogMaxNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogMaxNumEntries.setStatus('current')
tFilterLogSysLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogSysLogId.setStatus('current')
tFilterLogFileId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogFileId.setStatus('current')
tFilterLogStopOnFull = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogStopOnFull.setStatus('current')
tFilterLogEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogEnabled.setStatus('current')
tFilterLogSummaryEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogSummaryEnabled.setStatus('current')
tFilterLogSummaryCrit1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 5, 1, 11), TFilterLogSummaryCriterium().clone('srcAddr')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterLogSummaryCrit1.setStatus('current')
tFilterLogScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 6))
tFilterLogMaxInstances = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterLogMaxInstances.setStatus('current')
tFilterLogInstances = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterLogInstances.setStatus('current')
tFilterLogBindings = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterLogBindings.setStatus('current')
tFilterRedirectPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 10), )
if mibBuilder.loadTexts: tFilterRedirectPolicyTable.setStatus('current')
tFilterRedirectPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicy"))
if mibBuilder.loadTexts: tFilterRedirectPolicyEntry.setStatus('current')
tFilterRedirectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 10, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tFilterRedirectPolicy.setStatus('current')
tFilterRPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 10, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPRowStatus.setStatus('current')
tFilterRPDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 10, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPDescription.setStatus('current')
tFilterRPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 10, 1, 4), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPAdminState.setStatus('current')
tFilterRPActiveDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 10, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRPActiveDest.setStatus('current')
tFilterRedirectDestTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11), )
if mibBuilder.loadTexts: tFilterRedirectDestTable.setStatus('current')
tFilterRedirectDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicy"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectDest"))
if mibBuilder.loadTexts: tFilterRedirectDestEntry.setStatus('current')
tFilterRedirectDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1, 1), IpAddress())
if mibBuilder.loadTexts: tFilterRedirectDest.setStatus('current')
tFilterRDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRDRowStatus.setStatus('current')
tFilterRDDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRDDescription.setStatus('current')
tFilterRDAdminPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRDAdminPriority.setStatus('current')
tFilterRDOperPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRDOperPriority.setStatus('current')
tFilterRDAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1, 6), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRDAdminState.setStatus('current')
tFilterRDOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 11, 1, 7), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRDOperState.setStatus('current')
tFilterRedirectSNMPTestTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12), )
if mibBuilder.loadTexts: tFilterRedirectSNMPTestTable.setStatus('current')
tFilterRedirectSNMPTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicy"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectDest"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectSNMPTest"))
if mibBuilder.loadTexts: tFilterRedirectSNMPTestEntry.setStatus('current')
tFilterRedirectSNMPTest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tFilterRedirectSNMPTest.setStatus('current')
tFilterRSTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTRowStatus.setStatus('current')
tFilterRSTOID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 3), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTOID.setStatus('current')
tFilterRSTCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTCommunity.setStatus('current')
tFilterRSTSNMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("snmpv1", 1), ("snmpv2c", 2), ("snmpv3", 3))).clone('snmpv2c')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTSNMPVersion.setStatus('current')
tFilterRSTInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTInterval.setStatus('current')
tFilterRSTTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTTimeout.setStatus('current')
tFilterRSTDropCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTDropCount.setStatus('current')
tFilterRSTHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTHoldDown.setStatus('current')
tFilterRSTHoldDownRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTHoldDownRemain.setStatus('current')
tFilterRSTLastActionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastActionTime.setStatus('current')
tFilterRSTLastOID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastOID.setStatus('current')
tFilterRSTLastType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 0), ("counter32", 1), ("unsigned32", 2), ("timeTicks", 3), ("integer32", 4), ("ipAddress", 5), ("octetString", 6), ("objectId", 7), ("counter64", 8), ("opaque", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastType.setStatus('current')
tFilterRSTLastCounter32Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastCounter32Val.setStatus('current')
tFilterRSTLastUnsigned32Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastUnsigned32Val.setStatus('current')
tFilterRSTLastTimeTicksVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastTimeTicksVal.setStatus('current')
tFilterRSTLastInt32Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastInt32Val.setStatus('current')
tFilterRSTLastOctetStringVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastOctetStringVal.setStatus('current')
tFilterRSTLastIpAddressVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastIpAddressVal.setStatus('current')
tFilterRSTLastOidVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 20), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastOidVal.setStatus('current')
tFilterRSTLastCounter64Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastCounter64Val.setStatus('current')
tFilterRSTLastOpaqueVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 22), Opaque()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastOpaqueVal.setStatus('current')
tFilterRSTLastAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastAction.setStatus('current')
tFilterRSTLastPrioChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-255, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTLastPrioChange.setStatus('current')
tFilterRSTNextRespIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 12, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTNextRespIndex.setStatus('current')
tFilterRedirectSNMPRespTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13), )
if mibBuilder.loadTexts: tFilterRedirectSNMPRespTable.setStatus('current')
tFilterRedirectSNMPRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicy"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectDest"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectSNMPTest"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTRespId"))
if mibBuilder.loadTexts: tFilterRedirectSNMPRespEntry.setStatus('current')
tFilterRSTRespId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: tFilterRSTRespId.setStatus('current')
tFilterRSTRespRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTRespRowStatus.setStatus('current')
tFilterRSTRespAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("increase", 1), ("decrease", 2), ("disable", 3))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTRespAction.setStatus('current')
tFilterRSTRespPrioChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTRespPrioChange.setStatus('current')
tFilterRSTRespOID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 5), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTRespOID.setStatus('current')
tFilterRSTRespType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("counter32", 1), ("unsigned32", 2), ("timeTicks", 3), ("integer32", 4), ("ipAddress", 5), ("octetString", 6), ("objectId", 7), ("counter64", 8), ("opaque", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTRespType.setStatus('current')
tFilterRSTCounter32Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTCounter32Val.setStatus('current')
tFilterRSTUnsigned32Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTUnsigned32Val.setStatus('current')
tFilterRSTTimeTicksVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 9), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTTimeTicksVal.setStatus('current')
tFilterRSTInt32Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTInt32Val.setStatus('current')
tFilterRSTOctetStringVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 11), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTOctetStringVal.setStatus('current')
tFilterRSTIpAddressVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTIpAddressVal.setStatus('current')
tFilterRSTOidVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 13), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTOidVal.setStatus('current')
tFilterRSTCounter64Val = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRSTCounter64Val.setStatus('current')
tFilterRSTOpaqueVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 13, 1, 15), Opaque()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRSTOpaqueVal.setStatus('current')
tFilterRedirectURLTestTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14), )
if mibBuilder.loadTexts: tFilterRedirectURLTestTable.setStatus('current')
tFilterRedirectURLTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicy"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectDest"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectURLTest"))
if mibBuilder.loadTexts: tFilterRedirectURLTestEntry.setStatus('current')
tFilterRedirectURLTest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tFilterRedirectURLTest.setStatus('current')
tFilterRUTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTRowStatus.setStatus('current')
tFilterRUTURL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 3), DisplayString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTURL.setStatus('current')
tFilterRUTHTTPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 4), DisplayString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTHTTPVersion.setStatus('current')
tFilterRUTInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTInterval.setStatus('current')
tFilterRUTTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTTimeout.setStatus('current')
tFilterRUTDropCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTDropCount.setStatus('current')
tFilterRUTHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTHoldDown.setStatus('current')
tFilterRUTHoldDownRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRUTHoldDownRemain.setStatus('current')
tFilterRUTLastActionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRUTLastActionTime.setStatus('current')
tFilterRUTLastRetCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRUTLastRetCode.setStatus('current')
tFilterRUTLastAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRUTLastAction.setStatus('current')
tFilterRUTLastPrioChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 14, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-255, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRUTLastPrioChange.setStatus('current')
tFilterRedirectURLRespTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 15), )
if mibBuilder.loadTexts: tFilterRedirectURLRespTable.setStatus('current')
tFilterRedirectURLRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicy"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectDest"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectURLTest"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectURLLowRespCode"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectURLHighRespCode"))
if mibBuilder.loadTexts: tFilterRedirectURLRespEntry.setStatus('current')
tFilterRedirectURLLowRespCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 15, 1, 1), Unsigned32())
if mibBuilder.loadTexts: tFilterRedirectURLLowRespCode.setStatus('current')
tFilterRedirectURLHighRespCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 15, 1, 2), Unsigned32())
if mibBuilder.loadTexts: tFilterRedirectURLHighRespCode.setStatus('current')
tFilterRUTRespRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 15, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTRespRowStatus.setStatus('current')
tFilterRUTRespAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("increase", 1), ("decrease", 2), ("disable", 3))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTRespAction.setStatus('current')
tFilterRUTRespPrioChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRUTRespPrioChange.setStatus('current')
tFilterRedirectPingTestTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16), )
if mibBuilder.loadTexts: tFilterRedirectPingTestTable.setStatus('current')
tFilterRedirectPingTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicy"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectDest"))
if mibBuilder.loadTexts: tFilterRedirectPingTestEntry.setStatus('current')
tFilterRPTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPTRowStatus.setStatus('current')
tFilterRPTInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPTInterval.setStatus('current')
tFilterRPTTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPTTimeout.setStatus('current')
tFilterRPTDropCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPTDropCount.setStatus('current')
tFilterRPTHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterRPTHoldDown.setStatus('current')
tFilterRPTHoldDownRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRPTHoldDownRemain.setStatus('current')
tFilterRPTLastActionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRPTLastActionTime.setStatus('current')
tFilterRPTLastAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterRPTLastAction.setStatus('current')
tAutoIPFilterEntryTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 17), )
if mibBuilder.loadTexts: tAutoIPFilterEntryTable.setStatus('obsolete')
tAutoIPFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tAutoIPFilterId"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tAutoIPFilterEntrySourceIpAddr"))
if mibBuilder.loadTexts: tAutoIPFilterEntry.setStatus('obsolete')
tAutoIPFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 17, 1, 1), TFilterID().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tAutoIPFilterId.setStatus('obsolete')
tAutoIPFilterEntrySourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 17, 1, 2), IpAddress())
if mibBuilder.loadTexts: tAutoIPFilterEntrySourceIpAddr.setStatus('obsolete')
tAutoIPFilterEntrySourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 17, 1, 3), IpAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAutoIPFilterEntrySourceIpMask.setStatus('obsolete')
tFilterDomainLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 9, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFilterDomainLastChanged.setStatus('current')
tIPv6FilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 18), )
if mibBuilder.loadTexts: tIPv6FilterTable.setStatus('current')
tIPv6FilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterId"))
if mibBuilder.loadTexts: tIPv6FilterEntry.setStatus('current')
tIPv6FilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 18, 1, 1), TIPFilterID().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tIPv6FilterId.setStatus('current')
tIPv6FilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 18, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterRowStatus.setStatus('current')
tIPv6FilterScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 18, 1, 3), TItemScope().clone('template')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterScope.setStatus('current')
tIPv6FilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 18, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterDescription.setStatus('current')
tIPv6FilterDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 18, 1, 5), TFilterAction().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterDefaultAction.setStatus('current')
tIPv6FilterParamsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19), )
if mibBuilder.loadTexts: tIPv6FilterParamsTable.setStatus('current')
tIPv6FilterParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterId"), (0, "ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIndex"))
if mibBuilder.loadTexts: tIPv6FilterParamsEntry.setStatus('current')
tIPv6FilterParamsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 1), TEntryId())
if mibBuilder.loadTexts: tIPv6FilterParamsIndex.setStatus('current')
tIPv6FilterParamsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsRowStatus.setStatus('current')
tIPv6FilterParamsLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 3), TFilterLogId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsLogId.setStatus('current')
tIPv6FilterParamsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsDescription.setStatus('current')
tIPv6FilterParamsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 5), TFilterActionOrDefault().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsAction.setStatus('current')
tIPv6FilterParamsForwardNH = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 6), InetAddressIPv6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsForwardNH.setStatus('current')
tIPv6FilterParamsForwardNHIndirect = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsForwardNHIndirect.setStatus('current')
tIPv6FilterParamsRemarkDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 8), TDSCPFilterActionValue().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsRemarkDSCP.setStatus('current')
tIPv6FilterParamsRemarkDSCPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 9), TDSCPFilterActionValue().clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsRemarkDSCPMask.setStatus('current')
tIPv6FilterParamsRemarkDot1p = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 10), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsRemarkDot1p.setStatus('current')
tIPv6FilterParamsSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 11), InetAddressIPv6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsSourceIpAddr.setStatus('current')
tIPv6FilterParamsSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 12), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsSourceIpMask.setStatus('current')
tIPv6FilterParamsDestinationIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 13), InetAddressIPv6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsDestinationIpAddr.setStatus('current')
tIPv6FilterParamsDestinationIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 14), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsDestinationIpMask.setStatus('current')
tIPv6FilterParamsNextHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 15), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsNextHeader.setStatus('current')
tIPv6FilterParamsSourcePortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 16), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsSourcePortValue1.setStatus('current')
tIPv6FilterParamsSourcePortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 17), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsSourcePortValue2.setStatus('current')
tIPv6FilterParamsSourcePortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 18), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsSourcePortOperator.setStatus('current')
tIPv6FilterParamsDestPortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 19), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsDestPortValue1.setStatus('current')
tIPv6FilterParamsDestPortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 20), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsDestPortValue2.setStatus('current')
tIPv6FilterParamsDestPortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 21), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsDestPortOperator.setStatus('current')
tIPv6FilterParamsDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 22), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsDSCP.setStatus('current')
tIPv6FilterParamsTcpSyn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 23), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsTcpSyn.setStatus('current')
tIPv6FilterParamsTcpAck = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 24), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsTcpAck.setStatus('current')
tIPv6FilterParamsIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsIcmpCode.setStatus('current')
tIPv6FilterParamsIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsIcmpType.setStatus('current')
tIPv6FilterParamsCflowdSample = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 27), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsCflowdSample.setStatus('current')
tIPv6FilterParamsCflowdIfSample = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 28), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsCflowdIfSample.setStatus('current')
tIPv6FilterParamsForwardNHInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsForwardNHInterface.setStatus('current')
tIPv6FilterParamsIngressHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPv6FilterParamsIngressHitCount.setStatus('current')
tIPv6FilterParamsEgressHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPv6FilterParamsEgressHitCount.setStatus('current')
tIPv6FilterParamsLogInstantiated = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPv6FilterParamsLogInstantiated.setStatus('current')
tIPv6FilterParamsForwardRedPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 33), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsForwardRedPlcy.setStatus('current')
tIPv6FilterParamsActiveDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 34), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPv6FilterParamsActiveDest.setStatus('current')
tIPv6FilterParamsTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 35), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tIPv6FilterParamsTimeRangeName.setStatus('current')
tIPv6FilterParamsTimeRangeState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 36), TTimeRangeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPv6FilterParamsTimeRangeState.setStatus('current')
tIPv6FilterParamsIngrHitByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPv6FilterParamsIngrHitByteCount.setStatus('current')
tIPv6FilterParamsEgrHitByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 19, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tIPv6FilterParamsEgrHitByteCount.setStatus('current')
tFilterPBRDropReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalidInterface", 0), ("interfaceDown", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tFilterPBRDropReason.setStatus('current')
tFilterParmRow = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 8, 2), RowPointer()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tFilterParmRow.setStatus('current')
tFilterAlarmDescription = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 21, 8, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tFilterAlarmDescription.setStatus('current')
tIPFilterPBRPacketsDrop = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 21, 0, 1)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNHInterface"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterPBRDropReason"))
if mibBuilder.loadTexts: tIPFilterPBRPacketsDrop.setStatus('current')
tFilterEntryActivationFailed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 21, 0, 2)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterParmRow"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterAlarmDescription"))
if mibBuilder.loadTexts: tFilterEntryActivationFailed.setStatus('current')
tFilterEntryActivationRestored = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 21, 0, 3)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterParmRow"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterAlarmDescription"))
if mibBuilder.loadTexts: tFilterEntryActivationRestored.setStatus('current')
tFilterMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 1))
tFilterMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2))
tFilter7450V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 1, 4)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterScalarGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterV4v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterV4v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilter7450V4v0Compliance = tFilter7450V4v0Compliance.setStatus('obsolete')
tFilter7750V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 1, 5)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterScalarGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterV4v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterV4v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterNotificationsGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterV4v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilter7750V4v0Compliance = tFilter7750V4v0Compliance.setStatus('obsolete')
tFilter7450V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 1, 6)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterScalarGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterV5v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterV4v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterNotificationsGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tTodPolicies77450V5v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tToDPoliciesV5v0NotifyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilter7450V5v0Compliance = tFilter7450V5v0Compliance.setStatus('obsolete')
tFilter77x0V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 1, 7)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterScalarGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterV5v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterV4v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterNotificationsGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterV4v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tTodPolicies77x0V5v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tToDPoliciesV5v0NotifyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilter77x0V5v0Compliance = tFilter77x0V5v0Compliance.setStatus('obsolete')
tFilter7450V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 1, 8)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterScalarGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterV6v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterV6v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterNotificationsGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tTodPolicies77450V5v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tToDPoliciesV5v0NotifyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilter7450V6v0Compliance = tFilter7450V6v0Compliance.setStatus('current')
tFilter77x0V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 1, 9)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterScalarGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterV6v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterV6v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRedirectPolicyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterNotificationsGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterV6v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tTodPolicies77x0V5v0Group"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tToDPoliciesV5v0NotifyGroup"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilter77x0V6v0Compliance = tFilter77x0V6v0Compliance.setStatus('current')
tFilterLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 3)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogDestination"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogMaxNumEntries"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogSysLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogFileId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogStopOnFull"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogEnabled"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogMaxInstances"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogInstances"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogBindings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilterLogGroup = tFilterLogGroup.setStatus('current')
tFilterRedirectPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 4)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPAdminState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPActiveDest"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRDRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRDDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRDAdminPriority"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRDOperPriority"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRDAdminState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRDOperState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTOID"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTCommunity"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTSNMPVersion"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTInterval"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTTimeout"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTDropCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTHoldDown"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTHoldDownRemain"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastActionTime"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastOID"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastCounter32Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastUnsigned32Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastTimeTicksVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastInt32Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastOctetStringVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastIpAddressVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastOidVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastCounter64Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastOpaqueVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTLastPrioChange"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTNextRespIndex"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTRespRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTRespAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTRespPrioChange"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTRespOID"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTRespType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTCounter32Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTUnsigned32Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTTimeTicksVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTInt32Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTOctetStringVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTIpAddressVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTOidVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTCounter64Val"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRSTOpaqueVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTURL"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTHTTPVersion"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTInterval"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTTimeout"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTDropCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTHoldDown"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTHoldDownRemain"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTLastActionTime"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTLastRetCode"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTLastAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTLastPrioChange"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTRespRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTRespAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRUTRespPrioChange"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTInterval"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTTimeout"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTDropCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTHoldDown"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTHoldDownRemain"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTLastActionTime"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterRPTLastAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilterRedirectPolicyGroup = tFilterRedirectPolicyGroup.setStatus('current')
tFilterScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 7)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterDomainLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilterScalarGroup = tFilterScalarGroup.setStatus('current')
tFilterNotificationObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 8)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterPBRDropReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilterNotificationObjGroup = tFilterNotificationObjGroup.setStatus('obsolete')
tFilterNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 9)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterPBRPacketsDrop"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilterNotificationsGroup = tFilterNotificationsGroup.setStatus('current')
tIPv6FilterV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 11)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterScope"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterDefaultAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardNH"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardNHIndirect"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRemarkDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRemarkDSCPMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRemarkDot1p"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourceIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestinationIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestinationIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsNextHeader"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourcePortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourcePortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourcePortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestPortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestPortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestPortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTcpSyn"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTcpAck"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIcmpCode"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIcmpType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsCflowdSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsCflowdIfSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardNHInterface"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIngressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsEgressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsLogInstantiated"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardRedPlcy"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsActiveDest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tIPv6FilterV4v0Group = tIPv6FilterV4v0Group.setStatus('obsolete')
tIPFilterV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 12)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterScope"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterDefaultAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNH"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNHIndirect"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDSCPMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDot1p"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourceIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestinationIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestinationIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsProtocol"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFragment"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsOptionPresent"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIpOptionValue"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIpOptionMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsMultipleOption"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTcpSyn"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTcpAck"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIcmpCode"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIcmpType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsCflowdSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsCflowdIfSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNHInterface"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIngressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsEgressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsLogInstantiated"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardRedPlcy"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsActiveDest"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSvcId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSapPortId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSapEncapVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSdpBind"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRedirectURL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tIPFilterV4v0Group = tIPFilterV4v0Group.setStatus('obsolete')
tMacFilterV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 13)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterScope"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterDefaultAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFrameType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSrcMAC"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSrcMACMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDstMAC"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDstMACMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDot1pValue"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDot1pMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsEtherType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDsap"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDsapMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSsap"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSsapMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSnapPid"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSnapOui"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsIngressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsEgressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsLogInstantiated"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSvcId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSapPortId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSapEncapVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSdpBind"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsRedirectURL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tMacFilterV4v0Group = tMacFilterV4v0Group.setStatus('obsolete')
tTodPoliciesV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 14)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTimeRangeState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsTimeRangeState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTimeRangeState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tTodPoliciesV4v0Group = tTodPoliciesV4v0Group.setStatus('obsolete')
tmnxFilterObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 15)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tAutoIPFilterEntrySourceIpMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxFilterObsoleteGroup = tmnxFilterObsoleteGroup.setStatus('current')
tToDPoliciesV5v0NotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 16)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterEntryActivationFailed"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterEntryActivationRestored"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tToDPoliciesV5v0NotifyGroup = tToDPoliciesV5v0NotifyGroup.setStatus('current')
tIPFilterV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 17)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterScope"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterDefaultAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNH"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNHIndirect"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDSCPMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDot1p"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourceIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestinationIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestinationIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsProtocol"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFragment"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsOptionPresent"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIpOptionValue"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIpOptionMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsMultipleOption"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTcpSyn"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTcpAck"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIcmpCode"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIcmpType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsCflowdSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsCflowdIfSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNHInterface"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIngressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsEgressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsLogInstantiated"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardRedPlcy"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsActiveDest"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSvcId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSapPortId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSapEncapVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSdpBind"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRedirectURL"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSrcIpFullMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestIpFullMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tIPFilterV5v0Group = tIPFilterV5v0Group.setStatus('obsolete')
tFilterLogV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 18)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogSummaryEnabled"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterLogSummaryCrit1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilterLogV5v0Group = tFilterLogV5v0Group.setStatus('current')
tTodPolicies77450V5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 19)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTimeRangeState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsTimeRangeState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tTodPolicies77450V5v0Group = tTodPolicies77450V5v0Group.setStatus('current')
tTodPolicies77x0V5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 20)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTimeRangeState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsTimeRangeState"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTimeRangeName"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTimeRangeState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tTodPolicies77x0V5v0Group = tTodPolicies77x0V5v0Group.setStatus('current')
tFilterNotificationObjV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 21)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterPBRDropReason"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterParmRow"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tFilterAlarmDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tFilterNotificationObjV5v0Group = tFilterNotificationObjV5v0Group.setStatus('current')
tIPFilterV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 22)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterScope"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterDefaultAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNH"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNHIndirect"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDSCPMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRemarkDot1p"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourceIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestinationIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestinationIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsProtocol"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSourcePortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestPortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFragment"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsOptionPresent"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIpOptionValue"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIpOptionMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsMultipleOption"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTcpSyn"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsTcpAck"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIcmpCode"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIcmpType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsCflowdSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsCflowdIfSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardNHInterface"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIngressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsEgressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsLogInstantiated"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsForwardRedPlcy"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsActiveDest"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSvcId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSapPortId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSapEncapVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsFwdSdpBind"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsRedirectURL"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsSrcIpFullMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsDestIpFullMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsIngrHitByteCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPFilterParamsEgrHitByteCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tIPFilterV6v0Group = tIPFilterV6v0Group.setStatus('current')
tMacFilterV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 23)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterScope"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterDefaultAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFrameType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSrcMAC"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSrcMACMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDstMAC"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDstMACMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDot1pValue"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDot1pMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsEtherType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDsap"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsDsapMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSsap"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSsapMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSnapPid"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsSnapOui"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsIngressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsEgressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsLogInstantiated"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSvcId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSapPortId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSapEncapVal"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsFwdSdpBind"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsRedirectURL"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsIngrHitByteCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tMacFilterParamsEgrHitByteCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tMacFilterV6v0Group = tMacFilterV6v0Group.setStatus('current')
tIPv6FilterV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 21, 2, 24)).setObjects(("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterScope"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterDefaultAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRowStatus"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsLogId"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDescription"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsAction"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardNH"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardNHIndirect"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRemarkDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRemarkDSCPMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsRemarkDot1p"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourceIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestinationIpAddr"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestinationIpMask"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsNextHeader"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourcePortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourcePortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsSourcePortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestPortValue1"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestPortValue2"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDestPortOperator"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsDSCP"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTcpSyn"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsTcpAck"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIcmpCode"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIcmpType"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsCflowdSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsCflowdIfSample"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardNHInterface"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIngressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsEgressHitCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsLogInstantiated"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsForwardRedPlcy"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsActiveDest"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsIngrHitByteCount"), ("ALCATEL-IND1-TIMETRA-FILTER-MIB", "tIPv6FilterParamsEgrHitByteCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tIPv6FilterV6v0Group = tIPv6FilterV6v0Group.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-FILTER-MIB", tMacFilterParamsSrcMACMask=tMacFilterParamsSrcMACMask, tFilterRedirectPolicyGroup=tFilterRedirectPolicyGroup, tMacFilterParamsTimeRangeState=tMacFilterParamsTimeRangeState, tFilterRSTRowStatus=tFilterRSTRowStatus, tMacFilterParamsDstMACMask=tMacFilterParamsDstMACMask, TEntryId=TEntryId, tMacFilterParamsDot1pValue=tMacFilterParamsDot1pValue, tFilterRUTLastPrioChange=tFilterRUTLastPrioChange, tIPFilterParamsDestPortValue1=tIPFilterParamsDestPortValue1, tIPFilterParamsLogInstantiated=tIPFilterParamsLogInstantiated, tMacFilterV4v0Group=tMacFilterV4v0Group, tFilterRUTLastAction=tFilterRUTLastAction, tFilterRedirectDestTable=tFilterRedirectDestTable, tMacFilterRowStatus=tMacFilterRowStatus, tIPv6FilterParamsForwardNHInterface=tIPv6FilterParamsForwardNHInterface, tFilterRedirectURLTest=tFilterRedirectURLTest, tMacFilterParamsSsapMask=tMacFilterParamsSsapMask, tFilterRUTRowStatus=tFilterRUTRowStatus, tFilterRDAdminState=tFilterRDAdminState, tIPv6FilterDescription=tIPv6FilterDescription, tIPFilterParamsDestinationIpAddr=tIPFilterParamsDestinationIpAddr, tIPv6FilterParamsTcpSyn=tIPv6FilterParamsTcpSyn, tFilterRDOperState=tFilterRDOperState, tFilterRSTRespRowStatus=tFilterRSTRespRowStatus, tMacFilterParamsEntry=tMacFilterParamsEntry, tIPFilterParamsTcpAck=tIPFilterParamsTcpAck, tFilterRSTLastOctetStringVal=tFilterRSTLastOctetStringVal, tFilterAlarmDescription=tFilterAlarmDescription, tFilter77x0V6v0Compliance=tFilter77x0V6v0Compliance, tIPv6FilterParamsRowStatus=tIPv6FilterParamsRowStatus, tIPv6FilterParamsActiveDest=tIPv6FilterParamsActiveDest, tIPFilterParamsSourcePortValue2=tIPFilterParamsSourcePortValue2, tIPFilterParamsTable=tIPFilterParamsTable, tMacFilterParamsTimeRangeName=tMacFilterParamsTimeRangeName, tMacFilterParamsEtherType=tMacFilterParamsEtherType, tIPv6FilterParamsIngressHitCount=tIPv6FilterParamsIngressHitCount, TFilterAction=TFilterAction, tIPFilterParamsDestIpFullMask=tIPFilterParamsDestIpFullMask, tFilterRSTCounter64Val=tFilterRSTCounter64Val, tIPFilterParamsDestPortValue2=tIPFilterParamsDestPortValue2, tIPFilterParamsEgressHitCount=tIPFilterParamsEgressHitCount, TEntryIndicator=TEntryIndicator, tFilterLogGroup=tFilterLogGroup, tIPv6FilterParamsAction=tIPv6FilterParamsAction, tFilter7450V6v0Compliance=tFilter7450V6v0Compliance, tFilterMIBConformance=tFilterMIBConformance, tIPFilterParamsForwardNHInterface=tIPFilterParamsForwardNHInterface, tMacFilterParamsSnapPid=tMacFilterParamsSnapPid, tIPFilterParamsMultipleOption=tIPFilterParamsMultipleOption, tFilterRSTRespOID=tFilterRSTRespOID, tIPv6FilterParamsTable=tIPv6FilterParamsTable, tFilterRSTRespAction=tFilterRSTRespAction, tFilterLogScalars=tFilterLogScalars, tFilterRUTInterval=tFilterRUTInterval, tFilterRSTOctetStringVal=tFilterRSTOctetStringVal, tIPFilterTable=tIPFilterTable, tIPFilterParamsAction=tIPFilterParamsAction, tFilterRSTLastCounter32Val=tFilterRSTLastCounter32Val, tFilterRPTLastAction=tFilterRPTLastAction, tIPv6FilterV4v0Group=tIPv6FilterV4v0Group, tIPFilterParamsIcmpType=tIPFilterParamsIcmpType, tFilterRPTHoldDown=tFilterRPTHoldDown, tFilterLogRowStatus=tFilterLogRowStatus, tFilterDomainLastChanged=tFilterDomainLastChanged, tFilterNotificationObjGroup=tFilterNotificationObjGroup, tIPv6FilterParamsLogInstantiated=tIPv6FilterParamsLogInstantiated, tTodPoliciesV4v0Group=tTodPoliciesV4v0Group, tFilterRedirectURLLowRespCode=tFilterRedirectURLLowRespCode, tFilterEntryActivationRestored=tFilterEntryActivationRestored, tIPFilterDefaultAction=tIPFilterDefaultAction, tIPv6FilterParamsLogId=tIPv6FilterParamsLogId, tFilter7450V5v0Compliance=tFilter7450V5v0Compliance, tIPFilterParamsIngressHitCount=tIPFilterParamsIngressHitCount, tIPv6FilterParamsForwardNHIndirect=tIPv6FilterParamsForwardNHIndirect, tFilterNotificationObjects=tFilterNotificationObjects, tIPv6FilterParamsIndex=tIPv6FilterParamsIndex, tIPFilterParamsSourceIpAddr=tIPFilterParamsSourceIpAddr, tFilterLogEntry=tFilterLogEntry, tIPFilterParamsLogId=tIPFilterParamsLogId, tFilterRUTHTTPVersion=tFilterRUTHTTPVersion, tIPv6FilterParamsIcmpType=tIPv6FilterParamsIcmpType, tFilterRUTTimeout=tFilterRUTTimeout, tFilterRedirectURLRespEntry=tFilterRedirectURLRespEntry, tFilterRSTLastIpAddressVal=tFilterRSTLastIpAddressVal, tToDPoliciesV5v0NotifyGroup=tToDPoliciesV5v0NotifyGroup, tIPv6FilterParamsDSCP=tIPv6FilterParamsDSCP, tFilterRedirectSNMPTestTable=tFilterRedirectSNMPTestTable, tIPFilterId=tIPFilterId, tMacFilterTable=tMacFilterTable, tFilterRUTLastRetCode=tFilterRUTLastRetCode, tIPv6FilterParamsDestPortValue1=tIPv6FilterParamsDestPortValue1, tIPv6FilterParamsIcmpCode=tIPv6FilterParamsIcmpCode, TFilterActionOrDefault=TFilterActionOrDefault, tMacFilterParamsDstMAC=tMacFilterParamsDstMAC, tIPFilterParamsRemarkDSCPMask=tIPFilterParamsRemarkDSCPMask, tFilterRedirectSNMPRespTable=tFilterRedirectSNMPRespTable, tAutoIPFilterEntry=tAutoIPFilterEntry, tMacFilterDescription=tMacFilterDescription, tFilterRSTLastUnsigned32Val=tFilterRSTLastUnsigned32Val, tIPv6FilterParamsSourceIpMask=tIPv6FilterParamsSourceIpMask, tFilterNotificationsGroup=tFilterNotificationsGroup, tFilterRSTLastOidVal=tFilterRSTLastOidVal, tFilterRSTLastInt32Val=tFilterRSTLastInt32Val, tIPv6FilterParamsIngrHitByteCount=tIPv6FilterParamsIngrHitByteCount, tIPFilterPBRPacketsDrop=tIPFilterPBRPacketsDrop, tIPFilterParamsIndex=tIPFilterParamsIndex, tFilterRPTDropCount=tFilterRPTDropCount, tMacFilterParamsIngressHitCount=tMacFilterParamsIngressHitCount, tFilterRSTUnsigned32Val=tFilterRSTUnsigned32Val, tFilterRPRowStatus=tFilterRPRowStatus, tIPFilterParamsFwdSdpBind=tIPFilterParamsFwdSdpBind, tmnxFilterObsoleteGroup=tmnxFilterObsoleteGroup, tFilterRSTLastActionTime=tFilterRSTLastActionTime, tFilterRUTLastActionTime=tFilterRUTLastActionTime, tFilterRedirectDest=tFilterRedirectDest, tMacFilterParamsDot1pMask=tMacFilterParamsDot1pMask, tMacFilterParamsRedirectURL=tMacFilterParamsRedirectURL, tMacFilterParamsFwdSapEncapVal=tMacFilterParamsFwdSapEncapVal, tIPFilterParamsRemarkDot1p=tIPFilterParamsRemarkDot1p, tMacFilterParamsDsapMask=tMacFilterParamsDsapMask, tFilterRPTTimeout=tFilterRPTTimeout, tFilterRSTCounter32Val=tFilterRSTCounter32Val, tIPFilterParamsTimeRangeState=tIPFilterParamsTimeRangeState, tFilterRSTHoldDownRemain=tFilterRSTHoldDownRemain, tMacFilterParamsAction=tMacFilterParamsAction, tMacFilterParamsSnapOui=tMacFilterParamsSnapOui, tFilterRedirectPolicy=tFilterRedirectPolicy, tIPFilterParamsForwardNH=tIPFilterParamsForwardNH, tMacFilterParamsLogId=tMacFilterParamsLogId, tFilterLogDestination=tFilterLogDestination, tIPFilterParamsDestinationIpMask=tIPFilterParamsDestinationIpMask, tMacFilterParamsTable=tMacFilterParamsTable, tFilterRSTInterval=tFilterRSTInterval, tFilterRDOperPriority=tFilterRDOperPriority, tFilterLogId=tFilterLogId, tIPFilterParamsEgrHitByteCount=tIPFilterParamsEgrHitByteCount, tFilterRUTDropCount=tFilterRUTDropCount, tFilterLogSysLogId=tFilterLogSysLogId, tMacFilterParamsFrameType=tMacFilterParamsFrameType, tFilterRSTLastAction=tFilterRSTLastAction, tIPv6FilterParamsTcpAck=tIPv6FilterParamsTcpAck, tIPv6FilterParamsCflowdIfSample=tIPv6FilterParamsCflowdIfSample, TMACFilterID=TMACFilterID, tFilter77x0V5v0Compliance=tFilter77x0V5v0Compliance, tMacFilterId=tMacFilterId, tMacFilterDefaultAction=tMacFilterDefaultAction, tIPv6FilterParamsEgressHitCount=tIPv6FilterParamsEgressHitCount, tIPFilterParamsDescription=tIPFilterParamsDescription, tIPv6FilterParamsTimeRangeState=tIPv6FilterParamsTimeRangeState, tMacFilterParamsRowStatus=tMacFilterParamsRowStatus, tFilterLogFileId=tFilterLogFileId, tFilterRSTOpaqueVal=tFilterRSTOpaqueVal, tTodPolicies77x0V5v0Group=tTodPolicies77x0V5v0Group, tIPv6FilterTable=tIPv6FilterTable, TFilterLogDestination=TFilterLogDestination, tMacFilterParamsEgressHitCount=tMacFilterParamsEgressHitCount, tIPFilterParamsIcmpCode=tIPFilterParamsIcmpCode, tFilterRSTRespPrioChange=tFilterRSTRespPrioChange, tFilterRSTInt32Val=tFilterRSTInt32Val, tIPFilterParamsRowStatus=tIPFilterParamsRowStatus, tIPFilterParamsIpOptionValue=tIPFilterParamsIpOptionValue, tFilterRDAdminPriority=tFilterRDAdminPriority, tFilterRedirectPolicyEntry=tFilterRedirectPolicyEntry, tFilterRedirectSNMPRespEntry=tFilterRedirectSNMPRespEntry, tIPFilterParamsSourcePortValue1=tIPFilterParamsSourcePortValue1, TFilterLogId=TFilterLogId, tMacFilterScope=tMacFilterScope, tFilterRSTRespType=tFilterRSTRespType, TItemMatch=TItemMatch, tIPFilterParamsCflowdIfSample=tIPFilterParamsCflowdIfSample, tFilterRUTURL=tFilterRUTURL, tFilterLogInstances=tFilterLogInstances, tIPv6FilterV6v0Group=tIPv6FilterV6v0Group, TFilterID=TFilterID, tFilterRedirectPolicyTable=tFilterRedirectPolicyTable, tIPv6FilterParamsSourcePortValue2=tIPv6FilterParamsSourcePortValue2, TIPFilterID=TIPFilterID, tFilterLogTable=tFilterLogTable, tIPFilterScope=tIPFilterScope, tFilterRUTHoldDown=tFilterRUTHoldDown, tAutoIPFilterId=tAutoIPFilterId, tMacFilterParamsSrcMAC=tMacFilterParamsSrcMAC, tFilterLogV5v0Group=tFilterLogV5v0Group, PYSNMP_MODULE_ID=timetraFilterMIBModule, tIPv6FilterParamsDescription=tIPv6FilterParamsDescription, tIPFilterV5v0Group=tIPFilterV5v0Group, TFilterLogSummaryCriterium=TFilterLogSummaryCriterium, tMacFilterV6v0Group=tMacFilterV6v0Group, tIPFilterParamsActiveDest=tIPFilterParamsActiveDest, tIPFilterParamsProtocol=tIPFilterParamsProtocol, tFilterRUTHoldDownRemain=tFilterRUTHoldDownRemain, tFilterObjects=tFilterObjects, tIPFilterV4v0Group=tIPFilterV4v0Group, tIPv6FilterParamsDestinationIpAddr=tIPv6FilterParamsDestinationIpAddr, tMacFilterParamsDescription=tMacFilterParamsDescription, tFilterRPDescription=tFilterRPDescription, tFilterNotificationObjV5v0Group=tFilterNotificationObjV5v0Group, tTodPolicies77450V5v0Group=tTodPolicies77450V5v0Group, TItemScope=TItemScope, TTimeRangeState=TTimeRangeState, tIPv6FilterScope=tIPv6FilterScope, tFilterRSTTimeout=tFilterRSTTimeout, tMacFilterParamsFwdSvcId=tMacFilterParamsFwdSvcId, tMacFilterParamsIndex=tMacFilterParamsIndex, tFilterRSTHoldDown=tFilterRSTHoldDown, tFilterRSTIpAddressVal=tFilterRSTIpAddressVal, tFilterRedirectDestEntry=tFilterRedirectDestEntry, tIPv6FilterParamsRemarkDSCPMask=tIPv6FilterParamsRemarkDSCPMask, tIPv6FilterId=tIPv6FilterId, tIPv6FilterParamsSourcePortOperator=tIPv6FilterParamsSourcePortOperator, tIPv6FilterParamsForwardNH=tIPv6FilterParamsForwardNH, tFilterRedirectSNMPTestEntry=tFilterRedirectSNMPTestEntry, tIPFilterParamsIpOptionMask=tIPFilterParamsIpOptionMask, tFilterRSTLastCounter64Val=tFilterRSTLastCounter64Val, tFilterLogSummaryEnabled=tFilterLogSummaryEnabled, tFilterMIBCompliances=tFilterMIBCompliances, tIPv6FilterParamsRemarkDot1p=tIPv6FilterParamsRemarkDot1p, tAutoIPFilterEntrySourceIpAddr=tAutoIPFilterEntrySourceIpAddr, tMacFilterParamsEgrHitByteCount=tMacFilterParamsEgrHitByteCount, tIPFilterParamsFwdSapEncapVal=tIPFilterParamsFwdSapEncapVal, tFilterScalarGroup=tFilterScalarGroup, tIPFilterParamsTimeRangeName=tIPFilterParamsTimeRangeName, tIPv6FilterParamsDestinationIpMask=tIPv6FilterParamsDestinationIpMask, tFilterRPAdminState=tFilterRPAdminState, tFilterRedirectPingTestTable=tFilterRedirectPingTestTable, tFilterEntryActivationFailed=tFilterEntryActivationFailed, tIPFilterParamsForwardNHIndirect=tIPFilterParamsForwardNHIndirect, tMacFilterEntry=tMacFilterEntry, tFilterLogBindings=tFilterLogBindings, tFilterMIBGroups=tFilterMIBGroups, tMacFilterParamsFwdSdpBind=tMacFilterParamsFwdSdpBind, tFilterRPTLastActionTime=tFilterRPTLastActionTime, tIPv6FilterParamsEntry=tIPv6FilterParamsEntry, tIPFilterParamsEntry=tIPFilterParamsEntry, tIPv6FilterParamsTimeRangeName=tIPv6FilterParamsTimeRangeName, tIPFilterEntry=tIPFilterEntry, tFilterRedirectSNMPTest=tFilterRedirectSNMPTest, tFilterRUTRespRowStatus=tFilterRUTRespRowStatus, TFilterType=TFilterType, TEntryIdOrZero=TEntryIdOrZero, tIPv6FilterParamsForwardRedPlcy=tIPv6FilterParamsForwardRedPlcy, tFilterRDRowStatus=tFilterRDRowStatus, tFilterRedirectURLTestEntry=tFilterRedirectURLTestEntry, tFilterRPActiveDest=tFilterRPActiveDest, tIPFilterParamsTcpSyn=tIPFilterParamsTcpSyn, tFilterRSTSNMPVersion=tFilterRSTSNMPVersion, tFilterTimeStampObjects=tFilterTimeStampObjects, tIPv6FilterEntry=tIPv6FilterEntry, tIPFilterParamsDSCP=tIPFilterParamsDSCP, tFilterRSTLastTimeTicksVal=tFilterRSTLastTimeTicksVal, tFilter7750V4v0Compliance=tFilter7750V4v0Compliance, timetraFilterMIBModule=timetraFilterMIBModule, tFilterLogMaxInstances=tFilterLogMaxInstances, tIPFilterParamsDestPortOperator=tIPFilterParamsDestPortOperator)
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-FILTER-MIB", tFilterRSTTimeTicksVal=tFilterRSTTimeTicksVal, tIPFilterDescription=tIPFilterDescription, tFilterRUTRespPrioChange=tFilterRUTRespPrioChange, tFilterLogMaxNumEntries=tFilterLogMaxNumEntries, tIPFilterV6v0Group=tIPFilterV6v0Group, tFilterRPTHoldDownRemain=tFilterRPTHoldDownRemain, tIPv6FilterParamsDestPortValue2=tIPv6FilterParamsDestPortValue2, tFilterRSTDropCount=tFilterRSTDropCount, tIPFilterParamsCflowdSample=tIPFilterParamsCflowdSample, tIPv6FilterParamsRemarkDSCP=tIPv6FilterParamsRemarkDSCP, tAutoIPFilterEntrySourceIpMask=tAutoIPFilterEntrySourceIpMask, tIPFilterParamsSourcePortOperator=tIPFilterParamsSourcePortOperator, tIPFilterParamsSrcIpFullMask=tIPFilterParamsSrcIpFullMask, tIPFilterParamsFwdSvcId=tIPFilterParamsFwdSvcId, tMacFilterParamsFwdSapPortId=tMacFilterParamsFwdSapPortId, tFilterParmRow=tFilterParmRow, tFilterRSTRespId=tFilterRSTRespId, tFilterRSTLastType=tFilterRSTLastType, tIPv6FilterParamsEgrHitByteCount=tIPv6FilterParamsEgrHitByteCount, tIPFilterParamsFwdSapPortId=tIPFilterParamsFwdSapPortId, tIPv6FilterParamsCflowdSample=tIPv6FilterParamsCflowdSample, tIPFilterParamsOptionPresent=tIPFilterParamsOptionPresent, tIPFilterParamsFragment=tIPFilterParamsFragment, tFilterRedirectURLHighRespCode=tFilterRedirectURLHighRespCode, tFilterRSTCommunity=tFilterRSTCommunity, tFilterRSTOID=tFilterRSTOID, tIPv6FilterParamsSourceIpAddr=tIPv6FilterParamsSourceIpAddr, tAutoIPFilterEntryTable=tAutoIPFilterEntryTable, tFilterRUTRespAction=tFilterRUTRespAction, tIPFilterParamsRedirectURL=tIPFilterParamsRedirectURL, tIPv6FilterDefaultAction=tIPv6FilterDefaultAction, tFilterRSTLastPrioChange=tFilterRSTLastPrioChange, tMacFilterParamsLogInstantiated=tMacFilterParamsLogInstantiated, tMacFilterParamsDsap=tMacFilterParamsDsap, tIPv6FilterParamsNextHeader=tIPv6FilterParamsNextHeader, tIPFilterParamsRemarkDSCP=tIPFilterParamsRemarkDSCP, tFilterNotificationsPrefix=tFilterNotificationsPrefix, tFilterRSTLastOpaqueVal=tFilterRSTLastOpaqueVal, tFilterRSTNextRespIndex=tFilterRSTNextRespIndex, tFilterRedirectURLRespTable=tFilterRedirectURLRespTable, tFilterRSTOidVal=tFilterRSTOidVal, tMacFilterParamsSsap=tMacFilterParamsSsap, tFilterLogDescription=tFilterLogDescription, tFilterRPTRowStatus=tFilterRPTRowStatus, tFilterLogEnabled=tFilterLogEnabled, tIPv6FilterParamsDestPortOperator=tIPv6FilterParamsDestPortOperator, tFilterRSTLastOID=tFilterRSTLastOID, tFilterRedirectURLTestTable=tFilterRedirectURLTestTable, tIPv6FilterRowStatus=tIPv6FilterRowStatus, tFilterLogSummaryCrit1=tFilterLogSummaryCrit1, tFilterRedirectPingTestEntry=tFilterRedirectPingTestEntry, tFilter7450V4v0Compliance=tFilter7450V4v0Compliance, tFilterLogStopOnFull=tFilterLogStopOnFull, tIPFilterParamsIngrHitByteCount=tIPFilterParamsIngrHitByteCount, tIPFilterParamsForwardRedPlcy=tIPFilterParamsForwardRedPlcy, tFilterRDDescription=tFilterRDDescription, tFilterRPTInterval=tFilterRPTInterval, tIPFilterRowStatus=tIPFilterRowStatus, tFilterPBRDropReason=tFilterPBRDropReason, tIPFilterParamsSourceIpMask=tIPFilterParamsSourceIpMask, tMacFilterParamsIngrHitByteCount=tMacFilterParamsIngrHitByteCount, tFilterNotifications=tFilterNotifications, tIPv6FilterParamsSourcePortValue1=tIPv6FilterParamsSourcePortValue1)
