#
# PySNMP MIB module HUAWEI-IPPOOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-IPPOOL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
huaweiUtility, = mibBuilder.importSymbols("HUAWEI-MIB", "huaweiUtility")
Ipv6AddressIfIdentifier, Ipv6AddressPrefix, Ipv6Address = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressIfIdentifier", "Ipv6AddressPrefix", "Ipv6Address")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ModuleIdentity, iso, Gauge32, Counter32, ObjectIdentity, Counter64, TimeTicks, NotificationType, Unsigned32, Integer32, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "iso", "Gauge32", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "NotificationType", "Unsigned32", "Integer32", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
hwIppool = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 6, 8))
hwIppool.setRevisions(('2015-08-12 00:00', '2015-03-31 00:00', '2015-02-11 00:00', '2014-12-26 00:00', '2014-12-26 00:00', '2014-07-25 00:00', '2014-03-14 00:00', '2013-11-28 00:00', '2013-11-08 00:00', '2013-10-17 00:00', '2013-07-27 00:00', '2013-07-19 00:00', '2013-05-22 00:00',))
if mibBuilder.loadTexts: hwIppool.setLastUpdated('201508120000Z')
if mibBuilder.loadTexts: hwIppool.setOrganization('Huawei Technologies Co.,Ltd.')
hwIPPoolMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1))
hwIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1), )
if mibBuilder.loadTexts: hwIPPoolTable.setStatus('current')
hwIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"))
if mibBuilder.loadTexts: hwIPPoolEntry.setStatus('current')
hwIPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolIndex.setStatus('current')
hwIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 35))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolName.setStatus('current')
hwIPPoolRouterIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolRouterIPAddr.setStatus('current')
hwIPPoolRouterIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolRouterIPMask.setStatus('current')
hwIPPoolPriDNSIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolPriDNSIPAddr.setStatus('current')
hwIPPoolSecDNSIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolSecDNSIPAddr.setStatus('current')
hwIPPoolPriNBNSIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolPriNBNSIPAddr.setStatus('current')
hwIPPoolSecNBNSIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolSecNBNSIPAddr.setStatus('current')
hwIPPoolIPAddrLease = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolIPAddrLease.setStatus('current')
hwIPPoolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolStatus.setStatus('current')
hwIPPoolVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolVPNInstance.setStatus('current')
hwIPPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("relay", 2), ("server", 3), ("localRuiSlave", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolType.setStatus('current')
hwIPPoolNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolNetwork.setStatus('current')
hwIPPoolNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolNetworkMask.setStatus('current')
hwIPPoolIPTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolIPTotalNum.setStatus('current')
hwIPPoolIPUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolIPUsedNum.setStatus('current')
hwIPPoolIPConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolIPConflictNum.setStatus('current')
hwIPPoolIPExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolIPExcludeNum.setStatus('current')
hwIPPoolIPIdleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolIPIdleNum.setStatus('current')
hwIPPoolIPUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolIPUsedPercent.setStatus('current')
hwIPPoolDNSIPAddrString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDNSIPAddrString.setStatus('current')
hwIPPoolDNSIPAddrStringUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDNSIPAddrStringUndo.setStatus('current')
hwIPPoolNBNSIPAddrString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolNBNSIPAddrString.setStatus('current')
hwIPPoolNBNSIPAddrStringUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolNBNSIPAddrStringUndo.setStatus('current')
hwIPPoolRouterUnnumberedIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolRouterUnnumberedIfName.setStatus('current')
hwIPPoolConflictAutoRecycleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 1440), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolConflictAutoRecycleInterval.setStatus('current')
hwIPPoolLowAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolLowAddr.setStatus('current')
hwIPPoolHighAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 28), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolHighAddr.setStatus('current')
hwIPPoolReqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolReqNum.setStatus('current')
hwIPPoolReqSucNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolReqSucNum.setStatus('current')
hwIPSectionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2), )
if mibBuilder.loadTexts: hwIPSectionTable.setStatus('current')
hwIPSectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPSectionIndex"))
if mibBuilder.loadTexts: hwIPSectionEntry.setStatus('current')
hwIPSectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPSectionIndex.setStatus('current')
hwIPSectionDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPSectionDesc.setStatus('current')
hwIPSectionLowAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPSectionLowAddr.setStatus('current')
hwIPSectionHighAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPSectionHighAddr.setStatus('current')
hwIPSectionLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPSectionLength.setStatus('current')
hwIPSectionUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPSectionUsedNum.setStatus('current')
hwIPSectionConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPSectionConflict.setStatus('current')
hwIPSectionInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPSectionInvalid.setStatus('current')
hwIPSectionAvailableNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPSectionAvailableNum.setStatus('current')
hwIPSectionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPSectionRowStatus.setStatus('current')
hwIPPoolExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3), )
if mibBuilder.loadTexts: hwIPPoolExtTable.setStatus('current')
hwIPPoolExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"))
if mibBuilder.loadTexts: hwIPPoolExtEntry.setStatus('current')
hwIPPoolAvailableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolAvailableStatus.setStatus('current')
hwIPDhcpOptionId1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOptionId1.setStatus('current')
hwIPDhcpOption1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOption1.setStatus('current')
hwIPDhcpOptionId2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOptionId2.setStatus('current')
hwIPDhcpOption2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOption2.setStatus('current')
hwIPDhcpOptionId3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOptionId3.setStatus('current')
hwIPDhcpOption3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOption3.setStatus('current')
hwIPDhcpOptionId4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOptionId4.setStatus('current')
hwIPDhcpOption4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOption4.setStatus('current')
hwIPDnsSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDnsSuffix.setStatus('current')
hwIPDhcpSvrIPRsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpSvrIPRsv.setStatus('current')
hwIPPoolIpAddrRenewal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolIpAddrRenewal.setStatus('current')
hwIPPoolIpAddrRebinding = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolIpAddrRebinding.setStatus('current')
hwIPPoolSIPAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolSIPAddr1.setStatus('current')
hwIPPoolSIPAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolSIPAddr2.setStatus('current')
hwIPPoolSIPName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolSIPName1.setStatus('current')
hwIPPoolSIPName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 3, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolSIPName2.setStatus('current')
hwIPAddressStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 4), )
if mibBuilder.loadTexts: hwIPAddressStatusTable.setStatus('current')
hwIPAddressStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 4, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPSectionIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPAddress"))
if mibBuilder.loadTexts: hwIPAddressStatusEntry.setStatus('current')
hwIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPAddress.setStatus('current')
hwIPAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("idle", 0), ("occupied", 1), ("prohibitive", 2), ("conflictive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPAddressStatus.setStatus('current')
hwPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPoolName.setStatus('current')
hwDhcpSvrGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5), )
if mibBuilder.loadTexts: hwDhcpSvrGroupTable.setStatus('current')
hwDhcpSvrGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpSvrGroupIndex"))
if mibBuilder.loadTexts: hwDhcpSvrGroupEntry.setStatus('current')
hwIPPoolDhcpSvrGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolDhcpSvrGroupIndex.setStatus('current')
hwIPPoolDhcpSvrGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolDhcpSvrGroupName.setStatus('current')
hwIPDhcpSvrPriAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpSvrPriAddr.setStatus('current')
hwIPDhcpSvrScdiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpSvrScdiAddr.setStatus('current')
hwIPDhcpSvrPriState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stop", 0), ("use", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpSvrPriState.setStatus('current')
hwIPDhcpScdPriState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stop", 0), ("use", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpScdPriState.setStatus('current')
hwIPDhcpSvrAutoRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpSvrAutoRelease.setStatus('current')
hwIPDhcpSvrRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpSvrRefCount.setStatus('current')
hwIPDhcpSvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpSvrRowStatus.setStatus('current')
hwIPDhcpSvrPriVpnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpSvrPriVpnInstance.setStatus('current')
hwIPDhcpSvrScdVpnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpSvrScdVpnInstance.setStatus('current')
hwIPDhcpSvrSouce = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 5, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpSvrSouce.setStatus('current')
hwRemotePoolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6), )
if mibBuilder.loadTexts: hwRemotePoolTable.setStatus('current')
hwRemotePoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolIndex"))
if mibBuilder.loadTexts: hwRemotePoolEntry.setStatus('current')
hwRemoteIPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRemoteIPPoolIndex.setStatus('current')
hwRemoteIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemoteIPPoolName.setStatus('current')
hwRemoteIPPoolRouterIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolRouterIPAddr.setStatus('current')
hwRemoteIPPoolRouterIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolRouterIPMask.setStatus('current')
hwRemoteIPPoolDhcpSvrGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolDhcpSvrGroupID.setStatus('current')
hwRemoteIPPoolAvailableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolAvailableStatus.setStatus('current')
hwRemoteIPPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemoteIPPoolRowStatus.setStatus('current')
hwRemoteIPPoolPriDNSIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolPriDNSIPAddress.setStatus('current')
hwRemoteIPPoolSecDNSIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolSecDNSIPAddress.setStatus('current')
hwRemoteIPPoolPriNBNSIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolPriNBNSIPAddress.setStatus('current')
hwRemoteIPPoolSecNBNSIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolSecNBNSIPAddress.setStatus('current')
hwRemoteIPPoolVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolVPNInstance.setStatus('current')
hwRemoteIPPoolDhcpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRemoteIPPoolDhcpGroupName.setStatus('current')
hwRemoteIPPoolLeaseManageEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolLeaseManageEnable.setStatus('current')
hwRemoteIPPoolWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRemoteIPPoolWeight.setStatus('current')
hwIPPoolStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7))
hwIPPoolNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolNum.setStatus('current')
hwIPIdleTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPIdleTotalNum.setStatus('current')
hwIPUsedTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPUsedTotalNum.setStatus('current')
hwIPConflictTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPConflictTotalNum.setStatus('current')
hwIPExcludeTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPExcludeTotalNum.setStatus('current')
hwIPTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPTotalNum.setStatus('current')
hwIPUsedPercent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 7, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPUsedPercent.setStatus('current')
hwDhcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8), )
if mibBuilder.loadTexts: hwDhcpServerTable.setStatus('current')
hwDhcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwDhcpServerIndex"))
if mibBuilder.loadTexts: hwDhcpServerEntry.setStatus('current')
hwDhcpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpServerIndex.setStatus('current')
hwIPPoolDhcpServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolDhcpServerIP.setStatus('current')
hwIPPoolDhcpServerVRFName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolDhcpServerVRFName.setStatus('current')
hwIPPoolDhcpServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolDhcpServerState.setStatus('current')
hwIPPoolDhcpServerSendDisvSpdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDhcpServerSendDisvSpdNum.setStatus('current')
hwIPPoolDhcpServerSendDisvSpdSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDhcpServerSendDisvSpdSec.setStatus('current')
hwIPPoolDhcpServerDeadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDhcpServerDeadCount.setStatus('current')
hwIPPoolDhcpServerNakCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDhcpServerNakCount.setStatus('current')
hwIPPoolDhcpServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDhcpServerTimeout.setStatus('current')
hwIPPoolDhcpServerDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolDhcpServerDeadTime.setStatus('current')
hwIPPoolOptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 9), )
if mibBuilder.loadTexts: hwIPPoolOptionTable.setStatus('current')
hwIPPoolOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 9, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionId"))
if mibBuilder.loadTexts: hwIPPoolOptionEntry.setStatus('current')
hwIPDhcpOptionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpOptionId.setStatus('current')
hwIPDhcpOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPDhcpOption.setStatus('current')
hwIPDhcpOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpOptionRowStatus.setStatus('current')
hwIPPoolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 10), )
if mibBuilder.loadTexts: hwIPPoolGroupTable.setStatus('current')
hwIPPoolGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 10, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"))
if mibBuilder.loadTexts: hwIPPoolGroupEntry.setStatus('current')
hwIPPoolGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupName.setStatus('current')
hwIPPoolGroupVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolGroupVPNInstance.setStatus('current')
hwIPPoolGroupIncludeUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 10, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolGroupIncludeUndo.setStatus('current')
hwIPPoolGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolGroupRowStatus.setStatus('current')
hwIPPoolGroupExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 11), )
if mibBuilder.loadTexts: hwIPPoolGroupExtTable.setStatus('current')
hwIPPoolGroupExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 11, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"), (0, "HUAWEI-IPPOOL-MIB", "hwIPPoolGroupExtIncludePoolName"))
if mibBuilder.loadTexts: hwIPPoolGroupExtEntry.setStatus('current')
hwIPPoolGroupExtIncludePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupExtIncludePoolName.setStatus('current')
hwIPPoolGroupExtIncludePoolMoveOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolGroupExtIncludePoolMoveOrder.setStatus('current')
hwIPPoolGroupExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolGroupExtRowStatus.setStatus('current')
hwIPPoolGroupDisplayTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12), )
if mibBuilder.loadTexts: hwIPPoolGroupDisplayTable.setStatus('current')
hwIPPoolGroupDisplayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"))
if mibBuilder.loadTexts: hwIPPoolGroupDisplayEntry.setStatus('current')
hwIPPoolGroupIncludePoolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIncludePoolNum.setStatus('current')
hwIPPoolGroupBoundByDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupBoundByDomainNum.setStatus('current')
hwIPPoolGroupIPTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIPTotalNum.setStatus('current')
hwIPPoolGroupIPUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIPUsedNum.setStatus('current')
hwIPPoolGroupIPConflictedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIPConflictedNum.setStatus('current')
hwIPPoolGroupIPDisableNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIPDisableNum.setStatus('current')
hwIPPoolGroupIPDesignatedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIPDesignatedNum.setStatus('current')
hwIPPoolGroupIPFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIPFreeNum.setStatus('current')
hwIPPoolGroupIPUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolGroupIPUsedPercent.setStatus('current')
hwIPPoolDomainSearchListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 13), )
if mibBuilder.loadTexts: hwIPPoolDomainSearchListTable.setStatus('current')
hwIPv6PrefixTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16), )
if mibBuilder.loadTexts: hwIPv6PrefixTable.setStatus('current')
hwIPv6PoolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17), )
if mibBuilder.loadTexts: hwIPv6PoolTable.setStatus('current')
hwIPv6PoolStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18), )
if mibBuilder.loadTexts: hwIPv6PoolStatusTable.setStatus('current')
hwIPv6DuidBindPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 19), )
if mibBuilder.loadTexts: hwIPv6DuidBindPrefixTable.setStatus('current')
hwDhcpv6SvrGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20), )
if mibBuilder.loadTexts: hwDhcpv6SvrGroupTable.setStatus('current')
hwIPv6RemotePoolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21), )
if mibBuilder.loadTexts: hwIPv6RemotePoolTable.setStatus('current')
hwIPPoolDomainSearchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 13, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPPoolDomainSearchList"))
if mibBuilder.loadTexts: hwIPPoolDomainSearchListEntry.setStatus('current')
hwIPPoolDomainSearchList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 13, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPPoolDomainSearchList.setStatus('current')
hwIPPoolDomainSearchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 13, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPPoolDomainSearchListRowStatus.setStatus('current')
hwIPv6PrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPv6PrefixIndex"))
if mibBuilder.loadTexts: hwIPv6PrefixEntry.setStatus('current')
hwIPv6PoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPv6PoolIndex"))
if mibBuilder.loadTexts: hwIPv6PoolEntry.setStatus('current')
hwIPv6PoolStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPv6PoolIndex"))
if mibBuilder.loadTexts: hwIPv6PoolStatusEntry.setStatus('current')
hwIPv6DuidBindPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 19, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPv6PrefixIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPv6ClientDuid"))
if mibBuilder.loadTexts: hwIPv6DuidBindPrefixEntry.setStatus('current')
hwDhcpv6SvrGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrGroupIndex"))
if mibBuilder.loadTexts: hwDhcpv6SvrGroupEntry.setStatus('current')
hwIPv6RemotePoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolIndex"))
if mibBuilder.loadTexts: hwIPv6RemotePoolEntry.setStatus('current')
hwIPv6PrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PrefixIndex.setStatus('current')
hwIPv6PrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixName.setStatus('current')
hwIPv6PrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("delegation", 2), ("remote", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixType.setStatus('current')
hwIPv6Prefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 4), Ipv6AddressPrefix()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6Prefix.setStatus('current')
hwIPv6PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixLen.setStatus('current')
hwIPv6PrefixDelegatingLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixDelegatingLen.setStatus('current')
hwIPv6PrefixAdvPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixAdvPreferredLifetime.setStatus('current')
hwIPv6PrefixAdvValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixAdvValidLifetime.setStatus('current')
hwIPv6PrefixAvailableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixAvailableStatus.setStatus('current')
hwIPv6VPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6VPNInstance.setStatus('current')
hwIPv6PrefixReservedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noneReserved", 0), ("macReserved", 1), ("macPlusLeaseReserved", 2), ("duidReserved", 3), ("duidPlusLeaseReserved", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixReservedFlag.setStatus('current')
hwIPv6LinkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 12), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6LinkAddress.setStatus('current')
hwIPv6SlaacUnsharedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6SlaacUnsharedFlag.setStatus('current')
hwIPv6PrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PrefixRowStatus.setStatus('current')
hwIPPoolPDUnshareOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 16, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolPDUnshareOnly.setStatus('current')
hwIPv6PoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PoolIndex.setStatus('current')
hwIPv6PoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolName.setStatus('current')
hwIPv6PoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("delegation", 2), ("relay", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolType.setStatus('current')
hwIPv6PoolPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolPrefixName.setStatus('current')
hwIPv6PoolDnsIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 81))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolDnsIPAddr.setStatus('current')
hwIPv6PoolDnsSearchList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolDnsSearchList.setStatus('current')
hwIPv6PoolPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolPreference.setStatus('current')
hwIPv6PoolAvailableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 8), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolAvailableStatus.setStatus('current')
hwIPv6PoolRenewPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolRenewPercent.setStatus('current')
hwIPv6PoolRebindingPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolRebindingPercent.setStatus('current')
hwIPv6PoolRapidCommitFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolRapidCommitFlag.setStatus('current')
hwIPv6PoolUnicastOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolUnicastOption.setStatus('current')
hwIPv6PoolAFTRName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolAFTRName.setStatus('current')
hwIPv6PoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 17, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6PoolRowStatus.setStatus('current')
hwIPv6FreeAddressNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6FreeAddressNum.setStatus('current')
hwIPv6UsedAddressNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6UsedAddressNum.setStatus('current')
hwIPv6FreePrefixNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6FreePrefixNum.setStatus('current')
hwIPv6UsedPrefixNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6UsedPrefixNum.setStatus('current')
hwIPv6AddressTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6AddressTotalNum.setStatus('current')
hwIPv6AddressUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6AddressUsedNum.setStatus('current')
hwIPv6AddressFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6AddressFreeNum.setStatus('current')
hwIPv6AddressConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6AddressConflictNum.setStatus('current')
hwIPv6AddressExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6AddressExcludeNum.setStatus('current')
hwIPv6AddressUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6AddressUsedPercent.setStatus('current')
hwIPv6NDRAPrefixTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6NDRAPrefixTotalNum.setStatus('current')
hwIPv6NDRAPrefixUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6NDRAPrefixUsedNum.setStatus('current')
hwIPv6NDRAPrefixFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6NDRAPrefixFreeNum.setStatus('current')
hwIPv6NDRAPrefixConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6NDRAPrefixConflictNum.setStatus('current')
hwIPv6NDRAPrefixExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6NDRAPrefixExcludeNum.setStatus('current')
hwIPv6NDRAPrefixUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6NDRAPrefixUsedPercent.setStatus('current')
hwIPv6PDPrefixTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PDPrefixTotalNum.setStatus('current')
hwIPv6PDPrefixUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PDPrefixUsedNum.setStatus('current')
hwIPv6PDPrefixFreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PDPrefixFreeNum.setStatus('current')
hwIPv6PDPrefixConflictNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PDPrefixConflictNum.setStatus('current')
hwIPv6PDPrefixExcludeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PDPrefixExcludeNum.setStatus('current')
hwIPv6PDPrefixUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 18, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6PDPrefixUsedPercent.setStatus('current')
hwIPv6ClientDuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 19, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 28))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6ClientDuid.setStatus('current')
hwIPv6BindPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 19, 1, 2), Ipv6AddressPrefix()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6BindPrefix.setStatus('current')
hwIPv6DuidBindPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 19, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6DuidBindPrefixRowStatus.setStatus('current')
hwDhcpv6SvrGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpv6SvrGroupIndex.setStatus('current')
hwDhcpv6SvrGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrGroupName.setStatus('current')
hwIPDhcpv6SvrAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 3), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpv6SvrAddr1.setStatus('current')
hwIPDhcpv6SvrAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 4), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpv6SvrAddr2.setStatus('current')
hwIPDhcpv6PriSvrState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpv6PriSvrState.setStatus('current')
hwIPDhcpv6ScdSvrState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpv6ScdSvrState.setStatus('current')
hwIPDhcpv6SvrAutoRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpv6SvrAutoRelease.setStatus('current')
hwIPDhcpv6SvrGroupRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpv6SvrGroupRefCount.setStatus('current')
hwDhcpv6SvrInterface1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrInterface1.setStatus('current')
hwDhcpv6SvrInterface2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrInterface2.setStatus('current')
hwDhcpv6SvrAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("masterbackup", 1), ("loadingshare", 2), ("polling", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrAlgorithm.setStatus('current')
hwDhcpv6SvrWeight1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrWeight1.setStatus('current')
hwDhcpv6SvrWeight2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrWeight2.setStatus('current')
hwIPDhcpv6Svr1VrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpv6Svr1VrfName.setStatus('current')
hwIPDhcpv6Svr2VrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpv6Svr2VrfName.setStatus('current')
hwDhcpv6SvrGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrGroupRowStatus.setStatus('current')
hwDhcpv6SvrSourceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 20, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpv6SvrSourceInterface.setStatus('current')
hwIPv6RemotePoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6RemotePoolIndex.setStatus('current')
hwIPv6RemotePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolName.setStatus('current')
hwIPv6RemotePoolPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolPrefixName.setStatus('current')
hwIPv6RemotePoolDhcpv6SvrGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolDhcpv6SvrGroupName.setStatus('current')
hwIPv6RemotePoolAvailableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolAvailableStatus.setStatus('current')
hwIPv6RemotePoolExportHostRouteFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolExportHostRouteFlag.setStatus('current')
hwIPv6RemotePoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolRowStatus.setStatus('current')
hwIPv6RemotePoolExportHostRouteIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 8), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolExportHostRouteIPv6Address.setStatus('current')
hwIPv6RemotePoolExportHostRoutePDPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolExportHostRoutePDPrefix.setStatus('current')
hwIPv6RemotePoolExportHostRouteNDPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPv6RemotePoolExportHostRouteNDPrefix.setStatus('current')
hwIPv6RemotePoolWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 21, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPv6RemotePoolWeight.setStatus('current')
hwIPv6PoolStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22))
hwIpv6PoolNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6PoolNum.setStatus('current')
hwIpv6AddressIdleTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6AddressIdleTotalNum.setStatus('current')
hwIpv6PrefixIdleTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6PrefixIdleTotalNum.setStatus('current')
hwIpv6AddressUsedTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6AddressUsedTotalNum.setStatus('current')
hwIpv6PrefixUsedTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6PrefixUsedTotalNum.setStatus('current')
hwAllIPv6AddressTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllIPv6AddressTotalNum.setStatus('current')
hwAllIPv6AddressUsedNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllIPv6AddressUsedNum.setStatus('current')
hwAllIPv6AddressIdleNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllIPv6AddressIdleNum.setStatus('current')
hwAllIPv6ConflictAddressNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllIPv6ConflictAddressNum.setStatus('current')
hwAllIPv6ExcludeAddressNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllIPv6ExcludeAddressNum.setStatus('current')
hwAllIPv6AddressUsedPercent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllIPv6AddressUsedPercent.setStatus('current')
hwAllNDRAPrefixTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllNDRAPrefixTotalNum.setStatus('current')
hwAllNDRAPrefixUsedNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllNDRAPrefixUsedNum.setStatus('current')
hwAllNDRAPrefixFreeNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllNDRAPrefixFreeNum.setStatus('current')
hwAllNDRAPrefixConflictNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllNDRAPrefixConflictNum.setStatus('current')
hwAllNDRAPrefixExcludeNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllNDRAPrefixExcludeNum.setStatus('current')
hwAllNDRAPrefixUsedPercent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllNDRAPrefixUsedPercent.setStatus('current')
hwAllPDPrefixTotalNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllPDPrefixTotalNum.setStatus('current')
hwAllPDPrefixUsedNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllPDPrefixUsedNum.setStatus('current')
hwAllPDPrefixFreeNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllPDPrefixFreeNum.setStatus('current')
hwAllPDPrefixConflictNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllPDPrefixConflictNum.setStatus('current')
hwAllPDPrefixExcludeNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllPDPrefixExcludeNum.setStatus('current')
hwAllPDPrefixUsedPercent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 22, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAllPDPrefixUsedPercent.setStatus('current')
hwDhcpv6ServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23), )
if mibBuilder.loadTexts: hwDhcpv6ServerTable.setStatus('current')
hwDhcpv6ServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrIndex"))
if mibBuilder.loadTexts: hwDhcpv6ServerEntry.setStatus('current')
hwDhcpv6SvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpv6SvrIndex.setStatus('current')
hwDhcpv6ServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpv6ServerIP.setStatus('current')
hwDhcpv6ServerVRFName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpv6ServerVRFName.setStatus('current')
hwDhcpv6ServerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpv6ServerIfIndex.setStatus('current')
hwDhcpv6ServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDhcpv6ServerState.setStatus('current')
hwDhcpv6ServerSendSolicitSpeedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDhcpv6ServerSendSolicitSpeedNum.setStatus('current')
hwDhcpv6ServerSendSolicitSpeedSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDhcpv6ServerSendSolicitSpeedSec.setStatus('current')
hwIPPoolOptionExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 14), )
if mibBuilder.loadTexts: hwIPPoolOptionExtTable.setStatus('current')
hwIPPoolOptionExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 14, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionId"), (0, "HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionSubId"))
if mibBuilder.loadTexts: hwIPPoolOptionExtEntry.setStatus('current')
hwIPDhcpOptionSubId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpOptionSubId.setStatus('current')
hwIPDhcpOptionSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("string", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpOptionSubType.setStatus('current')
hwIPDhcpOptionSubValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 14, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpOptionSubValue.setStatus('current')
hwIPDhcpOptionSubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 14, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpOptionSubRowStatus.setStatus('current')
hwIPPoolReplyOptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15), )
if mibBuilder.loadTexts: hwIPPoolReplyOptionTable.setStatus('current')
hwIPPoolReplyOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPDhcpSpecOptionId"), (0, "HUAWEI-IPPOOL-MIB", "hwIPDhcpSpecOption"), (0, "HUAWEI-IPPOOL-MIB", "hwIPDhcpReplyOptionId"), (0, "HUAWEI-IPPOOL-MIB", "hwIPDhcpReplyOptionSubId"))
if mibBuilder.loadTexts: hwIPPoolReplyOptionEntry.setStatus('current')
hwIPDhcpSpecOptionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpSpecOptionId.setStatus('current')
hwIPDhcpSpecOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpSpecOption.setStatus('current')
hwIPDhcpReplyOptionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpReplyOptionId.setStatus('current')
hwIPDhcpReplyOptionSubId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPDhcpReplyOptionSubId.setStatus('current')
hwIPDhcpReplyOptionSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ip", 1), ("string", 2), ("hex", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpReplyOptionSubType.setStatus('current')
hwIPDhcpReplyOptionSub = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpReplyOptionSub.setStatus('current')
hwIPDhcpReplyOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 15, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIPDhcpReplyOptionRowStatus.setStatus('current')
hwIPV6AddressStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 24), )
if mibBuilder.loadTexts: hwIPV6AddressStatusTable.setStatus('current')
hwIPV6AddressStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 24, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPv6PrefixIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIPv6Address"))
if mibBuilder.loadTexts: hwIPV6AddressStatusEntry.setStatus('current')
hwIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 24, 1, 1), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6Address.setStatus('current')
hwIPv6AddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 0), ("occupied", 1), ("prohibitive", 2), ("conflictive", 3), ("flex", 4), ("static", 5), ("radius", 6), ("reserved", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPv6AddressStatus.setStatus('current')
hwIPv6LocalPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 24, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6LocalPrefixName.setStatus('current')
hwIPV6PrefixStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 25), )
if mibBuilder.loadTexts: hwIPV6PrefixStatusTable.setStatus('current')
hwIPV6PrefixStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 25, 1), ).setIndexNames((0, "HUAWEI-IPPOOL-MIB", "hwIPv6PrefixIndex"), (0, "HUAWEI-IPPOOL-MIB", "hwIpv6Prefix"))
if mibBuilder.loadTexts: hwIPV6PrefixStatusEntry.setStatus('current')
hwIpv6Prefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 25, 1, 1), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6Prefix.setStatus('current')
hwIpv6PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpv6PrefixLen.setStatus('current')
hwIPv6PrefixStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("idle", 0), ("occupied", 1), ("prohibitive", 2), ("conflictive", 3), ("flex", 4), ("static", 5), ("radius", 6), ("reserved", 7), ("binded", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPv6PrefixStatus.setStatus('current')
hwIPv6DelegationPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 25, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIPv6DelegationPrefixName.setStatus('current')
hwIPPoolConstantIndex = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 26))
hwIPPoolConstantIndexEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 26, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolConstantIndexEnable.setStatus('current')
hwIPPoolSetting = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 27))
hwIPPoolAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 27, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPPoolAlgorithm.setStatus('current')
hwIPv6PoolAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 1, 27, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIPv6PoolAlgorithm.setStatus('current')
hwIPPoolMibTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2))
hwIPPoolTrapOid = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1))
hwUserIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUserIPAddress.setStatus('current')
hwDHCPServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDHCPServerAddr.setStatus('current')
hwDhcpSvrVrfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDhcpSvrVrfName.setStatus('current')
hwIPPoolGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIPPoolGroupIndex.setStatus('current')
hwDhcpSvrDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDhcpSvrDownReason.setStatus('current')
hwIPPoolDAPName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 253))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIPPoolDAPName.setStatus('current')
hwIPPoolDAPReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIPPoolDAPReason.setStatus('current')
hwIPPoolTrapsDefine = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2))
hwIPPoolTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0))
hwUserIPConflictAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 1)).setObjects(("HUAWEI-IPPOOL-MIB", "hwUserIPAddress"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"))
if mibBuilder.loadTexts: hwUserIPConflictAlarm.setStatus('current')
hwUserIPLeaseAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 2)).setObjects(("HUAWEI-IPPOOL-MIB", "hwUserIPAddress"))
if mibBuilder.loadTexts: hwUserIPLeaseAlarm.setStatus('current')
hwAllocUserIPFailAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 3)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"))
if mibBuilder.loadTexts: hwAllocUserIPFailAlarm.setStatus('current')
hwDhcpServerDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 4)).setObjects(("HUAWEI-IPPOOL-MIB", "hwDHCPServerAddr"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolRouterIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwDhcpSvrVrfName"), ("HUAWEI-IPPOOL-MIB", "hwDhcpSvrDownReason"))
if mibBuilder.loadTexts: hwDhcpServerDown.setStatus('current')
hwLocalIPPoolDifferWithServer = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 5)).setObjects(("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolName"))
if mibBuilder.loadTexts: hwLocalIPPoolDifferWithServer.setStatus('current')
hwUsedIPReachThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 6)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"))
if mibBuilder.loadTexts: hwUsedIPReachThreshold.setStatus('current')
hwUsedIPReachThresholdResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 7)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"))
if mibBuilder.loadTexts: hwUsedIPReachThresholdResume.setStatus('current')
hwUsedDeleteUnnumberedRouter = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 8)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"))
if mibBuilder.loadTexts: hwUsedDeleteUnnumberedRouter.setStatus('current')
hwPoolGroupUsedIPReachThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 9)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"))
if mibBuilder.loadTexts: hwPoolGroupUsedIPReachThreshold.setStatus('current')
hwPoolGroupUsedIPReachThresholdResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 10)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"))
if mibBuilder.loadTexts: hwPoolGroupUsedIPReachThresholdResume.setStatus('current')
hwIPPoolConstantIndexFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 11))
if mibBuilder.loadTexts: hwIPPoolConstantIndexFail.setStatus('current')
hwIPv6PrefixConstantIndexFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 12))
if mibBuilder.loadTexts: hwIPv6PrefixConstantIndexFail.setStatus('current')
hwIPv6PoolConstantIndexFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 13))
if mibBuilder.loadTexts: hwIPv6PoolConstantIndexFail.setStatus('current')
hwUsedIPExhaust = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 14)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"))
if mibBuilder.loadTexts: hwUsedIPExhaust.setStatus('current')
hwUsedIPExhaustResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 15)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"))
if mibBuilder.loadTexts: hwUsedIPExhaustResume.setStatus('current')
hwPoolGroupUsedIPExhaust = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 16)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"))
if mibBuilder.loadTexts: hwPoolGroupUsedIPExhaust.setStatus('current')
hwPoolGroupUsedIPExhaustResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 17)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"))
if mibBuilder.loadTexts: hwPoolGroupUsedIPExhaustResume.setStatus('current')
hwUsedIPv6AddressAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 18)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6PoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolName"))
if mibBuilder.loadTexts: hwUsedIPv6AddressAlarm.setStatus('current')
hwUsedIPv6AddressAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 19)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6PoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolName"))
if mibBuilder.loadTexts: hwUsedIPv6AddressAlarmResume.setStatus('current')
hwIPv6AddressExhaustAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 20)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6PoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolName"))
if mibBuilder.loadTexts: hwIPv6AddressExhaustAlarm.setStatus('current')
hwIPv6AddressExhaustAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 21)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6PoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolName"))
if mibBuilder.loadTexts: hwIPv6AddressExhaustAlarmResume.setStatus('current')
hwIPPoolDAPApplyUnsuccessful = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 22)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolRouterIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolRouterIPMask"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDAPReason"))
if mibBuilder.loadTexts: hwIPPoolDAPApplyUnsuccessful.setStatus('current')
hwIPPoolDAPReleaseUnsuccessful = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 23)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolRouterIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolRouterIPMask"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDAPReason"))
if mibBuilder.loadTexts: hwIPPoolDAPReleaseUnsuccessful.setStatus('current')
hwIPPoolDAPSubnetFull = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 24)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDAPName"))
if mibBuilder.loadTexts: hwIPPoolDAPSubnetFull.setStatus('current')
hwIPPoolDAPDeviceSubnetFull = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 8, 2, 2, 0, 25))
if mibBuilder.loadTexts: hwIPPoolDAPDeviceSubnetFull.setStatus('current')
hwIpPoolMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3))
hwIpPoolCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 1))
hwIpPoolCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 1, 1)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIpPoolTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIpSectionTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIpPoolExtTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIpAddressStatusTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwDhcpSvrGroupTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwRemotePoolTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwDhcpServerTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIpPoolStatisticGroup"), ("HUAWEI-IPPOOL-MIB", "hwIpPoolTrapOidGroup"), ("HUAWEI-IPPOOL-MIB", "hwIpPoolTrapsGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupExtTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupDisplayTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolStatusTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPv6DuidBindPrefixTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrGroupTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolStatisticGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPV6AddressStatusTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPV6PrefixStatusTableGroup"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolConstantIndexGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpPoolCompliance = hwIpPoolCompliance.setStatus('current')
hwIpPoolObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2))
hwIpPoolTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 1)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolRouterIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolRouterIPMask"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolPriDNSIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolSecDNSIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolPriNBNSIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolSecNBNSIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIPAddrLease"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolVPNInstance"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolType"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolNetwork"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolNetworkMask"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIPTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIPUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIPConflictNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIPExcludeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIPIdleNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIPUsedPercent"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDNSIPAddrString"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDNSIPAddrStringUndo"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolNBNSIPAddrString"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolNBNSIPAddrStringUndo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpPoolTableGroup = hwIpPoolTableGroup.setStatus('current')
hwIpSectionTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 2)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPSectionIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionDesc"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionLowAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionHighAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionLength"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionConflict"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionInvalid"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionAvailableNum"), ("HUAWEI-IPPOOL-MIB", "hwIPSectionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpSectionTableGroup = hwIpSectionTableGroup.setStatus('current')
hwIpPoolExtTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 3)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolAvailableStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionId1"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOption1"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionId2"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOption2"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionId3"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOption3"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionId4"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOption4"), ("HUAWEI-IPPOOL-MIB", "hwIPDnsSuffix"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrIPRsv"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIpAddrRenewal"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolIpAddrRebinding"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolSIPAddr1"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolSIPAddr2"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolSIPName1"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolSIPName2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpPoolExtTableGroup = hwIpPoolExtTableGroup.setStatus('current')
hwIpAddressStatusTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 4)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPAddress"), ("HUAWEI-IPPOOL-MIB", "hwIPAddressStatus"), ("HUAWEI-IPPOOL-MIB", "hwPoolName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpAddressStatusTableGroup = hwIpAddressStatusTableGroup.setStatus('current')
hwDhcpSvrGroupTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 5)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpSvrGroupIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpSvrGroupName"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrPriAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrScdiAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrPriState"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpScdPriState"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrAutoRelease"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrRefCount"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrRowStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrPriVpnInstance"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrScdVpnInstance"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSvrSouce"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDhcpSvrGroupTableGroup = hwDhcpSvrGroupTableGroup.setStatus('current')
hwRemotePoolTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 6)).setObjects(("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolName"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolRouterIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolRouterIPMask"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolDhcpSvrGroupID"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolAvailableStatus"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolRowStatus"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolPriDNSIPAddress"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolSecDNSIPAddress"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolPriNBNSIPAddress"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolSecNBNSIPAddress"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolVPNInstance"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolDhcpGroupName"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolLeaseManageEnable"), ("HUAWEI-IPPOOL-MIB", "hwRemoteIPPoolWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRemotePoolTableGroup = hwRemotePoolTableGroup.setStatus('current')
hwIpPoolStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 7)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolNum"), ("HUAWEI-IPPOOL-MIB", "hwIPIdleTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPUsedTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPConflictTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPExcludeTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPUsedPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpPoolStatisticGroup = hwIpPoolStatisticGroup.setStatus('current')
hwIpPoolTrapOidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 8)).setObjects(("HUAWEI-IPPOOL-MIB", "hwUserIPAddress"), ("HUAWEI-IPPOOL-MIB", "hwDHCPServerAddr"), ("HUAWEI-IPPOOL-MIB", "hwDhcpSvrVrfName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIndex"), ("HUAWEI-IPPOOL-MIB", "hwDhcpSvrDownReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpPoolTrapOidGroup = hwIpPoolTrapOidGroup.setStatus('current')
hwIpPoolTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 9)).setObjects(("HUAWEI-IPPOOL-MIB", "hwUserIPConflictAlarm"), ("HUAWEI-IPPOOL-MIB", "hwUserIPLeaseAlarm"), ("HUAWEI-IPPOOL-MIB", "hwAllocUserIPFailAlarm"), ("HUAWEI-IPPOOL-MIB", "hwDhcpServerDown"), ("HUAWEI-IPPOOL-MIB", "hwLocalIPPoolDifferWithServer"), ("HUAWEI-IPPOOL-MIB", "hwUsedIPReachThreshold"), ("HUAWEI-IPPOOL-MIB", "hwUsedIPReachThresholdResume"), ("HUAWEI-IPPOOL-MIB", "hwUsedDeleteUnnumberedRouter"), ("HUAWEI-IPPOOL-MIB", "hwPoolGroupUsedIPReachThreshold"), ("HUAWEI-IPPOOL-MIB", "hwPoolGroupUsedIPReachThresholdResume"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolConstantIndexFail"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixConstantIndexFail"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolConstantIndexFail"), ("HUAWEI-IPPOOL-MIB", "hwUsedIPExhaust"), ("HUAWEI-IPPOOL-MIB", "hwUsedIPExhaustResume"), ("HUAWEI-IPPOOL-MIB", "hwPoolGroupUsedIPExhaust"), ("HUAWEI-IPPOOL-MIB", "hwPoolGroupUsedIPExhaustResume"), ("HUAWEI-IPPOOL-MIB", "hwUsedIPv6AddressAlarm"), ("HUAWEI-IPPOOL-MIB", "hwUsedIPv6AddressAlarmResume"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressExhaustAlarm"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressExhaustAlarmResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpPoolTrapsGroup = hwIpPoolTrapsGroup.setStatus('current')
hwDhcpServerTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 10)).setObjects(("HUAWEI-IPPOOL-MIB", "hwDhcpServerIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerIP"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerVRFName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerState"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerSendDisvSpdNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerSendDisvSpdSec"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerDeadCount"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerNakCount"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerTimeout"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDhcpServerDeadTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDhcpServerTableGroup = hwDhcpServerTableGroup.setStatus('current')
hwIPPoolOptionTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 11)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionId"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOption"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolOptionTableGroup = hwIPPoolOptionTableGroup.setStatus('current')
hwIPPoolGroupTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 12)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupVPNInstance"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIncludeUndo"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolGroupTableGroup = hwIPPoolGroupTableGroup.setStatus('current')
hwIPPoolGroupExtTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 13)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupExtIncludePoolName"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupExtIncludePoolMoveOrder"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupExtRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolGroupExtTableGroup = hwIPPoolGroupExtTableGroup.setStatus('current')
hwIPPoolGroupDisplayTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 14)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIncludePoolNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupBoundByDomainNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIPTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIPUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIPConflictedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIPDisableNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIPDesignatedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIPFreeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolGroupIPUsedPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolGroupDisplayTableGroup = hwIPPoolGroupDisplayTableGroup.setStatus('current')
hwIPPoolDomainSearchListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 15)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolDomainSearchList"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolDomainSearchListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolDomainSearchListGroup = hwIPPoolDomainSearchListGroup.setStatus('current')
hwIPPoolOptionExtTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 16)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionSubId"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionSubType"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionSubValue"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpOptionSubRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolOptionExtTableGroup = hwIPPoolOptionExtTableGroup.setStatus('current')
hwIPPoolReplyOptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 17)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPDhcpSpecOptionId"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpSpecOption"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpReplyOptionId"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpReplyOptionSubId"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpReplyOptionSubType"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpReplyOptionSub"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpReplyOptionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolReplyOptionGroup = hwIPPoolReplyOptionGroup.setStatus('current')
hwIPv6PrefixTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 18)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixName"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixType"), ("HUAWEI-IPPOOL-MIB", "hwIPv6Prefix"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixLen"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixDelegatingLen"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixAdvPreferredLifetime"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixAdvValidLifetime"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixAvailableStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPv6VPNInstance"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixReservedFlag"), ("HUAWEI-IPPOOL-MIB", "hwIPv6LinkAddress"), ("HUAWEI-IPPOOL-MIB", "hwIPv6SlaacUnsharedFlag"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixRowStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPPoolPDUnshareOnly"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPv6PrefixTableGroup = hwIPv6PrefixTableGroup.setStatus('current')
hwIPv6PoolTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 19)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6PoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolName"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolType"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolPrefixName"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolDnsIPAddr"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolDnsSearchList"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolPreference"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolAvailableStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolRenewPercent"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolRebindingPercent"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolRapidCommitFlag"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolUnicastOption"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolAFTRName"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPv6PoolTableGroup = hwIPv6PoolTableGroup.setStatus('current')
hwIPv6PoolStatusTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 20)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6FreeAddressNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6UsedAddressNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6FreePrefixNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6UsedPrefixNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressFreeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressConflictNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressExcludeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressUsedPercent"), ("HUAWEI-IPPOOL-MIB", "hwIPv6NDRAPrefixTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6NDRAPrefixUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6NDRAPrefixFreeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6NDRAPrefixConflictNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6NDRAPrefixExcludeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6NDRAPrefixUsedPercent"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PDPrefixTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PDPrefixUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PDPrefixFreeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PDPrefixConflictNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PDPrefixExcludeNum"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PDPrefixUsedPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPv6PoolStatusTableGroup = hwIPv6PoolStatusTableGroup.setStatus('current')
hwIPv6DuidBindPrefixTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 21)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6ClientDuid"), ("HUAWEI-IPPOOL-MIB", "hwIPv6BindPrefix"), ("HUAWEI-IPPOOL-MIB", "hwIPv6DuidBindPrefixRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPv6DuidBindPrefixTableGroup = hwIPv6DuidBindPrefixTableGroup.setStatus('current')
hwDhcpv6SvrGroupTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 22)).setObjects(("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrGroupIndex"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrGroupName"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6SvrAddr1"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6SvrAddr2"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6PriSvrState"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6ScdSvrState"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6SvrAutoRelease"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6SvrGroupRefCount"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrInterface1"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrInterface2"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrAlgorithm"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrWeight1"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrWeight2"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6Svr1VrfName"), ("HUAWEI-IPPOOL-MIB", "hwIPDhcpv6Svr2VrfName"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrGroupRowStatus"), ("HUAWEI-IPPOOL-MIB", "hwDhcpv6SvrSourceInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDhcpv6SvrGroupTableGroup = hwDhcpv6SvrGroupTableGroup.setStatus('current')
hwIPv6RemotePoolTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 23)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolIndex"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolName"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolPrefixName"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolDhcpv6SvrGroupName"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolAvailableStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolExportHostRouteFlag"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolRowStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolExportHostRouteIPv6Address"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolExportHostRoutePDPrefix"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolExportHostRouteNDPrefix"), ("HUAWEI-IPPOOL-MIB", "hwIPv6RemotePoolWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPv6RemotePoolTableGroup = hwIPv6RemotePoolTableGroup.setStatus('current')
hwIPv6PoolStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 24)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIpv6PoolNum"), ("HUAWEI-IPPOOL-MIB", "hwIpv6AddressIdleTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIpv6PrefixIdleTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIpv6AddressUsedTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwIpv6PrefixUsedTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwAllIPv6AddressTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwAllIPv6AddressUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwAllIPv6AddressIdleNum"), ("HUAWEI-IPPOOL-MIB", "hwAllIPv6ConflictAddressNum"), ("HUAWEI-IPPOOL-MIB", "hwAllIPv6ExcludeAddressNum"), ("HUAWEI-IPPOOL-MIB", "hwAllIPv6AddressUsedPercent"), ("HUAWEI-IPPOOL-MIB", "hwAllNDRAPrefixTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwAllNDRAPrefixUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwAllNDRAPrefixFreeNum"), ("HUAWEI-IPPOOL-MIB", "hwAllNDRAPrefixConflictNum"), ("HUAWEI-IPPOOL-MIB", "hwAllNDRAPrefixExcludeNum"), ("HUAWEI-IPPOOL-MIB", "hwAllNDRAPrefixUsedPercent"), ("HUAWEI-IPPOOL-MIB", "hwAllPDPrefixTotalNum"), ("HUAWEI-IPPOOL-MIB", "hwAllPDPrefixUsedNum"), ("HUAWEI-IPPOOL-MIB", "hwAllPDPrefixFreeNum"), ("HUAWEI-IPPOOL-MIB", "hwAllPDPrefixConflictNum"), ("HUAWEI-IPPOOL-MIB", "hwAllPDPrefixExcludeNum"), ("HUAWEI-IPPOOL-MIB", "hwAllPDPrefixUsedPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPv6PoolStatisticGroup = hwIPv6PoolStatisticGroup.setStatus('current')
hwIPV6AddressStatusTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 25)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPv6Address"), ("HUAWEI-IPPOOL-MIB", "hwIPv6AddressStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPv6LocalPrefixName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPV6AddressStatusTableGroup = hwIPV6AddressStatusTableGroup.setStatus('current')
hwIPV6PrefixStatusTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 26)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIpv6Prefix"), ("HUAWEI-IPPOOL-MIB", "hwIpv6PrefixLen"), ("HUAWEI-IPPOOL-MIB", "hwIPv6PrefixStatus"), ("HUAWEI-IPPOOL-MIB", "hwIPv6DelegationPrefixName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPV6PrefixStatusTableGroup = hwIPV6PrefixStatusTableGroup.setStatus('current')
hwIPPoolConstantIndexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 8, 3, 2, 27)).setObjects(("HUAWEI-IPPOOL-MIB", "hwIPPoolConstantIndexEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIPPoolConstantIndexGroup = hwIPPoolConstantIndexGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-IPPOOL-MIB", hwIPv6PoolTable=hwIPv6PoolTable, hwIPPoolReplyOptionGroup=hwIPPoolReplyOptionGroup, hwIPDhcpSvrSouce=hwIPDhcpSvrSouce, hwIPv6RemotePoolExportHostRouteNDPrefix=hwIPv6RemotePoolExportHostRouteNDPrefix, hwIPv6RemotePoolEntry=hwIPv6RemotePoolEntry, hwIPv6PrefixType=hwIPv6PrefixType, hwIPAddress=hwIPAddress, hwIPv6PoolDnsIPAddr=hwIPv6PoolDnsIPAddr, hwDhcpServerTable=hwDhcpServerTable, hwIPPoolIPUsedPercent=hwIPPoolIPUsedPercent, hwDhcpServerIndex=hwDhcpServerIndex, hwIPPoolGroupIPTotalNum=hwIPPoolGroupIPTotalNum, hwIPPoolGroupIndex=hwIPPoolGroupIndex, hwIPv6PoolType=hwIPv6PoolType, hwIPv6PrefixTable=hwIPv6PrefixTable, hwIPv6RemotePoolExportHostRoutePDPrefix=hwIPv6RemotePoolExportHostRoutePDPrefix, hwIPPoolVPNInstance=hwIPPoolVPNInstance, hwIPDhcpSvrPriAddr=hwIPDhcpSvrPriAddr, hwIPv6PoolStatusTable=hwIPv6PoolStatusTable, hwIPPoolSIPAddr2=hwIPPoolSIPAddr2, hwDhcpv6SvrAlgorithm=hwDhcpv6SvrAlgorithm, hwAllNDRAPrefixConflictNum=hwAllNDRAPrefixConflictNum, hwIPUsedPercent=hwIPUsedPercent, hwUserIPLeaseAlarm=hwUserIPLeaseAlarm, hwIPPoolNetworkMask=hwIPPoolNetworkMask, hwRemoteIPPoolRouterIPAddr=hwRemoteIPPoolRouterIPAddr, hwUsedIPv6AddressAlarmResume=hwUsedIPv6AddressAlarmResume, hwIPv6NDRAPrefixTotalNum=hwIPv6NDRAPrefixTotalNum, hwIPv6ClientDuid=hwIPv6ClientDuid, hwIPPoolLowAddr=hwIPPoolLowAddr, hwIPDhcpSvrIPRsv=hwIPDhcpSvrIPRsv, hwIPDhcpv6SvrAddr1=hwIPDhcpv6SvrAddr1, hwIPPoolDAPReason=hwIPPoolDAPReason, hwIPDhcpOption2=hwIPDhcpOption2, hwUsedIPReachThreshold=hwUsedIPReachThreshold, hwIPv6PoolEntry=hwIPv6PoolEntry, hwIPv6PrefixLen=hwIPv6PrefixLen, hwIpv6Prefix=hwIpv6Prefix, hwIPPoolGroupBoundByDomainNum=hwIPPoolGroupBoundByDomainNum, hwIPv6PoolUnicastOption=hwIPv6PoolUnicastOption, hwIPDhcpOptionId4=hwIPDhcpOptionId4, hwIPv6PoolAlgorithm=hwIPv6PoolAlgorithm, hwIPSectionDesc=hwIPSectionDesc, hwIPv6PoolRowStatus=hwIPv6PoolRowStatus, hwDhcpv6SvrInterface1=hwDhcpv6SvrInterface1, hwIPPoolIPExcludeNum=hwIPPoolIPExcludeNum, hwIPSectionUsedNum=hwIPSectionUsedNum, hwIPPoolGroupExtEntry=hwIPPoolGroupExtEntry, hwIPV6PrefixStatusEntry=hwIPV6PrefixStatusEntry, hwIpv6PrefixUsedTotalNum=hwIpv6PrefixUsedTotalNum, hwIPv6PrefixTableGroup=hwIPv6PrefixTableGroup, hwIPv6AddressFreeNum=hwIPv6AddressFreeNum, hwIpSectionTableGroup=hwIpSectionTableGroup, hwIPV6AddressStatusEntry=hwIPV6AddressStatusEntry, hwIPv6AddressConflictNum=hwIPv6AddressConflictNum, hwDhcpv6SvrSourceInterface=hwDhcpv6SvrSourceInterface, hwIPPoolDAPReleaseUnsuccessful=hwIPPoolDAPReleaseUnsuccessful, hwIPDhcpv6SvrAddr2=hwIPDhcpv6SvrAddr2, hwIPDhcpv6ScdSvrState=hwIPDhcpv6ScdSvrState, hwIPPoolEntry=hwIPPoolEntry, hwIPv6PrefixStatus=hwIPv6PrefixStatus, hwIPPoolSIPAddr1=hwIPPoolSIPAddr1, hwIpPoolTableGroup=hwIpPoolTableGroup, hwDhcpv6ServerIP=hwDhcpv6ServerIP, hwRemoteIPPoolWeight=hwRemoteIPPoolWeight, hwIpPoolExtTableGroup=hwIpPoolExtTableGroup, hwIPDhcpv6SvrGroupRefCount=hwIPDhcpv6SvrGroupRefCount, hwAllNDRAPrefixUsedPercent=hwAllNDRAPrefixUsedPercent, hwAllPDPrefixTotalNum=hwAllPDPrefixTotalNum, hwIPPoolDhcpServerDeadTime=hwIPPoolDhcpServerDeadTime, hwIPPoolGroupTable=hwIPPoolGroupTable, hwIPSectionLength=hwIPSectionLength, hwIPPoolDomainSearchListRowStatus=hwIPPoolDomainSearchListRowStatus, hwIPPoolDhcpSvrGroupIndex=hwIPPoolDhcpSvrGroupIndex, hwUserIPAddress=hwUserIPAddress, hwIPSectionInvalid=hwIPSectionInvalid, hwIPPoolIpAddrRenewal=hwIPPoolIpAddrRenewal, hwIPPoolSIPName1=hwIPPoolSIPName1, hwIPPoolDomainSearchList=hwIPPoolDomainSearchList, hwAllNDRAPrefixFreeNum=hwAllNDRAPrefixFreeNum, hwIpPoolMIBConformance=hwIpPoolMIBConformance, hwIPPoolPriNBNSIPAddr=hwIPPoolPriNBNSIPAddr, hwAllNDRAPrefixTotalNum=hwAllNDRAPrefixTotalNum, hwDhcpv6ServerState=hwDhcpv6ServerState, hwIPDhcpSvrScdiAddr=hwIPDhcpSvrScdiAddr, hwRemoteIPPoolName=hwRemoteIPPoolName, hwIPv6PoolConstantIndexFail=hwIPv6PoolConstantIndexFail, hwIPPoolDomainSearchListGroup=hwIPPoolDomainSearchListGroup, hwIPPoolSetting=hwIPPoolSetting, hwIPPoolGroupName=hwIPPoolGroupName, hwIPPoolConstantIndexEnable=hwIPPoolConstantIndexEnable, hwAllNDRAPrefixExcludeNum=hwAllNDRAPrefixExcludeNum, hwIPv6DuidBindPrefixTable=hwIPv6DuidBindPrefixTable, hwIPDhcpReplyOptionId=hwIPDhcpReplyOptionId, hwIpv6PrefixIdleTotalNum=hwIpv6PrefixIdleTotalNum, hwIPPoolRouterUnnumberedIfName=hwIPPoolRouterUnnumberedIfName, hwIPv6RemotePoolTableGroup=hwIPv6RemotePoolTableGroup, hwIPPoolGroupRowStatus=hwIPPoolGroupRowStatus, hwIPv6PrefixName=hwIPv6PrefixName, hwRemoteIPPoolLeaseManageEnable=hwRemoteIPPoolLeaseManageEnable, hwIPv6NDRAPrefixUsedPercent=hwIPv6NDRAPrefixUsedPercent, hwAllNDRAPrefixUsedNum=hwAllNDRAPrefixUsedNum, hwDhcpv6ServerSendSolicitSpeedSec=hwDhcpv6ServerSendSolicitSpeedSec, hwIPSectionRowStatus=hwIPSectionRowStatus, hwIPPoolExtTable=hwIPPoolExtTable, hwDhcpv6ServerEntry=hwDhcpv6ServerEntry, hwIPSectionAvailableNum=hwIPSectionAvailableNum, hwIPPoolDNSIPAddrString=hwIPPoolDNSIPAddrString, hwIPSectionTable=hwIPSectionTable, hwIPv6PoolStatusTableGroup=hwIPv6PoolStatusTableGroup, hwIPPoolGroupDisplayEntry=hwIPPoolGroupDisplayEntry, hwDhcpSvrDownReason=hwDhcpSvrDownReason, hwIPPoolGroupIPDisableNum=hwIPPoolGroupIPDisableNum, hwIPPoolDAPName=hwIPPoolDAPName, hwIpPoolCompliance=hwIpPoolCompliance, hwPoolGroupUsedIPExhaustResume=hwPoolGroupUsedIPExhaustResume, hwIPPoolDNSIPAddrStringUndo=hwIPPoolDNSIPAddrStringUndo, hwIPPoolGroupDisplayTable=hwIPPoolGroupDisplayTable, hwDhcpv6SvrGroupIndex=hwDhcpv6SvrGroupIndex, hwIPv6PrefixIndex=hwIPv6PrefixIndex, hwRemoteIPPoolDhcpGroupName=hwRemoteIPPoolDhcpGroupName, hwIPv6PrefixReservedFlag=hwIPv6PrefixReservedFlag, hwIPv6RemotePoolIndex=hwIPv6RemotePoolIndex, hwIPDhcpOption=hwIPDhcpOption, hwIPv6PoolDnsSearchList=hwIPv6PoolDnsSearchList, hwDhcpServerTableGroup=hwDhcpServerTableGroup, hwIPv6PDPrefixConflictNum=hwIPv6PDPrefixConflictNum, hwIPPoolRouterIPMask=hwIPPoolRouterIPMask, hwAllocUserIPFailAlarm=hwAllocUserIPFailAlarm, hwIPDhcpOptionSubRowStatus=hwIPDhcpOptionSubRowStatus, hwIPPoolDAPDeviceSubnetFull=hwIPPoolDAPDeviceSubnetFull, hwIpv6AddressIdleTotalNum=hwIpv6AddressIdleTotalNum, hwIpPoolTrapOidGroup=hwIpPoolTrapOidGroup, hwIPPoolGroupExtTable=hwIPPoolGroupExtTable, hwIPPoolOptionExtTableGroup=hwIPPoolOptionExtTableGroup, hwAllIPv6ExcludeAddressNum=hwAllIPv6ExcludeAddressNum, hwIPPoolOptionEntry=hwIPPoolOptionEntry, hwIPPoolIPConflictNum=hwIPPoolIPConflictNum, hwIPV6AddressStatusTableGroup=hwIPV6AddressStatusTableGroup, hwIPPoolGroupTableGroup=hwIPPoolGroupTableGroup, hwIpv6PrefixLen=hwIpv6PrefixLen, hwDhcpv6ServerSendSolicitSpeedNum=hwDhcpv6ServerSendSolicitSpeedNum, hwIPV6PrefixStatusTableGroup=hwIPV6PrefixStatusTableGroup, hwIPv6PoolName=hwIPv6PoolName, hwIPUsedTotalNum=hwIPUsedTotalNum, hwIPPoolGroupIncludePoolNum=hwIPPoolGroupIncludePoolNum, hwIPDhcpSvrPriState=hwIPDhcpSvrPriState, hwIPv6NDRAPrefixFreeNum=hwIPv6NDRAPrefixFreeNum, hwPoolGroupUsedIPReachThresholdResume=hwPoolGroupUsedIPReachThresholdResume, hwIPPoolDhcpServerState=hwIPPoolDhcpServerState, hwIPPoolGroupExtTableGroup=hwIPPoolGroupExtTableGroup, hwIPPoolNum=hwIPPoolNum, hwDhcpv6SvrGroupName=hwDhcpv6SvrGroupName, hwIPDhcpOption1=hwIPDhcpOption1, hwIPv6PrefixDelegatingLen=hwIPv6PrefixDelegatingLen, hwAllIPv6ConflictAddressNum=hwAllIPv6ConflictAddressNum, hwIPv6VPNInstance=hwIPv6VPNInstance, hwIPPoolIndex=hwIPPoolIndex, hwIPV6AddressStatusTable=hwIPV6AddressStatusTable, hwDhcpv6ServerIfIndex=hwDhcpv6ServerIfIndex, hwIPv6PrefixEntry=hwIPv6PrefixEntry, hwIPPoolGroupIPUsedPercent=hwIPPoolGroupIPUsedPercent, hwIPSectionConflict=hwIPSectionConflict, hwAllPDPrefixUsedPercent=hwAllPDPrefixUsedPercent, hwIPDhcpOptionId1=hwIPDhcpOptionId1, hwIPv6PDPrefixExcludeNum=hwIPv6PDPrefixExcludeNum, hwIPPoolOptionExtEntry=hwIPPoolOptionExtEntry, hwIPv6PoolIndex=hwIPv6PoolIndex, hwIPDhcpOptionSubValue=hwIPDhcpOptionSubValue, hwIPv6PoolAFTRName=hwIPv6PoolAFTRName, hwIPPoolPriDNSIPAddr=hwIPPoolPriDNSIPAddr, hwAllPDPrefixExcludeNum=hwAllPDPrefixExcludeNum, hwIPDhcpReplyOptionSubType=hwIPDhcpReplyOptionSubType, hwIPPoolGroupIncludeUndo=hwIPPoolGroupIncludeUndo, hwIPAddressStatus=hwIPAddressStatus, hwIPPoolDhcpServerVRFName=hwIPPoolDhcpServerVRFName, hwIPPoolIPUsedNum=hwIPPoolIPUsedNum, hwIPAddressStatusTable=hwIPAddressStatusTable, hwIPIdleTotalNum=hwIPIdleTotalNum, hwIPv6PrefixAvailableStatus=hwIPv6PrefixAvailableStatus, hwIPv6NDRAPrefixConflictNum=hwIPv6NDRAPrefixConflictNum, hwIPPoolGroupVPNInstance=hwIPPoolGroupVPNInstance, hwIPv6PoolStatistic=hwIPv6PoolStatistic, hwIpPoolCompliances=hwIpPoolCompliances, hwIPConflictTotalNum=hwIPConflictTotalNum, hwIPPoolOptionExtTable=hwIPPoolOptionExtTable, hwIPPoolIPTotalNum=hwIPPoolIPTotalNum, hwDhcpv6SvrIndex=hwDhcpv6SvrIndex, hwUsedIPExhaustResume=hwUsedIPExhaustResume, hwIPv6UsedPrefixNum=hwIPv6UsedPrefixNum, hwIPv6PDPrefixTotalNum=hwIPv6PDPrefixTotalNum, hwIPPoolName=hwIPPoolName, hwIPPoolDhcpSvrGroupName=hwIPPoolDhcpSvrGroupName, hwIPPoolReplyOptionTable=hwIPPoolReplyOptionTable, hwRemoteIPPoolVPNInstance=hwRemoteIPPoolVPNInstance, hwIPPoolGroupIPUsedNum=hwIPPoolGroupIPUsedNum, hwIPPoolOptionTableGroup=hwIPPoolOptionTableGroup, hwRemoteIPPoolSecNBNSIPAddress=hwRemoteIPPoolSecNBNSIPAddress, hwIPPoolDAPSubnetFull=hwIPPoolDAPSubnetFull, hwRemoteIPPoolAvailableStatus=hwRemoteIPPoolAvailableStatus, hwIPv6PDPrefixFreeNum=hwIPv6PDPrefixFreeNum, hwIPv6PrefixAdvPreferredLifetime=hwIPv6PrefixAdvPreferredLifetime, hwIPPoolDhcpServerIP=hwIPPoolDhcpServerIP, hwRemotePoolTableGroup=hwRemotePoolTableGroup, hwIPPoolDhcpServerNakCount=hwIPPoolDhcpServerNakCount, hwIPSectionLowAddr=hwIPSectionLowAddr, hwIPv6PoolPrefixName=hwIPv6PoolPrefixName, hwRemoteIPPoolPriDNSIPAddress=hwRemoteIPPoolPriDNSIPAddress, hwIPSectionHighAddr=hwIPSectionHighAddr, hwIPPoolGroupIPFreeNum=hwIPPoolGroupIPFreeNum, hwIPPoolTrapsDefine=hwIPPoolTrapsDefine, hwAllIPv6AddressUsedNum=hwAllIPv6AddressUsedNum, hwIPPoolDomainSearchListEntry=hwIPPoolDomainSearchListEntry, hwIPSectionEntry=hwIPSectionEntry, hwIPPoolIPAddrLease=hwIPPoolIPAddrLease, hwIPv6LinkAddress=hwIPv6LinkAddress, hwIPv6PoolStatusEntry=hwIPv6PoolStatusEntry, hwIPPoolSIPName2=hwIPPoolSIPName2, hwIPPoolStatistic=hwIPPoolStatistic, hwIPPoolSecNBNSIPAddr=hwIPPoolSecNBNSIPAddr, hwIPDhcpSvrRowStatus=hwIPDhcpSvrRowStatus, hwIPExcludeTotalNum=hwIPExcludeTotalNum, hwIPSectionIndex=hwIPSectionIndex, hwPoolGroupUsedIPExhaust=hwPoolGroupUsedIPExhaust, hwIPPoolNBNSIPAddrStringUndo=hwIPPoolNBNSIPAddrStringUndo, hwIPPoolConstantIndexFail=hwIPPoolConstantIndexFail, hwDhcpv6SvrGroupEntry=hwDhcpv6SvrGroupEntry, hwIPv6RemotePoolPrefixName=hwIPv6RemotePoolPrefixName, hwIPPoolTraps=hwIPPoolTraps, hwIPv6RemotePoolDhcpv6SvrGroupName=hwIPv6RemotePoolDhcpv6SvrGroupName, hwIPv6LocalPrefixName=hwIPv6LocalPrefixName, hwIPv6RemotePoolTable=hwIPv6RemotePoolTable, hwDhcpSvrGroupTable=hwDhcpSvrGroupTable, hwRemoteIPPoolRowStatus=hwRemoteIPPoolRowStatus, hwIPv6BindPrefix=hwIPv6BindPrefix, hwIPv6RemotePoolName=hwIPv6RemotePoolName, hwDhcpSvrGroupTableGroup=hwDhcpSvrGroupTableGroup, hwIPv6Address=hwIPv6Address, hwIPv6RemotePoolExportHostRouteFlag=hwIPv6RemotePoolExportHostRouteFlag, hwIPPoolGroupExtIncludePoolName=hwIPPoolGroupExtIncludePoolName, hwIPv6RemotePoolAvailableStatus=hwIPv6RemotePoolAvailableStatus, hwRemoteIPPoolPriNBNSIPAddress=hwRemoteIPPoolPriNBNSIPAddress, hwDhcpv6SvrGroupTableGroup=hwDhcpv6SvrGroupTableGroup, hwPoolName=hwPoolName, hwIPPoolConflictAutoRecycleInterval=hwIPPoolConflictAutoRecycleInterval, hwIPv6AddressUsedPercent=hwIPv6AddressUsedPercent, hwDHCPServerAddr=hwDHCPServerAddr, hwIPv6RemotePoolExportHostRouteIPv6Address=hwIPv6RemotePoolExportHostRouteIPv6Address, hwIPv6DuidBindPrefixEntry=hwIPv6DuidBindPrefixEntry, hwIPv6NDRAPrefixExcludeNum=hwIPv6NDRAPrefixExcludeNum, hwIPv6RemotePoolRowStatus=hwIPv6RemotePoolRowStatus, hwIPPoolDhcpServerSendDisvSpdSec=hwIPPoolDhcpServerSendDisvSpdSec, hwIPPoolGroupIPDesignatedNum=hwIPPoolGroupIPDesignatedNum, hwIPAddressStatusEntry=hwIPAddressStatusEntry)
mibBuilder.exportSymbols("HUAWEI-IPPOOL-MIB", hwIPDhcpv6Svr2VrfName=hwIPDhcpv6Svr2VrfName, hwDhcpSvrVrfName=hwDhcpSvrVrfName, hwIPPoolRouterIPAddr=hwIPPoolRouterIPAddr, hwIPPoolDhcpServerDeadCount=hwIPPoolDhcpServerDeadCount, hwIpAddressStatusTableGroup=hwIpAddressStatusTableGroup, hwIPPoolDAPApplyUnsuccessful=hwIPPoolDAPApplyUnsuccessful, hwIPv6RemotePoolWeight=hwIPv6RemotePoolWeight, hwIPv6AddressTotalNum=hwIPv6AddressTotalNum, hwRemotePoolEntry=hwRemotePoolEntry, hwIPDhcpOptionSubType=hwIPDhcpOptionSubType, hwIPDhcpReplyOptionRowStatus=hwIPDhcpReplyOptionRowStatus, hwIpv6PoolNum=hwIpv6PoolNum, hwIPPoolReplyOptionEntry=hwIPPoolReplyOptionEntry, hwIPPoolExtEntry=hwIPPoolExtEntry, hwIPv6PoolRapidCommitFlag=hwIPv6PoolRapidCommitFlag, hwIPPoolIPIdleNum=hwIPPoolIPIdleNum, hwIPDhcpReplyOptionSubId=hwIPDhcpReplyOptionSubId, hwIPv6PrefixConstantIndexFail=hwIPv6PrefixConstantIndexFail, hwDhcpv6SvrInterface2=hwDhcpv6SvrInterface2, hwIPv6NDRAPrefixUsedNum=hwIPv6NDRAPrefixUsedNum, hwIPDhcpOption4=hwIPDhcpOption4, hwIPPoolGroupIPConflictedNum=hwIPPoolGroupIPConflictedNum, hwIPPoolReqNum=hwIPPoolReqNum, hwIPv6AddressExhaustAlarm=hwIPv6AddressExhaustAlarm, hwIPDhcpSvrAutoRelease=hwIPDhcpSvrAutoRelease, hwIPPoolPDUnshareOnly=hwIPPoolPDUnshareOnly, hwAllIPv6AddressIdleNum=hwAllIPv6AddressIdleNum, hwIPv6PoolStatisticGroup=hwIPv6PoolStatisticGroup, hwDhcpv6ServerVRFName=hwDhcpv6ServerVRFName, hwIPv6AddressUsedNum=hwIPv6AddressUsedNum, hwIpPoolObjectGroups=hwIpPoolObjectGroups, hwRemotePoolTable=hwRemotePoolTable, hwIPPoolConstantIndexGroup=hwIPPoolConstantIndexGroup, hwIPDhcpReplyOptionSub=hwIPDhcpReplyOptionSub, hwRemoteIPPoolRouterIPMask=hwRemoteIPPoolRouterIPMask, hwIPPoolGroupExtRowStatus=hwIPPoolGroupExtRowStatus, hwAllPDPrefixConflictNum=hwAllPDPrefixConflictNum, hwIPPoolGroupExtIncludePoolMoveOrder=hwIPPoolGroupExtIncludePoolMoveOrder, hwIPv6AddressStatus=hwIPv6AddressStatus, hwIPPoolHighAddr=hwIPPoolHighAddr, hwIPv6AddressExhaustAlarmResume=hwIPv6AddressExhaustAlarmResume, hwDhcpv6SvrWeight1=hwDhcpv6SvrWeight1, hwIPDhcpScdPriState=hwIPDhcpScdPriState, hwIPv6SlaacUnsharedFlag=hwIPv6SlaacUnsharedFlag, hwIPPoolNBNSIPAddrString=hwIPPoolNBNSIPAddrString, hwAllPDPrefixFreeNum=hwAllPDPrefixFreeNum, hwUsedIPReachThresholdResume=hwUsedIPReachThresholdResume, hwIPv6PoolAvailableStatus=hwIPv6PoolAvailableStatus, hwIPDhcpv6Svr1VrfName=hwIPDhcpv6Svr1VrfName, hwDhcpServerDown=hwDhcpServerDown, hwIPv6PoolPreference=hwIPv6PoolPreference, hwRemoteIPPoolIndex=hwRemoteIPPoolIndex, hwIPv6PoolRebindingPercent=hwIPv6PoolRebindingPercent, hwIPDhcpSvrRefCount=hwIPDhcpSvrRefCount, hwIPDhcpOptionId3=hwIPDhcpOptionId3, hwIPPoolDhcpServerTimeout=hwIPPoolDhcpServerTimeout, hwIPv6AddressExcludeNum=hwIPv6AddressExcludeNum, hwPoolGroupUsedIPReachThreshold=hwPoolGroupUsedIPReachThreshold, hwIPDhcpOptionRowStatus=hwIPDhcpOptionRowStatus, hwIPDhcpv6SvrAutoRelease=hwIPDhcpv6SvrAutoRelease, hwIPPoolDomainSearchListTable=hwIPPoolDomainSearchListTable, hwIPPoolTrapOid=hwIPPoolTrapOid, hwUsedIPExhaust=hwUsedIPExhaust, hwIPv6PrefixRowStatus=hwIPv6PrefixRowStatus, hwIPPoolReqSucNum=hwIPPoolReqSucNum, PYSNMP_MODULE_ID=hwIppool, hwAllIPv6AddressUsedPercent=hwAllIPv6AddressUsedPercent, hwDhcpv6SvrWeight2=hwDhcpv6SvrWeight2, hwIPDhcpSpecOptionId=hwIPDhcpSpecOptionId, hwIPPoolStatus=hwIPPoolStatus, hwDhcpv6SvrGroupRowStatus=hwDhcpv6SvrGroupRowStatus, hwIpPoolTrapsGroup=hwIpPoolTrapsGroup, hwIPPoolMibTrap=hwIPPoolMibTrap, hwIPPoolIpAddrRebinding=hwIPPoolIpAddrRebinding, hwDhcpv6SvrGroupTable=hwDhcpv6SvrGroupTable, hwAllPDPrefixUsedNum=hwAllPDPrefixUsedNum, hwAllIPv6AddressTotalNum=hwAllIPv6AddressTotalNum, hwIPv6DuidBindPrefixTableGroup=hwIPv6DuidBindPrefixTableGroup, hwIPDhcpSvrScdVpnInstance=hwIPDhcpSvrScdVpnInstance, hwIPv6UsedAddressNum=hwIPv6UsedAddressNum, hwIPPoolAlgorithm=hwIPPoolAlgorithm, hwDhcpServerEntry=hwDhcpServerEntry, hwIPPoolNetwork=hwIPPoolNetwork, hwIPPoolOptionTable=hwIPPoolOptionTable, hwIpv6AddressUsedTotalNum=hwIpv6AddressUsedTotalNum, hwRemoteIPPoolSecDNSIPAddress=hwRemoteIPPoolSecDNSIPAddress, hwDhcpSvrGroupEntry=hwDhcpSvrGroupEntry, hwIPv6PoolRenewPercent=hwIPv6PoolRenewPercent, hwIPV6PrefixStatusTable=hwIPV6PrefixStatusTable, hwUserIPConflictAlarm=hwUserIPConflictAlarm, hwIPv6PDPrefixUsedNum=hwIPv6PDPrefixUsedNum, hwIPv6PrefixAdvValidLifetime=hwIPv6PrefixAdvValidLifetime, hwIPv6PDPrefixUsedPercent=hwIPv6PDPrefixUsedPercent, hwIPPoolDhcpServerSendDisvSpdNum=hwIPPoolDhcpServerSendDisvSpdNum, hwIppool=hwIppool, hwRemoteIPPoolDhcpSvrGroupID=hwRemoteIPPoolDhcpSvrGroupID, hwIpPoolStatisticGroup=hwIpPoolStatisticGroup, hwIPPoolMibObjects=hwIPPoolMibObjects, hwIPDhcpv6PriSvrState=hwIPDhcpv6PriSvrState, hwIPPoolTable=hwIPPoolTable, hwIPPoolGroupEntry=hwIPPoolGroupEntry, hwIPPoolAvailableStatus=hwIPPoolAvailableStatus, hwIPDhcpSpecOption=hwIPDhcpSpecOption, hwIPDhcpOption3=hwIPDhcpOption3, hwIPPoolType=hwIPPoolType, hwDhcpv6ServerTable=hwDhcpv6ServerTable, hwIPv6DuidBindPrefixRowStatus=hwIPv6DuidBindPrefixRowStatus, hwIPPoolSecDNSIPAddr=hwIPPoolSecDNSIPAddr, hwIPv6Prefix=hwIPv6Prefix, hwIPv6PoolTableGroup=hwIPv6PoolTableGroup, hwIPDnsSuffix=hwIPDnsSuffix, hwIPv6DelegationPrefixName=hwIPv6DelegationPrefixName, hwIPTotalNum=hwIPTotalNum, hwIPDhcpOptionId=hwIPDhcpOptionId, hwIPv6FreeAddressNum=hwIPv6FreeAddressNum, hwIPPoolConstantIndex=hwIPPoolConstantIndex, hwLocalIPPoolDifferWithServer=hwLocalIPPoolDifferWithServer, hwIPDhcpOptionId2=hwIPDhcpOptionId2, hwUsedDeleteUnnumberedRouter=hwUsedDeleteUnnumberedRouter, hwUsedIPv6AddressAlarm=hwUsedIPv6AddressAlarm, hwIPDhcpSvrPriVpnInstance=hwIPDhcpSvrPriVpnInstance, hwIPDhcpOptionSubId=hwIPDhcpOptionSubId, hwIPPoolGroupDisplayTableGroup=hwIPPoolGroupDisplayTableGroup, hwIPv6FreePrefixNum=hwIPv6FreePrefixNum)
