#
# PySNMP MIB module DOT12-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOT12-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:39:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Gauge32, Bits, ObjectIdentity, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, TimeTicks, experimental, NotificationType, Counter64, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "Bits", "ObjectIdentity", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "TimeTicks", "experimental", "NotificationType", "Counter64", "ModuleIdentity", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dot12MIB = MibIdentifier((1, 3, 6, 1, 3, 63))
dot12MIBObjects = MibIdentifier((1, 3, 6, 1, 3, 63, 1))
dot12ConfigTable = MibTable((1, 3, 6, 1, 3, 63, 1, 1), )
if mibBuilder.loadTexts: dot12ConfigTable.setStatus('mandatory')
dot12ConfigEntry = MibTableRow((1, 3, 6, 1, 3, 63, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot12ConfigEntry.setStatus('mandatory')
dot12DesiredFramingType = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2), ("frameTypeEither", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12DesiredFramingType.setStatus('mandatory')
dot12FramingCapability = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2), ("frameTypeEither", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12FramingCapability.setStatus('mandatory')
dot12DesiredPromiscStatus = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleAddressMode", 1), ("promiscuousMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12DesiredPromiscStatus.setStatus('mandatory')
dot12TrainingVersion = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12TrainingVersion.setStatus('mandatory')
dot12LastTrainingConfig = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12LastTrainingConfig.setStatus('mandatory')
dot12Commands = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noOp", 1), ("open", 2), ("reset", 3), ("close", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12Commands.setStatus('mandatory')
dot12Status = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("opened", 1), ("closed", 2), ("opening", 3), ("openFailure", 5), ("linkFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12Status.setStatus('mandatory')
dot12CurrentFramingType = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2), ("frameTypeUnknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12CurrentFramingType.setStatus('mandatory')
dot12ControlMode = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("masterMode", 1), ("slaveMode", 2), ("learn", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12ControlMode.setStatus('mandatory')
dot12StatTable = MibTable((1, 3, 6, 1, 3, 63, 1, 2), )
if mibBuilder.loadTexts: dot12StatTable.setStatus('mandatory')
dot12StatEntry = MibTableRow((1, 3, 6, 1, 3, 63, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot12StatEntry.setStatus('mandatory')
dot12InHighPriorityFrames = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InHighPriorityFrames.setStatus('mandatory')
dot12InHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InHighPriorityOctets.setStatus('mandatory')
dot12InNormPriorityFrames = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InNormPriorityFrames.setStatus('mandatory')
dot12InNormPriorityOctets = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InNormPriorityOctets.setStatus('mandatory')
dot12InIPMErrors = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InIPMErrors.setStatus('mandatory')
dot12InOversizeFrameErrors = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InOversizeFrameErrors.setStatus('mandatory')
dot12InDataErrors = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InDataErrors.setStatus('mandatory')
dot12InNullAddressedFrames = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InNullAddressedFrames.setStatus('mandatory')
dot12OutHighPriorityFrames = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12OutHighPriorityFrames.setStatus('mandatory')
dot12OutHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12OutHighPriorityOctets.setStatus('mandatory')
dot12TransitionIntoTrainings = MibTableColumn((1, 3, 6, 1, 3, 63, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12TransitionIntoTrainings.setStatus('mandatory')
dot12Conformance = MibIdentifier((1, 3, 6, 1, 3, 63, 2))
dot12Compliances = MibIdentifier((1, 3, 6, 1, 3, 63, 2, 1))
dot12Groups = MibIdentifier((1, 3, 6, 1, 3, 63, 2, 2))
dot12Compliance = MibIdentifier((1, 3, 6, 1, 3, 63, 2, 1, 1))
dot12ConfigGroup = MibIdentifier((1, 3, 6, 1, 3, 63, 2, 2, 1))
dot12StatsGroup = MibIdentifier((1, 3, 6, 1, 3, 63, 2, 2, 2))
mibBuilder.exportSymbols("DOT12-IF-MIB", dot12Status=dot12Status, dot12InHighPriorityFrames=dot12InHighPriorityFrames, dot12ConfigGroup=dot12ConfigGroup, dot12TrainingVersion=dot12TrainingVersion, dot12LastTrainingConfig=dot12LastTrainingConfig, dot12StatTable=dot12StatTable, dot12StatEntry=dot12StatEntry, dot12DesiredPromiscStatus=dot12DesiredPromiscStatus, dot12MIB=dot12MIB, dot12Conformance=dot12Conformance, dot12InNullAddressedFrames=dot12InNullAddressedFrames, dot12ConfigEntry=dot12ConfigEntry, dot12InNormPriorityFrames=dot12InNormPriorityFrames, dot12OutHighPriorityOctets=dot12OutHighPriorityOctets, dot12InNormPriorityOctets=dot12InNormPriorityOctets, dot12Compliances=dot12Compliances, dot12FramingCapability=dot12FramingCapability, dot12StatsGroup=dot12StatsGroup, dot12InDataErrors=dot12InDataErrors, dot12InOversizeFrameErrors=dot12InOversizeFrameErrors, dot12TransitionIntoTrainings=dot12TransitionIntoTrainings, dot12MIBObjects=dot12MIBObjects, dot12Compliance=dot12Compliance, dot12ConfigTable=dot12ConfigTable, dot12ControlMode=dot12ControlMode, dot12Groups=dot12Groups, dot12DesiredFramingType=dot12DesiredFramingType, dot12InHighPriorityOctets=dot12InHighPriorityOctets, dot12CurrentFramingType=dot12CurrentFramingType, dot12InIPMErrors=dot12InIPMErrors, dot12Commands=dot12Commands, dot12OutHighPriorityFrames=dot12OutHighPriorityFrames)
