#
# PySNMP MIB module INFORMANT-VS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-VS
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, NotificationType, Gauge32, TimeTicks, IpAddress, Counter64, Integer32, ModuleIdentity, iso, Bits, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Gauge32", "TimeTicks", "IpAddress", "Counter64", "Integer32", "ModuleIdentity", "iso", "Bits", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
DateAndTime, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "DisplayString", "TextualConvention")
informant, WtcsDisplayString = mibBuilder.importSymbols("WTCS", "informant", "WtcsDisplayString")
wmiVirtualServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 24))
wmiVirtualServer.setRevisions(('2007-05-10 21:35',))
if mibBuilder.loadTexts: wmiVirtualServer.setLastUpdated('200705102135Z')
if mibBuilder.loadTexts: wmiVirtualServer.setOrganization('Informant Systems, Inc.')
vsVirtualMachineTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1), )
if mibBuilder.loadTexts: vsVirtualMachineTable.setStatus('current')
vsVirtualMachineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1), ).setIndexNames((0, "INFORMANT-VS", "vsvmIndex"))
if mibBuilder.loadTexts: vsVirtualMachineEntry.setStatus('current')
vsvmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmIndex.setStatus('current')
vsvmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmName.setStatus('current')
vsvmCpuUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmCpuUtilization.setStatus('current')
vsvmDiskBytesRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 4), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmDiskBytesRead.setStatus('current')
vsvmDiskSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 5), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmDiskSpaceUsed.setStatus('current')
vsvmDiskSpaceUsedK = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 6), Gauge32()).setUnits('KiloBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmDiskSpaceUsedK.setStatus('current')
vsvmDiskSpaceUsedM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 7), Gauge32()).setUnits('MegaBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmDiskSpaceUsedM.setStatus('current')
vsvmDiskBytesWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 8), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmDiskBytesWritten.setStatus('current')
vsvmHeartbeatCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmHeartbeatCount.setStatus('current')
vsvmHeartbeatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmHeartbeatInterval.setStatus('current')
vsvmHeartbeatPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmHeartbeatPercentage.setStatus('current')
vsvmHeartbeatRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmHeartbeatRate.setStatus('current')
vsvmNetworkBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 13), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmNetworkBytesSent.setStatus('current')
vsvmNetworkBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 14), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmNetworkBytesReceived.setStatus('current')
vsvmPhysicalMemoryAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 15), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmPhysicalMemoryAllocated.setStatus('current')
vsvmPhysicalMemoryAllocatedK = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 16), Gauge32()).setUnits('KiloBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmPhysicalMemoryAllocatedK.setStatus('current')
vsvmPhysicalMemoryAllocatedM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 17), Gauge32()).setUnits('MegaBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmPhysicalMemoryAllocatedM.setStatus('current')
vsvmUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 1, 1, 18), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvmUptime.setStatus('current')
vsVirtualNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2), )
if mibBuilder.loadTexts: vsVirtualNetworkTable.setStatus('current')
vsVirtualNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1), ).setIndexNames((0, "INFORMANT-VS", "vsvnIndex"))
if mibBuilder.loadTexts: vsVirtualNetworkEntry.setStatus('current')
vsvnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnIndex.setStatus('current')
vsvnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnName.setStatus('current')
vsvnBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 3), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnBytesDropped.setStatus('current')
vsvnBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 4), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnBytesReceived.setStatus('current')
vsvnBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 5), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnBytesSent.setStatus('current')
vsvnPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnPacketsDropped.setStatus('current')
vsvnPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnPacketsReceived.setStatus('current')
vsvnPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 24, 2, 1, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsvnPacketsSent.setStatus('current')
mibBuilder.exportSymbols("INFORMANT-VS", wmiVirtualServer=wmiVirtualServer, vsVirtualMachineTable=vsVirtualMachineTable, vsvmNetworkBytesSent=vsvmNetworkBytesSent, vsvmDiskBytesRead=vsvmDiskBytesRead, vsVirtualMachineEntry=vsVirtualMachineEntry, vsvmCpuUtilization=vsvmCpuUtilization, vsvnIndex=vsvnIndex, vsVirtualNetworkTable=vsVirtualNetworkTable, vsvnBytesDropped=vsvnBytesDropped, vsvnBytesReceived=vsvnBytesReceived, vsvnBytesSent=vsvnBytesSent, vsVirtualNetworkEntry=vsVirtualNetworkEntry, vsvnName=vsvnName, vsvmHeartbeatCount=vsvmHeartbeatCount, PYSNMP_MODULE_ID=wmiVirtualServer, vsvmNetworkBytesReceived=vsvmNetworkBytesReceived, vsvmPhysicalMemoryAllocatedM=vsvmPhysicalMemoryAllocatedM, vsvmHeartbeatPercentage=vsvmHeartbeatPercentage, vsvmHeartbeatInterval=vsvmHeartbeatInterval, vsvmPhysicalMemoryAllocated=vsvmPhysicalMemoryAllocated, vsvmUptime=vsvmUptime, vsvmDiskSpaceUsed=vsvmDiskSpaceUsed, vsvnPacketsReceived=vsvnPacketsReceived, vsvmDiskBytesWritten=vsvmDiskBytesWritten, vsvnPacketsDropped=vsvnPacketsDropped, vsvmIndex=vsvmIndex, vsvmHeartbeatRate=vsvmHeartbeatRate, vsvmPhysicalMemoryAllocatedK=vsvmPhysicalMemoryAllocatedK, vsvmDiskSpaceUsedM=vsvmDiskSpaceUsedM, vsvmDiskSpaceUsedK=vsvmDiskSpaceUsedK, vsvmName=vsvmName, vsvnPacketsSent=vsvnPacketsSent)
