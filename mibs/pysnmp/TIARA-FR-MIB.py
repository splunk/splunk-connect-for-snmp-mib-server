#
# PySNMP MIB module TIARA-FR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-FR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, ModuleIdentity, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, IpAddress, Gauge32, Counter32, Bits, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "ModuleIdentity", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "IpAddress", "Gauge32", "Counter32", "Bits", "ObjectIdentity", "Counter64")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
bundleId, = mibBuilder.importSymbols("TIARA-BUNDLE-MIB", "bundleId")
tiaraMgmt, = mibBuilder.importSymbols("TIARA-NETWORKS-SMI", "tiaraMgmt")
tiaraFrMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 16))
tiaraFrMib.setRevisions(('1999-04-23 00:00',))
if mibBuilder.loadTexts: tiaraFrMib.setLastUpdated('9907010000Z')
if mibBuilder.loadTexts: tiaraFrMib.setOrganization('Tiara Networks Inc.')
frTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1), )
if mibBuilder.loadTexts: frTable.setStatus('current')
frTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1), ).setIndexNames((0, "TIARA-BUNDLE-MIB", "bundleId"))
if mibBuilder.loadTexts: frTableEntry.setStatus('current')
frIfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frIfEnable.setStatus('current')
frEnablePvcAll = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frEnablePvcAll.setStatus('current')
frFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096)).clone(1600)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frFrameSize.setStatus('current')
frIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dce", 1), ("dte", 2), ("nni", 3))).clone('dte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frIfType.setStatus('current')
frLmiType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("cisco", 2), ("ansi", 3), ("q933a", 4))).clone('ansi')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLmiType.setStatus('current')
frLmiDceN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLmiDceN392.setStatus('current')
frLmiDceN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLmiDceN393.setStatus('current')
frLmiDteN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLmiDteN392.setStatus('current')
frLmiDteN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLmiDteN393.setStatus('current')
frLmiDteN391 = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLmiDteN391.setStatus('current')
frLmiKeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLmiKeepalive.setStatus('current')
mfrAckMsgTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrAckMsgTimer.setStatus('current')
mfrAckMsgMaxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrAckMsgMaxRetry.setStatus('current')
mfrClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("classA", 1), ("classB", 2), ("classC", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrClass.setStatus('current')
mfrClassThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 28))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrClassThreshold.setStatus('current')
mfrFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrFrameSize.setStatus('current')
mfrHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrHelloTimer.setStatus('current')
mfrSegThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrSegThreshold.setStatus('current')
mfrDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mfrDiffDelay.setStatus('current')
frPvcTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2), )
if mibBuilder.loadTexts: frPvcTable.setStatus('current')
frPvcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1), ).setIndexNames((0, "TIARA-BUNDLE-MIB", "bundleId"), (0, "TIARA-FR-MIB", "frPvcDlci"))
if mibBuilder.loadTexts: frPvcTableEntry.setStatus('current')
frPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991)))
if mibBuilder.loadTexts: frPvcDlci.setStatus('current')
frPvcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcEnable.setStatus('current')
frPvcDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcDescr.setStatus('current')
frPvcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcIpAddr.setStatus('current')
frPvcIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcIpSubnetMask.setStatus('current')
frPvcSrcForwardingPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcSrcForwardingPrimary.setStatus('current')
frPvcSrcForwardingSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcSrcForwardingSecondary.setStatus('current')
frPvcRemoteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcRemoteIpAddr.setStatus('current')
frPvcPolicingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("none", 0), ("standard", 2))).clone('standard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcPolicingEnable.setStatus('current')
frPvcPolicingDe = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcPolicingDe.setStatus('current')
frPvcPolicingCir = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 11), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcPolicingCir.setStatus('current')
frPvcPolicingBc = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 12), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcPolicingBc.setStatus('current')
frPvcPolicingBe = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcPolicingBe.setStatus('current')
frPvcShapingCir = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 14), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcShapingCir.setStatus('current')
frPvcShapingBcMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 15), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcShapingBcMax.setStatus('current')
frPvcShapingBcMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 16), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcShapingBcMin.setStatus('current')
frPvcShapingBe = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcShapingBe.setStatus('current')
frPvcDlciForSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcDlciForSwitching.setStatus('current')
frPvcBundleNameForSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 19), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcBundleNameForSwitching.setStatus('current')
frPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 2, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPvcRowStatus.setStatus('current')
frStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3), )
if mibBuilder.loadTexts: frStatsTable.setStatus('current')
frStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1), ).setIndexNames((0, "TIARA-BUNDLE-MIB", "bundleId"))
if mibBuilder.loadTexts: frStatsTableEntry.setStatus('current')
frStatsFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsFramesRx.setStatus('current')
frStatsInvFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsInvFramesRx.setStatus('current')
frStatsFECNsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsFECNsRx.setStatus('current')
frStatsBECNsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsBECNsRx.setStatus('current')
frStatsShortFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsShortFramesRx.setStatus('current')
frStatsLongFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsLongFramesRx.setStatus('current')
frStatsInvDLCIsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsInvDLCIsRx.setStatus('current')
frStatsUnknownDLCIsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsUnknownDLCIsRx.setStatus('current')
frStatsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frStatsFramesTx.setStatus('current')
frPvcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4), )
if mibBuilder.loadTexts: frPvcStatsTable.setStatus('current')
frPvcStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1), ).setIndexNames((0, "TIARA-BUNDLE-MIB", "bundleId"), (0, "TIARA-FR-MIB", "frPvcDlci"))
if mibBuilder.loadTexts: frPvcStatsTableEntry.setStatus('current')
frPvcStatsBytesRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsBytesRxLastBootOrClear.setStatus('current')
frPvcStatsBytesTxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsBytesTxLastBootOrClear.setStatus('current')
frPvcStatsPktsRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsPktsRxLastBootOrClear.setStatus('current')
frPvcStatsPktsTxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsPktsTxLastBootOrClear.setStatus('current')
frPvcStatsErrPktsRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsErrPktsRxLastBootOrClear.setStatus('current')
frPvcStatsUpDownStatesLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsUpDownStatesLastBootOrClear.setStatus('current')
frPvcStatsBytesRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsBytesRxLastFiveMins.setStatus('current')
frPvcStatsBytesTxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsBytesTxLastFiveMins.setStatus('current')
frPvcStatsPktsRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsPktsRxLastFiveMins.setStatus('current')
frPvcStatsPktsTxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsPktsTxLastFiveMins.setStatus('current')
frPvcStatsErrPktsRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsErrPktsRxLastFiveMins.setStatus('current')
frPvcStatsUpDownStatesLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 16, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPvcStatsUpDownStatesLastFiveMins.setStatus('current')
mibBuilder.exportSymbols("TIARA-FR-MIB", frPvcShapingBe=frPvcShapingBe, frPvcSrcForwardingPrimary=frPvcSrcForwardingPrimary, frPvcStatsBytesRxLastBootOrClear=frPvcStatsBytesRxLastBootOrClear, frStatsTable=frStatsTable, frFrameSize=frFrameSize, frPvcIpSubnetMask=frPvcIpSubnetMask, frPvcBundleNameForSwitching=frPvcBundleNameForSwitching, frPvcStatsBytesRxLastFiveMins=frPvcStatsBytesRxLastFiveMins, PYSNMP_MODULE_ID=tiaraFrMib, frIfType=frIfType, frLmiType=frLmiType, frStatsFramesRx=frStatsFramesRx, frPvcStatsBytesTxLastFiveMins=frPvcStatsBytesTxLastFiveMins, frPvcStatsPktsTxLastFiveMins=frPvcStatsPktsTxLastFiveMins, frLmiDteN392=frLmiDteN392, frPvcStatsUpDownStatesLastFiveMins=frPvcStatsUpDownStatesLastFiveMins, frStatsInvDLCIsRx=frStatsInvDLCIsRx, frPvcDescr=frPvcDescr, frIfEnable=frIfEnable, frPvcStatsErrPktsRxLastFiveMins=frPvcStatsErrPktsRxLastFiveMins, frPvcIpAddr=frPvcIpAddr, mfrHelloTimer=mfrHelloTimer, frPvcPolicingDe=frPvcPolicingDe, tiaraFrMib=tiaraFrMib, mfrAckMsgMaxRetry=mfrAckMsgMaxRetry, frStatsUnknownDLCIsRx=frStatsUnknownDLCIsRx, frPvcStatsPktsRxLastFiveMins=frPvcStatsPktsRxLastFiveMins, frPvcStatsTable=frPvcStatsTable, frPvcPolicingCir=frPvcPolicingCir, mfrDiffDelay=mfrDiffDelay, frStatsInvFramesRx=frStatsInvFramesRx, frStatsShortFramesRx=frStatsShortFramesRx, frPvcRemoteIpAddr=frPvcRemoteIpAddr, frLmiDteN391=frLmiDteN391, frTable=frTable, mfrAckMsgTimer=mfrAckMsgTimer, mfrFrameSize=mfrFrameSize, mfrSegThreshold=mfrSegThreshold, frStatsBECNsRx=frStatsBECNsRx, frPvcShapingBcMin=frPvcShapingBcMin, frTableEntry=frTableEntry, frStatsLongFramesRx=frStatsLongFramesRx, frPvcStatsErrPktsRxLastBootOrClear=frPvcStatsErrPktsRxLastBootOrClear, frPvcShapingBcMax=frPvcShapingBcMax, frPvcPolicingBc=frPvcPolicingBc, frPvcStatsTableEntry=frPvcStatsTableEntry, frStatsFECNsRx=frStatsFECNsRx, frPvcStatsPktsTxLastBootOrClear=frPvcStatsPktsTxLastBootOrClear, frPvcStatsUpDownStatesLastBootOrClear=frPvcStatsUpDownStatesLastBootOrClear, frLmiDceN393=frLmiDceN393, frPvcSrcForwardingSecondary=frPvcSrcForwardingSecondary, frPvcShapingCir=frPvcShapingCir, frLmiDceN392=frLmiDceN392, frPvcRowStatus=frPvcRowStatus, frPvcStatsBytesTxLastBootOrClear=frPvcStatsBytesTxLastBootOrClear, frPvcTableEntry=frPvcTableEntry, frPvcDlciForSwitching=frPvcDlciForSwitching, frPvcPolicingEnable=frPvcPolicingEnable, frLmiDteN393=frLmiDteN393, mfrClassThreshold=mfrClassThreshold, frStatsFramesTx=frStatsFramesTx, frLmiKeepalive=frLmiKeepalive, frPvcPolicingBe=frPvcPolicingBe, mfrClass=mfrClass, frStatsTableEntry=frStatsTableEntry, frPvcStatsPktsRxLastBootOrClear=frPvcStatsPktsRxLastBootOrClear, frPvcDlci=frPvcDlci, frPvcTable=frPvcTable, frPvcEnable=frPvcEnable, frEnablePvcAll=frEnablePvcAll)
