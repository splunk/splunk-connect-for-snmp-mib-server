#
# PySNMP MIB module IPGW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPGW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:44:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, iso, MibIdentifier, ModuleIdentity, Bits, Gauge32, Counter64, ObjectIdentity, IpAddress, Integer32, Counter32, NotificationType, Unsigned32, experimental, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "MibIdentifier", "ModuleIdentity", "Bits", "Gauge32", "Counter64", "ObjectIdentity", "IpAddress", "Integer32", "Counter32", "NotificationType", "Unsigned32", "experimental", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
ipgw = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 13))
ipgwCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 13, 1))
ipgwCfgTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1), )
if mibBuilder.loadTexts: ipgwCfgTable.setStatus('mandatory')
ipgwCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1), ).setIndexNames((0, "IPGW-MIB", "ipgwCfgIndex"))
if mibBuilder.loadTexts: ipgwCfgEntry.setStatus('mandatory')
ipgwCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipgwCfgIndex.setStatus('mandatory')
ipgwCfgLocalIpAdrs = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgLocalIpAdrs.setStatus('mandatory')
ipgwCfgGatewayIpAdrs = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgGatewayIpAdrs.setStatus('mandatory')
ipgwCfgTrapDest = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nmc", 1), ("local", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgTrapDest.setStatus('mandatory')
ipgwCfgGatewayNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgGatewayNetMask.setStatus('mandatory')
ipgwCfgEthnetFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("snap", 1), ("dix", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgEthnetFraming.setStatus('mandatory')
ipgwCfgEthIfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgEthIfaceName.setStatus('mandatory')
ipgwCfgDefMgmtStationIp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgDefMgmtStationIp.setStatus('mandatory')
ipgwCfgDefCommStr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCfgDefCommStr.setStatus('mandatory')
ipgwCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 13, 3))
ipgwCmdTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1), )
if mibBuilder.loadTexts: ipgwCmdTable.setStatus('mandatory')
ipgwCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1), ).setIndexNames((0, "IPGW-MIB", "ipgwCmdIndex"))
if mibBuilder.loadTexts: ipgwCmdEntry.setStatus('mandatory')
ipgwCmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipgwCmdIndex.setStatus('mandatory')
ipgwCmdMgtStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCmdMgtStationId.setStatus('mandatory')
ipgwCmdReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipgwCmdReqId.setStatus('mandatory')
ipgwCmdFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("noCommand", 1), ("saveToNVRAM", 2), ("restoreFromNVRAM", 3), ("restoreFromDefault", 4), ("nonDisruptSelfTest", 5), ("disruptSelfTest", 6), ("softwareReset", 7), ("lanLoopBack", 8), ("bulkfileUpload", 9), ("bulkfileDownload", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCmdFunction.setStatus('mandatory')
ipgwCmdForce = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("force", 1), ("noForce", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCmdForce.setStatus('mandatory')
ipgwCmdParam = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwCmdParam.setStatus('mandatory')
ipgwCmdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("inProgress", 3), ("notSupported", 4), ("unAbleToRun", 5), ("aborted", 6), ("failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipgwCmdResult.setStatus('mandatory')
ipgwCmdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 8, 12, 20, 22, 25, 58, 73))).clone(namedValues=NamedValues(("noError", 1), ("unable", 2), ("unrecognizedCommand", 6), ("slotEmpty", 8), ("noResponse", 12), ("unsupportedCommand", 20), ("deviceDisabled", 22), ("testFailed", 25), ("userInterfaceActive", 58), ("pendingSoftwareDownload", 73)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipgwCmdCode.setStatus('mandatory')
ipgwTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 13, 4))
ipgwTrapEnaTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 13, 4, 1), )
if mibBuilder.loadTexts: ipgwTrapEnaTable.setStatus('mandatory')
ipgwTrapEnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 13, 4, 1, 1), ).setIndexNames((0, "IPGW-MIB", "ipgwTrapEnaIndex"))
if mibBuilder.loadTexts: ipgwTrapEnaEntry.setStatus('mandatory')
ipgwTrapEnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipgwTrapEnaIndex.setStatus('mandatory')
ipgwTrapEnaUiReset = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 13, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipgwTrapEnaUiReset.setStatus('mandatory')
mibBuilder.exportSymbols("IPGW-MIB", ipgwCfgEthIfaceName=ipgwCfgEthIfaceName, ipgwCmdEntry=ipgwCmdEntry, ipgwTrapEnaIndex=ipgwTrapEnaIndex, ipgwCfgGatewayNetMask=ipgwCfgGatewayNetMask, ipgwCfgGatewayIpAdrs=ipgwCfgGatewayIpAdrs, ipgwCmdTable=ipgwCmdTable, ipgwCmdMgtStationId=ipgwCmdMgtStationId, ipgw=ipgw, ipgwCmdResult=ipgwCmdResult, ipgwTrapEnaEntry=ipgwTrapEnaEntry, usr=usr, ipgwCfgEntry=ipgwCfgEntry, ipgwCfgDefMgmtStationIp=ipgwCfgDefMgmtStationIp, ipgwCmdForce=ipgwCmdForce, ipgwCfgDefCommStr=ipgwCfgDefCommStr, nas=nas, ipgwCmd=ipgwCmd, ipgwCmdParam=ipgwCmdParam, ipgwCfgLocalIpAdrs=ipgwCfgLocalIpAdrs, ipgwCfgIndex=ipgwCfgIndex, ipgwCmdFunction=ipgwCmdFunction, ipgwTrapEnaTable=ipgwTrapEnaTable, ipgwCmdReqId=ipgwCmdReqId, ipgwCfgTable=ipgwCfgTable, ipgwCfgEthnetFraming=ipgwCfgEthnetFraming, ipgwCfgTrapDest=ipgwCfgTrapDest, ipgwCmdCode=ipgwCmdCode, ipgwCmdIndex=ipgwCmdIndex, ipgwCfg=ipgwCfg, ipgwTrap=ipgwTrap, ipgwTrapEnaUiReset=ipgwTrapEnaUiReset)
