#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
Counter32, Gauge32, RowStatus, Integer32, RowPointer, Unsigned32, DisplayString, StorageType, InterfaceIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Counter32", "Gauge32", "RowStatus", "Integer32", "RowPointer", "Unsigned32", "DisplayString", "StorageType", "InterfaceIndex")
Hex, AsciiString, Link, DigitString, EnterpriseDateAndTime, PassportCounter64, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Hex", "AsciiString", "Link", "DigitString", "EnterpriseDateAndTime", "PassportCounter64", "NonReplicated")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, IpAddress, Counter64, Unsigned32, Counter32, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Integer32, TimeTicks, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "Counter64", "Unsigned32", "Counter32", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Integer32", "TimeTicks", "ObjectIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
voiceNetworkingMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109))
mscSigChan = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115))
mscSigChanRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 1), )
if mibBuilder.loadTexts: mscSigChanRowStatusTable.setStatus('mandatory')
mscSigChanRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"))
if mibBuilder.loadTexts: mscSigChanRowStatusEntry.setStatus('mandatory')
mscSigChanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanRowStatus.setStatus('mandatory')
mscSigChanComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanComponentName.setStatus('mandatory')
mscSigChanStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanStorageType.setStatus('mandatory')
mscSigChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: mscSigChanIndex.setStatus('mandatory')
mscSigChanCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 100), )
if mibBuilder.loadTexts: mscSigChanCidDataTable.setStatus('mandatory')
mscSigChanCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"))
if mibBuilder.loadTexts: mscSigChanCidDataEntry.setStatus('mandatory')
mscSigChanCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 100, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanCustomerIdentifier.setStatus('mandatory')
mscSigChanIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 101), )
if mibBuilder.loadTexts: mscSigChanIfEntryTable.setStatus('mandatory')
mscSigChanIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"))
if mibBuilder.loadTexts: mscSigChanIfEntryEntry.setStatus('mandatory')
mscSigChanIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanIfAdminStatus.setStatus('mandatory')
mscSigChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 101, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanIfIndex.setStatus('mandatory')
mscSigChanOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 102), )
if mibBuilder.loadTexts: mscSigChanOperStatusTable.setStatus('mandatory')
mscSigChanOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 102, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"))
if mibBuilder.loadTexts: mscSigChanOperStatusEntry.setStatus('mandatory')
mscSigChanSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanSnmpOperStatus.setStatus('mandatory')
mscSigChanStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 103), )
if mibBuilder.loadTexts: mscSigChanStateTable.setStatus('mandatory')
mscSigChanStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"))
if mibBuilder.loadTexts: mscSigChanStateEntry.setStatus('mandatory')
mscSigChanAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanAdminState.setStatus('mandatory')
mscSigChanOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 103, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanOperationalState.setStatus('mandatory')
mscSigChanUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanUsageState.setStatus('mandatory')
mscSigChanProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 104), )
if mibBuilder.loadTexts: mscSigChanProvTable.setStatus('mandatory')
mscSigChanProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"))
if mibBuilder.loadTexts: mscSigChanProvEntry.setStatus('mandatory')
mscSigChanCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 104, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanCommentText.setStatus('mandatory')
mscSigChanOctothorpeEod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanOctothorpeEod.setStatus('mandatory')
mscSigChanForceNpiTon = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 104, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanForceNpiTon.setStatus('mandatory')
mscSigChanDefaultNpiTon = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 104, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("international", 1), ("national", 2), ("subscriber", 3), ("p0", 4), ("p1", 5), ("p2", 6), ("p3", 7), ("p4", 8), ("p5", 9), ("p6", 10), ("p7", 11), ("casUnknown", 12))).clone('casUnknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanDefaultNpiTon.setStatus('mandatory')
mscSigChanSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 307), )
if mibBuilder.loadTexts: mscSigChanSubroutesTable.setStatus('mandatory')
mscSigChanSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 307, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanSubroutesValue"))
if mibBuilder.loadTexts: mscSigChanSubroutesEntry.setStatus('mandatory')
mscSigChanSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 307, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanSubroutesValue.setStatus('mandatory')
mscSigChanSubroutesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 307, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscSigChanSubroutesRowStatus.setStatus('mandatory')
mscSigChanDegradedSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 308), )
if mibBuilder.loadTexts: mscSigChanDegradedSubroutesTable.setStatus('mandatory')
mscSigChanDegradedSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 308, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanDegradedSubroutesValue"))
if mibBuilder.loadTexts: mscSigChanDegradedSubroutesEntry.setStatus('mandatory')
mscSigChanDegradedSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 308, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanDegradedSubroutesValue.setStatus('mandatory')
mscSigChanBch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7))
mscSigChanBchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 1), )
if mibBuilder.loadTexts: mscSigChanBchRowStatusTable.setStatus('mandatory')
mscSigChanBchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanBchIndex"))
if mibBuilder.loadTexts: mscSigChanBchRowStatusEntry.setStatus('mandatory')
mscSigChanBchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanBchRowStatus.setStatus('mandatory')
mscSigChanBchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanBchComponentName.setStatus('mandatory')
mscSigChanBchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanBchStorageType.setStatus('mandatory')
mscSigChanBchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 331)))
if mibBuilder.loadTexts: mscSigChanBchIndex.setStatus('mandatory')
mscSigChanBchOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 4), )
if mibBuilder.loadTexts: mscSigChanBchOperTable.setStatus('mandatory')
mscSigChanBchOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 4, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanBchIndex"))
if mibBuilder.loadTexts: mscSigChanBchOperEntry.setStatus('mandatory')
mscSigChanBchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 0), ("maintB", 1), ("idle", 2), ("busy", 3), ("ingress", 4), ("egress", 5), ("idleMaintenance", 6), ("ingressMaintenance", 7), ("egressMaintenance", 8), ("outOfService", 9))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanBchStatus.setStatus('mandatory')
mscSigChanBchTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanBchTimeSlot.setStatus('mandatory')
mscSigChanBchVsrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanBchVsrInstance.setStatus('mandatory')
mscSigChanBchCalledDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 7, 4, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanBchCalledDirectoryNumber.setStatus('mandatory')
mscSigChanGw = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15))
mscSigChanGwRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 1), )
if mibBuilder.loadTexts: mscSigChanGwRowStatusTable.setStatus('mandatory')
mscSigChanGwRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanGwIndex"))
if mibBuilder.loadTexts: mscSigChanGwRowStatusEntry.setStatus('mandatory')
mscSigChanGwRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanGwRowStatus.setStatus('mandatory')
mscSigChanGwComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanGwComponentName.setStatus('mandatory')
mscSigChanGwStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanGwStorageType.setStatus('mandatory')
mscSigChanGwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscSigChanGwIndex.setStatus('mandatory')
mscSigChanGwStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 101), )
if mibBuilder.loadTexts: mscSigChanGwStatsTable.setStatus('mandatory')
mscSigChanGwStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanGwIndex"))
if mibBuilder.loadTexts: mscSigChanGwStatsEntry.setStatus('mandatory')
mscSigChanGwRequiredConversions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 101, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanGwRequiredConversions.setStatus('mandatory')
mscSigChanGwUnsupportedConversions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 101, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanGwUnsupportedConversions.setStatus('mandatory')
mscSigChanGwGwcTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 301), )
if mibBuilder.loadTexts: mscSigChanGwGwcTable.setStatus('obsolete')
mscSigChanGwGwcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 301, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanGwIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanGwGwcIndex"))
if mibBuilder.loadTexts: mscSigChanGwGwcEntry.setStatus('obsolete')
mscSigChanGwGwcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 301, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("etsiQsigPG", 0), ("nisPG", 1), ("analogAndCasPG", 2), ("euroIsdnPG", 3), ("mcdnPG", 4), ("mcdnUniPG", 5))))
if mibBuilder.loadTexts: mscSigChanGwGwcIndex.setStatus('obsolete')
mscSigChanGwGwcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 301, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noGw", 0), ("singleEndedGw", 1), ("doubleEndedGw", 2), ("singleOrDoubleEndedGw", 3), ("nativePG", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanGwGwcValue.setStatus('obsolete')
mscSigChanGwGatewayCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 302), )
if mibBuilder.loadTexts: mscSigChanGwGatewayCapTable.setStatus('mandatory')
mscSigChanGwGatewayCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 302, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanGwIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanGwGatewayCapIndex"))
if mibBuilder.loadTexts: mscSigChanGwGatewayCapEntry.setStatus('mandatory')
mscSigChanGwGatewayCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 302, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("etsiQsigPG", 0), ("mcdnPG", 1), ("analogAndCasPG", 2), ("euroIsdnPG", 3))))
if mibBuilder.loadTexts: mscSigChanGwGatewayCapIndex.setStatus('mandatory')
mscSigChanGwGatewayCapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 15, 302, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noGw", 0), ("singleEndedGw", 1), ("doubleEndedGw", 2), ("singleOrDoubleEndedGw", 3), ("nativePG", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanGwGatewayCapValue.setStatus('mandatory')
mscSigChanNcas = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16))
mscSigChanNcasRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 1), )
if mibBuilder.loadTexts: mscSigChanNcasRowStatusTable.setStatus('mandatory')
mscSigChanNcasRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanNcasIndex"))
if mibBuilder.loadTexts: mscSigChanNcasRowStatusEntry.setStatus('mandatory')
mscSigChanNcasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanNcasRowStatus.setStatus('mandatory')
mscSigChanNcasComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanNcasComponentName.setStatus('mandatory')
mscSigChanNcasStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanNcasStorageType.setStatus('mandatory')
mscSigChanNcasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscSigChanNcasIndex.setStatus('mandatory')
mscSigChanNcasOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 100), )
if mibBuilder.loadTexts: mscSigChanNcasOperTable.setStatus('mandatory')
mscSigChanNcasOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanNcasIndex"))
if mibBuilder.loadTexts: mscSigChanNcasOperEntry.setStatus('mandatory')
mscSigChanNcasDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanNcasDirection.setStatus('mandatory')
mscSigChanNcasCallReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 100, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanNcasCallReference.setStatus('mandatory')
mscSigChanNcasCalledDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 100, 1, 3), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanNcasCalledDirectoryNumber.setStatus('mandatory')
mscSigChanNcasDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 16, 100, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanNcasDuration.setStatus('mandatory')
mscSigChanICmap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18))
mscSigChanICmapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 1), )
if mibBuilder.loadTexts: mscSigChanICmapRowStatusTable.setStatus('mandatory')
mscSigChanICmapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanICmapIndex"))
if mibBuilder.loadTexts: mscSigChanICmapRowStatusEntry.setStatus('mandatory')
mscSigChanICmapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapRowStatus.setStatus('mandatory')
mscSigChanICmapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanICmapComponentName.setStatus('mandatory')
mscSigChanICmapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanICmapStorageType.setStatus('mandatory')
mscSigChanICmapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscSigChanICmapIndex.setStatus('mandatory')
mscSigChanICmapIntCauseTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100), )
if mibBuilder.loadTexts: mscSigChanICmapIntCauseTable.setStatus('mandatory')
mscSigChanICmapIntCauseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanICmapIndex"))
if mibBuilder.loadTexts: mscSigChanICmapIntCauseEntry.setStatus('mandatory')
mscSigChanICmapEgressLinkOutOfServCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapEgressLinkOutOfServCause.setStatus('mandatory')
mscSigChanICmapChanOrCircNotAvailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapChanOrCircNotAvailCause.setStatus('mandatory')
mscSigChanICmapTempFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapTempFailureCause.setStatus('mandatory')
mscSigChanICmapSwitchCongestCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapSwitchCongestCause.setStatus('mandatory')
mscSigChanICmapReqChanOrCircNotAvailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapReqChanOrCircNotAvailCause.setStatus('mandatory')
mscSigChanICmapResourceUnavailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapResourceUnavailCause.setStatus('mandatory')
mscSigChanICmapServNotAllowedCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapServNotAllowedCause.setStatus('mandatory')
mscSigChanICmapNoSuchChannelCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapNoSuchChannelCause.setStatus('mandatory')
mscSigChanICmapIncompatDestCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 18, 100, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanICmapIncompatDestCause.setStatus('mandatory')
mscVRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116))
mscVRouteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 1), )
if mibBuilder.loadTexts: mscVRouteRowStatusTable.setStatus('mandatory')
mscVRouteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"))
if mibBuilder.loadTexts: mscVRouteRowStatusEntry.setStatus('mandatory')
mscVRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteRowStatus.setStatus('mandatory')
mscVRouteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteComponentName.setStatus('mandatory')
mscVRouteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteStorageType.setStatus('mandatory')
mscVRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: mscVRouteIndex.setStatus('mandatory')
mscVRouteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10), )
if mibBuilder.loadTexts: mscVRouteProvTable.setStatus('mandatory')
mscVRouteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"))
if mibBuilder.loadTexts: mscVRouteProvEntry.setStatus('mandatory')
mscVRouteCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteCommentText.setStatus('mandatory')
mscVRouteTypeOfRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("voiceData", 2))).clone('voiceData')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteTypeOfRoute.setStatus('mandatory')
mscVRouteDiallingPlan0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="fff8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteDiallingPlan0.setStatus('mandatory')
mscVRouteDiallingPlan1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteDiallingPlan1.setStatus('mandatory')
mscVRouteDiallingPlan2 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteDiallingPlan2.setStatus('mandatory')
mscVRouteHuntingAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bottomUpLinear", 0), ("topDownLinear", 1))).clone('bottomUpLinear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteHuntingAlgorithm.setStatus('mandatory')
mscVRouteMinimumDigitsToRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteMinimumDigitsToRoute.setStatus('mandatory')
mscVRouteVoiceNetworkingCallServer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 11), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteVoiceNetworkingCallServer.setStatus('mandatory')
mscVRouteOverrideDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 12), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 24)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteOverrideDirectoryNumber.setStatus('mandatory')
mscVRoutePrivateNetworkIdentifer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRoutePrivateNetworkIdentifer.setStatus('mandatory')
mscVRouteCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 11), )
if mibBuilder.loadTexts: mscVRouteCidDataTable.setStatus('mandatory')
mscVRouteCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"))
if mibBuilder.loadTexts: mscVRouteCidDataEntry.setStatus('mandatory')
mscVRouteCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteCustomerIdentifier.setStatus('mandatory')
mscVRouteIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 12), )
if mibBuilder.loadTexts: mscVRouteIfEntryTable.setStatus('mandatory')
mscVRouteIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"))
if mibBuilder.loadTexts: mscVRouteIfEntryEntry.setStatus('mandatory')
mscVRouteIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteIfAdminStatus.setStatus('mandatory')
mscVRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 12, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteIfIndex.setStatus('mandatory')
mscVRouteStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 13), )
if mibBuilder.loadTexts: mscVRouteStateTable.setStatus('mandatory')
mscVRouteStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"))
if mibBuilder.loadTexts: mscVRouteStateEntry.setStatus('mandatory')
mscVRouteAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteAdminState.setStatus('mandatory')
mscVRouteOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteOperationalState.setStatus('mandatory')
mscVRouteUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteUsageState.setStatus('mandatory')
mscVRouteOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 14), )
if mibBuilder.loadTexts: mscVRouteOperStatusTable.setStatus('mandatory')
mscVRouteOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"))
if mibBuilder.loadTexts: mscVRouteOperStatusEntry.setStatus('mandatory')
mscVRouteSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteSnmpOperStatus.setStatus('mandatory')
mscVRouteStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 15), )
if mibBuilder.loadTexts: mscVRouteStatsTable.setStatus('mandatory')
mscVRouteStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"))
if mibBuilder.loadTexts: mscVRouteStatsEntry.setStatus('mandatory')
mscVRouteTotalCallsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteTotalCallsFromSubnet.setStatus('mandatory')
mscVRouteCallsClearedNoChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteCallsClearedNoChannel.setStatus('mandatory')
mscVRouteCallsClearedOutOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteCallsClearedOutOfService.setStatus('mandatory')
mscVRouteCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteCallsRejected.setStatus('mandatory')
mscVRouteSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 309), )
if mibBuilder.loadTexts: mscVRouteSubroutesTable.setStatus('mandatory')
mscVRouteSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 309, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteSubroutesValue"))
if mibBuilder.loadTexts: mscVRouteSubroutesEntry.setStatus('mandatory')
mscVRouteSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 309, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteSubroutesValue.setStatus('mandatory')
mscVRouteSubroutesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 309, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVRouteSubroutesRowStatus.setStatus('mandatory')
mscVRouteDegradedSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 310), )
if mibBuilder.loadTexts: mscVRouteDegradedSubroutesTable.setStatus('mandatory')
mscVRouteDegradedSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 310, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteDegradedSubroutesValue"))
if mibBuilder.loadTexts: mscVRouteDegradedSubroutesEntry.setStatus('mandatory')
mscVRouteDegradedSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 310, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteDegradedSubroutesValue.setStatus('mandatory')
mscVRouteDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 2))
mscVRouteDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 2, 1), )
if mibBuilder.loadTexts: mscVRouteDebugRowStatusTable.setStatus('mandatory')
mscVRouteDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteDebugIndex"))
if mibBuilder.loadTexts: mscVRouteDebugRowStatusEntry.setStatus('mandatory')
mscVRouteDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteDebugRowStatus.setStatus('mandatory')
mscVRouteDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteDebugComponentName.setStatus('mandatory')
mscVRouteDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteDebugStorageType.setStatus('mandatory')
mscVRouteDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVRouteDebugIndex.setStatus('mandatory')
mscVRouteInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3))
mscVRouteInterfaceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 1), )
if mibBuilder.loadTexts: mscVRouteInterfaceRowStatusTable.setStatus('mandatory')
mscVRouteInterfaceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteInterfaceIndex"))
if mibBuilder.loadTexts: mscVRouteInterfaceRowStatusEntry.setStatus('mandatory')
mscVRouteInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteInterfaceRowStatus.setStatus('mandatory')
mscVRouteInterfaceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteInterfaceComponentName.setStatus('mandatory')
mscVRouteInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteInterfaceStorageType.setStatus('mandatory')
mscVRouteInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVRouteInterfaceIndex.setStatus('mandatory')
mscVRouteInterfaceProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10), )
if mibBuilder.loadTexts: mscVRouteInterfaceProvTable.setStatus('mandatory')
mscVRouteInterfaceProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteInterfaceIndex"))
if mibBuilder.loadTexts: mscVRouteInterfaceProvEntry.setStatus('mandatory')
mscVRouteInterfaceIngressAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceIngressAudioGain.setStatus('mandatory')
mscVRouteInterfaceEgressAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceEgressAudioGain.setStatus('mandatory')
mscVRouteInterfaceTandemPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceTandemPassThrough.setStatus('mandatory')
mscVRouteInterfaceEchoCancellation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceEchoCancellation.setStatus('obsolete')
mscVRouteInterfaceComfortNoiseCap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-78, -78), ValueRangeConstraint(-65, -65), ValueRangeConstraint(-60, -60), ValueRangeConstraint(-54, -54), ValueRangeConstraint(-52, -52), ValueRangeConstraint(-50, -50), ValueRangeConstraint(-48, -48), ValueRangeConstraint(-46, -46), ValueRangeConstraint(-44, -44), ValueRangeConstraint(-42, -42), ValueRangeConstraint(-40, -40), )).clone(-40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceComfortNoiseCap.setStatus('mandatory')
mscVRouteInterfaceSpeechHangoverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 500)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceSpeechHangoverTime.setStatus('mandatory')
mscVRouteInterfaceFaxHangoverTimeG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(300, 20000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceFaxHangoverTimeG711G726.setStatus('mandatory')
mscVRouteInterfaceModemFaxSpeechDiscrim = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceModemFaxSpeechDiscrim.setStatus('mandatory')
mscVRouteInterfaceEchoTailDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(32, 32), ValueRangeConstraint(64, 64), )).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceEchoTailDelay.setStatus('mandatory')
mscVRouteInterfaceEchoReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ValueRangeConstraint(6, 6), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceEchoReturnLoss.setStatus('mandatory')
mscVRouteInterfaceEcanBypassMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g164", 0), ("g165", 1), ("never", 2))).clone('g165')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceEcanBypassMode.setStatus('mandatory')
mscVRouteInterfaceStructuredEchoCancellationTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 474), )
if mibBuilder.loadTexts: mscVRouteInterfaceStructuredEchoCancellationTable.setStatus('mandatory')
mscVRouteInterfaceStructuredEchoCancellationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 474, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteInterfaceIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteInterfaceStructuredEchoCancellationIndex"))
if mibBuilder.loadTexts: mscVRouteInterfaceStructuredEchoCancellationEntry.setStatus('mandatory')
mscVRouteInterfaceStructuredEchoCancellationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 474, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("v1", 0), ("v2", 1))))
if mibBuilder.loadTexts: mscVRouteInterfaceStructuredEchoCancellationIndex.setStatus('mandatory')
mscVRouteInterfaceStructuredEchoCancellationValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 3, 474, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteInterfaceStructuredEchoCancellationValue.setStatus('mandatory')
mscVRouteDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4))
mscVRouteDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 1), )
if mibBuilder.loadTexts: mscVRouteDnaRowStatusTable.setStatus('mandatory')
mscVRouteDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteDnaIndex"))
if mibBuilder.loadTexts: mscVRouteDnaRowStatusEntry.setStatus('mandatory')
mscVRouteDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteDnaRowStatus.setStatus('mandatory')
mscVRouteDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteDnaComponentName.setStatus('mandatory')
mscVRouteDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteDnaStorageType.setStatus('mandatory')
mscVRouteDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVRouteDnaIndex.setStatus('mandatory')
mscVRouteDnaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 10), )
if mibBuilder.loadTexts: mscVRouteDnaAddressTable.setStatus('mandatory')
mscVRouteDnaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteDnaIndex"))
if mibBuilder.loadTexts: mscVRouteDnaAddressEntry.setStatus('mandatory')
mscVRouteDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('e164')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteDnaNumberingPlanIndicator.setStatus('mandatory')
mscVRouteDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 4, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteDnaDataNetworkAddress.setStatus('mandatory')
mscVRouteAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5))
mscVRouteAcctRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 1), )
if mibBuilder.loadTexts: mscVRouteAcctRowStatusTable.setStatus('mandatory')
mscVRouteAcctRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteAcctIndex"))
if mibBuilder.loadTexts: mscVRouteAcctRowStatusEntry.setStatus('mandatory')
mscVRouteAcctRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteAcctRowStatus.setStatus('mandatory')
mscVRouteAcctComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteAcctComponentName.setStatus('mandatory')
mscVRouteAcctStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVRouteAcctStorageType.setStatus('mandatory')
mscVRouteAcctIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVRouteAcctIndex.setStatus('mandatory')
mscVRouteAcctProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 2), )
if mibBuilder.loadTexts: mscVRouteAcctProvTable.setStatus('mandatory')
mscVRouteAcctProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 2, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVRouteAcctIndex"))
if mibBuilder.loadTexts: mscVRouteAcctProvEntry.setStatus('mandatory')
mscVRouteAcctAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteAcctAccountCollection.setStatus('mandatory')
mscVRouteAcctAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteAcctAccountClass.setStatus('mandatory')
mscVRouteAcctServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteAcctServiceExchange.setStatus('mandatory')
mscVRouteAcctDigitsSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteAcctDigitsSuppressed.setStatus('mandatory')
mscVRouteAcctAccountingOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 116, 5, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVRouteAcctAccountingOptions.setStatus('mandatory')
mscVsr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117))
mscVsrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 1), )
if mibBuilder.loadTexts: mscVsrRowStatusTable.setStatus('mandatory')
mscVsrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrRowStatusEntry.setStatus('mandatory')
mscVsrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrRowStatus.setStatus('mandatory')
mscVsrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrComponentName.setStatus('mandatory')
mscVsrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrStorageType.setStatus('mandatory')
mscVsrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: mscVsrIndex.setStatus('mandatory')
mscVsrCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 10), )
if mibBuilder.loadTexts: mscVsrCidDataTable.setStatus('mandatory')
mscVsrCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrCidDataEntry.setStatus('mandatory')
mscVsrCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrCustomerIdentifier.setStatus('mandatory')
mscVsrIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 11), )
if mibBuilder.loadTexts: mscVsrIfEntryTable.setStatus('mandatory')
mscVsrIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrIfEntryEntry.setStatus('mandatory')
mscVsrIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrIfAdminStatus.setStatus('mandatory')
mscVsrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrIfIndex.setStatus('mandatory')
mscVsrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 12), )
if mibBuilder.loadTexts: mscVsrProvTable.setStatus('mandatory')
mscVsrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrProvEntry.setStatus('mandatory')
mscVsrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 12, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrCommentText.setStatus('mandatory')
mscVsrVoiceRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 12, 1, 3), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrVoiceRoute.setStatus('mandatory')
mscVsrSignallingChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 12, 1, 311), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSignallingChannel.setStatus('mandatory')
mscVsrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 13), )
if mibBuilder.loadTexts: mscVsrStateTable.setStatus('mandatory')
mscVsrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrStateEntry.setStatus('mandatory')
mscVsrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrAdminState.setStatus('mandatory')
mscVsrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrOperationalState.setStatus('mandatory')
mscVsrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrUsageState.setStatus('mandatory')
mscVsrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 14), )
if mibBuilder.loadTexts: mscVsrOperStatusTable.setStatus('mandatory')
mscVsrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrOperStatusEntry.setStatus('mandatory')
mscVsrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSnmpOperStatus.setStatus('mandatory')
mscVsrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15), )
if mibBuilder.loadTexts: mscVsrStatsTable.setStatus('mandatory')
mscVsrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrStatsEntry.setStatus('mandatory')
mscVsrTotalCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrTotalCallsFromIf.setStatus('mandatory')
mscVsrTotalFailedCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrTotalFailedCallsFromIf.setStatus('mandatory')
mscVsrInvalidNumberingPlanCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrInvalidNumberingPlanCalls.setStatus('mandatory')
mscVsrAddressResolutionFailedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrAddressResolutionFailedCalls.setStatus('mandatory')
mscVsrAddressIncompleteCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrAddressIncompleteCalls.setStatus('mandatory')
mscVsrPathAttributesNotMetCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPathAttributesNotMetCalls.setStatus('mandatory')
mscVsrPathSetupTimeOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPathSetupTimeOutCalls.setStatus('mandatory')
mscVsrCallsRejectedLocally = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrCallsRejectedLocally.setStatus('mandatory')
mscVsrCallsRejectedByFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrCallsRejectedByFarEnd.setStatus('mandatory')
mscVsrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16), )
if mibBuilder.loadTexts: mscVsrOperTable.setStatus('mandatory')
mscVsrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"))
if mibBuilder.loadTexts: mscVsrOperEntry.setStatus('mandatory')
mscVsrActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrActiveChannels.setStatus('mandatory')
mscVsrPeakActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPeakActiveChannels.setStatus('mandatory')
mscVsrActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrActiveVoiceChannels.setStatus('mandatory')
mscVsrActiveModemChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrActiveModemChannels.setStatus('mandatory')
mscVsrActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrActiveDataChannels.setStatus('mandatory')
mscVsrPeakActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPeakActiveVoiceChannels.setStatus('mandatory')
mscVsrPeakActiveModemChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPeakActiveModemChannels.setStatus('mandatory')
mscVsrPeakActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPeakActiveDataChannels.setStatus('mandatory')
mscVsrActiveFaxRelayChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrActiveFaxRelayChannels.setStatus('mandatory')
mscVsrActiveTptChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrActiveTptChannels.setStatus('mandatory')
mscVsrPeakActiveFaxRelayChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPeakActiveFaxRelayChannels.setStatus('mandatory')
mscVsrPeakActiveTptChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 16, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrPeakActiveTptChannels.setStatus('mandatory')
mscVsrSvs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2))
mscVsrSvsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 1), )
if mibBuilder.loadTexts: mscVsrSvsRowStatusTable.setStatus('mandatory')
mscVsrSvsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"))
if mibBuilder.loadTexts: mscVsrSvsRowStatusEntry.setStatus('mandatory')
mscVsrSvsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsRowStatus.setStatus('mandatory')
mscVsrSvsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsComponentName.setStatus('mandatory')
mscVsrSvsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsStorageType.setStatus('mandatory')
mscVsrSvsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: mscVsrSvsIndex.setStatus('mandatory')
mscVsrSvsIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 11), )
if mibBuilder.loadTexts: mscVsrSvsIfEntryTable.setStatus('mandatory')
mscVsrSvsIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"))
if mibBuilder.loadTexts: mscVsrSvsIfEntryEntry.setStatus('mandatory')
mscVsrSvsIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsIfAdminStatus.setStatus('mandatory')
mscVsrSvsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsIfIndex.setStatus('mandatory')
mscVsrSvsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12), )
if mibBuilder.loadTexts: mscVsrSvsOperTable.setStatus('mandatory')
mscVsrSvsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"))
if mibBuilder.loadTexts: mscVsrSvsOperEntry.setStatus('mandatory')
mscVsrSvsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 0), ("seized", 1), ("answered", 2), ("clearing", 3), ("lockout", 4), ("idleMaintenance", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsStatus.setStatus('mandatory')
mscVsrSvsProfileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsProfileNumber.setStatus('mandatory')
mscVsrSvsCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("modem", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsCallType.setStatus('mandatory')
mscVsrSvsCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsCalledNumber.setStatus('mandatory')
mscVsrSvsCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12, 1, 5), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsCallingNumber.setStatus('mandatory')
mscVsrSvsClearCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 12, 1, 6), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsClearCauseCode.setStatus('mandatory')
mscVsrSvsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 13), )
if mibBuilder.loadTexts: mscVsrSvsStatsTable.setStatus('mandatory')
mscVsrSvsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"))
if mibBuilder.loadTexts: mscVsrSvsStatsEntry.setStatus('mandatory')
mscVsrSvsTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsTotalCalls.setStatus('mandatory')
mscVsrSvsTotalCallSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsTotalCallSeconds.setStatus('mandatory')
mscVsrSvsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 14), )
if mibBuilder.loadTexts: mscVsrSvsStateTable.setStatus('mandatory')
mscVsrSvsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"))
if mibBuilder.loadTexts: mscVsrSvsStateEntry.setStatus('mandatory')
mscVsrSvsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsAdminState.setStatus('mandatory')
mscVsrSvsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsOperationalState.setStatus('mandatory')
mscVsrSvsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsUsageState.setStatus('mandatory')
mscVsrSvsOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 15), )
if mibBuilder.loadTexts: mscVsrSvsOperStatusTable.setStatus('mandatory')
mscVsrSvsOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"))
if mibBuilder.loadTexts: mscVsrSvsOperStatusEntry.setStatus('mandatory')
mscVsrSvsSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsSnmpOperStatus.setStatus('mandatory')
mscVsrSvsFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2))
mscVsrSvsFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 1), )
if mibBuilder.loadTexts: mscVsrSvsFramerRowStatusTable.setStatus('mandatory')
mscVsrSvsFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerRowStatusEntry.setStatus('mandatory')
mscVsrSvsFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerRowStatus.setStatus('mandatory')
mscVsrSvsFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerComponentName.setStatus('mandatory')
mscVsrSvsFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerStorageType.setStatus('mandatory')
mscVsrSvsFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsrSvsFramerIndex.setStatus('mandatory')
mscVsrSvsFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 10), )
if mibBuilder.loadTexts: mscVsrSvsFramerProvTable.setStatus('mandatory')
mscVsrSvsFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerProvEntry.setStatus('mandatory')
mscVsrSvsFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsFramerInterfaceName.setStatus('mandatory')
mscVsrSvsFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 14), )
if mibBuilder.loadTexts: mscVsrSvsFramerStateTable.setStatus('mandatory')
mscVsrSvsFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerStateEntry.setStatus('mandatory')
mscVsrSvsFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerAdminState.setStatus('mandatory')
mscVsrSvsFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerOperationalState.setStatus('mandatory')
mscVsrSvsFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerUsageState.setStatus('mandatory')
mscVsrSvsFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15), )
if mibBuilder.loadTexts: mscVsrSvsFramerStatsTable.setStatus('mandatory')
mscVsrSvsFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerStatsEntry.setStatus('mandatory')
mscVsrSvsFramerTotalCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerTotalCells.setStatus('mandatory')
mscVsrSvsFramerAudioCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerAudioCells.setStatus('mandatory')
mscVsrSvsFramerSilenceCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerSilenceCells.setStatus('mandatory')
mscVsrSvsFramerModemCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerModemCells.setStatus('obsolete')
mscVsrSvsFramerCurrentEncodingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n640", 1), ("n320", 2), ("n240", 3), ("n160", 4), ("n80", 5), ("n144", 6), ("n120", 7), ("n96", 8), ("n72", 9), ("n63", 10), ("n53", 11), ("n48", 12), ("n24", 13), ("n12", 14), ("n03", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerCurrentEncodingRate.setStatus('obsolete')
mscVsrSvsFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerLrcErrors.setStatus('mandatory')
mscVsrSvsFramerFrmLostInNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerFrmLostInNetwork.setStatus('mandatory')
mscVsrSvsFramerFrmUnderRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerFrmUnderRuns.setStatus('mandatory')
mscVsrSvsFramerFrmDumped = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerFrmDumped.setStatus('mandatory')
mscVsrSvsFramerModemSilenceCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerModemSilenceCells.setStatus('obsolete')
mscVsrSvsFramerCurrentEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 32, 33, 64, 65, 66, 67, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g723", 3), ("g726", 4), ("g711", 5), ("v22", 32), ("v22bis", 33), ("faxRelay", 64), ("v27", 65), ("v29", 66), ("v17", 67), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerCurrentEncoding.setStatus('obsolete')
mscVsrSvsFramerTptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("operating", 0), ("rejected", 1), ("monitoring", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerTptStatus.setStatus('obsolete')
mscVsrSvsFramerFaxRelayCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerFaxRelayCells.setStatus('mandatory')
mscVsrSvsFramerModemFaxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerModemFaxCells.setStatus('mandatory')
mscVsrSvsFramerFaxIdleCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 15, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerFaxIdleCells.setStatus('mandatory')
mscVsrSvsFramerOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 16), )
if mibBuilder.loadTexts: mscVsrSvsFramerOperTable.setStatus('mandatory')
mscVsrSvsFramerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerOperEntry.setStatus('mandatory')
mscVsrSvsFramerOpCurrentEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 32, 33, 64, 65, 66, 67, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g723", 3), ("g726", 4), ("g711", 5), ("v22", 32), ("v22bis", 33), ("faxRelay", 64), ("v27", 65), ("v29", 66), ("v17", 67), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerOpCurrentEncoding.setStatus('mandatory')
mscVsrSvsFramerCurrentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n640", 1), ("n320", 2), ("n240", 3), ("n160", 4), ("n80", 5), ("n144", 6), ("n120", 7), ("n96", 8), ("n72", 9), ("n63", 10), ("n53", 11), ("n48", 12), ("n24", 13), ("n12", 14), ("n03", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerCurrentRate.setStatus('mandatory')
mscVsrSvsFramerOpTptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("operating", 0), ("monitoring", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerOpTptStatus.setStatus('mandatory')
mscVsrSvsFramerNegTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 17), )
if mibBuilder.loadTexts: mscVsrSvsFramerNegTable.setStatus('mandatory')
mscVsrSvsFramerNegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerNegEntry.setStatus('mandatory')
mscVsrSvsFramerNegotiatedSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("congested", 2), ("slow", 3), ("slowAndCongested", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsFramerNegotiatedSilenceSuppression.setStatus('mandatory')
mscVsrSvsFramerNegotiatedFisG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsFramerNegotiatedFisG711G726.setStatus('mandatory')
mscVsrSvsFramerNegotiatedDtmfRegeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsFramerNegotiatedDtmfRegeneration.setStatus('mandatory')
mscVsrSvsFramerNegotiatedV17AsG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerNegotiatedV17AsG711G726.setStatus('mandatory')
mscVsrSvsFramerNegotiatedTandemPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerNegotiatedTandemPassThrough.setStatus('mandatory')
mscVsrSvsFramerFrmToNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 315), )
if mibBuilder.loadTexts: mscVsrSvsFramerFrmToNetworkTable.setStatus('mandatory')
mscVsrSvsFramerFrmToNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 315, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerFrmToNetworkIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerFrmToNetworkEntry.setStatus('mandatory')
mscVsrSvsFramerFrmToNetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 315, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n64KbitS", 0), ("n32KbitS", 1), ("n24KbitS", 2), ("n16KbitS", 3), ("n8KbitS", 4))))
if mibBuilder.loadTexts: mscVsrSvsFramerFrmToNetworkIndex.setStatus('mandatory')
mscVsrSvsFramerFrmToNetworkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 315, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerFrmToNetworkValue.setStatus('mandatory')
mscVsrSvsFramerFrmFromNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 316), )
if mibBuilder.loadTexts: mscVsrSvsFramerFrmFromNetworkTable.setStatus('mandatory')
mscVsrSvsFramerFrmFromNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 316, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerFrmFromNetworkIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerFrmFromNetworkEntry.setStatus('mandatory')
mscVsrSvsFramerFrmFromNetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 316, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n64KbitS", 0), ("n32KbitS", 1), ("n24KbitS", 2), ("n16KbitS", 3), ("n8KbitS", 4))))
if mibBuilder.loadTexts: mscVsrSvsFramerFrmFromNetworkIndex.setStatus('mandatory')
mscVsrSvsFramerFrmFromNetworkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 316, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerFrmFromNetworkValue.setStatus('mandatory')
mscVsrSvsFramerNEncodingTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 467), )
if mibBuilder.loadTexts: mscVsrSvsFramerNEncodingTable.setStatus('mandatory')
mscVsrSvsFramerNEncodingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 467, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerNEncodingIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerNEncodingEntry.setStatus('mandatory')
mscVsrSvsFramerNEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 467, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("modemFax", 1), ("fax", 2))))
if mibBuilder.loadTexts: mscVsrSvsFramerNEncodingIndex.setStatus('mandatory')
mscVsrSvsFramerNEncodingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 467, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 31, 64, 68, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g726", 4), ("g711", 5), ("g711G726", 31), ("v29V27Relay", 64), ("v17V29V27Relay", 68), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsFramerNEncodingValue.setStatus('mandatory')
mscVsrSvsFramerNRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 479), )
if mibBuilder.loadTexts: mscVsrSvsFramerNRatesTable.setStatus('mandatory')
mscVsrSvsFramerNRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 479, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerNRatesTrafficIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerNRatesRateIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerNRatesEntry.setStatus('mandatory')
mscVsrSvsFramerNRatesTrafficIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 479, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("modemFax", 1), ("fax", 2))))
if mibBuilder.loadTexts: mscVsrSvsFramerNRatesTrafficIndex.setStatus('mandatory')
mscVsrSvsFramerNRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 479, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: mscVsrSvsFramerNRatesRateIndex.setStatus('mandatory')
mscVsrSvsFramerNRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 479, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 66, 67, 68, 69, 70))).clone(namedValues=NamedValues(("n00", 0), ("n03", 1), ("n12", 2), ("n24", 3), ("n48", 4), ("n72", 5), ("n96", 6), ("n120", 7), ("n144", 8), ("n80", 66), ("n160", 67), ("n240", 68), ("n320", 69), ("n640", 70)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsFramerNRatesValue.setStatus('mandatory')
mscVsrSvsFramerVfpDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 5))
mscVsrSvsFramerVfpDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 5, 1), )
if mibBuilder.loadTexts: mscVsrSvsFramerVfpDebugRowStatusTable.setStatus('mandatory')
mscVsrSvsFramerVfpDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerVfpDebugIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerVfpDebugRowStatusEntry.setStatus('mandatory')
mscVsrSvsFramerVfpDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerVfpDebugRowStatus.setStatus('mandatory')
mscVsrSvsFramerVfpDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerVfpDebugComponentName.setStatus('mandatory')
mscVsrSvsFramerVfpDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerVfpDebugStorageType.setStatus('mandatory')
mscVsrSvsFramerVfpDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsrSvsFramerVfpDebugIndex.setStatus('mandatory')
mscVsrSvsFramerMvpDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 6))
mscVsrSvsFramerMvpDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 6, 1), )
if mibBuilder.loadTexts: mscVsrSvsFramerMvpDebugRowStatusTable.setStatus('mandatory')
mscVsrSvsFramerMvpDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerMvpDebugIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerMvpDebugRowStatusEntry.setStatus('mandatory')
mscVsrSvsFramerMvpDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerMvpDebugRowStatus.setStatus('mandatory')
mscVsrSvsFramerMvpDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerMvpDebugComponentName.setStatus('mandatory')
mscVsrSvsFramerMvpDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerMvpDebugStorageType.setStatus('mandatory')
mscVsrSvsFramerMvpDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsrSvsFramerMvpDebugIndex.setStatus('mandatory')
mscVsrSvsFramerPcmCapture = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 7))
mscVsrSvsFramerPcmCaptureRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 7, 1), )
if mibBuilder.loadTexts: mscVsrSvsFramerPcmCaptureRowStatusTable.setStatus('mandatory')
mscVsrSvsFramerPcmCaptureRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsFramerPcmCaptureIndex"))
if mibBuilder.loadTexts: mscVsrSvsFramerPcmCaptureRowStatusEntry.setStatus('mandatory')
mscVsrSvsFramerPcmCaptureRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerPcmCaptureRowStatus.setStatus('mandatory')
mscVsrSvsFramerPcmCaptureComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerPcmCaptureComponentName.setStatus('mandatory')
mscVsrSvsFramerPcmCaptureStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsFramerPcmCaptureStorageType.setStatus('mandatory')
mscVsrSvsFramerPcmCaptureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 2, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsrSvsFramerPcmCaptureIndex.setStatus('mandatory')
mscVsrSvsLCo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3))
mscVsrSvsLCoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 1), )
if mibBuilder.loadTexts: mscVsrSvsLCoRowStatusTable.setStatus('mandatory')
mscVsrSvsLCoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsLCoIndex"))
if mibBuilder.loadTexts: mscVsrSvsLCoRowStatusEntry.setStatus('mandatory')
mscVsrSvsLCoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRowStatus.setStatus('mandatory')
mscVsrSvsLCoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoComponentName.setStatus('mandatory')
mscVsrSvsLCoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoStorageType.setStatus('mandatory')
mscVsrSvsLCoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsrSvsLCoIndex.setStatus('mandatory')
mscVsrSvsLCoPathDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10), )
if mibBuilder.loadTexts: mscVsrSvsLCoPathDataTable.setStatus('mandatory')
mscVsrSvsLCoPathDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsLCoIndex"))
if mibBuilder.loadTexts: mscVsrSvsLCoPathDataEntry.setStatus('mandatory')
mscVsrSvsLCoState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pathDown", 0), ("selectingRoute", 1), ("connecting", 2), ("pathUp", 3), ("pathDownRetrying", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoState.setStatus('mandatory')
mscVsrSvsLCoOverrideRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsrSvsLCoOverrideRemoteName.setStatus('mandatory')
mscVsrSvsLCoEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("calling", 0), ("called", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoEnd.setStatus('mandatory')
mscVsrSvsLCoCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoCostMetric.setStatus('mandatory')
mscVsrSvsLCoDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoDelayMetric.setStatus('mandatory')
mscVsrSvsLCoRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRoundTripDelay.setStatus('mandatory')
mscVsrSvsLCoSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoSetupPriority.setStatus('mandatory')
mscVsrSvsLCoHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoHoldingPriority.setStatus('mandatory')
mscVsrSvsLCoRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRequiredTxBandwidth.setStatus('mandatory')
mscVsrSvsLCoRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRequiredRxBandwidth.setStatus('mandatory')
mscVsrSvsLCoRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRequiredTrafficType.setStatus('mandatory')
mscVsrSvsLCoPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPermittedTrunkTypes.setStatus('mandatory')
mscVsrSvsLCoRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRequiredSecurity.setStatus('mandatory')
mscVsrSvsLCoRequiredCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRequiredCustomerParameter.setStatus('mandatory')
mscVsrSvsLCoEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoEmissionPriority.setStatus('mandatory')
mscVsrSvsLCoDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoDiscardPriority.setStatus('mandatory')
mscVsrSvsLCoPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPathType.setStatus('mandatory')
mscVsrSvsLCoRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoRetryCount.setStatus('mandatory')
mscVsrSvsLCoPathFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPathFailureCount.setStatus('mandatory')
mscVsrSvsLCoReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routesDelayTooLong", 10), ("attributesNotMet", 11), ("anError", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoReasonForNoRoute.setStatus('mandatory')
mscVsrSvsLCoLastTearDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("none", 0), ("normalShutDown", 1), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("wrongModuleReached", 11), ("farEndBusy", 12), ("callLoopedBack", 13), ("unknownReason", 14), ("farEndNotReady", 15), ("remoteNameMismatch", 16), ("serviceTypeMismatch", 17), ("reconnectFromFarEnd", 18), ("bumped", 19), ("accessCardFailure", 20), ("optimized", 21), ("overrideRemoteName", 22), ("trunkOrFarEndDidNotSupportMode", 23))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoLastTearDownReason.setStatus('mandatory')
mscVsrSvsLCoPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPathFailureAction.setStatus('mandatory')
mscVsrSvsLCoBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoBumpPreference.setStatus('mandatory')
mscVsrSvsLCoOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoOptimization.setStatus('mandatory')
mscVsrSvsLCoPathUpDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 10, 1, 25), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPathUpDateTime.setStatus('mandatory')
mscVsrSvsLCoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 11), )
if mibBuilder.loadTexts: mscVsrSvsLCoStatsTable.setStatus('mandatory')
mscVsrSvsLCoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsLCoIndex"))
if mibBuilder.loadTexts: mscVsrSvsLCoStatsEntry.setStatus('mandatory')
mscVsrSvsLCoPktsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 11, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPktsToNetwork.setStatus('mandatory')
mscVsrSvsLCoBytesToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 11, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoBytesToNetwork.setStatus('mandatory')
mscVsrSvsLCoPktsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 11, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPktsFromNetwork.setStatus('mandatory')
mscVsrSvsLCoBytesFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 11, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoBytesFromNetwork.setStatus('mandatory')
mscVsrSvsLCoPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 264), )
if mibBuilder.loadTexts: mscVsrSvsLCoPathTable.setStatus('mandatory')
mscVsrSvsLCoPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 264, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsLCoIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsLCoPathValue"))
if mibBuilder.loadTexts: mscVsrSvsLCoPathEntry.setStatus('mandatory')
mscVsrSvsLCoPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 3, 264, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsLCoPathValue.setStatus('mandatory')
mscVsrSvsDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 4))
mscVsrSvsDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 4, 1), )
if mibBuilder.loadTexts: mscVsrSvsDebugRowStatusTable.setStatus('mandatory')
mscVsrSvsDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrSvsDebugIndex"))
if mibBuilder.loadTexts: mscVsrSvsDebugRowStatusEntry.setStatus('mandatory')
mscVsrSvsDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsDebugRowStatus.setStatus('mandatory')
mscVsrSvsDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsDebugComponentName.setStatus('mandatory')
mscVsrSvsDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrSvsDebugStorageType.setStatus('mandatory')
mscVsrSvsDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsrSvsDebugIndex.setStatus('mandatory')
mscVsrDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 3))
mscVsrDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 3, 1), )
if mibBuilder.loadTexts: mscVsrDebugRowStatusTable.setStatus('mandatory')
mscVsrDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscVsrDebugIndex"))
if mibBuilder.loadTexts: mscVsrDebugRowStatusEntry.setStatus('mandatory')
mscVsrDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrDebugRowStatus.setStatus('mandatory')
mscVsrDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrDebugComponentName.setStatus('mandatory')
mscVsrDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsrDebugStorageType.setStatus('mandatory')
mscVsrDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 117, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsrDebugIndex.setStatus('mandatory')
voiceNetworkingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 1))
voiceNetworkingGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 1, 1))
voiceNetworkingGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 1, 1, 3))
voiceNetworkingGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 1, 1, 3, 2))
voiceNetworkingCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 3))
voiceNetworkingCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 3, 1))
voiceNetworkingCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 3, 1, 3))
voiceNetworkingCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 109, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", mscSigChanGwUnsupportedConversions=mscSigChanGwUnsupportedConversions, mscVRouteUsageState=mscVRouteUsageState, mscVsrSvsFramerMvpDebugStorageType=mscVsrSvsFramerMvpDebugStorageType, mscVsrUsageState=mscVsrUsageState, mscSigChanProvTable=mscSigChanProvTable, mscVRouteInterfaceStructuredEchoCancellationTable=mscVRouteInterfaceStructuredEchoCancellationTable, mscVsrPeakActiveVoiceChannels=mscVsrPeakActiveVoiceChannels, mscVRouteAcctRowStatusTable=mscVRouteAcctRowStatusTable, mscSigChanGwGatewayCapIndex=mscSigChanGwGatewayCapIndex, mscVsrDebug=mscVsrDebug, mscVsrSvsFramer=mscVsrSvsFramer, mscVsrSvsFramerStatsEntry=mscVsrSvsFramerStatsEntry, mscVsrInvalidNumberingPlanCalls=mscVsrInvalidNumberingPlanCalls, mscVsrSvsFramerPcmCapture=mscVsrSvsFramerPcmCapture, mscVsrSvsLCoDelayMetric=mscVsrSvsLCoDelayMetric, mscVsrSvsRowStatusTable=mscVsrSvsRowStatusTable, mscVsrIfAdminStatus=mscVsrIfAdminStatus, mscVsrSvsFramerNRatesTable=mscVsrSvsFramerNRatesTable, mscVRouteDebugStorageType=mscVRouteDebugStorageType, mscVRouteAcctServiceExchange=mscVRouteAcctServiceExchange, mscVsrSvsLCoRequiredCustomerParameter=mscVsrSvsLCoRequiredCustomerParameter, mscSigChanNcasStorageType=mscSigChanNcasStorageType, mscVsrAddressResolutionFailedCalls=mscVsrAddressResolutionFailedCalls, mscVsrSvsLCoState=mscVsrSvsLCoState, mscVsrSvsFramerMvpDebugRowStatusEntry=mscVsrSvsFramerMvpDebugRowStatusEntry, mscSigChanGwGatewayCapEntry=mscSigChanGwGatewayCapEntry, mscVRouteDegradedSubroutesTable=mscVRouteDegradedSubroutesTable, mscVsrSvsFramerMvpDebugRowStatusTable=mscVsrSvsFramerMvpDebugRowStatusTable, mscVsrPeakActiveFaxRelayChannels=mscVsrPeakActiveFaxRelayChannels, mscSigChanGwRowStatus=mscSigChanGwRowStatus, mscVsrSvsLCoPathDataEntry=mscVsrSvsLCoPathDataEntry, mscVsrSvsCalledNumber=mscVsrSvsCalledNumber, mscVsrSvsFramerMvpDebug=mscVsrSvsFramerMvpDebug, mscSigChanBchTimeSlot=mscSigChanBchTimeSlot, mscSigChanOperStatusEntry=mscSigChanOperStatusEntry, mscVsrSvsFramerFrmToNetworkTable=mscVsrSvsFramerFrmToNetworkTable, mscVsrSvsDebugComponentName=mscVsrSvsDebugComponentName, mscVsrSvsLCoPathEntry=mscVsrSvsLCoPathEntry, mscVsrStatsTable=mscVsrStatsTable, mscVsrSvsFramerFrmFromNetworkEntry=mscVsrSvsFramerFrmFromNetworkEntry, mscSigChanCidDataEntry=mscSigChanCidDataEntry, mscVsrOperStatusTable=mscVsrOperStatusTable, mscVsrOperStatusEntry=mscVsrOperStatusEntry, voiceNetworkingCapabilitiesCA=voiceNetworkingCapabilitiesCA, mscVsrSvsFramerFrmLostInNetwork=mscVsrSvsFramerFrmLostInNetwork, mscVsrPathSetupTimeOutCalls=mscVsrPathSetupTimeOutCalls, mscVsrSvsComponentName=mscVsrSvsComponentName, mscVsrRowStatusEntry=mscVsrRowStatusEntry, mscSigChanBchStatus=mscSigChanBchStatus, mscSigChanNcasRowStatus=mscSigChanNcasRowStatus, mscVsrSvsStatsEntry=mscVsrSvsStatsEntry, mscSigChanNcasComponentName=mscSigChanNcasComponentName, mscVsrSvsFramerFrmToNetworkEntry=mscVsrSvsFramerFrmToNetworkEntry, mscVsrOperationalState=mscVsrOperationalState, mscVsrSvsDebug=mscVsrSvsDebug, mscVRouteDebugRowStatus=mscVRouteDebugRowStatus, mscVsrDebugRowStatusTable=mscVsrDebugRowStatusTable, mscVsrSvsLCoRoundTripDelay=mscVsrSvsLCoRoundTripDelay, mscVRouteSubroutesRowStatus=mscVRouteSubroutesRowStatus, mscVsrDebugStorageType=mscVsrDebugStorageType, mscSigChanNcasOperTable=mscSigChanNcasOperTable, mscVsrDebugRowStatus=mscVsrDebugRowStatus, mscSigChanGwRowStatusTable=mscSigChanGwRowStatusTable, mscVRouteAcctComponentName=mscVRouteAcctComponentName, mscVsrSvsFramerVfpDebug=mscVsrSvsFramerVfpDebug, mscSigChanStateTable=mscSigChanStateTable, mscVsrSvsFramerOperEntry=mscVsrSvsFramerOperEntry, mscSigChanNcasRowStatusEntry=mscSigChanNcasRowStatusEntry, mscVsrSvsLCoStorageType=mscVsrSvsLCoStorageType, mscVRouteAcctDigitsSuppressed=mscVRouteAcctDigitsSuppressed, mscSigChanGwStatsTable=mscSigChanGwStatsTable, mscVRouteInterfaceComponentName=mscVRouteInterfaceComponentName, mscSigChanSnmpOperStatus=mscSigChanSnmpOperStatus, mscVsrSvsLCoIndex=mscVsrSvsLCoIndex, mscVRouteDebugRowStatusEntry=mscVRouteDebugRowStatusEntry, mscVRouteDnaRowStatusTable=mscVRouteDnaRowStatusTable, mscVRouteInterfaceProvTable=mscVRouteInterfaceProvTable, mscVsrSvsFramerNRatesRateIndex=mscVsrSvsFramerNRatesRateIndex, mscVsrSvsDebugStorageType=mscVsrSvsDebugStorageType, mscSigChanGwGwcValue=mscSigChanGwGwcValue, mscVRouteStateEntry=mscVRouteStateEntry, mscVsrSvsFramerOperTable=mscVsrSvsFramerOperTable, mscVsr=mscVsr, mscSigChanNcasDirection=mscSigChanNcasDirection, mscVsrSvsFramerFaxIdleCells=mscVsrSvsFramerFaxIdleCells, mscSigChanBchRowStatusTable=mscSigChanBchRowStatusTable, mscVsrSvsFramerVfpDebugComponentName=mscVsrSvsFramerVfpDebugComponentName, mscSigChanICmapTempFailureCause=mscSigChanICmapTempFailureCause, mscVRouteDebugComponentName=mscVRouteDebugComponentName, mscVRouteDebug=mscVRouteDebug, mscVsrSvsFramerPcmCaptureRowStatusTable=mscVsrSvsFramerPcmCaptureRowStatusTable, mscVRouteInterfaceFaxHangoverTimeG711G726=mscVRouteInterfaceFaxHangoverTimeG711G726, mscVRouteAcctAccountingOptions=mscVRouteAcctAccountingOptions, mscVsrSvsTotalCalls=mscVsrSvsTotalCalls, mscVsrAdminState=mscVsrAdminState, mscVsrSvsFramerNEncodingIndex=mscVsrSvsFramerNEncodingIndex, mscSigChanDegradedSubroutesValue=mscSigChanDegradedSubroutesValue, mscVsrSvsFramerFaxRelayCells=mscVsrSvsFramerFaxRelayCells, mscSigChanGwGwcEntry=mscSigChanGwGwcEntry, mscVsrSvsFramerNegTable=mscVsrSvsFramerNegTable, mscSigChanNcasCallReference=mscSigChanNcasCallReference, mscVsrSvsLCoStatsTable=mscVsrSvsLCoStatsTable, mscVsrActiveDataChannels=mscVsrActiveDataChannels, mscVRouteProvTable=mscVRouteProvTable, mscVsrSvsLCoPathValue=mscVsrSvsLCoPathValue, voiceNetworkingCapabilitiesCA02A=voiceNetworkingCapabilitiesCA02A, mscVsrSvsFramerOperationalState=mscVsrSvsFramerOperationalState, mscVRouteComponentName=mscVRouteComponentName, mscVsrCustomerIdentifier=mscVsrCustomerIdentifier, mscVsrSvsDebugRowStatus=mscVsrSvsDebugRowStatus, mscSigChanICmap=mscSigChanICmap, mscVsrStateTable=mscVsrStateTable, mscSigChanICmapIncompatDestCause=mscSigChanICmapIncompatDestCause, mscVsrSvsLCoRowStatus=mscVsrSvsLCoRowStatus, mscVsrSvsFramerNEncodingTable=mscVsrSvsFramerNEncodingTable, mscVsrSvsLCoPermittedTrunkTypes=mscVsrSvsLCoPermittedTrunkTypes, mscVsrOperEntry=mscVsrOperEntry, mscVRouteDnaAddressEntry=mscVRouteDnaAddressEntry, mscSigChanGwRequiredConversions=mscSigChanGwRequiredConversions, mscVsrSvsStateTable=mscVsrSvsStateTable, mscVsrSvsFramerModemSilenceCells=mscVsrSvsFramerModemSilenceCells, mscSigChanGwGatewayCapTable=mscSigChanGwGatewayCapTable, mscVRouteStatsTable=mscVRouteStatsTable, mscVsrSvsFramerRowStatusTable=mscVsrSvsFramerRowStatusTable, mscVRouteOperStatusEntry=mscVRouteOperStatusEntry, mscSigChanNcasIndex=mscSigChanNcasIndex, mscSigChanGwRowStatusEntry=mscSigChanGwRowStatusEntry, mscVsrSvsFramerFrmUnderRuns=mscVsrSvsFramerFrmUnderRuns, mscVsrSvsFramerNEncodingValue=mscVsrSvsFramerNEncodingValue, mscVsrTotalCallsFromIf=mscVsrTotalCallsFromIf, mscSigChanBchCalledDirectoryNumber=mscSigChanBchCalledDirectoryNumber, mscSigChanICmapChanOrCircNotAvailCause=mscSigChanICmapChanOrCircNotAvailCause, mscSigChanSubroutesRowStatus=mscSigChanSubroutesRowStatus, mscVRoutePrivateNetworkIdentifer=mscVRoutePrivateNetworkIdentifer, mscVRouteRowStatus=mscVRouteRowStatus, mscVRouteDebugIndex=mscVRouteDebugIndex, mscSigChanNcasCalledDirectoryNumber=mscSigChanNcasCalledDirectoryNumber, mscSigChanICmapEgressLinkOutOfServCause=mscSigChanICmapEgressLinkOutOfServCause, mscVRouteInterfaceIndex=mscVRouteInterfaceIndex, mscSigChanRowStatus=mscSigChanRowStatus, mscVsrProvEntry=mscVsrProvEntry, mscVsrSvsLCoReasonForNoRoute=mscVsrSvsLCoReasonForNoRoute, mscVsrSvsLCoEmissionPriority=mscVsrSvsLCoEmissionPriority, mscVsrComponentName=mscVsrComponentName, mscVsrSvsFramerNegotiatedTandemPassThrough=mscVsrSvsFramerNegotiatedTandemPassThrough, mscSigChanRowStatusTable=mscSigChanRowStatusTable, mscVRouteInterfaceEcanBypassMode=mscVRouteInterfaceEcanBypassMode, voiceNetworkingCapabilitiesCA02=voiceNetworkingCapabilitiesCA02, mscVsrSvsDebugRowStatusTable=mscVsrSvsDebugRowStatusTable, mscVsrSvsFramerFrmToNetworkValue=mscVsrSvsFramerFrmToNetworkValue, mscVRouteAcct=mscVRouteAcct, mscVsrSvsLCoPathFailureCount=mscVsrSvsLCoPathFailureCount, mscVsrSvsFramerPcmCaptureStorageType=mscVsrSvsFramerPcmCaptureStorageType, mscSigChanICmapRowStatus=mscSigChanICmapRowStatus, mscSigChanGwComponentName=mscSigChanGwComponentName, mscVRoute=mscVRoute, mscVsrSvsIfIndex=mscVsrSvsIfIndex, mscSigChanRowStatusEntry=mscSigChanRowStatusEntry, mscVRouteDnaStorageType=mscVRouteDnaStorageType, mscVRouteInterfaceRowStatusTable=mscVRouteInterfaceRowStatusTable, mscSigChanOperStatusTable=mscSigChanOperStatusTable, mscVsrSvsFramerIndex=mscVsrSvsFramerIndex, mscVsrSvsCallType=mscVsrSvsCallType, mscVsrSvsFramerSilenceCells=mscVsrSvsFramerSilenceCells, mscVsrSvsLCoPathType=mscVsrSvsLCoPathType, mscVRouteSnmpOperStatus=mscVRouteSnmpOperStatus, mscVsrSvsIfEntryTable=mscVsrSvsIfEntryTable, mscSigChanICmapIndex=mscSigChanICmapIndex, mscVsrSvsFramerStateEntry=mscVsrSvsFramerStateEntry, mscVsrSvsUsageState=mscVsrSvsUsageState, mscVRouteCidDataEntry=mscVRouteCidDataEntry, mscSigChanBchRowStatus=mscSigChanBchRowStatus, mscVRouteCidDataTable=mscVRouteCidDataTable, mscVsrActiveFaxRelayChannels=mscVsrActiveFaxRelayChannels, mscVRouteIfAdminStatus=mscVRouteIfAdminStatus, mscVsrSvsCallingNumber=mscVsrSvsCallingNumber, mscVsrSvsFramerProvEntry=mscVsrSvsFramerProvEntry, mscVsrSvsFramerTotalCells=mscVsrSvsFramerTotalCells, mscVsrPathAttributesNotMetCalls=mscVsrPathAttributesNotMetCalls, mscSigChanBchComponentName=mscSigChanBchComponentName, mscVRouteDegradedSubroutesEntry=mscVRouteDegradedSubroutesEntry, mscVsrSvsLCoPathTable=mscVsrSvsLCoPathTable, voiceNetworkingCapabilities=voiceNetworkingCapabilities, mscVsrSvsFramerOpCurrentEncoding=mscVsrSvsFramerOpCurrentEncoding, mscVsrSvsProfileNumber=mscVsrSvsProfileNumber, mscVsrCommentText=mscVsrCommentText, mscVRouteStateTable=mscVRouteStateTable, mscSigChanComponentName=mscSigChanComponentName, mscVsrCidDataEntry=mscVsrCidDataEntry, voiceNetworkingGroupCA02A=voiceNetworkingGroupCA02A, mscVsrActiveVoiceChannels=mscVsrActiveVoiceChannels, mscSigChanDefaultNpiTon=mscSigChanDefaultNpiTon, mscVRouteHuntingAlgorithm=mscVRouteHuntingAlgorithm, mscVsrSvsLCoPktsFromNetwork=mscVsrSvsLCoPktsFromNetwork, mscVsrSvsFramerPcmCaptureRowStatusEntry=mscVsrSvsFramerPcmCaptureRowStatusEntry, mscVRouteInterfaceSpeechHangoverTime=mscVRouteInterfaceSpeechHangoverTime, mscVRouteCustomerIdentifier=mscVRouteCustomerIdentifier, mscVsrSvsOperationalState=mscVsrSvsOperationalState, mscSigChanICmapResourceUnavailCause=mscSigChanICmapResourceUnavailCause, mscVsrSvsOperStatusTable=mscVsrSvsOperStatusTable, mscSigChanBchOperEntry=mscSigChanBchOperEntry, mscVRouteVoiceNetworkingCallServer=mscVRouteVoiceNetworkingCallServer, mscVsrSvsRowStatusEntry=mscVsrSvsRowStatusEntry, mscVRouteInterfaceEgressAudioGain=mscVRouteInterfaceEgressAudioGain, mscSigChanOctothorpeEod=mscSigChanOctothorpeEod, mscSigChanIfAdminStatus=mscSigChanIfAdminStatus, mscVsrSvsClearCauseCode=mscVsrSvsClearCauseCode, mscVRouteDnaComponentName=mscVRouteDnaComponentName, mscVsrSvsLCoRequiredTrafficType=mscVsrSvsLCoRequiredTrafficType, mscSigChanSubroutesTable=mscSigChanSubroutesTable, mscVsrSvsLCoPathUpDateTime=mscVsrSvsLCoPathUpDateTime, mscVsrActiveModemChannels=mscVsrActiveModemChannels, mscVRouteInterface=mscVRouteInterface, mscVsrPeakActiveDataChannels=mscVsrPeakActiveDataChannels, mscVRouteInterfaceEchoTailDelay=mscVRouteInterfaceEchoTailDelay, mscSigChanIfEntryTable=mscSigChanIfEntryTable, mscSigChanProvEntry=mscSigChanProvEntry, mscVsrSvsLCoComponentName=mscVsrSvsLCoComponentName, mscVsrSvsStateEntry=mscVsrSvsStateEntry, mscVRouteDnaAddressTable=mscVRouteDnaAddressTable, mscVRouteInterfaceStructuredEchoCancellationEntry=mscVRouteInterfaceStructuredEchoCancellationEntry, mscVRouteDnaIndex=mscVRouteDnaIndex, mscVRouteInterfaceRowStatus=mscVRouteInterfaceRowStatus, mscVRouteAdminState=mscVRouteAdminState, mscVsrSignallingChannel=mscVsrSignallingChannel, mscVsrSvsLCoEnd=mscVsrSvsLCoEnd, mscVsrSvsFramerProvTable=mscVsrSvsFramerProvTable, mscVRouteDiallingPlan1=mscVRouteDiallingPlan1, mscVsrDebugIndex=mscVsrDebugIndex, mscVsrSvsFramerStatsTable=mscVsrSvsFramerStatsTable, mscVsrSvsLCoStatsEntry=mscVsrSvsLCoStatsEntry, mscSigChanGwStatsEntry=mscSigChanGwStatsEntry, mscVRouteSubroutesEntry=mscVRouteSubroutesEntry, mscVsrSvsLCoLastTearDownReason=mscVsrSvsLCoLastTearDownReason, mscSigChanUsageState=mscSigChanUsageState, mscVsrSvsTotalCallSeconds=mscVsrSvsTotalCallSeconds, mscVRouteCallsClearedOutOfService=mscVRouteCallsClearedOutOfService, mscVRouteIfEntryTable=mscVRouteIfEntryTable, mscSigChanNcas=mscSigChanNcas, mscVsrSvsLCoBytesFromNetwork=mscVsrSvsLCoBytesFromNetwork, mscVsrCidDataTable=mscVsrCidDataTable, mscVsrSvsFramerPcmCaptureRowStatus=mscVsrSvsFramerPcmCaptureRowStatus, mscVsrSvsLCoRequiredSecurity=mscVsrSvsLCoRequiredSecurity, mscVRouteDnaNumberingPlanIndicator=mscVRouteDnaNumberingPlanIndicator, mscVsrSvsLCoOverrideRemoteName=mscVsrSvsLCoOverrideRemoteName, mscVsrSvsFramerOpTptStatus=mscVsrSvsFramerOpTptStatus, mscSigChanIfEntryEntry=mscSigChanIfEntryEntry, mscVRouteAcctAccountCollection=mscVRouteAcctAccountCollection, mscVRouteAcctRowStatusEntry=mscVRouteAcctRowStatusEntry, mscVsrSvsIfEntryEntry=mscVsrSvsIfEntryEntry, mscVsrSvsFramerNegEntry=mscVsrSvsFramerNegEntry, mscVsrVoiceRoute=mscVsrVoiceRoute, mscVRouteStatsEntry=mscVRouteStatsEntry, mscVsrSvsFramerModemCells=mscVsrSvsFramerModemCells)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", mscVsrSvsFramerFrmDumped=mscVsrSvsFramerFrmDumped, mscVsrSvsFramerUsageState=mscVsrSvsFramerUsageState, mscSigChanBchVsrInstance=mscSigChanBchVsrInstance, mscSigChanIfIndex=mscSigChanIfIndex, mscVsrStatsEntry=mscVsrStatsEntry, mscVsrSvsFramerNegotiatedDtmfRegeneration=mscVsrSvsFramerNegotiatedDtmfRegeneration, mscVRouteCallsClearedNoChannel=mscVRouteCallsClearedNoChannel, mscVsrSvsFramerPcmCaptureComponentName=mscVsrSvsFramerPcmCaptureComponentName, mscVsrRowStatus=mscVsrRowStatus, mscVsrSvsFramerNEncodingEntry=mscVsrSvsFramerNEncodingEntry, mscVRouteInterfaceModemFaxSpeechDiscrim=mscVRouteInterfaceModemFaxSpeechDiscrim, mscVsrSvsFramerLrcErrors=mscVsrSvsFramerLrcErrors, mscVRouteDiallingPlan2=mscVRouteDiallingPlan2, mscVsrRowStatusTable=mscVsrRowStatusTable, mscVsrSvsFramerStateTable=mscVsrSvsFramerStateTable, mscVsrSvsOperTable=mscVsrSvsOperTable, mscVRouteInterfaceIngressAudioGain=mscVRouteInterfaceIngressAudioGain, mscVsrSvsFramerTptStatus=mscVsrSvsFramerTptStatus, mscVsrSvsFramerNegotiatedV17AsG711G726=mscVsrSvsFramerNegotiatedV17AsG711G726, mscVsrSnmpOperStatus=mscVsrSnmpOperStatus, mscVsrSvsLCoSetupPriority=mscVsrSvsLCoSetupPriority, mscVsrPeakActiveTptChannels=mscVsrPeakActiveTptChannels, mscVsrSvsFramerModemFaxCells=mscVsrSvsFramerModemFaxCells, mscVRouteAcctRowStatus=mscVRouteAcctRowStatus, mscSigChanCommentText=mscSigChanCommentText, mscVRouteSubroutesValue=mscVRouteSubroutesValue, mscVRouteDnaRowStatusEntry=mscVRouteDnaRowStatusEntry, mscVsrSvsOperEntry=mscVsrSvsOperEntry, mscVsrSvsFramerNegotiatedFisG711G726=mscVsrSvsFramerNegotiatedFisG711G726, mscVsrSvsLCoCostMetric=mscVsrSvsLCoCostMetric, mscSigChanNcasOperEntry=mscSigChanNcasOperEntry, mscVsrSvsFramerNegotiatedSilenceSuppression=mscVsrSvsFramerNegotiatedSilenceSuppression, mscVsrPeakActiveModemChannels=mscVsrPeakActiveModemChannels, mscVRouteDnaDataNetworkAddress=mscVRouteDnaDataNetworkAddress, mscVsrSvsFramerVfpDebugRowStatus=mscVsrSvsFramerVfpDebugRowStatus, mscSigChanICmapStorageType=mscSigChanICmapStorageType, mscVsrSvsOperStatusEntry=mscVsrSvsOperStatusEntry, mscSigChan=mscSigChan, mscVRouteInterfaceComfortNoiseCap=mscVRouteInterfaceComfortNoiseCap, mscSigChanSubroutesEntry=mscSigChanSubroutesEntry, mscVsrSvsFramerInterfaceName=mscVsrSvsFramerInterfaceName, mscVRouteDiallingPlan0=mscVRouteDiallingPlan0, mscVsrDebugComponentName=mscVsrDebugComponentName, mscVsrSvsStatus=mscVsrSvsStatus, mscVsrSvsIfAdminStatus=mscVsrSvsIfAdminStatus, mscVsrActiveChannels=mscVsrActiveChannels, mscSigChanCidDataTable=mscSigChanCidDataTable, mscVsrSvs=mscVsrSvs, mscVsrSvsLCoDiscardPriority=mscVsrSvsLCoDiscardPriority, mscVRouteAcctAccountClass=mscVRouteAcctAccountClass, mscVRouteSubroutesTable=mscVRouteSubroutesTable, mscVsrIfIndex=mscVsrIfIndex, voiceNetworkingGroupCA02=voiceNetworkingGroupCA02, mscSigChanForceNpiTon=mscSigChanForceNpiTon, mscVsrIfEntryEntry=mscVsrIfEntryEntry, mscVsrSvsLCoRequiredTxBandwidth=mscVsrSvsLCoRequiredTxBandwidth, mscVsrSvsLCoOptimization=mscVsrSvsLCoOptimization, mscVsrActiveTptChannels=mscVsrActiveTptChannels, mscVsrSvsFramerCurrentEncoding=mscVsrSvsFramerCurrentEncoding, mscVsrSvsFramerNRatesValue=mscVsrSvsFramerNRatesValue, mscSigChanICmapRowStatusTable=mscSigChanICmapRowStatusTable, mscSigChanStateEntry=mscSigChanStateEntry, mscSigChanGw=mscSigChanGw, mscSigChanICmapServNotAllowedCause=mscSigChanICmapServNotAllowedCause, mscVsrSvsFramerRowStatusEntry=mscVsrSvsFramerRowStatusEntry, mscVsrSvsFramerNRatesTrafficIndex=mscVsrSvsFramerNRatesTrafficIndex, mscVsrSvsLCoRowStatusTable=mscVsrSvsLCoRowStatusTable, mscSigChanDegradedSubroutesEntry=mscSigChanDegradedSubroutesEntry, mscVsrSvsFramerPcmCaptureIndex=mscVsrSvsFramerPcmCaptureIndex, mscVsrSvsFramerMvpDebugComponentName=mscVsrSvsFramerMvpDebugComponentName, mscVRouteAcctIndex=mscVRouteAcctIndex, mscSigChanNcasDuration=mscSigChanNcasDuration, mscSigChanGwGatewayCapValue=mscSigChanGwGatewayCapValue, mscVRouteInterfaceTandemPassThrough=mscVRouteInterfaceTandemPassThrough, mscSigChanICmapNoSuchChannelCause=mscSigChanICmapNoSuchChannelCause, mscVRouteIfIndex=mscVRouteIfIndex, mscSigChanBchStorageType=mscSigChanBchStorageType, mscVsrSvsFramerVfpDebugRowStatusEntry=mscVsrSvsFramerVfpDebugRowStatusEntry, mscVsrSvsLCo=mscVsrSvsLCo, mscVRouteOperStatusTable=mscVRouteOperStatusTable, mscVsrSvsFramerVfpDebugStorageType=mscVsrSvsFramerVfpDebugStorageType, mscVRouteInterfaceEchoCancellation=mscVRouteInterfaceEchoCancellation, mscSigChanBchRowStatusEntry=mscSigChanBchRowStatusEntry, mscVRouteOperationalState=mscVRouteOperationalState, mscVsrSvsFramerFrmFromNetworkValue=mscVsrSvsFramerFrmFromNetworkValue, mscVsrSvsFramerVfpDebugIndex=mscVsrSvsFramerVfpDebugIndex, mscVRouteTotalCallsFromSubnet=mscVRouteTotalCallsFromSubnet, mscVRouteInterfaceStorageType=mscVRouteInterfaceStorageType, mscVsrSvsFramerFrmToNetworkIndex=mscVsrSvsFramerFrmToNetworkIndex, mscVsrSvsFramerComponentName=mscVsrSvsFramerComponentName, mscSigChanSubroutesValue=mscSigChanSubroutesValue, mscSigChanICmapRowStatusEntry=mscSigChanICmapRowStatusEntry, mscVRouteCommentText=mscVRouteCommentText, mscSigChanGwGwcIndex=mscSigChanGwGwcIndex, mscVsrSvsFramerFrmFromNetworkTable=mscVsrSvsFramerFrmFromNetworkTable, mscVsrSvsDebugIndex=mscVsrSvsDebugIndex, mscVsrSvsLCoPathDataTable=mscVsrSvsLCoPathDataTable, mscVsrSvsFramerMvpDebugRowStatus=mscVsrSvsFramerMvpDebugRowStatus, mscVRouteIndex=mscVRouteIndex, mscSigChanICmapComponentName=mscSigChanICmapComponentName, mscSigChanBchIndex=mscSigChanBchIndex, mscVsrSvsLCoPathFailureAction=mscVsrSvsLCoPathFailureAction, mscVRouteMinimumDigitsToRoute=mscVRouteMinimumDigitsToRoute, mscVsrAddressIncompleteCalls=mscVsrAddressIncompleteCalls, mscVsrPeakActiveChannels=mscVsrPeakActiveChannels, mscVRouteInterfaceRowStatusEntry=mscVRouteInterfaceRowStatusEntry, mscSigChanCustomerIdentifier=mscSigChanCustomerIdentifier, mscVRouteAcctProvTable=mscVRouteAcctProvTable, mscVRouteInterfaceProvEntry=mscVRouteInterfaceProvEntry, mscVsrIfEntryTable=mscVsrIfEntryTable, mscVsrSvsFramerAdminState=mscVsrSvsFramerAdminState, mscSigChanDegradedSubroutesTable=mscSigChanDegradedSubroutesTable, mscSigChanICmapSwitchCongestCause=mscSigChanICmapSwitchCongestCause, mscVRouteRowStatusTable=mscVRouteRowStatusTable, mscSigChanGwStorageType=mscSigChanGwStorageType, mscVsrOperTable=mscVsrOperTable, mscVsrSvsFramerCurrentRate=mscVsrSvsFramerCurrentRate, mscVsrSvsStorageType=mscVsrSvsStorageType, mscVsrSvsFramerNRatesEntry=mscVsrSvsFramerNRatesEntry, mscVsrSvsFramerVfpDebugRowStatusTable=mscVsrSvsFramerVfpDebugRowStatusTable, mscVsrSvsLCoRetryCount=mscVsrSvsLCoRetryCount, mscVsrSvsSnmpOperStatus=mscVsrSvsSnmpOperStatus, mscVsrSvsFramerAudioCells=mscVsrSvsFramerAudioCells, mscVRouteDebugRowStatusTable=mscVRouteDebugRowStatusTable, mscSigChanOperationalState=mscSigChanOperationalState, mscVRouteProvEntry=mscVRouteProvEntry, mscVsrSvsFramerFrmFromNetworkIndex=mscVsrSvsFramerFrmFromNetworkIndex, mscSigChanGwGwcTable=mscSigChanGwGwcTable, mscVRouteIfEntryEntry=mscVRouteIfEntryEntry, mscSigChanGwIndex=mscSigChanGwIndex, mscVsrCallsRejectedByFarEnd=mscVsrCallsRejectedByFarEnd, mscVRouteDnaRowStatus=mscVRouteDnaRowStatus, mscVsrTotalFailedCallsFromIf=mscVsrTotalFailedCallsFromIf, mscSigChanIndex=mscSigChanIndex, mscSigChanNcasRowStatusTable=mscSigChanNcasRowStatusTable, mscVsrSvsStatsTable=mscVsrSvsStatsTable, mscVRouteAcctProvEntry=mscVRouteAcctProvEntry, voiceNetworkingMIB=voiceNetworkingMIB, mscSigChanBch=mscSigChanBch, mscSigChanICmapIntCauseTable=mscSigChanICmapIntCauseTable, mscVsrIndex=mscVsrIndex, mscVsrSvsFramerRowStatus=mscVsrSvsFramerRowStatus, mscSigChanBchOperTable=mscSigChanBchOperTable, mscVRouteInterfaceStructuredEchoCancellationValue=mscVRouteInterfaceStructuredEchoCancellationValue, mscVRouteTypeOfRoute=mscVRouteTypeOfRoute, voiceNetworkingGroup=voiceNetworkingGroup, mscSigChanStorageType=mscSigChanStorageType, mscSigChanAdminState=mscSigChanAdminState, mscVRouteDna=mscVRouteDna, mscSigChanICmapIntCauseEntry=mscSigChanICmapIntCauseEntry, mscVsrSvsFramerMvpDebugIndex=mscVsrSvsFramerMvpDebugIndex, mscVsrSvsLCoRowStatusEntry=mscVsrSvsLCoRowStatusEntry, mscVRouteAcctStorageType=mscVRouteAcctStorageType, mscVsrSvsLCoBytesToNetwork=mscVsrSvsLCoBytesToNetwork, mscVsrSvsFramerCurrentEncodingRate=mscVsrSvsFramerCurrentEncodingRate, mscVsrDebugRowStatusEntry=mscVsrDebugRowStatusEntry, mscVsrSvsLCoRequiredRxBandwidth=mscVsrSvsLCoRequiredRxBandwidth, mscVRouteInterfaceStructuredEchoCancellationIndex=mscVRouteInterfaceStructuredEchoCancellationIndex, mscVsrSvsDebugRowStatusEntry=mscVsrSvsDebugRowStatusEntry, mscVsrProvTable=mscVsrProvTable, mscVRouteRowStatusEntry=mscVRouteRowStatusEntry, mscVsrStateEntry=mscVsrStateEntry, mscVRouteStorageType=mscVRouteStorageType, mscVsrSvsIndex=mscVsrSvsIndex, mscVRouteInterfaceEchoReturnLoss=mscVRouteInterfaceEchoReturnLoss, mscVsrSvsRowStatus=mscVsrSvsRowStatus, mscVsrSvsAdminState=mscVsrSvsAdminState, mscVsrSvsLCoHoldingPriority=mscVsrSvsLCoHoldingPriority, mscVsrSvsFramerStorageType=mscVsrSvsFramerStorageType, mscVsrCallsRejectedLocally=mscVsrCallsRejectedLocally, mscSigChanICmapReqChanOrCircNotAvailCause=mscSigChanICmapReqChanOrCircNotAvailCause, mscVsrStorageType=mscVsrStorageType, mscVsrSvsLCoPktsToNetwork=mscVsrSvsLCoPktsToNetwork, mscVRouteOverrideDirectoryNumber=mscVRouteOverrideDirectoryNumber, voiceNetworkingGroupCA=voiceNetworkingGroupCA, mscVsrSvsLCoBumpPreference=mscVsrSvsLCoBumpPreference, mscVRouteDegradedSubroutesValue=mscVRouteDegradedSubroutesValue, mscVRouteCallsRejected=mscVRouteCallsRejected)
