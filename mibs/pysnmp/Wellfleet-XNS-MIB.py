#
# PySNMP MIB module Wellfleet-XNS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-XNS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Gauge32, TimeTicks, MibIdentifier, Integer32, Opaque, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, NotificationType, ObjectIdentity, Counter32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Gauge32", "TimeTicks", "MibIdentifier", "Integer32", "Opaque", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Counter32", "iso", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfXnsGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfXnsGroup")
wfXnsBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1))
wfXnsBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseDelete.setStatus('mandatory')
wfXnsBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseDisable.setStatus('mandatory')
wfXnsBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseState.setStatus('mandatory')
wfXnsBaseCfgHostNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseCfgHostNumber.setStatus('mandatory')
wfXnsBaseActiveHostNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseActiveHostNumber.setStatus('mandatory')
wfXnsBaseImplement = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("xerox", 1), ("ungb", 2))).clone('xerox')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseImplement.setStatus('mandatory')
wfXnsBaseNetCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseNetCount.setStatus('mandatory')
wfXnsBaseHostCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseHostCount.setStatus('mandatory')
wfXnsBaseLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 16, 3, 17, 18, 19))).clone(namedValues=NamedValues(("debug", 1), ("info", 2), ("trace", 16), ("debuginfo", 3), ("debugtrace", 17), ("infotrace", 18), ("debuginfotrace", 19))).clone('trace')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseLogFilter.setStatus('mandatory')
wfXnsBaseAdjEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8), )
if mibBuilder.loadTexts: wfXnsBaseAdjEntryTable.setStatus('mandatory')
wfXnsBaseAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8, 1), ).setIndexNames((0, "Wellfleet-XNS-MIB", "wfXnsBaseAdjacencyNetwork"), (0, "Wellfleet-XNS-MIB", "wfXnsBaseAdjacencyHostid"))
if mibBuilder.loadTexts: wfXnsBaseAdjEntry.setStatus('mandatory')
wfXnsBaseAdjacencyNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseAdjacencyNetwork.setStatus('mandatory')
wfXnsBaseAdjacencyHostid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseAdjacencyHostid.setStatus('mandatory')
wfXnsBaseAdjacencyCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseAdjacencyCost.setStatus('mandatory')
wfXnsBaseAdjacencyAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseAdjacencyAge.setStatus('mandatory')
wfXnsBaseAdjacencyIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseAdjacencyIntf.setStatus('mandatory')
wfXnsBaseAdjacencyCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseAdjacencyCct.setStatus('mandatory')
wfXnsBaseRtEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2), )
if mibBuilder.loadTexts: wfXnsBaseRtEntryTable.setStatus('mandatory')
wfXnsBaseRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1), ).setIndexNames((0, "Wellfleet-XNS-MIB", "wfXnsBaseRouteDest"))
if mibBuilder.loadTexts: wfXnsBaseRtEntry.setStatus('mandatory')
wfXnsBaseRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteDest.setStatus('mandatory')
wfXnsBaseRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteIfIndex.setStatus('mandatory')
wfXnsBaseRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteMetric.setStatus('mandatory')
wfXnsBaseRouteNextHopNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteNextHopNetwork.setStatus('mandatory')
wfXnsBaseRouteNextHopHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteNextHopHost.setStatus('mandatory')
wfXnsBaseRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("indirect", 4), ("static", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteType.setStatus('mandatory')
wfXnsBaseRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("rip", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteProto.setStatus('mandatory')
wfXnsBaseRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteAge.setStatus('mandatory')
wfXnsBaseRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteInfo.setStatus('mandatory')
wfXnsInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3), )
if mibBuilder.loadTexts: wfXnsInterfaceTable.setStatus('mandatory')
wfXnsInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1), ).setIndexNames((0, "Wellfleet-XNS-MIB", "wfXnsInterfaceNetworkNumber"), (0, "Wellfleet-XNS-MIB", "wfXnsInterfaceCircuit"))
if mibBuilder.loadTexts: wfXnsInterfaceEntry.setStatus('mandatory')
wfXnsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceIndex.setStatus('mandatory')
wfXnsInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceDelete.setStatus('mandatory')
wfXnsInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceDisable.setStatus('mandatory')
wfXnsInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceState.setStatus('mandatory')
wfXnsInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceCircuit.setStatus('mandatory')
wfXnsInterfaceNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceNetworkNumber.setStatus('mandatory')
wfXnsInterfaceCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceCost.setStatus('mandatory')
wfXnsInterfaceXsumOn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceXsumOn.setStatus('mandatory')
wfXnsInterfaceEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("snap", 2))).clone('ethernet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceEncaps.setStatus('mandatory')
wfXnsInterfaceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceMacAddress.setStatus('mandatory')
wfXnsInterfaceSMDSGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceSMDSGroupAddress.setStatus('mandatory')
wfXnsInterfaceMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceMaxInfo.setStatus('mandatory')
wfXnsInterfaceExtServer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExtServer.setStatus('mandatory')
wfXnsInterfaceExServNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 14), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServNetwork.setStatus('mandatory')
wfXnsInterfaceExServHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServHostId.setStatus('mandatory')
wfXnsInterfaceExServPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServPktType.setStatus('mandatory')
wfXnsInterfaceExServSockNm = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServSockNm.setStatus('mandatory')
wfXnsInterfaceInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInReceives.setStatus('mandatory')
wfXnsInterfaceInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInHdrErrors.setStatus('mandatory')
wfXnsInterfaceInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInAddrErrors.setStatus('mandatory')
wfXnsInterfaceForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceForwDatagrams.setStatus('mandatory')
wfXnsInterfaceInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInUnknownProtos.setStatus('mandatory')
wfXnsInterfaceInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInDiscards.setStatus('mandatory')
wfXnsInterfaceInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInDelivers.setStatus('mandatory')
wfXnsInterfaceOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceOutRequests.setStatus('mandatory')
wfXnsInterfaceOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceOutDiscards.setStatus('mandatory')
wfXnsInterfaceOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceOutNoRoutes.setStatus('mandatory')
wfXnsInterfaceFRBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 28), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceFRBcast.setStatus('mandatory')
wfXnsInterfaceFRMcast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 29), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceFRMcast.setStatus('mandatory')
wfXnsInterfaceSplit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceSplit.setStatus('mandatory')
wfXnsRipIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4), )
if mibBuilder.loadTexts: wfXnsRipIntfTable.setStatus('mandatory')
wfXnsRipIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1), ).setIndexNames((0, "Wellfleet-XNS-MIB", "wfXnsRipInterfaceIndex"))
if mibBuilder.loadTexts: wfXnsRipIntfEntry.setStatus('mandatory')
wfXnsRipInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceDelete.setStatus('mandatory')
wfXnsRipInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceDisable.setStatus('mandatory')
wfXnsRipInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsRipInterfaceState.setStatus('mandatory')
wfXnsRipInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsRipInterfaceIndex.setStatus('mandatory')
wfXnsRipInterfaceSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceSupply.setStatus('mandatory')
wfXnsRipInterfaceListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceListen.setStatus('mandatory')
wfXnsAdjacentHostTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5), )
if mibBuilder.loadTexts: wfXnsAdjacentHostTable.setStatus('mandatory')
wfXnsAdjacentHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1), ).setIndexNames((0, "Wellfleet-XNS-MIB", "wfXnsAhTargHostNetwork"), (0, "Wellfleet-XNS-MIB", "wfXnsAhTargHostId"))
if mibBuilder.loadTexts: wfXnsAdjacentHostEntry.setStatus('mandatory')
wfXnsAhDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhDelete.setStatus('mandatory')
wfXnsAhDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhDisable.setStatus('mandatory')
wfXnsAhTargHostNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAhTargHostNetwork.setStatus('mandatory')
wfXnsAhTargHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAhTargHostId.setStatus('mandatory')
wfXnsAhNextHopIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhNextHopIntf.setStatus('mandatory')
wfXnsAhDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhDlci.setStatus('mandatory')
wfXnsStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6), )
if mibBuilder.loadTexts: wfXnsStaticRouteTable.setStatus('mandatory')
wfXnsStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1), ).setIndexNames((0, "Wellfleet-XNS-MIB", "wfXnsSrTargNetwork"), (0, "Wellfleet-XNS-MIB", "wfXnsSrNextHopNetwork"))
if mibBuilder.loadTexts: wfXnsStaticRouteEntry.setStatus('mandatory')
wfXnsSrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrDelete.setStatus('mandatory')
wfXnsSrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrDisable.setStatus('mandatory')
wfXnsSrTargNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsSrTargNetwork.setStatus('mandatory')
wfXnsSrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrCost.setStatus('mandatory')
wfXnsSrNextHopNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsSrNextHopNetwork.setStatus('mandatory')
wfXnsSrNextHopHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrNextHopHost.setStatus('mandatory')
wfXnsSrTargNetworkRt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsSrTargNetworkRt.setStatus('mandatory')
wfXnsTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7), )
if mibBuilder.loadTexts: wfXnsTrafficFilterTable.setStatus('mandatory')
wfXnsTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1), ).setIndexNames((0, "Wellfleet-XNS-MIB", "wfXnsTrafficFilterInterface"), (0, "Wellfleet-XNS-MIB", "wfXnsTrafficFilterCircuit"), (0, "Wellfleet-XNS-MIB", "wfXnsTrafficFilterRuleNumber"), (0, "Wellfleet-XNS-MIB", "wfXnsTrafficFilterFragment"))
if mibBuilder.loadTexts: wfXnsTrafficFilterEntry.setStatus('mandatory')
wfXnsTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsTrafficFilterCreate.setStatus('mandatory')
wfXnsTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsTrafficFilterEnable.setStatus('mandatory')
wfXnsTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterStatus.setStatus('mandatory')
wfXnsTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterCounter.setStatus('mandatory')
wfXnsTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsTrafficFilterDefinition.setStatus('mandatory')
wfXnsTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterReserved.setStatus('mandatory')
wfXnsTrafficFilterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterInterface.setStatus('mandatory')
wfXnsTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterCircuit.setStatus('mandatory')
wfXnsTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterRuleNumber.setStatus('mandatory')
wfXnsTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterFragment.setStatus('mandatory')
wfXnsTrafficFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsTrafficFilterName.setStatus('mandatory')
wfXnsAggrStats = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9))
wfXnsAggrInDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrInDatagrams.setStatus('mandatory')
wfXnsAggrOutDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrOutDatagrams.setStatus('mandatory')
wfXnsAggrFwdDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrFwdDatagrams.setStatus('mandatory')
wfXnsAggrInDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrInDiscards.setStatus('mandatory')
wfXnsAggrInHdrErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrInHdrErrs.setStatus('mandatory')
wfXnsAggrInAddrErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrInAddrErrs.setStatus('mandatory')
wfXnsAggrInUnknownProtos = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrInUnknownProtos.setStatus('mandatory')
wfXnsAggrOutDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrOutDiscards.setStatus('mandatory')
wfXnsAggrOutNoRoutes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 9, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAggrOutNoRoutes.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-XNS-MIB", wfXnsInterfaceInHdrErrors=wfXnsInterfaceInHdrErrors, wfXnsInterfaceIndex=wfXnsInterfaceIndex, wfXnsAggrOutDiscards=wfXnsAggrOutDiscards, wfXnsBaseDisable=wfXnsBaseDisable, wfXnsBaseState=wfXnsBaseState, wfXnsStaticRouteEntry=wfXnsStaticRouteEntry, wfXnsBaseAdjacencyAge=wfXnsBaseAdjacencyAge, wfXnsSrDisable=wfXnsSrDisable, wfXnsAhDelete=wfXnsAhDelete, wfXnsBaseRouteNextHopHost=wfXnsBaseRouteNextHopHost, wfXnsInterfaceInAddrErrors=wfXnsInterfaceInAddrErrors, wfXnsTrafficFilterRuleNumber=wfXnsTrafficFilterRuleNumber, wfXnsAggrFwdDatagrams=wfXnsAggrFwdDatagrams, wfXnsBaseNetCount=wfXnsBaseNetCount, wfXnsTrafficFilterCreate=wfXnsTrafficFilterCreate, wfXnsBaseCfgHostNumber=wfXnsBaseCfgHostNumber, wfXnsStaticRouteTable=wfXnsStaticRouteTable, wfXnsAhTargHostNetwork=wfXnsAhTargHostNetwork, wfXnsInterfaceEntry=wfXnsInterfaceEntry, wfXnsInterfaceCircuit=wfXnsInterfaceCircuit, wfXnsInterfaceExServSockNm=wfXnsInterfaceExServSockNm, wfXnsBaseImplement=wfXnsBaseImplement, wfXnsBaseHostCount=wfXnsBaseHostCount, wfXnsAdjacentHostEntry=wfXnsAdjacentHostEntry, wfXnsRipIntfTable=wfXnsRipIntfTable, wfXnsInterfaceInDelivers=wfXnsInterfaceInDelivers, wfXnsBaseAdjacencyHostid=wfXnsBaseAdjacencyHostid, wfXnsAhDisable=wfXnsAhDisable, wfXnsBaseAdjacencyCost=wfXnsBaseAdjacencyCost, wfXnsTrafficFilterCircuit=wfXnsTrafficFilterCircuit, wfXnsInterfaceInDiscards=wfXnsInterfaceInDiscards, wfXnsInterfaceState=wfXnsInterfaceState, wfXnsInterfaceMaxInfo=wfXnsInterfaceMaxInfo, wfXnsInterfaceDisable=wfXnsInterfaceDisable, wfXnsInterfaceMacAddress=wfXnsInterfaceMacAddress, wfXnsBase=wfXnsBase, wfXnsRipInterfaceDelete=wfXnsRipInterfaceDelete, wfXnsInterfaceFRBcast=wfXnsInterfaceFRBcast, wfXnsInterfaceDelete=wfXnsInterfaceDelete, wfXnsBaseAdjacencyCct=wfXnsBaseAdjacencyCct, wfXnsAggrInAddrErrs=wfXnsAggrInAddrErrs, wfXnsTrafficFilterName=wfXnsTrafficFilterName, wfXnsInterfaceXsumOn=wfXnsInterfaceXsumOn, wfXnsInterfaceForwDatagrams=wfXnsInterfaceForwDatagrams, wfXnsTrafficFilterDefinition=wfXnsTrafficFilterDefinition, wfXnsInterfaceExServNetwork=wfXnsInterfaceExServNetwork, wfXnsBaseRouteProto=wfXnsBaseRouteProto, wfXnsRipIntfEntry=wfXnsRipIntfEntry, wfXnsInterfaceSMDSGroupAddress=wfXnsInterfaceSMDSGroupAddress, wfXnsSrTargNetworkRt=wfXnsSrTargNetworkRt, wfXnsBaseRouteMetric=wfXnsBaseRouteMetric, wfXnsBaseRouteInfo=wfXnsBaseRouteInfo, wfXnsAhDlci=wfXnsAhDlci, wfXnsInterfaceOutDiscards=wfXnsInterfaceOutDiscards, wfXnsSrTargNetwork=wfXnsSrTargNetwork, wfXnsBaseRtEntry=wfXnsBaseRtEntry, wfXnsBaseRtEntryTable=wfXnsBaseRtEntryTable, wfXnsTrafficFilterReserved=wfXnsTrafficFilterReserved, wfXnsInterfaceSplit=wfXnsInterfaceSplit, wfXnsAggrOutNoRoutes=wfXnsAggrOutNoRoutes, wfXnsBaseAdjacencyIntf=wfXnsBaseAdjacencyIntf, wfXnsSrDelete=wfXnsSrDelete, wfXnsAggrInDatagrams=wfXnsAggrInDatagrams, wfXnsInterfaceCost=wfXnsInterfaceCost, wfXnsAggrInHdrErrs=wfXnsAggrInHdrErrs, wfXnsBaseActiveHostNumber=wfXnsBaseActiveHostNumber, wfXnsTrafficFilterEnable=wfXnsTrafficFilterEnable, wfXnsBaseRouteAge=wfXnsBaseRouteAge, wfXnsSrCost=wfXnsSrCost, wfXnsRipInterfaceListen=wfXnsRipInterfaceListen, wfXnsRipInterfaceState=wfXnsRipInterfaceState, wfXnsInterfaceOutNoRoutes=wfXnsInterfaceOutNoRoutes, wfXnsTrafficFilterTable=wfXnsTrafficFilterTable, wfXnsBaseRouteIfIndex=wfXnsBaseRouteIfIndex, wfXnsBaseAdjacencyNetwork=wfXnsBaseAdjacencyNetwork, wfXnsInterfaceExServHostId=wfXnsInterfaceExServHostId, wfXnsRipInterfaceIndex=wfXnsRipInterfaceIndex, wfXnsAhNextHopIntf=wfXnsAhNextHopIntf, wfXnsSrNextHopHost=wfXnsSrNextHopHost, wfXnsBaseRouteDest=wfXnsBaseRouteDest, wfXnsAggrOutDatagrams=wfXnsAggrOutDatagrams, wfXnsInterfaceNetworkNumber=wfXnsInterfaceNetworkNumber, wfXnsBaseAdjEntryTable=wfXnsBaseAdjEntryTable, wfXnsBaseRouteNextHopNetwork=wfXnsBaseRouteNextHopNetwork, wfXnsInterfaceTable=wfXnsInterfaceTable, wfXnsAggrStats=wfXnsAggrStats, wfXnsTrafficFilterCounter=wfXnsTrafficFilterCounter, wfXnsInterfaceInUnknownProtos=wfXnsInterfaceInUnknownProtos, wfXnsInterfaceExtServer=wfXnsInterfaceExtServer, wfXnsTrafficFilterEntry=wfXnsTrafficFilterEntry, wfXnsBaseRouteType=wfXnsBaseRouteType, wfXnsRipInterfaceDisable=wfXnsRipInterfaceDisable, wfXnsAdjacentHostTable=wfXnsAdjacentHostTable, wfXnsAggrInUnknownProtos=wfXnsAggrInUnknownProtos, wfXnsTrafficFilterStatus=wfXnsTrafficFilterStatus, wfXnsAhTargHostId=wfXnsAhTargHostId, wfXnsSrNextHopNetwork=wfXnsSrNextHopNetwork, wfXnsBaseDelete=wfXnsBaseDelete, wfXnsRipInterfaceSupply=wfXnsRipInterfaceSupply, wfXnsInterfaceExServPktType=wfXnsInterfaceExServPktType, wfXnsInterfaceInReceives=wfXnsInterfaceInReceives, wfXnsTrafficFilterInterface=wfXnsTrafficFilterInterface, wfXnsInterfaceEncaps=wfXnsInterfaceEncaps, wfXnsInterfaceOutRequests=wfXnsInterfaceOutRequests, wfXnsInterfaceFRMcast=wfXnsInterfaceFRMcast, wfXnsTrafficFilterFragment=wfXnsTrafficFilterFragment, wfXnsBaseLogFilter=wfXnsBaseLogFilter, wfXnsAggrInDiscards=wfXnsAggrInDiscards, wfXnsBaseAdjEntry=wfXnsBaseAdjEntry)
