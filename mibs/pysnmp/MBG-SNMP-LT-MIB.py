#
# PySNMP MIB module MBG-SNMP-LT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MBG-SNMP-LT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:00:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
mbgSnmpRoot, = mibBuilder.importSymbols("MBG-SNMP-ROOT-MIB", "mbgSnmpRoot")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Unsigned32, MibIdentifier, Counter32, iso, TimeTicks, Bits, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Counter32", "iso", "TimeTicks", "Bits", "Gauge32", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
mbgLantime = ModuleIdentity((1, 3, 6, 1, 4, 1, 5597, 3))
mbgLantime.setRevisions(('2012-01-25 07:45', '2011-03-30 00:00', '2011-03-29 00:00', '2010-01-19 00:00', '2009-12-03 00:00', '2008-09-10 00:00', '2008-07-15 00:00', '2008-06-15 00:00', '2006-08-23 00:00', '2006-03-20 00:00', '2005-07-08 00:00',))
if mibBuilder.loadTexts: mbgLantime.setLastUpdated('201201250745Z')
if mibBuilder.loadTexts: mbgLantime.setOrganization('www.meinberg.de')
mbgLtInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 0))
mbgLtFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 0, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtFirmwareVersion.setStatus('current')
mbgLtFirmwareVersionVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 0, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtFirmwareVersionVal.setStatus('current')
mbgLtNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 1))
mbgLtNtpCurrentState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpCurrentState.setStatus('current')
mbgLtNtpCurrentStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("notSynchronized", 0), ("noGoodRefclock", 1), ("syncToExtRefclock", 2), ("syncToSerialRefclock", 3), ("normalOperationPPS", 4), ("normalOperationRefclock", 5), ("unknown", 99))).clone(99)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpCurrentStateVal.setStatus('current')
mbgLtNtpStratum = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(99)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpStratum.setStatus('current')
mbgLtNtpActiveRefclockId = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 99))).clone(namedValues=NamedValues(("localClock", 0), ("serialRefclock", 1), ("pps", 2), ("externalRefclock", 3), ("notSync", 99))).clone(99)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpActiveRefclockId.setStatus('current')
mbgLtNtpActiveRefclockName = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpActiveRefclockName.setStatus('current')
mbgLtNtpActiveRefclockOffset = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpActiveRefclockOffset.setStatus('current')
mbgLtNtpActiveRefclockOffsetVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(1024000000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpActiveRefclockOffsetVal.setStatus('current')
mbgLtNtpNumberOfRefclocks = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpNumberOfRefclocks.setStatus('current')
mbgLtNtpAuthKeyId = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpAuthKeyId.setStatus('current')
mbgLtNtpVersion = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtNtpVersion.setStatus('current')
mbgLtRefclock = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2))
mbgLtRefClockType = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefClockType.setStatus('current')
mbgLtRefClockTypeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("notavailable", 0), ("mbgGPS167", 1), ("mbgGPS167BGTTGP", 2), ("mbgPZF509", 3), ("mbgPZF509BGTTGP", 4), ("mbgSHS", 5), ("mbgSHSBGT", 6), ("mbgSHSFRC", 7), ("mbgSHSFRCBGT", 8), ("mbgTCR509", 9), ("mbgTCR509BGTTGP", 10), ("mbgRDT", 11), ("mbgRDTBGTTGP", 12), ("mbgEDT", 13), ("mbgEDTBGTTGP", 14), ("mbgAHS", 15), ("mbgDHS", 16), ("mbgNDT167", 17), ("mbgNDT167BGT", 18), ("mbgDCT", 19), ("mbgDCTBGT", 20), ("mbgSHSTCR", 21), ("mbgSHSTCRBGT", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefClockTypeVal.setStatus('current')
mbgLtRefClockMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefClockMode.setStatus('current')
mbgLtRefClockModeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notavailable", 0), ("normalOperation", 1), ("trackingSearching", 2), ("antennaFaulty", 3), ("warmBoot", 4), ("coldBoot", 5), ("antennaShortcircuit", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefClockModeVal.setStatus('current')
mbgLtRefGpsState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsState.setStatus('current')
mbgLtRefGpsStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notavailable", 0), ("synchronized", 1), ("notsynchronized", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsStateVal.setStatus('current')
mbgLtRefGpsPosition = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsPosition.setStatus('current')
mbgLtRefGpsSatellites = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsSatellites.setStatus('current')
mbgLtRefGpsSatellitesGood = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsSatellitesGood.setStatus('current')
mbgLtRefGpsSatellitesInView = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsSatellitesInView.setStatus('current')
mbgLtRefPzfState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefPzfState.setStatus('current')
mbgLtRefPzfStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notavailable", 0), ("sync", 1), ("notsyncnow", 2), ("neversynced", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefPzfStateVal.setStatus('current')
mbgLtRefPzfKorrelation = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefPzfKorrelation.setStatus('current')
mbgLtRefPzfField = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefPzfField.setStatus('current')
mbgLtRefGpsMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsMode.setStatus('current')
mbgLtRefGpsModeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notavailable", 0), ("normalOperation", 1), ("trackingSearching", 2), ("antennaFaulty", 3), ("warmBoot", 4), ("coldBoot", 5), ("antennaShortcircuit", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsModeVal.setStatus('current')
mbgLtRefIrigMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefIrigMode.setStatus('current')
mbgLtRefIrigModeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notavailable", 0), ("locked", 1), ("notlocked", 2), ("telegramError", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefIrigModeVal.setStatus('current')
mbgLtRefPzfMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefPzfMode.setStatus('current')
mbgLtRefPzfModeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notavailable", 0), ("normalOperation", 1), ("antennaFaulty", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefPzfModeVal.setStatus('current')
mbgLtRefIrigState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefIrigState.setStatus('current')
mbgLtRefIrigStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefIrigStateVal.setStatus('current')
mbgLtRefSHSMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefSHSMode.setStatus('current')
mbgLtRefSHSModeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notavailable", 0), ("normalOperation", 1), ("stoppedTimeLimitError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefSHSModeVal.setStatus('current')
mbgLtRefSHSTimeDiff = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefSHSTimeDiff.setStatus('current')
mbgLtRefDctState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefDctState.setStatus('current')
mbgLtRefDctStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notavailable", 0), ("sync", 1), ("notsyncnow", 2), ("neversynced", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefDctStateVal.setStatus('current')
mbgLtRefDctField = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 28), DisplayString().clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefDctField.setStatus('current')
mbgLtRefDctMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefDctMode.setStatus('current')
mbgLtRefDctModeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notavailable", 0), ("normalOperation", 1), ("antennaFaulty", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefDctModeVal.setStatus('current')
mbgLtRefGpsLeapSecond = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsLeapSecond.setStatus('current')
mbgLtRefGpsLeapCorrection = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefGpsLeapCorrection.setStatus('current')
mbgLtMrs = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50))
mbgLtRefMrsRef = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefMrsRef.setStatus('current')
mbgLtRefMrsRefVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 99))).clone(namedValues=NamedValues(("notavailable", 0), ("refGps", 1), ("refIrig", 2), ("refPps", 3), ("refFreq", 4), ("refPtp", 5), ("refNtp", 6), ("refFreeRun", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefMrsRefVal.setStatus('current')
mbgLtRefMrsRefList = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefMrsRefList.setStatus('current')
mbgLtRefMrsPrioList = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtRefMrsPrioList.setStatus('current')
mbgLtMrsRef = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10))
mbgLtMrsRefGps = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1))
mbgLtMrsGpsOffs = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsGpsOffs.setStatus('current')
mbgLtMrsGpsOffsVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsGpsOffsVal.setStatus('current')
mbgLtMrsGpsOffsBase = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 6, 9))).clone(namedValues=NamedValues(("baseSeconds", 0), ("baseMiliseconds", 3), ("baseMicroseconds", 6), ("baseNanoseconds", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsGpsOffsBase.setStatus('current')
mbgLtMrsGpsPrio = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsGpsPrio.setStatus('current')
mbgLtMrsGpsState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsGpsState.setStatus('current')
mbgLtMrsGpsStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notAvailable", 0), ("notSupported", 1), ("notConnected", 2), ("noSignal", 3), ("hasLocked", 4), ("isAvailable", 5), ("isAccurate", 6), ("isMaster", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsGpsStateVal.setStatus('current')
mbgLtMrsGpsPrecision = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsGpsPrecision.setStatus('current')
mbgLtMrsRefIrig = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2))
mbgLtMrsIrigOffs = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsIrigOffs.setStatus('current')
mbgLtMrsIrigOffsVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsIrigOffsVal.setStatus('current')
mbgLtMrsIrigOffsBase = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 6, 9))).clone(namedValues=NamedValues(("baseSeconds", 0), ("baseMiliseconds", 3), ("baseMicroseconds", 6), ("baseNanoseconds", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsIrigOffsBase.setStatus('current')
mbgLtMrsIrigPrio = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsIrigPrio.setStatus('current')
mbgLtMrsIrigState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsIrigState.setStatus('current')
mbgLtMrsIrigStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notAvailable", 0), ("notSupported", 1), ("notConnected", 2), ("noSignal", 3), ("hasLocked", 4), ("isAvailable", 5), ("isAccurate", 6), ("isMaster", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsIrigStateVal.setStatus('current')
mbgLtMrsIrigCorr = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsIrigCorr.setStatus('current')
mbgLtMrsIrigOffsLimit = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsIrigOffsLimit.setStatus('current')
mbgLtMrsIrigPrecision = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsIrigPrecision.setStatus('current')
mbgLtMrsRefPps = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3))
mbgLtMrsPpsOffs = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPpsOffs.setStatus('current')
mbgLtMrsPpsOffsVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPpsOffsVal.setStatus('current')
mbgLtMrsPpsOffsBase = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 6, 9))).clone(namedValues=NamedValues(("baseSeconds", 0), ("baseMiliseconds", 3), ("baseMicroseconds", 6), ("baseNanoseconds", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPpsOffsBase.setStatus('current')
mbgLtMrsPpsPrio = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPpsPrio.setStatus('current')
mbgLtMrsPpsState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPpsState.setStatus('current')
mbgLtMrsPpsStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notAvailable", 0), ("notSupported", 1), ("notConnected", 2), ("noSignal", 3), ("hasLocked", 4), ("isAvailable", 5), ("isAccurate", 6), ("isMaster", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPpsStateVal.setStatus('current')
mbgLtMrsPpsCorr = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsPpsCorr.setStatus('current')
mbgLtMrsPpsOffsLimit = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsPpsOffsLimit.setStatus('current')
mbgLtMrsPpsPrecision = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 3, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsPpsPrecision.setStatus('current')
mbgLtMrsRefFreq = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4))
mbgLtMrsFreqOffs = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsFreqOffs.setStatus('current')
mbgLtMrsFreqOffsVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsFreqOffsVal.setStatus('current')
mbgLtMrsFreqOffsBase = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 6, 9))).clone(namedValues=NamedValues(("baseSeconds", 0), ("baseMiliseconds", 3), ("baseMicroseconds", 6), ("baseNanoseconds", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsFreqOffsBase.setStatus('current')
mbgLtMrsFreqPrio = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsFreqPrio.setStatus('current')
mbgLtMrsFreqState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsFreqState.setStatus('current')
mbgLtMrsFreqStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notAvailable", 0), ("notSupported", 1), ("notConnected", 2), ("noSignal", 3), ("hasLocked", 4), ("isAvailable", 5), ("isAccurate", 6), ("isMaster", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsFreqStateVal.setStatus('current')
mbgLtMrsFreqCorr = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsFreqCorr.setStatus('current')
mbgLtMrsFreqOffsLimit = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsFreqOffsLimit.setStatus('current')
mbgLtMrsFreqPrecision = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsFreqPrecision.setStatus('current')
mbgLtMrsRefPtp = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5))
mbgLtMrsPtpOffs = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPtpOffs.setStatus('current')
mbgLtMrsPtpOffsVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPtpOffsVal.setStatus('current')
mbgLtMrsPtpOffsBase = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 6, 9))).clone(namedValues=NamedValues(("baseSeconds", 0), ("baseMiliseconds", 3), ("baseMicroseconds", 6), ("baseNanoseconds", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPtpOffsBase.setStatus('current')
mbgLtMrsPtpPrio = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPtpPrio.setStatus('current')
mbgLtMrsPtpState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPtpState.setStatus('current')
mbgLtMrsPtpStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notAvailable", 0), ("notSupported", 1), ("notConnected", 2), ("noSignal", 3), ("hasLocked", 4), ("isAvailable", 5), ("isAccurate", 6), ("isMaster", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsPtpStateVal.setStatus('current')
mbgLtMrsPtpCorr = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsPtpCorr.setStatus('current')
mbgLtMrsPtpOffsLimit = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsPtpOffsLimit.setStatus('current')
mbgLtMrsPtpPrecision = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 5, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsPtpPrecision.setStatus('current')
mbgLtMrsRefNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6))
mbgLtMrsNtpOffs = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsNtpOffs.setStatus('current')
mbgLtMrsNtpOffsVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsNtpOffsVal.setStatus('current')
mbgLtMrsNtpOffsBase = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 6, 9))).clone(namedValues=NamedValues(("baseSeconds", 0), ("baseMiliseconds", 3), ("baseMicroseconds", 6), ("baseNanoseconds", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsNtpOffsBase.setStatus('current')
mbgLtMrsNtpPrio = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsNtpPrio.setStatus('current')
mbgLtMrsNtpState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsNtpState.setStatus('current')
mbgLtMrsNtpStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notAvailable", 0), ("notSupported", 1), ("notConnected", 2), ("noSignal", 3), ("hasLocked", 4), ("isAvailable", 5), ("isAccurate", 6), ("isMaster", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtMrsNtpStateVal.setStatus('current')
mbgLtMrsNtpCorr = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsNtpCorr.setStatus('current')
mbgLtMrsNtpOffsLimit = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsNtpOffsLimit.setStatus('current')
mbgLtMrsNtpPrecision = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 2, 50, 10, 6, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtMrsNtpPrecision.setStatus('current')
mbgLtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 3))
mbgLtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0))
mbgLtTrapNTPNotSync = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 1))
if mibBuilder.loadTexts: mbgLtTrapNTPNotSync.setStatus('current')
mbgLtTrapNTPStopped = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 2))
if mibBuilder.loadTexts: mbgLtTrapNTPStopped.setStatus('current')
mbgLtTrapServerBoot = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 3))
if mibBuilder.loadTexts: mbgLtTrapServerBoot.setStatus('current')
mbgLtTrapReceiverNotResponding = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 4))
if mibBuilder.loadTexts: mbgLtTrapReceiverNotResponding.setStatus('current')
mbgLtTrapReceiverNotSync = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 5))
if mibBuilder.loadTexts: mbgLtTrapReceiverNotSync.setStatus('current')
mbgLtTrapAntennaFaulty = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 6))
if mibBuilder.loadTexts: mbgLtTrapAntennaFaulty.setStatus('current')
mbgLtTrapAntennaReconnect = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 7))
if mibBuilder.loadTexts: mbgLtTrapAntennaReconnect.setStatus('current')
mbgLtTrapConfigChanged = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 8))
if mibBuilder.loadTexts: mbgLtTrapConfigChanged.setStatus('current')
mbgLtTrapLeapSecondAnnounced = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 9))
if mibBuilder.loadTexts: mbgLtTrapLeapSecondAnnounced.setStatus('current')
mbgLtTrapSHSTimeLimitError = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 10))
if mibBuilder.loadTexts: mbgLtTrapSHSTimeLimitError.setStatus('current')
mbgLtTrapSecondaryRecNotSync = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 11))
if mibBuilder.loadTexts: mbgLtTrapSecondaryRecNotSync.setStatus('current')
mbgLtTrapPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 12))
if mibBuilder.loadTexts: mbgLtTrapPowerSupplyFailure.setStatus('current')
mbgLtTrapAntennaShortCircuit = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 13))
if mibBuilder.loadTexts: mbgLtTrapAntennaShortCircuit.setStatus('current')
mbgLtTrapReceiverSync = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 14))
if mibBuilder.loadTexts: mbgLtTrapReceiverSync.setStatus('current')
mbgLtTrapNTPClientAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 15))
if mibBuilder.loadTexts: mbgLtTrapNTPClientAlarm.setStatus('current')
mbgLtTrapPowerSupplyUp = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 16))
if mibBuilder.loadTexts: mbgLtTrapPowerSupplyUp.setStatus('current')
mbgLtTrapNetworkDown = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 17))
if mibBuilder.loadTexts: mbgLtTrapNetworkDown.setStatus('current')
mbgLtTrapNetworkUp = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 18))
if mibBuilder.loadTexts: mbgLtTrapNetworkUp.setStatus('current')
mbgLtTrapSecondaryRecNotResp = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 19))
if mibBuilder.loadTexts: mbgLtTrapSecondaryRecNotResp.setStatus('current')
mbgLtTrapXmrLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 30))
if mibBuilder.loadTexts: mbgLtTrapXmrLimitExceeded.setStatus('current')
mbgLtTrapXmrRefDisconnect = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 31))
if mibBuilder.loadTexts: mbgLtTrapXmrRefDisconnect.setStatus('current')
mbgLtTrapXmrRefReconnect = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 32))
if mibBuilder.loadTexts: mbgLtTrapXmrRefReconnect.setStatus('current')
mbgLtTrapFdmError = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 33))
if mibBuilder.loadTexts: mbgLtTrapFdmError.setStatus('current')
mbgLtTrapSHSTimeLimitWarning = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 34))
if mibBuilder.loadTexts: mbgLtTrapSHSTimeLimitWarning.setStatus('current')
mbgLtTrapSecondaryRecSync = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 35))
if mibBuilder.loadTexts: mbgLtTrapSecondaryRecSync.setStatus('current')
mbgLtTrapNTPSync = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 36))
if mibBuilder.loadTexts: mbgLtTrapNTPSync.setStatus('current')
mbgLtTrapPtpPortDisconnected = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 37))
if mibBuilder.loadTexts: mbgLtTrapPtpPortDisconnected.setStatus('current')
mbgLtTrapPtpPortConnected = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 38))
if mibBuilder.loadTexts: mbgLtTrapPtpPortConnected.setStatus('current')
mbgLtTrapPtpStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 39))
if mibBuilder.loadTexts: mbgLtTrapPtpStateChanged.setStatus('current')
mbgLtTrapPtpError = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 40))
if mibBuilder.loadTexts: mbgLtTrapPtpError.setStatus('current')
mbgLtTrapNormalOperation = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 77))
if mibBuilder.loadTexts: mbgLtTrapNormalOperation.setStatus('current')
mbgLtTrapHeartbeat = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 88))
if mibBuilder.loadTexts: mbgLtTrapHeartbeat.setStatus('current')
mbgLtTrapTestNotification = NotificationType((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 99))
if mibBuilder.loadTexts: mbgLtTrapTestNotification.setStatus('current')
mbgLtTrapMessage = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 3, 0, 100), DisplayString().clone('no event')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtTrapMessage.setStatus('current')
mbgLtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4))
mbgLtCfgNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1))
mbgLtCfgHostname = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgHostname.setStatus('current')
mbgLtCfgDomainname = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgDomainname.setStatus('current')
mbgLtCfgNameserver1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNameserver1.setStatus('current')
mbgLtCfgNameserver2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNameserver2.setStatus('current')
mbgLtCfgSyslogserver1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSyslogserver1.setStatus('current')
mbgLtCfgSyslogserver2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSyslogserver2.setStatus('current')
mbgLtCfgTelnetAccess = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgTelnetAccess.setStatus('current')
mbgLtCfgFTPAccess = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgFTPAccess.setStatus('current')
mbgLtCfgHTTPAccess = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgHTTPAccess.setStatus('current')
mbgLtCfgHTTPSAccess = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgHTTPSAccess.setStatus('current')
mbgLtCfgSNMPAccess = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPAccess.setStatus('current')
mbgLtCfgSambaAccess = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSambaAccess.setStatus('current')
mbgLtCfgIPv6Access = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgIPv6Access.setStatus('current')
mbgLtCfgSSHAccess = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSSHAccess.setStatus('current')
mbgLtCfgNTP = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2))
mbgLtCfgNTPServer1 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 1))
mbgLtCfgNTPServer2 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 2))
mbgLtCfgNTPServer3 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 3))
mbgLtCfgNTPServer4 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 4))
mbgLtCfgNTPServer5 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 5))
mbgLtCfgNTPServer6 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 6))
mbgLtCfgNTPServer7 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 7))
mbgLtCfgNTPServer1IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer1IP.setStatus('current')
mbgLtCfgNTPServer1Key = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer1Key.setStatus('current')
mbgLtCfgNTPServer1Autokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer1Autokey.setStatus('current')
mbgLtCfgNTPServer1Prefer = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer1Prefer.setStatus('current')
mbgLtCfgNTPServer2IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer2IP.setStatus('current')
mbgLtCfgNTPServer2Key = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer2Key.setStatus('current')
mbgLtCfgNTPServer2Autokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer2Autokey.setStatus('current')
mbgLtCfgNTPServer2Prefer = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer2Prefer.setStatus('current')
mbgLtCfgNTPServer3IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer3IP.setStatus('current')
mbgLtCfgNTPServer3Key = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer3Key.setStatus('current')
mbgLtCfgNTPServer3Autokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer3Autokey.setStatus('current')
mbgLtCfgNTPServer3Prefer = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer3Prefer.setStatus('current')
mbgLtCfgNTPServer4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer4IP.setStatus('current')
mbgLtCfgNTPServer4Key = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer4Key.setStatus('current')
mbgLtCfgNTPServer4Autokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer4Autokey.setStatus('current')
mbgLtCfgNTPServer4Prefer = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer4Prefer.setStatus('current')
mbgLtCfgNTPServer5IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer5IP.setStatus('current')
mbgLtCfgNTPServer5Key = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer5Key.setStatus('current')
mbgLtCfgNTPServer5Autokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer5Autokey.setStatus('current')
mbgLtCfgNTPServer5Prefer = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer5Prefer.setStatus('current')
mbgLtCfgNTPServer6IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer6IP.setStatus('current')
mbgLtCfgNTPServer6Key = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer6Key.setStatus('current')
mbgLtCfgNTPServer6Autokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer6Autokey.setStatus('current')
mbgLtCfgNTPServer6Prefer = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer6Prefer.setStatus('current')
mbgLtCfgNTPServer7IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer7IP.setStatus('current')
mbgLtCfgNTPServer7Key = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer7Key.setStatus('current')
mbgLtCfgNTPServer7Autokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer7Autokey.setStatus('current')
mbgLtCfgNTPServer7Prefer = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPServer7Prefer.setStatus('current')
mbgLtCfgNTPStratumLocalClock = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPStratumLocalClock.setStatus('current')
mbgLtCfgNTPTrustedKey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPTrustedKey.setStatus('current')
mbgLtCfgNTPBroadcastIP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPBroadcastIP.setStatus('current')
mbgLtCfgNTPBroadcastKey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPBroadcastKey.setStatus('current')
mbgLtCfgNTPBroadcastAutokey = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPBroadcastAutokey.setStatus('current')
mbgLtCfgNTPAutokeyFeature = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPAutokeyFeature.setStatus('current')
mbgLtCfgNTPAtomPPS = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNTPAtomPPS.setStatus('current')
mbgLtCfgEMail = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 3))
mbgLtCfgEMailTo = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEMailTo.setStatus('current')
mbgLtCfgEMailFrom = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEMailFrom.setStatus('current')
mbgLtCfgEMailSmarthost = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEMailSmarthost.setStatus('current')
mbgLtCfgSNMP = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4))
mbgLtCfgSNMPTrapReceiver1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPTrapReceiver1.setStatus('current')
mbgLtCfgSNMPTrapReceiver2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPTrapReceiver2.setStatus('current')
mbgLtCfgSNMPTrapRec1Community = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPTrapRec1Community.setStatus('current')
mbgLtCfgSNMPTrapRec2Community = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPTrapRec2Community.setStatus('current')
mbgLtCfgSNMPReadOnlyCommunity = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPReadOnlyCommunity.setStatus('current')
mbgLtCfgSNMPReadWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPReadWriteCommunity.setStatus('current')
mbgLtCfgSNMPContact = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPContact.setStatus('current')
mbgLtCfgSNMPLocation = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 4, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSNMPLocation.setStatus('current')
mbgLtCfgWinpopup = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 5))
mbgLtCfgWMailAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgWMailAddress1.setStatus('current')
mbgLtCfgWMailAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgWMailAddress2.setStatus('current')
mbgLtCfgWalldisplay = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 6))
mbgLtCfgVP100Display1IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgVP100Display1IP.setStatus('current')
mbgLtCfgVP100Display1SN = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgVP100Display1SN.setStatus('current')
mbgLtCfgVP100Display2IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgVP100Display2IP.setStatus('current')
mbgLtCfgVP100Display2SN = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 6, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgVP100Display2SN.setStatus('current')
mbgLtCfgNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7))
mbgLtCfgNotifyNTPNotSync = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyNTPNotSync.setStatus('current')
mbgLtCfgNotifyNTPStopped = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyNTPStopped.setStatus('current')
mbgLtCfgNotifyServerBoot = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyServerBoot.setStatus('current')
mbgLtCfgNotifyRefclkNoResponse = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyRefclkNoResponse.setStatus('current')
mbgLtCfgNotifyRefclockNotSync = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyRefclockNotSync.setStatus('current')
mbgLtCfgNotifyAntennaFaulty = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyAntennaFaulty.setStatus('current')
mbgLtCfgNotifyAntennaReconnect = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyAntennaReconnect.setStatus('current')
mbgLtCfgNotifyConfigChanged = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyConfigChanged.setStatus('current')
mbgLtCfgNotifySHSTimeLimitError = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifySHSTimeLimitError.setStatus('current')
mbgLtCfgNotifyLeapSecond = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 7, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgNotifyLeapSecond.setStatus('current')
mbgLtCfgEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8))
mbgLtCfgEthernetIf0 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0))
mbgLtCfgEthernetIf1 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1))
mbgLtCfgEthernetIf2 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2))
mbgLtCfgEthernetIf3 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3))
mbgLtCfgEthernetIf4 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4))
mbgLtCfgEthernetIf5 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5))
mbgLtCfgEthernetIf6 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6))
mbgLtCfgEthernetIf7 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7))
mbgLtCfgEthernetIf8 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8))
mbgLtCfgEthernetIf9 = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9))
mbgLtCfgEthernetIf0IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0IPv4IP.setStatus('current')
mbgLtCfgEthernetIf0IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf0IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf0DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0DHCPClient.setStatus('current')
mbgLtCfgEthernetIf0IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf0IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf0IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf0IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf0NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 0, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf0NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf1IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1IPv4IP.setStatus('current')
mbgLtCfgEthernetIf1IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf1IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf1DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1DHCPClient.setStatus('current')
mbgLtCfgEthernetIf1IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf1IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf1IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf1IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf1NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf1NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf2IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2IPv4IP.setStatus('current')
mbgLtCfgEthernetIf2IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf2IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf2DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2DHCPClient.setStatus('current')
mbgLtCfgEthernetIf2IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf2IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf2IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf2IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf2NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf2NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf3IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3IPv4IP.setStatus('current')
mbgLtCfgEthernetIf3IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf3IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf3DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3DHCPClient.setStatus('current')
mbgLtCfgEthernetIf3IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf3IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf3IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf3IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf3NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf3NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf4IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4IPv4IP.setStatus('current')
mbgLtCfgEthernetIf4IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf4IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf4DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4DHCPClient.setStatus('current')
mbgLtCfgEthernetIf4IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf4IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf4IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf4IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf4NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf4NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf5IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5IPv4IP.setStatus('current')
mbgLtCfgEthernetIf5IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf5IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf5DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5DHCPClient.setStatus('current')
mbgLtCfgEthernetIf5IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf5IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf5IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf5IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf5NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf5NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf6IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6IPv4IP.setStatus('current')
mbgLtCfgEthernetIf6IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf6IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf6DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6DHCPClient.setStatus('current')
mbgLtCfgEthernetIf6IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf6IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf6IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf6IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf6NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 6, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf6NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf7IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7IPv4IP.setStatus('current')
mbgLtCfgEthernetIf7IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf7IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf7DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7DHCPClient.setStatus('current')
mbgLtCfgEthernetIf7IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf7IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf7IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf7IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf7NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf7NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf8IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8IPv4IP.setStatus('current')
mbgLtCfgEthernetIf8IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf8IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf8DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8DHCPClient.setStatus('current')
mbgLtCfgEthernetIf8IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf8IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf8IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf8IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf8NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf8NetLinkMode.setStatus('current')
mbgLtCfgEthernetIf9IPv4IP = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9IPv4IP.setStatus('current')
mbgLtCfgEthernetIf9IPv4Netmask = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9IPv4Netmask.setStatus('current')
mbgLtCfgEthernetIf9IPv4Gateway = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9IPv4Gateway.setStatus('current')
mbgLtCfgEthernetIf9DHCPClient = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9DHCPClient.setStatus('current')
mbgLtCfgEthernetIf9IPv6IP1 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9IPv6IP1.setStatus('current')
mbgLtCfgEthernetIf9IPv6IP2 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9IPv6IP2.setStatus('current')
mbgLtCfgEthernetIf9IPv6IP3 = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9IPv6IP3.setStatus('current')
mbgLtCfgEthernetIf9IPv6Autoconf = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9IPv6Autoconf.setStatus('current')
mbgLtCfgEthernetIf9NetLinkMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 8, 9, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("autosensing", 0), ("link10half", 1), ("link10full", 2), ("link100half", 3), ("link100full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgEthernetIf9NetLinkMode.setStatus('current')
mbgLtCfgSHS = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 9))
mbgLtCfgSHSCritLimit = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSHSCritLimit.setStatus('current')
mbgLtCfgSHSWarnLimit = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgSHSWarnLimit.setStatus('current')
mbgLtCfgMRS = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 4, 10))
mbgLtCfgMRSRefPriority = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 4, 10, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCfgMRSRefPriority.setStatus('current')
mbgLtCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 5))
mbgLtCmdExecute = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("ready", 0), ("doReboot", 1), ("doFirmwareUpdate", 2), ("doReloadConfig", 3), ("doGenerateSSHKey", 4), ("doGenerateHTTPSKey", 5), ("doResetFactoryDefaults", 6), ("doGenerateNewNTPAutokeyCert", 7), ("doSendTestNotification", 8), ("doResetSHSTimeLimitError", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCmdExecute.setStatus('current')
mbgLtCmdSetRefTime = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mbgLtCmdSetRefTime.setStatus('current')
mbgLtPtp = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 10))
mbgLtPtpMode = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpMode.setStatus('current')
mbgLtPtpModeVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("stopped", 0), ("master", 1), ("slave", 2), ("ordinary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpModeVal.setStatus('current')
mbgLtPtpPortState = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpPortState.setStatus('current')
mbgLtPtpPortStateVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("uncalibrated", 0), ("initializing", 1), ("listening", 2), ("master", 3), ("slave", 4), ("unicastmaster", 5), ("unicastslave", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpPortStateVal.setStatus('current')
mbgLtPtpOffsetFromGM = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpOffsetFromGM.setStatus('current')
mbgLtPtpOffsetFromGMVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpOffsetFromGMVal.setStatus('current')
mbgLtPtpDelay = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 7), DisplayString()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpDelay.setStatus('current')
mbgLtPtpDelayVal = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 10, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtPtpDelayVal.setStatus('current')
mbgLtFdm = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 11))
mbgLtFdmPlFreq = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtFdmPlFreq.setStatus('current')
mbgLtFdmFreqDev = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtFdmFreqDev.setStatus('current')
mbgLtFdmNomFreq = MibScalar((1, 3, 6, 1, 4, 1, 5597, 3, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbgLtFdmNomFreq.setStatus('current')
mbgLtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 90))
mbgLtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 90, 1))
mbgLtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5597, 3, 90, 2))
mbgLtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5597, 3, 90, 1, 1)).setObjects(("MBG-SNMP-LT-MIB", "mbgLtObjectsGroup"), ("MBG-SNMP-LT-MIB", "mbgLtTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbgLtCompliance = mbgLtCompliance.setStatus('current')
mbgLtObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5597, 3, 90, 2, 1))
for _mbgLtObjectsGroup_obj in [[("MBG-SNMP-LT-MIB", "mbgLtFirmwareVersion"), ("MBG-SNMP-LT-MIB", "mbgLtFirmwareVersionVal"), ("MBG-SNMP-LT-MIB", "mbgLtNtpCurrentState"), ("MBG-SNMP-LT-MIB", "mbgLtNtpCurrentStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtNtpStratum"), ("MBG-SNMP-LT-MIB", "mbgLtNtpActiveRefclockId"), ("MBG-SNMP-LT-MIB", "mbgLtNtpActiveRefclockName"), ("MBG-SNMP-LT-MIB", "mbgLtNtpActiveRefclockOffset"), ("MBG-SNMP-LT-MIB", "mbgLtNtpActiveRefclockOffsetVal"), ("MBG-SNMP-LT-MIB", "mbgLtNtpNumberOfRefclocks"), ("MBG-SNMP-LT-MIB", "mbgLtNtpAuthKeyId"), ("MBG-SNMP-LT-MIB", "mbgLtNtpVersion"), ("MBG-SNMP-LT-MIB", "mbgLtRefClockType"), ("MBG-SNMP-LT-MIB", "mbgLtRefClockTypeVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefClockMode"), ("MBG-SNMP-LT-MIB", "mbgLtRefClockModeVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsState"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsPosition"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsSatellites"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsSatellitesGood"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsSatellitesInView"), ("MBG-SNMP-LT-MIB", "mbgLtRefPzfState"), ("MBG-SNMP-LT-MIB", "mbgLtRefPzfStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefPzfKorrelation"), ("MBG-SNMP-LT-MIB", "mbgLtRefPzfField"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsMode"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsModeVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefIrigMode"), ("MBG-SNMP-LT-MIB", "mbgLtRefIrigModeVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefPzfMode"), ("MBG-SNMP-LT-MIB", "mbgLtRefPzfModeVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefIrigState"), ("MBG-SNMP-LT-MIB", "mbgLtRefIrigStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefSHSMode"), ("MBG-SNMP-LT-MIB", "mbgLtRefSHSModeVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefSHSTimeDiff"), ("MBG-SNMP-LT-MIB", "mbgLtRefDctState"), ("MBG-SNMP-LT-MIB", "mbgLtRefDctStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefDctField"), ("MBG-SNMP-LT-MIB", "mbgLtRefDctMode"), ("MBG-SNMP-LT-MIB", "mbgLtRefDctModeVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsLeapSecond"), ("MBG-SNMP-LT-MIB", "mbgLtRefGpsLeapCorrection"), ("MBG-SNMP-LT-MIB", "mbgLtRefMrsRef"), ("MBG-SNMP-LT-MIB", "mbgLtRefMrsRefVal"), ("MBG-SNMP-LT-MIB", "mbgLtRefMrsRefList"), ("MBG-SNMP-LT-MIB", "mbgLtRefMrsPrioList"), ("MBG-SNMP-LT-MIB", "mbgLtMrsGpsOffs"), ("MBG-SNMP-LT-MIB", "mbgLtMrsGpsOffsVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsGpsOffsBase"), ("MBG-SNMP-LT-MIB", "mbgLtMrsGpsPrio"), ("MBG-SNMP-LT-MIB", "mbgLtMrsGpsState"), ("MBG-SNMP-LT-MIB", "mbgLtMrsGpsStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsGpsPrecision"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigOffs"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigOffsVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigOffsBase"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigPrio"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigState"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigCorr"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigOffsLimit"), ("MBG-SNMP-LT-MIB", "mbgLtMrsIrigPrecision"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsOffs"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsOffsVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsOffsBase"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsPrio"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsState"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsCorr"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsOffsLimit"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPpsPrecision"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqOffs"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqOffsVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqOffsBase"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqPrio"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqState"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqCorr"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqOffsLimit"), ("MBG-SNMP-LT-MIB", "mbgLtMrsFreqPrecision"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpOffs"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpOffsVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpOffsBase"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpPrio"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpState"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpCorr"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpOffsLimit"), ("MBG-SNMP-LT-MIB", "mbgLtMrsPtpPrecision"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpOffs"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpOffsVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpOffsBase"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpPrio"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpState"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpCorr"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpOffsLimit"), ("MBG-SNMP-LT-MIB", "mbgLtMrsNtpPrecision"), ("MBG-SNMP-LT-MIB", "mbgLtTrapMessage"), ("MBG-SNMP-LT-MIB", "mbgLtCfgHostname"), ("MBG-SNMP-LT-MIB", "mbgLtCfgDomainname"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNameserver1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNameserver2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSyslogserver1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSyslogserver2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgTelnetAccess"), ("MBG-SNMP-LT-MIB", "mbgLtCfgFTPAccess"), ("MBG-SNMP-LT-MIB", "mbgLtCfgHTTPAccess"), ("MBG-SNMP-LT-MIB", "mbgLtCfgHTTPSAccess"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPAccess"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSambaAccess"), ("MBG-SNMP-LT-MIB", "mbgLtCfgIPv6Access"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSSHAccess"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer1IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer1Key"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer1Autokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer1Prefer"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer2IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer2Key"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer2Autokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer2Prefer"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer3IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer3Key"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer3Autokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer3Prefer"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer4Key"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer4Autokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer4Prefer"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer5IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer5Key"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer5Autokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer5Prefer"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer6IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer6Key"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer6Autokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer6Prefer"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer7IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer7Key"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer7Autokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPServer7Prefer"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPStratumLocalClock"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPTrustedKey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPBroadcastIP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPBroadcastKey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPBroadcastAutokey"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPAutokeyFeature"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNTPAtomPPS"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEMailTo"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEMailFrom"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEMailSmarthost"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPTrapReceiver1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPTrapReceiver2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPTrapRec1Community"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPTrapRec2Community"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPReadOnlyCommunity"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPReadWriteCommunity"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPContact"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSNMPLocation"), ("MBG-SNMP-LT-MIB", "mbgLtCfgWMailAddress1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgWMailAddress2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgVP100Display1IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgVP100Display1SN"), ("MBG-SNMP-LT-MIB", "mbgLtCfgVP100Display2IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgVP100Display2SN"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyNTPNotSync"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyNTPStopped"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyServerBoot"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyRefclkNoResponse"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyRefclockNotSync"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyAntennaFaulty"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyAntennaReconnect"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyConfigChanged"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifySHSTimeLimitError"), ("MBG-SNMP-LT-MIB", "mbgLtCfgNotifyLeapSecond"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf0NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf1NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf2NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf3NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf4NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf5NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf6NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf7NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8IPv6IP2")], [("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf8NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9IPv4IP"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9IPv4Netmask"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9IPv4Gateway"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9DHCPClient"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9IPv6IP1"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9IPv6IP2"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9IPv6IP3"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9IPv6Autoconf"), ("MBG-SNMP-LT-MIB", "mbgLtCfgEthernetIf9NetLinkMode"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSHSCritLimit"), ("MBG-SNMP-LT-MIB", "mbgLtCfgSHSWarnLimit"), ("MBG-SNMP-LT-MIB", "mbgLtCfgMRSRefPriority"), ("MBG-SNMP-LT-MIB", "mbgLtCmdExecute"), ("MBG-SNMP-LT-MIB", "mbgLtCmdSetRefTime"), ("MBG-SNMP-LT-MIB", "mbgLtFdmPlFreq"), ("MBG-SNMP-LT-MIB", "mbgLtFdmFreqDev"), ("MBG-SNMP-LT-MIB", "mbgLtFdmNomFreq"), ("MBG-SNMP-LT-MIB", "mbgLtPtpMode"), ("MBG-SNMP-LT-MIB", "mbgLtPtpModeVal"), ("MBG-SNMP-LT-MIB", "mbgLtPtpPortState"), ("MBG-SNMP-LT-MIB", "mbgLtPtpPortStateVal"), ("MBG-SNMP-LT-MIB", "mbgLtPtpOffsetFromGM"), ("MBG-SNMP-LT-MIB", "mbgLtPtpOffsetFromGMVal"), ("MBG-SNMP-LT-MIB", "mbgLtPtpDelay"), ("MBG-SNMP-LT-MIB", "mbgLtPtpDelayVal")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        mbgLtObjectsGroup = mbgLtObjectsGroup.setObjects(*_mbgLtObjectsGroup_obj)
    else:
        mbgLtObjectsGroup = mbgLtObjectsGroup.setObjects(*_mbgLtObjectsGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbgLtObjectsGroup = mbgLtObjectsGroup.setStatus('current')
mbgLtTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5597, 3, 90, 2, 2)).setObjects(("MBG-SNMP-LT-MIB", "mbgLtTrapNTPNotSync"), ("MBG-SNMP-LT-MIB", "mbgLtTrapNTPStopped"), ("MBG-SNMP-LT-MIB", "mbgLtTrapServerBoot"), ("MBG-SNMP-LT-MIB", "mbgLtTrapReceiverNotResponding"), ("MBG-SNMP-LT-MIB", "mbgLtTrapReceiverNotSync"), ("MBG-SNMP-LT-MIB", "mbgLtTrapAntennaFaulty"), ("MBG-SNMP-LT-MIB", "mbgLtTrapAntennaReconnect"), ("MBG-SNMP-LT-MIB", "mbgLtTrapConfigChanged"), ("MBG-SNMP-LT-MIB", "mbgLtTrapLeapSecondAnnounced"), ("MBG-SNMP-LT-MIB", "mbgLtTrapSHSTimeLimitError"), ("MBG-SNMP-LT-MIB", "mbgLtTrapSecondaryRecNotSync"), ("MBG-SNMP-LT-MIB", "mbgLtTrapPowerSupplyFailure"), ("MBG-SNMP-LT-MIB", "mbgLtTrapAntennaShortCircuit"), ("MBG-SNMP-LT-MIB", "mbgLtTrapReceiverSync"), ("MBG-SNMP-LT-MIB", "mbgLtTrapNTPClientAlarm"), ("MBG-SNMP-LT-MIB", "mbgLtTrapPowerSupplyUp"), ("MBG-SNMP-LT-MIB", "mbgLtTrapNetworkDown"), ("MBG-SNMP-LT-MIB", "mbgLtTrapNetworkUp"), ("MBG-SNMP-LT-MIB", "mbgLtTrapSecondaryRecNotResp"), ("MBG-SNMP-LT-MIB", "mbgLtTrapXmrLimitExceeded"), ("MBG-SNMP-LT-MIB", "mbgLtTrapXmrRefDisconnect"), ("MBG-SNMP-LT-MIB", "mbgLtTrapXmrRefReconnect"), ("MBG-SNMP-LT-MIB", "mbgLtTrapFdmError"), ("MBG-SNMP-LT-MIB", "mbgLtTrapSHSTimeLimitWarning"), ("MBG-SNMP-LT-MIB", "mbgLtTrapSecondaryRecSync"), ("MBG-SNMP-LT-MIB", "mbgLtTrapNTPSync"), ("MBG-SNMP-LT-MIB", "mbgLtTrapNormalOperation"), ("MBG-SNMP-LT-MIB", "mbgLtTrapHeartbeat"), ("MBG-SNMP-LT-MIB", "mbgLtTrapTestNotification"), ("MBG-SNMP-LT-MIB", "mbgLtTrapPtpPortDisconnected"), ("MBG-SNMP-LT-MIB", "mbgLtTrapPtpPortConnected"), ("MBG-SNMP-LT-MIB", "mbgLtTrapPtpStateChanged"), ("MBG-SNMP-LT-MIB", "mbgLtTrapPtpError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mbgLtTrapsGroup = mbgLtTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("MBG-SNMP-LT-MIB", mbgLtNtpActiveRefclockOffset=mbgLtNtpActiveRefclockOffset, mbgLtRefGpsSatellitesGood=mbgLtRefGpsSatellitesGood, mbgLtMrsPtpStateVal=mbgLtMrsPtpStateVal, mbgLtCfgEthernetIf4=mbgLtCfgEthernetIf4, mbgLtCfgEthernetIf1=mbgLtCfgEthernetIf1, mbgLtPtpModeVal=mbgLtPtpModeVal, mbgLtCfgNTPServer7IP=mbgLtCfgNTPServer7IP, mbgLtCfgEthernetIf9IPv6IP3=mbgLtCfgEthernetIf9IPv6IP3, mbgLtTrapLeapSecondAnnounced=mbgLtTrapLeapSecondAnnounced, mbgLtRefSHSTimeDiff=mbgLtRefSHSTimeDiff, mbgLtTrapPowerSupplyUp=mbgLtTrapPowerSupplyUp, mbgLtCfgEthernetIf6IPv4Netmask=mbgLtCfgEthernetIf6IPv4Netmask, mbgLtCmdExecute=mbgLtCmdExecute, mbgLtMrsIrigOffsBase=mbgLtMrsIrigOffsBase, mbgLtMrsPpsPrio=mbgLtMrsPpsPrio, mbgLtCfgNotifyAntennaFaulty=mbgLtCfgNotifyAntennaFaulty, mbgLtMrs=mbgLtMrs, mbgLtCfgSNMPContact=mbgLtCfgSNMPContact, mbgLtCfgEthernetIf8DHCPClient=mbgLtCfgEthernetIf8DHCPClient, mbgLtCfgEthernetIf4NetLinkMode=mbgLtCfgEthernetIf4NetLinkMode, mbgLtTrapPtpPortConnected=mbgLtTrapPtpPortConnected, mbgLtTraps=mbgLtTraps, mbgLtCfgNTPServer6Key=mbgLtCfgNTPServer6Key, mbgLtRefIrigMode=mbgLtRefIrigMode, mbgLtCfgEthernetIf4IPv6IP1=mbgLtCfgEthernetIf4IPv6IP1, PYSNMP_MODULE_ID=mbgLantime, mbgLtMrsGpsOffsBase=mbgLtMrsGpsOffsBase, mbgLtCfgNTPServer4Prefer=mbgLtCfgNTPServer4Prefer, mbgLtRefPzfStateVal=mbgLtRefPzfStateVal, mbgLtCfgEthernetIf4IPv6Autoconf=mbgLtCfgEthernetIf4IPv6Autoconf, mbgLtTrapAntennaFaulty=mbgLtTrapAntennaFaulty, mbgLtCfgEthernetIf2IPv4Netmask=mbgLtCfgEthernetIf2IPv4Netmask, mbgLtMrsFreqPrecision=mbgLtMrsFreqPrecision, mbgLtCfgNTPServer5Key=mbgLtCfgNTPServer5Key, mbgLtCfgNotifyAntennaReconnect=mbgLtCfgNotifyAntennaReconnect, mbgLtCfgIPv6Access=mbgLtCfgIPv6Access, mbgLtCfgHTTPSAccess=mbgLtCfgHTTPSAccess, mbgLtCfgEthernetIf9IPv4Gateway=mbgLtCfgEthernetIf9IPv4Gateway, mbgLtCfgNTPServer1IP=mbgLtCfgNTPServer1IP, mbgLtRefclock=mbgLtRefclock, mbgLtCfgEthernetIf7=mbgLtCfgEthernetIf7, mbgLtCfgEthernetIf3IPv4IP=mbgLtCfgEthernetIf3IPv4IP, mbgLtTrapNormalOperation=mbgLtTrapNormalOperation, mbgLtCfgVP100Display1SN=mbgLtCfgVP100Display1SN, mbgLtCfgEthernetIf4IPv4Gateway=mbgLtCfgEthernetIf4IPv4Gateway, mbgLtCfgEthernetIf8=mbgLtCfgEthernetIf8, mbgLtCfgEthernetIf9NetLinkMode=mbgLtCfgEthernetIf9NetLinkMode, mbgLtMrsRefFreq=mbgLtMrsRefFreq, mbgLtMrsIrigOffs=mbgLtMrsIrigOffs, mbgLtTrapSecondaryRecNotResp=mbgLtTrapSecondaryRecNotResp, mbgLtCfgHTTPAccess=mbgLtCfgHTTPAccess, mbgLtMrsNtpCorr=mbgLtMrsNtpCorr, mbgLtCfgEthernetIf7IPv6IP3=mbgLtCfgEthernetIf7IPv6IP3, mbgLtCfgSNMPTrapReceiver2=mbgLtCfgSNMPTrapReceiver2, mbgLtCfgEthernetIf8NetLinkMode=mbgLtCfgEthernetIf8NetLinkMode, mbgLtRefGpsLeapCorrection=mbgLtRefGpsLeapCorrection, mbgLtMrsGpsPrecision=mbgLtMrsGpsPrecision, mbgLtCfgEthernetIf8IPv6IP1=mbgLtCfgEthernetIf8IPv6IP1, mbgLtRefGpsPosition=mbgLtRefGpsPosition, mbgLtMrsRefPtp=mbgLtMrsRefPtp, mbgLtCfgSSHAccess=mbgLtCfgSSHAccess, mbgLtCfgSNMP=mbgLtCfgSNMP, mbgLtRefSHSModeVal=mbgLtRefSHSModeVal, mbgLtCfgEthernetIf9IPv6Autoconf=mbgLtCfgEthernetIf9IPv6Autoconf, mbgLtCfgMRSRefPriority=mbgLtCfgMRSRefPriority, mbgLtCfgNTPServer2Prefer=mbgLtCfgNTPServer2Prefer, mbgLtCfgEthernetIf0=mbgLtCfgEthernetIf0, mbgLtMrsFreqStateVal=mbgLtMrsFreqStateVal, mbgLtTrapNTPClientAlarm=mbgLtTrapNTPClientAlarm, mbgLtTrapXmrRefDisconnect=mbgLtTrapXmrRefDisconnect, mbgLtCfgMRS=mbgLtCfgMRS, mbgLtCfgEthernetIf8IPv4Netmask=mbgLtCfgEthernetIf8IPv4Netmask, mbgLtRefDctStateVal=mbgLtRefDctStateVal, mbgLtCfgEthernetIf2NetLinkMode=mbgLtCfgEthernetIf2NetLinkMode, mbgLtRefDctModeVal=mbgLtRefDctModeVal, mbgLtTrapPowerSupplyFailure=mbgLtTrapPowerSupplyFailure, mbgLtTrapNetworkDown=mbgLtTrapNetworkDown, mbgLtTrapReceiverNotSync=mbgLtTrapReceiverNotSync, mbgLtCfgEthernetIf0NetLinkMode=mbgLtCfgEthernetIf0NetLinkMode, mbgLtTrapXmrLimitExceeded=mbgLtTrapXmrLimitExceeded, mbgLtRefMrsRef=mbgLtRefMrsRef, mbgLtNtpActiveRefclockId=mbgLtNtpActiveRefclockId, mbgLtCfgEthernetIf3IPv4Gateway=mbgLtCfgEthernetIf3IPv4Gateway, mbgLtCfgNotifyServerBoot=mbgLtCfgNotifyServerBoot, mbgLtCfgSNMPLocation=mbgLtCfgSNMPLocation, mbgLtRefGpsSatellitesInView=mbgLtRefGpsSatellitesInView, mbgLtCfgEthernetIf6IPv4Gateway=mbgLtCfgEthernetIf6IPv4Gateway, mbgLtCfgNTPServer4Key=mbgLtCfgNTPServer4Key, mbgLtCfgEthernetIf6NetLinkMode=mbgLtCfgEthernetIf6NetLinkMode, mbgLtCfgEMailSmarthost=mbgLtCfgEMailSmarthost, mbgLtPtp=mbgLtPtp, mbgLtCfgEthernetIf0IPv4Gateway=mbgLtCfgEthernetIf0IPv4Gateway, mbgLtCfgNTPServer7Autokey=mbgLtCfgNTPServer7Autokey, mbgLtCfgEthernetIf5IPv6Autoconf=mbgLtCfgEthernetIf5IPv6Autoconf, mbgLtCfgEMailTo=mbgLtCfgEMailTo, mbgLtMrsPtpOffs=mbgLtMrsPtpOffs, mbgLtCfgEthernetIf6IPv6IP3=mbgLtCfgEthernetIf6IPv6IP3, mbgLtRefGpsMode=mbgLtRefGpsMode, mbgLtCfgNTPBroadcastAutokey=mbgLtCfgNTPBroadcastAutokey, mbgLtRefIrigState=mbgLtRefIrigState, mbgLtCfgNTPServer4=mbgLtCfgNTPServer4, mbgLtCfgEthernetIf8IPv6Autoconf=mbgLtCfgEthernetIf8IPv6Autoconf, mbgLtCfgSHSWarnLimit=mbgLtCfgSHSWarnLimit, mbgLtRefSHSMode=mbgLtRefSHSMode, mbgLtNtp=mbgLtNtp, mbgLtCfgEthernetIf7IPv6Autoconf=mbgLtCfgEthernetIf7IPv6Autoconf, mbgLtCfgSambaAccess=mbgLtCfgSambaAccess, mbgLtMrsPpsOffs=mbgLtMrsPpsOffs, mbgLtMrsNtpStateVal=mbgLtMrsNtpStateVal, mbgLtCfgSHS=mbgLtCfgSHS, mbgLtCfgEthernet=mbgLtCfgEthernet, mbgLtCfgEthernetIf9DHCPClient=mbgLtCfgEthernetIf9DHCPClient, mbgLtRefIrigStateVal=mbgLtRefIrigStateVal, mbgLtFdm=mbgLtFdm, mbgLtMrsIrigOffsLimit=mbgLtMrsIrigOffsLimit, mbgLtCfgNTPAutokeyFeature=mbgLtCfgNTPAutokeyFeature, mbgLtMrsFreqOffsBase=mbgLtMrsFreqOffsBase, mbgLtCfgEthernetIf2IPv4Gateway=mbgLtCfgEthernetIf2IPv4Gateway, mbgLtMrsGpsPrio=mbgLtMrsGpsPrio, mbgLtCfgEthernetIf3IPv6IP3=mbgLtCfgEthernetIf3IPv6IP3, mbgLtCfgNetwork=mbgLtCfgNetwork, mbgLtTrapsGroup=mbgLtTrapsGroup, mbgLtRefClockTypeVal=mbgLtRefClockTypeVal, mbgLtFirmwareVersion=mbgLtFirmwareVersion, mbgLtRefGpsState=mbgLtRefGpsState, mbgLtCfgEMailFrom=mbgLtCfgEMailFrom, mbgLtRefMrsRefVal=mbgLtRefMrsRefVal, mbgLtCfgNTPServer6Autokey=mbgLtCfgNTPServer6Autokey, mbgLtMrsRef=mbgLtMrsRef, mbgLtNtpCurrentState=mbgLtNtpCurrentState, mbgLtFirmwareVersionVal=mbgLtFirmwareVersionVal, mbgLtCfgEthernetIf2IPv6IP3=mbgLtCfgEthernetIf2IPv6IP3, mbgLtCfgNotifyRefclkNoResponse=mbgLtCfgNotifyRefclkNoResponse, mbgLtCfgNameserver2=mbgLtCfgNameserver2, mbgLtCfgNotifySHSTimeLimitError=mbgLtCfgNotifySHSTimeLimitError, mbgLtCfgEthernetIf9IPv6IP1=mbgLtCfgEthernetIf9IPv6IP1, mbgLtCfgHostname=mbgLtCfgHostname, mbgLtTrapFdmError=mbgLtTrapFdmError, mbgLtCfgNTPStratumLocalClock=mbgLtCfgNTPStratumLocalClock, mbgLtCfgNTPServer1Prefer=mbgLtCfgNTPServer1Prefer, mbgLtCfgSNMPTrapRec2Community=mbgLtCfgSNMPTrapRec2Community, mbgLtCfgNTPServer3Key=mbgLtCfgNTPServer3Key, mbgLtCompliance=mbgLtCompliance, mbgLtCfgEthernetIf1IPv4Netmask=mbgLtCfgEthernetIf1IPv4Netmask, mbgLtCfgEthernetIf2IPv4IP=mbgLtCfgEthernetIf2IPv4IP, mbgLtMrsPtpOffsVal=mbgLtMrsPtpOffsVal, mbgLtCfgSNMPTrapReceiver1=mbgLtCfgSNMPTrapReceiver1, mbgLtCompliances=mbgLtCompliances, mbgLtCfgEthernetIf7IPv6IP1=mbgLtCfgEthernetIf7IPv6IP1, mbgLtCfgNTPBroadcastKey=mbgLtCfgNTPBroadcastKey, mbgLtTrapSHSTimeLimitWarning=mbgLtTrapSHSTimeLimitWarning, mbgLtCfgEthernetIf8IPv4IP=mbgLtCfgEthernetIf8IPv4IP, mbgLtCfgNotifyLeapSecond=mbgLtCfgNotifyLeapSecond, mbgLtCfg=mbgLtCfg, mbgLtMrsPpsCorr=mbgLtMrsPpsCorr, mbgLtCfgNTP=mbgLtCfgNTP, mbgLtCfgEthernetIf1IPv4Gateway=mbgLtCfgEthernetIf1IPv4Gateway, mbgLtRefIrigModeVal=mbgLtRefIrigModeVal, mbgLtCfgSNMPAccess=mbgLtCfgSNMPAccess, mbgLtTrapPtpError=mbgLtTrapPtpError, mbgLtCfgNTPServer3Prefer=mbgLtCfgNTPServer3Prefer, mbgLtTrapNTPNotSync=mbgLtTrapNTPNotSync, mbgLtCfgEthernetIf5IPv6IP3=mbgLtCfgEthernetIf5IPv6IP3, mbgLtPtpOffsetFromGMVal=mbgLtPtpOffsetFromGMVal, mbgLtCfgEthernetIf5IPv6IP2=mbgLtCfgEthernetIf5IPv6IP2, mbgLtCfgEthernetIf7IPv4Netmask=mbgLtCfgEthernetIf7IPv4Netmask, mbgLtMrsPtpOffsBase=mbgLtMrsPtpOffsBase, mbgLtRefGpsLeapSecond=mbgLtRefGpsLeapSecond, mbgLtMrsPtpCorr=mbgLtMrsPtpCorr, mbgLtTrapTestNotification=mbgLtTrapTestNotification, mbgLtCfgDomainname=mbgLtCfgDomainname, mbgLtCfgEthernetIf7NetLinkMode=mbgLtCfgEthernetIf7NetLinkMode, mbgLtCfgNTPServer1Autokey=mbgLtCfgNTPServer1Autokey, mbgLtCfgEthernetIf5NetLinkMode=mbgLtCfgEthernetIf5NetLinkMode, mbgLtMrsRefNtp=mbgLtMrsRefNtp, mbgLtCfgNTPServer2IP=mbgLtCfgNTPServer2IP, mbgLtRefPzfModeVal=mbgLtRefPzfModeVal, mbgLtFdmPlFreq=mbgLtFdmPlFreq, mbgLtRefClockType=mbgLtRefClockType, mbgLtCfgNTPServer3Autokey=mbgLtCfgNTPServer3Autokey, mbgLtCfgEthernetIf4IPv4Netmask=mbgLtCfgEthernetIf4IPv4Netmask, mbgLtCfgEthernetIf2=mbgLtCfgEthernetIf2, mbgLtMrsNtpPrecision=mbgLtMrsNtpPrecision, mbgLtMrsGpsState=mbgLtMrsGpsState, mbgLtRefPzfKorrelation=mbgLtRefPzfKorrelation, mbgLtCfgEthernetIf8IPv4Gateway=mbgLtCfgEthernetIf8IPv4Gateway, mbgLtTrapSecondaryRecNotSync=mbgLtTrapSecondaryRecNotSync, mbgLtCfgEthernetIf1IPv6IP2=mbgLtCfgEthernetIf1IPv6IP2, mbgLtCfgSNMPReadWriteCommunity=mbgLtCfgSNMPReadWriteCommunity, mbgLtCfgEthernetIf9=mbgLtCfgEthernetIf9, mbgLtTrapAntennaReconnect=mbgLtTrapAntennaReconnect, mbgLantime=mbgLantime, mbgLtCfgEthernetIf7IPv6IP2=mbgLtCfgEthernetIf7IPv6IP2, mbgLtCfgNotify=mbgLtCfgNotify, mbgLtNtpVersion=mbgLtNtpVersion, mbgLtCfgNTPServer6IP=mbgLtCfgNTPServer6IP, mbgLtCfgEthernetIf2IPv6IP2=mbgLtCfgEthernetIf2IPv6IP2, mbgLtRefDctField=mbgLtRefDctField, mbgLtCfgNTPServer7Prefer=mbgLtCfgNTPServer7Prefer, mbgLtTrapReceiverSync=mbgLtTrapReceiverSync, mbgLtCfgNTPTrustedKey=mbgLtCfgNTPTrustedKey, mbgLtCfgEthernetIf7IPv4IP=mbgLtCfgEthernetIf7IPv4IP, mbgLtTrapMessage=mbgLtTrapMessage, mbgLtMrsPpsPrecision=mbgLtMrsPpsPrecision, mbgLtCfgNTPServer5=mbgLtCfgNTPServer5, mbgLtMrsRefPps=mbgLtMrsRefPps, mbgLtFdmFreqDev=mbgLtFdmFreqDev, mbgLtCfgNTPServer7Key=mbgLtCfgNTPServer7Key, mbgLtCfgNTPServer2=mbgLtCfgNTPServer2, mbgLtMrsNtpOffsBase=mbgLtMrsNtpOffsBase, mbgLtCfgEthernetIf0IPv6IP1=mbgLtCfgEthernetIf0IPv6IP1, mbgLtCfgSyslogserver2=mbgLtCfgSyslogserver2, mbgLtTrapNetworkUp=mbgLtTrapNetworkUp, mbgLtCfgWMailAddress2=mbgLtCfgWMailAddress2, mbgLtCfgWinpopup=mbgLtCfgWinpopup, mbgLtMrsFreqOffsLimit=mbgLtMrsFreqOffsLimit, mbgLtCfgNTPServer6Prefer=mbgLtCfgNTPServer6Prefer, mbgLtCfgEthernetIf5IPv4IP=mbgLtCfgEthernetIf5IPv4IP, mbgLtMrsIrigOffsVal=mbgLtMrsIrigOffsVal, mbgLtCfgNTPServer2Autokey=mbgLtCfgNTPServer2Autokey, mbgLtMrsNtpPrio=mbgLtMrsNtpPrio, mbgLtRefGpsModeVal=mbgLtRefGpsModeVal, mbgLtNtpCurrentStateVal=mbgLtNtpCurrentStateVal, mbgLtRefMrsPrioList=mbgLtRefMrsPrioList, mbgLtMrsFreqState=mbgLtMrsFreqState, mbgLtTrapXmrRefReconnect=mbgLtTrapXmrRefReconnect, mbgLtCfgNTPServer4IP=mbgLtCfgNTPServer4IP, mbgLtTrapNTPStopped=mbgLtTrapNTPStopped, mbgLtMrsPpsOffsVal=mbgLtMrsPpsOffsVal, mbgLtCfgVP100Display1IP=mbgLtCfgVP100Display1IP, mbgLtCfgEthernetIf3IPv4Netmask=mbgLtCfgEthernetIf3IPv4Netmask, mbgLtCfgSHSCritLimit=mbgLtCfgSHSCritLimit, mbgLtRefPzfState=mbgLtRefPzfState, mbgLtCfgEthernetIf6IPv6Autoconf=mbgLtCfgEthernetIf6IPv6Autoconf, mbgLtTrapHeartbeat=mbgLtTrapHeartbeat, mbgLtPtpDelayVal=mbgLtPtpDelayVal, mbgLtCfgEthernetIf6IPv6IP1=mbgLtCfgEthernetIf6IPv6IP1, mbgLtCfgEthernetIf3IPv6IP1=mbgLtCfgEthernetIf3IPv6IP1, mbgLtCfgEthernetIf5IPv4Gateway=mbgLtCfgEthernetIf5IPv4Gateway, mbgLtNtpStratum=mbgLtNtpStratum, mbgLtCfgSNMPTrapRec1Community=mbgLtCfgSNMPTrapRec1Community, mbgLtMrsPpsOffsBase=mbgLtMrsPpsOffsBase, mbgLtCfgNTPServer5IP=mbgLtCfgNTPServer5IP, mbgLtTrapSecondaryRecSync=mbgLtTrapSecondaryRecSync, mbgLtCfgEthernetIf6IPv4IP=mbgLtCfgEthernetIf6IPv4IP, mbgLtMrsRefGps=mbgLtMrsRefGps, mbgLtCfgVP100Display2IP=mbgLtCfgVP100Display2IP, mbgLtCfgSNMPReadOnlyCommunity=mbgLtCfgSNMPReadOnlyCommunity, mbgLtRefDctState=mbgLtRefDctState, mbgLtCfgEthernetIf5IPv6IP1=mbgLtCfgEthernetIf5IPv6IP1, mbgLtPtpOffsetFromGM=mbgLtPtpOffsetFromGM, mbgLtCfgNotifyRefclockNotSync=mbgLtCfgNotifyRefclockNotSync, mbgLtPtpMode=mbgLtPtpMode, mbgLtRefGpsStateVal=mbgLtRefGpsStateVal)
mibBuilder.exportSymbols("MBG-SNMP-LT-MIB", mbgLtCfgNTPServer5Autokey=mbgLtCfgNTPServer5Autokey, mbgLtTrapServerBoot=mbgLtTrapServerBoot, mbgLtCfgFTPAccess=mbgLtCfgFTPAccess, mbgLtTrapSHSTimeLimitError=mbgLtTrapSHSTimeLimitError, mbgLtNtpAuthKeyId=mbgLtNtpAuthKeyId, mbgLtRefClockModeVal=mbgLtRefClockModeVal, mbgLtMrsIrigPrecision=mbgLtMrsIrigPrecision, mbgLtCfgNameserver1=mbgLtCfgNameserver1, mbgLtConformance=mbgLtConformance, mbgLtMrsPtpPrecision=mbgLtMrsPtpPrecision, mbgLtCfgEthernetIf8IPv6IP3=mbgLtCfgEthernetIf8IPv6IP3, mbgLtMrsGpsStateVal=mbgLtMrsGpsStateVal, mbgLtCfgEthernetIf2IPv6IP1=mbgLtCfgEthernetIf2IPv6IP1, mbgLtPtpDelay=mbgLtPtpDelay, mbgLtCfgEthernetIf3=mbgLtCfgEthernetIf3, mbgLtCfgEthernetIf2DHCPClient=mbgLtCfgEthernetIf2DHCPClient, mbgLtMrsPpsState=mbgLtMrsPpsState, mbgLtFdmNomFreq=mbgLtFdmNomFreq, mbgLtCfgEthernetIf0IPv4IP=mbgLtCfgEthernetIf0IPv4IP, mbgLtCmdSetRefTime=mbgLtCmdSetRefTime, mbgLtObjectsGroup=mbgLtObjectsGroup, mbgLtCfgNTPServer1Key=mbgLtCfgNTPServer1Key, mbgLtCfgEthernetIf5DHCPClient=mbgLtCfgEthernetIf5DHCPClient, mbgLtCfgEthernetIf9IPv6IP2=mbgLtCfgEthernetIf9IPv6IP2, mbgLtMrsPtpPrio=mbgLtMrsPtpPrio, mbgLtCfgEthernetIf8IPv6IP2=mbgLtCfgEthernetIf8IPv6IP2, mbgLtInfo=mbgLtInfo, mbgLtCfgNotifyNTPNotSync=mbgLtCfgNotifyNTPNotSync, mbgLtCfgEthernetIf3IPv6IP2=mbgLtCfgEthernetIf3IPv6IP2, mbgLtNtpActiveRefclockOffsetVal=mbgLtNtpActiveRefclockOffsetVal, mbgLtCfgNotifyNTPStopped=mbgLtCfgNotifyNTPStopped, mbgLtCfgEthernetIf1DHCPClient=mbgLtCfgEthernetIf1DHCPClient, mbgLtCfgNTPServer7=mbgLtCfgNTPServer7, mbgLtCfgEthernetIf0IPv6IP2=mbgLtCfgEthernetIf0IPv6IP2, mbgLtCfgEthernetIf6=mbgLtCfgEthernetIf6, mbgLtCfgEthernetIf7DHCPClient=mbgLtCfgEthernetIf7DHCPClient, mbgLtMrsPtpOffsLimit=mbgLtMrsPtpOffsLimit, mbgLtMrsNtpOffsVal=mbgLtMrsNtpOffsVal, mbgLtMrsIrigState=mbgLtMrsIrigState, mbgLtMrsIrigCorr=mbgLtMrsIrigCorr, mbgLtMrsFreqCorr=mbgLtMrsFreqCorr, mbgLtMrsPtpState=mbgLtMrsPtpState, mbgLtTrapPtpPortDisconnected=mbgLtTrapPtpPortDisconnected, mbgLtCfgEthernetIf4DHCPClient=mbgLtCfgEthernetIf4DHCPClient, mbgLtCfgNotifyConfigChanged=mbgLtCfgNotifyConfigChanged, mbgLtMrsPpsStateVal=mbgLtMrsPpsStateVal, mbgLtCfgTelnetAccess=mbgLtCfgTelnetAccess, mbgLtCfgEthernetIf0IPv4Netmask=mbgLtCfgEthernetIf0IPv4Netmask, mbgLtCfgEthernetIf7IPv4Gateway=mbgLtCfgEthernetIf7IPv4Gateway, mbgLtMrsNtpOffs=mbgLtMrsNtpOffs, mbgLtCfgEthernetIf0DHCPClient=mbgLtCfgEthernetIf0DHCPClient, mbgLtRefClockMode=mbgLtRefClockMode, mbgLtTrapConfigChanged=mbgLtTrapConfigChanged, mbgLtMrsRefIrig=mbgLtMrsRefIrig, mbgLtCfgEthernetIf6IPv6IP2=mbgLtCfgEthernetIf6IPv6IP2, mbgLtCfgEthernetIf4IPv6IP2=mbgLtCfgEthernetIf4IPv6IP2, mbgLtCmd=mbgLtCmd, mbgLtCfgEMail=mbgLtCfgEMail, mbgLtMrsIrigStateVal=mbgLtMrsIrigStateVal, mbgLtCfgNTPBroadcastIP=mbgLtCfgNTPBroadcastIP, mbgLtMrsFreqOffsVal=mbgLtMrsFreqOffsVal, mbgLtNtpActiveRefclockName=mbgLtNtpActiveRefclockName, mbgLtGroups=mbgLtGroups, mbgLtMrsIrigPrio=mbgLtMrsIrigPrio, mbgLtCfgEthernetIf1IPv4IP=mbgLtCfgEthernetIf1IPv4IP, mbgLtRefDctMode=mbgLtRefDctMode, mbgLtCfgEthernetIf3NetLinkMode=mbgLtCfgEthernetIf3NetLinkMode, mbgLtCfgEthernetIf1IPv6IP3=mbgLtCfgEthernetIf1IPv6IP3, mbgLtTrapNTPSync=mbgLtTrapNTPSync, mbgLtPtpPortStateVal=mbgLtPtpPortStateVal, mbgLtMrsGpsOffsVal=mbgLtMrsGpsOffsVal, mbgLtCfgEthernetIf3DHCPClient=mbgLtCfgEthernetIf3DHCPClient, mbgLtCfgNTPServer3IP=mbgLtCfgNTPServer3IP, mbgLtTrapAntennaShortCircuit=mbgLtTrapAntennaShortCircuit, mbgLtCfgNTPAtomPPS=mbgLtCfgNTPAtomPPS, mbgLtCfgEthernetIf5=mbgLtCfgEthernetIf5, mbgLtMrsFreqOffs=mbgLtMrsFreqOffs, mbgLtMrsGpsOffs=mbgLtMrsGpsOffs, mbgLtPtpPortState=mbgLtPtpPortState, mbgLtCfgNTPServer4Autokey=mbgLtCfgNTPServer4Autokey, mbgLtCfgVP100Display2SN=mbgLtCfgVP100Display2SN, mbgLtCfgNTPServer5Prefer=mbgLtCfgNTPServer5Prefer, mbgLtCfgEthernetIf9IPv4Netmask=mbgLtCfgEthernetIf9IPv4Netmask, mbgLtCfgEthernetIf0IPv6Autoconf=mbgLtCfgEthernetIf0IPv6Autoconf, mbgLtCfgEthernetIf9IPv4IP=mbgLtCfgEthernetIf9IPv4IP, mbgLtCfgNTPServer6=mbgLtCfgNTPServer6, mbgLtCfgEthernetIf5IPv4Netmask=mbgLtCfgEthernetIf5IPv4Netmask, mbgLtCfgNTPServer3=mbgLtCfgNTPServer3, mbgLtNotifications=mbgLtNotifications, mbgLtCfgEthernetIf6DHCPClient=mbgLtCfgEthernetIf6DHCPClient, mbgLtCfgEthernetIf4IPv4IP=mbgLtCfgEthernetIf4IPv4IP, mbgLtCfgEthernetIf1IPv6IP1=mbgLtCfgEthernetIf1IPv6IP1, mbgLtCfgNTPServer1=mbgLtCfgNTPServer1, mbgLtRefPzfMode=mbgLtRefPzfMode, mbgLtRefGpsSatellites=mbgLtRefGpsSatellites, mbgLtCfgWMailAddress1=mbgLtCfgWMailAddress1, mbgLtTrapPtpStateChanged=mbgLtTrapPtpStateChanged, mbgLtCfgEthernetIf2IPv6Autoconf=mbgLtCfgEthernetIf2IPv6Autoconf, mbgLtCfgEthernetIf4IPv6IP3=mbgLtCfgEthernetIf4IPv6IP3, mbgLtCfgEthernetIf3IPv6Autoconf=mbgLtCfgEthernetIf3IPv6Autoconf, mbgLtCfgNTPServer2Key=mbgLtCfgNTPServer2Key, mbgLtRefPzfField=mbgLtRefPzfField, mbgLtMrsNtpOffsLimit=mbgLtMrsNtpOffsLimit, mbgLtCfgWalldisplay=mbgLtCfgWalldisplay, mbgLtMrsPpsOffsLimit=mbgLtMrsPpsOffsLimit, mbgLtNtpNumberOfRefclocks=mbgLtNtpNumberOfRefclocks, mbgLtCfgEthernetIf1NetLinkMode=mbgLtCfgEthernetIf1NetLinkMode, mbgLtMrsNtpState=mbgLtMrsNtpState, mbgLtCfgEthernetIf1IPv6Autoconf=mbgLtCfgEthernetIf1IPv6Autoconf, mbgLtTrapReceiverNotResponding=mbgLtTrapReceiverNotResponding, mbgLtCfgSyslogserver1=mbgLtCfgSyslogserver1, mbgLtCfgEthernetIf0IPv6IP3=mbgLtCfgEthernetIf0IPv6IP3, mbgLtMrsFreqPrio=mbgLtMrsFreqPrio, mbgLtRefMrsRefList=mbgLtRefMrsRefList)
