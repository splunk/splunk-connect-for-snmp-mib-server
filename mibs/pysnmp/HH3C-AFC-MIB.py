#
# PySNMP MIB module HH3C-AFC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-AFC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:12:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, ModuleIdentity, iso, ObjectIdentity, Integer32, Bits, IpAddress, Counter32, NotificationType, Unsigned32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "iso", "ObjectIdentity", "Integer32", "Bits", "IpAddress", "Counter32", "NotificationType", "Unsigned32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hh3cAFC = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 85))
hh3cAFC.setRevisions(('2008-07-23 00:00',))
if mibBuilder.loadTexts: hh3cAFC.setLastUpdated('200807230000Z')
if mibBuilder.loadTexts: hh3cAFC.setOrganization('HH3C Technologies Co., Ltd.')
hh3cAFCLeaf = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 85, 1))
hh3cDDosAttackTargetIP = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 85, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDDosAttackTargetIP.setStatus('current')
hh3cDDosAttackType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 85, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 24, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1024))).clone(namedValues=NamedValues(("land", 1), ("smurf", 2), ("fraggle", 3), ("winnuke", 4), ("synflood", 5), ("icmpflood", 6), ("udpflood", 7), ("icmpredirect", 8), ("icmpunreachable", 9), ("tracert", 11), ("tcpflag", 12), ("pingofdeath", 13), ("teardrop", 14), ("ipfragment", 15), ("largeicmp", 18), ("sourceroute", 19), ("routerecord", 20), ("fragflood", 24), ("scan", 27), ("appstreamalarm", 29), ("sessionstreamalarm", 30), ("tcpabnormal", 32), ("ipfragabnormal", 33), ("tftpabnormal", 34), ("dnsabnormal", 35), ("httpabnormal", 36), ("telnetabnormal", 37), ("ftpabnormal", 38), ("smtpabnormal", 39), ("pop3abnormal", 40), ("snmpabnormal", 41), ("ackabnormal", 42), ("cc", 43), ("otherabnormal", 1024)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDDosAttackType.setStatus('current')
hh3cDDosAttackPolicy = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 85, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDDosAttackPolicy.setStatus('current')
hh3cDDosAttackThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 85, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDDosAttackThreshold.setStatus('current')
hh3cDDosAttackSpeed = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 85, 1, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDDosAttackSpeed.setStatus('current')
hh3cAFCNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 85, 2))
hh3cAFCNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 85, 2, 0))
hh3cDDosAttackStart = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 85, 2, 0, 1)).setObjects(("HH3C-AFC-MIB", "hh3cDDosAttackTargetIP"), ("HH3C-AFC-MIB", "hh3cDDosAttackType"), ("HH3C-AFC-MIB", "hh3cDDosAttackPolicy"), ("HH3C-AFC-MIB", "hh3cDDosAttackThreshold"), ("HH3C-AFC-MIB", "hh3cDDosAttackSpeed"))
if mibBuilder.loadTexts: hh3cDDosAttackStart.setStatus('current')
hh3cDDosAttackEnd = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 85, 2, 0, 2)).setObjects(("HH3C-AFC-MIB", "hh3cDDosAttackTargetIP"))
if mibBuilder.loadTexts: hh3cDDosAttackEnd.setStatus('current')
mibBuilder.exportSymbols("HH3C-AFC-MIB", hh3cAFCNotify=hh3cAFCNotify, hh3cAFCLeaf=hh3cAFCLeaf, hh3cDDosAttackThreshold=hh3cDDosAttackThreshold, hh3cAFC=hh3cAFC, PYSNMP_MODULE_ID=hh3cAFC, hh3cDDosAttackStart=hh3cDDosAttackStart, hh3cAFCNotifyPrefix=hh3cAFCNotifyPrefix, hh3cDDosAttackTargetIP=hh3cDDosAttackTargetIP, hh3cDDosAttackEnd=hh3cDDosAttackEnd, hh3cDDosAttackSpeed=hh3cDDosAttackSpeed, hh3cDDosAttackType=hh3cDDosAttackType, hh3cDDosAttackPolicy=hh3cDDosAttackPolicy)
