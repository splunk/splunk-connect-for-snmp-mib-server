#
# PySNMP MIB module AC-V5-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AC-V5-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
acProducts, acRegistrations, audioCodes, acGeneric, acBoardMibs = mibBuilder.importSymbols("AUDIOCODES-TYPES-MIB", "acProducts", "acRegistrations", "audioCodes", "acGeneric", "acBoardMibs")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
IpAddress, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, enterprises, MibIdentifier, Unsigned32, Counter32, NotificationType, iso, Counter64, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "enterprises", "MibIdentifier", "Unsigned32", "Counter32", "NotificationType", "iso", "Counter64", "Gauge32", "Integer32")
DisplayString, RowStatus, TextualConvention, TAddress, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TAddress", "DateAndTime")
acV5 = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13))
if mibBuilder.loadTexts: acV5.setLastUpdated('200911251109Z')
if mibBuilder.loadTexts: acV5.setOrganization('AudioCodes Ltd')
acV5Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1))
acv5Interfce = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1))
acV5InterfceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1), )
if mibBuilder.loadTexts: acV5InterfceTable.setStatus('current')
acV5InterfceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1), ).setIndexNames((0, "AC-V5-MIB", "acV5InterfceIndex"))
if mibBuilder.loadTexts: acV5InterfceEntry.setStatus('current')
acV5InterfceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceIndex.setStatus('current')
acV5InterfceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceRowStatus.setStatus('current')
acV5InterfceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offline", 0), ("protectionSwitchOver", 1), ("inService", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceAction.setStatus('current')
acV5InterfceActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceActionResult.setStatus('current')
acV5InterfceOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offline", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceOperationalState.setStatus('current')
acV5InterfceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("offline", 0), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceAdminState.setStatus('current')
acV5InterfceActiveSignalingLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("primary", 0), ("secondary", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceActiveSignalingLink.setStatus('current')
acV5InterfceIdNotEqual = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceIdNotEqual.setStatus('current')
acV5InterfceVariantNotEqual = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceVariantNotEqual.setStatus('current')
acV5InterfceIDCheckTimeOutError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceIDCheckTimeOutError.setStatus('current')
acV5InterfceL2StartupFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceL2StartupFailed.setStatus('current')
acV5InterfceRestartFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceRestartFailed.setStatus('current')
acV5InterfceControlProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceControlProtocolDataLinkError.setStatus('current')
acV5InterfceLinkControlProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceLinkControlProtocolDataLinkError.setStatus('current')
acV5InterfceBCCProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceBCCProtocolDataLinkError.setStatus('current')
acV5InterfcePSTNProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfcePSTNProtocolDataLinkError.setStatus('current')
acV5InterfceProtectionDL1Error = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceProtectionDL1Error.setStatus('current')
acV5InterfceProtectionDL2Error = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceProtectionDL2Error.setStatus('current')
acV5InterfceType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("v52", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceType.setStatus('current')
acV5InterfceProtocolSide = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("an-Side", 0), ("le-Side", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceProtocolSide.setStatus('current')
acV5InterfceId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceId.setStatus('current')
acV5InterfceVariantId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceVariantId.setStatus('current')
acV5InterfceLogicalCchannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceLogicalCchannelId.setStatus('current')
acV5InterfceTraceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 20, 21, 22, 23))).clone(namedValues=NamedValues(("noTrace", 0), ("full-Trace-No-Duplication", 20), ("full-Trace-With-Duplication", 21), ("layer3-Up-Trace-No-Duplication", 22), ("layer3-Up-Trace-With-Duplication", 23)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceTraceLevel.setStatus('current')
acV5InterfceNumberOfPortsInCard = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65533))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceNumberOfPortsInCard.setStatus('current')
acV5InterfceEnableRegisterRecallConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceEnableRegisterRecallConfiguration.setStatus('current')
acV5InterfceRegisterRecallDurationType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceRegisterRecallDurationType.setStatus('current')
acV5Link = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2))
acV5LinkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1), )
if mibBuilder.loadTexts: acV5LinkTable.setStatus('current')
acV5LinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1), ).setIndexNames((0, "AC-V5-MIB", "acV5LinkIndex"))
if mibBuilder.loadTexts: acV5LinkEntry.setStatus('current')
acV5LinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 62))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkIndex.setStatus('current')
acV5LinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkRowStatus.setStatus('current')
acV5LinkAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unBlock", 0), ("block", 1), ("linkIdCheck", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkAction.setStatus('current')
acV5LinkActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkActionResult.setStatus('current')
acV5LinkIdCheckStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succes", 0), ("failure", 1), ("testRejected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkIdCheckStatus.setStatus('current')
acV5LinkOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("operational", 0), ("blocked", 1), ("failed", 2), ("blockedAndFailed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkOperationalState.setStatus('current')
acV5LinkInterfaceIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkInterfaceIndx.setStatus('current')
acV5LinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkId.setStatus('current')
acV5LinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("primary", 1), ("secondary", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkType.setStatus('current')
acV5Action = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3))
acV5PortAction = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1))
acV5PortActionType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 10))).clone(namedValues=NamedValues(("none", 0), ("removeAllPorts", 1), ("removeIFPorts", 2), ("actionDone", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acV5PortActionType.setStatus('current')
acV5PortActionID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acV5PortActionID.setStatus('current')
acV5PortActionParams = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acV5PortActionParams.setStatus('current')
acV5PortActionResult = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5PortActionResult.setStatus('current')
mibBuilder.exportSymbols("AC-V5-MIB", acV5LinkOperationalState=acV5LinkOperationalState, acV5InterfcePSTNProtocolDataLinkError=acV5InterfcePSTNProtocolDataLinkError, acV5PortActionType=acV5PortActionType, acV5InterfceLinkControlProtocolDataLinkError=acV5InterfceLinkControlProtocolDataLinkError, acV5InterfceEnableRegisterRecallConfiguration=acV5InterfceEnableRegisterRecallConfiguration, acV5InterfceTraceLevel=acV5InterfceTraceLevel, acV5InterfceRegisterRecallDurationType=acV5InterfceRegisterRecallDurationType, acV5InterfceOperationalState=acV5InterfceOperationalState, acV5InterfceAdminState=acV5InterfceAdminState, acV5LinkInterfaceIndx=acV5LinkInterfaceIndx, acV5InterfceRowStatus=acV5InterfceRowStatus, acV5InterfceEntry=acV5InterfceEntry, acV5InterfceProtectionDL1Error=acV5InterfceProtectionDL1Error, acV5InterfceId=acV5InterfceId, acv5Interfce=acv5Interfce, acV5LinkTable=acV5LinkTable, acV5LinkRowStatus=acV5LinkRowStatus, acV5PortAction=acV5PortAction, acV5InterfceIndex=acV5InterfceIndex, acV5Configuration=acV5Configuration, acV5LinkAction=acV5LinkAction, acV5InterfceControlProtocolDataLinkError=acV5InterfceControlProtocolDataLinkError, acV5InterfceActiveSignalingLink=acV5InterfceActiveSignalingLink, acV5PortActionResult=acV5PortActionResult, acV5InterfceL2StartupFailed=acV5InterfceL2StartupFailed, acV5LinkIdCheckStatus=acV5LinkIdCheckStatus, acV5InterfceBCCProtocolDataLinkError=acV5InterfceBCCProtocolDataLinkError, acV5InterfceVariantId=acV5InterfceVariantId, acV5Action=acV5Action, acV5InterfceVariantNotEqual=acV5InterfceVariantNotEqual, acV5InterfceNumberOfPortsInCard=acV5InterfceNumberOfPortsInCard, PYSNMP_MODULE_ID=acV5, acV5PortActionID=acV5PortActionID, acV5InterfceProtocolSide=acV5InterfceProtocolSide, acV5LinkIndex=acV5LinkIndex, acV5LinkType=acV5LinkType, acV5LinkActionResult=acV5LinkActionResult, acV5InterfceIdNotEqual=acV5InterfceIdNotEqual, acV5InterfceLogicalCchannelId=acV5InterfceLogicalCchannelId, acV5InterfceTable=acV5InterfceTable, acV5PortActionParams=acV5PortActionParams, acV5InterfceIDCheckTimeOutError=acV5InterfceIDCheckTimeOutError, acV5InterfceType=acV5InterfceType, acV5InterfceProtectionDL2Error=acV5InterfceProtectionDL2Error, acV5InterfceActionResult=acV5InterfceActionResult, acV5LinkEntry=acV5LinkEntry, acV5InterfceRestartFailed=acV5InterfceRestartFailed, acV5=acV5, acV5InterfceAction=acV5InterfceAction, acV5Link=acV5Link, acV5LinkId=acV5LinkId)
