#
# PySNMP MIB module EXTREME-PBQOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:53:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
PortList, L4Port, extremeAgent = mibBuilder.importSymbols("EXTREME-BASE-MIB", "PortList", "L4Port", "extremeAgent")
ifEntry, = mibBuilder.importSymbols("IF-MIB", "ifEntry")
OwnerString, = mibBuilder.importSymbols("RMON-MIB", "OwnerString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, Counter64, Counter32, NotificationType, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32", "NotificationType", "Integer32", "IpAddress")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
extremeQosPolicy = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 7))
if mibBuilder.loadTexts: extremeQosPolicy.setLastUpdated('9903030000Z')
if mibBuilder.loadTexts: extremeQosPolicy.setOrganization('Extreme Networks, Inc.')
extremeNextAvailableQosRuleIndex = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNextAvailableQosRuleIndex.setStatus('current')
extremeQosClearIPFdb = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 7, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeQosClearIPFdb.setStatus('current')
extremeQosClearFdb = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 7, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeQosClearFdb.setStatus('current')
extremeQosRuleTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2), )
if mibBuilder.loadTexts: extremeQosRuleTable.setStatus('current')
extremeQosRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1), ).setIndexNames((0, "EXTREME-PBQOS-MIB", "extremeQosRuleIndex"))
if mibBuilder.loadTexts: extremeQosRuleEntry.setStatus('current')
extremeQosRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleIndex.setStatus('current')
extremeQosRuleScope = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("any", 1), ("signaled", 2), ("inband", 3))).clone('any')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleScope.setStatus('current')
extremeQosRuleDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("any", 1), ("forward", 2), ("backward", 3))).clone('forward')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleDirection.setStatus('current')
extremeQosRuleInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleInPort.setStatus('current')
extremeQosRuleInPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 5), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleInPortMask.setStatus('current')
extremeQosRuleDestAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 6), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleDestAddrStart.setStatus('current')
extremeQosRuleDestAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 7), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleDestAddrEnd.setStatus('current')
extremeQosRuleSrcAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleSrcAddrStart.setStatus('current')
extremeQosRuleSrcAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 9), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleSrcAddrEnd.setStatus('current')
extremeQosRuleProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("any", 1), ("udp", 2), ("tcp", 3), ("other", 4), ("tcpPermitEstablished", 5), ("icmp", 6))).clone('any')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleProtocol.setStatus('current')
extremeQosRuleDestL4PortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 11), L4Port()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleDestL4PortStart.setStatus('current')
extremeQosRuleSourceL4PortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 12), L4Port()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleSourceL4PortStart.setStatus('current')
extremeQosRuleTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleTosMask.setStatus('deprecated')
extremeQosRuleTosMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleTosMatch.setStatus('deprecated')
extremeQosRuleQosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 15), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleQosProfileIndex.setStatus('current')
extremeQosRuleOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 16), OwnerString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleOwner.setStatus('current')
extremeQosRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleRowStatus.setStatus('current')
extremeQosRuleDestL4PortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 18), L4Port()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleDestL4PortEnd.setStatus('current')
extremeQosRuleSourceL4PortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 19), L4Port()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleSourceL4PortEnd.setStatus('current')
extremeQosRulePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 20), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRulePrecedence.setStatus('current')
extremeQosRuleCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeQosRuleCounter.setStatus('current')
extremeQosRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 2, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosRuleName.setStatus('current')
extremeQosCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 7, 3), )
if mibBuilder.loadTexts: extremeQosCapabilitiesTable.setStatus('current')
extremeQosCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 7, 3, 1), )
ifEntry.registerAugmentions(("EXTREME-PBQOS-MIB", "extremeQosCapabilitiesEntry"))
extremeQosCapabilitiesEntry.setIndexNames(*ifEntry.getIndexNames())
if mibBuilder.loadTexts: extremeQosCapabilitiesEntry.setStatus('current')
extremeQosCapMarkIpTosCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 3, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeQosCapMarkIpTosCapable.setStatus('current')
extremeQosCapMatchIpTosCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 7, 3, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeQosCapMatchIpTosCapable.setStatus('current')
mibBuilder.exportSymbols("EXTREME-PBQOS-MIB", extremeQosRuleTable=extremeQosRuleTable, extremeQosRuleEntry=extremeQosRuleEntry, extremeQosCapMarkIpTosCapable=extremeQosCapMarkIpTosCapable, extremeQosRuleSrcAddrStart=extremeQosRuleSrcAddrStart, extremeQosRuleInPortMask=extremeQosRuleInPortMask, extremeQosRuleCounter=extremeQosRuleCounter, extremeQosRuleProtocol=extremeQosRuleProtocol, PYSNMP_MODULE_ID=extremeQosPolicy, extremeQosClearIPFdb=extremeQosClearIPFdb, extremeQosRuleSrcAddrEnd=extremeQosRuleSrcAddrEnd, extremeQosClearFdb=extremeQosClearFdb, extremeQosRuleIndex=extremeQosRuleIndex, extremeQosCapabilitiesTable=extremeQosCapabilitiesTable, extremeNextAvailableQosRuleIndex=extremeNextAvailableQosRuleIndex, extremeQosRuleName=extremeQosRuleName, extremeQosCapabilitiesEntry=extremeQosCapabilitiesEntry, extremeQosRuleDestL4PortStart=extremeQosRuleDestL4PortStart, extremeQosRuleTosMatch=extremeQosRuleTosMatch, extremeQosRuleOwner=extremeQosRuleOwner, extremeQosRuleDirection=extremeQosRuleDirection, extremeQosRuleInPort=extremeQosRuleInPort, extremeQosRuleTosMask=extremeQosRuleTosMask, extremeQosRuleSourceL4PortStart=extremeQosRuleSourceL4PortStart, extremeQosRuleRowStatus=extremeQosRuleRowStatus, extremeQosCapMatchIpTosCapable=extremeQosCapMatchIpTosCapable, extremeQosRuleQosProfileIndex=extremeQosRuleQosProfileIndex, extremeQosRuleDestL4PortEnd=extremeQosRuleDestL4PortEnd, extremeQosRulePrecedence=extremeQosRulePrecedence, extremeQosPolicy=extremeQosPolicy, extremeQosRuleScope=extremeQosRuleScope, extremeQosRuleDestAddrStart=extremeQosRuleDestAddrStart, extremeQosRuleDestAddrEnd=extremeQosRuleDestAddrEnd, extremeQosRuleSourceL4PortEnd=extremeQosRuleSourceL4PortEnd)
