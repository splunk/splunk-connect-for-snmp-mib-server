#
# PySNMP MIB module ALC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
rs232PortIndex, = mibBuilder.importSymbols("RS-232-MIB", "rs232PortIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, NotificationType, Unsigned32, TimeTicks, Counter64, Gauge32, ObjectIdentity, ModuleIdentity, MibIdentifier, Bits, enterprises, NotificationType, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "NotificationType", "Unsigned32", "TimeTicks", "Counter64", "Gauge32", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Bits", "enterprises", "NotificationType", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ngcan = MibIdentifier((1, 3, 6, 1, 4, 1, 1978))
tiger = MibIdentifier((1, 3, 6, 1, 4, 1, 1978, 2))
alcMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 1978, 2, 10))
alcLine = MibIdentifier((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1))
alcTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1978, 2, 10, 2))
alcLineTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1978, 2, 10, 2, 1))
alcCuTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1978, 2, 10, 2, 2))
class NonNegativeInteger(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class InterfaceIndex(Integer32):
    pass

alcNumLines = MibScalar((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 1), NonNegativeInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcNumLines.setStatus('mandatory')
alcLineTable = MibTable((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2), )
if mibBuilder.loadTexts: alcLineTable.setStatus('mandatory')
alcLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1), ).setIndexNames((0, "ALC-MIB", "alcLineIfIndex"))
if mibBuilder.loadTexts: alcLineEntry.setStatus('mandatory')
alcLineIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcLineIfIndex.setStatus('mandatory')
alcLineStationType = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondaryPointtopoint", 2), ("secondaryMultidrop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcLineStationType.setStatus('mandatory')
alcNumCuConfiged = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 3), NonNegativeInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcNumCuConfiged.setStatus('mandatory')
alcDuplexOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("poll-immediate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcDuplexOptions.setStatus('mandatory')
alcT3MinCycleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcT3MinCycleTime.setStatus('mandatory')
alcT6SegmentedMsgTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcT6SegmentedMsgTimer.setStatus('mandatory')
alcN5LiveDeadRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcN5LiveDeadRatio.setStatus('mandatory')
alcSegmentOption = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcSegmentOption.setStatus('mandatory')
alcReassembleOption = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcReassembleOption.setStatus('mandatory')
alcWildIAPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcWildIAPoll.setStatus('mandatory')
alcNumOfIdles = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcNumOfIdles.setStatus('mandatory')
alcInterMsgSync = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcInterMsgSync.setStatus('mandatory')
alcNIA = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(55)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcNIA.setStatus('mandatory')
alcTxOverlengthFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcTxOverlengthFrames.setStatus('mandatory')
alcRxOverlengthFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxOverlengthFrames.setStatus('mandatory')
alcInvalidAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInvalidAddresses.setStatus('mandatory')
alcRxT2Expireds = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxT2Expireds.setStatus('mandatory')
alcDroppedMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcDroppedMsgs.setStatus('mandatory')
alcRxOverlengthFramesThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 19), NonNegativeInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcRxOverlengthFramesThres.setStatus('mandatory')
alcInvalidAddressThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 20), NonNegativeInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcInvalidAddressThres.setStatus('mandatory')
alcRxT2ExpiredThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 21), NonNegativeInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcRxT2ExpiredThres.setStatus('mandatory')
alcTrapReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("rx-overlength-frames", 2), ("invalid-address", 3), ("rx-T2-expired", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcTrapReason.setStatus('mandatory')
alcErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 2, 1, 24), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcErrData.setStatus('mandatory')
alcLineError = NotificationType((1, 3, 6, 1, 4, 1, 1978, 2, 10, 2, 1) + (0,1)).setObjects(("ALC-MIB", "alcLineIfIndex"), ("ALC-MIB", "alcTrapReason"), ("RS-232-MIB", "rs232PortIndex"))
alcCuTable = MibTable((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3), )
if mibBuilder.loadTexts: alcCuTable.setStatus('mandatory')
alcCuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1), ).setIndexNames((0, "ALC-MIB", "alcCuIfIndex"), (0, "ALC-MIB", "alcCuIA"))
if mibBuilder.loadTexts: alcCuEntry.setStatus('mandatory')
alcCuIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuIfIndex.setStatus('mandatory')
alcCuDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuDescr.setStatus('mandatory')
alcCuIA = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuIA.setStatus('mandatory')
alcCuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabledUp", 2), ("enabledDown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcCuStatus.setStatus('mandatory')
alcCuPollCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("cascade", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuPollCmd.setStatus('mandatory')
alcCuOutQueueMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuOutQueueMsgSize.setStatus('mandatory')
alcCuOutQueueCharSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuOutQueueCharSize.setStatus('mandatory')
alcCuN1MaxMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(1920)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuN1MaxMsgSize.setStatus('mandatory')
alcCuT1PollRspTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuT1PollRspTimer.setStatus('mandatory')
alcCuT2MaxRxTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuT2MaxRxTimer.setStatus('mandatory')
alcCuT4NoPollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuT4NoPollTime.setStatus('mandatory')
alcCuC1UpCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuC1UpCounter.setStatus('mandatory')
alcCuC2DownCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuC2DownCounter.setStatus('mandatory')
alcCuN2MaxMsgPerPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuN2MaxMsgPerPoll.setStatus('mandatory')
alcCuMaxCharPerPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuMaxCharPerPoll.setStatus('mandatory')
alcCuN3PollsTillAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuN3PollsTillAlive.setStatus('mandatory')
alcCuN4PollsTillDead = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuN4PollsTillDead.setStatus('mandatory')
alcCuIAResetOption = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuIAResetOption.setStatus('mandatory')
alcCuIAValidationOption = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("responding-stream", 2), ("garbled", 3))).clone('garbled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuIAValidationOption.setStatus('mandatory')
alcCuRxCCCOption = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuRxCCCOption.setStatus('mandatory')
alcCuMaxFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuMaxFrame.setStatus('mandatory')
alcCuSvcMsgHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuSvcMsgHeader.setStatus('mandatory')
alcCuSvcMsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuSvcMsgIndex.setStatus('mandatory')
alcCuSvcMsgTrailer = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuSvcMsgTrailer.setStatus('mandatory')
alcCuStatusChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcCuStatusChanges.setStatus('mandatory')
alcCuRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcCuRxFrames.setStatus('mandatory')
alcCuTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcCuTxFrames.setStatus('mandatory')
alcCuRxChars = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcCuRxChars.setStatus('mandatory')
alcCuTxChars = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcCuTxChars.setStatus('mandatory')
alcCuStatusTrapControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alcCuStatusTrapControl.setStatus('mandatory')
alcCuDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1978, 2, 10, 1, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcCuDropped.setStatus('mandatory')
alcCuState = NotificationType((1, 3, 6, 1, 4, 1, 1978, 2, 10, 2, 2) + (0,1)).setObjects(("ALC-MIB", "alcCuIfIndex"), ("ALC-MIB", "alcCuIA"), ("ALC-MIB", "alcCuStatus"), ("RS-232-MIB", "rs232PortIndex"))
mibBuilder.exportSymbols("ALC-MIB", alcCuTable=alcCuTable, alcCuSvcMsgIndex=alcCuSvcMsgIndex, alcCuIAResetOption=alcCuIAResetOption, alcT3MinCycleTime=alcT3MinCycleTime, alcLine=alcLine, alcCuN2MaxMsgPerPoll=alcCuN2MaxMsgPerPoll, alcRxOverlengthFramesThres=alcRxOverlengthFramesThres, alcDuplexOptions=alcDuplexOptions, alcDroppedMsgs=alcDroppedMsgs, alcReassembleOption=alcReassembleOption, alcCuTxFrames=alcCuTxFrames, alcWildIAPoll=alcWildIAPoll, alcCuN1MaxMsgSize=alcCuN1MaxMsgSize, alcT6SegmentedMsgTimer=alcT6SegmentedMsgTimer, alcCuT1PollRspTimer=alcCuT1PollRspTimer, InterfaceIndex=InterfaceIndex, alcCuMaxCharPerPoll=alcCuMaxCharPerPoll, alcRxOverlengthFrames=alcRxOverlengthFrames, alcCuDescr=alcCuDescr, alcCuIfIndex=alcCuIfIndex, alcN5LiveDeadRatio=alcN5LiveDeadRatio, ngcan=ngcan, alcNumOfIdles=alcNumOfIdles, alcSegmentOption=alcSegmentOption, alcLineError=alcLineError, alcCuC1UpCounter=alcCuC1UpCounter, alcCuRxCCCOption=alcCuRxCCCOption, alcRxT2Expireds=alcRxT2Expireds, alcCuPollCmd=alcCuPollCmd, alcInterMsgSync=alcInterMsgSync, alcCuSvcMsgTrailer=alcCuSvcMsgTrailer, alcTrapReason=alcTrapReason, alcCuDropped=alcCuDropped, alcCuTxChars=alcCuTxChars, alcTraps=alcTraps, alcInvalidAddresses=alcInvalidAddresses, alcCuSvcMsgHeader=alcCuSvcMsgHeader, alcCuT2MaxRxTimer=alcCuT2MaxRxTimer, tiger=tiger, alcErrData=alcErrData, alcLineTable=alcLineTable, alcCuState=alcCuState, alcCuC2DownCounter=alcCuC2DownCounter, alcCuStatusTrapControl=alcCuStatusTrapControl, alcNIA=alcNIA, alcRxT2ExpiredThres=alcRxT2ExpiredThres, NonNegativeInteger=NonNegativeInteger, alcLineStationType=alcLineStationType, alcCuN3PollsTillAlive=alcCuN3PollsTillAlive, alcCuRxChars=alcCuRxChars, alcLineEntry=alcLineEntry, alcCuN4PollsTillDead=alcCuN4PollsTillDead, alcCuT4NoPollTime=alcCuT4NoPollTime, alcNumLines=alcNumLines, alcCuEntry=alcCuEntry, alcCuMaxFrame=alcCuMaxFrame, alcInvalidAddressThres=alcInvalidAddressThres, alcMIB=alcMIB, alcNumCuConfiged=alcNumCuConfiged, alcCuStatusChanges=alcCuStatusChanges, alcCuOutQueueCharSize=alcCuOutQueueCharSize, alcLineTraps=alcLineTraps, alcTxOverlengthFrames=alcTxOverlengthFrames, alcCuRxFrames=alcCuRxFrames, alcCuStatus=alcCuStatus, alcCuOutQueueMsgSize=alcCuOutQueueMsgSize, alcCuIAValidationOption=alcCuIAValidationOption, alcCuTraps=alcCuTraps, alcCuIA=alcCuIA, alcLineIfIndex=alcLineIfIndex)
