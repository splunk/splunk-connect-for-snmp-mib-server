#
# PySNMP MIB module ALTEON-ROOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTEON-ROOT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:58:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, ObjectIdentity, Unsigned32, Gauge32, Integer32, NotificationType, enterprises, MibIdentifier, iso, Counter32, TimeTicks, ModuleIdentity, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "Unsigned32", "Gauge32", "Integer32", "NotificationType", "enterprises", "MibIdentifier", "iso", "Counter32", "TimeTicks", "ModuleIdentity", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
alteon = MibIdentifier((1, 3, 6, 1, 4, 1, 1872))
registration = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1))
private_mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2)).setLabel("private-mibs")
personalContentCache = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 3))
ics = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 3, 1))
switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1))
gs_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 2)).setLabel("gs-switch")
isd = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3))
switch_chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4)).setLabel("switch-chassis")
aws_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5)).setLabel("aws-switch")
virt_admin = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 6)).setLabel("virt-admin")
chassis_8600 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4, 1)).setLabel("chassis-8600")
wsm4Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4, 1, 2))
platform = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 1))
sslOffload = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 2))
firewall = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 3))
contentDirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 4))
aceswitch110 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 1))
acedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 2))
aceswitch180 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 3))
acedirector2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 4))
aceswitch180e = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 5))
acedirector3 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 6))
cachedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 7))
gs_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8)).setLabel("gs-switches")
aceswitch184 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 9))
acedirector4 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 10))
isd_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11)).setLabel("isd-reg")
webswitch_module = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 12)).setLabel("webswitch-module")
aws_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13)).setLabel("aws-switches")
alteonLinkOptimizer = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 14))
wsm_BladeCenter = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 15)).setLabel("wsm-BladeCenter")
alteonLinkOptimizer143 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 16))
alteonLinkOptimizer150 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 17))
ibm_BladeCenterL3 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18)).setLabel("ibm-BladeCenterL3")
copperModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18, 1))
fiberModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18, 2))
aws2000_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1)).setLabel("aws2000-switches")
aws3000_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2)).setLabel("aws3000-switches")
radwarealteon_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3)).setLabel("radwarealteon-switches")
aws2424 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 1))
aws2448 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 2))
aws2224 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 3))
aas2424s = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 4))
aas2208 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 5))
aas2216 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 6))
aws2424E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 7))
aas2424sE5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 8))
aas2208E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 9))
aas2216E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 10))
aws3408 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 1))
aws3416 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 2))
aws3408E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 3))
ods4416 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3, 1))
ods5412 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3, 2))
ods4408 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3, 3))
odsva = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3, 4))
ods5224 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3, 5))
ods_virt_ac = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3, 2, 1)).setLabel("ods-virt-ac")
ods_virt_vadc = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 3, 2, 2)).setLabel("ods-virt-vadc")
chas_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1)).setLabel("chas-switch")
chas_switch_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 1)).setLabel("chas-switch-reg")
alteon708 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 1, 1))
chas_switch_comp_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2)).setLabel("chas-switch-comp-reg")
alteonACPowerSupply7xx = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 1))
alteonDCPowerSupply7xx = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 2))
alteonFan708 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 3))
alteonModuleMP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 5))
alteonModuleSF = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 6))
alteonModuleFE_UTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 7)).setLabel("alteonModuleFE-UTP")
alteonModuleGE_SX = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 8)).setLabel("alteonModuleGE-SX")
alteonModuleGE_UTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 9)).setLabel("alteonModuleGE-UTP")
alteonContentDirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 1))
alteonSSLOffload = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 2))
alteonPersonalContentCache = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 3))
alteonFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 4))
alteonWSS = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 5))
mibBuilder.exportSymbols("ALTEON-ROOT-MIB", isd=isd, virt_admin=virt_admin, aas2208=aas2208, cachedirector=cachedirector, aws2424E5=aws2424E5, alteonPersonalContentCache=alteonPersonalContentCache, contentDirector=contentDirector, alteonACPowerSupply7xx=alteonACPowerSupply7xx, aas2424s=aas2424s, alteonWSS=alteonWSS, alteon708=alteon708, wsm_BladeCenter=wsm_BladeCenter, ods_virt_ac=ods_virt_ac, aws3408E5=aws3408E5, platform=platform, alteonLinkOptimizer=alteonLinkOptimizer, aws_switches=aws_switches, registration=registration, webswitch_module=webswitch_module, aws2224=aws2224, acedirector2=acedirector2, ods4416=ods4416, alteonModuleFE_UTP=alteonModuleFE_UTP, isd_reg=isd_reg, wsm4Traps=wsm4Traps, ods5412=ods5412, copperModule=copperModule, chas_switch_reg=chas_switch_reg, fiberModule=fiberModule, firewall=firewall, ics=ics, switch=switch, odsva=odsva, alteonModuleGE_SX=alteonModuleGE_SX, aceswitch180=aceswitch180, gs_switches=gs_switches, chassis_8600=chassis_8600, alteonModuleSF=alteonModuleSF, chas_switch=chas_switch, switch_chassis=switch_chassis, aas2216=aas2216, ods_virt_vadc=ods_virt_vadc, aceswitch180e=aceswitch180e, ibm_BladeCenterL3=ibm_BladeCenterL3, radwarealteon_switches=radwarealteon_switches, aws3000_switches=aws3000_switches, aws_switch=aws_switch, alteonModuleGE_UTP=alteonModuleGE_UTP, acedirector3=acedirector3, alteonContentDirector=alteonContentDirector, aws2448=aws2448, private_mibs=private_mibs, aceswitch184=aceswitch184, alteonLinkOptimizer143=alteonLinkOptimizer143, acedirector4=acedirector4, aas2424sE5=aas2424sE5, alteonModuleMP=alteonModuleMP, ods5224=ods5224, aas2216E5=aas2216E5, alteon=alteon, alteonDCPowerSupply7xx=alteonDCPowerSupply7xx, sslOffload=sslOffload, gs_switch=gs_switch, chas_switch_comp_reg=chas_switch_comp_reg, personalContentCache=personalContentCache, alteonSSLOffload=alteonSSLOffload, acedirector=acedirector, ods4408=ods4408, aws3408=aws3408, aceswitch110=aceswitch110, aas2208E5=aas2208E5, aws2000_switches=aws2000_switches, aws3416=aws3416, alteonLinkOptimizer150=alteonLinkOptimizer150, alteonFirewall=alteonFirewall, aws2424=aws2424, alteonFan708=alteonFan708)
