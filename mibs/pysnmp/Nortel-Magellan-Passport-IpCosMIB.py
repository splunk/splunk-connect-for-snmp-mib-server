#
# PySNMP MIB module Nortel-Magellan-Passport-IpCosMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-IpCosMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
vrIp, vrIpIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-IpMIB", "vrIp", "vrIpIndex")
StorageType, Integer32, DisplayString, RowStatus, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "Integer32", "DisplayString", "RowStatus", "Unsigned32")
Link, Hex, AsciiStringIndex, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link", "Hex", "AsciiStringIndex", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
vrIndex, = mibBuilder.importSymbols("Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter64, ModuleIdentity, MibIdentifier, Bits, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, Gauge32, ObjectIdentity, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "ModuleIdentity", "MibIdentifier", "Bits", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "Gauge32", "ObjectIdentity", "IpAddress", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipCosMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162))
vrIpPg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20))
vrIpPgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 1), )
if mibBuilder.loadTexts: vrIpPgRowStatusTable.setStatus('mandatory')
vrIpPgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"))
if mibBuilder.loadTexts: vrIpPgRowStatusEntry.setStatus('mandatory')
vrIpPgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgRowStatus.setStatus('mandatory')
vrIpPgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgComponentName.setStatus('mandatory')
vrIpPgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgStorageType.setStatus('mandatory')
vrIpPgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: vrIpPgIndex.setStatus('mandatory')
vrIpPgUsersTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 432), )
if mibBuilder.loadTexts: vrIpPgUsersTable.setStatus('mandatory')
vrIpPgUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 432, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgUsersValue"))
if mibBuilder.loadTexts: vrIpPgUsersEntry.setStatus('mandatory')
vrIpPgUsersValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 432, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgUsersValue.setStatus('mandatory')
vrIpPgUsersRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 432, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vrIpPgUsersRowStatus.setStatus('mandatory')
vrIpPgPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2))
vrIpPgPolicyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 1), )
if mibBuilder.loadTexts: vrIpPgPolicyRowStatusTable.setStatus('mandatory')
vrIpPgPolicyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyRowStatusEntry.setStatus('mandatory')
vrIpPgPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyRowStatus.setStatus('mandatory')
vrIpPgPolicyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyComponentName.setStatus('mandatory')
vrIpPgPolicyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyStorageType.setStatus('mandatory')
vrIpPgPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: vrIpPgPolicyIndex.setStatus('mandatory')
vrIpPgPolicyProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 10), )
if mibBuilder.loadTexts: vrIpPgPolicyProvTable.setStatus('mandatory')
vrIpPgPolicyProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyProvEntry.setStatus('mandatory')
vrIpPgPolicyCosTreatmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyCosTreatmentIndex.setStatus('mandatory')
vrIpPgPolicyTosMap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2))
vrIpPgPolicyTosMapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 1), )
if mibBuilder.loadTexts: vrIpPgPolicyTosMapRowStatusTable.setStatus('mandatory')
vrIpPgPolicyTosMapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyTosMapIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyTosMapRowStatusEntry.setStatus('mandatory')
vrIpPgPolicyTosMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyTosMapRowStatus.setStatus('mandatory')
vrIpPgPolicyTosMapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyTosMapComponentName.setStatus('mandatory')
vrIpPgPolicyTosMapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyTosMapStorageType.setStatus('mandatory')
vrIpPgPolicyTosMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrIpPgPolicyTosMapIndex.setStatus('mandatory')
vrIpPgPolicyTosMapOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 11), )
if mibBuilder.loadTexts: vrIpPgPolicyTosMapOperTable.setStatus('mandatory')
vrIpPgPolicyTosMapOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyTosMapIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyTosMapOperEntry.setStatus('mandatory')
vrIpPgPolicyTosMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyTosMapCos.setStatus('mandatory')
vrIpPgPolicyTosMapTosTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 434), )
if mibBuilder.loadTexts: vrIpPgPolicyTosMapTosTable.setStatus('mandatory')
vrIpPgPolicyTosMapTosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 434, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyTosMapIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyTosMapTosValue"))
if mibBuilder.loadTexts: vrIpPgPolicyTosMapTosEntry.setStatus('mandatory')
vrIpPgPolicyTosMapTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 434, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyTosMapTosValue.setStatus('mandatory')
vrIpPgPolicyTosMapTosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 2, 434, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vrIpPgPolicyTosMapTosRowStatus.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4Flow = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3))
vrIpPgPolicyIpAddrLayer4FlowRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 1), )
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowRowStatusTable.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowRowStatusEntry.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowRowStatus.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowComponentName.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowStorageType.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowIndex.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 10), )
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowProvTable.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowProvEntry.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowPrefix.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowPrefixLength.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 11), )
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 17))).clone(namedValues=NamedValues(("icmp", 1), ("tcp", 6), ("udp", 17))).clone('tcp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowProtocol.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 12), )
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowOperTable.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIpAddrLayer4FlowIndex"))
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowOperEntry.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowCos.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 435), )
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 435, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIpAddrLayer4FlowIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue"))
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 435, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue.setStatus('mandatory')
vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 2, 3, 435, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus.setStatus('mandatory')
vrIpPgCosTreatment = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3))
vrIpPgCosTreatmentRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 1), )
if mibBuilder.loadTexts: vrIpPgCosTreatmentRowStatusTable.setStatus('mandatory')
vrIpPgCosTreatmentRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgCosTreatmentIndex"))
if mibBuilder.loadTexts: vrIpPgCosTreatmentRowStatusEntry.setStatus('mandatory')
vrIpPgCosTreatmentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgCosTreatmentRowStatus.setStatus('mandatory')
vrIpPgCosTreatmentComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgCosTreatmentComponentName.setStatus('mandatory')
vrIpPgCosTreatmentStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgCosTreatmentStorageType.setStatus('mandatory')
vrIpPgCosTreatmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: vrIpPgCosTreatmentIndex.setStatus('mandatory')
vrIpPgCosTreatmentProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10), )
if mibBuilder.loadTexts: vrIpPgCosTreatmentProvTable.setStatus('mandatory')
vrIpPgCosTreatmentProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgIndex"), (0, "Nortel-Magellan-Passport-IpCosMIB", "vrIpPgCosTreatmentIndex"))
if mibBuilder.loadTexts: vrIpPgCosTreatmentProvEntry.setStatus('mandatory')
vrIpPgCosTreatmentCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpPgCosTreatmentCos.setStatus('mandatory')
vrIpPgCosTreatmentSetTosByte = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgCosTreatmentSetTosByte.setStatus('mandatory')
vrIpPgCosTreatmentTos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgCosTreatmentTos.setStatus('mandatory')
vrIpPgCosTreatmentTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10, 1, 5), Hex().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(252)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgCosTreatmentTosMask.setStatus('mandatory')
vrIpPgCosTreatmentEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgCosTreatmentEmissionPriority.setStatus('mandatory')
vrIpPgCosTreatmentDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 20, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpPgCosTreatmentDiscardPriority.setStatus('mandatory')
ipCosGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 1))
ipCosGroupBG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 1, 7))
ipCosGroupBG00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 1, 7, 1))
ipCosGroupBG00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 1, 7, 1, 2))
ipCosCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 3))
ipCosCapabilitiesBG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 3, 7))
ipCosCapabilitiesBG00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 3, 7, 1))
ipCosCapabilitiesBG00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 162, 3, 7, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-IpCosMIB", vrIpPgPolicyProvTable=vrIpPgPolicyProvTable, ipCosCapabilitiesBG00A=ipCosCapabilitiesBG00A, vrIpPgPolicyIpAddrLayer4FlowRowStatusTable=vrIpPgPolicyIpAddrLayer4FlowRowStatusTable, vrIpPgPolicyTosMapIndex=vrIpPgPolicyTosMapIndex, vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry=vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedEntry, vrIpPgPolicyTosMapOperTable=vrIpPgPolicyTosMapOperTable, vrIpPgPolicyIpAddrLayer4FlowPrefixLength=vrIpPgPolicyIpAddrLayer4FlowPrefixLength, vrIpPgPolicyTosMapTosValue=vrIpPgPolicyTosMapTosValue, vrIpPgPolicyProvEntry=vrIpPgPolicyProvEntry, vrIpPgPolicyIpAddrLayer4Flow=vrIpPgPolicyIpAddrLayer4Flow, vrIpPgPolicyIpAddrLayer4FlowIndex=vrIpPgPolicyIpAddrLayer4FlowIndex, vrIpPgCosTreatmentProvTable=vrIpPgCosTreatmentProvTable, vrIpPg=vrIpPg, vrIpPgIndex=vrIpPgIndex, vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue=vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeValue, vrIpPgCosTreatmentStorageType=vrIpPgCosTreatmentStorageType, vrIpPgPolicyTosMapOperEntry=vrIpPgPolicyTosMapOperEntry, ipCosCapabilitiesBG00=ipCosCapabilitiesBG00, ipCosGroup=ipCosGroup, vrIpPgCosTreatmentTos=vrIpPgCosTreatmentTos, ipCosCapabilities=ipCosCapabilities, vrIpPgPolicyTosMapRowStatus=vrIpPgPolicyTosMapRowStatus, vrIpPgRowStatusTable=vrIpPgRowStatusTable, vrIpPgPolicyIpAddrLayer4FlowProvEntry=vrIpPgPolicyIpAddrLayer4FlowProvEntry, vrIpPgPolicyRowStatus=vrIpPgPolicyRowStatus, vrIpPgPolicyRowStatusTable=vrIpPgPolicyRowStatusTable, vrIpPgPolicyIpAddrLayer4FlowComponentName=vrIpPgPolicyIpAddrLayer4FlowComponentName, vrIpPgCosTreatmentCos=vrIpPgCosTreatmentCos, vrIpPgPolicyIpAddrLayer4FlowRowStatus=vrIpPgPolicyIpAddrLayer4FlowRowStatus, vrIpPgPolicyIpAddrLayer4FlowCos=vrIpPgPolicyIpAddrLayer4FlowCos, vrIpPgPolicyIndex=vrIpPgPolicyIndex, vrIpPgCosTreatmentRowStatusTable=vrIpPgCosTreatmentRowStatusTable, vrIpPgCosTreatmentTosMask=vrIpPgCosTreatmentTosMask, vrIpPgPolicyStorageType=vrIpPgPolicyStorageType, vrIpPgRowStatus=vrIpPgRowStatus, vrIpPgComponentName=vrIpPgComponentName, vrIpPgUsersRowStatus=vrIpPgUsersRowStatus, vrIpPgPolicyComponentName=vrIpPgPolicyComponentName, vrIpPgPolicyTosMapTosRowStatus=vrIpPgPolicyTosMapTosRowStatus, vrIpPgCosTreatmentIndex=vrIpPgCosTreatmentIndex, vrIpPgPolicyTosMapTosTable=vrIpPgPolicyTosMapTosTable, vrIpPgPolicyCosTreatmentIndex=vrIpPgPolicyCosTreatmentIndex, vrIpPgPolicyTosMapCos=vrIpPgPolicyTosMapCos, vrIpPgCosTreatmentSetTosByte=vrIpPgCosTreatmentSetTosByte, vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry=vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeEntry, vrIpPgCosTreatmentRowStatusEntry=vrIpPgCosTreatmentRowStatusEntry, vrIpPgPolicyIpAddrLayer4FlowOperTable=vrIpPgPolicyIpAddrLayer4FlowOperTable, vrIpPgCosTreatmentRowStatus=vrIpPgCosTreatmentRowStatus, ipCosGroupBG=ipCosGroupBG, vrIpPgPolicyTosMap=vrIpPgPolicyTosMap, ipCosMIB=ipCosMIB, vrIpPgPolicy=vrIpPgPolicy, vrIpPgCosTreatmentProvEntry=vrIpPgCosTreatmentProvEntry, vrIpPgCosTreatmentEmissionPriority=vrIpPgCosTreatmentEmissionPriority, vrIpPgPolicyTosMapRowStatusTable=vrIpPgPolicyTosMapRowStatusTable, vrIpPgCosTreatmentDiscardPriority=vrIpPgCosTreatmentDiscardPriority, ipCosCapabilitiesBG=ipCosCapabilitiesBG, ipCosGroupBG00=ipCosGroupBG00, vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable=vrIpPgPolicyIpAddrLayer4FlowProtoProvisionedTable, vrIpPgPolicyIpAddrLayer4FlowOperEntry=vrIpPgPolicyIpAddrLayer4FlowOperEntry, vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable=vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeTable, vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus=vrIpPgPolicyIpAddrLayer4FlowPortNumberRangeRowStatus, vrIpPgPolicyTosMapTosEntry=vrIpPgPolicyTosMapTosEntry, ipCosGroupBG00A=ipCosGroupBG00A, vrIpPgPolicyIpAddrLayer4FlowProvTable=vrIpPgPolicyIpAddrLayer4FlowProvTable, vrIpPgPolicyIpAddrLayer4FlowRowStatusEntry=vrIpPgPolicyIpAddrLayer4FlowRowStatusEntry, vrIpPgPolicyTosMapComponentName=vrIpPgPolicyTosMapComponentName, vrIpPgPolicyIpAddrLayer4FlowPrefix=vrIpPgPolicyIpAddrLayer4FlowPrefix, vrIpPgPolicyRowStatusEntry=vrIpPgPolicyRowStatusEntry, vrIpPgPolicyIpAddrLayer4FlowProtocol=vrIpPgPolicyIpAddrLayer4FlowProtocol, vrIpPgPolicyTosMapRowStatusEntry=vrIpPgPolicyTosMapRowStatusEntry, vrIpPgPolicyIpAddrLayer4FlowStorageType=vrIpPgPolicyIpAddrLayer4FlowStorageType, vrIpPgStorageType=vrIpPgStorageType, vrIpPgCosTreatmentComponentName=vrIpPgCosTreatmentComponentName, vrIpPgUsersValue=vrIpPgUsersValue, vrIpPgCosTreatment=vrIpPgCosTreatment, vrIpPgUsersEntry=vrIpPgUsersEntry, vrIpPgRowStatusEntry=vrIpPgRowStatusEntry, vrIpPgUsersTable=vrIpPgUsersTable, vrIpPgPolicyTosMapStorageType=vrIpPgPolicyTosMapStorageType)
