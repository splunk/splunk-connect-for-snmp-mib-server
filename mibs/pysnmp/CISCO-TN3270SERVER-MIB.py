#
# PySNMP MIB module CISCO-TN3270SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TN3270SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:57:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Gauge32, ModuleIdentity, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, NotificationType, IpAddress, ObjectIdentity, iso, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "ModuleIdentity", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "NotificationType", "IpAddress", "ObjectIdentity", "iso", "Unsigned32", "MibIdentifier")
DisplayString, TruthValue, MacAddress, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "MacAddress", "TextualConvention", "TimeStamp")
ciscoTn3270ServerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 54))
ciscoTn3270ServerMIB.setRevisions(('1997-01-22 00:00', '1996-09-12 00:00',))
if mibBuilder.loadTexts: ciscoTn3270ServerMIB.setLastUpdated('9701220000Z')
if mibBuilder.loadTexts: ciscoTn3270ServerMIB.setOrganization('Cisco Systems, Inc.')
tn3270sObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1))
tn3270sGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1))
tn3270sStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2))
tn3270sPu = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3))
tn3270sIp = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4))
tn3270sLu = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5))
tn3270sPuNail = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6))
tn3270sIpNail = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7))
class Tn3270sUnsigned32(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class Tn3270sTCPPort(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class Tn3270sPUIndex(Tn3270sUnsigned32):
    status = 'current'

class Tn3270sLUIndex(Tn3270sUnsigned32):
    status = 'current'

class Tn3270sCpuCard(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(10, 16)

tn3270sGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1), )
if mibBuilder.loadTexts: tn3270sGlobalTable.setStatus('current')
tn3270sGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-TN3270SERVER-MIB", "tn3270sIndex"))
if mibBuilder.loadTexts: tn3270sGlobalEntry.setStatus('current')
tn3270sIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 1), Tn3270sUnsigned32())
if mibBuilder.loadTexts: tn3270sIndex.setStatus('current')
tn3270sCpuCard = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 2), Tn3270sCpuCard()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sCpuCard.setStatus('current')
tn3270sMaxLus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 3), Tn3270sUnsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sMaxLus.setStatus('current')
tn3270sLusInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLusInUse.setStatus('current')
tn3270sStartupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStartupTime.setStatus('current')
tn3270sGlobalTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 6), Tn3270sTCPPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sGlobalTcpPort.setStatus('current')
tn3270sGlobalIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sGlobalIdleTimeout.setStatus('current')
tn3270sGlobalKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sGlobalKeepAlive.setStatus('current')
tn3270sGlobalUnbindAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("keep", 1), ("disconnect", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sGlobalUnbindAction.setStatus('current')
tn3270sGlobalGenericPool = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sGlobalGenericPool.setStatus('current')
tn3270sTimingMarkSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sTimingMarkSupported.setStatus('current')
tn3270sRunningTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 1, 1, 1, 12), Tn3270sUnsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sRunningTime.setStatus('current')
tn3270sStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1), )
if mibBuilder.loadTexts: tn3270sStatsTable.setStatus('current')
tn3270sStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-TN3270SERVER-MIB", "tn3270sIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sStatsServerAddr"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sStatsServerTcpPort"))
if mibBuilder.loadTexts: tn3270sStatsEntry.setStatus('current')
tn3270sStatsServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: tn3270sStatsServerAddr.setStatus('current')
tn3270sStatsServerTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 2), Tn3270sTCPPort())
if mibBuilder.loadTexts: tn3270sStatsServerTcpPort.setStatus('current')
tn3270sStatsMaxSess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsMaxSess.setStatus('current')
tn3270sStatsSpareSess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsSpareSess.setStatus('current')
tn3270sStatsConnectsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsConnectsIn.setStatus('current')
tn3270sStatsDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsDisconnects.setStatus('current')
tn3270sStatsTN3270ConnectsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsTN3270ConnectsFailed.setStatus('current')
tn3270sStatsInboundChains = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsInboundChains.setStatus('current')
tn3270sStatsOutboundChains = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsOutboundChains.setStatus('current')
tn3270sStatsSampledHostResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsSampledHostResponses.setStatus('current')
tn3270sStatsNetSampledHostResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 11), Tn3270sUnsigned32()).setUnits('10milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsNetSampledHostResponseTime.setStatus('current')
tn3270sStatsSampledClientResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsSampledClientResponses.setStatus('current')
tn3270sStatsNetSampledClientResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 2, 1, 1, 13), Tn3270sUnsigned32()).setUnits('10milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sStatsNetSampledClientResponseTime.setStatus('current')
tn3270sPuTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1), )
if mibBuilder.loadTexts: tn3270sPuTable.setStatus('current')
tn3270sPuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-TN3270SERVER-MIB", "tn3270sIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sPuIndex"))
if mibBuilder.loadTexts: tn3270sPuEntry.setStatus('current')
tn3270sPuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 1), Tn3270sPUIndex())
if mibBuilder.loadTexts: tn3270sPuIndex.setStatus('current')
tn3270sPuIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuIpAddr.setStatus('current')
tn3270sPuTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 3), Tn3270sTCPPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuTcpPort.setStatus('current')
tn3270sPuIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuIdleTimeout.setStatus('current')
tn3270sPuKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuKeepAlive.setStatus('current')
tn3270sPuUnbindAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("keep", 1), ("disconnect", 2), ("inherit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuUnbindAction.setStatus('current')
tn3270sPuGenericPool = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2), ("inherit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuGenericPool.setStatus('current')
tn3270sPuState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("shut", 1), ("reset", 2), ("inactive", 3), ("test", 4), ("xid", 5), ("pActpu", 6), ("active", 7), ("actBusy", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuState.setStatus('current')
tn3270sPuType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dlur", 1), ("direct", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuType.setStatus('current')
tn3270sPuLuSeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuLuSeed.setStatus('current')
tn3270sLocalSapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLocalSapAddress.setStatus('current')
tn3270sRemoteSapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sRemoteSapAddress.setStatus('current')
tn3270sRemoteMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sRemoteMacAddress.setStatus('current')
tn3270sPuIpPrecedenceScreen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuIpPrecedenceScreen.setStatus('current')
tn3270sPuIpPrecedencePrinter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuIpPrecedencePrinter.setStatus('current')
tn3270sPuIpTosScreen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuIpTosScreen.setStatus('current')
tn3270sPuIpTosPrinter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuIpTosPrinter.setStatus('current')
tn3270sIpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1), )
if mibBuilder.loadTexts: tn3270sIpTable.setStatus('current')
tn3270sIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-TN3270SERVER-MIB", "tn3270sIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sIpClientAddr"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sIpClientTcpPort"))
if mibBuilder.loadTexts: tn3270sIpEntry.setStatus('current')
tn3270sIpClientAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: tn3270sIpClientAddr.setStatus('current')
tn3270sIpClientTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 2), Tn3270sTCPPort())
if mibBuilder.loadTexts: tn3270sIpClientTcpPort.setStatus('current')
tn3270sIpPuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 3), Tn3270sPUIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sIpPuIndex.setStatus('current')
tn3270sIpLuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 4, 1, 1, 4), Tn3270sLUIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sIpLuIndex.setStatus('current')
tn3270sLuTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1), )
if mibBuilder.loadTexts: tn3270sLuTable.setStatus('current')
tn3270sLuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-TN3270SERVER-MIB", "tn3270sIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sLuPuIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sLuIndex"))
if mibBuilder.loadTexts: tn3270sLuEntry.setStatus('current')
tn3270sLuPuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 1), Tn3270sPUIndex())
if mibBuilder.loadTexts: tn3270sLuPuIndex.setStatus('current')
tn3270sLuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 2), Tn3270sLUIndex())
if mibBuilder.loadTexts: tn3270sLuIndex.setStatus('current')
tn3270sLuClientAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuClientAddr.setStatus('current')
tn3270sLuClientTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 4), Tn3270sTCPPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuClientTcpPort.setStatus('current')
tn3270sLuTelnetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tn3270", 1), ("tn3270e", 2), ("neverConnect", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuTelnetType.setStatus('current')
tn3270sLuTermModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuTermModel.setStatus('current')
tn3270sLuState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("pSdt", 3), ("actSession", 4), ("pActlu", 5), ("pNotifyAv", 6), ("pNotifyUa", 7), ("pReset", 8), ("pPsid", 9), ("pBind", 10), ("pUnbind", 11), ("unbindWt", 12), ("sdtWt", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuState.setStatus('current')
tn3270sLuCurInbPacing = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuCurInbPacing.setStatus('current')
tn3270sLuCurInbQsize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuCurInbQsize.setStatus('current')
tn3270sLuCurOutQsize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuCurOutQsize.setStatus('current')
tn3270sLuIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuIdleTime.setStatus('current')
tn3270sLuType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuType.setStatus('current')
tn3270sLuAppnLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuAppnLinkIndex.setStatus('current')
tn3270sLuLfsid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuLfsid.setStatus('current')
tn3270sLuLastEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 15), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuLastEvent.setStatus('obsolete')
tn3270sLuEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuEvents.setStatus('current')
tn3270sLuNail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 5, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sLuNail.setStatus('current')
tn3270sPuNailTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1), )
if mibBuilder.loadTexts: tn3270sPuNailTable.setStatus('current')
tn3270sPuNailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-TN3270SERVER-MIB", "tn3270sIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sPuIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sPuNailClientIpAddr"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sPuNailLuFirst"))
if mibBuilder.loadTexts: tn3270sPuNailEntry.setStatus('current')
tn3270sPuNailClientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuNailClientIpAddr.setStatus('current')
tn3270sPuNailClientIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuNailClientIpMask.setStatus('current')
tn3270sPuNailType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("screen", 1), ("printer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuNailType.setStatus('current')
tn3270sPuNailLuFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuNailLuFirst.setStatus('current')
tn3270sPuNailLuLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sPuNailLuLast.setStatus('current')
tn3270sIpNailTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1), )
if mibBuilder.loadTexts: tn3270sIpNailTable.setStatus('current')
tn3270sIpNailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-TN3270SERVER-MIB", "tn3270sIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sIpNailClientIpAddr"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sPuIndex"), (0, "CISCO-TN3270SERVER-MIB", "tn3270sIpNailLuFirst"))
if mibBuilder.loadTexts: tn3270sIpNailEntry.setStatus('current')
tn3270sIpNailClientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sIpNailClientIpAddr.setStatus('current')
tn3270sIpNailClientIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sIpNailClientIpMask.setStatus('current')
tn3270sIpNailType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("screen", 1), ("printer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sIpNailType.setStatus('current')
tn3270sIpNailLuFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sIpNailLuFirst.setStatus('current')
tn3270sIpNailLuLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 54, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn3270sIpNailLuLast.setStatus('current')
ciscoTn3270ServerMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 2))
ciscoTn3270ServerMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 3))
ciscoTn3270ServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 1))
ciscoTn3270ServerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 2))
ciscoTn3270ServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 1, 1)).setObjects(("CISCO-TN3270SERVER-MIB", "ciscoTn3270ServerMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTn3270ServerMIBCompliance = ciscoTn3270ServerMIBCompliance.setStatus('current')
ciscoTn3270ServerMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 2, 1)).setObjects(("CISCO-TN3270SERVER-MIB", "tn3270sCpuCard"), ("CISCO-TN3270SERVER-MIB", "tn3270sMaxLus"), ("CISCO-TN3270SERVER-MIB", "tn3270sLusInUse"), ("CISCO-TN3270SERVER-MIB", "tn3270sStartupTime"), ("CISCO-TN3270SERVER-MIB", "tn3270sGlobalTcpPort"), ("CISCO-TN3270SERVER-MIB", "tn3270sGlobalIdleTimeout"), ("CISCO-TN3270SERVER-MIB", "tn3270sGlobalKeepAlive"), ("CISCO-TN3270SERVER-MIB", "tn3270sGlobalUnbindAction"), ("CISCO-TN3270SERVER-MIB", "tn3270sGlobalGenericPool"), ("CISCO-TN3270SERVER-MIB", "tn3270sTimingMarkSupported"), ("CISCO-TN3270SERVER-MIB", "tn3270sRunningTime"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsMaxSess"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsSpareSess"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsConnectsIn"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsDisconnects"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsTN3270ConnectsFailed"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsInboundChains"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsOutboundChains"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsSampledHostResponses"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsNetSampledHostResponseTime"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsSampledClientResponses"), ("CISCO-TN3270SERVER-MIB", "tn3270sStatsNetSampledClientResponseTime"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuIpAddr"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuTcpPort"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuIdleTimeout"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuKeepAlive"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuUnbindAction"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuGenericPool"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuState"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuType"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuLuSeed"), ("CISCO-TN3270SERVER-MIB", "tn3270sLocalSapAddress"), ("CISCO-TN3270SERVER-MIB", "tn3270sRemoteSapAddress"), ("CISCO-TN3270SERVER-MIB", "tn3270sRemoteMacAddress"), ("CISCO-TN3270SERVER-MIB", "tn3270sIpPuIndex"), ("CISCO-TN3270SERVER-MIB", "tn3270sIpLuIndex"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuClientAddr"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuClientTcpPort"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuTelnetType"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuTermModel"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuState"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuCurInbPacing"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuCurInbQsize"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuCurOutQsize"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuIdleTime"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuType"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuAppnLinkIndex"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuLfsid"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuEvents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTn3270ServerMIBGroup = ciscoTn3270ServerMIBGroup.setStatus('current')
ciscoTn3270ServerMIBComplianceObsolete = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 1, 2)).setObjects(("CISCO-TN3270SERVER-MIB", "ciscoTn3270ServerMIBGroupObsolete"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTn3270ServerMIBComplianceObsolete = ciscoTn3270ServerMIBComplianceObsolete.setStatus('obsolete')
ciscoTn3270ServerMIBGroupObsolete = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 2, 2)).setObjects(("CISCO-TN3270SERVER-MIB", "tn3270sLuLastEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTn3270ServerMIBGroupObsolete = ciscoTn3270ServerMIBGroupObsolete.setStatus('obsolete')
ciscoTn3270ServerMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 1, 3)).setObjects(("CISCO-TN3270SERVER-MIB", "ciscoTn3270ServerMIBGroup"), ("CISCO-TN3270SERVER-MIB", "ciscoTn3270ServerMIBGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTn3270ServerMIBComplianceRev1 = ciscoTn3270ServerMIBComplianceRev1.setStatus('current')
ciscoTn3270ServerMIBGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 54, 3, 2, 3)).setObjects(("CISCO-TN3270SERVER-MIB", "tn3270sPuIpPrecedenceScreen"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuIpPrecedencePrinter"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuIpTosScreen"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuIpTosPrinter"), ("CISCO-TN3270SERVER-MIB", "tn3270sLuNail"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuNailClientIpAddr"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuNailClientIpMask"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuNailType"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuNailLuFirst"), ("CISCO-TN3270SERVER-MIB", "tn3270sPuNailLuLast"), ("CISCO-TN3270SERVER-MIB", "tn3270sIpNailClientIpAddr"), ("CISCO-TN3270SERVER-MIB", "tn3270sIpNailClientIpMask"), ("CISCO-TN3270SERVER-MIB", "tn3270sIpNailType"), ("CISCO-TN3270SERVER-MIB", "tn3270sIpNailLuFirst"), ("CISCO-TN3270SERVER-MIB", "tn3270sIpNailLuLast"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTn3270ServerMIBGroupRev1 = ciscoTn3270ServerMIBGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-TN3270SERVER-MIB", tn3270sIpNailClientIpAddr=tn3270sIpNailClientIpAddr, tn3270sStartupTime=tn3270sStartupTime, ciscoTn3270ServerMIBGroupObsolete=ciscoTn3270ServerMIBGroupObsolete, tn3270sLu=tn3270sLu, tn3270sLusInUse=tn3270sLusInUse, tn3270sLuPuIndex=tn3270sLuPuIndex, tn3270sStatsEntry=tn3270sStatsEntry, tn3270sPuNailTable=tn3270sPuNailTable, tn3270sPuType=tn3270sPuType, PYSNMP_MODULE_ID=ciscoTn3270ServerMIB, tn3270sLuLfsid=tn3270sLuLfsid, ciscoTn3270ServerMIBComplianceObsolete=ciscoTn3270ServerMIBComplianceObsolete, tn3270sCpuCard=tn3270sCpuCard, tn3270sPuState=tn3270sPuState, tn3270sPuNailType=tn3270sPuNailType, tn3270sStatsTN3270ConnectsFailed=tn3270sStatsTN3270ConnectsFailed, tn3270sLocalSapAddress=tn3270sLocalSapAddress, tn3270sPuNailLuFirst=tn3270sPuNailLuFirst, tn3270sPuIdleTimeout=tn3270sPuIdleTimeout, tn3270sIpNailLuLast=tn3270sIpNailLuLast, tn3270sRemoteSapAddress=tn3270sRemoteSapAddress, ciscoTn3270ServerMIBConformance=ciscoTn3270ServerMIBConformance, tn3270sStatsServerTcpPort=tn3270sStatsServerTcpPort, tn3270sGlobalEntry=tn3270sGlobalEntry, tn3270sStatsNetSampledHostResponseTime=tn3270sStatsNetSampledHostResponseTime, Tn3270sUnsigned32=Tn3270sUnsigned32, tn3270sLuIdleTime=tn3270sLuIdleTime, tn3270sLuTelnetType=tn3270sLuTelnetType, Tn3270sCpuCard=Tn3270sCpuCard, tn3270sPuGenericPool=tn3270sPuGenericPool, tn3270sLuNail=tn3270sLuNail, tn3270sStatsOutboundChains=tn3270sStatsOutboundChains, tn3270sGlobalIdleTimeout=tn3270sGlobalIdleTimeout, tn3270sObjects=tn3270sObjects, tn3270sIpLuIndex=tn3270sIpLuIndex, ciscoTn3270ServerMIBNotificationPrefix=ciscoTn3270ServerMIBNotificationPrefix, tn3270sLuTable=tn3270sLuTable, tn3270sLuClientTcpPort=tn3270sLuClientTcpPort, tn3270sPuIndex=tn3270sPuIndex, tn3270sIpNailTable=tn3270sIpNailTable, tn3270sPuTable=tn3270sPuTable, tn3270sIpNailEntry=tn3270sIpNailEntry, tn3270sPuIpTosPrinter=tn3270sPuIpTosPrinter, tn3270sTimingMarkSupported=tn3270sTimingMarkSupported, ciscoTn3270ServerMIBGroupRev1=ciscoTn3270ServerMIBGroupRev1, tn3270sPuTcpPort=tn3270sPuTcpPort, tn3270sPuEntry=tn3270sPuEntry, ciscoTn3270ServerMIB=ciscoTn3270ServerMIB, tn3270sLuIndex=tn3270sLuIndex, Tn3270sLUIndex=Tn3270sLUIndex, tn3270sIpClientAddr=tn3270sIpClientAddr, tn3270sGlobalTcpPort=tn3270sGlobalTcpPort, tn3270sGlobalUnbindAction=tn3270sGlobalUnbindAction, tn3270sRemoteMacAddress=tn3270sRemoteMacAddress, tn3270sStatsSampledClientResponses=tn3270sStatsSampledClientResponses, ciscoTn3270ServerMIBCompliances=ciscoTn3270ServerMIBCompliances, tn3270sStatsConnectsIn=tn3270sStatsConnectsIn, Tn3270sTCPPort=Tn3270sTCPPort, tn3270sIpEntry=tn3270sIpEntry, tn3270sPuIpTosScreen=tn3270sPuIpTosScreen, tn3270sStatsInboundChains=tn3270sStatsInboundChains, tn3270sGlobalTable=tn3270sGlobalTable, tn3270sIpNail=tn3270sIpNail, tn3270sPuIpAddr=tn3270sPuIpAddr, tn3270sPuIpPrecedencePrinter=tn3270sPuIpPrecedencePrinter, tn3270sPuIpPrecedenceScreen=tn3270sPuIpPrecedenceScreen, tn3270sIpPuIndex=tn3270sIpPuIndex, tn3270sPuLuSeed=tn3270sPuLuSeed, tn3270sRunningTime=tn3270sRunningTime, tn3270sPuNailLuLast=tn3270sPuNailLuLast, ciscoTn3270ServerMIBGroups=ciscoTn3270ServerMIBGroups, tn3270sLuEvents=tn3270sLuEvents, tn3270sPuKeepAlive=tn3270sPuKeepAlive, tn3270sStats=tn3270sStats, tn3270sPuNailEntry=tn3270sPuNailEntry, tn3270sLuClientAddr=tn3270sLuClientAddr, tn3270sLuAppnLinkIndex=tn3270sLuAppnLinkIndex, tn3270sPuNailClientIpAddr=tn3270sPuNailClientIpAddr, tn3270sIp=tn3270sIp, tn3270sPuNail=tn3270sPuNail, tn3270sStatsServerAddr=tn3270sStatsServerAddr, tn3270sGlobalKeepAlive=tn3270sGlobalKeepAlive, tn3270sLuLastEvent=tn3270sLuLastEvent, tn3270sPu=tn3270sPu, tn3270sMaxLus=tn3270sMaxLus, tn3270sGlobalGenericPool=tn3270sGlobalGenericPool, tn3270sGlobal=tn3270sGlobal, tn3270sStatsMaxSess=tn3270sStatsMaxSess, tn3270sStatsSampledHostResponses=tn3270sStatsSampledHostResponses, tn3270sPuNailClientIpMask=tn3270sPuNailClientIpMask, tn3270sStatsDisconnects=tn3270sStatsDisconnects, tn3270sIpTable=tn3270sIpTable, ciscoTn3270ServerMIBComplianceRev1=ciscoTn3270ServerMIBComplianceRev1, Tn3270sPUIndex=Tn3270sPUIndex, tn3270sLuCurOutQsize=tn3270sLuCurOutQsize, tn3270sLuType=tn3270sLuType, tn3270sStatsSpareSess=tn3270sStatsSpareSess, ciscoTn3270ServerMIBGroup=ciscoTn3270ServerMIBGroup, tn3270sLuState=tn3270sLuState, tn3270sIpNailClientIpMask=tn3270sIpNailClientIpMask, tn3270sLuEntry=tn3270sLuEntry, tn3270sIndex=tn3270sIndex, tn3270sLuTermModel=tn3270sLuTermModel, tn3270sIpNailType=tn3270sIpNailType, tn3270sLuCurInbPacing=tn3270sLuCurInbPacing, tn3270sPuUnbindAction=tn3270sPuUnbindAction, ciscoTn3270ServerMIBCompliance=ciscoTn3270ServerMIBCompliance, tn3270sStatsNetSampledClientResponseTime=tn3270sStatsNetSampledClientResponseTime, tn3270sStatsTable=tn3270sStatsTable, tn3270sIpNailLuFirst=tn3270sIpNailLuFirst, tn3270sIpClientTcpPort=tn3270sIpClientTcpPort, tn3270sLuCurInbQsize=tn3270sLuCurInbQsize)
