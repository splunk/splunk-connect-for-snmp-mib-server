#
# PySNMP MIB module CISCO-VOICE-ATM-DIAL-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VOICE-ATM-DIAL-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
cCallHistoryIndex, = mibBuilder.importSymbols("CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
CvcFaxTransmitRate, CvcInBandSignaling, CvcSpeechCoderRate, CvcGUid = mibBuilder.importSymbols("CISCO-VOICE-COMMON-DIAL-CONTROL-MIB", "CvcFaxTransmitRate", "CvcInBandSignaling", "CvcSpeechCoderRate", "CvcGUid")
callActiveSetupTime, callActiveIndex = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "callActiveSetupTime", "callActiveIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, Unsigned32, Integer32, MibIdentifier, Counter32, NotificationType, Counter64, IpAddress, Gauge32, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Unsigned32", "Integer32", "MibIdentifier", "Counter32", "NotificationType", "Counter64", "IpAddress", "Gauge32", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
ciscoVoiceAtmDialControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 35))
ciscoVoiceAtmDialControlMIB.setRevisions(('2002-11-17 00:00', '1999-03-20 00:00',))
if mibBuilder.loadTexts: ciscoVoiceAtmDialControlMIB.setLastUpdated('200211170000Z')
if mibBuilder.loadTexts: ciscoVoiceAtmDialControlMIB.setOrganization('Cisco Systems, Inc.')
ciscoVoiceAtmDialControlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 1))
cvAtmCallHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1))
cvAtmCallActive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2))
cvAtmDialPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3))
class CvAtmSessionProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("ciscoSwitched", 2), ("aal2Trunk", 3))

cvAtmCallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1), )
if mibBuilder.loadTexts: cvAtmCallHistoryTable.setStatus('current')
cvAtmCallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cvAtmCallHistoryEntry.setStatus('current')
cvAtmCallHistoryConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistoryConnectionId.setStatus('current')
cvAtmCallHistoryVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistoryVpi.setStatus('current')
cvAtmCallHistoryVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistoryVci.setStatus('current')
cvAtmCallHistoryLowerIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistoryLowerIfName.setStatus('current')
cvAtmCallHistorySessionTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistorySessionTarget.setStatus('current')
cvAtmCallHistorySubchannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistorySubchannelID.setStatus('current')
cvAtmCallHistorySessionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 7), CvAtmSessionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistorySessionProtocol.setStatus('current')
cvAtmCallHistoryCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistoryCalledNumber.setStatus('current')
cvAtmCallHistoryDtmfRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistoryDtmfRelay.setStatus('current')
cvAtmCallHistoryUseSeqNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallHistoryUseSeqNumbers.setStatus('current')
cvAtmCallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1), )
if mibBuilder.loadTexts: cvAtmCallActiveTable.setStatus('current')
cvAtmCallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cvAtmCallActiveEntry.setStatus('current')
cvAtmCallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveConnectionId.setStatus('current')
cvAtmCallActiveVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveVpi.setStatus('current')
cvAtmCallActiveVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveVci.setStatus('current')
cvAtmCallActiveLowerIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveLowerIfName.setStatus('current')
cvAtmCallActiveSessionTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveSessionTarget.setStatus('current')
cvAtmCallActiveSubchannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveSubchannelID.setStatus('current')
cvAtmCallActiveSessionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 7), CvAtmSessionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveSessionProtocol.setStatus('current')
cvAtmCallActiveCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveCalledNumber.setStatus('current')
cvAtmCallActiveDtmfRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveDtmfRelay.setStatus('current')
cvAtmCallActiveUseSeqNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 2, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvAtmCallActiveUseSeqNumbers.setStatus('current')
cvAtmPeerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1), )
if mibBuilder.loadTexts: cvAtmPeerCfgTable.setStatus('current')
cvAtmPeerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cvAtmPeerCfgEntry.setStatus('current')
cvAtmPeerCfgSessionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 1), CvAtmSessionProtocol().clone('ciscoSwitched')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgSessionProtocol.setStatus('current')
cvAtmPeerCfgInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgInterfaceName.setStatus('current')
cvAtmPeerCfgVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgVpi.setStatus('current')
cvAtmPeerCfgVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgVci.setStatus('current')
cvAtmPeerCfgVcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgVcName.setStatus('current')
cvAtmPeerCfgCoderRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 6), CvcSpeechCoderRate().clone('g729Ar8000')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgCoderRate.setStatus('current')
cvAtmPeerCfgCodecBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgCodecBytes.setStatus('current')
cvAtmPeerCfgFaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 8), CvcFaxTransmitRate().clone('voiceRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgFaxRate.setStatus('current')
cvAtmPeerCfgFaxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgFaxBytes.setStatus('current')
cvAtmPeerCfgInBandSignaling = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 10), CvcInBandSignaling().clone('cas')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgInBandSignaling.setStatus('current')
cvAtmPeerCfgVADEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgVADEnable.setStatus('current')
cvAtmPeerCfgUseSeqNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgUseSeqNumbers.setStatus('current')
cvAtmPeerCfgDtmfRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 35, 1, 3, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvAtmPeerCfgDtmfRelay.setStatus('current')
ciscoVoiceAtmDialControlMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 2))
ciscoVoiceAtmDialControlMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 2, 0))
ciscoVoiceAtmDialControlMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 3))
ciscoVoiceAtmDialControlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 3, 1))
ciscoVoiceAtmDialControlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 35, 3, 2))
ciscoVoiceAtmDialControlMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 35, 3, 1, 1)).setObjects(("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryGroup"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveGroup"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVoiceAtmDialControlMIBCompliance = ciscoVoiceAtmDialControlMIBCompliance.setStatus('current')
cvAtmCallHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 35, 3, 2, 1)).setObjects(("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryConnectionId"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryVpi"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryVci"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryLowerIfName"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistorySessionTarget"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistorySubchannelID"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistorySessionProtocol"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryCalledNumber"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryDtmfRelay"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallHistoryUseSeqNumbers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvAtmCallHistoryGroup = cvAtmCallHistoryGroup.setStatus('current')
cvAtmCallActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 35, 3, 2, 2)).setObjects(("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveConnectionId"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveVpi"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveVci"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveLowerIfName"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveSessionTarget"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveSubchannelID"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveSessionProtocol"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveCalledNumber"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveDtmfRelay"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmCallActiveUseSeqNumbers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvAtmCallActiveGroup = cvAtmCallActiveGroup.setStatus('current')
cvAtmPeerCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 35, 3, 2, 3)).setObjects(("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgSessionProtocol"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgInterfaceName"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgVpi"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgVci"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgVcName"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgCoderRate"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgCodecBytes"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgFaxRate"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgFaxBytes"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgInBandSignaling"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgVADEnable"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgUseSeqNumbers"), ("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", "cvAtmPeerCfgDtmfRelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvAtmPeerCfgGroup = cvAtmPeerCfgGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-VOICE-ATM-DIAL-CONTROL-MIB", cvAtmCallActiveUseSeqNumbers=cvAtmCallActiveUseSeqNumbers, cvAtmCallHistorySessionProtocol=cvAtmCallHistorySessionProtocol, cvAtmPeerCfgInterfaceName=cvAtmPeerCfgInterfaceName, cvAtmCallActiveVpi=cvAtmCallActiveVpi, cvAtmPeerCfgVcName=cvAtmPeerCfgVcName, cvAtmCallActiveEntry=cvAtmCallActiveEntry, cvAtmCallHistoryLowerIfName=cvAtmCallHistoryLowerIfName, cvAtmCallHistoryGroup=cvAtmCallHistoryGroup, cvAtmCallActiveSessionTarget=cvAtmCallActiveSessionTarget, cvAtmPeerCfgCodecBytes=cvAtmPeerCfgCodecBytes, cvAtmPeerCfgTable=cvAtmPeerCfgTable, cvAtmCallHistoryConnectionId=cvAtmCallHistoryConnectionId, cvAtmDialPeer=cvAtmDialPeer, ciscoVoiceAtmDialControlMIBObjects=ciscoVoiceAtmDialControlMIBObjects, ciscoVoiceAtmDialControlMIBCompliances=ciscoVoiceAtmDialControlMIBCompliances, cvAtmCallHistoryTable=cvAtmCallHistoryTable, ciscoVoiceAtmDialControlMIBGroups=ciscoVoiceAtmDialControlMIBGroups, cvAtmPeerCfgCoderRate=cvAtmPeerCfgCoderRate, cvAtmPeerCfgGroup=cvAtmPeerCfgGroup, cvAtmPeerCfgEntry=cvAtmPeerCfgEntry, PYSNMP_MODULE_ID=ciscoVoiceAtmDialControlMIB, CvAtmSessionProtocol=CvAtmSessionProtocol, cvAtmCallActiveConnectionId=cvAtmCallActiveConnectionId, cvAtmCallActiveVci=cvAtmCallActiveVci, cvAtmCallActiveSubchannelID=cvAtmCallActiveSubchannelID, cvAtmPeerCfgFaxBytes=cvAtmPeerCfgFaxBytes, cvAtmCallActiveDtmfRelay=cvAtmCallActiveDtmfRelay, cvAtmCallActiveTable=cvAtmCallActiveTable, ciscoVoiceAtmDialControlMIBCompliance=ciscoVoiceAtmDialControlMIBCompliance, cvAtmCallHistoryVci=cvAtmCallHistoryVci, cvAtmCallHistoryVpi=cvAtmCallHistoryVpi, cvAtmCallActiveCalledNumber=cvAtmCallActiveCalledNumber, cvAtmCallHistoryDtmfRelay=cvAtmCallHistoryDtmfRelay, cvAtmCallActive=cvAtmCallActive, ciscoVoiceAtmDialControlMIBNotifications=ciscoVoiceAtmDialControlMIBNotifications, cvAtmCallHistoryUseSeqNumbers=cvAtmCallHistoryUseSeqNumbers, cvAtmCallHistoryEntry=cvAtmCallHistoryEntry, cvAtmPeerCfgDtmfRelay=cvAtmPeerCfgDtmfRelay, ciscoVoiceAtmDialControlMIB=ciscoVoiceAtmDialControlMIB, ciscoVoiceAtmDialControlMIBNotificationPrefix=ciscoVoiceAtmDialControlMIBNotificationPrefix, cvAtmCallActiveLowerIfName=cvAtmCallActiveLowerIfName, cvAtmPeerCfgFaxRate=cvAtmPeerCfgFaxRate, cvAtmPeerCfgUseSeqNumbers=cvAtmPeerCfgUseSeqNumbers, cvAtmCallHistoryCalledNumber=cvAtmCallHistoryCalledNumber, cvAtmPeerCfgVADEnable=cvAtmPeerCfgVADEnable, cvAtmCallActiveSessionProtocol=cvAtmCallActiveSessionProtocol, cvAtmPeerCfgVci=cvAtmPeerCfgVci, cvAtmPeerCfgSessionProtocol=cvAtmPeerCfgSessionProtocol, cvAtmCallHistorySubchannelID=cvAtmCallHistorySubchannelID, cvAtmPeerCfgVpi=cvAtmPeerCfgVpi, cvAtmCallHistory=cvAtmCallHistory, cvAtmCallActiveGroup=cvAtmCallActiveGroup, cvAtmPeerCfgInBandSignaling=cvAtmPeerCfgInBandSignaling, ciscoVoiceAtmDialControlMIBConformance=ciscoVoiceAtmDialControlMIBConformance, cvAtmCallHistorySessionTarget=cvAtmCallHistorySessionTarget)
