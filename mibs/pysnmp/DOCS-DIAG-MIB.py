#
# PySNMP MIB module DOCS-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-DIAG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
docsDevEvLevel, docsDevEvId = mibBuilder.importSymbols("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel", "docsDevEvId")
docsIf3CmtsCmRegStatusId, CmtsCmRegState = mibBuilder.importSymbols("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId", "CmtsCmRegState")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, IpAddress, Gauge32, Counter64, iso, TimeTicks, ObjectIdentity, Counter32, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "IpAddress", "Gauge32", "Counter64", "iso", "TimeTicks", "ObjectIdentity", "Counter32", "ModuleIdentity", "Integer32")
TextualConvention, MacAddress, DateAndTime, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DateAndTime", "DisplayString", "TruthValue")
docsDiagMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9))
docsDiagMib.setRevisions(('2007-12-06 00:00', '2007-05-18 00:00', '2006-12-07 00:00',))
if mibBuilder.loadTexts: docsDiagMib.setLastUpdated('200712060000Z')
if mibBuilder.loadTexts: docsDiagMib.setOrganization('Cable Television Laboratories, Inc.')
class TriggerFlag(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("registration", 0), ("rangingRetry", 1))

class RegistrationDetailFlag(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("other", 0), ("initialRanging", 1), ("rangingAutoAdjComplete", 2), ("startEae", 3), ("startDhcpv4", 4), ("startDhcpv6", 5), ("dhcpv4Complete", 6), ("dhcpv6Complete", 7), ("startConfigFileDownload", 8), ("configFileDownloadComplete", 9), ("startRegistration", 10), ("registrationComplete", 11), ("bpiInit", 12), ("operational", 13))

docsDiagLogNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 0))
docsDiagLogMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1))
docsDiagLogGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1))
docsDiagLogTriggersCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2))
docsDiagLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(100)).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogMaxSize.setStatus('current')
docsDiagLogCurrentSize = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogCurrentSize.setStatus('current')
docsDiagLogNotifyLogSizeHighThrshld = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(80)).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogNotifyLogSizeHighThrshld.setStatus('current')
docsDiagLogNotifyLogSizeLowThrshld = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(60)).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogNotifyLogSizeLowThrshld.setStatus('current')
docsDiagLogAging = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 86400)).clone(10080)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogAging.setStatus('current')
docsDiagLogResetAll = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogResetAll.setStatus('current')
docsDiagLogLastResetTime = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogLastResetTime.setStatus('current')
docsDiagLogClearAll = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogClearAll.setStatus('current')
docsDiagLogLastClearTime = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogLastClearTime.setStatus('current')
docsDiagLogNotifCtrl = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 1, 10), Bits().clone(namedValues=NamedValues(("highThresholdReached", 0), ("lowThresholdReached", 1), ("full", 2))).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogNotifCtrl.setStatus('current')
docsDiagLogIncludeTriggers = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2, 1), TriggerFlag().clone(hexValue="C0")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogIncludeTriggers.setStatus('current')
docsDiagLogEnableAgingTriggers = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2, 2), TriggerFlag().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogEnableAgingTriggers.setStatus('current')
docsDiagLogRegTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(90)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogRegTimeInterval.setStatus('current')
docsDiagLogRegDetail = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2, 4), RegistrationDetailFlag().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogRegDetail.setStatus('current')
docsDiagLogRangingRetryType = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("consecutiveMiss", 1), ("missRatio", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogRangingRetryType.setStatus('current')
docsDiagLogRangingRetryThrhld = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 12)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogRangingRetryThrhld.setStatus('current')
docsDiagLogRangingRetryStationMaintNum = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 2, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDiagLogRangingRetryStationMaintNum.setStatus('current')
docsDiagLogTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3), )
if mibBuilder.loadTexts: docsDiagLogTable.setStatus('current')
docsDiagLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"))
if mibBuilder.loadTexts: docsDiagLogEntry.setStatus('current')
docsDiagLogCmMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogCmMacAddr.setStatus('current')
docsDiagLogLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogLastUpdateTime.setStatus('current')
docsDiagLogCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogCreateTime.setStatus('current')
docsDiagLogLastRegTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogLastRegTime.setStatus('current')
docsDiagLogRegCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogRegCount.setStatus('current')
docsDiagLogRangingRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogRangingRetryCount.setStatus('current')
docsDiagLogDetailTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 4), )
if mibBuilder.loadTexts: docsDiagLogDetailTable.setStatus('current')
docsDiagLogDetailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 4, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"), (0, "DOCS-DIAG-MIB", "docsDiagLogDetailTypeValue"))
if mibBuilder.loadTexts: docsDiagLogDetailEntry.setStatus('current')
docsDiagLogDetailTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 4, 1, 1), CmtsCmRegState())
if mibBuilder.loadTexts: docsDiagLogDetailTypeValue.setStatus('current')
docsDiagLogDetailCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogDetailCount.setStatus('current')
docsDiagLogDetailLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogDetailLastUpdate.setStatus('current')
docsDiagLogDetailLastErrorText = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 1, 4, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDiagLogDetailLastErrorText.setStatus('current')
docsDiagLogSizeHighThrshldReached = NotificationType((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 0, 1)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-DIAG-MIB", "docsDiagLogIncludeTriggers"), ("DOCS-DIAG-MIB", "docsDiagLogMaxSize"))
if mibBuilder.loadTexts: docsDiagLogSizeHighThrshldReached.setStatus('current')
docsDiagLogSizeLowThrshldReached = NotificationType((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 0, 2)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-DIAG-MIB", "docsDiagLogIncludeTriggers"), ("DOCS-DIAG-MIB", "docsDiagLogMaxSize"))
if mibBuilder.loadTexts: docsDiagLogSizeLowThrshldReached.setStatus('current')
docsDiagLogSizeFull = NotificationType((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 0, 3)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-DIAG-MIB", "docsDiagLogIncludeTriggers"), ("DOCS-DIAG-MIB", "docsDiagLogMaxSize"))
if mibBuilder.loadTexts: docsDiagLogSizeFull.setStatus('current')
docsDiagLogConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 2))
docsDiagLogCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 2, 1))
docsDiagLogGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 2, 2))
docsDiagLogCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 2, 1, 1)).setObjects(("DOCS-DIAG-MIB", "docsDiagLogBaseGroup"), ("DOCS-DIAG-MIB", "docsDiagLogNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDiagLogCompliance = docsDiagLogCompliance.setStatus('current')
docsDiagLogBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 2, 2, 1)).setObjects(("DOCS-DIAG-MIB", "docsDiagLogMaxSize"), ("DOCS-DIAG-MIB", "docsDiagLogCurrentSize"), ("DOCS-DIAG-MIB", "docsDiagLogNotifyLogSizeHighThrshld"), ("DOCS-DIAG-MIB", "docsDiagLogNotifyLogSizeLowThrshld"), ("DOCS-DIAG-MIB", "docsDiagLogAging"), ("DOCS-DIAG-MIB", "docsDiagLogResetAll"), ("DOCS-DIAG-MIB", "docsDiagLogLastResetTime"), ("DOCS-DIAG-MIB", "docsDiagLogClearAll"), ("DOCS-DIAG-MIB", "docsDiagLogLastClearTime"), ("DOCS-DIAG-MIB", "docsDiagLogNotifCtrl"), ("DOCS-DIAG-MIB", "docsDiagLogIncludeTriggers"), ("DOCS-DIAG-MIB", "docsDiagLogEnableAgingTriggers"), ("DOCS-DIAG-MIB", "docsDiagLogRegTimeInterval"), ("DOCS-DIAG-MIB", "docsDiagLogRegDetail"), ("DOCS-DIAG-MIB", "docsDiagLogRangingRetryType"), ("DOCS-DIAG-MIB", "docsDiagLogRangingRetryThrhld"), ("DOCS-DIAG-MIB", "docsDiagLogRangingRetryStationMaintNum"), ("DOCS-DIAG-MIB", "docsDiagLogCmMacAddr"), ("DOCS-DIAG-MIB", "docsDiagLogLastUpdateTime"), ("DOCS-DIAG-MIB", "docsDiagLogCreateTime"), ("DOCS-DIAG-MIB", "docsDiagLogLastRegTime"), ("DOCS-DIAG-MIB", "docsDiagLogRegCount"), ("DOCS-DIAG-MIB", "docsDiagLogRangingRetryCount"), ("DOCS-DIAG-MIB", "docsDiagLogDetailCount"), ("DOCS-DIAG-MIB", "docsDiagLogDetailLastUpdate"), ("DOCS-DIAG-MIB", "docsDiagLogDetailLastErrorText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDiagLogBaseGroup = docsDiagLogBaseGroup.setStatus('current')
docsDiagLogNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 9, 2, 2, 2)).setObjects(("DOCS-DIAG-MIB", "docsDiagLogSizeHighThrshldReached"), ("DOCS-DIAG-MIB", "docsDiagLogSizeLowThrshldReached"), ("DOCS-DIAG-MIB", "docsDiagLogSizeFull"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDiagLogNotificationGroup = docsDiagLogNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-DIAG-MIB", docsDiagLogLastUpdateTime=docsDiagLogLastUpdateTime, docsDiagLogLastRegTime=docsDiagLogLastRegTime, docsDiagLogResetAll=docsDiagLogResetAll, docsDiagLogGroups=docsDiagLogGroups, docsDiagLogRegCount=docsDiagLogRegCount, docsDiagLogRegDetail=docsDiagLogRegDetail, docsDiagLogRangingRetryCount=docsDiagLogRangingRetryCount, docsDiagLogCurrentSize=docsDiagLogCurrentSize, docsDiagLogIncludeTriggers=docsDiagLogIncludeTriggers, docsDiagLogSizeFull=docsDiagLogSizeFull, docsDiagLogEnableAgingTriggers=docsDiagLogEnableAgingTriggers, docsDiagLogRangingRetryThrhld=docsDiagLogRangingRetryThrhld, PYSNMP_MODULE_ID=docsDiagMib, docsDiagMib=docsDiagMib, docsDiagLogNotifyLogSizeHighThrshld=docsDiagLogNotifyLogSizeHighThrshld, docsDiagLogAging=docsDiagLogAging, RegistrationDetailFlag=RegistrationDetailFlag, docsDiagLogEntry=docsDiagLogEntry, docsDiagLogSizeHighThrshldReached=docsDiagLogSizeHighThrshldReached, docsDiagLogDetailTypeValue=docsDiagLogDetailTypeValue, docsDiagLogGlobal=docsDiagLogGlobal, docsDiagLogNotifCtrl=docsDiagLogNotifCtrl, docsDiagLogNotifications=docsDiagLogNotifications, docsDiagLogCmMacAddr=docsDiagLogCmMacAddr, docsDiagLogDetailLastUpdate=docsDiagLogDetailLastUpdate, docsDiagLogTable=docsDiagLogTable, docsDiagLogDetailCount=docsDiagLogDetailCount, docsDiagLogDetailLastErrorText=docsDiagLogDetailLastErrorText, docsDiagLogLastResetTime=docsDiagLogLastResetTime, docsDiagLogClearAll=docsDiagLogClearAll, docsDiagLogBaseGroup=docsDiagLogBaseGroup, docsDiagLogCreateTime=docsDiagLogCreateTime, docsDiagLogNotificationGroup=docsDiagLogNotificationGroup, TriggerFlag=TriggerFlag, docsDiagLogSizeLowThrshldReached=docsDiagLogSizeLowThrshldReached, docsDiagLogConformance=docsDiagLogConformance, docsDiagLogMibObjects=docsDiagLogMibObjects, docsDiagLogCompliances=docsDiagLogCompliances, docsDiagLogMaxSize=docsDiagLogMaxSize, docsDiagLogLastClearTime=docsDiagLogLastClearTime, docsDiagLogRegTimeInterval=docsDiagLogRegTimeInterval, docsDiagLogTriggersCfg=docsDiagLogTriggersCfg, docsDiagLogRangingRetryType=docsDiagLogRangingRetryType, docsDiagLogDetailEntry=docsDiagLogDetailEntry, docsDiagLogRangingRetryStationMaintNum=docsDiagLogRangingRetryStationMaintNum, docsDiagLogNotifyLogSizeLowThrshld=docsDiagLogNotifyLogSizeLowThrshld, docsDiagLogDetailTable=docsDiagLogDetailTable, docsDiagLogCompliance=docsDiagLogCompliance)
