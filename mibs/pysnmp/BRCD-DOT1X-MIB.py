#
# PySNMP MIB module BRCD-DOT1X-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BRCD-DOT1X-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:23:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, Counter64, MibIdentifier, Counter32, ObjectIdentity, Unsigned32, NotificationType, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "Counter64", "MibIdentifier", "Counter32", "ObjectIdentity", "Unsigned32", "NotificationType", "iso", "ModuleIdentity")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
brcdDot1xAuth = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38))
brcdDot1xAuth.setRevisions(('2010-09-30 00:00',))
if mibBuilder.loadTexts: brcdDot1xAuth.setLastUpdated('201009300000Z')
if mibBuilder.loadTexts: brcdDot1xAuth.setOrganization('Brocade Communications Systems, Inc.')
class VlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

brcdDot1xAuthGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1))
brcdDot1xAuthPortStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2))
brcdDot1xAuthPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 3))
brcdDot1xAuthPortState = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4))
brcdDot1xAuthMacSession = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5))
brcdDot1xAuthGlobalAdminGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 6))
brcdDot1xAuthGlobalConfigQuietperiod = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigQuietperiod.setStatus('current')
brcdDot1xAuthGlobalConfigTxPeriod = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigTxPeriod.setStatus('current')
brcdDot1xAuthGlobalConfigSuppTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigSuppTimeOut.setStatus('current')
brcdDot1xAuthGlobalConfigAuthServerTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)).clone(2)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigAuthServerTimeOut.setStatus('current')
brcdDot1xAuthGlobalConfigMaxReq = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 5), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigMaxReq.setStatus('current')
brcdDot1xAuthGlobalConfigReAuthMax = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 6), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigReAuthMax.setStatus('current')
brcdDot1xAuthGlobalConfigReAuthPeriod = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)).clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigReAuthPeriod.setStatus('current')
brcdDot1xAuthGlobalConfigProtocolVersion = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigProtocolVersion.setStatus('current')
brcdDot1xAuthGlobalConfigTotalPortsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigTotalPortsEnabled.setStatus('current')
brcdDot1xAuthGlobalConfigReauthStatus = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 10), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigReauthStatus.setStatus('current')
brcdDot1xAuthGlobalConfigMacSessionMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigMacSessionMaxAge.setStatus('current')
brcdDot1xAuthGlobalConfigNoAgingDeniedSessions = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 12), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigNoAgingDeniedSessions.setStatus('current')
brcdDot1xAuthGlobalConfigNoAgingPermittedSessions = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 13), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigNoAgingPermittedSessions.setStatus('current')
brcdDot1xAuthGlobalConfigAuthFailAction = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("blockTraffic", 1), ("restrictedVlan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalConfigAuthFailAction.setStatus('current')
brcdDot1xAuthPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1), )
if mibBuilder.loadTexts: brcdDot1xAuthPortStatTable.setStatus('current')
brcdDot1xAuthPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: brcdDot1xAuthPortStatEntry.setStatus('current')
brcdDot1xAuthPortStatRxEAPFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatRxEAPFrames.setStatus('current')
brcdDot1xAuthPortStatTxEAPFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatTxEAPFrames.setStatus('current')
brcdDot1xAuthPortStatRxEAPStartFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatRxEAPStartFrames.setStatus('current')
brcdDot1xAuthPortStatRxEAPLogOffFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatRxEAPLogOffFrames.setStatus('current')
brcdDot1xAuthPortStatRxEAPRespIdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatRxEAPRespIdFrames.setStatus('current')
brcdDot1xAuthPortStatTxEAPReqIdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatTxEAPReqIdFrames.setStatus('current')
brcdDot1xAuthPortStatRxEAPInvalidFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatRxEAPInvalidFrames.setStatus('current')
brcdDot1xAuthPortStatEAPLastFrameVersionRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatEAPLastFrameVersionRx.setStatus('current')
brcdDot1xAuthPortStatRxEAPRespOrIdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatRxEAPRespOrIdFrames.setStatus('current')
brcdDot1xAuthPortStatRxLengthErrorFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatRxLengthErrorFrame.setStatus('current')
brcdDot1xAuthPortStatTxRequestFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatTxRequestFrames.setStatus('current')
brcdDot1xAuthPortStatLastEAPFrameSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 2, 1, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatLastEAPFrameSource.setStatus('current')
brcdDot1xAuthPortStateTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1), )
if mibBuilder.loadTexts: brcdDot1xAuthPortStateTable.setStatus('current')
brcdDot1xAuthPortStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: brcdDot1xAuthPortStateEntry.setStatus('current')
brcdDot1xAuthPortStateMacSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStateMacSessions.setStatus('current')
brcdDot1xAuthPortStateAuthMacSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStateAuthMacSessions.setStatus('current')
brcdDot1xAuthPortStateOriginalPVID = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStateOriginalPVID.setStatus('current')
brcdDot1xAuthPortStatePVIDMacTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatePVIDMacTotal.setStatus('current')
brcdDot1xAuthPortStatePVIDMacAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatePVIDMacAuthorized.setStatus('current')
brcdDot1xAuthPortStatePortVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("radius", 1), ("restricted", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatePortVlanState.setStatus('current')
brcdDot1xAuthPortStatePVID = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStatePVID.setStatus('current')
brcdDot1xAuthPortStateRestrictPVID = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStateRestrictPVID.setStatus('current')
brcdDot1xAuthPortStateRadiusAssignPVID = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthPortStateRadiusAssignPVID.setStatus('current')
brcdDot1xAuthPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 3, 1), )
if mibBuilder.loadTexts: brcdDot1xAuthPortConfigTable.setStatus('current')
brcdDot1xAuthPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: brcdDot1xAuthPortConfigEntry.setStatus('current')
brcdDot1xAuthPortConfigPortControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceUnauthorized", 1), ("controlauto", 2), ("forceAuthorized", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthPortConfigPortControl.setStatus('current')
brcdDot1xAuthPortConfigFilterStrictSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 3, 1, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthPortConfigFilterStrictSec.setStatus('current')
brcdDot1xAuthPortConfigDot1xOnPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 3, 1, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthPortConfigDot1xOnPort.setStatus('current')
brcdDot1xAuthMacSessionTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1), )
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionTable.setStatus('current')
brcdDot1xAuthMacSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "BRCD-DOT1X-MIB", "brcdDot1xAuthMacSessionAuthMac"))
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionEntry.setStatus('current')
brcdDot1xAuthMacSessionAuthMac = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionAuthMac.setStatus('current')
brcdDot1xAuthMacSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionUserName.setStatus('current')
brcdDot1xAuthMacSessionIncomingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 3), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionIncomingVlanId.setStatus('current')
brcdDot1xAuthMacSessionCurrentVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 4), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionCurrentVlanId.setStatus('current')
brcdDot1xAuthMacSessionAccessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("permit", 1), ("blocked", 2), ("restrict", 3), ("init", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionAccessStatus.setStatus('current')
brcdDot1xAuthMacSessionMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionMaxAge.setStatus('current')
brcdDot1xAuthMacSessionAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 7), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionAddrType.setStatus('current')
brcdDot1xAuthMacSessionIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionIpAddr.setStatus('current')
brcdDot1xAuthMacSessionAging = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("software", 1), ("hardware", 2), ("ena", 3), ("notapplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdDot1xAuthMacSessionAging.setStatus('current')
brcdDot1xAuthGlobalAdminConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 38, 6, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brcdDot1xAuthGlobalAdminConfigStatus.setStatus('current')
mibBuilder.exportSymbols("BRCD-DOT1X-MIB", brcdDot1xAuthPortStateEntry=brcdDot1xAuthPortStateEntry, brcdDot1xAuthPortConfigTable=brcdDot1xAuthPortConfigTable, brcdDot1xAuthMacSessionMaxAge=brcdDot1xAuthMacSessionMaxAge, brcdDot1xAuthGlobalConfigTotalPortsEnabled=brcdDot1xAuthGlobalConfigTotalPortsEnabled, brcdDot1xAuthGlobalConfigProtocolVersion=brcdDot1xAuthGlobalConfigProtocolVersion, brcdDot1xAuthPortStatistics=brcdDot1xAuthPortStatistics, brcdDot1xAuthGlobalConfigReauthStatus=brcdDot1xAuthGlobalConfigReauthStatus, brcdDot1xAuthMacSessionIpAddr=brcdDot1xAuthMacSessionIpAddr, brcdDot1xAuthPortStatLastEAPFrameSource=brcdDot1xAuthPortStatLastEAPFrameSource, brcdDot1xAuthMacSessionAccessStatus=brcdDot1xAuthMacSessionAccessStatus, brcdDot1xAuthPortStatRxLengthErrorFrame=brcdDot1xAuthPortStatRxLengthErrorFrame, brcdDot1xAuthPortStatRxEAPRespOrIdFrames=brcdDot1xAuthPortStatRxEAPRespOrIdFrames, brcdDot1xAuthPortStatTable=brcdDot1xAuthPortStatTable, brcdDot1xAuthMacSessionCurrentVlanId=brcdDot1xAuthMacSessionCurrentVlanId, brcdDot1xAuthPortStateOriginalPVID=brcdDot1xAuthPortStateOriginalPVID, brcdDot1xAuthMacSessionIncomingVlanId=brcdDot1xAuthMacSessionIncomingVlanId, brcdDot1xAuthMacSessionAddrType=brcdDot1xAuthMacSessionAddrType, brcdDot1xAuthGlobalAdminConfigStatus=brcdDot1xAuthGlobalAdminConfigStatus, brcdDot1xAuthPortStateMacSessions=brcdDot1xAuthPortStateMacSessions, brcdDot1xAuthPortStateRestrictPVID=brcdDot1xAuthPortStateRestrictPVID, brcdDot1xAuthPortStatePVID=brcdDot1xAuthPortStatePVID, brcdDot1xAuthGlobalConfigAuthServerTimeOut=brcdDot1xAuthGlobalConfigAuthServerTimeOut, brcdDot1xAuthPortConfigPortControl=brcdDot1xAuthPortConfigPortControl, brcdDot1xAuthPortStatRxEAPLogOffFrames=brcdDot1xAuthPortStatRxEAPLogOffFrames, brcdDot1xAuthGlobalConfigMaxReq=brcdDot1xAuthGlobalConfigMaxReq, PYSNMP_MODULE_ID=brcdDot1xAuth, brcdDot1xAuthPortStatRxEAPRespIdFrames=brcdDot1xAuthPortStatRxEAPRespIdFrames, brcdDot1xAuthPortStateTable=brcdDot1xAuthPortStateTable, brcdDot1xAuthGlobalConfigNoAgingPermittedSessions=brcdDot1xAuthGlobalConfigNoAgingPermittedSessions, brcdDot1xAuthGlobalConfigQuietperiod=brcdDot1xAuthGlobalConfigQuietperiod, brcdDot1xAuthGlobalConfigReAuthPeriod=brcdDot1xAuthGlobalConfigReAuthPeriod, brcdDot1xAuthPortConfigEntry=brcdDot1xAuthPortConfigEntry, brcdDot1xAuthMacSessionAuthMac=brcdDot1xAuthMacSessionAuthMac, brcdDot1xAuthPortStatTxRequestFrames=brcdDot1xAuthPortStatTxRequestFrames, brcdDot1xAuthPortConfigDot1xOnPort=brcdDot1xAuthPortConfigDot1xOnPort, brcdDot1xAuthPortStatEAPLastFrameVersionRx=brcdDot1xAuthPortStatEAPLastFrameVersionRx, brcdDot1xAuthPortStatePortVlanState=brcdDot1xAuthPortStatePortVlanState, brcdDot1xAuthGlobalConfigReAuthMax=brcdDot1xAuthGlobalConfigReAuthMax, brcdDot1xAuthMacSessionEntry=brcdDot1xAuthMacSessionEntry, brcdDot1xAuthPortState=brcdDot1xAuthPortState, brcdDot1xAuthGlobalConfigSuppTimeOut=brcdDot1xAuthGlobalConfigSuppTimeOut, brcdDot1xAuthMacSessionUserName=brcdDot1xAuthMacSessionUserName, brcdDot1xAuthPortStatEntry=brcdDot1xAuthPortStatEntry, VlanId=VlanId, brcdDot1xAuthGlobalAdminGroup=brcdDot1xAuthGlobalAdminGroup, brcdDot1xAuthPortStateRadiusAssignPVID=brcdDot1xAuthPortStateRadiusAssignPVID, brcdDot1xAuthMacSessionAging=brcdDot1xAuthMacSessionAging, brcdDot1xAuthPortStatePVIDMacTotal=brcdDot1xAuthPortStatePVIDMacTotal, brcdDot1xAuthGlobalConfigTxPeriod=brcdDot1xAuthGlobalConfigTxPeriod, brcdDot1xAuthGlobalConfigMacSessionMaxAge=brcdDot1xAuthGlobalConfigMacSessionMaxAge, brcdDot1xAuthMacSession=brcdDot1xAuthMacSession, brcdDot1xAuthGlobalConfigAuthFailAction=brcdDot1xAuthGlobalConfigAuthFailAction, brcdDot1xAuthPortStatePVIDMacAuthorized=brcdDot1xAuthPortStatePVIDMacAuthorized, brcdDot1xAuthPortStatRxEAPStartFrames=brcdDot1xAuthPortStatRxEAPStartFrames, brcdDot1xAuthGlobalConfigNoAgingDeniedSessions=brcdDot1xAuthGlobalConfigNoAgingDeniedSessions, brcdDot1xAuthGlobalConfigGroup=brcdDot1xAuthGlobalConfigGroup, brcdDot1xAuthPortConfigFilterStrictSec=brcdDot1xAuthPortConfigFilterStrictSec, brcdDot1xAuthMacSessionTable=brcdDot1xAuthMacSessionTable, brcdDot1xAuthPortStatTxEAPFrames=brcdDot1xAuthPortStatTxEAPFrames, brcdDot1xAuthPortStatTxEAPReqIdFrames=brcdDot1xAuthPortStatTxEAPReqIdFrames, brcdDot1xAuthPortConfig=brcdDot1xAuthPortConfig, brcdDot1xAuthPortStatRxEAPInvalidFrames=brcdDot1xAuthPortStatRxEAPInvalidFrames, brcdDot1xAuthPortStatRxEAPFrames=brcdDot1xAuthPortStatRxEAPFrames, brcdDot1xAuth=brcdDot1xAuth, brcdDot1xAuthPortStateAuthMacSessions=brcdDot1xAuthPortStateAuthMacSessions)
