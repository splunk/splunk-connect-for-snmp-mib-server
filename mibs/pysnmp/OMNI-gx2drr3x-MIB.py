#
# PySNMP MIB module OMNI-gx2drr3x-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OMNI-gx2drr3x-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:24:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
gx2Drr3x, = mibBuilder.importSymbols("GX2HFC-MIB", "gx2Drr3x")
motproxies, gi = mibBuilder.importSymbols("NLS-BBNIDENT-MIB", "motproxies", "gi")
trapChangedObjectId, trapNETrapLastTrapTimeStamp, trapNetworkElemAdminState, trapChangedValueDisplayString, trapNetworkElemAvailStatus, trapNetworkElemModelNumber, trapText, trapIdentifier, trapNetworkElemAlarmStatus, trapNetworkElemSerialNum, trapChangedValueInteger, trapNetworkElemOperState, trapPerceivedSeverity = mibBuilder.importSymbols("NLSBBN-TRAPS-MIB", "trapChangedObjectId", "trapNETrapLastTrapTimeStamp", "trapNetworkElemAdminState", "trapChangedValueDisplayString", "trapNetworkElemAvailStatus", "trapNetworkElemModelNumber", "trapText", "trapIdentifier", "trapNetworkElemAlarmStatus", "trapNetworkElemSerialNum", "trapChangedValueInteger", "trapNetworkElemOperState", "trapPerceivedSeverity")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
ModuleIdentity, Counter32, Gauge32, Unsigned32, Counter64, IpAddress, Bits, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, Integer32, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "Gauge32", "Unsigned32", "Counter64", "IpAddress", "Bits", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "Integer32", "MibIdentifier", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class Float(Counter32):
    pass

gx2drr3xDescriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 1))
gx2drr3xAnalogTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2), )
if mibBuilder.loadTexts: gx2drr3xAnalogTable.setStatus('mandatory')
gx2drr3xAnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1), ).setIndexNames((0, "OMNI-gx2drr3x-MIB", "gx2drr3xAnalogTableIndex"))
if mibBuilder.loadTexts: gx2drr3xAnalogEntry.setStatus('mandatory')
gx2drr3xDigitalTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3), )
if mibBuilder.loadTexts: gx2drr3xDigitalTable.setStatus('mandatory')
gx2drr3xDigitalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2), ).setIndexNames((0, "OMNI-gx2drr3x-MIB", "gx2drr3xDigitalTableIndex"))
if mibBuilder.loadTexts: gx2drr3xDigitalEntry.setStatus('mandatory')
gx2drr3xStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4), )
if mibBuilder.loadTexts: gx2drr3xStatusTable.setStatus('mandatory')
gx2drr3xStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3), ).setIndexNames((0, "OMNI-gx2drr3x-MIB", "gx2drr3xStatusTableIndex"))
if mibBuilder.loadTexts: gx2drr3xStatusEntry.setStatus('mandatory')
gx2drr3xFactoryTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5), )
if mibBuilder.loadTexts: gx2drr3xFactoryTable.setStatus('mandatory')
gx2drr3xFactoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4), ).setIndexNames((0, "OMNI-gx2drr3x-MIB", "gx2drr3xFactoryTableIndex"))
if mibBuilder.loadTexts: gx2drr3xFactoryEntry.setStatus('mandatory')
gx2drr3xAnalogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2drr3xAnalogTableIndex.setStatus('mandatory')
drrlabelRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelRFAAttenuation.setStatus('optional')
drruomRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruomRFAAttenuation.setStatus('optional')
drrmajorHighRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 4), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHighRFAAttenuation.setStatus('mandatory')
drrmajorLowRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 5), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLowRFAAttenuation.setStatus('mandatory')
drrminorHighRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 6), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHighRFAAttenuation.setStatus('mandatory')
drrminorLowRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 7), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLowRFAAttenuation.setStatus('mandatory')
drrcurrentValueRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 8), Float()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: drrcurrentValueRFAAttenuation.setStatus('mandatory')
drrstateFlagRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlagRFAAttenuation.setStatus('mandatory')
drrminValueRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 10), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValueRFAAttenuation.setStatus('mandatory')
drrmaxValueRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 11), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValueRFAAttenuation.setStatus('mandatory')
drralarmStateRFAAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmStateRFAAttenuation.setStatus('mandatory')
drrlabelRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelRFBAttenuation.setStatus('optional')
drruomRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruomRFBAttenuation.setStatus('optional')
drrmajorHighRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 15), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHighRFBAttenuation.setStatus('mandatory')
drrmajorLowRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 16), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLowRFBAttenuation.setStatus('mandatory')
drrminorHighRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 17), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHighRFBAttenuation.setStatus('mandatory')
drrminorLowRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 18), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLowRFBAttenuation.setStatus('mandatory')
drrcurrentValueRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 19), Float()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: drrcurrentValueRFBAttenuation.setStatus('mandatory')
drrstateFlagRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlagRFBAttenuation.setStatus('mandatory')
drrminValueRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 21), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValueRFBAttenuation.setStatus('mandatory')
drrmaxValueRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 22), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValueRFBAttenuation.setStatus('mandatory')
drralarmStateRFBAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmStateRFBAttenuation.setStatus('mandatory')
drrlabelRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelRFCAttenuation.setStatus('optional')
drruomRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruomRFCAttenuation.setStatus('optional')
drrmajorHighRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 26), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHighRFCAttenuation.setStatus('mandatory')
drrmajorLowRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 27), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLowRFCAttenuation.setStatus('mandatory')
drrminorHighRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 28), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHighRFCAttenuation.setStatus('mandatory')
drrminorLowRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 29), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLowRFCAttenuation.setStatus('mandatory')
drrcurrentValueRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 30), Float()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: drrcurrentValueRFCAttenuation.setStatus('mandatory')
drrstateFlagRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlagRFCAttenuation.setStatus('mandatory')
drrminValueRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 32), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValueRFCAttenuation.setStatus('mandatory')
drrmaxValueRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 33), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValueRFCAttenuation.setStatus('mandatory')
drralarmStateRFCAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmStateRFCAttenuation.setStatus('mandatory')
drrlabelTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelTrippointLevel.setStatus('optional')
drruomTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruomTrippointLevel.setStatus('optional')
drrmajorHighTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 37), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHighTrippointLevel.setStatus('mandatory')
drrmajorLowTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 38), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLowTrippointLevel.setStatus('mandatory')
drrminorHighTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 39), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHighTrippointLevel.setStatus('mandatory')
drrminorLowTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 40), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLowTrippointLevel.setStatus('mandatory')
drrcurrentValueTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 41), Float()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: drrcurrentValueTrippointLevel.setStatus('mandatory')
drrstateFlagTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlagTrippointLevel.setStatus('mandatory')
drrminValueTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 43), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValueTrippointLevel.setStatus('mandatory')
drrmaxValueTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 44), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValueTrippointLevel.setStatus('mandatory')
drralarmStateTrippointLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmStateTrippointLevel.setStatus('mandatory')
drrlabelOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelOptCurrent.setStatus('optional')
drruomOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruomOptCurrent.setStatus('optional')
drrmajorHighOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 48), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHighOptCurrent.setStatus('mandatory')
drrmajorLowOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 49), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLowOptCurrent.setStatus('mandatory')
drrminorHighOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 50), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHighOptCurrent.setStatus('mandatory')
drrminorLowOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 51), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLowOptCurrent.setStatus('mandatory')
drrcurrentValueOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 52), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrcurrentValueOptCurrent.setStatus('mandatory')
drrstateFlagOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlagOptCurrent.setStatus('mandatory')
drrminValueOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 54), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValueOptCurrent.setStatus('mandatory')
drrmaxValueOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 55), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValueOptCurrent.setStatus('mandatory')
drralarmStateOptCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmStateOptCurrent.setStatus('mandatory')
drrlabel12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabel12VCurrent.setStatus('optional')
drruom12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruom12VCurrent.setStatus('optional')
drrmajorHigh12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 59), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHigh12VCurrent.setStatus('mandatory')
drrmajorLow12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 60), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLow12VCurrent.setStatus('mandatory')
drrminorHigh12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 61), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHigh12VCurrent.setStatus('mandatory')
drrminorLow12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 62), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLow12VCurrent.setStatus('mandatory')
drrcurrentValue12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 63), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrcurrentValue12VCurrent.setStatus('mandatory')
drrstateFlag12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlag12VCurrent.setStatus('mandatory')
drrminValue12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 65), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValue12VCurrent.setStatus('mandatory')
drrmaxValue12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 66), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValue12VCurrent.setStatus('mandatory')
drralarmState12VCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmState12VCurrent.setStatus('mandatory')
drrlabelModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelModTemp.setStatus('optional')
drruomModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruomModTemp.setStatus('optional')
drrmajorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 70), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHighModTemp.setStatus('mandatory')
drrmajorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 71), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLowModTemp.setStatus('mandatory')
drrminorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 72), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHighModTemp.setStatus('mandatory')
drrminorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 73), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLowModTemp.setStatus('mandatory')
drrcurrentValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 74), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrcurrentValueModTemp.setStatus('mandatory')
drrstateFlagModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlagModTemp.setStatus('mandatory')
drrminValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 76), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValueModTemp.setStatus('mandatory')
drrmaxValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 77), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValueModTemp.setStatus('mandatory')
drralarmStateModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmStateModTemp.setStatus('mandatory')
drrlabelFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelFanCurrent.setStatus('optional')
drruomFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drruomFanCurrent.setStatus('optional')
drrmajorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 81), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorHighFanCurrent.setStatus('mandatory')
drrmajorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 82), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmajorLowFanCurrent.setStatus('mandatory')
drrminorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 83), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorHighFanCurrent.setStatus('mandatory')
drrminorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 84), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminorLowFanCurrent.setStatus('mandatory')
drrcurrentValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 85), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrcurrentValueFanCurrent.setStatus('mandatory')
drrstateFlagFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateFlagFanCurrent.setStatus('mandatory')
drrminValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 87), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrminValueFanCurrent.setStatus('mandatory')
drrmaxValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 88), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrmaxValueFanCurrent.setStatus('mandatory')
drralarmStateFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 2, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drralarmStateFanCurrent.setStatus('mandatory')
gx2drr3xDigitalTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2drr3xDigitalTableIndex.setStatus('mandatory')
drrlabelTrippointMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelTrippointMode.setStatus('optional')
drrenumTrippointMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrenumTrippointMode.setStatus('optional')
drrvalueTrippointMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("alarmOnly", 2), ("alarm-and-Switch", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: drrvalueTrippointMode.setStatus('mandatory')
drrstateflagTrippointMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("readOnly", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagTrippointMode.setStatus('mandatory')
drrlabelFrontPanelTest = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelFrontPanelTest.setStatus('optional')
drrenumFrontPanelTest = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrenumFrontPanelTest.setStatus('optional')
drrvalueFrontPanelTest = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("chanA", 1), ("chanB", 2), ("chanC", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: drrvalueFrontPanelTest.setStatus('mandatory')
drrstateflagFrontPanelTest = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("readOnly", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagFrontPanelTest.setStatus('mandatory')
drrlabelFactoryDefaultReset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelFactoryDefaultReset.setStatus('optional')
drrenumFactoryDefaultReset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrenumFactoryDefaultReset.setStatus('optional')
drrvalueFactoryDefaultReset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: drrvalueFactoryDefaultReset.setStatus('mandatory')
drrstateflagFactoryDefaultReset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 3, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagFactoryDefaultReset.setStatus('mandatory')
gx2drr3xStatusTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2drr3xStatusTableIndex.setStatus('mandatory')
drrlabelBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelBoot.setStatus('optional')
drrvalueBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrvalueBoot.setStatus('mandatory')
drrstateflagBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagBoot.setStatus('mandatory')
drrlabelFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelFlash.setStatus('optional')
drrvalueFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrvalueFlash.setStatus('mandatory')
drrstateflagFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagFlash.setStatus('mandatory')
drrlabelFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelFactoryDataCRC.setStatus('optional')
drrvalueFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrvalueFactoryDataCRC.setStatus('mandatory')
drrstateflagFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagFactoryDataCRC.setStatus('mandatory')
drrlabelAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelAlarmDataCrc.setStatus('optional')
drrvalueAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrvalueAlarmDataCrc.setStatus('mandatory')
drrstateflagAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagAlarmDataCrc.setStatus('mandatory')
drrlabelHardwareStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelHardwareStatus.setStatus('optional')
drrvalueHardwareStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrvalueHardwareStatus.setStatus('mandatory')
drrstateflagHardwareStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagHardwareStatus.setStatus('mandatory')
drrlabelOpticTripPointStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelOpticTripPointStatus.setStatus('optional')
drrvalueOpticTripPointStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrvalueOpticTripPointStatus.setStatus('mandatory')
drrstateflagOpticTripPointStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagOpticTripPointStatus.setStatus('mandatory')
drrlabelLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrlabelLinkStatus.setStatus('optional')
drrvalueLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrvalueLinkStatus.setStatus('mandatory')
drrstateflagLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 4, 3, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrstateflagLinkStatus.setStatus('mandatory')
gx2drr3xFactoryTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2drr3xFactoryTableIndex.setStatus('mandatory')
drrbootControlByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrbootControlByte.setStatus('mandatory')
drrbootStatusByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrbootStatusByte.setStatus('mandatory')
drrbank1CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrbank1CRC.setStatus('mandatory')
drrbank2CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrbank2CRC.setStatus('mandatory')
drrprgEEPROMByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrprgEEPROMByte.setStatus('mandatory')
drrfactoryCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrfactoryCRC.setStatus('mandatory')
drrcalculateCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("factory", 1), ("alarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrcalculateCRC.setStatus('mandatory')
drrhourMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrhourMeter.setStatus('mandatory')
drrflashPrgCntA = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrflashPrgCntA.setStatus('mandatory')
drrflashPrgCntB = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrflashPrgCntB.setStatus('mandatory')
drrflashBankARev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrflashBankARev.setStatus('mandatory')
drrflashBankBRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13, 5, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrflashBankBRev.setStatus('mandatory')
trapdrrConfigChangeInteger = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,1)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrConfigChangeDisplayString = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,2)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueDisplayString"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrr12VCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,3)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrModuleTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,4)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrFanCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,5)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrFlashAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,6)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrBankBootAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,7)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrAlarmDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,8)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrHardwareErrAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,9)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrOpticalSignalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,10)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrFactoryDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,11)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrResetFactoryDefaultAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,12)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrTripPointAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,13)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapdrrLinkAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 13) + (0,14)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
mibBuilder.exportSymbols("OMNI-gx2drr3x-MIB", gx2drr3xStatusEntry=gx2drr3xStatusEntry, drrflashBankBRev=drrflashBankBRev, trapdrrFlashAlarm=trapdrrFlashAlarm, trapdrrResetFactoryDefaultAlarm=trapdrrResetFactoryDefaultAlarm, drralarmStateRFAAttenuation=drralarmStateRFAAttenuation, drralarmState12VCurrent=drralarmState12VCurrent, drruomOptCurrent=drruomOptCurrent, trapdrrConfigChangeDisplayString=trapdrrConfigChangeDisplayString, drrminorHighTrippointLevel=drrminorHighTrippointLevel, drrvalueBoot=drrvalueBoot, trapdrrLinkAlarm=trapdrrLinkAlarm, drrlabelHardwareStatus=drrlabelHardwareStatus, drrlabelFactoryDataCRC=drrlabelFactoryDataCRC, gx2drr3xFactoryEntry=gx2drr3xFactoryEntry, drrlabel12VCurrent=drrlabel12VCurrent, drralarmStateTrippointLevel=drralarmStateTrippointLevel, drrmaxValueRFAAttenuation=drrmaxValueRFAAttenuation, drrbank2CRC=drrbank2CRC, gx2drr3xAnalogTable=gx2drr3xAnalogTable, drrminorLow12VCurrent=drrminorLow12VCurrent, drrminValueFanCurrent=drrminValueFanCurrent, drrstateFlagRFCAttenuation=drrstateFlagRFCAttenuation, drrminorLowOptCurrent=drrminorLowOptCurrent, drrmaxValueRFBAttenuation=drrmaxValueRFBAttenuation, drrminValue12VCurrent=drrminValue12VCurrent, drrlabelFlash=drrlabelFlash, drrvalueOpticTripPointStatus=drrvalueOpticTripPointStatus, drrminorHighFanCurrent=drrminorHighFanCurrent, trapdrrModuleTempAlarm=trapdrrModuleTempAlarm, drralarmStateRFBAttenuation=drralarmStateRFBAttenuation, drrvalueHardwareStatus=drrvalueHardwareStatus, gx2drr3xDigitalTableIndex=gx2drr3xDigitalTableIndex, drrvalueFactoryDataCRC=drrvalueFactoryDataCRC, drrlabelAlarmDataCrc=drrlabelAlarmDataCrc, drralarmStateModTemp=drralarmStateModTemp, drrmaxValueRFCAttenuation=drrmaxValueRFCAttenuation, drrmajorLowFanCurrent=drrmajorLowFanCurrent, trapdrrTripPointAlarm=trapdrrTripPointAlarm, drrminorLowRFAAttenuation=drrminorLowRFAAttenuation, gx2drr3xStatusTable=gx2drr3xStatusTable, drrstateFlagOptCurrent=drrstateFlagOptCurrent, trapdrrConfigChangeInteger=trapdrrConfigChangeInteger, drrmajorHighOptCurrent=drrmajorHighOptCurrent, drrcurrentValueOptCurrent=drrcurrentValueOptCurrent, drrminorLowRFCAttenuation=drrminorLowRFCAttenuation, drrminorLowRFBAttenuation=drrminorLowRFBAttenuation, drrvalueFactoryDefaultReset=drrvalueFactoryDefaultReset, drrvalueFrontPanelTest=drrvalueFrontPanelTest, drrminValueRFCAttenuation=drrminValueRFCAttenuation, drrcurrentValueRFCAttenuation=drrcurrentValueRFCAttenuation, drrmaxValueFanCurrent=drrmaxValueFanCurrent, drrminorLowFanCurrent=drrminorLowFanCurrent, drrflashPrgCntB=drrflashPrgCntB, trapdrrFactoryDataCRCAlarm=trapdrrFactoryDataCRCAlarm, drrmajorHigh12VCurrent=drrmajorHigh12VCurrent, drrstateFlagRFAAttenuation=drrstateFlagRFAAttenuation, drrminValueOptCurrent=drrminValueOptCurrent, gx2drr3xDigitalTable=gx2drr3xDigitalTable, gx2drr3xAnalogTableIndex=gx2drr3xAnalogTableIndex, drrmajorHighModTemp=drrmajorHighModTemp, drrstateflagFlash=drrstateflagFlash, drrlabelBoot=drrlabelBoot, drrvalueAlarmDataCrc=drrvalueAlarmDataCrc, gx2drr3xAnalogEntry=gx2drr3xAnalogEntry, drrminValueRFBAttenuation=drrminValueRFBAttenuation, drrminorHighRFBAttenuation=drrminorHighRFBAttenuation, drruomRFBAttenuation=drruomRFBAttenuation, drrmajorHighRFAAttenuation=drrmajorHighRFAAttenuation, drrminValueRFAAttenuation=drrminValueRFAAttenuation, drrlabelTrippointMode=drrlabelTrippointMode, trapdrrFanCurrentAlarm=trapdrrFanCurrentAlarm, drrmajorLowRFAAttenuation=drrmajorLowRFAAttenuation, drrstateFlagModTemp=drrstateFlagModTemp, drrminorHighRFAAttenuation=drrminorHighRFAAttenuation, drrmajorLowOptCurrent=drrmajorLowOptCurrent, drrminorHighModTemp=drrminorHighModTemp, drrlabelFactoryDefaultReset=drrlabelFactoryDefaultReset, drrbootControlByte=drrbootControlByte, drrstateFlag12VCurrent=drrstateFlag12VCurrent, drrfactoryCRC=drrfactoryCRC, drrstateflagFactoryDefaultReset=drrstateflagFactoryDefaultReset, drrmajorHighTrippointLevel=drrmajorHighTrippointLevel, gx2drr3xFactoryTable=gx2drr3xFactoryTable, drrminValueTrippointLevel=drrminValueTrippointLevel, drrstateFlagRFBAttenuation=drrstateFlagRFBAttenuation, drrlabelRFBAttenuation=drrlabelRFBAttenuation, drrlabelTrippointLevel=drrlabelTrippointLevel, drruomModTemp=drruomModTemp, drrlabelModTemp=drrlabelModTemp, drrminorLowTrippointLevel=drrminorLowTrippointLevel, Float=Float, drrmaxValue12VCurrent=drrmaxValue12VCurrent, drrlabelFrontPanelTest=drrlabelFrontPanelTest, trapdrrAlarmDataCRCAlarm=trapdrrAlarmDataCRCAlarm, trapdrrHardwareErrAlarm=trapdrrHardwareErrAlarm, drruomRFAAttenuation=drruomRFAAttenuation, drrstateFlagTrippointLevel=drrstateFlagTrippointLevel, drrmajorLow12VCurrent=drrmajorLow12VCurrent, drrcurrentValueFanCurrent=drrcurrentValueFanCurrent, drrenumFrontPanelTest=drrenumFrontPanelTest, drrvalueTrippointMode=drrvalueTrippointMode, drrstateflagTrippointMode=drrstateflagTrippointMode, drrmaxValueModTemp=drrmaxValueModTemp, drrlabelRFCAttenuation=drrlabelRFCAttenuation, drrminorHighRFCAttenuation=drrminorHighRFCAttenuation, drrmaxValueOptCurrent=drrmaxValueOptCurrent, drrbootStatusByte=drrbootStatusByte, drrmajorLowModTemp=drrmajorLowModTemp, trapdrr12VCurrentAlarm=trapdrr12VCurrentAlarm, drrmajorHighRFCAttenuation=drrmajorHighRFCAttenuation, gx2drr3xStatusTableIndex=gx2drr3xStatusTableIndex, drrcalculateCRC=drrcalculateCRC, gx2drr3xDescriptor=gx2drr3xDescriptor, drrmajorLowRFBAttenuation=drrmajorLowRFBAttenuation, drruom12VCurrent=drruom12VCurrent, drrlabelFanCurrent=drrlabelFanCurrent, drrbank1CRC=drrbank1CRC, drrflashBankARev=drrflashBankARev, drrmajorHighFanCurrent=drrmajorHighFanCurrent, drrcurrentValueRFBAttenuation=drrcurrentValueRFBAttenuation, drruomRFCAttenuation=drruomRFCAttenuation, drrcurrentValueTrippointLevel=drrcurrentValueTrippointLevel, drralarmStateFanCurrent=drralarmStateFanCurrent, drrprgEEPROMByte=drrprgEEPROMByte, drrstateflagBoot=drrstateflagBoot, drrenumFactoryDefaultReset=drrenumFactoryDefaultReset, drrvalueLinkStatus=drrvalueLinkStatus, trapdrrOpticalSignalAlarm=trapdrrOpticalSignalAlarm, drralarmStateOptCurrent=drralarmStateOptCurrent, drrcurrentValueModTemp=drrcurrentValueModTemp, gx2drr3xDigitalEntry=gx2drr3xDigitalEntry, drrlabelRFAAttenuation=drrlabelRFAAttenuation, drrminorHigh12VCurrent=drrminorHigh12VCurrent, drrminValueModTemp=drrminValueModTemp, drrstateflagFrontPanelTest=drrstateflagFrontPanelTest, drrstateflagFactoryDataCRC=drrstateflagFactoryDataCRC, drrcurrentValueRFAAttenuation=drrcurrentValueRFAAttenuation, drruomFanCurrent=drruomFanCurrent, gx2drr3xFactoryTableIndex=gx2drr3xFactoryTableIndex, drrminorHighOptCurrent=drrminorHighOptCurrent, drrlabelOpticTripPointStatus=drrlabelOpticTripPointStatus, drrmajorHighRFBAttenuation=drrmajorHighRFBAttenuation, drrenumTrippointMode=drrenumTrippointMode, drrstateflagHardwareStatus=drrstateflagHardwareStatus, drrhourMeter=drrhourMeter, drrstateflagLinkStatus=drrstateflagLinkStatus, drrlabelLinkStatus=drrlabelLinkStatus, drrstateflagAlarmDataCrc=drrstateflagAlarmDataCrc, drrflashPrgCntA=drrflashPrgCntA, drralarmStateRFCAttenuation=drralarmStateRFCAttenuation, drrstateflagOpticTripPointStatus=drrstateflagOpticTripPointStatus, drrstateFlagFanCurrent=drrstateFlagFanCurrent, drrcurrentValue12VCurrent=drrcurrentValue12VCurrent, drrvalueFlash=drrvalueFlash, drrmaxValueTrippointLevel=drrmaxValueTrippointLevel, drrlabelOptCurrent=drrlabelOptCurrent, trapdrrBankBootAlarm=trapdrrBankBootAlarm, drrmajorLowRFCAttenuation=drrmajorLowRFCAttenuation, drruomTrippointLevel=drruomTrippointLevel, drrminorLowModTemp=drrminorLowModTemp, drrmajorLowTrippointLevel=drrmajorLowTrippointLevel)
