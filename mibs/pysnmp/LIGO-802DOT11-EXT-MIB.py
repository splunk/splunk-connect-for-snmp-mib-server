#
# PySNMP MIB module LIGO-802DOT11-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIGO-802DOT11-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:56:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ifPhysAddress, ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifPhysAddress", "ifIndex", "InterfaceIndex")
ligoMgmt, = mibBuilder.importSymbols("LIGOWAVE-MIB", "ligoMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysLocation, = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation")
IpAddress, Counter32, TimeTicks, iso, Bits, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Unsigned32, Gauge32, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "TimeTicks", "iso", "Bits", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Unsigned32", "Gauge32", "ObjectIdentity", "Integer32")
TextualConvention, TruthValue, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "MacAddress", "DisplayString")
ligo802dot11ExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 32750, 3, 5))
ligo802dot11ExtMIB.setRevisions(('2010-03-31 00:00', '2009-05-15 00:00', '2008-12-12 00:00',))
if mibBuilder.loadTexts: ligo802dot11ExtMIB.setLastUpdated('201003310000Z')
if mibBuilder.loadTexts: ligo802dot11ExtMIB.setOrganization('LigoWave')
ligo802dot11ExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1))
ligoDot11Notifs = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 0))
ligoDot11Info = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 1))
ligoDot11Conf = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2))
ligoDot11Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3))
ligoDot11IfConfTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1), )
if mibBuilder.loadTexts: ligoDot11IfConfTable.setStatus('current')
ligoDot11IfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ligoDot11IfConfEntry.setStatus('current')
ligoDot11IfParentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfParentIndex.setStatus('current')
ligoDot11IfProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfProtocol.setStatus('current')
ligoDot11IfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("auto", 0), ("adhoc", 1), ("managed", 2), ("master", 3), ("repeater", 4), ("secondary", 5), ("monitor", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfMode.setStatus('current')
ligoDot11IfESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfESSID.setStatus('current')
ligoDot11IfAccessPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfAccessPoint.setStatus('current')
ligoDot11IfCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfCountryCode.setStatus('current')
ligoDot11IfFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 7), Integer32()).setUnits('MHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfFrequency.setStatus('current')
ligoDot11IfChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfChannel.setStatus('current')
ligoDot11IfChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 9), Integer32()).setUnits('MHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfChannelBandwidth.setStatus('current')
ligoDot11IfTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 10), Gauge32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfTxPower.setStatus('current')
ligoDot11IfBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 11), Gauge32()).setUnits('kbit/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfBitRate.setStatus('current')
ligoDot11IfLinkQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfLinkQuality.setStatus('current')
ligoDot11IfMaxLinkQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfMaxLinkQuality.setStatus('current')
ligoDot11IfSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 14), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfSignalLevel.setStatus('current')
ligoDot11IfNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 15), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfNoiseLevel.setStatus('current')
ligoDot11IfAssocNodeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 2, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfAssocNodeCount.setStatus('current')
ligoDot11IfErrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1), )
if mibBuilder.loadTexts: ligoDot11IfErrStatsTable.setStatus('current')
ligoDot11IfErrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ligoDot11IfErrStatsEntry.setStatus('current')
ligoDot11IfRxInvalidNWID = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfRxInvalidNWID.setStatus('current')
ligoDot11IfRxInvalidCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfRxInvalidCrypt.setStatus('current')
ligoDot11IfRxInvalidFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfRxInvalidFrag.setStatus('current')
ligoDot11IfTxExcessiveRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfTxExcessiveRetries.setStatus('current')
ligoDot11IfInvalidMisc = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfInvalidMisc.setStatus('current')
ligoDot11IfMissedBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11IfMissedBeacons.setStatus('current')
ligoDot11RemoteNodeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2), )
if mibBuilder.loadTexts: ligoDot11RemoteNodeStatsTable.setStatus('current')
ligoDot11RemoteNodeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "LIGO-802DOT11-EXT-MIB", "ligoDot11RmtNodeMacAddress"))
if mibBuilder.loadTexts: ligoDot11RemoteNodeStatsEntry.setStatus('current')
ligoDot11RmtNodeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11RmtNodeMacAddress.setStatus('current')
ligoDot11RmtNodeAssociated = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11RmtNodeAssociated.setStatus('current')
ligoDot11RmtNodeTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2, 1, 3), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11RmtNodeTxBytes.setStatus('current')
ligoDot11RmtNodeRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2, 1, 4), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11RmtNodeRxBytes.setStatus('current')
ligoDot11RmtNodeAssocTime = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11RmtNodeAssocTime.setStatus('current')
ligoDot11RmtNodeDisassocTime = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoDot11RmtNodeDisassocTime.setStatus('current')
ligoFrequencyChange = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 0, 1)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-802DOT11-EXT-MIB", "ligoDot11IfFrequency"))
if mibBuilder.loadTexts: ligoFrequencyChange.setStatus('current')
ligoNoiseThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 0, 2)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-802DOT11-EXT-MIB", "ligoDot11IfNoiseLevel"))
if mibBuilder.loadTexts: ligoNoiseThresholdReached.setStatus('current')
ligoRemoteNodeConnected = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 0, 3)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifPhysAddress"), ("IF-MIB", "ifIndex"), ("LIGO-802DOT11-EXT-MIB", "ligoDot11RmtNodeMacAddress"))
if mibBuilder.loadTexts: ligoRemoteNodeConnected.setStatus('current')
ligoRemoteNodeDisconnected = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 0, 4)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifPhysAddress"), ("IF-MIB", "ifIndex"), ("LIGO-802DOT11-EXT-MIB", "ligoDot11RmtNodeMacAddress"))
if mibBuilder.loadTexts: ligoRemoteNodeDisconnected.setStatus('current')
ligoLinkQualThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 5, 1, 0, 5)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-802DOT11-EXT-MIB", "ligoDot11IfLinkQuality"))
if mibBuilder.loadTexts: ligoLinkQualThresholdReached.setStatus('current')
mibBuilder.exportSymbols("LIGO-802DOT11-EXT-MIB", ligo802dot11ExtMIBObjects=ligo802dot11ExtMIBObjects, ligoDot11IfConfEntry=ligoDot11IfConfEntry, ligoDot11Conf=ligoDot11Conf, ligoDot11IfErrStatsTable=ligoDot11IfErrStatsTable, ligoDot11IfInvalidMisc=ligoDot11IfInvalidMisc, ligoDot11IfProtocol=ligoDot11IfProtocol, ligoDot11IfNoiseLevel=ligoDot11IfNoiseLevel, ligoDot11IfChannel=ligoDot11IfChannel, ligoDot11IfTxExcessiveRetries=ligoDot11IfTxExcessiveRetries, ligoNoiseThresholdReached=ligoNoiseThresholdReached, ligoDot11IfFrequency=ligoDot11IfFrequency, ligoDot11IfChannelBandwidth=ligoDot11IfChannelBandwidth, ligoDot11IfRxInvalidCrypt=ligoDot11IfRxInvalidCrypt, ligoDot11Info=ligoDot11Info, ligoDot11Stats=ligoDot11Stats, ligoDot11IfBitRate=ligoDot11IfBitRate, ligoFrequencyChange=ligoFrequencyChange, ligoDot11IfCountryCode=ligoDot11IfCountryCode, ligoDot11RmtNodeAssociated=ligoDot11RmtNodeAssociated, ligoDot11RmtNodeTxBytes=ligoDot11RmtNodeTxBytes, ligoDot11RmtNodeAssocTime=ligoDot11RmtNodeAssocTime, ligoDot11IfSignalLevel=ligoDot11IfSignalLevel, ligoRemoteNodeDisconnected=ligoRemoteNodeDisconnected, ligoDot11IfAssocNodeCount=ligoDot11IfAssocNodeCount, ligoDot11IfErrStatsEntry=ligoDot11IfErrStatsEntry, ligoDot11IfAccessPoint=ligoDot11IfAccessPoint, ligoDot11RmtNodeRxBytes=ligoDot11RmtNodeRxBytes, ligoDot11IfMissedBeacons=ligoDot11IfMissedBeacons, ligoRemoteNodeConnected=ligoRemoteNodeConnected, ligoDot11RemoteNodeStatsEntry=ligoDot11RemoteNodeStatsEntry, ligoDot11IfESSID=ligoDot11IfESSID, ligoDot11IfMode=ligoDot11IfMode, PYSNMP_MODULE_ID=ligo802dot11ExtMIB, ligoDot11IfRxInvalidFrag=ligoDot11IfRxInvalidFrag, ligo802dot11ExtMIB=ligo802dot11ExtMIB, ligoDot11IfTxPower=ligoDot11IfTxPower, ligoDot11IfParentIndex=ligoDot11IfParentIndex, ligoDot11RemoteNodeStatsTable=ligoDot11RemoteNodeStatsTable, ligoDot11RmtNodeDisassocTime=ligoDot11RmtNodeDisassocTime, ligoDot11IfMaxLinkQuality=ligoDot11IfMaxLinkQuality, ligoDot11IfLinkQuality=ligoDot11IfLinkQuality, ligoLinkQualThresholdReached=ligoLinkQualThresholdReached, ligoDot11RmtNodeMacAddress=ligoDot11RmtNodeMacAddress, ligoDot11IfConfTable=ligoDot11IfConfTable, ligoDot11IfRxInvalidNWID=ligoDot11IfRxInvalidNWID, ligoDot11Notifs=ligoDot11Notifs)
