#
# PySNMP MIB module MARVELL-EEE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MARVELL-EEE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:59:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifOperStatus, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifOperStatus", "ifIndex")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, iso, Integer32, MibIdentifier, NotificationType, Unsigned32, Counter64, Bits, TimeTicks, Counter32, ObjectIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "iso", "Integer32", "MibIdentifier", "NotificationType", "Unsigned32", "Counter64", "Bits", "TimeTicks", "Counter32", "ObjectIdentity", "Gauge32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
rlEee = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 149))
rlEee.setRevisions(('2010-05-15 00:00',))
if mibBuilder.loadTexts: rlEee.setLastUpdated('201003150000Z')
if mibBuilder.loadTexts: rlEee.setOrganization('MARVELL Semiconductor, Inc.')
rlEeeEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 149, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlEeeEnable.setStatus('current')
rlEeePortTable = MibTable((1, 3, 6, 1, 4, 1, 89, 149, 2), )
if mibBuilder.loadTexts: rlEeePortTable.setStatus('current')
rlEeePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 149, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlEeePortEntry.setStatus('current')
rlEeePortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlEeePortAdminStatus.setStatus('current')
rlEeePortSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 2, 1, 2), Bits().clone(namedValues=NamedValues(("rlEeePortSupported10M", 0), ("rlEeePortSupported100M", 1), ("rlEeePortSupported1G", 2), ("rlEeePortSupported10G", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortSupported.setStatus('current')
rlEeePortRemoteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortRemoteStatus.setStatus('current')
rlEeePortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortOperStatus.setStatus('current')
rlEeePortLldpTable = MibTable((1, 3, 6, 1, 4, 1, 89, 149, 3), )
if mibBuilder.loadTexts: rlEeePortLldpTable.setStatus('current')
rlEeePortLldpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 149, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlEeePortLldpEntry.setStatus('current')
rlEeePortLldpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlEeePortLldpAdminStatus.setStatus('current')
rlEeePortLldpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 3, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpOperStatus.setStatus('current')
rlEeePortLldpLocalTable = MibTable((1, 3, 6, 1, 4, 1, 89, 149, 4), )
if mibBuilder.loadTexts: rlEeePortLldpLocalTable.setStatus('current')
rlEeePortLldpLocalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 149, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlEeePortLldpLocalEntry.setStatus('current')
rlEeePortLldpLocalResolvedTx = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 4, 1, 1), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpLocalResolvedTx.setStatus('current')
rlEeePortLldpLocalTx = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 4, 1, 2), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpLocalTx.setStatus('current')
rlEeePortLldpLocalTxEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 4, 1, 3), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpLocalTxEcho.setStatus('current')
rlEeePortLldpLocalResolvedRx = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 4, 1, 4), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpLocalResolvedRx.setStatus('current')
rlEeePortLldpLocalRx = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 4, 1, 5), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpLocalRx.setStatus('current')
rlEeePortLldpLocalRxEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 4, 1, 6), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpLocalRxEcho.setStatus('current')
rlEeePortLldpRemoteTable = MibTable((1, 3, 6, 1, 4, 1, 89, 149, 5), )
if mibBuilder.loadTexts: rlEeePortLldpRemoteTable.setStatus('current')
rlEeePortLldpRemoteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 149, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlEeePortLldpRemoteEntry.setStatus('current')
rlEeePortLldpRemoteTx = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 5, 1, 1), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpRemoteTx.setStatus('current')
rlEeePortLldpRemoteRx = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 5, 1, 2), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpRemoteRx.setStatus('current')
rlEeePortLldpRemoteTxEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 5, 1, 3), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpRemoteTxEcho.setStatus('current')
rlEeePortLldpRemoteRxEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 149, 5, 1, 4), Unsigned32()).setUnits('uSec').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlEeePortLldpRemoteRxEcho.setStatus('current')
mibBuilder.exportSymbols("MARVELL-EEE-MIB", rlEeePortLldpLocalResolvedRx=rlEeePortLldpLocalResolvedRx, rlEeePortTable=rlEeePortTable, rlEeePortLldpLocalRxEcho=rlEeePortLldpLocalRxEcho, rlEeePortLldpRemoteRxEcho=rlEeePortLldpRemoteRxEcho, rlEeePortAdminStatus=rlEeePortAdminStatus, rlEeePortLldpEntry=rlEeePortLldpEntry, rlEeePortOperStatus=rlEeePortOperStatus, rlEeePortRemoteStatus=rlEeePortRemoteStatus, rlEeePortLldpRemoteRx=rlEeePortLldpRemoteRx, rlEeePortLldpLocalResolvedTx=rlEeePortLldpLocalResolvedTx, rlEee=rlEee, rlEeePortLldpRemoteTx=rlEeePortLldpRemoteTx, rlEeeEnable=rlEeeEnable, rlEeePortLldpTable=rlEeePortLldpTable, rlEeePortLldpLocalTxEcho=rlEeePortLldpLocalTxEcho, rlEeePortLldpLocalEntry=rlEeePortLldpLocalEntry, rlEeePortLldpLocalRx=rlEeePortLldpLocalRx, rlEeePortLldpRemoteTable=rlEeePortLldpRemoteTable, rlEeePortLldpRemoteTxEcho=rlEeePortLldpRemoteTxEcho, PYSNMP_MODULE_ID=rlEee, rlEeePortLldpAdminStatus=rlEeePortLldpAdminStatus, rlEeePortLldpRemoteEntry=rlEeePortLldpRemoteEntry, rlEeePortLldpLocalTable=rlEeePortLldpLocalTable, rlEeePortSupported=rlEeePortSupported, rlEeePortEntry=rlEeePortEntry, rlEeePortLldpOperStatus=rlEeePortLldpOperStatus, rlEeePortLldpLocalTx=rlEeePortLldpLocalTx)
