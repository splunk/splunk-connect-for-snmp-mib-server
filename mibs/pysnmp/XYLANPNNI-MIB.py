#
# PySNMP MIB module XYLANPNNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLANPNNI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:39:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, ModuleIdentity, Counter32, Unsigned32, NotificationType, MibIdentifier, Bits, Counter64, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "ModuleIdentity", "Counter32", "Unsigned32", "NotificationType", "MibIdentifier", "Bits", "Counter64", "Integer32", "ObjectIdentity")
DisplayString, TruthValue, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "TimeStamp")
xylanPnni, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanPnni")
xylanPnniMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2))
if mibBuilder.loadTexts: xylanPnniMIB.setLastUpdated('9810190000Z')
if mibBuilder.loadTexts: xylanPnniMIB.setOrganization('Xylan')
xylanPnniMIBExtens = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1))
xylanPnniMIBObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1))
class XPnniNodeId(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(22, 22)
    fixedLength = 22

class XPnniNodeLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 104)

class XPnniAtmAddr(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(20, 20), )
class XPnniPortId(Unsigned32):
    pass

class XPnniFiltCallType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("both-ptop-pmp", 0), ("ptop", 1), ("pmp", 2))

class XPnniFiltServiceCategory(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none-specified", 0), ("cbr", 1), ("rtVbr", 2), ("abr", 3))

class XPnniFiltMetricConstraint(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none-specified", 0), ("pcr", 1), ("min-cr", 2), ("scr", 3), ("max-burst", 4))

class XPnniFiltExceptionCriteria(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none-specified", 0), ("all-addrs-pass-except", 1), ("no-addrs-pass-except", 2))

class XPnniFilterPrefixLength(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 152)

class XPnniAddrPrefix(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(19, 19)
    fixedLength = 19

xPnniAssociativeNameTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 1), )
if mibBuilder.loadTexts: xPnniAssociativeNameTable.setStatus('mandatory')
xPnniNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 1, 1), ).setIndexNames((0, "XYLANPNNI-MIB", "xPnniNodeIndex"))
if mibBuilder.loadTexts: xPnniNameEntry.setStatus('mandatory')
xPnniNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniNodeIndex.setStatus('mandatory')
xPnniNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 1, 1, 2), XPnniNodeId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniNodeId.setStatus('mandatory')
xPnniNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniNodeName.setStatus('mandatory')
xPnniAddressFilterTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2), )
if mibBuilder.loadTexts: xPnniAddressFilterTable.setStatus('mandatory')
xPnniAddressFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1), ).setIndexNames((0, "XYLANPNNI-MIB", "xPnniFiltIndex"))
if mibBuilder.loadTexts: xPnniAddressFilterEntry.setStatus('mandatory')
xPnniFiltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltIndex.setStatus('mandatory')
xPnniFiltNodeLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 2), XPnniNodeLevel().clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltNodeLevel.setStatus('mandatory')
xPnniFiltSrcPrefLen = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 3), XPnniFilterPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltSrcPrefLen.setStatus('mandatory')
xPnniFiltSrcPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 4), XPnniAddrPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltSrcPrefix.setStatus('mandatory')
xPnniFiltDestPrefLen = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 5), XPnniFilterPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltDestPrefLen.setStatus('mandatory')
xPnniFiltDestPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 6), XPnniAddrPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltDestPrefix.setStatus('mandatory')
xPnniFiltCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 7), XPnniFiltCallType().clone('both-ptop-pmp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltCallType.setStatus('mandatory')
xPnniFiltCallSrvCls = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 8), XPnniFiltServiceCategory().clone('none-specified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltCallSrvCls.setStatus('mandatory')
xPnniFiltCallMtrcConstrnt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 9), XPnniFiltMetricConstraint().clone('none-specified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltCallMtrcConstrnt.setStatus('mandatory')
xPnniFiltCallMtrcThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltCallMtrcThresh.setStatus('mandatory')
xPnniFiltTrapThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltTrapThresh.setStatus('mandatory')
xPnniFiltSrcExceptionCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 12), XPnniFiltExceptionCriteria().clone('none-specified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltSrcExceptionCriteria.setStatus('mandatory')
xPnniFiltSrcExceptionLen = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 13), XPnniFilterPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltSrcExceptionLen.setStatus('mandatory')
xPnniFiltSrcException = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 14), XPnniAddrPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltSrcException.setStatus('mandatory')
xPnniFiltDestExceptionCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 15), XPnniFiltExceptionCriteria().clone('none-specified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltDestExceptionCriteria.setStatus('mandatory')
xPnniFiltDestExceptionLen = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 16), XPnniFilterPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltDestExceptionLen.setStatus('mandatory')
xPnniFiltDestException = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 17), XPnniAddrPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltDestException.setStatus('mandatory')
xPnniFiltDeniedHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltDeniedHitCount.setStatus('mandatory')
xPnniFiltExceptionHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltExceptionHitCount.setStatus('mandatory')
xPnniFiltTODStartHr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltTODStartHr.setStatus('mandatory')
xPnniFiltTODStartMin = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltTODStartMin.setStatus('mandatory')
xPnniFiltTODStartSec = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltTODStartSec.setStatus('mandatory')
xPnniFiltTODStopHr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltTODStopHr.setStatus('mandatory')
xPnniFiltTODStopMin = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltTODStopMin.setStatus('mandatory')
xPnniFiltTODStopSec = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 2, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniFiltTODStopSec.setStatus('mandatory')
xPnniIAdjMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3))
xPnniIAdjGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1))
xPnniNumIAdj = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniNumIAdj.setStatus('mandatory')
xPnniIAdjTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2), )
if mibBuilder.loadTexts: xPnniIAdjTable.setStatus('mandatory')
xPnniIAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1), ).setIndexNames((0, "XYLANPNNI-MIB", "xPnniIAdjIndex"))
if mibBuilder.loadTexts: xPnniIAdjEntry.setStatus('mandatory')
xPnniIAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: xPnniIAdjIndex.setStatus('mandatory')
xPnniIAdjAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 2), XPnniAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjAtmAddress.setStatus('mandatory')
xPnniIAdjSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjSlot.setStatus('mandatory')
xPnniIAdjPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjPort.setStatus('mandatory')
xPnniIAdjInst = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjInst.setStatus('mandatory')
xPnniIAdjCsmPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjCsmPPort.setStatus('mandatory')
xPnniIAdjAdvertised = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjAdvertised.setStatus('mandatory')
xPnniIAdjSummarized = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjSummarized.setStatus('mandatory')
xPnniIAdjLearned = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 3, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniIAdjLearned.setStatus('mandatory')
xPnniTestMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4))
xPnniRtstMIBGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1))
xPnniRtstTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1), )
if mibBuilder.loadTexts: xPnniRtstTable.setStatus('mandatory')
xPnniRtstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1), ).setIndexNames((0, "XYLANPNNI-MIB", "xPnniNodeIndex"), (0, "XYLANPNNI-MIB", "xPnniRtstClass"), (0, "XYLANPNNI-MIB", "xPnniRtstType"), (0, "XYLANPNNI-MIB", "xPnniRtstDest"))
if mibBuilder.loadTexts: xPnniRtstEntry.setStatus('mandatory')
xPnniRtstClass = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ubr", 1), ("cbr", 2), ("vbrRt", 3), ("vbrNrt", 4), ("abr", 5))))
if mibBuilder.loadTexts: xPnniRtstClass.setStatus('mandatory')
xPnniRtstType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ptpt", 1), ("pmp", 2))))
if mibBuilder.loadTexts: xPnniRtstType.setStatus('mandatory')
xPnniRtstDest = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20))
if mibBuilder.loadTexts: xPnniRtstDest.setStatus('mandatory')
xPnniRtstError = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("success", 0), ("noRouteToDest", 1), ("dtlExhaustion", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstError.setStatus('mandatory')
xPnniRtstFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dtlAdded", 1), ("direct", 2), ("myself", 3), ("directEreach", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstFlags.setStatus('mandatory')
xPnniRtstOutboundPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 6), XPnniPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstOutboundPort.setStatus('mandatory')
xPnniRtstVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstVPI.setStatus('mandatory')
xPnniRtstE164 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstE164.setStatus('mandatory')
xPnniRtstE164len = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstE164len.setStatus('mandatory')
xPnniRtstHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstHopCount.setStatus('mandatory')
xPnniRtstDTL = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(52, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstDTL.setStatus('mandatory')
xPnniRtstCurPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniRtstCurPointer.setStatus('mandatory')
xPnniTrcMIBGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2))
xPnniTrcBufSiz = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniTrcBufSiz.setStatus('mandatory')
xPnniTrcBufTrigger = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loop", 1), ("haltOnFull", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniTrcBufTrigger.setStatus('mandatory')
xPnniTrcBufControl = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("freeze", 2), ("stopAndFreeBuf", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniTrcBufControl.setStatus('mandatory')
xPnniTrcNodeIndex = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniTrcNodeIndex.setStatus('mandatory')
xPnniTrcTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5), )
if mibBuilder.loadTexts: xPnniTrcTable.setStatus('mandatory')
xPnniTrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1), ).setIndexNames((0, "XYLANPNNI-MIB", "xPnniTrcFrameIndex"), (0, "XYLANPNNI-MIB", "xPnniTrcFrameFrag"))
if mibBuilder.loadTexts: xPnniTrcEntry.setStatus('mandatory')
xPnniTrcFrameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcFrameIndex.setStatus('mandatory')
xPnniTrcFrameFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcFrameFrag.setStatus('mandatory')
xPnniTrcDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcDirection.setStatus('mandatory')
xPnniTrcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcSlot.setStatus('mandatory')
xPnniTrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcPort.setStatus('mandatory')
xPnniTrcCsmPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcCsmPPort.setStatus('mandatory')
xPnniTrcFrType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("hello", 1), ("ptsp", 2), ("ptseAck", 3), ("dbSumm", 4), ("ptseReq", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcFrType.setStatus('mandatory')
xPnniTrcFrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcFrLen.setStatus('mandatory')
xPnniTrcLearned = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcLearned.setStatus('mandatory')
xPnniTrcFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 4, 2, 5, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1000, 1000)).setFixedLength(1000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrcFrame.setStatus('mandatory')
xPnniAliasTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 5), )
if mibBuilder.loadTexts: xPnniAliasTable.setStatus('mandatory')
xPnniAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 5, 1), ).setIndexNames((0, "XYLANPNNI-MIB", "xPnniAliasIndex"))
if mibBuilder.loadTexts: xPnniAliasEntry.setStatus('mandatory')
xPnniAliasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniAliasIndex.setStatus('mandatory')
xPnniAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniAliasName.setStatus('mandatory')
xPnniAliasPrefLen = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniAliasPrefLen.setStatus('mandatory')
xPnniAliasPrefixBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xPnniAliasPrefixBinding.setStatus('mandatory')
xPnniTrapMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6))
xPnniTrapPnPortId = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapPnPortId.setStatus('mandatory')
xPnniTrapRouteAddrAddress = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 2), XPnniAddrPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapRouteAddrAddress.setStatus('mandatory')
xPnniTrapRouteAddrPrefixLength = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 3), XPnniFilterPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapRouteAddrPrefixLength.setStatus('mandatory')
xPnniTrapFiltIndex = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapFiltIndex.setStatus('mandatory')
xPnniTrapNeighborId = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 5), XPnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapNeighborId.setStatus('mandatory')
xPnniTrapNodeId = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 6), XPnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapNodeId.setStatus('mandatory')
xPnniTrapNodeDownReason = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("localUiAdmin", 1), ("remoteTelnet", 2), ("mgmt", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapNodeDownReason.setStatus('mandatory')
xPnniTrapNodeDownRemoteIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 2, 1, 1, 6, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xPnniTrapNodeDownRemoteIPAddr.setStatus('mandatory')
mibBuilder.exportSymbols("XYLANPNNI-MIB", XPnniPortId=XPnniPortId, xPnniTrcFrLen=xPnniTrcFrLen, xPnniTrcBufControl=xPnniTrcBufControl, xPnniAddressFilterTable=xPnniAddressFilterTable, xPnniIAdjMIBObjects=xPnniIAdjMIBObjects, xPnniTrcDirection=xPnniTrcDirection, xPnniRtstType=xPnniRtstType, xPnniFiltDestPrefix=xPnniFiltDestPrefix, xPnniAliasName=xPnniAliasName, XPnniFiltMetricConstraint=XPnniFiltMetricConstraint, xPnniFiltCallSrvCls=xPnniFiltCallSrvCls, xPnniTrcCsmPPort=xPnniTrcCsmPPort, xPnniRtstHopCount=xPnniRtstHopCount, XPnniFiltExceptionCriteria=XPnniFiltExceptionCriteria, xPnniNumIAdj=xPnniNumIAdj, xPnniTrapMIBObjects=xPnniTrapMIBObjects, xPnniAliasTable=xPnniAliasTable, xPnniIAdjSummarized=xPnniIAdjSummarized, xPnniTrcFrame=xPnniTrcFrame, xPnniTrcFrameFrag=xPnniTrcFrameFrag, xPnniTrcNodeIndex=xPnniTrcNodeIndex, XPnniAtmAddr=XPnniAtmAddr, xPnniFiltSrcExceptionCriteria=xPnniFiltSrcExceptionCriteria, xPnniFiltTODStartHr=xPnniFiltTODStartHr, XPnniFiltCallType=XPnniFiltCallType, xPnniFiltDestPrefLen=xPnniFiltDestPrefLen, xPnniFiltTODStartSec=xPnniFiltTODStartSec, xPnniRtstFlags=xPnniRtstFlags, xPnniIAdjEntry=xPnniIAdjEntry, xPnniRtstOutboundPort=xPnniRtstOutboundPort, xPnniTrcBufSiz=xPnniTrcBufSiz, xPnniIAdjTable=xPnniIAdjTable, xPnniAddressFilterEntry=xPnniAddressFilterEntry, xPnniFiltNodeLevel=xPnniFiltNodeLevel, xPnniFiltSrcPrefLen=xPnniFiltSrcPrefLen, xPnniFiltTrapThresh=xPnniFiltTrapThresh, xPnniRtstE164len=xPnniRtstE164len, xPnniRtstTable=xPnniRtstTable, xPnniFiltTODStopMin=xPnniFiltTODStopMin, xPnniRtstMIBGroup=xPnniRtstMIBGroup, xPnniIAdjLearned=xPnniIAdjLearned, xPnniFiltSrcPrefix=xPnniFiltSrcPrefix, xPnniTrcEntry=xPnniTrcEntry, xPnniFiltDestExceptionLen=xPnniFiltDestExceptionLen, xPnniFiltDestExceptionCriteria=xPnniFiltDestExceptionCriteria, xPnniNameEntry=xPnniNameEntry, xPnniTrapNeighborId=xPnniTrapNeighborId, xPnniAliasIndex=xPnniAliasIndex, xPnniFiltSrcExceptionLen=xPnniFiltSrcExceptionLen, xPnniFiltDeniedHitCount=xPnniFiltDeniedHitCount, xPnniRtstE164=xPnniRtstE164, xPnniRtstVPI=xPnniRtstVPI, xPnniTrapNodeDownRemoteIPAddr=xPnniTrapNodeDownRemoteIPAddr, xylanPnniMIBExtens=xylanPnniMIBExtens, xPnniRtstDTL=xPnniRtstDTL, xPnniTrapRouteAddrAddress=xPnniTrapRouteAddrAddress, xPnniTrcBufTrigger=xPnniTrcBufTrigger, xylanPnniMIB=xylanPnniMIB, xPnniTrcFrType=xPnniTrcFrType, xPnniAliasEntry=xPnniAliasEntry, xPnniFiltDestException=xPnniFiltDestException, xPnniIAdjIndex=xPnniIAdjIndex, xPnniFiltIndex=xPnniFiltIndex, xPnniRtstClass=xPnniRtstClass, xPnniIAdjCsmPPort=xPnniIAdjCsmPPort, PYSNMP_MODULE_ID=xylanPnniMIB, xPnniFiltTODStopSec=xPnniFiltTODStopSec, xPnniTrcLearned=xPnniTrcLearned, xPnniTrcSlot=xPnniTrcSlot, xPnniIAdjSlot=xPnniIAdjSlot, xPnniRtstError=xPnniRtstError, xPnniTrcFrameIndex=xPnniTrcFrameIndex, xPnniRtstCurPointer=xPnniRtstCurPointer, xPnniNodeName=xPnniNodeName, xPnniTrcTable=xPnniTrcTable, XPnniFilterPrefixLength=XPnniFilterPrefixLength, xPnniRtstEntry=xPnniRtstEntry, xPnniAliasPrefLen=xPnniAliasPrefLen, xPnniTrapPnPortId=xPnniTrapPnPortId, xPnniAliasPrefixBinding=xPnniAliasPrefixBinding, xPnniTrapNodeId=xPnniTrapNodeId, xPnniIAdjInst=xPnniIAdjInst, xPnniAssociativeNameTable=xPnniAssociativeNameTable, xPnniIAdjAdvertised=xPnniIAdjAdvertised, xPnniFiltCallMtrcConstrnt=xPnniFiltCallMtrcConstrnt, XPnniNodeId=XPnniNodeId, xPnniNodeId=xPnniNodeId, xPnniFiltTODStartMin=xPnniFiltTODStartMin, xPnniIAdjPort=xPnniIAdjPort, xPnniTrcMIBGroup=xPnniTrcMIBGroup, xPnniFiltCallType=xPnniFiltCallType, xPnniIAdjGroup=xPnniIAdjGroup, XPnniNodeLevel=XPnniNodeLevel, xPnniTrapFiltIndex=xPnniTrapFiltIndex, XPnniAddrPrefix=XPnniAddrPrefix, xPnniNodeIndex=xPnniNodeIndex, xPnniIAdjAtmAddress=xPnniIAdjAtmAddress, xPnniTestMIBObjects=xPnniTestMIBObjects, xPnniFiltCallMtrcThresh=xPnniFiltCallMtrcThresh, xPnniFiltSrcException=xPnniFiltSrcException, xPnniTrcPort=xPnniTrcPort, xylanPnniMIBObjs=xylanPnniMIBObjs, xPnniRtstDest=xPnniRtstDest, xPnniTrapRouteAddrPrefixLength=xPnniTrapRouteAddrPrefixLength, XPnniFiltServiceCategory=XPnniFiltServiceCategory, xPnniFiltExceptionHitCount=xPnniFiltExceptionHitCount, xPnniTrapNodeDownReason=xPnniTrapNodeDownReason, xPnniFiltTODStopHr=xPnniFiltTODStopHr)
