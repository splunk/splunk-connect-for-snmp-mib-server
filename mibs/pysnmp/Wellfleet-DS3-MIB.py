#
# PySNMP MIB module Wellfleet-DS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DS3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Opaque, ObjectIdentity, Integer32, MibIdentifier, mgmt, Counter32, TimeTicks, Bits, mib_2, enterprises, ModuleIdentity, Counter64, NotificationType, Gauge32, iso, Unsigned32, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Opaque", "ObjectIdentity", "Integer32", "MibIdentifier", "mgmt", "Counter32", "TimeTicks", "Bits", "mib-2", "enterprises", "ModuleIdentity", "Counter64", "NotificationType", "Gauge32", "iso", "Unsigned32", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfDs3Group, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDs3Group")
wfDs3Config = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1), )
if mibBuilder.loadTexts: wfDs3Config.setStatus('mandatory')
wfDs3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3LineIndex"))
if mibBuilder.loadTexts: wfDs3ConfigEntry.setStatus('mandatory')
wfDs3LineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LineIndex.setStatus('mandatory')
wfDs3TimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TimeElapsed.setStatus('mandatory')
wfDs3ValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3ValidIntervals.setStatus('mandatory')
wfDs3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("ds3cbitparity", 4), ("ds3clearchannel", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LineType.setStatus('mandatory')
wfDs3ZeroCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("ds3b3zs", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3ZeroCoding.setStatus('mandatory')
wfDs3SendCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("ds3sendnocode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3SendCode.setStatus('mandatory')
wfDs3CircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CircuitIdentifier.setStatus('mandatory')
wfDs3LoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ds3noloop", 1), ("ds3mgrpayloadloop", 2), ("ds3mgrlineloop", 3), ("ds3netreqpayloadloop", 4), ("ds3netreqlineloop", 5), ("ds3otherloop", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LoopbackConfig.setStatus('mandatory')
wfDs3LineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("ds3noalarm", 1), ("ds3farendalarm", 2), ("ds3alarmindicationsignal", 4), ("ds3lossofframe", 8), ("ds3lossofsignal", 16), ("ds3loopbackstate", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LineStatus.setStatus('mandatory')
wfDs3Current = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2), )
if mibBuilder.loadTexts: wfDs3Current.setStatus('mandatory')
wfDs3CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3CurrentIndex"))
if mibBuilder.loadTexts: wfDs3CurrentEntry.setStatus('mandatory')
wfDs3CurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentIndex.setStatus('mandatory')
wfDs3CurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentESs.setStatus('mandatory')
wfDs3CurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentSESs.setStatus('mandatory')
wfDs3CurrentSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentSEFs.setStatus('mandatory')
wfDs3CurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentUASs.setStatus('mandatory')
wfDs3CurrentBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentBPVs.setStatus('mandatory')
wfDs3CurrentCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentCVs.setStatus('mandatory')
wfDs3Interval = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3), )
if mibBuilder.loadTexts: wfDs3Interval.setStatus('mandatory')
wfDs3IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3IntervalIndex"), (0, "Wellfleet-DS3-MIB", "wfDs3IntervalNumber"))
if mibBuilder.loadTexts: wfDs3IntervalEntry.setStatus('mandatory')
wfDs3IntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalIndex.setStatus('mandatory')
wfDs3IntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalNumber.setStatus('mandatory')
wfDs3IntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalESs.setStatus('mandatory')
wfDs3IntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalSESs.setStatus('mandatory')
wfDs3IntervalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalSEFs.setStatus('mandatory')
wfDs3IntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalUASs.setStatus('mandatory')
wfDs3IntervalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalBPVs.setStatus('mandatory')
wfDs3IntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalCVs.setStatus('mandatory')
wfDs3Total = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4), )
if mibBuilder.loadTexts: wfDs3Total.setStatus('mandatory')
wfDs3TotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3TotalIndex"))
if mibBuilder.loadTexts: wfDs3TotalEntry.setStatus('mandatory')
wfDs3TotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalIndex.setStatus('mandatory')
wfDs3TotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalESs.setStatus('mandatory')
wfDs3TotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalSESs.setStatus('mandatory')
wfDs3TotalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalSEFs.setStatus('mandatory')
wfDs3TotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalUASs.setStatus('mandatory')
wfDs3TotalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalBPVs.setStatus('mandatory')
wfDs3TotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalCVs.setStatus('mandatory')
wfDs3FeConfig = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5), )
if mibBuilder.loadTexts: wfDs3FeConfig.setStatus('mandatory')
wfDs3FeConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3FeConfigIndex"))
if mibBuilder.loadTexts: wfDs3FeConfigEntry.setStatus('mandatory')
wfDs3FeConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeConfigIndex.setStatus('mandatory')
wfDs3FarEndEquipCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndEquipCode.setStatus('mandatory')
wfDs3FarEndLocationIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndLocationIDCode.setStatus('mandatory')
wfDs3FarEndFrameIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndFrameIDCode.setStatus('mandatory')
wfDs3FarEndUnitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndUnitCode.setStatus('mandatory')
wfDs3FarEndFacilityIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndFacilityIDCode.setStatus('mandatory')
wfDs3FeCurrent = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6), )
if mibBuilder.loadTexts: wfDs3FeCurrent.setStatus('mandatory')
wfDs3FeCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3FeCurrentIndex"))
if mibBuilder.loadTexts: wfDs3FeCurrentEntry.setStatus('mandatory')
wfDs3FeCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentIndex.setStatus('mandatory')
wfDs3FeCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentESs.setStatus('mandatory')
wfDs3FeCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentSESs.setStatus('mandatory')
wfDs3FeCurrentCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentCVs.setStatus('mandatory')
wfDs3FeInterval = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7), )
if mibBuilder.loadTexts: wfDs3FeInterval.setStatus('mandatory')
wfDs3FeIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3FeIntervalIndex"), (0, "Wellfleet-DS3-MIB", "wfDs3FeIntervalNumber"))
if mibBuilder.loadTexts: wfDs3FeIntervalEntry.setStatus('mandatory')
wfDs3FeIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalIndex.setStatus('mandatory')
wfDs3FeIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalNumber.setStatus('mandatory')
wfDs3FeIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalESs.setStatus('mandatory')
wfDs3FeIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalSESs.setStatus('mandatory')
wfDs3FeIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalCVs.setStatus('mandatory')
wfDs3FeTotal = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8), )
if mibBuilder.loadTexts: wfDs3FeTotal.setStatus('mandatory')
wfDs3FeTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1), ).setIndexNames((0, "Wellfleet-DS3-MIB", "wfDs3FeTotalIndex"))
if mibBuilder.loadTexts: wfDs3FeTotalEntry.setStatus('mandatory')
wfDs3FeTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalIndex.setStatus('mandatory')
wfDs3FeTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalESs.setStatus('mandatory')
wfDs3FeTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalSESs.setStatus('mandatory')
wfDs3FeTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalCVs.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-DS3-MIB", wfDs3FeConfig=wfDs3FeConfig, wfDs3CurrentSEFs=wfDs3CurrentSEFs, wfDs3FeIntervalEntry=wfDs3FeIntervalEntry, wfDs3ConfigEntry=wfDs3ConfigEntry, wfDs3IntervalEntry=wfDs3IntervalEntry, wfDs3FeCurrent=wfDs3FeCurrent, wfDs3LineType=wfDs3LineType, wfDs3CurrentBPVs=wfDs3CurrentBPVs, wfDs3FeIntervalNumber=wfDs3FeIntervalNumber, wfDs3FeConfigIndex=wfDs3FeConfigIndex, wfDs3TotalSESs=wfDs3TotalSESs, wfDs3FeConfigEntry=wfDs3FeConfigEntry, wfDs3CurrentESs=wfDs3CurrentESs, wfDs3LineIndex=wfDs3LineIndex, wfDs3Config=wfDs3Config, wfDs3Interval=wfDs3Interval, wfDs3IntervalESs=wfDs3IntervalESs, wfDs3FeCurrentEntry=wfDs3FeCurrentEntry, wfDs3CurrentSESs=wfDs3CurrentSESs, wfDs3ZeroCoding=wfDs3ZeroCoding, wfDs3FarEndLocationIDCode=wfDs3FarEndLocationIDCode, wfDs3CurrentUASs=wfDs3CurrentUASs, wfDs3IntervalBPVs=wfDs3IntervalBPVs, wfDs3TotalUASs=wfDs3TotalUASs, wfDs3CurrentCVs=wfDs3CurrentCVs, wfDs3CurrentIndex=wfDs3CurrentIndex, wfDs3TotalCVs=wfDs3TotalCVs, wfDs3FeInterval=wfDs3FeInterval, wfDs3FeIntervalIndex=wfDs3FeIntervalIndex, wfDs3FarEndEquipCode=wfDs3FarEndEquipCode, wfDs3FarEndFrameIDCode=wfDs3FarEndFrameIDCode, wfDs3CurrentEntry=wfDs3CurrentEntry, wfDs3FarEndUnitCode=wfDs3FarEndUnitCode, wfDs3IntervalSEFs=wfDs3IntervalSEFs, wfDs3TotalSEFs=wfDs3TotalSEFs, wfDs3FeTotalSESs=wfDs3FeTotalSESs, wfDs3FeTotalEntry=wfDs3FeTotalEntry, wfDs3FeCurrentIndex=wfDs3FeCurrentIndex, wfDs3LoopbackConfig=wfDs3LoopbackConfig, wfDs3Current=wfDs3Current, wfDs3FeTotalESs=wfDs3FeTotalESs, wfDs3TotalBPVs=wfDs3TotalBPVs, wfDs3FeCurrentSESs=wfDs3FeCurrentSESs, wfDs3FeIntervalESs=wfDs3FeIntervalESs, wfDs3FeIntervalCVs=wfDs3FeIntervalCVs, wfDs3IntervalCVs=wfDs3IntervalCVs, wfDs3TimeElapsed=wfDs3TimeElapsed, wfDs3TotalIndex=wfDs3TotalIndex, wfDs3TotalESs=wfDs3TotalESs, wfDs3FeIntervalSESs=wfDs3FeIntervalSESs, wfDs3SendCode=wfDs3SendCode, wfDs3FeTotalCVs=wfDs3FeTotalCVs, wfDs3Total=wfDs3Total, wfDs3FeCurrentESs=wfDs3FeCurrentESs, wfDs3FarEndFacilityIDCode=wfDs3FarEndFacilityIDCode, wfDs3FeTotal=wfDs3FeTotal, wfDs3IntervalNumber=wfDs3IntervalNumber, wfDs3TotalEntry=wfDs3TotalEntry, wfDs3ValidIntervals=wfDs3ValidIntervals, wfDs3CircuitIdentifier=wfDs3CircuitIdentifier, wfDs3IntervalSESs=wfDs3IntervalSESs, wfDs3IntervalIndex=wfDs3IntervalIndex, wfDs3IntervalUASs=wfDs3IntervalUASs, wfDs3LineStatus=wfDs3LineStatus, wfDs3FeTotalIndex=wfDs3FeTotalIndex, wfDs3FeCurrentCVs=wfDs3FeCurrentCVs)
