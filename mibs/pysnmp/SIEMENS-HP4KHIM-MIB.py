#
# PySNMP MIB module SIEMENS-HP4KHIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SIEMENS-HP4KHIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:56:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, IpAddress, TimeTicks, Counter64, ObjectIdentity, Integer32, ModuleIdentity, iso, Gauge32, Counter32, Unsigned32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "IpAddress", "TimeTicks", "Counter64", "ObjectIdentity", "Integer32", "ModuleIdentity", "iso", "Gauge32", "Counter32", "Unsigned32", "enterprises")
DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress")
siemens = MibIdentifier((1, 3, 6, 1, 4, 1, 4329))
iandcAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2))
hp4khim = ModuleIdentity((1, 3, 6, 1, 4, 1, 4329, 2, 51))
hp4khim.setRevisions(('2006-06-07 07:47',))
if mibBuilder.loadTexts: hp4khim.setLastUpdated('200611100000Z')
if mibBuilder.loadTexts: hp4khim.setOrganization('Siemens')
class HimPEN(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 9)

class HimPabxId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class HimSwitchNumber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 17)

class HimYesNo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 0))
    namedValues = NamedValues(("yes", 1), ("no", 2), ("other", 0))

class DiscoveryStates(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("done", 1), ("error", 2), ("busy", 3), ("finok", 4), ("finerr", 5), ("kill", 6))

class DiscoveryModes(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 9))
    namedValues = NamedValues(("man", 1), ("auto", 2), ("undef", 9))

class HimPhoneNumber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 22)

class HimShelfNWType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 0))
    namedValues = NamedValues(("flex", 1), ("local", 2), ("apnw", 3), ("apdl", 4), ("other", 0))

himWelcomePage = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1))
himWelPgTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1), )
if mibBuilder.loadTexts: himWelPgTable.setStatus('current')
himWelPgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himWelPgPabxId"))
if mibBuilder.loadTexts: himWelPgEntry.setStatus('current')
himWelPgPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himWelPgPabxId.setStatus('current')
himWelPgSysNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 2), HimSwitchNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himWelPgSysNo.setStatus('current')
himHP4KVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHP4KVersion.setStatus('current')
himSystemRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSystemRelease.setStatus('current')
himRevisionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himRevisionLevel.setStatus('current')
himHWArchitecture = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWArchitecture.setStatus('current')
himHWArchitectureType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWArchitectureType.setStatus('current')
himOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himOperationMode.setStatus('current')
himSWUProc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUProc1.setStatus('current')
himSWUMemory1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUMemory1.setStatus('current')
himSWUProc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUProc2.setStatus('current')
himSWUMemory2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 1, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUMemory2.setStatus('current')
himSwitchData = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2))
himTechInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1), )
if mibBuilder.loadTexts: himTechInfoTable.setStatus('current')
himTechInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himTechInfoPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himTechInfoInfoNo"))
if mibBuilder.loadTexts: himTechInfoEntry.setStatus('current')
himTechInfoPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechInfoPabxId.setStatus('current')
himTechInfoInfoNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechInfoInfoNo.setStatus('current')
himTechInfoDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechInfoDate.setStatus('current')
himTechInfoTechnicalData = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechInfoTechnicalData.setStatus('current')
himTechInfoNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechInfoNumber.setStatus('current')
himTechInfoExtraText = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechInfoExtraText.setStatus('current')
himNotepadDataTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 2), )
if mibBuilder.loadTexts: himNotepadDataTable.setStatus('current')
himNotepadDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himNotepadDataPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himNotepadDataInfoNo"))
if mibBuilder.loadTexts: himNotepadDataEntry.setStatus('current')
himNotepadDataPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himNotepadDataPabxId.setStatus('current')
himNotepadDataInfoNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himNotepadDataInfoNo.setStatus('current')
himNotepadDataDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himNotepadDataDate.setStatus('current')
himNotepadDataText = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 77))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himNotepadDataText.setStatus('current')
himProjPlanInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 3), )
if mibBuilder.loadTexts: himProjPlanInfoTable.setStatus('current')
himProjPlanInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 3, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himProjPlanPabxId"))
if mibBuilder.loadTexts: himProjPlanInfoEntry.setStatus('current')
himProjPlanPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 3, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himProjPlanPabxId.setStatus('current')
himProjPlanInfoFile = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12)).clone('ProjPlan.txt')).setMaxAccess("readonly")
if mibBuilder.loadTexts: himProjPlanInfoFile.setStatus('current')
himProjPlanInfoCreationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himProjPlanInfoCreationDate.setStatus('current')
himProjPlanInfoCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himProjPlanInfoCreationTime.setStatus('current')
himSpecSwitchData = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3))
himSpecShelfDataTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1), )
if mibBuilder.loadTexts: himSpecShelfDataTable.setStatus('current')
himSpecShelfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSpecShelfDataPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSpecShelfDataAddress"))
if mibBuilder.loadTexts: himSpecShelfDataEntry.setStatus('current')
himSpecShelfDataPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataPabxId.setStatus('current')
himSpecShelfDataAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataAddress.setStatus('current')
himSpecShelfDataFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataFrameType.setStatus('current')
himSpecShelfDataLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0))).clone(namedValues=NamedValues(("preatl", 1), ("cc40f", 2), ("cc80w", 3), ("cc80f", 4), ("l80xf", 5), ("l80xw", 6), ("ltuw", 7), ("inch19", 8), ("ap37009", 9), ("ap370013", 10), ("ext-comp-x", 11), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataLTU.setStatus('current')
himSpecShelfDataNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 5), HimShelfNWType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataNetworkType.setStatus('current')
himSpecShelfDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataNetworkAddress.setStatus('current')
himSpecShelfDataRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataRemote.setStatus('current')
himSpecShelfDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataLocation.setStatus('current')
himSpecShelfDataLTUC = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSpecShelfDataLTUC.setStatus('current')
himSWUBoardTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2), )
if mibBuilder.loadTexts: himSWUBoardTable.setStatus('current')
himSWUBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSWUBoardPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSWUBoardPEN"))
if mibBuilder.loadTexts: himSWUBoardEntry.setStatus('current')
himSWUBoardPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardPabxId.setStatus('current')
himSWUBoardPEN = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 2), HimPEN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardPEN.setStatus('current')
himSWUBoardOverlayLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardOverlayLTU.setStatus('current')
himSWUBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardType.setStatus('current')
himSWUBoardNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardNominal.setStatus('current')
himSWUBoardActual = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardActual.setStatus('current')
hhimSWUBoardFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhimSWUBoardFirmware.setStatus('current')
himSWUBoardRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardRev.setStatus('current')
himSWUBoardFunctId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardFunctId.setStatus('current')
himSWUBoardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardMode.setStatus('current')
himSWUBoardLWNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardLWNo.setStatus('current')
himSWUBoardLWInterVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardLWInterVer.setStatus('current')
himSWUBoardLWName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardLWName.setStatus('current')
himSWUBoardLWDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 3, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWUBoardLWDate.setStatus('current')
himSWUPeriphery = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4))
himPSIOAssTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 1), )
if mibBuilder.loadTexts: himPSIOAssTable.setStatus('current')
himPSIOAssEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himPSIOAssPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himPSIOAssPEN"))
if mibBuilder.loadTexts: himPSIOAssEntry.setStatus('current')
himPSIOAssPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPSIOAssPabxId.setStatus('current')
himPSIOAssAssembly = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPSIOAssAssembly.setStatus('current')
himPSIOAssPEN = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 1, 1, 2), HimPEN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPSIOAssPEN.setStatus('current')
himPSIOAssActual = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPSIOAssActual.setStatus('current')
himPSIOAssFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPSIOAssFirmware.setStatus('current')
himSerialLineTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2), )
if mibBuilder.loadTexts: himSerialLineTable.setStatus('current')
himSerialLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSerialLinePabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSerialLineNumber"))
if mibBuilder.loadTexts: himSerialLineEntry.setStatus('current')
himSerialLinePabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSerialLinePabxId.setStatus('current')
himSerialLineBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSerialLineBoardType.setStatus('current')
himSerialLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSerialLineNumber.setStatus('current')
himSerialLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSerialLineSpeed.setStatus('current')
himSerialLineLogDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSerialLineLogDevName.setStatus('current')
himSerialLineDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSerialLineDevType.setStatus('current')
himSerialLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("asy", 1), ("v24", 2), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSerialLineType.setStatus('current')
himSCSIDevTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3), )
if mibBuilder.loadTexts: himSCSIDevTable.setStatus('current')
himSCSIDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSCSIDevPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSCSIDevId"))
if mibBuilder.loadTexts: himSCSIDevEntry.setStatus('current')
himSCSIDevPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSCSIDevPabxId.setStatus('current')
himSCSIDevId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSCSIDevId.setStatus('current')
himSCSIDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSCSIDevType.setStatus('current')
himSCSIDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSCSIDevName.setStatus('current')
himSCSIDevFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSCSIDevFirmware.setStatus('current')
himSCSIDevLoadDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 4, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSCSIDevLoadDrive.setStatus('current')
himCentralSwitchData = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5))
himCabinetTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1), )
if mibBuilder.loadTexts: himCabinetTable.setStatus('current')
himCabinetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himCabPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himCabAddr"))
if mibBuilder.loadTexts: himCabinetEntry.setStatus('current')
himCabPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabPabxId.setStatus('current')
himCabAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabAddr.setStatus('current')
himCabPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabPhysAddr.setStatus('current')
himCabCabinet = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabCabinet.setStatus('current')
himCabPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabPartNo.setStatus('current')
himCabShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabShelfNo.setStatus('current')
himCabFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabFrame.setStatus('current')
himCabPid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabPid1.setStatus('current')
himCabPid2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabPid2.setStatus('current')
himCabPid3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabPid3.setStatus('current')
himCabLTUNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himCabLTUNo.setStatus('current')
himMemScalingTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2), )
if mibBuilder.loadTexts: himMemScalingTable.setStatus('current')
himMemScalingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himMemScalingPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himMemScalingUnit"))
if mibBuilder.loadTexts: himMemScalingEntry.setStatus('current')
himMemScalingPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMemScalingPabxId.setStatus('current')
himMemScalingUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMemScalingUnit.setStatus('current')
himMemScalingUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMemScalingUsed.setStatus('current')
himMemScalingMaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMemScalingMaxUsed.setStatus('current')
himMemScalingAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMemScalingAllocated.setStatus('current')
himMemScalingStandard = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMemScalingStandard.setStatus('current')
himMemScalingSysMax = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 5, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMemScalingSysMax.setStatus('current')
himGeneralSwitchData = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6))
himDBConfSys = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1))
himDBConfSysTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1), )
if mibBuilder.loadTexts: himDBConfSysTable.setStatus('current')
himDBConfSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himDBConfSysPabxId"))
if mibBuilder.loadTexts: himDBConfSysEntry.setStatus('current')
himDBConfSysPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysPabxId.setStatus('current')
himDBConfSysClass1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysClass1.setStatus('current')
himDBConfSysClass2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysClass2.setStatus('current')
himDBConfSysHWAss1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysHWAss1.setStatus('current')
himDBConfSysHWAss2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysHWAss2.setStatus('current')
himDBConfSysDevLine1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysDevLine1.setStatus('current')
himDBConfSysDevLine2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysDevLine2.setStatus('current')
himDBConfSysOpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("simplex", 1), ("duplex", 2), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysOpMode.setStatus('current')
himDBConfSysResType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysResType.setStatus('current')
himDBConfSysHWArch = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysHWArch.setStatus('current')
himDBConfSysHWArchType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysHWArchType.setStatus('current')
himDBConfSysNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 12), HimSwitchNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysNo.setStatus('current')
himDBConfSysLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 0))).clone(namedValues=NamedValues(("customer", 1), ("support", 2), ("testlab", 3), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysLoc.setStatus('current')
himDBConfSysBaseApp = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysBaseApp.setStatus('current')
himDBConfSysDBApp = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysDBApp.setStatus('current')
himDBConfSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 1, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfSysID.setStatus('current')
himDBConfHW = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2))
himDBConfHWTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1), )
if mibBuilder.loadTexts: himDBConfHWTable.setStatus('current')
himDBConfHWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himDBConfHWPabxId"))
if mibBuilder.loadTexts: himDBConfHWEntry.setStatus('current')
himDBConfHWPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWPabxId.setStatus('current')
himDBConfHWLTG = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWLTG.setStatus('current')
himDBConfHWLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 15), ValueRangeConstraint(17, 99), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWLTU.setStatus('current')
himDBConfHWLines = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWLines.setStatus('current')
himDBConfHWPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWPorts.setStatus('current')
himDBConfHWPBC = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWPBC.setStatus('current')
himDBConfHWMTSBdPerGSN = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWMTSBdPerGSN.setStatus('current')
himDBConfHWSIUPPerLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWSIUPPerLTU.setStatus('current')
himDBConfHWDIUCPerLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWDIUCPerLTU.setStatus('current')
himDBConfHWHwyPerMTSBd = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWHwyPerMTSBd.setStatus('current')
himDBConfHWHDLCPerDCL = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWHDLCPerDCL.setStatus('current')
himDBConfHWPBCPerDCL = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWPBCPerDCL.setStatus('current')
himDBConfHWStdSIULine = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWStdSIULine.setStatus('current')
himDBConfHWConfLine = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWConfLine.setStatus('current')
himDBConfHWDBDim = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWDBDim.setStatus('current')
himDBConfHWTableVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDBConfHWTableVer.setStatus('current')
himHWData = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3))
himHWDataTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1), )
if mibBuilder.loadTexts: himHWDataTable.setStatus('current')
himHWDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himHWDataPabxId"))
if mibBuilder.loadTexts: himHWDataEntry.setStatus('current')
himHWDataPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWDataPabxId.setStatus('current')
himHWArch = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWArch.setStatus('current')
himHWArchType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWArchType.setStatus('current')
himHWOpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWOpMode.setStatus('current')
himHWSWUProc1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWSWUProc1.setStatus('current')
himHWSWUMem1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWSWUMem1.setStatus('current')
himHWSWUProc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWSWUProc2.setStatus('current')
himHWSWUMem2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWSWUMem2.setStatus('current')
himHWADPProc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWADPProc.setStatus('current')
himHWADPMem = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 3, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himHWADPMem.setStatus('current')
himLWDataOnCB = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4))
himLWDataOnCBTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4, 1), )
if mibBuilder.loadTexts: himLWDataOnCBTable.setStatus('current')
himLWDataOnCBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himLWDataOnCBPabxId"))
if mibBuilder.loadTexts: himLWDataOnCBEntry.setStatus('current')
himLWDataOnCBPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWDataOnCBPabxId.setStatus('current')
himLWOnCBAss = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCBAss.setStatus('current')
himLWOnCBPBCAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCBPBCAddr.setStatus('current')
himLWOnCBFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCBFileName.setStatus('current')
himLWOnCBProdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCBProdTime.setStatus('current')
himLWDataOnProc = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5))
himLWOnProcTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1), )
if mibBuilder.loadTexts: himLWOnProcTable.setStatus('current')
himLWOnProcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himLWOnProcPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himLWOnProcAss"), (0, "SIEMENS-HP4KHIM-MIB", "himLWOnProcInfoType"))
if mibBuilder.loadTexts: himLWOnProcEntry.setStatus('current')
himLWOnProcPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnProcPabxId.setStatus('current')
himLWOnProcAss = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnProcAss.setStatus('current')
himLWOnProcInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnProcInfoType.setStatus('current')
himLWOnProcLWId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnProcLWId.setStatus('current')
himLWOnProcLWIdCMP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnProcLWIdCMP.setStatus('current')
himLWOnProcLWIdLP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 5, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnProcLWIdLP.setStatus('current')
himLWDataOnCSIU = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6))
himLWOnCSIUTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1), )
if mibBuilder.loadTexts: himLWOnCSIUTable.setStatus('current')
himLWOnCSIUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himLWOnCSIUPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himLWOnCSIUNominal"), (0, "SIEMENS-HP4KHIM-MIB", "himLWOnCSIULWNo"))
if mibBuilder.loadTexts: himLWOnCSIUEntry.setStatus('current')
himLWOnCSIUPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIUPabxId.setStatus('current')
himLWOnCSIUNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIUNominal.setStatus('current')
himLWOnCSIULWNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIULWNo.setStatus('current')
himLWOnCSIUProc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIUProc.setStatus('current')
himLWOnCSIUSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIUSlot.setStatus('current')
himLWOnCSIUActual = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIUActual.setStatus('current')
himLWOnCSIUFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIUFileName.setStatus('current')
himLWOnCSIUFileProd = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 6, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himLWOnCSIUFileProd.setStatus('current')
himMacAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7))
himMacAddrTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7, 1), )
if mibBuilder.loadTexts: himMacAddrTable.setStatus('current')
himMacAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himMacAddrPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himMacAddrProc"), (0, "SIEMENS-HP4KHIM-MIB", "himMacAddrInfoType"))
if mibBuilder.loadTexts: himMacAddrEntry.setStatus('current')
himMacAddrPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMacAddrPabxId.setStatus('current')
himMacAddrProc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMacAddrProc.setStatus('current')
himMacAddrInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMacAddrInfoType.setStatus('current')
himMacAddrCLan = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMacAddrCLan.setStatus('current')
himMacAddrIPDA = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 6, 7, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMacAddrIPDA.setStatus('current')
himFeatures = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7))
himMarketingFeatures = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1))
himMarkFeatTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1), )
if mibBuilder.loadTexts: himMarkFeatTable.setStatus('current')
himMarkFeatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himMarkFeatPabxId"))
if mibBuilder.loadTexts: himMarkFeatEntry.setStatus('current')
himMarkFeatPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatPabxId.setStatus('current')
himMarkFeatVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatVer.setStatus('current')
himMarkFeatSerNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatSerNo.setStatus('current')
himMarkFeatHWId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatHWId.setStatus('current')
himMarkFeatInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatInstallDate.setStatus('current')
himMarkFeatExpiryDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatExpiryDate.setStatus('current')
himMarkFeatConfCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatConfCode.setStatus('current')
himMarkFeatTrialModeAct = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 8), HimYesNo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatTrialModeAct.setStatus('current')
himMarkFeatTrialRemDays = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himMarkFeatTrialRemDays.setStatus('current')
himSalesFeatTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2), )
if mibBuilder.loadTexts: himSalesFeatTable.setStatus('current')
himSalesFeatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSalesFeatPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSalesFeatMarketPackId"))
if mibBuilder.loadTexts: himSalesFeatEntry.setStatus('current')
himSalesFeatPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSalesFeatPabxId.setStatus('current')
himSalesFeatMarketPackId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSalesFeatMarketPackId.setStatus('current')
himSalesFeatMarketPack = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSalesFeatMarketPack.setStatus('current')
himSalesFeatContract = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSalesFeatContract.setStatus('current')
himSalesFeatUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSalesFeatUsed.setStatus('current')
himSalesFeatFree = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSalesFeatFree.setStatus('current')
himSalesFeatMarkForTrial = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSalesFeatMarkForTrial.setStatus('current')
himTechFeatures = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 2))
himTechFeatTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 2, 1), )
if mibBuilder.loadTexts: himTechFeatTable.setStatus('current')
himTechFeatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 2, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himTechFeatPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himTechFeatId"))
if mibBuilder.loadTexts: himTechFeatEntry.setStatus('current')
himTechFeatPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 2, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechFeatPabxId.setStatus('current')
himTechFeatId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechFeatId.setStatus('current')
himTechFeatName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechFeatName.setStatus('current')
himTechFeatState = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 7, 2, 1, 1, 4), HimYesNo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himTechFeatState.setStatus('current')
himAPSPatches = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8))
himSwitchAPS = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 1))
himSwitchAPSTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 1, 1), )
if mibBuilder.loadTexts: himSwitchAPSTable.setStatus('current')
himSwitchAPSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 1, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSwitchAPSPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSwitchAPSName"))
if mibBuilder.loadTexts: himSwitchAPSEntry.setStatus('current')
himSwitchAPSPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 1, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSwitchAPSPabxId.setStatus('current')
himSwitchAPSName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSwitchAPSName.setStatus('current')
himSwitchAPSCorrVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSwitchAPSCorrVer.setStatus('current')
himSwitchAPSPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSwitchAPSPartNo.setStatus('current')
himReplacedAMOs = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2))
himReplAMOTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2, 1), )
if mibBuilder.loadTexts: himReplAMOTable.setStatus('current')
himReplAMOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himReplAMOPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himReplAMOAPS"), (0, "SIEMENS-HP4KHIM-MIB", "himReplAMOName"))
if mibBuilder.loadTexts: himReplAMOEntry.setStatus('current')
himReplAMOPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himReplAMOPabxId.setStatus('current')
himReplAMOAPS = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himReplAMOAPS.setStatus('current')
himReplAMOName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himReplAMOName.setStatus('current')
himReplAMOInAPSDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himReplAMOInAPSDir.setStatus('current')
himReplAMOSubsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himReplAMOSubsystem.setStatus('current')
himPatchInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3))
himPatchInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1), )
if mibBuilder.loadTexts: himPatchInfoTable.setStatus('current')
himPatchInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himPatchInfoPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himPatchInfoPatchNo"))
if mibBuilder.loadTexts: himPatchInfoEntry.setStatus('current')
himPatchInfoPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPatchInfoPabxId.setStatus('current')
himPatchInfoPatchNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPatchInfoPatchNo.setStatus('current')
himPatchInfoPatchGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPatchInfoPatchGroup.setStatus('current')
himPatchInfoOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1, 4), HimYesNo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPatchInfoOpt.setStatus('current')
himPatchInfoActHD = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPatchInfoActHD.setStatus('current')
himPatchInfoActADP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPatchInfoActADP.setStatus('current')
himPatchInfoActBP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 8, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himPatchInfoActBP.setStatus('current')
himSWVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9))
himSWVerOnProcTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1), )
if mibBuilder.loadTexts: himSWVerOnProcTable.setStatus('current')
himSWVerOnProcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSWVerOnProcPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSWVerOnProcSrc"))
if mibBuilder.loadTexts: himSWVerOnProcEntry.setStatus('current')
himSWVerOnProcPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcPabxId.setStatus('current')
himSWVerOnProcSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcSrc.setStatus('current')
himSWVerOnProcSWVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcSWVer.setStatus('current')
himSWVerOnProcItemCodeNoPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcItemCodeNoPrefix.setStatus('current')
himSWVerOnProcHP4KVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcHP4KVer.setStatus('current')
himSWVerOnProcSysRel = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcSysRel.setStatus('current')
himSWVerOnProcCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcCountry.setStatus('current')
himSWVerOnProcCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcCountryCode.setStatus('current')
himSWVerOnProcRevNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 9, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWVerOnProcRevNo.setStatus('current')
himSwPkgVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10))
himSWPkgVerTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1), )
if mibBuilder.loadTexts: himSWPkgVerTable.setStatus('current')
himSWPkgVerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSWPkgVerPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSWPkgVerPkgAbbr"))
if mibBuilder.loadTexts: himSWPkgVerEntry.setStatus('current')
himSWPkgVerPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWPkgVerPabxId.setStatus('current')
himSWPkgVerPkgAbbr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWPkgVerPkgAbbr.setStatus('current')
himSWPkgVerPkgName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWPkgVerPkgName.setStatus('current')
himSWPkgVerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWPkgVerVersion.setStatus('current')
himSWPkgVerInstAt = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWPkgVerInstAt.setStatus('current')
himSWPkgVerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("partial", 1), ("complete", 2), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSWPkgVerStatus.setStatus('current')
himSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11))
himSysBasicTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 1), )
if mibBuilder.loadTexts: himSysBasicTable.setStatus('current')
himSysBasicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSysBasicPabxId"))
if mibBuilder.loadTexts: himSysBasicEntry.setStatus('current')
himSysBasicPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysBasicPabxId.setStatus('current')
himSysBasicDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysBasicDomain.setStatus('current')
himSysBasicNodeNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysBasicNodeNo.setStatus('current')
himSysBasicLEGK = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 1, 1, 4), HimYesNo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysBasicLEGK.setStatus('current')
himSysLANCardsTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2), )
if mibBuilder.loadTexts: himSysLANCardsTable.setStatus('current')
himSysLANCardsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSysLANCardsPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSysLANCardsIPAddr"))
if mibBuilder.loadTexts: himSysLANCardsEntry.setStatus('current')
himSysLANCardsPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysLANCardsPabxId.setStatus('current')
himSysLANCardsIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysLANCardsIPAddr.setStatus('current')
himSysLANCardsNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysLANCardsNetMask.setStatus('current')
himSysLANCardsBroadCast = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysLANCardsBroadCast.setStatus('current')
himSysLANCardsType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("ethernet", 1), ("tokenring", 2), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysLANCardsType.setStatus('current')
himSysLANCardsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("stale", 3), ("configured", 4), ("unconfigured", 5), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysLANCardsStatus.setStatus('current')
himSysHostsTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 3), )
if mibBuilder.loadTexts: himSysHostsTable.setStatus('current')
himSysHostsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 3, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSysHostsPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSysHostsNo"))
if mibBuilder.loadTexts: himSysHostsEntry.setStatus('current')
himSysHostsPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 3, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysHostsPabxId.setStatus('current')
himSysHostsNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysHostsNo.setStatus('current')
himSysHostsIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysHostsIPAddr.setStatus('current')
himSysHostsName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysHostsName.setStatus('current')
himSysWAMLConn = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4))
himSysWAMLConnTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1), )
if mibBuilder.loadTexts: himSysWAMLConnTable.setStatus('current')
himSysWAMLConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnLTG"), (0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnLTU"), (0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnSlot"))
if mibBuilder.loadTexts: himSysWAMLConnEntry.setStatus('current')
himSysWAMLConnPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnPabxId.setStatus('current')
himSysWAMLConnLTG = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnLTG.setStatus('current')
himSysWAMLConnLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnLTU.setStatus('current')
himSysWAMLConnSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 145))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnSlot.setStatus('current')
himSysWAMLConnRufNr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1, 5), HimPhoneNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnRufNr.setStatus('current')
himSysWAMLConnBChl = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnBChl.setStatus('current')
himSysWAMLConnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnStatus.setStatus('current')
himSysWAMLConnIPTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2), )
if mibBuilder.loadTexts: himSysWAMLConnIPTable.setStatus('current')
himSysWAMLConnIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPLTG"), (0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPLTU"), (0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPSlot"), (0, "SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPIfName"))
if mibBuilder.loadTexts: himSysWAMLConnIPEntry.setStatus('current')
himSysWAMLConnIPPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnIPPabxId.setStatus('current')
himSysWAMLConnIPLTG = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnIPLTG.setStatus('current')
himSysWAMLConnIPLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnIPLTU.setStatus('current')
himSysWAMLConnIPSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 145))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnIPSlot.setStatus('current')
himSysWAMLConnIPIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnIPIfName.setStatus('current')
himSysWAMLConnIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnIPAddr.setStatus('current')
himSysWAMLConnIPNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 11, 4, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSysWAMLConnIPNetMask.setStatus('current')
himBoards = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12))
himBoardBasicTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1), )
if mibBuilder.loadTexts: himBoardBasicTable.setStatus('current')
himBoardBasicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicLTG"), (0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicLTU"), (0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicSlot"))
if mibBuilder.loadTexts: himBoardBasicEntry.setStatus('current')
himBoardBasicPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicPabxId.setStatus('current')
himBoardBasicLTG = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicLTG.setStatus('current')
himBoardBasicLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicLTU.setStatus('current')
himBoardBasicSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 145))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicSlot.setStatus('current')
himBoardBasicFuncId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicFuncId.setStatus('current')
himBoardBasicCat = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0))).clone(namedValues=NamedValues(("ltg", 1), ("ltu", 2), ("per", 3), ("perhw", 4), ("acgen", 5), ("diu", 6), ("ipgw", 7), ("rg", 8), ("siup", 9), ("tmd", 10), ("other", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicCat.setStatus('current')
himBoardBasicName = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicName.setStatus('current')
himBoardBasicVOIPSec = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 8), HimYesNo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicVOIPSec.setStatus('current')
himBoardBasicLWVar = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicLWVar.setStatus('current')
himBoardBasicNoCirc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardBasicNoCirc.setStatus('current')
himBoardIPTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2), )
if mibBuilder.loadTexts: himBoardIPTable.setStatus('current')
himBoardIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1), )
himBoardBasicEntry.registerAugmentions(("SIEMENS-HP4KHIM-MIB", "himBoardIPEntry"))
himBoardIPEntry.setIndexNames(*himBoardBasicEntry.getIndexNames())
if mibBuilder.loadTexts: himBoardIPEntry.setStatus('current')
himBoardIPGwyIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPGwyIPAddr.setStatus('current')
himBoardIPSrcIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPSrcIPAddr.setStatus('current')
himBoardIPNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPNetMask.setStatus('current')
himBoardIPDefRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPDefRouter.setStatus('current')
himBoardIPCustLANIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPCustLANIP.setStatus('current')
himBoardIPSTMI2IGWSubMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPSTMI2IGWSubMask.setStatus('current')
himBoardIPDefGWIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPDefGWIP.setStatus('current')
himBoardIPManStatIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPManStatIP.setStatus('current')
himBoardIPManStatPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPManStatPort.setStatus('current')
himBoardIPBckpServIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPBckpServIP.setStatus('current')
himBoardIPBckpServPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardIPBckpServPort.setStatus('current')
himBoardLocTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 3), )
if mibBuilder.loadTexts: himBoardLocTable.setStatus('current')
himBoardLocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 3, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicLTG"), (0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicLTU"), (0, "SIEMENS-HP4KHIM-MIB", "himBoardBasicSlot"))
if mibBuilder.loadTexts: himBoardLocEntry.setStatus('current')
himBoardLocId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardLocId.setStatus('current')
himBoardLocLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 45))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardLocLoc.setStatus('current')
himBoardLocPhoneNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 3, 1, 3), HimPhoneNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardLocPhoneNo.setStatus('current')
himBoardLocFaxNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 12, 3, 1, 4), HimPhoneNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himBoardLocFaxNo.setStatus('current')
himIPDA = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13))
himIPDAGenData = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1))
himIPDAGenTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 1), )
if mibBuilder.loadTexts: himIPDAGenTable.setStatus('current')
himIPDAGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himIPDAGenPabxId"))
if mibBuilder.loadTexts: himIPDAGenEntry.setStatus('current')
himIPDAGenPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenPabxId.setStatus('current')
himIPDAGenSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenSpeed.setStatus('current')
himIPDAGenMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fullduplex", 1), ("halfduplex", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenMode.setStatus('current')
himIPDAGenPayConn = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenPayConn.setStatus('current')
himIPDAGenSigConn = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenSigConn.setStatus('current')
himIPDAGenIPTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2), )
if mibBuilder.loadTexts: himIPDAGenIPTable.setStatus('current')
himIPDAGenIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2, 1), )
himIPDAGenEntry.registerAugmentions(("SIEMENS-HP4KHIM-MIB", "himIPDAGenIPEntry"))
himIPDAGenIPEntry.setIndexNames(*himIPDAGenEntry.getIndexNames())
if mibBuilder.loadTexts: himIPDAGenIPEntry.setStatus('current')
himIPDAGenIPNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenIPNetAddr.setStatus('current')
himIPDAGenIPNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenIPNetMask.setStatus('current')
himIPDAGenIPCCAAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenIPCCAAddr.setStatus('current')
himIPDAGenIPCCBAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenIPCCBAddr.setStatus('current')
himIPDAGenIPDefRoutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenIPDefRoutAddr.setStatus('current')
himIPDAGenIPSurvNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 1, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAGenIPSurvNetAddr.setStatus('current')
himIPDAAPData = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2))
himIPDABasicTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 1), )
if mibBuilder.loadTexts: himIPDABasicTable.setStatus('current')
himIPDABasicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 1, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himIPDABasicPabxId"), (0, "SIEMENS-HP4KHIM-MIB", "himIPDABasicLTU"))
if mibBuilder.loadTexts: himIPDABasicEntry.setStatus('current')
himIPDABasicPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 1, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDABasicPabxId.setStatus('current')
himIPDABasicLTU = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(17, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDABasicLTU.setStatus('current')
himIPDABasicConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 1, 1, 3), HimShelfNWType().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDABasicConnType.setStatus('current')
himIPDABasicBChanNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDABasicBChanNo.setStatus('current')
himIPDABasicConvAMLaw = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 1, 1, 5), HimYesNo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDABasicConvAMLaw.setStatus('current')
himIPDAIPTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2), )
if mibBuilder.loadTexts: himIPDAIPTable.setStatus('current')
himIPDAIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2, 1), )
himIPDABasicEntry.registerAugmentions(("SIEMENS-HP4KHIM-MIB", "himIPDAIPEntry"))
himIPDAIPEntry.setIndexNames(*himIPDABasicEntry.getIndexNames())
if mibBuilder.loadTexts: himIPDAIPEntry.setStatus('current')
himIPDAIPAccPtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAIPAccPtAddr.setStatus('current')
himIPDAIPTAccPtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAIPTAccPtAddr.setStatus('current')
himIPDAIPAccPtRoutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAIPAccPtRoutAddr.setStatus('current')
himIPDAIPNetMaskNW = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAIPNetMaskNW.setStatus('current')
himIPDAIPAccPtPriRoutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAIPAccPtPriRoutAddr.setStatus('current')
himIPDAIPNetMaskDL = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDAIPNetMaskDL.setStatus('current')
himIPDALocTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 3), )
if mibBuilder.loadTexts: himIPDALocTable.setStatus('current')
himIPDALocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 3, 1), )
himIPDABasicEntry.registerAugmentions(("SIEMENS-HP4KHIM-MIB", "himIPDALocEntry"))
himIPDALocEntry.setIndexNames(*himIPDABasicEntry.getIndexNames())
if mibBuilder.loadTexts: himIPDALocEntry.setStatus('current')
himIPDALocId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDALocId.setStatus('current')
himIPDALocLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 45))).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDALocLoc.setStatus('current')
himIPDALocPhoneNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 3, 1, 3), HimPhoneNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDALocPhoneNo.setStatus('current')
himIPDALocFaxNo = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 13, 2, 3, 1, 4), HimPhoneNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himIPDALocFaxNo.setStatus('current')
himInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 14))
himSubagentLastMsgNo = MibScalar((1, 3, 6, 1, 4, 1, 4329, 2, 51, 14, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSubagentLastMsgNo.setStatus('current')
himSubagentLastMsgText = MibScalar((1, 3, 6, 1, 4, 1, 4329, 2, 51, 14, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himSubagentLastMsgText.setStatus('current')
himResultData = MibScalar((1, 3, 6, 1, 4, 1, 4329, 2, 51, 14, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: himResultData.setStatus('current')
himDiscovery = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15))
himChanges = MibScalar((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himChanges.setStatus('current')
himDiscovTable = MibTable((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2), )
if mibBuilder.loadTexts: himDiscovTable.setStatus('current')
himDiscovEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2, 1), ).setIndexNames((0, "SIEMENS-HP4KHIM-MIB", "himDiscovPabxId"))
if mibBuilder.loadTexts: himDiscovEntry.setStatus('current')
himDiscovPabxId = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2, 1, 1), HimPabxId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDiscovPabxId.setStatus('current')
himDiscovPabxMnemonic = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDiscovPabxMnemonic.setStatus('current')
himDiscovStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2, 1, 3), DiscoveryStates()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: himDiscovStatus.setStatus('current')
himDiscovMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2, 1, 4), DiscoveryModes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: himDiscovMode.setStatus('current')
himDiscovTimDat = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDiscovTimDat.setStatus('current')
himDiscovErrTimDat = MibTableColumn((1, 3, 6, 1, 4, 1, 4329, 2, 51, 15, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: himDiscovErrTimDat.setStatus('current')
himMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20))
himMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1))
himWelcomePageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 1)).setObjects(("SIEMENS-HP4KHIM-MIB", "himWelPgPabxId"), ("SIEMENS-HP4KHIM-MIB", "himWelPgSysNo"), ("SIEMENS-HP4KHIM-MIB", "himHP4KVersion"), ("SIEMENS-HP4KHIM-MIB", "himSystemRelease"), ("SIEMENS-HP4KHIM-MIB", "himRevisionLevel"), ("SIEMENS-HP4KHIM-MIB", "himHWArchitecture"), ("SIEMENS-HP4KHIM-MIB", "himHWArchitectureType"), ("SIEMENS-HP4KHIM-MIB", "himOperationMode"), ("SIEMENS-HP4KHIM-MIB", "himSWUProc1"), ("SIEMENS-HP4KHIM-MIB", "himSWUMemory1"), ("SIEMENS-HP4KHIM-MIB", "himSWUProc2"), ("SIEMENS-HP4KHIM-MIB", "himSWUMemory2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himWelcomePageGroup = himWelcomePageGroup.setStatus('current')
himSwitchDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 2)).setObjects(("SIEMENS-HP4KHIM-MIB", "himTechInfoPabxId"), ("SIEMENS-HP4KHIM-MIB", "himTechInfoInfoNo"), ("SIEMENS-HP4KHIM-MIB", "himTechInfoDate"), ("SIEMENS-HP4KHIM-MIB", "himTechInfoTechnicalData"), ("SIEMENS-HP4KHIM-MIB", "himTechInfoNumber"), ("SIEMENS-HP4KHIM-MIB", "himTechInfoExtraText"), ("SIEMENS-HP4KHIM-MIB", "himNotepadDataPabxId"), ("SIEMENS-HP4KHIM-MIB", "himNotepadDataInfoNo"), ("SIEMENS-HP4KHIM-MIB", "himNotepadDataDate"), ("SIEMENS-HP4KHIM-MIB", "himNotepadDataText"), ("SIEMENS-HP4KHIM-MIB", "himProjPlanPabxId"), ("SIEMENS-HP4KHIM-MIB", "himProjPlanInfoFile"), ("SIEMENS-HP4KHIM-MIB", "himProjPlanInfoCreationDate"), ("SIEMENS-HP4KHIM-MIB", "himProjPlanInfoCreationTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himSwitchDataGroup = himSwitchDataGroup.setStatus('current')
himSpecGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 3)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataAddress"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataFrameType"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataLTU"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataNetworkType"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataNetworkAddress"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataRemote"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataLocation"), ("SIEMENS-HP4KHIM-MIB", "himSpecShelfDataLTUC"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardPEN"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardOverlayLTU"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardType"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardNominal"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardActual"), ("SIEMENS-HP4KHIM-MIB", "hhimSWUBoardFirmware"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardRev"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardFunctId"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardMode"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardLWNo"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardLWInterVer"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardLWName"), ("SIEMENS-HP4KHIM-MIB", "himSWUBoardLWDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himSpecGroup = himSpecGroup.setStatus('current')
himSWUPeripheryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 4)).setObjects(("SIEMENS-HP4KHIM-MIB", "himPSIOAssPabxId"), ("SIEMENS-HP4KHIM-MIB", "himPSIOAssAssembly"), ("SIEMENS-HP4KHIM-MIB", "himPSIOAssPEN"), ("SIEMENS-HP4KHIM-MIB", "himPSIOAssActual"), ("SIEMENS-HP4KHIM-MIB", "himPSIOAssFirmware"), ("SIEMENS-HP4KHIM-MIB", "himSerialLinePabxId"), ("SIEMENS-HP4KHIM-MIB", "himSerialLineBoardType"), ("SIEMENS-HP4KHIM-MIB", "himSerialLineNumber"), ("SIEMENS-HP4KHIM-MIB", "himSerialLineSpeed"), ("SIEMENS-HP4KHIM-MIB", "himSerialLineLogDevName"), ("SIEMENS-HP4KHIM-MIB", "himSerialLineDevType"), ("SIEMENS-HP4KHIM-MIB", "himSerialLineType"), ("SIEMENS-HP4KHIM-MIB", "himSCSIDevPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSCSIDevId"), ("SIEMENS-HP4KHIM-MIB", "himSCSIDevType"), ("SIEMENS-HP4KHIM-MIB", "himSCSIDevName"), ("SIEMENS-HP4KHIM-MIB", "himSCSIDevFirmware"), ("SIEMENS-HP4KHIM-MIB", "himSCSIDevLoadDrive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himSWUPeripheryGroup = himSWUPeripheryGroup.setStatus('current')
himCentralSwitchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 5)).setObjects(("SIEMENS-HP4KHIM-MIB", "himCabPabxId"), ("SIEMENS-HP4KHIM-MIB", "himCabAddr"), ("SIEMENS-HP4KHIM-MIB", "himCabPhysAddr"), ("SIEMENS-HP4KHIM-MIB", "himCabCabinet"), ("SIEMENS-HP4KHIM-MIB", "himCabPartNo"), ("SIEMENS-HP4KHIM-MIB", "himCabShelfNo"), ("SIEMENS-HP4KHIM-MIB", "himCabFrame"), ("SIEMENS-HP4KHIM-MIB", "himCabPid1"), ("SIEMENS-HP4KHIM-MIB", "himCabPid2"), ("SIEMENS-HP4KHIM-MIB", "himCabPid3"), ("SIEMENS-HP4KHIM-MIB", "himCabLTUNo"), ("SIEMENS-HP4KHIM-MIB", "himMemScalingPabxId"), ("SIEMENS-HP4KHIM-MIB", "himMemScalingUnit"), ("SIEMENS-HP4KHIM-MIB", "himMemScalingUsed"), ("SIEMENS-HP4KHIM-MIB", "himMemScalingMaxUsed"), ("SIEMENS-HP4KHIM-MIB", "himMemScalingAllocated"), ("SIEMENS-HP4KHIM-MIB", "himMemScalingStandard"), ("SIEMENS-HP4KHIM-MIB", "himMemScalingSysMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himCentralSwitchGroup = himCentralSwitchGroup.setStatus('current')
himGeneralSwitchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 6)).setObjects(("SIEMENS-HP4KHIM-MIB", "himDBConfSysPabxId"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysClass1"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysClass2"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysHWAss1"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysHWAss2"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysDevLine1"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysDevLine2"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysOpMode"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysResType"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysHWArch"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysHWArchType"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysNo"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysLoc"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysBaseApp"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysDBApp"), ("SIEMENS-HP4KHIM-MIB", "himDBConfSysID"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWPabxId"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWLTG"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWLTU"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWLines"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWPorts"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWPBC"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWMTSBdPerGSN"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWSIUPPerLTU"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWDIUCPerLTU"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWHwyPerMTSBd"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWHDLCPerDCL"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWPBCPerDCL"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWStdSIULine"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWConfLine"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWDBDim"), ("SIEMENS-HP4KHIM-MIB", "himDBConfHWTableVer"), ("SIEMENS-HP4KHIM-MIB", "himHWDataPabxId"), ("SIEMENS-HP4KHIM-MIB", "himHWArch"), ("SIEMENS-HP4KHIM-MIB", "himHWArchType"), ("SIEMENS-HP4KHIM-MIB", "himHWOpMode"), ("SIEMENS-HP4KHIM-MIB", "himHWSWUProc1"), ("SIEMENS-HP4KHIM-MIB", "himHWSWUMem1"), ("SIEMENS-HP4KHIM-MIB", "himHWSWUProc2"), ("SIEMENS-HP4KHIM-MIB", "himHWSWUMem2"), ("SIEMENS-HP4KHIM-MIB", "himHWADPProc"), ("SIEMENS-HP4KHIM-MIB", "himHWADPMem"), ("SIEMENS-HP4KHIM-MIB", "himLWDataOnCBPabxId"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCBAss"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCBPBCAddr"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCBFileName"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCBProdTime"), ("SIEMENS-HP4KHIM-MIB", "himLWOnProcPabxId"), ("SIEMENS-HP4KHIM-MIB", "himLWOnProcAss"), ("SIEMENS-HP4KHIM-MIB", "himLWOnProcInfoType"), ("SIEMENS-HP4KHIM-MIB", "himLWOnProcLWId"), ("SIEMENS-HP4KHIM-MIB", "himLWOnProcLWIdCMP"), ("SIEMENS-HP4KHIM-MIB", "himLWOnProcLWIdLP"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIUPabxId"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIUProc"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIUSlot"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIUNominal"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIUActual"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIULWNo"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIUFileName"), ("SIEMENS-HP4KHIM-MIB", "himLWOnCSIUFileProd"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrPabxId"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrProc"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrInfoType"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrCLan"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrIPDA"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himGeneralSwitchGroup = himGeneralSwitchGroup.setStatus('current')
himFeaturesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 7)).setObjects(("SIEMENS-HP4KHIM-MIB", "himMacAddrPabxId"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrProc"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrCLan"), ("SIEMENS-HP4KHIM-MIB", "himMacAddrIPDA"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatPabxId"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatVer"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatSerNo"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatHWId"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatInstallDate"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatExpiryDate"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatConfCode"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatTrialModeAct"), ("SIEMENS-HP4KHIM-MIB", "himMarkFeatTrialRemDays"), ("SIEMENS-HP4KHIM-MIB", "himSalesFeatPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSalesFeatMarketPackId"), ("SIEMENS-HP4KHIM-MIB", "himSalesFeatMarketPack"), ("SIEMENS-HP4KHIM-MIB", "himSalesFeatContract"), ("SIEMENS-HP4KHIM-MIB", "himSalesFeatUsed"), ("SIEMENS-HP4KHIM-MIB", "himSalesFeatFree"), ("SIEMENS-HP4KHIM-MIB", "himSalesFeatMarkForTrial"), ("SIEMENS-HP4KHIM-MIB", "himTechFeatPabxId"), ("SIEMENS-HP4KHIM-MIB", "himTechFeatId"), ("SIEMENS-HP4KHIM-MIB", "himTechFeatName"), ("SIEMENS-HP4KHIM-MIB", "himTechFeatState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himFeaturesGroup = himFeaturesGroup.setStatus('current')
himAPSPatchesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 8)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSwitchAPSPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSwitchAPSName"), ("SIEMENS-HP4KHIM-MIB", "himSwitchAPSCorrVer"), ("SIEMENS-HP4KHIM-MIB", "himSwitchAPSPartNo"), ("SIEMENS-HP4KHIM-MIB", "himReplAMOPabxId"), ("SIEMENS-HP4KHIM-MIB", "himReplAMOAPS"), ("SIEMENS-HP4KHIM-MIB", "himReplAMOName"), ("SIEMENS-HP4KHIM-MIB", "himReplAMOInAPSDir"), ("SIEMENS-HP4KHIM-MIB", "himReplAMOSubsystem"), ("SIEMENS-HP4KHIM-MIB", "himPatchInfoPabxId"), ("SIEMENS-HP4KHIM-MIB", "himPatchInfoPatchNo"), ("SIEMENS-HP4KHIM-MIB", "himPatchInfoPatchGroup"), ("SIEMENS-HP4KHIM-MIB", "himPatchInfoOpt"), ("SIEMENS-HP4KHIM-MIB", "himPatchInfoActHD"), ("SIEMENS-HP4KHIM-MIB", "himPatchInfoActADP"), ("SIEMENS-HP4KHIM-MIB", "himPatchInfoActBP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himAPSPatchesGroup = himAPSPatchesGroup.setStatus('current')
himSWVersionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 9)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcSrc"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcSWVer"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcItemCodeNoPrefix"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcHP4KVer"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcSysRel"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcCountry"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcCountryCode"), ("SIEMENS-HP4KHIM-MIB", "himSWVerOnProcRevNo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himSWVersionGroup = himSWVersionGroup.setStatus('current')
himSWPkgVersionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 10)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSWPkgVerPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSWPkgVerPkgAbbr"), ("SIEMENS-HP4KHIM-MIB", "himSWPkgVerPkgName"), ("SIEMENS-HP4KHIM-MIB", "himSWPkgVerVersion"), ("SIEMENS-HP4KHIM-MIB", "himSWPkgVerInstAt"), ("SIEMENS-HP4KHIM-MIB", "himSWPkgVerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himSWPkgVersionGroup = himSWPkgVersionGroup.setStatus('current')
himSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 11)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSysBasicPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSysBasicDomain"), ("SIEMENS-HP4KHIM-MIB", "himSysBasicNodeNo"), ("SIEMENS-HP4KHIM-MIB", "himSysBasicLEGK"), ("SIEMENS-HP4KHIM-MIB", "himSysLANCardsPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSysLANCardsIPAddr"), ("SIEMENS-HP4KHIM-MIB", "himSysLANCardsNetMask"), ("SIEMENS-HP4KHIM-MIB", "himSysLANCardsBroadCast"), ("SIEMENS-HP4KHIM-MIB", "himSysLANCardsType"), ("SIEMENS-HP4KHIM-MIB", "himSysLANCardsStatus"), ("SIEMENS-HP4KHIM-MIB", "himSysHostsPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSysHostsNo"), ("SIEMENS-HP4KHIM-MIB", "himSysHostsIPAddr"), ("SIEMENS-HP4KHIM-MIB", "himSysHostsName"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnLTG"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnLTU"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnSlot"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnRufNr"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnBChl"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnStatus"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPPabxId"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPLTG"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPLTU"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPSlot"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPIfName"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPAddr"), ("SIEMENS-HP4KHIM-MIB", "himSysWAMLConnIPNetMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himSystemGroup = himSystemGroup.setStatus('current')
himBoardsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 12)).setObjects(("SIEMENS-HP4KHIM-MIB", "himBoardBasicPabxId"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicLTG"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicLTU"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicSlot"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicFuncId"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicCat"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicName"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicVOIPSec"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicLWVar"), ("SIEMENS-HP4KHIM-MIB", "himBoardBasicNoCirc"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPGwyIPAddr"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPSrcIPAddr"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPNetMask"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPDefRouter"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPCustLANIP"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPSTMI2IGWSubMask"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPDefGWIP"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPManStatIP"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPManStatPort"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPBckpServIP"), ("SIEMENS-HP4KHIM-MIB", "himBoardIPBckpServPort"), ("SIEMENS-HP4KHIM-MIB", "himBoardLocId"), ("SIEMENS-HP4KHIM-MIB", "himBoardLocLoc"), ("SIEMENS-HP4KHIM-MIB", "himBoardLocPhoneNo"), ("SIEMENS-HP4KHIM-MIB", "himBoardLocFaxNo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himBoardsGroup = himBoardsGroup.setStatus('current')
himIPDAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 13)).setObjects(("SIEMENS-HP4KHIM-MIB", "himIPDABasicPabxId"), ("SIEMENS-HP4KHIM-MIB", "himIPDABasicLTU"), ("SIEMENS-HP4KHIM-MIB", "himIPDABasicConnType"), ("SIEMENS-HP4KHIM-MIB", "himIPDABasicBChanNo"), ("SIEMENS-HP4KHIM-MIB", "himIPDABasicConvAMLaw"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenPabxId"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenSpeed"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenMode"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenPayConn"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenSigConn"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenIPNetAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenIPNetMask"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenIPCCAAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenIPCCBAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenIPDefRoutAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAGenIPSurvNetAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAIPAccPtAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAIPTAccPtAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAIPAccPtRoutAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAIPNetMaskNW"), ("SIEMENS-HP4KHIM-MIB", "himIPDAIPAccPtPriRoutAddr"), ("SIEMENS-HP4KHIM-MIB", "himIPDAIPNetMaskDL"), ("SIEMENS-HP4KHIM-MIB", "himIPDALocId"), ("SIEMENS-HP4KHIM-MIB", "himIPDALocLoc"), ("SIEMENS-HP4KHIM-MIB", "himIPDALocPhoneNo"), ("SIEMENS-HP4KHIM-MIB", "himIPDALocFaxNo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himIPDAGroup = himIPDAGroup.setStatus('current')
himInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 14)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgNo"), ("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgText"), ("SIEMENS-HP4KHIM-MIB", "himResultData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himInfoGroup = himInfoGroup.setStatus('current')
himDiscoveryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 15)).setObjects(("SIEMENS-HP4KHIM-MIB", "himChanges"), ("SIEMENS-HP4KHIM-MIB", "himDiscovPabxId"), ("SIEMENS-HP4KHIM-MIB", "himDiscovPabxMnemonic"), ("SIEMENS-HP4KHIM-MIB", "himDiscovStatus"), ("SIEMENS-HP4KHIM-MIB", "himDiscovMode"), ("SIEMENS-HP4KHIM-MIB", "himDiscovTimDat"), ("SIEMENS-HP4KHIM-MIB", "himDiscovErrTimDat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himDiscoveryGroup = himDiscoveryGroup.setStatus('current')
himTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4329, 2, 51, 20, 1, 16)).setObjects(("SIEMENS-HP4KHIM-MIB", "internalMessageHimSubagent"), ("SIEMENS-HP4KHIM-MIB", "internalWarningHimSubagent"), ("SIEMENS-HP4KHIM-MIB", "internalErrorHimSubagent"), ("SIEMENS-HP4KHIM-MIB", "himDiscovSucc"), ("SIEMENS-HP4KHIM-MIB", "himDiscovErr"), ("SIEMENS-HP4KHIM-MIB", "himDiscovBusy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    himTrapsGroup = himTrapsGroup.setStatus('current')
himTrapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21))
himTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 1))
himTrapPabxId = MibScalar((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 1, 1), Integer32())
if mibBuilder.loadTexts: himTrapPabxId.setStatus('current')
himTrapPabxMnemonic = MibScalar((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 1, 2), DisplayString())
if mibBuilder.loadTexts: himTrapPabxMnemonic.setStatus('current')
himTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 2))
internalMessageHimSubagent = NotificationType((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 2, 0)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgNo"), ("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgText"))
if mibBuilder.loadTexts: internalMessageHimSubagent.setStatus('current')
internalWarningHimSubagent = NotificationType((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 2, 1)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgNo"), ("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgText"))
if mibBuilder.loadTexts: internalWarningHimSubagent.setStatus('current')
internalErrorHimSubagent = NotificationType((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 2, 2)).setObjects(("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgNo"), ("SIEMENS-HP4KHIM-MIB", "himSubagentLastMsgText"))
if mibBuilder.loadTexts: internalErrorHimSubagent.setStatus('current')
himDiscovSucc = NotificationType((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 2, 10)).setObjects(("SIEMENS-HP4KHIM-MIB", "himTrapPabxId"), ("SIEMENS-HP4KHIM-MIB", "himTrapPabxMnemonic"))
if mibBuilder.loadTexts: himDiscovSucc.setStatus('current')
himDiscovErr = NotificationType((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 2, 11)).setObjects(("SIEMENS-HP4KHIM-MIB", "himTrapPabxId"), ("SIEMENS-HP4KHIM-MIB", "himTrapPabxMnemonic"))
if mibBuilder.loadTexts: himDiscovErr.setStatus('current')
himDiscovBusy = NotificationType((1, 3, 6, 1, 4, 1, 4329, 2, 51, 21, 2, 19)).setObjects(("SIEMENS-HP4KHIM-MIB", "himTrapPabxId"), ("SIEMENS-HP4KHIM-MIB", "himTrapPabxMnemonic"))
if mibBuilder.loadTexts: himDiscovBusy.setStatus('current')
mibBuilder.exportSymbols("SIEMENS-HP4KHIM-MIB", himSysBasicEntry=himSysBasicEntry, himIPDAGenSpeed=himIPDAGenSpeed, DiscoveryModes=DiscoveryModes, himSCSIDevPabxId=himSCSIDevPabxId, himSpecShelfDataLocation=himSpecShelfDataLocation, himDBConfSysNo=himDBConfSysNo, iandcAdmin=iandcAdmin, himDBConfSysDevLine1=himDBConfSysDevLine1, himSWUBoardFunctId=himSWUBoardFunctId, himDBConfHWPabxId=himDBConfHWPabxId, himDBConfSysResType=himDBConfSysResType, himIPDAIPEntry=himIPDAIPEntry, himProjPlanInfoCreationDate=himProjPlanInfoCreationDate, himDiscovErrTimDat=himDiscovErrTimDat, himIPDAGenIPDefRoutAddr=himIPDAGenIPDefRoutAddr, himSWUPeripheryGroup=himSWUPeripheryGroup, himCabPartNo=himCabPartNo, himDBConfHW=himDBConfHW, himSysWAMLConnStatus=himSysWAMLConnStatus, himReplAMOInAPSDir=himReplAMOInAPSDir, himSerialLineLogDevName=himSerialLineLogDevName, himSwPkgVersion=himSwPkgVersion, himSpecShelfDataEntry=himSpecShelfDataEntry, himPSIOAssPabxId=himPSIOAssPabxId, himDiscovPabxId=himDiscovPabxId, himSWUBoardLWInterVer=himSWUBoardLWInterVer, himTraps=himTraps, himDBConfHWTableVer=himDBConfHWTableVer, himWelPgEntry=himWelPgEntry, himSCSIDevType=himSCSIDevType, himMarkFeatPabxId=himMarkFeatPabxId, himDBConfSysDevLine2=himDBConfSysDevLine2, himPSIOAssAssembly=himPSIOAssAssembly, himIPDA=himIPDA, HimYesNo=HimYesNo, himTrapGroup=himTrapGroup, himSWVerOnProcRevNo=himSWVerOnProcRevNo, himIPDALocTable=himIPDALocTable, himIPDAIPTAccPtAddr=himIPDAIPTAccPtAddr, himNotepadDataDate=himNotepadDataDate, himPatchInfoTable=himPatchInfoTable, himLWOnProcEntry=himLWOnProcEntry, himBoardIPGwyIPAddr=himBoardIPGwyIPAddr, himSCSIDevName=himSCSIDevName, himLWOnCBProdTime=himLWOnCBProdTime, himSysBasicLEGK=himSysBasicLEGK, himPatchInfo=himPatchInfo, himResultData=himResultData, HimPhoneNumber=HimPhoneNumber, himNotepadDataInfoNo=himNotepadDataInfoNo, himPSIOAssFirmware=himPSIOAssFirmware, himSWUMemory2=himSWUMemory2, himSysWAMLConnIPLTU=himSysWAMLConnIPLTU, himCabPabxId=himCabPabxId, DiscoveryStates=DiscoveryStates, himSystem=himSystem, himGeneralSwitchGroup=himGeneralSwitchGroup, himSWUBoardNominal=himSWUBoardNominal, himPSIOAssActual=himPSIOAssActual, himProjPlanInfoCreationTime=himProjPlanInfoCreationTime, himIPDABasicPabxId=himIPDABasicPabxId, himLWOnProcLWIdCMP=himLWOnProcLWIdCMP, himBoardIPManStatIP=himBoardIPManStatIP, himSysLANCardsType=himSysLANCardsType, himSysBasicTable=himSysBasicTable, himIPDAIPAccPtAddr=himIPDAIPAccPtAddr, himSysHostsNo=himSysHostsNo, himMemScalingAllocated=himMemScalingAllocated, himSpecSwitchData=himSpecSwitchData, himSysWAMLConnPabxId=himSysWAMLConnPabxId, himDBConfSysBaseApp=himDBConfSysBaseApp, himBoardLocId=himBoardLocId, himSysWAMLConnIPAddr=himSysWAMLConnIPAddr, himSWVerOnProcSWVer=himSWVerOnProcSWVer, hhimSWUBoardFirmware=hhimSWUBoardFirmware, himSerialLinePabxId=himSerialLinePabxId, himLWOnCBPBCAddr=himLWOnCBPBCAddr, himPatchInfoPatchGroup=himPatchInfoPatchGroup, himDBConfHWConfLine=himDBConfHWConfLine, himSWPkgVerInstAt=himSWPkgVerInstAt, himBoardBasicName=himBoardBasicName, himSysHostsPabxId=himSysHostsPabxId, internalErrorHimSubagent=internalErrorHimSubagent, himHWDataTable=himHWDataTable, himTechFeatPabxId=himTechFeatPabxId, himBoardBasicSlot=himBoardBasicSlot, himLWOnCSIUSlot=himLWOnCSIUSlot, himMemScalingStandard=himMemScalingStandard, himSalesFeatMarketPack=himSalesFeatMarketPack, himIPDAGroup=himIPDAGroup, himDBConfHWMTSBdPerGSN=himDBConfHWMTSBdPerGSN, himBoardIPCustLANIP=himBoardIPCustLANIP, himBoardBasicVOIPSec=himBoardBasicVOIPSec, siemens=siemens, himSalesFeatTable=himSalesFeatTable, himLWOnCSIUTable=himLWOnCSIUTable, himBoardIPSTMI2IGWSubMask=himBoardIPSTMI2IGWSubMask, himMemScalingPabxId=himMemScalingPabxId, himAPSPatches=himAPSPatches, himDiscovSucc=himDiscovSucc, himCabFrame=himCabFrame, himPatchInfoActHD=himPatchInfoActHD, himSWUBoardTable=himSWUBoardTable, himBoardLocLoc=himBoardLocLoc, himDBConfSysHWArchType=himDBConfSysHWArchType, himIPDAIPNetMaskNW=himIPDAIPNetMaskNW, himIPDALocId=himIPDALocId, himCabPhysAddr=himCabPhysAddr, himIPDALocEntry=himIPDALocEntry, himHWSWUProc2=himHWSWUProc2, himMarkFeatExpiryDate=himMarkFeatExpiryDate, himBoardLocEntry=himBoardLocEntry, himSwitchData=himSwitchData, himIPDAGenIPNetMask=himIPDAGenIPNetMask, himIPDABasicConnType=himIPDABasicConnType, himTechFeatId=himTechFeatId, himSalesFeatContract=himSalesFeatContract, himSWPkgVersionGroup=himSWPkgVersionGroup, himCabShelfNo=himCabShelfNo, himSwitchAPSPartNo=himSwitchAPSPartNo, himDiscovPabxMnemonic=himDiscovPabxMnemonic, himTrapVariables=himTrapVariables, himCabLTUNo=himCabLTUNo, himSysLANCardsNetMask=himSysLANCardsNetMask, himWelPgPabxId=himWelPgPabxId, himTechInfoInfoNo=himTechInfoInfoNo, himLWOnCSIUActual=himLWOnCSIUActual, himMacAddrInfoType=himMacAddrInfoType, himSysWAMLConnIPEntry=himSysWAMLConnIPEntry, himIPDAGenPayConn=himIPDAGenPayConn, himIPDALocFaxNo=himIPDALocFaxNo, himSerialLineTable=himSerialLineTable, himDBConfHWDBDim=himDBConfHWDBDim, himSysHostsIPAddr=himSysHostsIPAddr, himWelcomePageGroup=himWelcomePageGroup, himDBConfSysHWAss2=himDBConfSysHWAss2, himMacAddrEntry=himMacAddrEntry, himMarkFeatVer=himMarkFeatVer, himBoards=himBoards, himReplAMOTable=himReplAMOTable, himHWDataEntry=himHWDataEntry, himReplAMOName=himReplAMOName, himSWUBoardRev=himSWUBoardRev, himBoardBasicTable=himBoardBasicTable, himTechInfoNumber=himTechInfoNumber, himSerialLineSpeed=himSerialLineSpeed, himDBConfHWEntry=himDBConfHWEntry, himReplAMOSubsystem=himReplAMOSubsystem, himDBConfHWStdSIULine=himDBConfHWStdSIULine, internalMessageHimSubagent=internalMessageHimSubagent, himLWOnCSIUFileProd=himLWOnCSIUFileProd, himSysWAMLConnSlot=himSysWAMLConnSlot, himSysWAMLConnLTG=himSysWAMLConnLTG, himBoardIPBckpServIP=himBoardIPBckpServIP, himDBConfSysClass1=himDBConfSysClass1, himSCSIDevTable=himSCSIDevTable, himDBConfHWPBC=himDBConfHWPBC, himMibConformance=himMibConformance, himPSIOAssTable=himPSIOAssTable, himSysHostsName=himSysHostsName, himSWUBoardActual=himSWUBoardActual, himSWVerOnProcHP4KVer=himSWVerOnProcHP4KVer, himTechInfoDate=himTechInfoDate, himMacAddrProc=himMacAddrProc, himNotepadDataPabxId=himNotepadDataPabxId, himSWUBoardPabxId=himSWUBoardPabxId, himBoardIPBckpServPort=himBoardIPBckpServPort, himSWPkgVerVersion=himSWPkgVerVersion, himIPDALocLoc=himIPDALocLoc, himIPDAGenTable=himIPDAGenTable, himMarkFeatTrialRemDays=himMarkFeatTrialRemDays, himSWVerOnProcCountryCode=himSWVerOnProcCountryCode, himSerialLineBoardType=himSerialLineBoardType, himGeneralSwitchData=himGeneralSwitchData, himHWArchitectureType=himHWArchitectureType, himTechFeatTable=himTechFeatTable, himHWADPProc=himHWADPProc, himMemScalingTable=himMemScalingTable, himIPDALocPhoneNo=himIPDALocPhoneNo, himSpecShelfDataTable=himSpecShelfDataTable, himDBConfSysLoc=himDBConfSysLoc, himHP4KVersion=himHP4KVersion, himSwitchAPSCorrVer=himSwitchAPSCorrVer, himDBConfHWHDLCPerDCL=himDBConfHWHDLCPerDCL, himSysWAMLConnIPLTG=himSysWAMLConnIPLTG, himMacAddress=himMacAddress, himSubagentLastMsgNo=himSubagentLastMsgNo, himSysBasicPabxId=himSysBasicPabxId, himSwitchAPSName=himSwitchAPSName, himDBConfSysDBApp=himDBConfSysDBApp, himSalesFeatFree=himSalesFeatFree, himSWVerOnProcCountry=himSWVerOnProcCountry, himBoardBasicPabxId=himBoardBasicPabxId, himTechFeatName=himTechFeatName, himTrapsGroup=himTrapsGroup, himLWOnCSIUPabxId=himLWOnCSIUPabxId, himMemScalingSysMax=himMemScalingSysMax, himDBConfHWLTU=himDBConfHWLTU, himDBConfSysTable=himDBConfSysTable, himLWDataOnCBPabxId=himLWDataOnCBPabxId, himMarkFeatTrialModeAct=himMarkFeatTrialModeAct, himDBConfHWSIUPPerLTU=himDBConfHWSIUPPerLTU, himReplAMOPabxId=himReplAMOPabxId, himIPDAGenMode=himIPDAGenMode, himCabinetTable=himCabinetTable, himTrapPabxMnemonic=himTrapPabxMnemonic, himDBConfHWDIUCPerLTU=himDBConfHWDIUCPerLTU, himHWArchType=himHWArchType, himSysLANCardsStatus=himSysLANCardsStatus, himSCSIDevLoadDrive=himSCSIDevLoadDrive, himPatchInfoPatchNo=himPatchInfoPatchNo, himLWOnProcTable=himLWOnProcTable, himCabAddr=himCabAddr, himIPDAIPAccPtRoutAddr=himIPDAIPAccPtRoutAddr, himSwitchAPSTable=himSwitchAPSTable, himTechInfoTable=himTechInfoTable, himTechInfoTechnicalData=himTechInfoTechnicalData, himPatchInfoOpt=himPatchInfoOpt, himRevisionLevel=himRevisionLevel, himHWSWUProc1=himHWSWUProc1, himCabPid3=himCabPid3, himNotepadDataTable=himNotepadDataTable, himDBConfSysOpMode=himDBConfSysOpMode, himSpecShelfDataNetworkAddress=himSpecShelfDataNetworkAddress, himSysHostsEntry=himSysHostsEntry, himDBConfSysPabxId=himDBConfSysPabxId, himSysWAMLConnLTU=himSysWAMLConnLTU, himIPDAGenIPCCBAddr=himIPDAGenIPCCBAddr, himIPDABasicBChanNo=himIPDABasicBChanNo, himSysLANCardsIPAddr=himSysLANCardsIPAddr, himSysWAMLConnIPTable=himSysWAMLConnIPTable, himSerialLineEntry=himSerialLineEntry, himSpecShelfDataLTU=himSpecShelfDataLTU, himBoardBasicEntry=himBoardBasicEntry, himHWDataPabxId=himHWDataPabxId, himSysWAMLConnIPPabxId=himSysWAMLConnIPPabxId, himSWVerOnProcItemCodeNoPrefix=himSWVerOnProcItemCodeNoPrefix, himSpecShelfDataLTUC=himSpecShelfDataLTUC, HimPEN=HimPEN, himLWOnCSIULWNo=himLWOnCSIULWNo, himFeatures=himFeatures, himSysLANCardsPabxId=himSysLANCardsPabxId, himSWVersion=himSWVersion, himDBConfHWPorts=himDBConfHWPorts, himSWUProc1=himSWUProc1, himDiscovStatus=himDiscovStatus, himSalesFeatEntry=himSalesFeatEntry, himLWDataOnCSIU=himLWDataOnCSIU, himCabCabinet=himCabCabinet, himBoardIPTable=himBoardIPTable, himDBConfSysHWAss1=himDBConfSysHWAss1, himSWVerOnProcPabxId=himSWVerOnProcPabxId, himAPSPatchesGroup=himAPSPatchesGroup, himSysWAMLConnTable=himSysWAMLConnTable)
mibBuilder.exportSymbols("SIEMENS-HP4KHIM-MIB", himLWOnProcAss=himLWOnProcAss, himSysWAMLConnIPSlot=himSysWAMLConnIPSlot, himBoardBasicLTU=himBoardBasicLTU, himSpecShelfDataNetworkType=himSpecShelfDataNetworkType, himWelcomePage=himWelcomePage, himHWArch=himHWArch, himBoardLocPhoneNo=himBoardLocPhoneNo, himSWUBoardLWDate=himSWUBoardLWDate, himSWUMemory1=himSWUMemory1, himIPDAGenIPTable=himIPDAGenIPTable, himSpecGroup=himSpecGroup, himReplAMOEntry=himReplAMOEntry, himBoardIPDefGWIP=himBoardIPDefGWIP, himDiscovBusy=himDiscovBusy, himLWOnCBAss=himLWOnCBAss, internalWarningHimSubagent=internalWarningHimSubagent, himBoardIPEntry=himBoardIPEntry, himSysWAMLConnIPNetMask=himSysWAMLConnIPNetMask, himSerialLineDevType=himSerialLineDevType, himBoardBasicLWVar=himBoardBasicLWVar, himInfo=himInfo, himMacAddrCLan=himMacAddrCLan, himSystemGroup=himSystemGroup, himSysWAMLConnBChl=himSysWAMLConnBChl, PYSNMP_MODULE_ID=hp4khim, himMacAddrPabxId=himMacAddrPabxId, himSWUBoardType=himSWUBoardType, himIPDAGenIPCCAAddr=himIPDAGenIPCCAAddr, himMarkFeatConfCode=himMarkFeatConfCode, himSysWAMLConnEntry=himSysWAMLConnEntry, himBoardIPDefRouter=himBoardIPDefRouter, himIPDAAPData=himIPDAAPData, himSystemRelease=himSystemRelease, himSysWAMLConnIPIfName=himSysWAMLConnIPIfName, himSalesFeatPabxId=himSalesFeatPabxId, himTechInfoEntry=himTechInfoEntry, himOperationMode=himOperationMode, himNotepadDataEntry=himNotepadDataEntry, himWelPgSysNo=himWelPgSysNo, himHWArchitecture=himHWArchitecture, himPatchInfoPabxId=himPatchInfoPabxId, himSysLANCardsBroadCast=himSysLANCardsBroadCast, himIPDAGenSigConn=himIPDAGenSigConn, himTrapPabxId=himTrapPabxId, himPSIOAssEntry=himPSIOAssEntry, himBoardIPNetMask=himBoardIPNetMask, himTechFeatEntry=himTechFeatEntry, himSWUBoardEntry=himSWUBoardEntry, himSWVerOnProcSysRel=himSWVerOnProcSysRel, himMemScalingMaxUsed=himMemScalingMaxUsed, himIPDAIPNetMaskDL=himIPDAIPNetMaskDL, himDBConfHWHwyPerMTSBd=himDBConfHWHwyPerMTSBd, himMarkFeatSerNo=himMarkFeatSerNo, himSwitchDataGroup=himSwitchDataGroup, himLWOnCSIUEntry=himLWOnCSIUEntry, himSpecShelfDataAddress=himSpecShelfDataAddress, himSWUBoardLWName=himSWUBoardLWName, himBoardBasicCat=himBoardBasicCat, himIPDAGenIPNetAddr=himIPDAGenIPNetAddr, himBoardBasicFuncId=himBoardBasicFuncId, himDBConfSysHWArch=himDBConfSysHWArch, himDBConfSysClass2=himDBConfSysClass2, himMarkFeatTable=himMarkFeatTable, himHWOpMode=himHWOpMode, himSWPkgVerPkgAbbr=himSWPkgVerPkgAbbr, HimSwitchNumber=HimSwitchNumber, himSpecShelfDataRemote=himSpecShelfDataRemote, himProjPlanInfoFile=himProjPlanInfoFile, himSWUProc2=himSWUProc2, himDBConfHWPBCPerDCL=himDBConfHWPBCPerDCL, himIPDAGenIPSurvNetAddr=himIPDAGenIPSurvNetAddr, himSWUBoardMode=himSWUBoardMode, himSysHostsTable=himSysHostsTable, himSWPkgVerPkgName=himSWPkgVerPkgName, himSWUPeriphery=himSWUPeriphery, himSerialLineNumber=himSerialLineNumber, himDiscovEntry=himDiscovEntry, himHWData=himHWData, himLWOnProcInfoType=himLWOnProcInfoType, himDBConfSys=himDBConfSys, himLWOnProcLWIdLP=himLWOnProcLWIdLP, himSWPkgVerPabxId=himSWPkgVerPabxId, himMibGroups=himMibGroups, himMemScalingUnit=himMemScalingUnit, himIPDAGenIPEntry=himIPDAGenIPEntry, himSWVerOnProcSrc=himSWVerOnProcSrc, himLWDataOnProc=himLWDataOnProc, himSysWAMLConn=himSysWAMLConn, himLWOnProcPabxId=himLWOnProcPabxId, himSCSIDevEntry=himSCSIDevEntry, himCentralSwitchData=himCentralSwitchData, himPatchInfoEntry=himPatchInfoEntry, himCabinetEntry=himCabinetEntry, himMemScalingUsed=himMemScalingUsed, hp4khim=hp4khim, himSysBasicDomain=himSysBasicDomain, himTechFeatures=himTechFeatures, himDBConfSysEntry=himDBConfSysEntry, himBoardsGroup=himBoardsGroup, himLWOnCSIUNominal=himLWOnCSIUNominal, himSWUBoardPEN=himSWUBoardPEN, himSalesFeatMarketPackId=himSalesFeatMarketPackId, himBoardLocFaxNo=himBoardLocFaxNo, himInfoGroup=himInfoGroup, himIPDAIPAccPtPriRoutAddr=himIPDAIPAccPtPriRoutAddr, HimShelfNWType=HimShelfNWType, himBoardIPSrcIPAddr=himBoardIPSrcIPAddr, himFeaturesGroup=himFeaturesGroup, himChanges=himChanges, himSubagentLastMsgText=himSubagentLastMsgText, himSwitchAPSEntry=himSwitchAPSEntry, himLWDataOnCBTable=himLWDataOnCBTable, himBoardBasicNoCirc=himBoardBasicNoCirc, himCentralSwitchGroup=himCentralSwitchGroup, himDiscovTable=himDiscovTable, himBoardBasicLTG=himBoardBasicLTG, himProjPlanPabxId=himProjPlanPabxId, himLWDataOnCBEntry=himLWDataOnCBEntry, himPSIOAssPEN=himPSIOAssPEN, himBoardLocTable=himBoardLocTable, himHWSWUMem1=himHWSWUMem1, himSWVerOnProcTable=himSWVerOnProcTable, himSwitchAPSPabxId=himSwitchAPSPabxId, himHWSWUMem2=himHWSWUMem2, himMarkFeatEntry=himMarkFeatEntry, himIPDAGenEntry=himIPDAGenEntry, himLWOnProcLWId=himLWOnProcLWId, himCabPid2=himCabPid2, himSCSIDevId=himSCSIDevId, himIPDABasicEntry=himIPDABasicEntry, himSWVersionGroup=himSWVersionGroup, HimPabxId=HimPabxId, himCabPid1=himCabPid1, himProjPlanInfoTable=himProjPlanInfoTable, himLWDataOnCB=himLWDataOnCB, himTechFeatState=himTechFeatState, himReplacedAMOs=himReplacedAMOs, himIPDAIPTable=himIPDAIPTable, himSpecShelfDataPabxId=himSpecShelfDataPabxId, himWelPgTable=himWelPgTable, himSWPkgVerEntry=himSWPkgVerEntry, himSWUBoardLWNo=himSWUBoardLWNo, himIPDABasicLTU=himIPDABasicLTU, himLWOnCSIUProc=himLWOnCSIUProc, himSalesFeatMarkForTrial=himSalesFeatMarkForTrial, himLWOnCSIUFileName=himLWOnCSIUFileName, himTechInfoPabxId=himTechInfoPabxId, himDiscovErr=himDiscovErr, himIPDABasicConvAMLaw=himIPDABasicConvAMLaw, himMacAddrTable=himMacAddrTable, himHWADPMem=himHWADPMem, himIPDAGenData=himIPDAGenData, himMacAddrIPDA=himMacAddrIPDA, himNotepadDataText=himNotepadDataText, himSysWAMLConnRufNr=himSysWAMLConnRufNr, himSysBasicNodeNo=himSysBasicNodeNo, himPatchInfoActBP=himPatchInfoActBP, himDiscovMode=himDiscovMode, himDiscoveryGroup=himDiscoveryGroup, himDiscovTimDat=himDiscovTimDat, himMarkFeatInstallDate=himMarkFeatInstallDate, himSCSIDevFirmware=himSCSIDevFirmware, himLWOnCBFileName=himLWOnCBFileName, himSerialLineType=himSerialLineType, himDBConfHWTable=himDBConfHWTable, himDBConfHWLines=himDBConfHWLines, himSWPkgVerStatus=himSWPkgVerStatus, himMemScalingEntry=himMemScalingEntry, himPatchInfoActADP=himPatchInfoActADP, himReplAMOAPS=himReplAMOAPS, himSalesFeatUsed=himSalesFeatUsed, himSysLANCardsTable=himSysLANCardsTable, himSWPkgVerTable=himSWPkgVerTable, himMarketingFeatures=himMarketingFeatures, himBoardIPManStatPort=himBoardIPManStatPort, himSpecShelfDataFrameType=himSpecShelfDataFrameType, himMarkFeatHWId=himMarkFeatHWId, himSWVerOnProcEntry=himSWVerOnProcEntry, himDBConfHWLTG=himDBConfHWLTG, himIPDAGenPabxId=himIPDAGenPabxId, himSwitchAPS=himSwitchAPS, himSysLANCardsEntry=himSysLANCardsEntry, himTechInfoExtraText=himTechInfoExtraText, himIPDABasicTable=himIPDABasicTable, himDBConfSysID=himDBConfSysID, himSWUBoardOverlayLTU=himSWUBoardOverlayLTU, himProjPlanInfoEntry=himProjPlanInfoEntry, himDiscovery=himDiscovery)
