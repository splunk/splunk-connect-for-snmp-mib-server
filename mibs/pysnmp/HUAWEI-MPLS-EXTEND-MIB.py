#
# PySNMP MIB module HUAWEI-MPLS-EXTEND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MPLS-EXTEND-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:35:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifIndex, ifName = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifName")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
MplsIndexType, = mibBuilder.importSymbols("MPLS-LSR-STD-MIB", "MplsIndexType")
MplsTunnelIndex, MplsTunnelInstanceIndex, MplsExtendedTunnelId, MplsLsrIdentifier = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsTunnelIndex", "MplsTunnelInstanceIndex", "MplsExtendedTunnelId", "MplsLsrIdentifier")
mplsTunnelOperStatus, mplsTunnelAdminStatus = mibBuilder.importSymbols("MPLS-TE-STD-MIB", "mplsTunnelOperStatus", "mplsTunnelAdminStatus")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, TimeTicks, ModuleIdentity, iso, Unsigned32, NotificationType, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Gauge32, Counter32, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "ModuleIdentity", "iso", "Unsigned32", "NotificationType", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Gauge32", "Counter32", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwMplsExtendMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121))
hwMplsExtendMib.setRevisions(('2015-08-01 12:00', '2015-04-11 12:00', '2015-03-31 14:19', '2015-03-19 17:00', '2015-01-22 19:16', '2015-01-12 20:16', '2014-11-21 18:00', '2014-11-14 18:00', '2014-11-06 16:30', '2014-08-12 14:50', '2014-07-21 14:27', '2014-06-16 14:17', '2014-02-17 19:05', '2014-02-07 11:00', '2014-01-27 11:00', '2014-01-13 13:45', '2013-11-07 17:45', '2013-09-11 17:45', '2013-04-13 16:52', '2013-01-14 15:25', '2012-07-05 20:25', '2012-06-08 14:05', '2012-06-05 11:00', '2012-05-09 11:00', '2012-05-04 11:00', '2011-11-29 11:00', '2011-11-18 11:00', '2011-10-24 11:00', '2011-07-30 11:00', '2010-11-23 11:55', '2010-07-13 15:35', '2006-06-30 15:54',))
if mibBuilder.loadTexts: hwMplsExtendMib.setLastUpdated('201508011200Z')
if mibBuilder.loadTexts: hwMplsExtendMib.setOrganization('Huawei Technologies Co.,Ltd.')
hwMplsExtendMibTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1))
hwMplsTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1), )
if mibBuilder.loadTexts: hwMplsTunnelTable.setStatus('current')
hwMplsTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIndex"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInstance"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIngressLSRId"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelEgressLSRId"))
if mibBuilder.loadTexts: hwMplsTunnelEntry.setStatus('current')
hwMplsTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 1), MplsTunnelIndex())
if mibBuilder.loadTexts: hwMplsTunnelIndex.setStatus('current')
hwMplsTunnelInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 2), MplsTunnelInstanceIndex())
if mibBuilder.loadTexts: hwMplsTunnelInstance.setStatus('current')
hwMplsTunnelIngressLSRId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 3), MplsExtendedTunnelId())
if mibBuilder.loadTexts: hwMplsTunnelIngressLSRId.setStatus('current')
hwMplsTunnelEgressLSRId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 4), MplsExtendedTunnelId())
if mibBuilder.loadTexts: hwMplsTunnelEgressLSRId.setStatus('current')
hwMplsTunnelClassType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bc0", 1), ("bc1", 2), ("invalidValue", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelClassType.setStatus('current')
hwMplsTunnelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelBandwidth.setStatus('current')
hwMplsTunnelAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelAdminStatus.setStatus('current')
hwMplsTunnelOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelOperStatus.setStatus('current')
hwMplsTunnelSessionAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 9), Bits().clone(namedValues=NamedValues(("localProtectionDesired", 0), ("nodeProtectionDesired", 1), ("bandwidthProtectionDesired", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelSessionAttr.setStatus('current')
hwMplsTunnelFrrSetupPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelFrrSetupPrio.setStatus('current')
hwMplsTunnelFrrHoldingPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelFrrHoldingPrio.setStatus('current')
hwMplsTunnelFrrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelFrrBandwidth.setStatus('current')
hwMplsTunnelFrrSwitchover = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelFrrSwitchover.setStatus('current')
hwMplsTunnelFrrBypassTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelFrrBypassTableIndex.setStatus('current')
hwMplsTunnelFrrARHopTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelFrrARHopTableIndex.setStatus('current')
hwMplsTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelName.setStatus('current')
hwMplsTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelIfIndex.setStatus('current')
hwMplsTunnelPreBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelPreBandwidth.setStatus('current')
hwMplsTunnelNextBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelNextBandwidth.setStatus('current')
hwMplsTunnelCt0Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 20), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt0Bandwidth.setStatus('current')
hwMplsTunnelCt1Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 21), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt1Bandwidth.setStatus('current')
hwMplsTunnelCt2Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 22), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt2Bandwidth.setStatus('current')
hwMplsTunnelCt3Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 23), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt3Bandwidth.setStatus('current')
hwMplsTunnelCt4Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 24), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt4Bandwidth.setStatus('current')
hwMplsTunnelCt5Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 25), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt5Bandwidth.setStatus('current')
hwMplsTunnelCt6Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 26), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt6Bandwidth.setStatus('current')
hwMplsTunnelCt7Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 27), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelCt7Bandwidth.setStatus('current')
hwMplsTunnelLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("invalid", 0), ("primary", 1), ("primaryModifing", 2), ("hotStandby", 3), ("hotStandbyModifing", 4), ("ordinary", 5), ("ordinaryModifing", 6), ("bestEffort", 7), ("bestEffortModifing", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelLspType.setStatus('current')
hwMplsTunnelInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 29), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelInterfaceName.setStatus('current')
hwMplsTunnelSignalProto = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rsvpTE", 1), ("static", 2), ("staticCR", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelSignalProto.setStatus('current')
hwMplsTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("primaryTunnel", 2), ("bypassTunnel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelType.setStatus('current')
hwTunnelFrrBypassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 2), )
if mibBuilder.loadTexts: hwTunnelFrrBypassTable.setStatus('current')
hwTunnelFrrBypassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 2, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrBypassListIndex"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrBypassIndex"))
if mibBuilder.loadTexts: hwTunnelFrrBypassEntry.setStatus('current')
hwTunnelFrrBypassListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrBypassListIndex.setStatus('current')
hwTunnelFrrBypassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrBypassIndex.setStatus('current')
hwTunnelFrrBypassProtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelFrrBypassProtIfIndex.setStatus('current')
hwTunnelFrrARHopTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 3), )
if mibBuilder.loadTexts: hwTunnelFrrARHopTable.setStatus('current')
hwTunnelFrrARHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 3, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrARHopListIndex"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrARHopIndex"))
if mibBuilder.loadTexts: hwTunnelFrrARHopEntry.setStatus('current')
hwTunnelFrrARHopListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrARHopListIndex.setStatus('current')
hwTunnelFrrARHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrARHopIndex.setStatus('current')
hwTunnelFrrARHopProtDesired = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("localProtection", 0), ("nodeProtection", 1), ("bandwidthProtection", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelFrrARHopProtDesired.setStatus('current')
hwTunnelFrrARHopProtActual = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 3, 1, 4), Bits().clone(namedValues=NamedValues(("localProtection", 0), ("nodeProtection", 1), ("bandwidthProtection", 2), ("protectionInuse", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelFrrARHopProtActual.setStatus('current')
hwTunnelFrrRouteDBTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4), )
if mibBuilder.loadTexts: hwTunnelFrrRouteDBTable.setStatus('current')
hwTunnelFrrRouteDBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBTunnelIndex"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBTunnelInstance"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBTunnelIngressLSRId"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBTunnelEngressLSRId"))
if mibBuilder.loadTexts: hwTunnelFrrRouteDBEntry.setStatus('current')
hwTunnelFrrRouteDBTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrRouteDBTunnelIndex.setStatus('current')
hwTunnelFrrRouteDBTunnelInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrRouteDBTunnelInstance.setStatus('current')
hwTunnelFrrRouteDBTunnelIngressLSRId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrRouteDBTunnelIngressLSRId.setStatus('current')
hwTunnelFrrRouteDBTunnelEngressLSRId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4, 1, 4), Unsigned32())
if mibBuilder.loadTexts: hwTunnelFrrRouteDBTunnelEngressLSRId.setStatus('current')
hwTunnelFrrRouteDBBypassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelFrrRouteDBBypassIfIndex.setStatus('current')
hwTunnelFrrRouteDBInnerLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTunnelFrrRouteDBInnerLabel.setStatus('current')
hwStaticLspTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5), )
if mibBuilder.loadTexts: hwStaticLspTable.setStatus('current')
hwStaticLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspIndex"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInSegmentIndex"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspOutSegmentIndex"))
if mibBuilder.loadTexts: hwStaticLspEntry.setStatus('current')
hwStaticLspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 1), MplsIndexType())
if mibBuilder.loadTexts: hwStaticLspIndex.setStatus('current')
hwStaticLspInSegmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 2), MplsIndexType())
if mibBuilder.loadTexts: hwStaticLspInSegmentIndex.setStatus('current')
hwStaticLspOutSegmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 3), MplsIndexType())
if mibBuilder.loadTexts: hwStaticLspOutSegmentIndex.setStatus('current')
hwStaticLspOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("crstatic", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaticLspOwner.setStatus('current')
hwStaticLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaticLspName.setStatus('current')
hwStaticLspStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaticLspStatus.setStatus('current')
hwStaticLspClassType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("ct0", 1), ("ct1", 2), ("ct2", 3), ("ct3", 4), ("ct4", 5), ("ct5", 6), ("ct6", 7), ("ct7", 8), ("none", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaticLspClassType.setStatus('current')
hwStaticLspBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 5, 1, 8), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaticLspBandwidth.setStatus('current')
hwMplsTeClassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 6), )
if mibBuilder.loadTexts: hwMplsTeClassTable.setStatus('current')
hwMplsTeClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 6, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeClassId"))
if mibBuilder.loadTexts: hwMplsTeClassEntry.setStatus('current')
hwMplsTeClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwMplsTeClassId.setStatus('current')
hwMplsTeClassClassType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ct0", 1), ("ct1", 2), ("ct2", 3), ("ct3", 4), ("ct4", 5), ("ct5", 6), ("ct6", 7), ("ct7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTeClassClassType.setStatus('current')
hwMplsTeClassPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTeClassPriority.setStatus('current')
hwMplsTeClassDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 6, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTeClassDescription.setStatus('current')
hwMplsIfBcTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7), )
if mibBuilder.loadTexts: hwMplsIfBcTable.setStatus('current')
hwMplsIfBcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwMplsIfBcEntry.setStatus('current')
hwMplsIfMaxResvBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 1), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfMaxResvBandwidth.setStatus('current')
hwMplsIfBc0Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 2), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc0Bandwidth.setStatus('current')
hwMplsIfBc1Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 3), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc1Bandwidth.setStatus('current')
hwMplsIfBc2Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 4), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc2Bandwidth.setStatus('current')
hwMplsIfBc3Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 5), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc3Bandwidth.setStatus('current')
hwMplsIfBc4Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 6), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc4Bandwidth.setStatus('current')
hwMplsIfBc5Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 7), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc5Bandwidth.setStatus('current')
hwMplsIfBc6Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 8), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc6Bandwidth.setStatus('current')
hwMplsIfBc7Bandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 7, 1, 9), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsIfBc7Bandwidth.setStatus('current')
hwStaticLspTnlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 8), )
if mibBuilder.loadTexts: hwStaticLspTnlTable.setStatus('current')
hwStaticLspTnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 8, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspTnlName"))
if mibBuilder.loadTexts: hwStaticLspTnlEntry.setStatus('current')
hwStaticLspTnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 8, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: hwStaticLspTnlName.setStatus('current')
hwStaticLspTnlToken = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 8, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaticLspTnlToken.setStatus('current')
hwMplsTeVpnQosTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 9), )
if mibBuilder.loadTexts: hwMplsTeVpnQosTable.setStatus('current')
hwMplsTeVpnQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 9, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTnlID"))
if mibBuilder.loadTexts: hwMplsTeVpnQosEntry.setStatus('current')
hwMplsTnlID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwMplsTnlID.setStatus('current')
hwMplsTeVpnMaxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 9, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTeVpnMaxBandwidth.setStatus('current')
hwMplsTeVpnAllocatedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 9, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTeVpnAllocatedBandwidth.setStatus('current')
hwStaticLspInIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwStaticLspInIfIndex.setStatus('current')
hwStaticLspInIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 12), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwStaticLspInIfName.setStatus('current')
hwStaticLspDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 13), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwStaticLspDownReason.setStatus('current')
hwMplsTunnelStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 14), )
if mibBuilder.loadTexts: hwMplsTunnelStatisticsTable.setStatus('current')
hwMplsTunnelStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 14, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelStatisticsTunnelIndex"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelStatisticsIngressLSRId"), (0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelStatisticsEgressLSRId"))
if mibBuilder.loadTexts: hwMplsTunnelStatisticsEntry.setStatus('current')
hwMplsTunnelStatisticsTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 14, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwMplsTunnelStatisticsTunnelIndex.setStatus('current')
hwMplsTunnelStatisticsIngressLSRId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 14, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMplsTunnelStatisticsIngressLSRId.setStatus('current')
hwMplsTunnelStatisticsEgressLSRId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 14, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwMplsTunnelStatisticsEgressLSRId.setStatus('current')
hwMplsTunnelStatisticsHCInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 14, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelStatisticsHCInOctets.setStatus('current')
hwMplsTunnelStatisticsHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 1, 14, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTunnelStatisticsHCOutOctets.setStatus('current')
hwMplsExtendTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2))
hwLspTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1))
hwMplsStaticLspUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 1)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspStatus"), ("IF-MIB", "ifName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspDownReason"))
if mibBuilder.loadTexts: hwMplsStaticLspUp.setStatus('current')
hwMplsStaticLspDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 2)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspStatus"), ("IF-MIB", "ifName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspDownReason"))
if mibBuilder.loadTexts: hwMplsStaticLspDown.setStatus('current')
hwMplsStaticCRLspUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 3)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspStatus"), ("IF-MIB", "ifName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspDownReason"))
if mibBuilder.loadTexts: hwMplsStaticCRLspUp.setStatus('current')
hwMplsStaticCRLspDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 4)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspStatus"), ("IF-MIB", "ifName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspDownReason"))
if mibBuilder.loadTexts: hwMplsStaticCRLspDown.setStatus('current')
hwMplsTeFrrProtAval = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 5)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBBypassIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBInnerLabel"))
if mibBuilder.loadTexts: hwMplsTeFrrProtAval.setStatus('current')
hwMplsTeFrrProtNotAval = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 6)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBBypassIfIndex"))
if mibBuilder.loadTexts: hwMplsTeFrrProtNotAval.setStatus('current')
hwMplsTeFrrSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 7)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsSessionTunnelId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLocalLspId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIngressLsrId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsEgressLsrId"))
if mibBuilder.loadTexts: hwMplsTeFrrSwitch.setStatus('current')
hwMplsTeFrrResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 8)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTeFrrResume.setStatus('current')
hwMplsTunnelHSBSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 9)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelHSBSwitch.setStatus('current')
hwMplsTunnelHSBResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 10)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelHSBResume.setStatus('current')
hwMplsTunnelOBSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 11)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelOBSwitch.setStatus('current')
hwMplsTunnelOBResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 12)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelOBResume.setStatus('current')
hwMplsTunnelUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 13)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelUp.setStatus('obsolete')
hwMplsTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 14)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelDown.setStatus('obsolete')
hwMplsTunnelChangeBw = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 15)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelPreBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelNextBandwidth"))
if mibBuilder.loadTexts: hwMplsTunnelChangeBw.setStatus('current')
hwMplsTunnelTpOamLossSD = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 16)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsTunnelTpOamLossSD.setStatus('current')
hwMplsOamSDRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 17)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamSDRecovery.setStatus('current')
hwMplsOamLoss = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 18)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMplsOamLoss.setStatus('current')
hwMplsOamLossRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 19)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamLossRecovery.setStatus('current')
hwMplsOamAis = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 20)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamAis.setStatus('current')
hwMplsOamAisRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 21)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamAisRecovery.setStatus('current')
hwMplsOamRdi = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 22)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMplsOamRdi.setStatus('current')
hwMplsOamRdiRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 23)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamRdiRecovery.setStatus('current')
hwMplsOamMeg = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 24)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMeg.setStatus('current')
hwMplsOamMegRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 25)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMegRecovery.setStatus('current')
hwMplsOamMep = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 26)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMep.setStatus('current')
hwMplsOamMepRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 27)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMepRecovery.setStatus('current')
hwMplsOamSF = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 28)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamSF.setStatus('current')
hwMplsOamSFRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 29)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamSFRecovery.setStatus('current')
hwMplsOamPeriod = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 30)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamPeriod.setStatus('current')
hwMplsOamPeriodRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 31)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamPeriodRecovery.setStatus('current')
hwMplsOamLck = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 32)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamLck.setStatus('current')
hwMplsOamLckRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 33)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamLckRecovery.setStatus('current')
hwMplsOamExcess = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 34)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamExcess.setStatus('current')
hwMplsOamExcessRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 35)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamExcessRecovery.setStatus('current')
hwMplsOamMisMatch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 36)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMisMatch.setStatus('current')
hwMplsOamMisMatchRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 37)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMisMatchRecovery.setStatus('current')
hwMplsOamMisMerge = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 38)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMisMerge.setStatus('current')
hwMplsOamMisMergeRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 39)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamMisMergeRecovery.setStatus('current')
hwMplsOamUnknown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 40)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamUnknown.setStatus('current')
hwMplsOamUnknownRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 41)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamUnknownRecovery.setStatus('current')
hwMplsOamBDI = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 42)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMplsOamBDI.setStatus('current')
hwMplsOamBDIRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 43)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamBDIRecovery.setStatus('current')
hwMplsOamFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 44)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMplsOamFail.setStatus('current')
hwMplsOamFailRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 45)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamFailRecovery.setStatus('current')
hwMplsTunnelPrimaryUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 46)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"))
if mibBuilder.loadTexts: hwMplsTunnelPrimaryUp.setStatus('current')
hwMplsTunnelPrimaryDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 47)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownReason"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownLSRID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddrType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddr"))
if mibBuilder.loadTexts: hwMplsTunnelPrimaryDown.setStatus('current')
hwMplsTunnelHotstandbyUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 48)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"))
if mibBuilder.loadTexts: hwMplsTunnelHotstandbyUp.setStatus('current')
hwMplsTunnelHotstandbyDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 49)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownReason"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownLSRID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddrType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddr"))
if mibBuilder.loadTexts: hwMplsTunnelHotstandbyDown.setStatus('current')
hwMplsTunnelOrdinaryUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 50)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"))
if mibBuilder.loadTexts: hwMplsTunnelOrdinaryUp.setStatus('current')
hwMplsTunnelOrdinaryDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 51)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownReason"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownLSRID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddrType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddr"))
if mibBuilder.loadTexts: hwMplsTunnelOrdinaryDown.setStatus('current')
hwMplsTunnelBesteffortUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 52)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"))
if mibBuilder.loadTexts: hwMplsTunnelBesteffortUp.setStatus('current')
hwMplsTunnelBesteffortDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 53)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownReason"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownLSRID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddrType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddr"))
if mibBuilder.loadTexts: hwMplsTunnelBesteffortDown.setStatus('current')
hwMplsTeAutoTunnelDownClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 54)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIfName"))
if mibBuilder.loadTexts: hwMplsTeAutoTunnelDownClear.setStatus('current')
hwMplsTeAutoTunnelPrimaryDownClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 55)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"))
if mibBuilder.loadTexts: hwMplsTeAutoTunnelPrimaryDownClear.setStatus('current')
hwMplsTunnelBBSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 56)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelBBSwitch.setStatus('current')
hwMplsTunnelBBResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 57)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"))
if mibBuilder.loadTexts: hwMplsTunnelBBResume.setStatus('current')
hwMplsExtTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 58)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownReason"), ("IF-MIB", "ifName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownLSRID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddrType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddr"))
if mibBuilder.loadTexts: hwMplsExtTunnelDown.setStatus('current')
hwMplsExtTunnelDownClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 59)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownReason"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMplsExtTunnelDownClear.setStatus('current')
hwMplsOamLocalLock = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 60)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamLocalLock.setStatus('current')
hwMplsOamLocalLockRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 61)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"))
if mibBuilder.loadTexts: hwMplsOamLocalLockRecovery.setStatus('current')
hwMplsTunnelDelete = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 62)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIfName"))
if mibBuilder.loadTexts: hwMplsTunnelDelete.setStatus('current')
hwMplsLspThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 63)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspProtocol"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspCurrentCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspThreshold"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspTotalCount"))
if mibBuilder.loadTexts: hwMplsLspThresholdExceed.setStatus('current')
hwMplsLspThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 64)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspProtocol"))
if mibBuilder.loadTexts: hwMplsLspThresholdExceedClear.setStatus('current')
hwMplsLspTotalCountExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 65)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspProtocol"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspTotalCount"))
if mibBuilder.loadTexts: hwMplsLspTotalCountExceed.setStatus('current')
hwMplsLspTotalCountExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 66)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspProtocol"))
if mibBuilder.loadTexts: hwMplsLspTotalCountExceedClear.setStatus('current')
hwMplsDynamicLabelThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 67)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelTotalCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelCurrentCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdUpperLimit"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdLowerLimit"))
if mibBuilder.loadTexts: hwMplsDynamicLabelThresholdExceed.setStatus('current')
hwMplsDynamicLabelThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 68)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelTotalCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelCurrentCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdUpperLimit"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdLowerLimit"))
if mibBuilder.loadTexts: hwMplsDynamicLabelThresholdExceedClear.setStatus('current')
hwMplsDynamicLabelTotalCountExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 69)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelTotalCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelCurrentCount"))
if mibBuilder.loadTexts: hwMplsDynamicLabelTotalCountExceed.setStatus('current')
hwMplsDynamicLabelTotalCountExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 70)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelTotalCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelCurrentCount"))
if mibBuilder.loadTexts: hwMplsDynamicLabelTotalCountExceedClear.setStatus('current')
hwMplsResourceThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 71)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceCurrentCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceThreshold"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceTotalCount"))
if mibBuilder.loadTexts: hwMplsResourceThresholdExceed.setStatus('current')
hwMplsResourceThresholdExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 72)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceType"))
if mibBuilder.loadTexts: hwMplsResourceThresholdExceedClear.setStatus('current')
hwMplsResourceTotalCountExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 73)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceTotalCount"))
if mibBuilder.loadTexts: hwMplsResourceTotalCountExceed.setStatus('current')
hwMplsResourceTotalCountExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 74)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceType"))
if mibBuilder.loadTexts: hwMplsResourceTotalCountExceedClear.setStatus('current')
hwMplsLspLoopBack = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 75)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsSessionTunnelId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLocalLspId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIngressLsrId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsEgressLsrId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspName"))
if mibBuilder.loadTexts: hwMplsLspLoopBack.setStatus('current')
hwMplsLspLoopBackClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 76)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsSessionTunnelId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLocalLspId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIngressLsrId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsEgressLsrId"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspName"))
if mibBuilder.loadTexts: hwMplsLspLoopBackClear.setStatus('current')
hwMplsTunnelCommitLost = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 77))
if mibBuilder.loadTexts: hwMplsTunnelCommitLost.setStatus('current')
hwMplsTunnelCommitLostClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 78))
if mibBuilder.loadTexts: hwMplsTunnelCommitLostClear.setStatus('current')
hwMplsTunnelHotstandbySwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 79)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"))
if mibBuilder.loadTexts: hwMplsTunnelHotstandbySwitch.setStatus('current')
hwMplsTunnelHotstandbyResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 1, 80)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"))
if mibBuilder.loadTexts: hwMplsTunnelHotstandbyResume.setStatus('current')
hwMplsTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2))
hwMplsTunnelIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 1), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsTunnelIfName.setStatus('obsolete')
hwMplsTunnelFrrConfigOper = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unconfig", 0), ("config", 1), ("unknow", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsTunnelFrrConfigOper.setStatus('obsolete')
hwMplsTunnelDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 100))).clone(namedValues=NamedValues(("other", 1), ("staticLspDown", 2), ("staticCrlspDown", 3), ("outIfDown", 4), ("resourcePreempted", 5), ("rsvpMessageTimeout", 6), ("rsvpNeighborLost", 7), ("bypassTunnelDownOrUnbinded", 8), ("cspfComputeFail", 9), ("userShutdown", 10), ("tpoamLossOfContinuity", 11), ("tpoamAlarmIndicationSignal", 12), ("tpoamRemoteDefectIndication", 13), ("tpoamUnexpectedMEG", 14), ("tpoamUnexpectedMEP", 15), ("tpoamLossSF", 16), ("tpoamPeriod", 17), ("mplsOamLocv", 18), ("mplsOamExcess", 19), ("mplsOamMisMatch", 20), ("mplsOamMisMerge", 21), ("mplsOamUnknown", 22), ("mplsOamBdi", 23), ("mplsOamFdi", 24), ("mplsOamSF", 25), ("mplsOamSD", 26), ("mplsOamDOamFail", 27), ("serviceResume", 28), ("serviceDelete", 29), ("clear", 100)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsTunnelDownReason.setStatus('current')
hwMplsLspProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 100))).clone(namedValues=NamedValues(("ldp", 1), ("bgp", 2), ("bgpv6", 3), ("ldpfrr", 4), ("rsvp", 5), ("totalLsp", 6), ("totalCrLsp", 7), ("ldpIngress", 8), ("ldpTransit", 9), ("ldpEgress", 10), ("bgpIngress", 11), ("bgpEgress", 12), ("bgpv6Ingress", 13), ("bgpv6Egress", 14), ("rsvpIngress", 15), ("rsvpTransit", 16), ("rsvpEgress", 17), ("totalLspIngress", 18), ("totalLspTransit", 19), ("totalLspEgress", 20), ("totalCrLspIngress", 21), ("totalCrLspTransit", 22), ("totalCrLspEgress", 23), ("totalPublicNetLspIngressTransit", 24), ("totalPublicNetLspTransitEgress", 25), ("privateNetBgp", 26), ("unknown", 100)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLspProtocol.setStatus('current')
hwMplsLspThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLspThreshold.setStatus('current')
hwMplsLspTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLspTotalCount.setStatus('current')
hwMplsLspCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLspCurrentCount.setStatus('current')
hwMplsTunnelDownLSRID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 8), MplsLsrIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsTunnelDownLSRID.setStatus('current')
hwMplsTunnelDownIfIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 9), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsTunnelDownIfIpAddr.setStatus('current')
hwMplsTunnelDownIfIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 10), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsTunnelDownIfIpAddrType.setStatus('current')
hwMplsResourceType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 100))).clone(namedValues=NamedValues(("autoBypassTunnelIf", 1), ("p2mpAutoTunnelIf", 2), ("teBfd", 3), ("ldpBfd", 4), ("mldpTotalTree", 5), ("mldpTotalBranch", 6), ("ldpTotalRemoteAdjacency", 7), ("outSegment", 8), ("autoPrimaryTunnelIf", 9), ("ldpTotalLocalAdjacency", 10), ("cspfNode", 11), ("cspfLink", 12), ("cspfNlsa", 13), ("cspfSrlg", 14), ("unknown", 100)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsResourceType.setStatus('current')
hwMplsResourceCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 12), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsResourceCurrentCount.setStatus('current')
hwMplsResourceThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 13), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsResourceThreshold.setStatus('current')
hwMplsResourceTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 14), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsResourceTotalCount.setStatus('current')
hwMplsSessionTunnelId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 15), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsSessionTunnelId.setStatus('current')
hwMplsLocalLspId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 16), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLocalLspId.setStatus('current')
hwMplsIngressLsrId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 17), MplsLsrIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsIngressLsrId.setStatus('current')
hwMplsEgressLsrId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 18), MplsLsrIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsEgressLsrId.setStatus('current')
hwMplsLspName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 2, 19), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLspName.setStatus('current')
hwMplsTunnelFrrConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 2, 3)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIfName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrConfigOper"))
if mibBuilder.loadTexts: hwMplsTunnelFrrConfigChange.setStatus('obsolete')
hwMplsGlobalObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 3))
hwMplsGlobalWorkMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("nonstandard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsGlobalWorkMode.setStatus('current')
hwMplsGlobalBcModel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rdm", 1), ("mam", 2), ("extendMam", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsGlobalBcModel.setStatus('current')
hwMplsDynamicLabelTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 3, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsDynamicLabelTotalCount.setStatus('current')
hwMplsDynamicLabelCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 3, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsDynamicLabelCurrentCount.setStatus('current')
hwMplsDynamicLabelThresholdUpperLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 3, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsDynamicLabelThresholdUpperLimit.setStatus('current')
hwMplsDynamicLabelThresholdLowerLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 3, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsDynamicLabelThresholdLowerLimit.setStatus('current')
hwMplsLspStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4))
hwMplsLspStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 1), )
if mibBuilder.loadTexts: hwMplsLspStatisticsTable.setStatus('current')
hwMplsLspStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspStatisticsLspType"))
if mibBuilder.loadTexts: hwMplsLspStatisticsEntry.setStatus('current')
hwMplsLspStatisticsLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("staticLsp", 1), ("staticCrLsp", 2), ("ldpLsp", 3), ("rsvpCrLsp", 4), ("bgpLsp", 5), ("asbrLsp", 6), ("bgpIpv6Lsp", 7), ("l3vpnIpv6Lsp", 8))))
if mibBuilder.loadTexts: hwMplsLspStatisticsLspType.setStatus('current')
hwMplsLspStatisticsIngressLspCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLspStatisticsIngressLspCount.setStatus('current')
hwMplsLspStatisticsTransitLspCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLspStatisticsTransitLspCount.setStatus('current')
hwMplsLspStatisticsEgressLspCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLspStatisticsEgressLspCount.setStatus('current')
hwMplsLspStatisticsTotalLspCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLspStatisticsTotalLspCount.setStatus('current')
hwMplsTrafficStatisticsStaticLspTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2), )
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspTable.setStatus('current')
hwMplsTrafficStatisticsStaticLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspName"))
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspEntry.setStatus('current')
hwMplsTrafficStatisticsStaticLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspName.setStatus('current')
hwMplsTrafficStatisticsStaticLspForwardInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspForwardInBytes.setStatus('current')
hwMplsTrafficStatisticsStaticLspForwardInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspForwardInPackets.setStatus('current')
hwMplsTrafficStatisticsStaticLspForwardOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 4), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspForwardOutBytes.setStatus('current')
hwMplsTrafficStatisticsStaticLspForwardOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspForwardOutPackets.setStatus('current')
hwMplsTrafficStatisticsStaticLspBackwardInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 6), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspBackwardInBytes.setStatus('current')
hwMplsTrafficStatisticsStaticLspBackwardInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 7), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspBackwardInPackets.setStatus('current')
hwMplsTrafficStatisticsStaticLspBackwardOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 8), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspBackwardOutBytes.setStatus('current')
hwMplsTrafficStatisticsStaticLspBackwardOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 4, 2, 1, 9), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsTrafficStatisticsStaticLspBackwardOutPackets.setStatus('current')
hwMplsExtendConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6))
hwMplsExtendGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1))
hwMplsTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 1)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBInnerLabel"), ("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrRouteDBBypassIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrARHopProtActual"), ("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrARHopProtDesired"), ("HUAWEI-MPLS-EXTEND-MIB", "hwTunnelFrrBypassProtIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspOwner"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelClassType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSessionAttr"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrARHopTableIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelPreBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelNextBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrSwitchover"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOperStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelAdminStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeVpnMaxBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeVpnAllocatedBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrHoldingPrio"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrSetupPrio"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrBypassTableIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelLspType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelInterfaceName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelSignalProto"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsTunnelGroup = hwMplsTunnelGroup.setStatus('current')
hwStaticLspGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 2)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspStatus"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspTnlToken"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfIndex"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspInIfName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspDownReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwStaticLspGroup = hwStaticLspGroup.setStatus('current')
hwMplsDsTeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 3)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt0Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt1Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt2Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt3Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt4Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt5Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt6Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCt7Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspClassType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspBandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeClassClassType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeClassPriority"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeClassDescription"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsGlobalBcModel"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsGlobalWorkMode"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc7Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc6Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc5Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc4Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc3Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc2Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc1Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfBc0Bandwidth"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsIfMaxResvBandwidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsDsTeGroup = hwMplsDsTeGroup.setStatus('current')
hwMplsLspStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 4)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspStatisticsIngressLspCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspStatisticsTransitLspCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspStatisticsEgressLspCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspStatisticsTotalLspCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsLspStatisticsGroup = hwMplsLspStatisticsGroup.setStatus('current')
hwMplsObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 5)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelIfName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrConfigOper"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsObsoleteGroup = hwMplsObsoleteGroup.setStatus('obsolete')
hwMplsTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 6)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownReason"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownLSRID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddrType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDownIfIpAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsTrapGroup = hwMplsTrapGroup.setStatus('current')
hwMplsRingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 7)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingNodeID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingDirection"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingSwitchReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsRingGroup = hwMplsRingGroup.setStatus('current')
hwMplsGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 8)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelTotalCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelCurrentCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdUpperLimit"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdLowerLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsGlobalGroup = hwMplsGlobalGroup.setStatus('current')
hwMplsLspGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 9)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspCurrentCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspTotalCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspProtocol"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsLspGroup = hwMplsLspGroup.setStatus('current')
hwMplsLspTrafficStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 10)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspForwardInBytes"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspForwardInPackets"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspForwardOutBytes"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspForwardOutPackets"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspBackwardInBytes"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspBackwardInPackets"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspBackwardOutBytes"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTrafficStatisticsStaticLspBackwardOutPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsLspTrafficStatisticGroup = hwMplsLspTrafficStatisticGroup.setStatus('current')
hwMplsResourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 1, 11)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceType"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceCurrentCount"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceThreshold"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceTotalCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsResourceGroup = hwMplsResourceGroup.setStatus('current')
hwMplsExtendCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 2))
hwExtendTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 2, 1)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeFrrProtAval"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeFrrProtNotAval"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsStaticLspUp"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsStaticLspDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsStaticCRLspUp"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsStaticCRLspDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeFrrSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeFrrResume"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelHSBSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelHSBResume"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOBSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOBResume"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelChangeBw"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelTpOamLossSD"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamSDRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamLoss"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamLossRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamAis"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamAisRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamRdi"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamRdiRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMeg"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMegRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMep"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMepRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamSF"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamSFRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamPeriod"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamPeriodRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamLck"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamLckRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamExcess"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamExcessRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMisMatch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMisMatchRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMisMerge"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamMisMergeRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamUnknown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamUnknownRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamBDI"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamBDIRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamFail"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamFailRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelPrimaryUp"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelPrimaryDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelHotstandbyUp"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelHotstandbyDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOrdinaryUp"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelOrdinaryDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelBesteffortUp"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelBesteffortDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeAutoTunnelDownClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTeAutoTunnelPrimaryDownClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelBBSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelBBResume"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsExtTunnelDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsExtTunnelDownClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamLocalLock"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsOamLocalLockRecovery"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamLoss"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamLossClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamLoss"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamLossClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamRDI"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamRDIClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamRDI"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamRDIClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamUnexpectedMEG"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamUnexpectedMEGClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamUnexpectedMEG"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamUnexpectedMEGClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamUnexpectedPeriod"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamUnexpectedPeriodClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamUnexpectedPeriod"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamUnexpectedPeriodClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamExcess"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamExcessClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamExcess"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamExcessClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamSD"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamSDClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamSD"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamSDClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamSF"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamSFClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamSF"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamSFClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSResume"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSResume"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSSwitchFail"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSSwitchFailClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSSwitchFail"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSSwitchFailClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingResume"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSLost"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSLostClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSLost"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSLostClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSMismatch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestAPSMismatchClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSMismatch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastAPSMismatchClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamUnexpectedMEP"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingWestOamUnexpectedMEPClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamUnexpectedMEP"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingEastOamUnexpectedMEPClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDelete"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspTotalCountExceed"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspThresholdExceed"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspTotalCountExceedClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspThresholdExceedClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdExceed"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelThresholdExceedClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelTotalCountExceed"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDynamicLabelTotalCountExceedClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceThresholdExceed"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceThresholdExceedClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceTotalCountExceed"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsResourceTotalCountExceedClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspLoopBack"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsLspLoopBackClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCommitLost"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelCommitLostClear"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelHotstandbySwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelHotstandbyResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwExtendTrapGroup = hwExtendTrapGroup.setStatus('current')
hwObsoleteTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 2, 2)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelFrrConfigChange"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelUp"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelDown"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingSwitch"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwObsoleteTrapGroup = hwObsoleteTrapGroup.setStatus('obsolete')
hwMplsModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 6, 2, 3)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwStaticLspGroup"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsTunnelGroup"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsDsTeGroup"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMplsModuleCompliance = hwMplsModuleCompliance.setStatus('current')
hwMplsRingMib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7))
hwMplsRingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 1), )
if mibBuilder.loadTexts: hwMplsRingTable.setStatus('current')
hwMplsRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingID"))
if mibBuilder.loadTexts: hwMplsRingEntry.setStatus('current')
hwMplsRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwMplsRingID.setStatus('current')
hwMplsRingNodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsRingNodeID.setStatus('current')
hwMplsRingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsRingName.setStatus('current')
hwMplsRingDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsRingDirection.setStatus('current')
hwMplsRingSwitchReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsRingSwitchReason.setStatus('current')
hwMplsRingTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2))
hwMplsRingSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 1)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingNodeID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingDirection"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingSwitchReason"))
if mibBuilder.loadTexts: hwMplsRingSwitch.setStatus('obsolete')
hwMplsRingResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 2)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingNodeID"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"), ("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingDirection"))
if mibBuilder.loadTexts: hwMplsRingResume.setStatus('obsolete')
hwMplsRingWestOamLoss = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 3)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamLoss.setStatus('current')
hwMplsRingWestOamLossClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 4)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamLossClear.setStatus('current')
hwMplsRingEastOamLoss = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 5)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamLoss.setStatus('current')
hwMplsRingEastOamLossClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 6)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamLossClear.setStatus('current')
hwMplsRingWestOamRDI = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 7)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamRDI.setStatus('current')
hwMplsRingWestOamRDIClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 8)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamRDIClear.setStatus('current')
hwMplsRingEastOamRDI = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 9)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamRDI.setStatus('current')
hwMplsRingEastOamRDIClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 10)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamRDIClear.setStatus('current')
hwMplsRingWestOamUnexpectedMEG = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 11)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamUnexpectedMEG.setStatus('current')
hwMplsRingWestOamUnexpectedMEGClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 12)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamUnexpectedMEGClear.setStatus('current')
hwMplsRingEastOamUnexpectedMEG = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 13)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamUnexpectedMEG.setStatus('current')
hwMplsRingEastOamUnexpectedMEGClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 14)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamUnexpectedMEGClear.setStatus('current')
hwMplsRingWestOamUnexpectedPeriod = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 15)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamUnexpectedPeriod.setStatus('current')
hwMplsRingWestOamUnexpectedPeriodClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 16)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamUnexpectedPeriodClear.setStatus('current')
hwMplsRingEastOamUnexpectedPeriod = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 17)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamUnexpectedPeriod.setStatus('current')
hwMplsRingEastOamUnexpectedPeriodClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 18)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamUnexpectedPeriodClear.setStatus('current')
hwMplsRingWestOamExcess = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 19)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamExcess.setStatus('current')
hwMplsRingWestOamExcessClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 20)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamExcessClear.setStatus('current')
hwMplsRingEastOamExcess = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 21)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamExcess.setStatus('current')
hwMplsRingEastOamExcessClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 22)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamExcessClear.setStatus('current')
hwMplsRingWestOamSD = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 23)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamSD.setStatus('current')
hwMplsRingWestOamSDClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 24)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamSDClear.setStatus('current')
hwMplsRingEastOamSD = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 25)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamSD.setStatus('current')
hwMplsRingEastOamSDClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 26)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamSDClear.setStatus('current')
hwMplsRingWestOamSF = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 27)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamSF.setStatus('current')
hwMplsRingWestOamSFClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 28)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamSFClear.setStatus('current')
hwMplsRingEastOamSF = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 29)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamSF.setStatus('current')
hwMplsRingEastOamSFClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 30)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamSFClear.setStatus('current')
hwMplsRingWestAPSSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 31)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSSwitch.setStatus('current')
hwMplsRingWestAPSResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 32)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSResume.setStatus('current')
hwMplsRingEastAPSSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 33)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSSwitch.setStatus('current')
hwMplsRingEastAPSResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 34)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSResume.setStatus('current')
hwMplsRingWestAPSSwitchFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 35)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSSwitchFail.setStatus('current')
hwMplsRingWestAPSSwitchFailClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 36)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSSwitchFailClear.setStatus('current')
hwMplsRingEastAPSSwitchFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 37)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSSwitchFail.setStatus('current')
hwMplsRingEastAPSSwitchFailClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 38)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSSwitchFailClear.setStatus('current')
hwMplsRingWestAPSLost = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 39)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSLost.setStatus('current')
hwMplsRingWestAPSLostClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 40)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSLostClear.setStatus('current')
hwMplsRingEastAPSLost = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 41)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSLost.setStatus('current')
hwMplsRingEastAPSLostClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 42)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSLostClear.setStatus('current')
hwMplsRingWestAPSMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 43)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSMismatch.setStatus('current')
hwMplsRingWestAPSMismatchClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 44)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestAPSMismatchClear.setStatus('current')
hwMplsRingEastAPSMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 45)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSMismatch.setStatus('current')
hwMplsRingEastAPSMismatchClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 46)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastAPSMismatchClear.setStatus('current')
hwMplsRingWestOamUnexpectedMEP = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 47)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamUnexpectedMEP.setStatus('current')
hwMplsRingWestOamUnexpectedMEPClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 48)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingWestOamUnexpectedMEPClear.setStatus('current')
hwMplsRingEastOamUnexpectedMEP = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 49)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamUnexpectedMEP.setStatus('current')
hwMplsRingEastOamUnexpectedMEPClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 121, 7, 2, 50)).setObjects(("HUAWEI-MPLS-EXTEND-MIB", "hwMplsRingName"))
if mibBuilder.loadTexts: hwMplsRingEastOamUnexpectedMEPClear.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-MPLS-EXTEND-MIB", hwMplsOamMisMerge=hwMplsOamMisMerge, hwMplsOamLckRecovery=hwMplsOamLckRecovery, hwMplsTunnelSignalProto=hwMplsTunnelSignalProto, hwTunnelFrrRouteDBTunnelEngressLSRId=hwTunnelFrrRouteDBTunnelEngressLSRId, hwMplsRingWestAPSSwitchFail=hwMplsRingWestAPSSwitchFail, hwMplsRingWestOamUnexpectedMEPClear=hwMplsRingWestOamUnexpectedMEPClear, hwMplsTrafficStatisticsStaticLspBackwardInPackets=hwMplsTrafficStatisticsStaticLspBackwardInPackets, hwMplsRingEastAPSMismatch=hwMplsRingEastAPSMismatch, hwMplsRingWestOamLossClear=hwMplsRingWestOamLossClear, hwMplsRingGroup=hwMplsRingGroup, hwStaticLspDownReason=hwStaticLspDownReason, hwMplsTunnelCt3Bandwidth=hwMplsTunnelCt3Bandwidth, hwMplsLspStatisticsEntry=hwMplsLspStatisticsEntry, hwMplsStaticCRLspDown=hwMplsStaticCRLspDown, hwMplsRingWestOamSF=hwMplsRingWestOamSF, hwMplsLspThreshold=hwMplsLspThreshold, hwMplsModuleCompliance=hwMplsModuleCompliance, hwMplsRingEastOamUnexpectedMEGClear=hwMplsRingEastOamUnexpectedMEGClear, hwMplsRingWestOamSD=hwMplsRingWestOamSD, hwMplsTunnelStatisticsEntry=hwMplsTunnelStatisticsEntry, hwTunnelFrrBypassTable=hwTunnelFrrBypassTable, hwMplsDynamicLabelTotalCount=hwMplsDynamicLabelTotalCount, hwMplsTunnelHotstandbyResume=hwMplsTunnelHotstandbyResume, hwMplsRingWestOamSFClear=hwMplsRingWestOamSFClear, hwMplsResourceCurrentCount=hwMplsResourceCurrentCount, hwMplsOamRdiRecovery=hwMplsOamRdiRecovery, hwMplsOamSDRecovery=hwMplsOamSDRecovery, hwMplsDynamicLabelTotalCountExceedClear=hwMplsDynamicLabelTotalCountExceedClear, hwMplsTrafficStatisticsStaticLspForwardInBytes=hwMplsTrafficStatisticsStaticLspForwardInBytes, hwTunnelFrrRouteDBTunnelIndex=hwTunnelFrrRouteDBTunnelIndex, hwMplsRingEntry=hwMplsRingEntry, hwMplsTunnelDownIfIpAddr=hwMplsTunnelDownIfIpAddr, hwMplsTunnelHotstandbySwitch=hwMplsTunnelHotstandbySwitch, hwMplsRingEastOamUnexpectedPeriod=hwMplsRingEastOamUnexpectedPeriod, hwTunnelFrrARHopListIndex=hwTunnelFrrARHopListIndex, hwMplsIfBc0Bandwidth=hwMplsIfBc0Bandwidth, hwMplsResourceType=hwMplsResourceType, hwMplsTunnelCt1Bandwidth=hwMplsTunnelCt1Bandwidth, hwMplsRingWestOamSDClear=hwMplsRingWestOamSDClear, hwMplsRingEastOamSFClear=hwMplsRingEastOamSFClear, hwMplsTunnelOrdinaryUp=hwMplsTunnelOrdinaryUp, hwMplsResourceGroup=hwMplsResourceGroup, hwMplsTeClassPriority=hwMplsTeClassPriority, hwMplsRingID=hwMplsRingID, hwMplsRingWestOamLoss=hwMplsRingWestOamLoss, hwMplsLspStatistics=hwMplsLspStatistics, hwMplsRingWestOamUnexpectedPeriodClear=hwMplsRingWestOamUnexpectedPeriodClear, hwMplsTrapObjects=hwMplsTrapObjects, hwMplsTunnelBBResume=hwMplsTunnelBBResume, hwMplsLspTrafficStatisticGroup=hwMplsLspTrafficStatisticGroup, hwStaticLspTnlEntry=hwStaticLspTnlEntry, hwMplsTunnelPrimaryDown=hwMplsTunnelPrimaryDown, hwMplsRingEastAPSSwitch=hwMplsRingEastAPSSwitch, hwMplsTunnelCt4Bandwidth=hwMplsTunnelCt4Bandwidth, hwTunnelFrrRouteDBInnerLabel=hwTunnelFrrRouteDBInnerLabel, hwMplsTeAutoTunnelDownClear=hwMplsTeAutoTunnelDownClear, hwMplsTunnelLspType=hwMplsTunnelLspType, hwMplsTunnelGroup=hwMplsTunnelGroup, hwMplsExtendMib=hwMplsExtendMib, hwMplsRingWestAPSSwitchFailClear=hwMplsRingWestAPSSwitchFailClear, hwMplsRingWestOamUnexpectedMEG=hwMplsRingWestOamUnexpectedMEG, hwMplsRingEastOamLoss=hwMplsRingEastOamLoss, hwMplsResourceThresholdExceed=hwMplsResourceThresholdExceed, hwMplsOamLocalLockRecovery=hwMplsOamLocalLockRecovery, hwMplsTunnelStatisticsTable=hwMplsTunnelStatisticsTable, hwMplsExtendTrap=hwMplsExtendTrap, hwMplsOamMisMergeRecovery=hwMplsOamMisMergeRecovery, hwStaticLspClassType=hwStaticLspClassType, hwMplsExtendCompliances=hwMplsExtendCompliances, hwMplsRingWestAPSLostClear=hwMplsRingWestAPSLostClear, hwMplsTunnelType=hwMplsTunnelType, hwMplsTunnelCommitLostClear=hwMplsTunnelCommitLostClear, hwMplsGlobalWorkMode=hwMplsGlobalWorkMode, hwTunnelFrrBypassEntry=hwTunnelFrrBypassEntry, hwMplsOamSF=hwMplsOamSF, hwMplsTrafficStatisticsStaticLspName=hwMplsTrafficStatisticsStaticLspName, PYSNMP_MODULE_ID=hwMplsExtendMib, hwMplsRingEastOamUnexpectedPeriodClear=hwMplsRingEastOamUnexpectedPeriodClear, hwStaticLspEntry=hwStaticLspEntry, hwMplsResourceTotalCountExceed=hwMplsResourceTotalCountExceed, hwMplsTunnelFrrSwitchover=hwMplsTunnelFrrSwitchover, hwMplsLspLoopBack=hwMplsLspLoopBack, hwMplsDsTeGroup=hwMplsDsTeGroup, hwMplsTunnelIndex=hwMplsTunnelIndex, hwTunnelFrrRouteDBBypassIfIndex=hwTunnelFrrRouteDBBypassIfIndex, hwMplsStaticCRLspUp=hwMplsStaticCRLspUp, hwMplsTrafficStatisticsStaticLspTable=hwMplsTrafficStatisticsStaticLspTable, hwMplsOamMep=hwMplsOamMep, hwMplsRingEastAPSMismatchClear=hwMplsRingEastAPSMismatchClear, hwMplsRingEastOamSD=hwMplsRingEastOamSD, hwMplsTunnelHotstandbyUp=hwMplsTunnelHotstandbyUp, hwStaticLspGroup=hwStaticLspGroup, hwMplsLspTotalCount=hwMplsLspTotalCount, hwMplsRingName=hwMplsRingName, hwMplsRingEastOamUnexpectedMEG=hwMplsRingEastOamUnexpectedMEG, hwMplsRingEastAPSSwitchFail=hwMplsRingEastAPSSwitchFail, hwMplsTunnelEntry=hwMplsTunnelEntry, hwMplsTeFrrResume=hwMplsTeFrrResume, hwMplsTunnelTpOamLossSD=hwMplsTunnelTpOamLossSD, hwTunnelFrrBypassIndex=hwTunnelFrrBypassIndex, hwMplsRingEastAPSLost=hwMplsRingEastAPSLost, hwMplsTunnelTable=hwMplsTunnelTable, hwMplsRingEastOamSDClear=hwMplsRingEastOamSDClear, hwMplsTunnelStatisticsEgressLSRId=hwMplsTunnelStatisticsEgressLSRId, hwMplsOamMegRecovery=hwMplsOamMegRecovery, hwMplsTeFrrProtNotAval=hwMplsTeFrrProtNotAval, hwMplsResourceThresholdExceedClear=hwMplsResourceThresholdExceedClear, hwMplsOamPeriodRecovery=hwMplsOamPeriodRecovery, hwMplsOamFailRecovery=hwMplsOamFailRecovery, hwMplsTunnelDownIfIpAddrType=hwMplsTunnelDownIfIpAddrType, hwMplsTunnelStatisticsIngressLSRId=hwMplsTunnelStatisticsIngressLSRId, hwMplsTunnelNextBandwidth=hwMplsTunnelNextBandwidth, hwMplsRingSwitchReason=hwMplsRingSwitchReason, hwTunnelFrrRouteDBTunnelInstance=hwTunnelFrrRouteDBTunnelInstance, hwMplsTeClassClassType=hwMplsTeClassClassType, hwMplsTunnelDown=hwMplsTunnelDown, hwMplsTeAutoTunnelPrimaryDownClear=hwMplsTeAutoTunnelPrimaryDownClear, hwStaticLspTable=hwStaticLspTable, hwMplsTunnelPreBandwidth=hwMplsTunnelPreBandwidth, hwMplsResourceTotalCount=hwMplsResourceTotalCount, hwStaticLspOutSegmentIndex=hwStaticLspOutSegmentIndex, hwMplsTunnelFrrSetupPrio=hwMplsTunnelFrrSetupPrio, hwMplsTeClassId=hwMplsTeClassId, hwMplsGlobalObject=hwMplsGlobalObject, hwMplsRingEastOamSF=hwMplsRingEastOamSF, hwMplsRingWestOamUnexpectedMEP=hwMplsRingWestOamUnexpectedMEP, hwMplsOamLossRecovery=hwMplsOamLossRecovery, hwMplsOamSFRecovery=hwMplsOamSFRecovery, hwMplsIfBcTable=hwMplsIfBcTable, hwMplsRingEastOamRDI=hwMplsRingEastOamRDI, hwMplsTunnelBBSwitch=hwMplsTunnelBBSwitch, hwTunnelFrrARHopEntry=hwTunnelFrrARHopEntry, hwMplsIfBc3Bandwidth=hwMplsIfBc3Bandwidth, hwMplsRingEastOamExcessClear=hwMplsRingEastOamExcessClear, hwMplsRingTrap=hwMplsRingTrap, hwMplsRingResume=hwMplsRingResume, hwMplsTunnelIfName=hwMplsTunnelIfName, hwMplsIfBc1Bandwidth=hwMplsIfBc1Bandwidth, hwMplsRingTable=hwMplsRingTable, hwMplsOamLoss=hwMplsOamLoss, hwMplsTunnelDelete=hwMplsTunnelDelete, hwMplsResourceThreshold=hwMplsResourceThreshold, hwStaticLspInIfName=hwStaticLspInIfName, hwMplsLspStatisticsLspType=hwMplsLspStatisticsLspType, hwTunnelFrrARHopProtDesired=hwTunnelFrrARHopProtDesired, hwMplsTeVpnAllocatedBandwidth=hwMplsTeVpnAllocatedBandwidth, hwMplsLspLoopBackClear=hwMplsLspLoopBackClear, hwMplsOamBDI=hwMplsOamBDI, hwMplsLspStatisticsTransitLspCount=hwMplsLspStatisticsTransitLspCount, hwMplsRingSwitch=hwMplsRingSwitch, hwMplsTunnelOBSwitch=hwMplsTunnelOBSwitch, hwStaticLspStatus=hwStaticLspStatus, hwMplsTunnelFrrConfigChange=hwMplsTunnelFrrConfigChange, hwMplsLspStatisticsEgressLspCount=hwMplsLspStatisticsEgressLspCount, hwMplsObsoleteGroup=hwMplsObsoleteGroup, hwMplsRingWestAPSSwitch=hwMplsRingWestAPSSwitch, hwMplsRingWestAPSMismatch=hwMplsRingWestAPSMismatch, hwMplsLocalLspId=hwMplsLocalLspId, hwLspTrap=hwLspTrap, hwMplsTunnelHotstandbyDown=hwMplsTunnelHotstandbyDown, hwMplsRingWestAPSLost=hwMplsRingWestAPSLost, hwMplsOamPeriod=hwMplsOamPeriod, hwMplsTunnelStatisticsHCOutOctets=hwMplsTunnelStatisticsHCOutOctets, hwStaticLspTnlTable=hwStaticLspTnlTable, hwMplsIfBc5Bandwidth=hwMplsIfBc5Bandwidth, hwMplsRingDirection=hwMplsRingDirection, hwMplsExtTunnelDownClear=hwMplsExtTunnelDownClear, hwMplsDynamicLabelThresholdLowerLimit=hwMplsDynamicLabelThresholdLowerLimit, hwMplsTunnelOrdinaryDown=hwMplsTunnelOrdinaryDown, hwMplsLspTotalCountExceedClear=hwMplsLspTotalCountExceedClear, hwMplsRingEastAPSSwitchFailClear=hwMplsRingEastAPSSwitchFailClear, hwStaticLspIndex=hwStaticLspIndex, hwStaticLspOwner=hwStaticLspOwner, hwMplsIfBcEntry=hwMplsIfBcEntry, hwMplsTunnelBesteffortDown=hwMplsTunnelBesteffortDown, hwMplsRingEastOamUnexpectedMEP=hwMplsRingEastOamUnexpectedMEP, hwMplsRingNodeID=hwMplsRingNodeID, hwMplsExtendGroups=hwMplsExtendGroups, hwMplsTeClassEntry=hwMplsTeClassEntry, hwMplsTunnelCommitLost=hwMplsTunnelCommitLost, hwMplsTunnelIfIndex=hwMplsTunnelIfIndex, hwMplsLspCurrentCount=hwMplsLspCurrentCount, hwMplsLspName=hwMplsLspName, hwExtendTrapGroup=hwExtendTrapGroup, hwMplsTunnelCt5Bandwidth=hwMplsTunnelCt5Bandwidth, hwMplsOamLocalLock=hwMplsOamLocalLock, hwMplsRingWestAPSResume=hwMplsRingWestAPSResume, hwMplsTeVpnMaxBandwidth=hwMplsTeVpnMaxBandwidth, hwMplsTunnelCt6Bandwidth=hwMplsTunnelCt6Bandwidth, hwMplsExtendConformance=hwMplsExtendConformance, hwMplsTunnelCt0Bandwidth=hwMplsTunnelCt0Bandwidth, hwMplsTnlID=hwMplsTnlID, hwMplsLspGroup=hwMplsLspGroup, hwMplsTeVpnQosTable=hwMplsTeVpnQosTable, hwMplsRingEastAPSLostClear=hwMplsRingEastAPSLostClear, hwMplsTeFrrProtAval=hwMplsTeFrrProtAval, hwMplsTunnelFrrConfigOper=hwMplsTunnelFrrConfigOper, hwMplsIfBc4Bandwidth=hwMplsIfBc4Bandwidth, hwMplsRingWestOamUnexpectedMEGClear=hwMplsRingWestOamUnexpectedMEGClear, hwMplsOamExcessRecovery=hwMplsOamExcessRecovery, hwMplsRingEastOamUnexpectedMEPClear=hwMplsRingEastOamUnexpectedMEPClear, hwMplsIfBc2Bandwidth=hwMplsIfBc2Bandwidth, hwMplsLspStatisticsIngressLspCount=hwMplsLspStatisticsIngressLspCount, hwMplsLspStatisticsGroup=hwMplsLspStatisticsGroup, hwMplsOamUnknown=hwMplsOamUnknown, hwTunnelFrrBypassProtIfIndex=hwTunnelFrrBypassProtIfIndex, hwMplsTunnelClassType=hwMplsTunnelClassType, hwTunnelFrrRouteDBTunnelIngressLSRId=hwTunnelFrrRouteDBTunnelIngressLSRId, hwObsoleteTrapGroup=hwObsoleteTrapGroup, hwStaticLspInSegmentIndex=hwStaticLspInSegmentIndex, hwMplsLspTotalCountExceed=hwMplsLspTotalCountExceed, hwMplsStaticLspDown=hwMplsStaticLspDown, hwMplsOamMepRecovery=hwMplsOamMepRecovery, hwMplsRingWestOamExcessClear=hwMplsRingWestOamExcessClear, hwMplsOamBDIRecovery=hwMplsOamBDIRecovery, hwMplsTeClassDescription=hwMplsTeClassDescription, hwMplsLspStatisticsTable=hwMplsLspStatisticsTable, hwStaticLspBandwidth=hwStaticLspBandwidth, hwMplsTunnelChangeBw=hwMplsTunnelChangeBw, hwMplsIfBc7Bandwidth=hwMplsIfBc7Bandwidth, hwTunnelFrrARHopTable=hwTunnelFrrARHopTable, hwTunnelFrrARHopProtActual=hwTunnelFrrARHopProtActual, hwStaticLspTnlName=hwStaticLspTnlName, hwMplsTeFrrSwitch=hwMplsTeFrrSwitch, hwMplsTrafficStatisticsStaticLspBackwardOutPackets=hwMplsTrafficStatisticsStaticLspBackwardOutPackets, hwMplsTunnelCt2Bandwidth=hwMplsTunnelCt2Bandwidth, hwMplsTrafficStatisticsStaticLspForwardInPackets=hwMplsTrafficStatisticsStaticLspForwardInPackets, hwMplsTunnelOBResume=hwMplsTunnelOBResume, hwMplsTunnelPrimaryUp=hwMplsTunnelPrimaryUp, hwMplsTrafficStatisticsStaticLspForwardOutPackets=hwMplsTrafficStatisticsStaticLspForwardOutPackets, hwMplsRingWestOamUnexpectedPeriod=hwMplsRingWestOamUnexpectedPeriod, hwMplsTunnelDownReason=hwMplsTunnelDownReason, hwMplsDynamicLabelThresholdExceedClear=hwMplsDynamicLabelThresholdExceedClear, hwMplsOamLck=hwMplsOamLck, hwMplsTeClassTable=hwMplsTeClassTable, hwMplsOamMeg=hwMplsOamMeg, hwTunnelFrrRouteDBTable=hwTunnelFrrRouteDBTable, hwMplsRingWestAPSMismatchClear=hwMplsRingWestAPSMismatchClear, hwMplsTunnelCt7Bandwidth=hwMplsTunnelCt7Bandwidth, hwMplsExtTunnelDown=hwMplsExtTunnelDown, hwMplsOamFail=hwMplsOamFail, hwMplsTunnelFrrBandwidth=hwMplsTunnelFrrBandwidth, hwMplsTunnelDownLSRID=hwMplsTunnelDownLSRID, hwMplsSessionTunnelId=hwMplsSessionTunnelId, hwMplsDynamicLabelTotalCountExceed=hwMplsDynamicLabelTotalCountExceed, hwMplsTrafficStatisticsStaticLspBackwardInBytes=hwMplsTrafficStatisticsStaticLspBackwardInBytes, hwMplsTrafficStatisticsStaticLspEntry=hwMplsTrafficStatisticsStaticLspEntry, hwMplsTunnelHSBResume=hwMplsTunnelHSBResume, hwMplsOamUnknownRecovery=hwMplsOamUnknownRecovery, hwMplsTunnelStatisticsHCInOctets=hwMplsTunnelStatisticsHCInOctets, hwMplsTrafficStatisticsStaticLspBackwardOutBytes=hwMplsTrafficStatisticsStaticLspBackwardOutBytes, hwMplsDynamicLabelThresholdUpperLimit=hwMplsDynamicLabelThresholdUpperLimit, hwMplsRingWestOamExcess=hwMplsRingWestOamExcess, hwMplsRingEastOamExcess=hwMplsRingEastOamExcess)
mibBuilder.exportSymbols("HUAWEI-MPLS-EXTEND-MIB", hwMplsTunnelIngressLSRId=hwMplsTunnelIngressLSRId, hwMplsTunnelBandwidth=hwMplsTunnelBandwidth, hwTunnelFrrRouteDBEntry=hwTunnelFrrRouteDBEntry, hwMplsRingEastOamLossClear=hwMplsRingEastOamLossClear, hwMplsTrafficStatisticsStaticLspForwardOutBytes=hwMplsTrafficStatisticsStaticLspForwardOutBytes, hwMplsRingEastAPSResume=hwMplsRingEastAPSResume, hwMplsTunnelFrrARHopTableIndex=hwMplsTunnelFrrARHopTableIndex, hwMplsTrapGroup=hwMplsTrapGroup, hwStaticLspName=hwStaticLspName, hwMplsOamExcess=hwMplsOamExcess, hwMplsTunnelInstance=hwMplsTunnelInstance, hwMplsOamAis=hwMplsOamAis, hwMplsIfMaxResvBandwidth=hwMplsIfMaxResvBandwidth, hwStaticLspTnlToken=hwStaticLspTnlToken, hwMplsOamRdi=hwMplsOamRdi, hwMplsIngressLsrId=hwMplsIngressLsrId, hwMplsLspThresholdExceedClear=hwMplsLspThresholdExceedClear, hwMplsTunnelAdminStatus=hwMplsTunnelAdminStatus, hwMplsDynamicLabelThresholdExceed=hwMplsDynamicLabelThresholdExceed, hwMplsTunnelBesteffortUp=hwMplsTunnelBesteffortUp, hwMplsLspStatisticsTotalLspCount=hwMplsLspStatisticsTotalLspCount, hwMplsTunnelSessionAttr=hwMplsTunnelSessionAttr, hwMplsLspProtocol=hwMplsLspProtocol, hwMplsTunnelHSBSwitch=hwMplsTunnelHSBSwitch, hwMplsDynamicLabelCurrentCount=hwMplsDynamicLabelCurrentCount, hwMplsIfBc6Bandwidth=hwMplsIfBc6Bandwidth, hwMplsTunnelOperStatus=hwMplsTunnelOperStatus, hwTunnelFrrBypassListIndex=hwTunnelFrrBypassListIndex, hwMplsOamAisRecovery=hwMplsOamAisRecovery, hwMplsGlobalGroup=hwMplsGlobalGroup, hwMplsRingWestOamRDIClear=hwMplsRingWestOamRDIClear, hwStaticLspInIfIndex=hwStaticLspInIfIndex, hwMplsExtendMibTunnel=hwMplsExtendMibTunnel, hwMplsTunnelFrrHoldingPrio=hwMplsTunnelFrrHoldingPrio, hwMplsTunnelName=hwMplsTunnelName, hwMplsOamMisMatch=hwMplsOamMisMatch, hwMplsTunnelInterfaceName=hwMplsTunnelInterfaceName, hwMplsTeVpnQosEntry=hwMplsTeVpnQosEntry, hwTunnelFrrARHopIndex=hwTunnelFrrARHopIndex, hwMplsTunnelStatisticsTunnelIndex=hwMplsTunnelStatisticsTunnelIndex, hwMplsEgressLsrId=hwMplsEgressLsrId, hwMplsLspThresholdExceed=hwMplsLspThresholdExceed, hwMplsGlobalBcModel=hwMplsGlobalBcModel, hwMplsResourceTotalCountExceedClear=hwMplsResourceTotalCountExceedClear, hwMplsStaticLspUp=hwMplsStaticLspUp, hwMplsRingEastOamRDIClear=hwMplsRingEastOamRDIClear, hwMplsTunnelFrrBypassTableIndex=hwMplsTunnelFrrBypassTableIndex, hwMplsRingMib=hwMplsRingMib, hwMplsRingWestOamRDI=hwMplsRingWestOamRDI, hwMplsTunnelEgressLSRId=hwMplsTunnelEgressLSRId, hwMplsOamMisMatchRecovery=hwMplsOamMisMatchRecovery, hwMplsTunnelUp=hwMplsTunnelUp)
