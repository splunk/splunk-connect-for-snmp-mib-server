#
# PySNMP MIB module DFL210-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DFL210-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, Bits, MibIdentifier, Counter64, ObjectIdentity, Integer32, TimeTicks, IpAddress, NotificationType, ModuleIdentity, Unsigned32, enterprises, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "MibIdentifier", "Counter64", "ObjectIdentity", "Integer32", "TimeTicks", "IpAddress", "NotificationType", "ModuleIdentity", "Unsigned32", "enterprises", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
dfl210_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 1, 2)).setLabel("dfl210-MIB")
dfl210_MIB.setRevisions(('2010-09-02 11:39', '2010-03-30 09:00', '2009-11-10 09:16', '2008-11-18 16:05', '2008-10-14 12:27', '2007-10-31 00:00',))
if mibBuilder.loadTexts: dfl210_MIB.setLastUpdated('201009021139Z')
if mibBuilder.loadTexts: dfl210_MIB.setOrganization('D-Link Corporation')
dlink = MibIdentifier((1, 3, 6, 1, 4, 1, 171))
netdefendMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20))
ipsFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1))
dfl210 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1))
dfl210OS = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1))
dfl210OSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2))
dfl210reg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2))
dfl210MibModules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 1))
dfl210MibConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 2))
dfl210MibObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3))
dfl210System = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1))
dfl210SysCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysCpuLoad.setStatus('current')
dfl210SysForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysForwardedBits.setStatus('current')
dfl210SysForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysForwardedPackets.setStatus('current')
dfl210SysBuffUse = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysBuffUse.setStatus('current')
dfl210SysConns = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysConns.setStatus('current')
dfl210SysPerStateCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 6))
dfl210SysPscTcpSyn = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysPscTcpSyn.setStatus('current')
dfl210SysPscTcpOpen = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysPscTcpOpen.setStatus('current')
dfl210SysPscTcpFin = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysPscTcpFin.setStatus('current')
dfl210SysPscUdp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysPscUdp.setStatus('current')
dfl210SysPscIcmp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysPscIcmp.setStatus('current')
dfl210SysPscOther = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 6, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysPscOther.setStatus('current')
dfl210IfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7), )
if mibBuilder.loadTexts: dfl210IfStatsTable.setStatus('current')
dfl210IfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210IfStatsIndex"))
if mibBuilder.loadTexts: dfl210IfStatsEntry.setStatus('current')
dfl210IfStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210IfStatsIndex.setStatus('current')
dfl210IfName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfName.setStatus('current')
dfl210IfFragsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfFragsIn.setStatus('current')
dfl210IfFragReassOk = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfFragReassOk.setStatus('current')
dfl210IfFragReassFail = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfFragReassFail.setStatus('current')
dfl210IfPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfPktsInCnt.setStatus('current')
dfl210IfPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfPktsOutCnt.setStatus('current')
dfl210IfBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfBitsInCnt.setStatus('current')
dfl210IfBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfBitsOutCnt.setStatus('current')
dfl210IfPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfPktsTotCnt.setStatus('current')
dfl210IfBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfBitsTotCnt.setStatus('current')
dfl210IfHCPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfHCPktsInCnt.setStatus('current')
dfl210IfHCPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfHCPktsOutCnt.setStatus('current')
dfl210IfHCBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfHCBitsInCnt.setStatus('current')
dfl210IfHCBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfHCBitsOutCnt.setStatus('current')
dfl210IfHCPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfHCPktsTotCnt.setStatus('current')
dfl210IfHCBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfHCBitsTotCnt.setStatus('current')
dfl210IfRxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8), )
if mibBuilder.loadTexts: dfl210IfRxRingTable.setStatus('current')
dfl210IfRxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210IfRxRingIndex"))
if mibBuilder.loadTexts: dfl210IfRxRingEntry.setStatus('current')
dfl210IfRxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210IfRxRingIndex.setStatus('current')
dfl210IfRxRingFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfRxRingFifoErrors.setStatus('current')
dfl210IfRxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfRxDespools.setStatus('current')
dfl210IfRxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfRxAvgUse.setStatus('current')
dfl210IfRxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfRxRingSaturation.setStatus('current')
dfl210RxRingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210RxRingFlooded.setStatus('current')
dfl210IfTxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 9), )
if mibBuilder.loadTexts: dfl210IfTxRingTable.setStatus('current')
dfl210IfTxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 9, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210IfTxRingIndex"))
if mibBuilder.loadTexts: dfl210IfTxRingEntry.setStatus('current')
dfl210IfTxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210IfTxRingIndex.setStatus('current')
dfl210IfTxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfTxDespools.setStatus('current')
dfl210IfTxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfTxAvgUse.setStatus('current')
dfl210IfTxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfTxRingSaturation.setStatus('current')
dfl210RxTingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210RxTingFlooded.setStatus('current')
dfl210IfVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10), )
if mibBuilder.loadTexts: dfl210IfVlanStatsTable.setStatus('current')
dfl210IfVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210IfVlanIndex"))
if mibBuilder.loadTexts: dfl210IfVlanStatsEntry.setStatus('current')
dfl210IfVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210IfVlanIndex.setStatus('current')
dfl210IfVlanUntaggedInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfVlanUntaggedInPkts.setStatus('current')
dfl210IfVlanUntaggedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfVlanUntaggedOutPkts.setStatus('current')
dfl210IfVlanUntaggedTotPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfVlanUntaggedTotPkts.setStatus('current')
dfl210IfVlanUntaggedInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfVlanUntaggedInOctets.setStatus('current')
dfl210IfVlanUntaggedOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfVlanUntaggedOutOctets.setStatus('current')
dfl210IfVlanUntaggedTotOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IfVlanUntaggedTotOctets.setStatus('current')
dfl210HWSensorTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 11), )
if mibBuilder.loadTexts: dfl210HWSensorTable.setStatus('current')
dfl210HWSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 11, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210HWSensorIndex"))
if mibBuilder.loadTexts: dfl210HWSensorEntry.setStatus('current')
dfl210HWSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210HWSensorIndex.setStatus('current')
dfl210HWSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HWSensorName.setStatus('current')
dfl210HWSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HWSensorValue.setStatus('current')
dfl210HWSensorUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HWSensorUnit.setStatus('current')
dfl210SysMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysMemUsage.setStatus('current')
dfl210SysTCPUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 13))
dfl210SysTCPRecvSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 13, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysTCPRecvSmall.setStatus('current')
dfl210SysTCPRecvLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 13, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysTCPRecvLarge.setStatus('current')
dfl210SysTCPSendSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 13, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysTCPSendSmall.setStatus('current')
dfl210SysTCPSendLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 13, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysTCPSendLarge.setStatus('current')
dfl210SysTimerUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysTimerUsage.setStatus('current')
dfl210SysConnOPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysConnOPS.setStatus('current')
dfl210SysConnCPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysConnCPS.setStatus('current')
dfl210SysHCForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SysHCForwardedBits.setStatus('current')
dfl210VPN = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2))
dfl210IPsec = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1))
dfl210IPsecGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1))
dfl210IPsecPhaseOneActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecPhaseOneActive.setStatus('current')
dfl210IPsecPhaseOneAggrModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecPhaseOneAggrModeDone.setStatus('current')
dfl210IPsecQuickModeActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecQuickModeActive.setStatus('current')
dfl210IPsecPhaseOneDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecPhaseOneDone.setStatus('current')
dfl210IPsecPhaseOneFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecPhaseOneFailed.setStatus('current')
dfl210IPsecPhaseOneRekeyed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecPhaseOneRekeyed.setStatus('current')
dfl210IPsecQuickModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecQuickModeDone.setStatus('current')
dfl210IPsecQuickModeFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecQuickModeFailed.setStatus('current')
dfl210IPsecInfoDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecInfoDone.setStatus('current')
dfl210IPsecInfoFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecInfoFailed.setStatus('current')
dfl210IPsecInOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecInOctetsComp.setStatus('current')
dfl210IPsecInOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecInOctetsUncomp.setStatus('current')
dfl210IPsecOutOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecOutOctetsComp.setStatus('current')
dfl210IPsecOutOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecOutOctetsUncomp.setStatus('current')
dfl210IPsecForwardedOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecForwardedOctetsComp.setStatus('current')
dfl210IPsecForwardedOctetsUcomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecForwardedOctetsUcomp.setStatus('current')
dfl210IPsecInPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecInPackets.setStatus('current')
dfl210IPsecOutPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecOutPackets.setStatus('current')
dfl210IPsecForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecForwardedPackets.setStatus('current')
dfl210IPsecActiveTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecActiveTransforms.setStatus('current')
dfl210IPsecTotalTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecTotalTransforms.setStatus('current')
dfl210IPsecOutOfTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecOutOfTransforms.setStatus('current')
dfl210IPsecTotalRekeys = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPsecTotalRekeys.setStatus('current')
dfl210Rules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 3))
dfl210RuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 3, 2), )
if mibBuilder.loadTexts: dfl210RuleUseTable.setStatus('current')
dfl210RuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 3, 2, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210RuleIndex"))
if mibBuilder.loadTexts: dfl210RuleUseEntry.setStatus('current')
dfl210RuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210RuleIndex.setStatus('current')
dfl210RuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210RuleName.setStatus('current')
dfl210RuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210RuleUse.setStatus('current')
dfl210IPPools = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4))
dfl210IPPoolsNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPPoolsNumber.setStatus('current')
dfl210IPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2), )
if mibBuilder.loadTexts: dfl210IPPoolTable.setStatus('current')
dfl210IPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210IPPoolIndex"))
if mibBuilder.loadTexts: dfl210IPPoolEntry.setStatus('current')
dfl210IPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210IPPoolIndex.setStatus('current')
dfl210IPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPPoolName.setStatus('current')
dfl210IPPoolPrepare = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPPoolPrepare.setStatus('current')
dfl210IPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPPoolFree.setStatus('current')
dfl210IPPoolMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPPoolMisses.setStatus('current')
dfl210IPPoolClientFails = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPPoolClientFails.setStatus('current')
dfl210IPPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210IPPoolUsed.setStatus('current')
dfl210DHCPServer = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5))
dfl210DHCPTotalRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPTotalRejected.setStatus('current')
dfl210DHCPRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2), )
if mibBuilder.loadTexts: dfl210DHCPRuleTable.setStatus('current')
dfl210DHCPRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210DHCPRuleIndex"))
if mibBuilder.loadTexts: dfl210DHCPRuleEntry.setStatus('current')
dfl210DHCPRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210DHCPRuleIndex.setStatus('current')
dfl210DHCPRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRuleName.setStatus('current')
dfl210DHCPRuleUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRuleUsage.setStatus('current')
dfl210DHCPRuleUsagePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRuleUsagePercent.setStatus('current')
dfl210DHCPActiveClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPActiveClients.setStatus('current')
dfl210DHCPActiveClientsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPActiveClientsPercent.setStatus('current')
dfl210DHCPRejectedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRejectedRequests.setStatus('current')
dfl210DHCPTotalLeases = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPTotalLeases.setStatus('current')
dfl210UserAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6))
dfl210UserAuthHTTPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210UserAuthHTTPUsers.setStatus('current')
dfl210UserAuthXAUTHUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210UserAuthXAUTHUsers.setStatus('current')
dfl210UserAuthHTTPSUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210UserAuthHTTPSUsers.setStatus('current')
dfl210UserAuthPPPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210UserAuthPPPUsers.setStatus('current')
dfl210UserAuthEAPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210UserAuthEAPUsers.setStatus('current')
dfl210UserAuthRuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 6), )
if mibBuilder.loadTexts: dfl210UserAuthRuleUseTable.setStatus('current')
dfl210UserAuthRuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 6, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210UserAuthRuleIndex"))
if mibBuilder.loadTexts: dfl210UserAuthRuleUseEntry.setStatus('current')
dfl210UserAuthRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210UserAuthRuleIndex.setStatus('current')
dfl210UserAuthRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210UserAuthRuleName.setStatus('current')
dfl210UserAuthRuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 6, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210UserAuthRuleUse.setStatus('current')
dfl210LinkMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7))
dfl210LinkMonGrp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210LinkMonGrp.setStatus('current')
dfl210LinkMonGrpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 2), )
if mibBuilder.loadTexts: dfl210LinkMonGrpTable.setStatus('current')
dfl210LinkMonGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 2, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210LinkMonGrpIndex"))
if mibBuilder.loadTexts: dfl210LinkMonGrpEntry.setStatus('current')
dfl210LinkMonGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210LinkMonGrpIndex.setStatus('current')
dfl210LinkMonGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210LinkMonGrpName.setStatus('current')
dfl210LinkMonGrpHostsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210LinkMonGrpHostsUp.setStatus('current')
dfl210LinkMonHostTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 3), )
if mibBuilder.loadTexts: dfl210LinkMonHostTable.setStatus('current')
dfl210LinkMonHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 3, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210LinkMonGrpIndex"), (0, "DFL210-MIB", "dfl210LinkMonHostIndex"))
if mibBuilder.loadTexts: dfl210LinkMonHostEntry.setStatus('current')
dfl210LinkMonHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210LinkMonHostIndex.setStatus('current')
dfl210LinkMonHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210LinkMonHostId.setStatus('current')
dfl210LinkMonHostShortTermLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210LinkMonHostShortTermLoss.setStatus('current')
dfl210LinkMonHostPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 7, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210LinkMonHostPacketsLost.setStatus('current')
dfl210Pipes = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8))
dfl210PipeUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeUsers.setStatus('current')
dfl210PipeTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2), )
if mibBuilder.loadTexts: dfl210PipeTable.setStatus('current')
dfl210PipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210PipeIndex"))
if mibBuilder.loadTexts: dfl210PipeEntry.setStatus('current')
dfl210PipeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210PipeIndex.setStatus('current')
dfl210PipeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeName.setStatus('current')
dfl210PipeMinPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeMinPrec.setStatus('current')
dfl210PipeMaxPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeMaxPrec.setStatus('current')
dfl210PipeDefPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeDefPrec.setStatus('current')
dfl210PipeNumPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeNumPrec.setStatus('current')
dfl210PipeNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeNumUsers.setStatus('current')
dfl210PipeCurrentBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeCurrentBps.setStatus('current')
dfl210PipeCurrentPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeCurrentPps.setStatus('current')
dfl210PipeDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeDelayedPackets.setStatus('current')
dfl210PipeDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipeDropedPackets.setStatus('current')
dfl210PipePrecTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3), )
if mibBuilder.loadTexts: dfl210PipePrecTable.setStatus('current')
dfl210PipePrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210PipeIndex"), (0, "DFL210-MIB", "dfl210PipePrecIndex"))
if mibBuilder.loadTexts: dfl210PipePrecEntry.setStatus('current')
dfl210PipePrecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210PipePrecIndex.setStatus('current')
dfl210PipePrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrec.setStatus('current')
dfl210PipePrecBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrecBps.setStatus('current')
dfl210PipePrecTotalPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrecTotalPps.setStatus('current')
dfl210PipePrecReservedBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrecReservedBps.setStatus('current')
dfl210PipePrecDynLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrecDynLimBps.setStatus('current')
dfl210PipePrecDynUsrLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrecDynUsrLimBps.setStatus('current')
dfl210PipePrecDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrecDelayedPackets.setStatus('current')
dfl210PipePrecDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 8, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210PipePrecDropedPackets.setStatus('current')
dfl210ALG = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9))
dfl210AlgSessions = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210AlgSessions.setStatus('current')
dfl210AlgConnections = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210AlgConnections.setStatus('current')
dfl210AlgTCPStreams = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210AlgTCPStreams.setStatus('current')
dfl210HttpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4))
dfl210HttpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 1), )
if mibBuilder.loadTexts: dfl210HttpAlgTable.setStatus('current')
dfl210HttpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 1, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210HttpAlgIndex"))
if mibBuilder.loadTexts: dfl210HttpAlgEntry.setStatus('current')
dfl210HttpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210HttpAlgIndex.setStatus('current')
dfl210HttpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgName.setStatus('current')
dfl210HttpAlgTotalRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgTotalRequested.setStatus('current')
dfl210HttpAlgTotalAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgTotalAllowed.setStatus('current')
dfl210HttpAlgTotalBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgTotalBlocked.setStatus('current')
dfl210HttpAlgCntFltTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 2), )
if mibBuilder.loadTexts: dfl210HttpAlgCntFltTable.setStatus('current')
dfl210HttpAlgCntFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 2, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210HttpAlgIndex"), (0, "DFL210-MIB", "dfl210HttpAlgCntFltIndex"))
if mibBuilder.loadTexts: dfl210HttpAlgCntFltEntry.setStatus('current')
dfl210HttpAlgCntFltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210HttpAlgCntFltIndex.setStatus('current')
dfl210HttpAlgCntFltName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgCntFltName.setStatus('current')
dfl210HttpAlgCntFltRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgCntFltRequests.setStatus('current')
dfl210HttpAlgCntFltAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgCntFltAllowed.setStatus('current')
dfl210HttpAlgCntFltBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HttpAlgCntFltBlocked.setStatus('current')
dfl210SmtpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5))
dfl210SmtpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 1), )
if mibBuilder.loadTexts: dfl210SmtpAlgTable.setStatus('current')
dfl210SmtpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 1, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210SmtpAlgIndex"))
if mibBuilder.loadTexts: dfl210SmtpAlgEntry.setStatus('current')
dfl210SmtpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210SmtpAlgIndex.setStatus('current')
dfl210SmtpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgName.setStatus('current')
dfl210SmtpAlgTotCheckedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgTotCheckedSes.setStatus('current')
dfl210SmtpAlgTotSpamSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgTotSpamSes.setStatus('current')
dfl210SmtpAlgTotDroppedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgTotDroppedSes.setStatus('current')
dfl210SmtpAlgDnsBlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 2), )
if mibBuilder.loadTexts: dfl210SmtpAlgDnsBlTable.setStatus('current')
dfl210SmtpAlgDnsBlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 2, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210SmtpAlgIndex"), (0, "DFL210-MIB", "dfl210SmtpAlgDnsBlIndex"))
if mibBuilder.loadTexts: dfl210SmtpAlgDnsBlEntry.setStatus('current')
dfl210SmtpAlgDnsBlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210SmtpAlgDnsBlIndex.setStatus('current')
dfl210SmtpAlgDnsBlName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgDnsBlName.setStatus('current')
dfl210SmtpAlgDnsBlChecked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgDnsBlChecked.setStatus('current')
dfl210SmtpAlgDnsBlMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgDnsBlMatched.setStatus('current')
dfl210SmtpAlgDnsBlFailChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 9, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210SmtpAlgDnsBlFailChecks.setStatus('current')
dfl210DHCPRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11))
dfl210DHCPRelayCurClients = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayCurClients.setStatus('current')
dfl210DHCPRelayCurTrans = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayCurTrans.setStatus('current')
dfl210DHCPRelayRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayRejected.setStatus('current')
dfl210DHCPRelayRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4), )
if mibBuilder.loadTexts: dfl210DHCPRelayRuleTable.setStatus('current')
dfl210DHCPRelayRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4, 1), ).setIndexNames((0, "DFL210-MIB", "dfl210DHCPRelayRuleIndex"))
if mibBuilder.loadTexts: dfl210DHCPRelayRuleEntry.setStatus('current')
dfl210DHCPRelayRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl210DHCPRelayRuleIndex.setStatus('current')
dfl210DHCPRelayRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayRuleName.setStatus('current')
dfl210DHCPRelayRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayRuleHits.setStatus('current')
dfl210DHCPRelayRuleCurClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayRuleCurClients.setStatus('current')
dfl210DHCPRelayRuleRejCliPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayRuleRejCliPkts.setStatus('current')
dfl210DHCPRelayRuleRejSrvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 11, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210DHCPRelayRuleRejSrvPkts.setStatus('current')
dfl210HA = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 12))
dfl210HASyncSendQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 12, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HASyncSendQueueLength.setStatus('current')
dfl210HASyncSendQueueUsagePkt = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 12, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HASyncSendQueueUsagePkt.setStatus('current')
dfl210HASyncSendQueueUsageOct = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 12, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HASyncSendQueueUsageOct.setStatus('current')
dfl210HASyncSentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HASyncSentPackets.setStatus('current')
dfl210HASyncSendResentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 1, 2, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl210HASyncSendResentPackets.setStatus('current')
dfl210StatsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 2, 1))
dfl210StatsRegGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1))
dfl210SystemObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 1)).setObjects(("DFL210-MIB", "dfl210SysCpuLoad"), ("DFL210-MIB", "dfl210SysForwardedBits"), ("DFL210-MIB", "dfl210SysForwardedPackets"), ("DFL210-MIB", "dfl210SysBuffUse"), ("DFL210-MIB", "dfl210SysConns"), ("DFL210-MIB", "dfl210HWSensorName"), ("DFL210-MIB", "dfl210HWSensorValue"), ("DFL210-MIB", "dfl210HWSensorUnit"), ("DFL210-MIB", "dfl210SysMemUsage"), ("DFL210-MIB", "dfl210SysTimerUsage"), ("DFL210-MIB", "dfl210SysConnOPS"), ("DFL210-MIB", "dfl210SysConnCPS"), ("DFL210-MIB", "dfl210SysHCForwardedBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210SystemObjectGroup = dfl210SystemObjectGroup.setStatus('current')
dfl210IPsecObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 2)).setObjects(("DFL210-MIB", "dfl210IPsecPhaseOneActive"), ("DFL210-MIB", "dfl210IPsecPhaseOneAggrModeDone"), ("DFL210-MIB", "dfl210IPsecQuickModeActive"), ("DFL210-MIB", "dfl210IPsecPhaseOneDone"), ("DFL210-MIB", "dfl210IPsecPhaseOneFailed"), ("DFL210-MIB", "dfl210IPsecPhaseOneRekeyed"), ("DFL210-MIB", "dfl210IPsecQuickModeDone"), ("DFL210-MIB", "dfl210IPsecQuickModeFailed"), ("DFL210-MIB", "dfl210IPsecInfoDone"), ("DFL210-MIB", "dfl210IPsecInfoFailed"), ("DFL210-MIB", "dfl210IPsecInOctetsComp"), ("DFL210-MIB", "dfl210IPsecInOctetsUncomp"), ("DFL210-MIB", "dfl210IPsecOutOctetsComp"), ("DFL210-MIB", "dfl210IPsecOutOctetsUncomp"), ("DFL210-MIB", "dfl210IPsecForwardedOctetsComp"), ("DFL210-MIB", "dfl210IPsecForwardedOctetsUcomp"), ("DFL210-MIB", "dfl210IPsecInPackets"), ("DFL210-MIB", "dfl210IPsecOutPackets"), ("DFL210-MIB", "dfl210IPsecForwardedPackets"), ("DFL210-MIB", "dfl210IPsecActiveTransforms"), ("DFL210-MIB", "dfl210IPsecTotalTransforms"), ("DFL210-MIB", "dfl210IPsecOutOfTransforms"), ("DFL210-MIB", "dfl210IPsecTotalRekeys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210IPsecObjectGroup = dfl210IPsecObjectGroup.setStatus('current')
dfl210StateCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 3)).setObjects(("DFL210-MIB", "dfl210SysPscTcpSyn"), ("DFL210-MIB", "dfl210SysPscTcpOpen"), ("DFL210-MIB", "dfl210SysPscTcpFin"), ("DFL210-MIB", "dfl210SysPscUdp"), ("DFL210-MIB", "dfl210SysPscIcmp"), ("DFL210-MIB", "dfl210SysPscOther"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210StateCountersGroup = dfl210StateCountersGroup.setStatus('current')
dfl210IPPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 4)).setObjects(("DFL210-MIB", "dfl210IPPoolsNumber"), ("DFL210-MIB", "dfl210IPPoolName"), ("DFL210-MIB", "dfl210IPPoolPrepare"), ("DFL210-MIB", "dfl210IPPoolFree"), ("DFL210-MIB", "dfl210IPPoolMisses"), ("DFL210-MIB", "dfl210IPPoolClientFails"), ("DFL210-MIB", "dfl210IPPoolUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210IPPoolGroup = dfl210IPPoolGroup.setStatus('current')
dfl210DHCPServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 5)).setObjects(("DFL210-MIB", "dfl210DHCPTotalRejected"), ("DFL210-MIB", "dfl210DHCPRuleName"), ("DFL210-MIB", "dfl210DHCPRuleUsage"), ("DFL210-MIB", "dfl210DHCPRuleUsagePercent"), ("DFL210-MIB", "dfl210DHCPActiveClients"), ("DFL210-MIB", "dfl210DHCPActiveClientsPercent"), ("DFL210-MIB", "dfl210DHCPRejectedRequests"), ("DFL210-MIB", "dfl210DHCPTotalLeases"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210DHCPServerGroup = dfl210DHCPServerGroup.setStatus('current')
dfl210RuleUseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 6)).setObjects(("DFL210-MIB", "dfl210RuleName"), ("DFL210-MIB", "dfl210RuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210RuleUseGroup = dfl210RuleUseGroup.setStatus('current')
dfl210UserAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 7)).setObjects(("DFL210-MIB", "dfl210UserAuthHTTPUsers"), ("DFL210-MIB", "dfl210UserAuthXAUTHUsers"), ("DFL210-MIB", "dfl210UserAuthHTTPSUsers"), ("DFL210-MIB", "dfl210UserAuthPPPUsers"), ("DFL210-MIB", "dfl210UserAuthEAPUsers"), ("DFL210-MIB", "dfl210UserAuthRuleName"), ("DFL210-MIB", "dfl210UserAuthRuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210UserAuthGroup = dfl210UserAuthGroup.setStatus('current')
dfl210IfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 8)).setObjects(("DFL210-MIB", "dfl210IfName"), ("DFL210-MIB", "dfl210IfFragsIn"), ("DFL210-MIB", "dfl210IfFragReassOk"), ("DFL210-MIB", "dfl210IfFragReassFail"), ("DFL210-MIB", "dfl210IfPktsInCnt"), ("DFL210-MIB", "dfl210IfPktsOutCnt"), ("DFL210-MIB", "dfl210IfBitsInCnt"), ("DFL210-MIB", "dfl210IfBitsOutCnt"), ("DFL210-MIB", "dfl210IfPktsTotCnt"), ("DFL210-MIB", "dfl210IfBitsTotCnt"), ("DFL210-MIB", "dfl210IfHCPktsInCnt"), ("DFL210-MIB", "dfl210IfHCPktsOutCnt"), ("DFL210-MIB", "dfl210IfHCBitsInCnt"), ("DFL210-MIB", "dfl210IfHCBitsOutCnt"), ("DFL210-MIB", "dfl210IfHCPktsTotCnt"), ("DFL210-MIB", "dfl210IfHCBitsTotCnt"), ("DFL210-MIB", "dfl210IfRxRingFifoErrors"), ("DFL210-MIB", "dfl210IfRxDespools"), ("DFL210-MIB", "dfl210IfRxAvgUse"), ("DFL210-MIB", "dfl210IfRxRingSaturation"), ("DFL210-MIB", "dfl210RxRingFlooded"), ("DFL210-MIB", "dfl210IfTxDespools"), ("DFL210-MIB", "dfl210IfTxAvgUse"), ("DFL210-MIB", "dfl210IfTxRingSaturation"), ("DFL210-MIB", "dfl210RxTingFlooded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210IfStatsGroup = dfl210IfStatsGroup.setStatus('current')
dfl210LinkMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 9)).setObjects(("DFL210-MIB", "dfl210LinkMonGrp"), ("DFL210-MIB", "dfl210LinkMonGrpName"), ("DFL210-MIB", "dfl210LinkMonGrpHostsUp"), ("DFL210-MIB", "dfl210LinkMonHostId"), ("DFL210-MIB", "dfl210LinkMonHostShortTermLoss"), ("DFL210-MIB", "dfl210LinkMonHostPacketsLost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210LinkMonitorGroup = dfl210LinkMonitorGroup.setStatus('current')
dfl210PipesObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 10)).setObjects(("DFL210-MIB", "dfl210PipeUsers"), ("DFL210-MIB", "dfl210PipeName"), ("DFL210-MIB", "dfl210PipeMinPrec"), ("DFL210-MIB", "dfl210PipeMaxPrec"), ("DFL210-MIB", "dfl210PipeDefPrec"), ("DFL210-MIB", "dfl210PipeNumPrec"), ("DFL210-MIB", "dfl210PipeNumUsers"), ("DFL210-MIB", "dfl210PipeCurrentBps"), ("DFL210-MIB", "dfl210PipeCurrentPps"), ("DFL210-MIB", "dfl210PipeDelayedPackets"), ("DFL210-MIB", "dfl210PipeDropedPackets"), ("DFL210-MIB", "dfl210PipePrec"), ("DFL210-MIB", "dfl210PipePrecBps"), ("DFL210-MIB", "dfl210PipePrecTotalPps"), ("DFL210-MIB", "dfl210PipePrecReservedBps"), ("DFL210-MIB", "dfl210PipePrecDynLimBps"), ("DFL210-MIB", "dfl210PipePrecDynUsrLimBps"), ("DFL210-MIB", "dfl210PipePrecDelayedPackets"), ("DFL210-MIB", "dfl210PipePrecDropedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210PipesObjectGroup = dfl210PipesObjectGroup.setStatus('current')
dfl210DHCPRelayObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 12)).setObjects(("DFL210-MIB", "dfl210DHCPRelayCurClients"), ("DFL210-MIB", "dfl210DHCPRelayCurTrans"), ("DFL210-MIB", "dfl210DHCPRelayRejected"), ("DFL210-MIB", "dfl210DHCPRelayRuleName"), ("DFL210-MIB", "dfl210DHCPRelayRuleHits"), ("DFL210-MIB", "dfl210DHCPRelayRuleCurClients"), ("DFL210-MIB", "dfl210DHCPRelayRuleRejCliPkts"), ("DFL210-MIB", "dfl210DHCPRelayRuleRejSrvPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210DHCPRelayObjectGroup = dfl210DHCPRelayObjectGroup.setStatus('current')
dfl210AlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 13)).setObjects(("DFL210-MIB", "dfl210AlgSessions"), ("DFL210-MIB", "dfl210AlgConnections"), ("DFL210-MIB", "dfl210AlgTCPStreams"), ("DFL210-MIB", "dfl210HttpAlgName"), ("DFL210-MIB", "dfl210HttpAlgTotalRequested"), ("DFL210-MIB", "dfl210HttpAlgTotalAllowed"), ("DFL210-MIB", "dfl210HttpAlgTotalBlocked"), ("DFL210-MIB", "dfl210HttpAlgCntFltName"), ("DFL210-MIB", "dfl210HttpAlgCntFltRequests"), ("DFL210-MIB", "dfl210HttpAlgCntFltAllowed"), ("DFL210-MIB", "dfl210HttpAlgCntFltBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210AlgGroup = dfl210AlgGroup.setStatus('current')
dfl210HAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 14)).setObjects(("DFL210-MIB", "dfl210HASyncSendQueueLength"), ("DFL210-MIB", "dfl210HASyncSendQueueUsagePkt"), ("DFL210-MIB", "dfl210HASyncSendQueueUsageOct"), ("DFL210-MIB", "dfl210HASyncSentPackets"), ("DFL210-MIB", "dfl210HASyncSendResentPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210HAGroup = dfl210HAGroup.setStatus('current')
dfl210IfVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 15)).setObjects(("DFL210-MIB", "dfl210IfVlanUntaggedInPkts"), ("DFL210-MIB", "dfl210IfVlanUntaggedOutPkts"), ("DFL210-MIB", "dfl210IfVlanUntaggedTotPkts"), ("DFL210-MIB", "dfl210IfVlanUntaggedInOctets"), ("DFL210-MIB", "dfl210IfVlanUntaggedOutOctets"), ("DFL210-MIB", "dfl210IfVlanUntaggedTotOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210IfVlanGroup = dfl210IfVlanGroup.setStatus('current')
dfl210SmtpAlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 16)).setObjects(("DFL210-MIB", "dfl210SmtpAlgName"), ("DFL210-MIB", "dfl210SmtpAlgTotCheckedSes"), ("DFL210-MIB", "dfl210SmtpAlgTotSpamSes"), ("DFL210-MIB", "dfl210SmtpAlgTotDroppedSes"), ("DFL210-MIB", "dfl210SmtpAlgDnsBlName"), ("DFL210-MIB", "dfl210SmtpAlgDnsBlChecked"), ("DFL210-MIB", "dfl210SmtpAlgDnsBlMatched"), ("DFL210-MIB", "dfl210SmtpAlgDnsBlFailChecks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210SmtpAlgGroup = dfl210SmtpAlgGroup.setStatus('current')
dfl210SysTCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 3, 1, 17)).setObjects(("DFL210-MIB", "dfl210SysTCPRecvSmall"), ("DFL210-MIB", "dfl210SysTCPRecvLarge"), ("DFL210-MIB", "dfl210SysTCPSendSmall"), ("DFL210-MIB", "dfl210SysTCPSendLarge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210SysTCPGroup = dfl210SysTCPGroup.setStatus('current')
dfl210StatsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 20, 1, 1, 2, 2, 1, 1)).setObjects(("DFL210-MIB", "dfl210SystemObjectGroup"), ("DFL210-MIB", "dfl210IPsecObjectGroup"), ("DFL210-MIB", "dfl210StateCountersGroup"), ("DFL210-MIB", "dfl210IPPoolGroup"), ("DFL210-MIB", "dfl210DHCPServerGroup"), ("DFL210-MIB", "dfl210RuleUseGroup"), ("DFL210-MIB", "dfl210UserAuthGroup"), ("DFL210-MIB", "dfl210IfStatsGroup"), ("DFL210-MIB", "dfl210LinkMonitorGroup"), ("DFL210-MIB", "dfl210PipesObjectGroup"), ("DFL210-MIB", "dfl210DHCPRelayObjectGroup"), ("DFL210-MIB", "dfl210AlgGroup"), ("DFL210-MIB", "dfl210HAGroup"), ("DFL210-MIB", "dfl210IfVlanGroup"), ("DFL210-MIB", "dfl210SmtpAlgGroup"), ("DFL210-MIB", "dfl210SysTCPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl210StatsCompliance = dfl210StatsCompliance.setStatus('current')
mibBuilder.exportSymbols("DFL210-MIB", dfl210PipeEntry=dfl210PipeEntry, dfl210HttpAlgCntFltBlocked=dfl210HttpAlgCntFltBlocked, dfl210DHCPRuleUsagePercent=dfl210DHCPRuleUsagePercent, dfl210IfPktsInCnt=dfl210IfPktsInCnt, dfl210IfTxAvgUse=dfl210IfTxAvgUse, dfl210IPsecQuickModeActive=dfl210IPsecQuickModeActive, dfl210UserAuthRuleUseTable=dfl210UserAuthRuleUseTable, dfl210IfVlanUntaggedInPkts=dfl210IfVlanUntaggedInPkts, dfl210LinkMonHostPacketsLost=dfl210LinkMonHostPacketsLost, dfl210DHCPRelay=dfl210DHCPRelay, dfl210IPPoolIndex=dfl210IPPoolIndex, dfl210RuleUseGroup=dfl210RuleUseGroup, dfl210IfBitsOutCnt=dfl210IfBitsOutCnt, dfl210UserAuthXAUTHUsers=dfl210UserAuthXAUTHUsers, dfl210IfTxRingTable=dfl210IfTxRingTable, dfl210Rules=dfl210Rules, dfl210VPN=dfl210VPN, dfl210LinkMonHostIndex=dfl210LinkMonHostIndex, dfl210HWSensorValue=dfl210HWSensorValue, dfl210SmtpAlgDnsBlTable=dfl210SmtpAlgDnsBlTable, dfl210SmtpAlgDnsBlFailChecks=dfl210SmtpAlgDnsBlFailChecks, dfl210OSStats=dfl210OSStats, dfl210IPsecTotalRekeys=dfl210IPsecTotalRekeys, dfl210AlgGroup=dfl210AlgGroup, dfl210RuleUseEntry=dfl210RuleUseEntry, dfl210SysPscUdp=dfl210SysPscUdp, dfl210IfVlanUntaggedTotPkts=dfl210IfVlanUntaggedTotPkts, dfl210SysTCPSendSmall=dfl210SysTCPSendSmall, dfl210IfVlanStatsEntry=dfl210IfVlanStatsEntry, dfl210IfVlanUntaggedOutOctets=dfl210IfVlanUntaggedOutOctets, dfl210IPsecInOctetsUncomp=dfl210IPsecInOctetsUncomp, dfl210IfTxDespools=dfl210IfTxDespools, dfl210IfHCBitsInCnt=dfl210IfHCBitsInCnt, dfl210HWSensorName=dfl210HWSensorName, dfl210IPPoolEntry=dfl210IPPoolEntry, dfl210IPsecQuickModeFailed=dfl210IPsecQuickModeFailed, dfl210IfVlanIndex=dfl210IfVlanIndex, dfl210SysConnOPS=dfl210SysConnOPS, dfl210HWSensorEntry=dfl210HWSensorEntry, dfl210RuleIndex=dfl210RuleIndex, dfl210PipeIndex=dfl210PipeIndex, dfl210IPsecForwardedOctetsComp=dfl210IPsecForwardedOctetsComp, dfl210PipePrecDropedPackets=dfl210PipePrecDropedPackets, dfl210SysPscTcpFin=dfl210SysPscTcpFin, dfl210IfBitsTotCnt=dfl210IfBitsTotCnt, dfl210PipeMaxPrec=dfl210PipeMaxPrec, dfl210StatsRegGroups=dfl210StatsRegGroups, dfl210StateCountersGroup=dfl210StateCountersGroup, dfl210UserAuthGroup=dfl210UserAuthGroup, dfl210PipesObjectGroup=dfl210PipesObjectGroup, dfl210LinkMonGrp=dfl210LinkMonGrp, dfl210IfVlanStatsTable=dfl210IfVlanStatsTable, dfl210UserAuthRuleUse=dfl210UserAuthRuleUse, dfl210IfPktsOutCnt=dfl210IfPktsOutCnt, dfl210SmtpAlgDnsBlEntry=dfl210SmtpAlgDnsBlEntry, dfl210StatsCompliance=dfl210StatsCompliance, dfl210HWSensorUnit=dfl210HWSensorUnit, dfl210HttpAlgTotalBlocked=dfl210HttpAlgTotalBlocked, dfl210PipeCurrentBps=dfl210PipeCurrentBps, dfl210PipePrecTable=dfl210PipePrecTable, dfl210IfHCBitsTotCnt=dfl210IfHCBitsTotCnt, dfl210LinkMonHostShortTermLoss=dfl210LinkMonHostShortTermLoss, dfl210DHCPRelayRuleRejSrvPkts=dfl210DHCPRelayRuleRejSrvPkts, dfl210HttpAlgTable=dfl210HttpAlgTable, dfl210UserAuthEAPUsers=dfl210UserAuthEAPUsers, dfl210DHCPTotalLeases=dfl210DHCPTotalLeases, dfl210IPsecQuickModeDone=dfl210IPsecQuickModeDone, dfl210IfTxRingIndex=dfl210IfTxRingIndex, dfl210IfRxAvgUse=dfl210IfRxAvgUse, dfl210IPPoolClientFails=dfl210IPPoolClientFails, dfl210DHCPServer=dfl210DHCPServer, dfl210SmtpAlgDnsBlIndex=dfl210SmtpAlgDnsBlIndex, dfl210DHCPRelayRuleRejCliPkts=dfl210DHCPRelayRuleRejCliPkts, dfl210DHCPRelayRuleTable=dfl210DHCPRelayRuleTable, dfl210IfVlanGroup=dfl210IfVlanGroup, dfl210IPsecOutPackets=dfl210IPsecOutPackets, dfl210DHCPRuleName=dfl210DHCPRuleName, dfl210SmtpAlgTable=dfl210SmtpAlgTable, dfl210SysMemUsage=dfl210SysMemUsage, dfl210RxRingFlooded=dfl210RxRingFlooded, dfl210PipeNumUsers=dfl210PipeNumUsers, dfl210IPsecForwardedPackets=dfl210IPsecForwardedPackets, dfl210RxTingFlooded=dfl210RxTingFlooded, dfl210HttpAlgTotalAllowed=dfl210HttpAlgTotalAllowed, dfl210DHCPServerGroup=dfl210DHCPServerGroup, dfl210SysTCPGroup=dfl210SysTCPGroup, dfl210SysBuffUse=dfl210SysBuffUse, dfl210HASyncSendQueueUsageOct=dfl210HASyncSendQueueUsageOct, dfl210PipeDefPrec=dfl210PipeDefPrec, dfl210DHCPRuleIndex=dfl210DHCPRuleIndex, dfl210DHCPRelayCurTrans=dfl210DHCPRelayCurTrans, dfl210UserAuthHTTPSUsers=dfl210UserAuthHTTPSUsers, dfl210SysConns=dfl210SysConns, dfl210IPsecTotalTransforms=dfl210IPsecTotalTransforms, dfl210IPPoolMisses=dfl210IPPoolMisses, dfl210PipeCurrentPps=dfl210PipeCurrentPps, dfl210IfVlanUntaggedInOctets=dfl210IfVlanUntaggedInOctets, dfl210SmtpAlgEntry=dfl210SmtpAlgEntry, dfl210UserAuthRuleUseEntry=dfl210UserAuthRuleUseEntry, dfl210IfStatsEntry=dfl210IfStatsEntry, dfl210IPPoolPrepare=dfl210IPPoolPrepare, dfl210SysPscTcpSyn=dfl210SysPscTcpSyn, dfl210PipeMinPrec=dfl210PipeMinPrec, dfl210SysForwardedBits=dfl210SysForwardedBits, dfl210IfHCPktsTotCnt=dfl210IfHCPktsTotCnt, dfl210DHCPRelayRuleEntry=dfl210DHCPRelayRuleEntry, dfl210UserAuthHTTPUsers=dfl210UserAuthHTTPUsers, dfl210IPsecPhaseOneActive=dfl210IPsecPhaseOneActive, dfl210PipeDelayedPackets=dfl210PipeDelayedPackets, dfl210PipeTable=dfl210PipeTable, dfl210IPPoolName=dfl210IPPoolName, dfl210IPsecOutOfTransforms=dfl210IPsecOutOfTransforms, dfl210LinkMonGrpTable=dfl210LinkMonGrpTable, dfl210IPsecObjectGroup=dfl210IPsecObjectGroup, ipsFirewall=ipsFirewall, dfl210=dfl210, dfl210SysPscOther=dfl210SysPscOther, dfl210IPsecPhaseOneRekeyed=dfl210IPsecPhaseOneRekeyed, dfl210IPsecForwardedOctetsUcomp=dfl210IPsecForwardedOctetsUcomp, dfl210MibObjectGroups=dfl210MibObjectGroups, dfl210DHCPRelayObjectGroup=dfl210DHCPRelayObjectGroup, dfl210RuleUse=dfl210RuleUse, dfl210IPsecInOctetsComp=dfl210IPsecInOctetsComp, dfl210IPsec=dfl210IPsec, dfl210SmtpAlgTotSpamSes=dfl210SmtpAlgTotSpamSes, dfl210IfHCBitsOutCnt=dfl210IfHCBitsOutCnt, dfl210SysForwardedPackets=dfl210SysForwardedPackets, dfl210LinkMonHostTable=dfl210LinkMonHostTable, dfl210PipePrecIndex=dfl210PipePrecIndex, dfl210HttpAlgCntFltIndex=dfl210HttpAlgCntFltIndex, dfl210DHCPRelayCurClients=dfl210DHCPRelayCurClients, dfl210HASyncSentPackets=dfl210HASyncSentPackets, dfl210LinkMonGrpEntry=dfl210LinkMonGrpEntry, dfl210SysCpuLoad=dfl210SysCpuLoad, dfl210SysTimerUsage=dfl210SysTimerUsage, dfl210RuleName=dfl210RuleName, dfl210IPsecOutOctetsUncomp=dfl210IPsecOutOctetsUncomp, dfl210IfVlanUntaggedOutPkts=dfl210IfVlanUntaggedOutPkts, dfl210IfRxRingSaturation=dfl210IfRxRingSaturation, dfl210IPsecInfoFailed=dfl210IPsecInfoFailed, dfl210PipePrecEntry=dfl210PipePrecEntry, dfl210IPsecPhaseOneFailed=dfl210IPsecPhaseOneFailed, dfl210HAGroup=dfl210HAGroup, dfl210HttpAlg=dfl210HttpAlg, dfl210HttpAlgTotalRequested=dfl210HttpAlgTotalRequested, dfl210IfFragsIn=dfl210IfFragsIn, dfl210PipePrecDynLimBps=dfl210PipePrecDynLimBps, dfl210HASyncSendQueueLength=dfl210HASyncSendQueueLength, dfl210SysTCPRecvLarge=dfl210SysTCPRecvLarge, dfl210UserAuth=dfl210UserAuth, dfl210IfStatsGroup=dfl210IfStatsGroup, dfl210SystemObjectGroup=dfl210SystemObjectGroup, dlink=dlink, dfl210PipePrecTotalPps=dfl210PipePrecTotalPps, dfl210SmtpAlgName=dfl210SmtpAlgName, dfl210SmtpAlgTotDroppedSes=dfl210SmtpAlgTotDroppedSes, dfl210SysPscIcmp=dfl210SysPscIcmp, dfl210UserAuthRuleName=dfl210UserAuthRuleName, dfl210IfStatsTable=dfl210IfStatsTable, dfl210PipeDropedPackets=dfl210PipeDropedPackets, dfl210DHCPTotalRejected=dfl210DHCPTotalRejected, dfl210LinkMonGrpName=dfl210LinkMonGrpName, dfl210IPsecInPackets=dfl210IPsecInPackets, dfl210IPPoolTable=dfl210IPPoolTable, dfl210IfVlanUntaggedTotOctets=dfl210IfVlanUntaggedTotOctets, dfl210UserAuthRuleIndex=dfl210UserAuthRuleIndex, dfl210SmtpAlgTotCheckedSes=dfl210SmtpAlgTotCheckedSes, dfl210IPPoolsNumber=dfl210IPPoolsNumber, dfl210IfFragReassFail=dfl210IfFragReassFail, dfl210SysConnCPS=dfl210SysConnCPS, dfl210DHCPActiveClientsPercent=dfl210DHCPActiveClientsPercent, dfl210PipePrecBps=dfl210PipePrecBps, dfl210AlgTCPStreams=dfl210AlgTCPStreams, dfl210reg=dfl210reg, dfl210Pipes=dfl210Pipes, dfl210SysPscTcpOpen=dfl210SysPscTcpOpen, dfl210LinkMonitorGroup=dfl210LinkMonitorGroup, dfl210SmtpAlgDnsBlChecked=dfl210SmtpAlgDnsBlChecked, dfl210IPPoolUsed=dfl210IPPoolUsed, dfl210HttpAlgCntFltAllowed=dfl210HttpAlgCntFltAllowed, dfl210HWSensorTable=dfl210HWSensorTable, dfl210HWSensorIndex=dfl210HWSensorIndex, dfl210IPsecOutOctetsComp=dfl210IPsecOutOctetsComp, dfl210DHCPRejectedRequests=dfl210DHCPRejectedRequests, dfl210StatsConformance=dfl210StatsConformance, dfl210SmtpAlg=dfl210SmtpAlg, dfl210System=dfl210System, dfl210IfBitsInCnt=dfl210IfBitsInCnt, dfl210IPsecInfoDone=dfl210IPsecInfoDone, dfl210LinkMonHostId=dfl210LinkMonHostId, dfl210IfRxRingTable=dfl210IfRxRingTable, dfl210OS=dfl210OS, dfl210MibModules=dfl210MibModules, dfl210IfTxRingEntry=dfl210IfTxRingEntry, dfl210IfStatsIndex=dfl210IfStatsIndex, dfl210DHCPActiveClients=dfl210DHCPActiveClients, dfl210IfRxDespools=dfl210IfRxDespools, dfl210PipePrecDynUsrLimBps=dfl210PipePrecDynUsrLimBps, dfl210HttpAlgEntry=dfl210HttpAlgEntry, dfl210SysTCPUsage=dfl210SysTCPUsage, dfl210PipePrec=dfl210PipePrec, dfl210DHCPRelayRuleHits=dfl210DHCPRelayRuleHits, dfl210IfPktsTotCnt=dfl210IfPktsTotCnt, PYSNMP_MODULE_ID=dfl210_MIB, dfl210IfHCPktsOutCnt=dfl210IfHCPktsOutCnt, dfl210SmtpAlgDnsBlMatched=dfl210SmtpAlgDnsBlMatched, dfl210LinkMonGrpHostsUp=dfl210LinkMonGrpHostsUp, dfl210IfFragReassOk=dfl210IfFragReassOk, dfl210DHCPRelayRuleCurClients=dfl210DHCPRelayRuleCurClients, dfl210IPsecActiveTransforms=dfl210IPsecActiveTransforms, dfl210IfRxRingEntry=dfl210IfRxRingEntry, dfl210IfRxRingIndex=dfl210IfRxRingIndex, dfl210LinkMonitor=dfl210LinkMonitor, dfl210PipeName=dfl210PipeName, dfl210SmtpAlgDnsBlName=dfl210SmtpAlgDnsBlName, dfl210IPPools=dfl210IPPools, dfl210SmtpAlgIndex=dfl210SmtpAlgIndex, dfl210IPPoolGroup=dfl210IPPoolGroup, dfl210SysTCPRecvSmall=dfl210SysTCPRecvSmall, dfl210DHCPRelayRuleName=dfl210DHCPRelayRuleName, dfl210IPsecGlobal=dfl210IPsecGlobal, dfl210SysPerStateCounters=dfl210SysPerStateCounters, dfl210SysTCPSendLarge=dfl210SysTCPSendLarge, dfl210PipeNumPrec=dfl210PipeNumPrec, dfl210HttpAlgCntFltName=dfl210HttpAlgCntFltName, dfl210LinkMonGrpIndex=dfl210LinkMonGrpIndex, dfl210_MIB=dfl210_MIB, dfl210AlgSessions=dfl210AlgSessions, dfl210ALG=dfl210ALG, dfl210IPsecPhaseOneAggrModeDone=dfl210IPsecPhaseOneAggrModeDone, dfl210HttpAlgCntFltRequests=dfl210HttpAlgCntFltRequests, dfl210DHCPRuleTable=dfl210DHCPRuleTable, dfl210SmtpAlgGroup=dfl210SmtpAlgGroup, dfl210AlgConnections=dfl210AlgConnections, dfl210DHCPRuleUsage=dfl210DHCPRuleUsage, dfl210HttpAlgCntFltEntry=dfl210HttpAlgCntFltEntry, dfl210LinkMonHostEntry=dfl210LinkMonHostEntry, dfl210HASyncSendQueueUsagePkt=dfl210HASyncSendQueueUsagePkt, dfl210IPPoolFree=dfl210IPPoolFree, dfl210HttpAlgCntFltTable=dfl210HttpAlgCntFltTable, dfl210HttpAlgIndex=dfl210HttpAlgIndex, dfl210DHCPRuleEntry=dfl210DHCPRuleEntry, dfl210IPsecPhaseOneDone=dfl210IPsecPhaseOneDone, dfl210MibConfs=dfl210MibConfs, dfl210UserAuthPPPUsers=dfl210UserAuthPPPUsers, dfl210DHCPRelayRuleIndex=dfl210DHCPRelayRuleIndex, dfl210PipeUsers=dfl210PipeUsers, dfl210PipePrecReservedBps=dfl210PipePrecReservedBps, dfl210HA=dfl210HA, dfl210IfTxRingSaturation=dfl210IfTxRingSaturation, dfl210RuleUseTable=dfl210RuleUseTable, netdefendMgmt=netdefendMgmt, dfl210SysHCForwardedBits=dfl210SysHCForwardedBits, dfl210IfHCPktsInCnt=dfl210IfHCPktsInCnt)
mibBuilder.exportSymbols("DFL210-MIB", dfl210HASyncSendResentPackets=dfl210HASyncSendResentPackets, dfl210DHCPRelayRejected=dfl210DHCPRelayRejected, dfl210IfName=dfl210IfName, dfl210IfRxRingFifoErrors=dfl210IfRxRingFifoErrors, dfl210HttpAlgName=dfl210HttpAlgName, dfl210PipePrecDelayedPackets=dfl210PipePrecDelayedPackets)
