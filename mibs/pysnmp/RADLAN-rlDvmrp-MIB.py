#
# PySNMP MIB module RADLAN-rlDvmrp-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-rlDvmrp-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:42:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
dvmrpRouteNextHopSource, dvmrpRouteNextHopSourceMask, dvmrpRouteNextHopEntry, dvmrpRouteNextHopIfIndex = mibBuilder.importSymbols("DVMRP-STD-MIB", "dvmrpRouteNextHopSource", "dvmrpRouteNextHopSourceMask", "dvmrpRouteNextHopEntry", "dvmrpRouteNextHopIfIndex")
rndErrorSeverity, rndErrorDesc = mibBuilder.importSymbols("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity", "rndErrorDesc")
rndNotifications, rnd = mibBuilder.importSymbols("RADLAN-MIB", "rndNotifications", "rnd")
rlIPmulticast, = mibBuilder.importSymbols("RADLAN-rlIPMulticast-MIB", "rlIPmulticast")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, TimeTicks, Unsigned32, Gauge32, MibIdentifier, NotificationType, IpAddress, Counter64, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "TimeTicks", "Unsigned32", "Gauge32", "MibIdentifier", "NotificationType", "IpAddress", "Counter64", "ModuleIdentity", "Integer32")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
rlDvmrp = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 46, 4))
rlDvmrp.setRevisions(('2004-04-19 00:00',))
if mibBuilder.loadTexts: rlDvmrp.setLastUpdated('200404190000Z')
if mibBuilder.loadTexts: rlDvmrp.setOrganization('Radlan Computer Communications Ltd.')
rlDvmrpMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDvmrpMibVersion.setStatus('current')
rlDvmrpEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDvmrpEnable.setStatus('current')
rlDvmrpProbeInterval = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 4), Integer32().clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDvmrpProbeInterval.setStatus('current')
rlDvmrpNeighborTimeOutInterval = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 400)).clone(35)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDvmrpNeighborTimeOutInterval.setStatus('current')
rlDvmrpMinFlashUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 6), Integer32().clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDvmrpMinFlashUpdateInterval.setStatus('current')
rlDvmrpRouteReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 7), Integer32().clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDvmrpRouteReportInterval.setStatus('current')
rlDvmrpRouteExpirationTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 8), Integer32().clone(140)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDvmrpRouteExpirationTime.setStatus('current')
rlDvmrpPruneLifetime = MibScalar((1, 3, 6, 1, 4, 1, 89, 46, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 7200)).clone(200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDvmrpPruneLifetime.setStatus('current')
rlDvmrpRouteDesignatedForwarderExtTable = MibTable((1, 3, 6, 1, 4, 1, 89, 46, 4, 10), )
if mibBuilder.loadTexts: rlDvmrpRouteDesignatedForwarderExtTable.setStatus('current')
rlDvmrpRouteDesignatedForwarderExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 46, 4, 10, 1), )
dvmrpRouteNextHopEntry.registerAugmentions(("RADLAN-rlDvmrp-MIB", "rlDvmrpRouteDesignatedForwarderExtEntry"))
rlDvmrpRouteDesignatedForwarderExtEntry.setIndexNames(*dvmrpRouteNextHopEntry.getIndexNames())
if mibBuilder.loadTexts: rlDvmrpRouteDesignatedForwarderExtEntry.setStatus('current')
rlDvmrpRouteDesignatedForwarder = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 46, 4, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDvmrpRouteDesignatedForwarder.setStatus('current')
rlDvmrpTableOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 155)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlDvmrpTableOverflow.setStatus('current')
mibBuilder.exportSymbols("RADLAN-rlDvmrp-MIB", rlDvmrp=rlDvmrp, rlDvmrpRouteDesignatedForwarderExtTable=rlDvmrpRouteDesignatedForwarderExtTable, rlDvmrpRouteDesignatedForwarder=rlDvmrpRouteDesignatedForwarder, PYSNMP_MODULE_ID=rlDvmrp, rlDvmrpTableOverflow=rlDvmrpTableOverflow, rlDvmrpRouteDesignatedForwarderExtEntry=rlDvmrpRouteDesignatedForwarderExtEntry, rlDvmrpMibVersion=rlDvmrpMibVersion, rlDvmrpProbeInterval=rlDvmrpProbeInterval, rlDvmrpMinFlashUpdateInterval=rlDvmrpMinFlashUpdateInterval, rlDvmrpRouteReportInterval=rlDvmrpRouteReportInterval, rlDvmrpPruneLifetime=rlDvmrpPruneLifetime, rlDvmrpNeighborTimeOutInterval=rlDvmrpNeighborTimeOutInterval, rlDvmrpRouteExpirationTime=rlDvmrpRouteExpirationTime, rlDvmrpEnable=rlDvmrpEnable)
