#
# PySNMP MIB module ZHONE-DISMAN-PING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-DISMAN-PING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:41:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, TimeTicks, iso, Unsigned32, NotificationType, Counter64, Gauge32, Counter32, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "TimeTicks", "iso", "Unsigned32", "NotificationType", "Counter64", "Gauge32", "Counter32", "IpAddress", "Bits")
DateAndTime, DisplayString, TruthValue, RowStatus, TextualConvention, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TruthValue", "RowStatus", "TextualConvention", "StorageType")
zhoneIp, = mibBuilder.importSymbols("Zhone", "zhoneIp")
zhonePingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19))
zhonePingMIB.setRevisions(('2003-01-27 00:00',))
if mibBuilder.loadTexts: zhonePingMIB.setLastUpdated('200301270000Z')
if mibBuilder.loadTexts: zhonePingMIB.setOrganization('IETF Distributed Management Working Group')
class OperationResponseStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("responseReceived", 1), ("unknown", 2), ("internalError", 3), ("requestTimedOut", 4), ("unknownDestinationAddress", 5), ("noRouteToTarget", 6), ("interfaceInactiveToTarget", 7), ("arpFailure", 8), ("maxConcurrentLimitReached", 9), ("unableToResolveDnsName", 10), ("invalidHostAddress", 11))

zhonePingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 0))
zhonePingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1))
zhonePingConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 2))
zhonePingImplementationTypeDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 3))
zhonePingIcmpEcho = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 3, 1))
if mibBuilder.loadTexts: zhonePingIcmpEcho.setStatus('current')
zhonePingUdpEcho = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 3, 2))
if mibBuilder.loadTexts: zhonePingUdpEcho.setStatus('current')
zhonePingSnmpQuery = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 3, 3))
if mibBuilder.loadTexts: zhonePingSnmpQuery.setStatus('current')
zhonePingTcpConnectionAttempt = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 3, 4))
if mibBuilder.loadTexts: zhonePingTcpConnectionAttempt.setStatus('current')
zhonePingMaxConcurrentRequests = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 1), Unsigned32().clone(10)).setUnits('requests').setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhonePingMaxConcurrentRequests.setStatus('current')
zhonePingCtlIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingCtlIndexNext.setStatus('current')
zhonePingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3), )
if mibBuilder.loadTexts: zhonePingCtlTable.setStatus('current')
zhonePingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1), ).setIndexNames((0, "ZHONE-DISMAN-PING-MIB", "zhonePingCtlIndex"))
if mibBuilder.loadTexts: zhonePingCtlEntry.setStatus('current')
zhonePingCtlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingCtlIndex.setStatus('current')
zhonePingCtlTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 2), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlTargetAddressType.setStatus('current')
zhonePingCtlTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 3), InetAddress().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlTargetAddress.setStatus('current')
zhonePingCtlDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65507))).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlDataSize.setStatus('current')
zhonePingCtlTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlTimeOut.setStatus('current')
zhonePingCtlProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setUnits('probes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlProbeCount.setStatus('current')
zhonePingCtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlAdminStatus.setStatus('current')
zhonePingCtlDataFill = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024)).clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlDataFill.setStatus('current')
zhonePingCtlFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlFrequency.setStatus('current')
zhonePingCtlMaxRows = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 10), Unsigned32().clone(50)).setUnits('rows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlMaxRows.setStatus('current')
zhonePingCtlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 11), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlStorageType.setStatus('current')
zhonePingCtlTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 12), Bits().clone(namedValues=NamedValues(("probeFailure", 0), ("testFailure", 1), ("testCompletion", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlTrapGeneration.setStatus('current')
zhonePingCtlTrapProbeFailureFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlTrapProbeFailureFilter.setStatus('current')
zhonePingCtlTrapTestFailureFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlTrapTestFailureFilter.setStatus('current')
zhonePingCtlType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 15), ObjectIdentifier().clone((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 3, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlType.setStatus('current')
zhonePingCtlDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 16), SnmpAdminString().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlDescr.setStatus('current')
zhonePingCtlSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 17), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlSourceAddressType.setStatus('current')
zhonePingCtlSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 18), InetAddress().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlSourceAddress.setStatus('current')
zhonePingCtlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 19), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlIfIndex.setStatus('current')
zhonePingCtlByPassRouteTable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlByPassRouteTable.setStatus('current')
zhonePingCtlDSField = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlDSField.setStatus('current')
zhonePingCtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 3, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePingCtlRowStatus.setStatus('current')
zhonePingResultsTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4), )
if mibBuilder.loadTexts: zhonePingResultsTable.setStatus('current')
zhonePingResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1), ).setIndexNames((0, "ZHONE-DISMAN-PING-MIB", "zhonePingCtlIndex"))
if mibBuilder.loadTexts: zhonePingResultsEntry.setStatus('current')
zhonePingResultsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsOperStatus.setStatus('current')
zhonePingResultsIpTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 2), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsIpTargetAddressType.setStatus('current')
zhonePingResultsIpTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 3), InetAddress().clone(hexValue="0")).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsIpTargetAddress.setStatus('current')
zhonePingResultsMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 4), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsMinRtt.setStatus('current')
zhonePingResultsMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 5), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsMaxRtt.setStatus('current')
zhonePingResultsAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 6), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsAverageRtt.setStatus('current')
zhonePingResultsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 7), Unsigned32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsProbeResponses.setStatus('current')
zhonePingResultsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 8), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsSentProbes.setStatus('current')
zhonePingResultsRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsRttSumOfSquares.setStatus('current')
zhonePingResultsLastGoodProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 1, 4, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePingResultsLastGoodProbe.setStatus('current')
zhonePingTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 0, 1)).setObjects(("ZHONE-DISMAN-PING-MIB", "zhonePingResultsIpTargetAddress"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsMinRtt"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsMaxRtt"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsAverageRtt"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsProbeResponses"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsSentProbes"))
if mibBuilder.loadTexts: zhonePingTestCompleted.setStatus('current')
zhonePingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 2, 2))
zhonePingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 2, 2, 1)).setObjects(("ZHONE-DISMAN-PING-MIB", "zhonePingMaxConcurrentRequests"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlTargetAddressType"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlTargetAddress"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlDataSize"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlTimeOut"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlProbeCount"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlAdminStatus"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlDataFill"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlFrequency"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlMaxRows"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlStorageType"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlTrapGeneration"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlTrapProbeFailureFilter"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlTrapTestFailureFilter"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlType"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlDescr"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlByPassRouteTable"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlSourceAddressType"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlSourceAddress"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlIfIndex"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlDSField"), ("ZHONE-DISMAN-PING-MIB", "zhonePingCtlRowStatus"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsOperStatus"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsIpTargetAddressType"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsIpTargetAddress"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsMinRtt"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsMaxRtt"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsAverageRtt"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsProbeResponses"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsSentProbes"), ("ZHONE-DISMAN-PING-MIB", "zhonePingResultsRttSumOfSquares"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhonePingGroup = zhonePingGroup.setStatus('current')
zhonePingTimeStampGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 2, 2, 2)).setObjects(("ZHONE-DISMAN-PING-MIB", "zhonePingResultsLastGoodProbe"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhonePingTimeStampGroup = zhonePingTimeStampGroup.setStatus('current')
zhonePingNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 19, 2, 2, 3)).setObjects(("ZHONE-DISMAN-PING-MIB", "zhonePingTestCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhonePingNotificationsGroup = zhonePingNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("ZHONE-DISMAN-PING-MIB", zhonePingCtlTimeOut=zhonePingCtlTimeOut, zhonePingConformance=zhonePingConformance, zhonePingGroup=zhonePingGroup, zhonePingTimeStampGroup=zhonePingTimeStampGroup, zhonePingCtlDescr=zhonePingCtlDescr, zhonePingObjects=zhonePingObjects, zhonePingImplementationTypeDomains=zhonePingImplementationTypeDomains, zhonePingCtlFrequency=zhonePingCtlFrequency, zhonePingTcpConnectionAttempt=zhonePingTcpConnectionAttempt, zhonePingCtlDataFill=zhonePingCtlDataFill, zhonePingCtlSourceAddressType=zhonePingCtlSourceAddressType, zhonePingCtlAdminStatus=zhonePingCtlAdminStatus, PYSNMP_MODULE_ID=zhonePingMIB, zhonePingResultsLastGoodProbe=zhonePingResultsLastGoodProbe, zhonePingCtlTargetAddress=zhonePingCtlTargetAddress, zhonePingCtlTrapGeneration=zhonePingCtlTrapGeneration, zhonePingResultsProbeResponses=zhonePingResultsProbeResponses, zhonePingCtlSourceAddress=zhonePingCtlSourceAddress, zhonePingResultsIpTargetAddress=zhonePingResultsIpTargetAddress, zhonePingTestCompleted=zhonePingTestCompleted, zhonePingUdpEcho=zhonePingUdpEcho, zhonePingCtlMaxRows=zhonePingCtlMaxRows, zhonePingCtlIfIndex=zhonePingCtlIfIndex, zhonePingResultsMinRtt=zhonePingResultsMinRtt, zhonePingGroups=zhonePingGroups, zhonePingCtlTable=zhonePingCtlTable, zhonePingCtlIndex=zhonePingCtlIndex, zhonePingMaxConcurrentRequests=zhonePingMaxConcurrentRequests, OperationResponseStatus=OperationResponseStatus, zhonePingCtlTrapTestFailureFilter=zhonePingCtlTrapTestFailureFilter, zhonePingCtlStorageType=zhonePingCtlStorageType, zhonePingResultsOperStatus=zhonePingResultsOperStatus, zhonePingNotifications=zhonePingNotifications, zhonePingResultsTable=zhonePingResultsTable, zhonePingResultsAverageRtt=zhonePingResultsAverageRtt, zhonePingSnmpQuery=zhonePingSnmpQuery, zhonePingResultsIpTargetAddressType=zhonePingResultsIpTargetAddressType, zhonePingCtlByPassRouteTable=zhonePingCtlByPassRouteTable, zhonePingCtlEntry=zhonePingCtlEntry, zhonePingCtlTrapProbeFailureFilter=zhonePingCtlTrapProbeFailureFilter, zhonePingCtlIndexNext=zhonePingCtlIndexNext, zhonePingResultsEntry=zhonePingResultsEntry, zhonePingResultsSentProbes=zhonePingResultsSentProbes, zhonePingMIB=zhonePingMIB, zhonePingCtlTargetAddressType=zhonePingCtlTargetAddressType, zhonePingResultsMaxRtt=zhonePingResultsMaxRtt, zhonePingCtlType=zhonePingCtlType, zhonePingIcmpEcho=zhonePingIcmpEcho, zhonePingNotificationsGroup=zhonePingNotificationsGroup, zhonePingCtlProbeCount=zhonePingCtlProbeCount, zhonePingCtlRowStatus=zhonePingCtlRowStatus, zhonePingResultsRttSumOfSquares=zhonePingResultsRttSumOfSquares, zhonePingCtlDataSize=zhonePingCtlDataSize, zhonePingCtlDSField=zhonePingCtlDSField)
