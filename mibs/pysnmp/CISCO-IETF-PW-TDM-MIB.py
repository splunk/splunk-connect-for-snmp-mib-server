#
# PySNMP MIB module CISCO-IETF-PW-TDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-PW-TDM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:43:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
cpwVcIndex, = mibBuilder.importSymbols("CISCO-IETF-PW-MIB", "cpwVcIndex")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
PerfIntervalCount, PerfCurrentCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfIntervalCount", "PerfCurrentCount")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, iso, MibIdentifier, Integer32, Counter32, TimeTicks, ModuleIdentity, Gauge32, ObjectIdentity, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "MibIdentifier", "Integer32", "Counter32", "TimeTicks", "ModuleIdentity", "Gauge32", "ObjectIdentity", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32")
TimeStamp, RowStatus, TextualConvention, StorageType, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "TextualConvention", "StorageType", "TruthValue", "DisplayString")
cpwCTDMMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 131))
cpwCTDMMIB.setRevisions(('2006-07-21 00:00', '2006-03-01 00:00', '2005-10-23 00:00', '2005-07-12 00:00', '2004-04-20 00:00',))
if mibBuilder.loadTexts: cpwCTDMMIB.setLastUpdated('200607210000Z')
if mibBuilder.loadTexts: cpwCTDMMIB.setOrganization('Cisco Systems, Inc.')
class CpwTDMCfgIndex(TextualConvention, Unsigned32):
    status = 'current'

cpwCTDMNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 131, 0))
cpwCTDMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 131, 1))
cpwCTDMConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 131, 2))
cpwCTDMTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1), )
if mibBuilder.loadTexts: cpwCTDMTable.setStatus('current')
cpwCTDMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1), ).setIndexNames((0, "CISCO-IETF-PW-MIB", "cpwVcIndex"))
if mibBuilder.loadTexts: cpwCTDMEntry.setStatus('current')
cpwCTDMRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 1), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpwCTDMRate.setStatus('current')
cpwCTDMIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpwCTDMIfIndex.setStatus('current')
cpwCGenTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 3), CpwTDMCfgIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpwCGenTDMCfgIndex.setStatus('current')
cpwCRelTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 4), CpwTDMCfgIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpwCRelTDMCfgIndex.setStatus('current')
cpwCTDMConfigError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("other", 0), ("tdmTypeIncompatible", 1), ("peerRtpIncompatible", 2), ("peerPayloadSizeIncompatible", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMConfigError.setStatus('current')
cpwCTDMTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMTimeElapsed.setStatus('current')
cpwCTDMValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMValidIntervals.setStatus('current')
cpwCTDMValidDayIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMValidDayIntervals.setStatus('current')
cpwCTDMCurrentIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 9), Bits().clone(namedValues=NamedValues(("other", 0), ("strayPacket", 1), ("malformedPacket", 2), ("excessivePktLossRate", 3), ("bufferOverrun", 4), ("bufferUnderrun", 5), ("remotePktLoss", 6), ("pktMisOrder", 7), ("packetLoss", 8), ("tdmFault", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMCurrentIndications.setStatus('current')
cpwCTDMLatchedIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 10), Bits().clone(namedValues=NamedValues(("other", 0), ("staryPacket", 1), ("malformedPacket", 2), ("excessivePktLossRate", 3), ("bufferOverrun", 4), ("bufferUnderrun", 5), ("remotePktLoss", 6), ("pktMisOrder", 7), ("packetLoss", 8), ("tdmFault", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMLatchedIndications.setStatus('current')
cpwCTDMLastEsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMLastEsTimeStamp.setStatus('current')
cpwCTDMCfgIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMCfgIndexNext.setStatus('current')
cpwCTDMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3), )
if mibBuilder.loadTexts: cpwCTDMCfgTable.setStatus('current')
cpwCTDMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1), ).setIndexNames((0, "CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgIndex"))
if mibBuilder.loadTexts: cpwCTDMCfgEntry.setStatus('current')
cpwCTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 1), CpwTDMCfgIndex())
if mibBuilder.loadTexts: cpwCTDMCfgIndex.setStatus('current')
cpwCTDMCfgConfErr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 2), Bits().clone(namedValues=NamedValues(("other", 0), ("payloadSize", 1), ("jtrBfrDepth", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMCfgConfErr.setStatus('current')
cpwCTDMCfgPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 3), Unsigned32().clone(32)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgPayloadSize.setStatus('current')
cpwCTDMCfgPktReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgPktReorder.setStatus('current')
cpwCTDMCfgRtpHdrUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgRtpHdrUsed.setStatus('current')
cpwCTDMCfgJtrBfrDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 6), Unsigned32().clone(3000)).setUnits('microsecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgJtrBfrDepth.setStatus('current')
cpwCTDMCfgPayloadSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgPayloadSuppression.setStatus('current')
cpwCTDMCfgConsecPktsInSynch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 8), Unsigned32().clone(2)).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgConsecPktsInSynch.setStatus('current')
cpwCTDMCfgConsecMissPktsOutSynch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 9), Unsigned32().clone(10)).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgConsecMissPktsOutSynch.setStatus('current')
cpwCTDMCfgSetUp2SynchTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 10), Unsigned32().clone(5000)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgSetUp2SynchTimeOut.setStatus('current')
cpwCTDMCfgPktReplacePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ais", 1), ("implementationSpecific", 2))).clone('ais')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgPktReplacePolicy.setStatus('current')
cpwCTDMCfgAvePktLossTimeWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 12), Integer32().clone(20)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgAvePktLossTimeWindow.setStatus('current')
cpwCTDMCfgExcessivePktLossThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 13), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgExcessivePktLossThreshold.setStatus('current')
cpwCTDMCfgAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 14), Unsigned32().clone(2500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgAlarmThreshold.setStatus('current')
cpwCTDMCfgClearAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 15), Unsigned32().clone(10000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgClearAlarmThreshold.setStatus('current')
cpwCTDMCfgMissingPktsToSes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 16), Unsigned32().clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgMissingPktsToSes.setStatus('current')
cpwCTDMCfgTimestampMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("absolute", 2), ("differential", 3))).clone('absolute')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgTimestampMode.setStatus('current')
cpwCTDMCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 18), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgStorageType.setStatus('current')
cpwCTDMCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 3, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpwCTDMCfgRowStatus.setStatus('current')
cpwCTDMPerfCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5), )
if mibBuilder.loadTexts: cpwCTDMPerfCurrentTable.setStatus('current')
cpwCTDMPerfCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1), ).setIndexNames((0, "CISCO-IETF-PW-MIB", "cpwVcIndex"))
if mibBuilder.loadTexts: cpwCTDMPerfCurrentEntry.setStatus('current')
cpwCTDMPerfCurrentMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 1), PerfCurrentCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentMissingPkts.setStatus('current')
cpwCTDMPerfCurrentPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 2), PerfCurrentCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentPktsReOrder.setStatus('current')
cpwCTDMPerfCurrentJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 3), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentJtrBfrUnderruns.setStatus('current')
cpwCTDMPerfCurrentMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 4), PerfCurrentCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentMisOrderDropped.setStatus('current')
cpwCTDMPerfCurrentMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 5), PerfCurrentCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentMalformedPkt.setStatus('current')
cpwCTDMPerfCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 6), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentESs.setStatus('current')
cpwCTDMPerfCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 7), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentSESs.setStatus('current')
cpwCTDMPerfCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 8), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentUASs.setStatus('current')
cpwCTDMPerfCurrentFC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 5, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfCurrentFC.setStatus('current')
cpwCTDMPerfIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6), )
if mibBuilder.loadTexts: cpwCTDMPerfIntervalTable.setStatus('current')
cpwCTDMPerfIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1), ).setIndexNames((0, "CISCO-IETF-PW-MIB", "cpwVcIndex"), (0, "CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalNumber"))
if mibBuilder.loadTexts: cpwCTDMPerfIntervalEntry.setStatus('current')
cpwCTDMPerfIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cpwCTDMPerfIntervalNumber.setStatus('current')
cpwCTDMPerfIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalValidData.setStatus('current')
cpwCTDMPerfIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 3), Unsigned32().clone(900)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalDuration.setStatus('current')
cpwCTDMPerfIntervalMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 4), PerfIntervalCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalMissingPkts.setStatus('current')
cpwCTDMPerfIntervalPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 5), PerfIntervalCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalPktsReOrder.setStatus('current')
cpwCTDMPerfIntervalJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 6), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalJtrBfrUnderruns.setStatus('current')
cpwCTDMPerfIntervalMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 7), PerfIntervalCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalMisOrderDropped.setStatus('current')
cpwCTDMPerfIntervalMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 8), PerfIntervalCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalMalformedPkt.setStatus('current')
cpwCTDMPerfIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 9), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalESs.setStatus('current')
cpwCTDMPerfIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 10), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalSESs.setStatus('current')
cpwCTDMPerfIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 11), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalUASs.setStatus('current')
cpwCTDMPerfIntervalFC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 6, 1, 12), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerfIntervalFC.setStatus('current')
cpwCTDMPerf1DayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7), )
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalTable.setStatus('current')
cpwCTDMPerf1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1), ).setIndexNames((0, "CISCO-IETF-PW-MIB", "cpwVcIndex"), (0, "CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalNumber"))
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalEntry.setStatus('current')
cpwCTDMPerf1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalNumber.setStatus('current')
cpwCTDMPerf1DayIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalValidData.setStatus('current')
cpwCTDMPerf1DayIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalDuration.setStatus('current')
cpwCTDMPerf1DayIntervalMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalMissingPkts.setStatus('current')
cpwCTDMPerf1DayIntervalPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalPktsReOrder.setStatus('current')
cpwCTDMPerf1DayIntervalJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalJtrBfrUnderruns.setStatus('current')
cpwCTDMPerf1DayIntervalMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalMisOrderDropped.setStatus('current')
cpwCTDMPerf1DayIntervalMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalMalformedPkt.setStatus('current')
cpwCTDMPerf1DayIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 9), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalESs.setStatus('current')
cpwCTDMPerf1DayIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 10), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalSESs.setStatus('current')
cpwCTDMPerf1DayIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 11), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalUASs.setStatus('current')
cpwCTDMPerf1DayIntervalFC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 131, 1, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpwCTDMPerf1DayIntervalFC.setStatus('current')
cpwCTDMGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 131, 2, 1))
cpwCTDMCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 131, 2, 2))
cpwTDMModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 131, 2, 2, 1)).setObjects(("CISCO-IETF-PW-TDM-MIB", "cpwCTDMGroup"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentGroup"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalGroup"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpwTDMModuleCompliance = cpwTDMModuleCompliance.setStatus('current')
cpwCTDMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 131, 2, 1, 1)).setObjects(("CISCO-IETF-PW-TDM-MIB", "cpwCTDMRate"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMIfIndex"), ("CISCO-IETF-PW-TDM-MIB", "cpwCGenTDMCfgIndex"), ("CISCO-IETF-PW-TDM-MIB", "cpwCRelTDMCfgIndex"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMConfigError"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMTimeElapsed"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMValidIntervals"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMValidDayIntervals"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCurrentIndications"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMLatchedIndications"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMLastEsTimeStamp"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgIndexNext"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgRowStatus"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgConfErr"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgPayloadSize"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgPktReorder"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgRtpHdrUsed"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgJtrBfrDepth"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgPayloadSuppression"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgConsecPktsInSynch"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgConsecMissPktsOutSynch"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgSetUp2SynchTimeOut"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgPktReplacePolicy"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgAvePktLossTimeWindow"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgExcessivePktLossThreshold"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgAlarmThreshold"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgClearAlarmThreshold"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgMissingPktsToSes"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgTimestampMode"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMCfgStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpwCTDMGroup = cpwCTDMGroup.setStatus('current')
cpwCTDMPerfCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 131, 2, 1, 2)).setObjects(("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentMissingPkts"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentPktsReOrder"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentJtrBfrUnderruns"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentMisOrderDropped"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentMalformedPkt"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentESs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentSESs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentUASs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfCurrentFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpwCTDMPerfCurrentGroup = cpwCTDMPerfCurrentGroup.setStatus('current')
cpwCTDMPerfIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 131, 2, 1, 3)).setObjects(("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalValidData"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalDuration"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalMissingPkts"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalPktsReOrder"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalJtrBfrUnderruns"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalMisOrderDropped"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalMalformedPkt"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalESs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalSESs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalUASs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerfIntervalFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpwCTDMPerfIntervalGroup = cpwCTDMPerfIntervalGroup.setStatus('current')
cpwCTDMPerf1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 131, 2, 1, 4)).setObjects(("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalValidData"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalDuration"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalMissingPkts"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalPktsReOrder"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalJtrBfrUnderruns"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalMisOrderDropped"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalMalformedPkt"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalESs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalSESs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalUASs"), ("CISCO-IETF-PW-TDM-MIB", "cpwCTDMPerf1DayIntervalFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpwCTDMPerf1DayIntervalGroup = cpwCTDMPerf1DayIntervalGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-PW-TDM-MIB", cpwCTDMPerfIntervalFC=cpwCTDMPerfIntervalFC, cpwCTDMPerfIntervalMissingPkts=cpwCTDMPerfIntervalMissingPkts, cpwCTDMCfgPayloadSuppression=cpwCTDMCfgPayloadSuppression, cpwCTDMPerf1DayIntervalEntry=cpwCTDMPerf1DayIntervalEntry, cpwCTDMPerf1DayIntervalTable=cpwCTDMPerf1DayIntervalTable, cpwCTDMPerfCurrentMisOrderDropped=cpwCTDMPerfCurrentMisOrderDropped, cpwCTDMCfgAlarmThreshold=cpwCTDMCfgAlarmThreshold, cpwCTDMPerf1DayIntervalUASs=cpwCTDMPerf1DayIntervalUASs, cpwCTDMCfgIndexNext=cpwCTDMCfgIndexNext, cpwCTDMConfigError=cpwCTDMConfigError, cpwCTDMPerfIntervalTable=cpwCTDMPerfIntervalTable, cpwCTDMPerf1DayIntervalESs=cpwCTDMPerf1DayIntervalESs, cpwCTDMPerfIntervalUASs=cpwCTDMPerfIntervalUASs, cpwCTDMPerfCurrentESs=cpwCTDMPerfCurrentESs, cpwCTDMCfgSetUp2SynchTimeOut=cpwCTDMCfgSetUp2SynchTimeOut, cpwCTDMValidIntervals=cpwCTDMValidIntervals, cpwCTDMGroups=cpwCTDMGroups, cpwCTDMCfgTable=cpwCTDMCfgTable, cpwCTDMCompliances=cpwCTDMCompliances, cpwCTDMTable=cpwCTDMTable, cpwCTDMValidDayIntervals=cpwCTDMValidDayIntervals, cpwCTDMCfgExcessivePktLossThreshold=cpwCTDMCfgExcessivePktLossThreshold, cpwCTDMCfgConsecPktsInSynch=cpwCTDMCfgConsecPktsInSynch, cpwCTDMPerf1DayIntervalMisOrderDropped=cpwCTDMPerf1DayIntervalMisOrderDropped, cpwCTDMPerfIntervalMalformedPkt=cpwCTDMPerfIntervalMalformedPkt, cpwCTDMPerfCurrentUASs=cpwCTDMPerfCurrentUASs, cpwCTDMPerf1DayIntervalPktsReOrder=cpwCTDMPerf1DayIntervalPktsReOrder, cpwCTDMPerfCurrentMalformedPkt=cpwCTDMPerfCurrentMalformedPkt, cpwCTDMPerfCurrentTable=cpwCTDMPerfCurrentTable, cpwCTDMPerf1DayIntervalValidData=cpwCTDMPerf1DayIntervalValidData, cpwCTDMPerfCurrentGroup=cpwCTDMPerfCurrentGroup, cpwCTDMPerfIntervalPktsReOrder=cpwCTDMPerfIntervalPktsReOrder, cpwCTDMCfgClearAlarmThreshold=cpwCTDMCfgClearAlarmThreshold, cpwCTDMPerf1DayIntervalJtrBfrUnderruns=cpwCTDMPerf1DayIntervalJtrBfrUnderruns, cpwTDMModuleCompliance=cpwTDMModuleCompliance, cpwCTDMMIB=cpwCTDMMIB, cpwCTDMCfgRtpHdrUsed=cpwCTDMCfgRtpHdrUsed, cpwCTDMIfIndex=cpwCTDMIfIndex, cpwCTDMCfgConsecMissPktsOutSynch=cpwCTDMCfgConsecMissPktsOutSynch, cpwCTDMPerfCurrentPktsReOrder=cpwCTDMPerfCurrentPktsReOrder, cpwCTDMCfgTimestampMode=cpwCTDMCfgTimestampMode, cpwCTDMPerf1DayIntervalGroup=cpwCTDMPerf1DayIntervalGroup, CpwTDMCfgIndex=CpwTDMCfgIndex, PYSNMP_MODULE_ID=cpwCTDMMIB, cpwCTDMCfgConfErr=cpwCTDMCfgConfErr, cpwCTDMPerfIntervalJtrBfrUnderruns=cpwCTDMPerfIntervalJtrBfrUnderruns, cpwCTDMPerfIntervalDuration=cpwCTDMPerfIntervalDuration, cpwCTDMCfgRowStatus=cpwCTDMCfgRowStatus, cpwCTDMCfgPayloadSize=cpwCTDMCfgPayloadSize, cpwCTDMCfgPktReplacePolicy=cpwCTDMCfgPktReplacePolicy, cpwCTDMCurrentIndications=cpwCTDMCurrentIndications, cpwCTDMPerf1DayIntervalMissingPkts=cpwCTDMPerf1DayIntervalMissingPkts, cpwCTDMPerfCurrentFC=cpwCTDMPerfCurrentFC, cpwCGenTDMCfgIndex=cpwCGenTDMCfgIndex, cpwCTDMPerfIntervalNumber=cpwCTDMPerfIntervalNumber, cpwCTDMPerfIntervalMisOrderDropped=cpwCTDMPerfIntervalMisOrderDropped, cpwCTDMLatchedIndications=cpwCTDMLatchedIndications, cpwCTDMTimeElapsed=cpwCTDMTimeElapsed, cpwCTDMCfgStorageType=cpwCTDMCfgStorageType, cpwCTDMPerfIntervalValidData=cpwCTDMPerfIntervalValidData, cpwCTDMPerfCurrentJtrBfrUnderruns=cpwCTDMPerfCurrentJtrBfrUnderruns, cpwCTDMPerfIntervalEntry=cpwCTDMPerfIntervalEntry, cpwCTDMCfgJtrBfrDepth=cpwCTDMCfgJtrBfrDepth, cpwCTDMPerf1DayIntervalFC=cpwCTDMPerf1DayIntervalFC, cpwCTDMPerfCurrentMissingPkts=cpwCTDMPerfCurrentMissingPkts, cpwCTDMPerf1DayIntervalMalformedPkt=cpwCTDMPerf1DayIntervalMalformedPkt, cpwCTDMLastEsTimeStamp=cpwCTDMLastEsTimeStamp, cpwCTDMPerfIntervalSESs=cpwCTDMPerfIntervalSESs, cpwCTDMGroup=cpwCTDMGroup, cpwCRelTDMCfgIndex=cpwCRelTDMCfgIndex, cpwCTDMPerfCurrentSESs=cpwCTDMPerfCurrentSESs, cpwCTDMPerf1DayIntervalSESs=cpwCTDMPerf1DayIntervalSESs, cpwCTDMCfgIndex=cpwCTDMCfgIndex, cpwCTDMEntry=cpwCTDMEntry, cpwCTDMPerfIntervalESs=cpwCTDMPerfIntervalESs, cpwCTDMPerf1DayIntervalDuration=cpwCTDMPerf1DayIntervalDuration, cpwCTDMCfgPktReorder=cpwCTDMCfgPktReorder, cpwCTDMPerf1DayIntervalNumber=cpwCTDMPerf1DayIntervalNumber, cpwCTDMConformance=cpwCTDMConformance, cpwCTDMCfgAvePktLossTimeWindow=cpwCTDMCfgAvePktLossTimeWindow, cpwCTDMNotifications=cpwCTDMNotifications, cpwCTDMPerfIntervalGroup=cpwCTDMPerfIntervalGroup, cpwCTDMRate=cpwCTDMRate, cpwCTDMCfgMissingPktsToSes=cpwCTDMCfgMissingPktsToSes, cpwCTDMCfgEntry=cpwCTDMCfgEntry, cpwCTDMObjects=cpwCTDMObjects, cpwCTDMPerfCurrentEntry=cpwCTDMPerfCurrentEntry)
