#
# PySNMP MIB module MDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MDM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:00:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
enterprises, ModuleIdentity, Bits, TimeTicks, MibIdentifier, iso, Integer32, Counter64, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, NotificationType, ObjectIdentity, experimental = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "ModuleIdentity", "Bits", "TimeTicks", "MibIdentifier", "iso", "Integer32", "Counter64", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "NotificationType", "ObjectIdentity", "experimental")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
mdm = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6))
mdmID = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 1))
mdmIDTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1), )
if mibBuilder.loadTexts: mdmIDTable.setStatus('mandatory')
mdmIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmIDIndex"))
if mibBuilder.loadTexts: mdmIDEntry.setStatus('mandatory')
mdmIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDIndex.setStatus('mandatory')
mdmIDModel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 30, 31, 32, 33, 39))).clone(namedValues=NamedValues(("unknown", 1), ("v32bisDualStandard", 2), ("hst", 3), ("v32bis", 4), ("v32terboDualStandard", 11), ("v32terbo", 12), ("v32terboFax", 13), ("v34DualStandard", 14), ("v34", 15), ("v34Fax", 16), ("v34FaxISDN", 30), ("x2", 31), ("hdm24Channel", 32), ("hdm30Channel", 33), ("cdma", 39)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDModel.setStatus('mandatory')
mdmIDCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("unknown", 1), ("northamerica", 2), ("japan", 3), ("finland", 4), ("sweden", 5), ("uk", 6), ("norway", 7), ("switzerland", 8), ("netherlands", 9), ("southAfrica", 10), ("italy", 11), ("newZealand", 12), ("czech", 13), ("belgium", 14), ("denmark", 15), ("australia", 16), ("france", 17), ("germany", 18), ("ccitt", 19), ("austria", 20), ("ireland", 21), ("spain", 22), ("portugal", 23), ("malaysia", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDCountry.setStatus('mandatory')
mdmIDHardwareSerNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDHardwareSerNum.setStatus('mandatory')
mdmIDHardwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDHardwareRev.setStatus('mandatory')
mdmIDSupervisorSwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDSupervisorSwRev.setStatus('mandatory')
mdmIDDataPumpSwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDDataPumpSwRev.setStatus('mandatory')
mdmIDIoProcessorSwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDIoProcessorSwRev.setStatus('mandatory')
mdmIDSupervisorDate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIDSupervisorDate.setStatus('mandatory')
mdmLi = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 2))
mdmLiTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1), )
if mibBuilder.loadTexts: mdmLiTable.setStatus('mandatory')
mdmLiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmLiIndex"))
if mibBuilder.loadTexts: mdmLiEntry.setStatus('mandatory')
mdmLiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmLiIndex.setStatus('mandatory')
mdmLiDialPause = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiDialPause.setStatus('mandatory')
mdmLiCarrierRecDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiCarrierRecDelay.setStatus('mandatory')
mdmLiCarrierLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiCarrierLoss.setStatus('mandatory')
mdmLiToneDialTiming = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiToneDialTiming.setStatus('mandatory')
mdmLiDteRxDataDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiDteRxDataDelay.setStatus('mandatory')
mdmLiTransmiter = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiTransmiter.setStatus('mandatory')
mdmLiDialMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pulse", 1), ("tone", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiDialMode.setStatus('mandatory')
mdmLiGuardTone = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("european550", 2), ("uk1800", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiGuardTone.setStatus('mandatory')
mdmLiLeasedLine = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("cellularHSTMode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiLeasedLine.setStatus('mandatory')
mdmLiLeasedLineRestDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiLeasedLineRestDelay.setStatus('mandatory')
mdmLiPulseMakeBreak = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("northAmerica", 1), ("britishCommonwealth", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiPulseMakeBreak.setStatus('mandatory')
mdmLiAnswerTone = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiAnswerTone.setStatus('mandatory')
mdmLiRemoteEscGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiRemoteEscGuardTime.setStatus('mandatory')
mdmLiRemoteEscChar = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiRemoteEscChar.setStatus('mandatory')
mdmLiRemAccessLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiRemAccessLimit.setStatus('mandatory')
mdmLiRemPassword0 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiRemPassword0.setStatus('mandatory')
mdmLiRemPassword1 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiRemPassword1.setStatus('mandatory')
mdmLiTransmitLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiTransmitLevel.setStatus('mandatory')
mdmLiSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nic", 1), ("t1Tdm", 2), ("priTdm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLiSrc.setStatus('optional')
mdmDc = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 3))
mdmDcTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 3, 1), )
if mibBuilder.loadTexts: mdmDcTable.setStatus('mandatory')
mdmDcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 3, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmDcIndex"))
if mibBuilder.loadTexts: mdmDcEntry.setStatus('mandatory')
mdmDcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDcIndex.setStatus('mandatory')
mdmDcDataCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("autoEnable", 2), ("enable", 3), ("mnpWoCompression", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDcDataCompression.setStatus('mandatory')
mdmTf = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 4))
mdmTfTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1), )
if mibBuilder.loadTexts: mdmTfTable.setStatus('mandatory')
mdmTfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmTfIndex"))
if mibBuilder.loadTexts: mdmTfEntry.setStatus('mandatory')
mdmTfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfIndex.setStatus('mandatory')
mdmTfTest = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTfTest.setStatus('mandatory')
mdmTfTestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTfTestTime.setStatus('mandatory')
mdmTfV54 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTfV54.setStatus('mandatory')
mdmTfV54Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfV54Errors.setStatus('mandatory')
mdmTfATG = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfATG.setStatus('mandatory')
mdmTfDialInToneTest = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTfDialInToneTest.setStatus('mandatory')
mdmTfToneTestCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfToneTestCallRef.setStatus('mandatory')
mdmTfToneTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 2), )
if mibBuilder.loadTexts: mdmTfToneTable.setStatus('optional')
mdmTfToneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 2, 1), ).setIndexNames((0, "MDM-MIB", "mdmTfToneIndex"))
if mibBuilder.loadTexts: mdmTfToneEntry.setStatus('optional')
mdmTfToneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfToneIndex.setStatus('optional')
mdmTfTxFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTfTxFreq.setStatus('optional')
mdmTfTxAmpl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTfTxAmpl.setStatus('optional')
mdmTfRxFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfRxFreq.setStatus('optional')
mdmTfRxAmpl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfRxAmpl.setStatus('optional')
mdmTfRspndrTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3), )
if mibBuilder.loadTexts: mdmTfRspndrTable.setStatus('optional')
mdmTfRspndrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1), ).setIndexNames((0, "MDM-MIB", "mdmTfRspndrIndex"))
if mibBuilder.loadTexts: mdmTfRspndrEntry.setStatus('optional')
mdmTfRspndrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfRspndrIndex.setStatus('optional')
mdmTf404FarNearLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf404FarNearLvl.setStatus('optional')
mdmTf404NearFarLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf404NearFarLvl.setStatus('optional')
mdmTf1004FarNearLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf1004FarNearLvl.setStatus('optional')
mdmTf1004NearFarLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf1004NearFarLvl.setStatus('optional')
mdmTf2804FarNearLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf2804FarNearLvl.setStatus('optional')
mdmTf2804NearFarLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf2804NearFarLvl.setStatus('optional')
mdmTfCmsgFarNearLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCmsgFarNearLvl.setStatus('optional')
mdmTfCmsgNearFarLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCmsgNearFarLvl.setStatus('optional')
mdmTfCnotchFarNearLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCnotchFarNearLvl.setStatus('optional')
mdmTfCnotchNearFarLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCnotchNearFarLvl.setStatus('optional')
mdmtTfSigNoiseFarNearLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmtTfSigNoiseFarNearLvl.setStatus('optional')
mdmtTfSigNoiseNearFarLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmtTfSigNoiseNearFarLvl.setStatus('optional')
mdmTf404FarNearSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf404FarNearSts.setStatus('optional')
mdmTf404NearFarSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf404NearFarSts.setStatus('optional')
mdmTf1004FarNearSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf1004FarNearSts.setStatus('optional')
mdmTf1004NearFarSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf1004NearFarSts.setStatus('optional')
mdmTf2804FarNearSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf2804FarNearSts.setStatus('optional')
mdmTf2804NearFarSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf2804NearFarSts.setStatus('optional')
mdmTfCmsgFarNearSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCmsgFarNearSts.setStatus('optional')
mdmTfCmsgNearFarSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCmsgNearFarSts.setStatus('optional')
mdmTfCnotchFarNearSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCnotchFarNearSts.setStatus('optional')
mdmTfCnotchNearFarSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfCnotchNearFarSts.setStatus('optional')
mdmTfSigNoiseFarNearSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfSigNoiseFarNearSts.setStatus('optional')
mdmTfSigNoiseNearFarSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTfSigNoiseNearFarSts.setStatus('optional')
mdmTf0dB1004FarNearLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf0dB1004FarNearLvl.setStatus('optional')
mdmTf0dB1004NearFarLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf0dB1004NearFarLvl.setStatus('optional')
mdmTf0dB1004FarNearSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf0dB1004FarNearSts.setStatus('optional')
mdmTf0dB1004NearFarSts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 4, 3, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noTest", 1), ("success", 2), ("noResponder", 3), ("unsupported", 4), ("timeOut", 5), ("noToneDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTf0dB1004NearFarSts.setStatus('optional')
mdmDi = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 5))
mdmDiTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1), )
if mibBuilder.loadTexts: mdmDiTable.setStatus('mandatory')
mdmDiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmDiIndex"))
if mibBuilder.loadTexts: mdmDiEntry.setStatus('mandatory')
mdmDiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDiIndex.setStatus('mandatory')
mdmDiEscCodeGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiEscCodeGuardTime.setStatus('mandatory')
mdmDiLocalEscChar = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiLocalEscChar.setStatus('mandatory')
mdmDiCarriageRetChar = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiCarriageRetChar.setStatus('mandatory')
mdmDiLineFeedChar = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiLineFeedChar.setStatus('mandatory')
mdmDiBackspaceChar = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiBackspaceChar.setStatus('mandatory')
mdmDiDelAsBackspace = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("delete", 1), ("backspace", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDelAsBackspace.setStatus('mandatory')
mdmDiResetOnDtrEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiResetOnDtrEna.setStatus('mandatory')
mdmDiResultCodePauseDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiResultCodePauseDis.setStatus('mandatory')
mdmDiInterbridgeEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiInterbridgeEna.setStatus('mandatory')
mdmDiBreakLen = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiBreakLen.setStatus('mandatory')
mdmDiXonChar = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiXonChar.setStatus('mandatory')
mdmDiXoffChar = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiXoffChar.setStatus('mandatory')
mdmDiDsrPulseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 150))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDsrPulseTime.setStatus('mandatory')
mdmDiRtsCtsDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiRtsCtsDelay.setStatus('mandatory')
mdmDiHiSpeedResCodeEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiHiSpeedResCodeEna.setStatus('mandatory')
mdmDiCmdLocalEchoEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiCmdLocalEchoEna.setStatus('mandatory')
mdmDiDataModeEchoEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDataModeEchoEna.setStatus('mandatory')
mdmDiDteDataRateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("followsLinkRate", 1), ("fixed", 2), ("arqFixedNonArqFollows", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDteDataRateMode.setStatus('mandatory')
mdmDiCdOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiCdOverride.setStatus('mandatory')
mdmDiDtrOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDtrOverride.setStatus('mandatory')
mdmDiDsrOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsrOveridden", 1), ("modemControled", 2), ("pulsedCtsFollowsCd", 3), ("pulsed", 4), ("dsrEqualsCd", 5), ("normalCtsFollowsCd", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDsrOverride.setStatus('mandatory')
mdmDiEiaLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDiEiaLineStatus.setStatus('mandatory')
mdmDiTransmitFlowCntl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("hardware", 2), ("software", 3), ("hardwareAndSoftware", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiTransmitFlowCntl.setStatus('mandatory')
mdmDiSoftwareRxFlowCntl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("xonXoffLocalRemote", 2), ("xonXoffLocal", 3), ("hpHostMode", 4), ("hpTerminalMode", 5), ("localIncommingXonXoff", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiSoftwareRxFlowCntl.setStatus('mandatory')
mdmDiHardwareRxFlowCntl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rtsCtsDelayed", 1), ("rtsIgnored", 2), ("dataOnRtsHigh", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiHardwareRxFlowCntl.setStatus('mandatory')
mdmDiBreakHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("destructiveNotSent", 1), ("destructiveExpedited", 2), ("nondestructiveExpedited", 3), ("nondestructiveNotSent", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiBreakHandling.setStatus('mandatory')
mdmDiDteNvramLock = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDteNvramLock.setStatus('mandatory')
mdmDiSerialFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bit8NoParity", 1), ("bit7EvenParity", 2), ("bit7OddParity", 3), ("bit7MarkParity", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiSerialFormat.setStatus('mandatory')
mdmDiDefaultDteDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 8, 12, 13, 16, 17, 22))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps9600", 8), ("bps19K", 12), ("bps38K", 13), ("unknown", 16), ("bps57K", 17), ("bps115K", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDefaultDteDataRate.setStatus('mandatory')
mdmDiRemAccessMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiRemAccessMsg.setStatus('mandatory')
mdmDiV25DteDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("bps1200", 1), ("bps2400", 2), ("bps4800", 3), ("bps7200", 4), ("bps9600", 5), ("bps12K", 6), ("bps14K", 7), ("bps16K", 8), ("bps19K", 9), ("bps21K", 10), ("bps24K", 11), ("bps26K", 12), ("bps28K", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiV25DteDataRate.setStatus('optional')
mdmDiSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nic", 1), ("packetBus", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiSrc.setStatus('optional')
mdmDiSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiSlot.setStatus('optional')
mdmDiBusyClock = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("extClock1", 1), ("busyOut", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiBusyClock.setStatus('optional')
mdmDiAtString = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiAtString.setStatus('mandatory')
mdmDiDtrRecognitionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 5, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDiDtrRecognitionTime.setStatus('mandatory')
mdmSc = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 6))
mdmScTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1), )
if mibBuilder.loadTexts: mdmScTable.setStatus('mandatory')
mdmScEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmScIndex"))
if mibBuilder.loadTexts: mdmScEntry.setStatus('mandatory')
mdmScIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmScIndex.setStatus('mandatory')
mdmScLinkRateSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45))).clone(namedValues=NamedValues(("variable", 1), ("bps300", 2), ("bps1200", 3), ("bps2400", 4), ("bps4800", 5), ("bps7200", 6), ("bps9600", 7), ("bps12000", 8), ("bps14400", 9), ("bps16800", 10), ("bps19200", 11), ("bps21600", 12), ("bps24000", 13), ("bps26400", 14), ("bps28800", 15), ("bps31200", 16), ("bps33600", 17), ("bps33333", 18), ("bps37333", 19), ("bps41333", 20), ("bps42666", 21), ("bps44000", 22), ("bps45333", 23), ("bps46666", 24), ("bps48000", 25), ("bps49333", 26), ("bps50666", 27), ("bps52000", 28), ("bps53333", 29), ("bps54666", 30), ("bps56000", 31), ("bps57333", 32), ("bps64000", 33), ("bps28000", 34), ("bps29333", 35), ("bps30666", 36), ("bps32000", 37), ("bps34666", 38), ("bps36000", 39), ("bps38666", 40), ("bps40000", 41), ("bps58666", 42), ("bps60000", 43), ("bps61333", 44), ("bps62666", 45)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScLinkRateSelect.setStatus('mandatory')
mdmScNonArqBufSize = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bytes1500", 1), ("bytes128", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScNonArqBufSize.setStatus('mandatory')
mdmScNonMnpDataCapture = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScNonMnpDataCapture.setStatus('mandatory')
mdmScSyncTimingSource = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("rxLinkClock", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScSyncTimingSource.setStatus('mandatory')
mdmScHstMod = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScHstMod.setStatus('mandatory')
mdmScHiFreqEq = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScHiFreqEq.setStatus('mandatory')
mdmScBackChanRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bps450", 1), ("bps300", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScBackChanRate.setStatus('mandatory')
mdmScV21Mod = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV21Mod.setStatus('mandatory')
mdmScV32UnencodedMod = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV32UnencodedMod.setStatus('mandatory')
mdmScV32Mod = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV32Mod.setStatus('mandatory')
mdmScBell208 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScBell208.setStatus('mandatory')
mdmScV32Bis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV32Bis.setStatus('mandatory')
mdmScV32BisEnhance = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV32BisEnhance.setStatus('mandatory')
mdmScV32QuickRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV32QuickRetrain.setStatus('mandatory')
mdmScV23 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV23.setStatus('mandatory')
mdmScHiSpeedModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v32", 1), ("hst", 2), ("bell208", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScHiSpeedModulation.setStatus('mandatory')
mdmScFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScFallback.setStatus('mandatory')
mdmScV32TerboModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV32TerboModeEnable.setStatus('mandatory')
mdmScV34ModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV34ModeEnable.setStatus('mandatory')
mdmScVFCSymRate2400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCSymRate2400.setStatus('mandatory')
mdmScVFCSymRate2743 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCSymRate2743.setStatus('mandatory')
mdmScVFCSymRate2800 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCSymRate2800.setStatus('mandatory')
mdmScVFCSymRate3000 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCSymRate3000.setStatus('mandatory')
mdmScVFCSymRate3200 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCSymRate3200.setStatus('mandatory')
mdmScVFCSymRate3429 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCSymRate3429.setStatus('mandatory')
mdmScVFC8S2DMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFC8S2DMapping.setStatus('mandatory')
mdmScVFC16S4DMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFC16S4DMapping.setStatus('mandatory')
mdmScVFC32S2DMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFC32S2DMapping.setStatus('mandatory')
mdmScVFC64S4DMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFC64S4DMapping.setStatus('mandatory')
mdmScVFCNonLinearCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCNonLinearCoding.setStatus('mandatory')
mdmScVFCTxLevelDeviation = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCTxLevelDeviation.setStatus('mandatory')
mdmScVFCPreEmphasis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCPreEmphasis.setStatus('mandatory')
mdmScVFCPreCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCPreCoding.setStatus('mandatory')
mdmScVFCShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCShaping.setStatus('mandatory')
mdmScVFCModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScVFCModeEnable.setStatus('mandatory')
mdmScV8 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV8.setStatus('mandatory')
mdmSCV8CallIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSCV8CallIndicator.setStatus('mandatory')
mdmScV34pModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV34pModeEnable.setStatus('mandatory')
mdmSc300 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSc300.setStatus('mandatory')
mdmSc1200 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSc1200.setStatus('mandatory')
mdmSc2400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSc2400.setStatus('mandatory')
mdmScHighSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScHighSpeed.setStatus('mandatory')
mdmScSelectiveReject = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScSelectiveReject.setStatus('mandatory')
mdmScPhExclusionDel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScPhExclusionDel.setStatus('mandatory')
mdmScLinkRateAmpU = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45))).clone(namedValues=NamedValues(("variable", 1), ("bps300", 2), ("bps1200", 3), ("bps2400", 4), ("bps4800", 5), ("bps7200", 6), ("bps9600", 7), ("bps12000", 8), ("bps14400", 9), ("bps16800", 10), ("bps19200", 11), ("bps21600", 12), ("bps24000", 13), ("bps26400", 14), ("bps28800", 15), ("bps31200", 16), ("bps33600", 17), ("bps33333", 18), ("bps37333", 19), ("bps41333", 20), ("bps42666", 21), ("bps44000", 22), ("bps45333", 23), ("bps46666", 24), ("bps48000", 25), ("bps49333", 26), ("bps50666", 27), ("bps52000", 28), ("bps53333", 29), ("bps54666", 30), ("bps56000", 31), ("bps57333", 32), ("bps64000", 33), ("bps28000", 34), ("bps29333", 35), ("bps30666", 36), ("bps32000", 37), ("bps34666", 38), ("bps36000", 39), ("bps38666", 40), ("bps40000", 41), ("bps58666", 42), ("bps60000", 43), ("bps61333", 44), ("bps62666", 45)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScLinkRateAmpU.setStatus('mandatory')
mdmScLowerSpeedMin = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45))).clone(namedValues=NamedValues(("variable", 1), ("bps300", 2), ("bps1200", 3), ("bps2400", 4), ("bps4800", 5), ("bps7200", 6), ("bps9600", 7), ("bps12000", 8), ("bps14400", 9), ("bps16800", 10), ("bps19200", 11), ("bps21600", 12), ("bps24000", 13), ("bps26400", 14), ("bps28800", 15), ("bps31200", 16), ("bps33600", 17), ("bps33333", 18), ("bps37333", 19), ("bps41333", 20), ("bps42666", 21), ("bps44000", 22), ("bps45333", 23), ("bps46666", 24), ("bps48000", 25), ("bps49333", 26), ("bps50666", 27), ("bps52000", 28), ("bps53333", 29), ("bps54666", 30), ("bps56000", 31), ("bps57333", 32), ("bps64000", 33), ("bps28000", 34), ("bps29333", 35), ("bps30666", 36), ("bps32000", 37), ("bps34666", 38), ("bps36000", 39), ("bps38666", 40), ("bps40000", 41), ("bps58666", 42), ("bps60000", 43), ("bps61333", 44), ("bps62666", 45)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScLowerSpeedMin.setStatus('mandatory')
mdmScLowerSpeedMax = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45))).clone(namedValues=NamedValues(("variable", 1), ("bps300", 2), ("bps1200", 3), ("bps2400", 4), ("bps4800", 5), ("bps7200", 6), ("bps9600", 7), ("bps12000", 8), ("bps14400", 9), ("bps16800", 10), ("bps19200", 11), ("bps21600", 12), ("bps24000", 13), ("bps26400", 14), ("bps28800", 15), ("bps31200", 16), ("bps33600", 17), ("bps33333", 18), ("bps37333", 19), ("bps41333", 20), ("bps42666", 21), ("bps44000", 22), ("bps45333", 23), ("bps46666", 24), ("bps48000", 25), ("bps49333", 26), ("bps50666", 27), ("bps52000", 28), ("bps53333", 29), ("bps54666", 30), ("bps56000", 31), ("bps57333", 32), ("bps64000", 33), ("bps28000", 34), ("bps29333", 35), ("bps30666", 36), ("bps32000", 37), ("bps34666", 38), ("bps36000", 39), ("bps38666", 40), ("bps40000", 41), ("bps58666", 42), ("bps60000", 43), ("bps61333", 44), ("bps62666", 45)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScLowerSpeedMax.setStatus('mandatory')
mdmScX2Client = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScX2Client.setStatus('mandatory')
mdmScX2Server = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScX2Server.setStatus('mandatory')
mdmScX2Symmetric = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScX2Symmetric.setStatus('mandatory')
mdmScX2HighPowerConst = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScX2HighPowerConst.setStatus('mandatory')
mdmScPiafs = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScPiafs.setStatus('mandatory')
mdmScPiafsV42bis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScPiafsV42bis.setStatus('mandatory')
mdmScTxPwrLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScTxPwrLvl.setStatus('mandatory')
mdmScTxPwrLvlApplied = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inputToFarEndOfCodec", 1), ("outputOfTheServerModem", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScTxPwrLvlApplied.setStatus('mandatory')
mdmScX2Version2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScX2Version2.setStatus('mandatory')
mdmScV34Fallback = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV34Fallback.setStatus('mandatory')
mdmScV90Analogue = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV90Analogue.setStatus('mandatory')
mdmScV90Digital = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV90Digital.setStatus('mandatory')
mdmScV90AllDigital = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 6, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmScV90AllDigital.setStatus('mandatory')
mdmCc = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 7))
mdmCcTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1), )
if mibBuilder.loadTexts: mdmCcTable.setStatus('mandatory')
mdmCcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmCcIndex"))
if mibBuilder.loadTexts: mdmCcEntry.setStatus('mandatory')
mdmCcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCcIndex.setStatus('mandatory')
mdmCcDialDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcDialDelay.setStatus('mandatory')
mdmCcWaitForCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcWaitForCarrier.setStatus('mandatory')
mdmCcInactivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcInactivityTimer.setStatus('mandatory')
mdmCcAutoDialOnDtrEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAutoDialOnDtrEna.setStatus('mandatory')
mdmCcAutoDialOnPwrUpEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAutoDialOnPwrUpEna.setStatus('mandatory')
mdmCcGhostPortLockEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcGhostPortLockEna.setStatus('mandatory')
mdmCcQuietResultCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("displayResult", 1), ("noResult", 2), ("originateOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcQuietResultCodes.setStatus('mandatory')
mdmCcResponseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("numeric", 1), ("verbal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcResponseMode.setStatus('mandatory')
mdmCcResultCodeOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcResultCodeOptions.setStatus('mandatory')
mdmCcArqResultCodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("arqResultsDisabled", 1), ("arqResultsEnabled", 2), ("includeHstV32", 3), ("includeProtocol", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcArqResultCodeMode.setStatus('mandatory')
mdmCcEscCodeRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("goOnHook", 1), ("enterCommandMode", 2), ("ignoreEscCode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcEscCodeRsp.setStatus('mandatory')
mdmCcAtRecognition = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("queryOnly", 2), ("enableAll", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAtRecognition.setStatus('mandatory')
mdmCcMgmtSysMsgDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMgmtSysMsgDis.setStatus('mandatory')
mdmCcV32ToneDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcV32ToneDuration.setStatus('mandatory')
mdmCcAutoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAutoAnswer.setStatus('mandatory')
mdmCcAnswerInOrigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAnswerInOrigMode.setStatus('mandatory')
mdmCcArqBufWait = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcArqBufWait.setStatus('mandatory')
mdmCcPhoneString0 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcPhoneString0.setStatus('mandatory')
mdmCcPhoneString1 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcPhoneString1.setStatus('mandatory')
mdmCcPhoneString2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcPhoneString2.setStatus('mandatory')
mdmCcPhoneString3 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcPhoneString3.setStatus('mandatory')
mdmCcErrorCntlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("syncMode", 2), ("normalArq", 3), ("arqOnly", 4), ("v25bisChar", 5), ("v25bisBit", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcErrorCntlMode.setStatus('mandatory')
mdmCcMiMic = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMiMic.setStatus('mandatory')
mdmCcMnpWith1200 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMnpWith1200.setStatus('mandatory')
mdmCcMnpWith2400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMnpWith2400.setStatus('mandatory')
mdmCcMnpWithV32 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMnpWithV32.setStatus('mandatory')
mdmCcMnpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMnpTimeout.setStatus('mandatory')
mdmCcV21V23FallBackTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcV21V23FallBackTimer.setStatus('mandatory')
mdmCcAddnlAnswToneDur = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAddnlAnswToneDur.setStatus('optional')
mdmCcBillingDelayPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcBillingDelayPeriod.setStatus('optional')
mdmCcCarrierAccessCode1 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcCarrierAccessCode1.setStatus('optional')
mdmCcCarrierAccessCode2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcCarrierAccessCode2.setStatus('optional')
mdmCcCarrierAccessCode3 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcCarrierAccessCode3.setStatus('optional')
mdmCcCallingInitStr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcCallingInitStr1.setStatus('optional')
mdmCcCallingInitStr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcCallingInitStr2.setStatus('optional')
mdmCcCallingInitStr3 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcCallingInitStr3.setStatus('optional')
mdmCcCallingInitStr4 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcCallingInitStr4.setStatus('optional')
mdmCcDataFaxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dataMode", 1), ("faxClass1Mode", 2), ("dataFaxClass1Mode", 3), ("faxClass2Mode", 4), ("dataFaxClass2Mode", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcDataFaxMode.setStatus('mandatory')
mdmCcT1CallSetupProc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalSetup", 1), ("noSetup", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcT1CallSetupProc.setStatus('optional')
mdmCcT1DialToneType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mfTones", 1), ("dtmfTones", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcT1DialToneType.setStatus('optional')
mdmCcT1KpStMfTones = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcT1KpStMfTones.setStatus('optional')
mdmCcT1CallInitStrUse = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcT1CallInitStrUse.setStatus('optional')
mdmCcT1CallInitStrBase = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dnisBase", 1), ("aniBase", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcT1CallInitStrBase.setStatus('optional')
mdmCcIntBlackListDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcIntBlackListDis.setStatus('mandatory')
mdmCcOffHookRestrict = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcOffHookRestrict.setStatus('mandatory')
mdmCcT1DialInAniDig = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcT1DialInAniDig.setStatus('optional')
mdmCcT1DialInDnisDig = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcT1DialInDnisDig.setStatus('optional')
mdmCcNoPbNoConnEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcNoPbNoConnEna.setStatus('optional')
mdmCcIdleDiscPatt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcIdleDiscPatt.setStatus('optional')
mdmCcMnp10 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMnp10.setStatus('optional')
mdmCcMnp10Ec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcMnp10Ec.setStatus('optional')
mdmCcAtzPbHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normalAtz", 1), ("atzPbIgnored", 2), ("atzPbNvram", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAtzPbHandling.setStatus('optional')
mdmCcDefltPRISlot = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcDefltPRISlot.setStatus('mandatory')
mdmCcExtDTMFToneSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcExtDTMFToneSupport.setStatus('mandatory')
mdmCcDataOverVoice = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcDataOverVoice.setStatus('mandatory')
mdmCc2100AnswerTone = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCc2100AnswerTone.setStatus('mandatory')
mdmCcEnableV120v42Bis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcEnableV120v42Bis.setStatus('mandatory')
mdmCcHdlcLicIe = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcHdlcLicIe.setStatus('mandatory')
mdmCcDtmfTerminationTone = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcDtmfTerminationTone.setStatus('mandatory')
mdmCcAfaxMaxRateSrvOpt20 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("bps2400", 1), ("bps4800", 2), ("bps7200", 3), ("bps9600", 4), ("bps12000", 5), ("bps14400", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAfaxMaxRateSrvOpt20.setStatus('mandatory')
mdmCcAfaxMaxRateSrvOpt21 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 7, 1, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("bps2400", 1), ("bps4800", 2), ("bps7200", 3), ("bps9600", 4), ("bps12000", 5), ("bps14400", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCcAfaxMaxRateSrvOpt21.setStatus('mandatory')
mdmEc = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 8))
mdmEcTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 8, 1), )
if mibBuilder.loadTexts: mdmEcTable.setStatus('mandatory')
mdmEcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 8, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmEcIndex"))
if mibBuilder.loadTexts: mdmEcEntry.setStatus('mandatory')
mdmEcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEcIndex.setStatus('mandatory')
mdmEcMnp3Dis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEcMnp3Dis.setStatus('mandatory')
mdmEcMnp4Dis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEcMnp4Dis.setStatus('mandatory')
mdmEcMnpUnusual = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEcMnpUnusual.setStatus('mandatory')
mdmEcV42MnpHandshake = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableAll", 1), ("enableV42disableMnp", 2), ("disablev42enablemnp", 3), ("disableDetectionPhase", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEcV42MnpHandshake.setStatus('mandatory')
mdmCs = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 9))
mdmCsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1), )
if mibBuilder.loadTexts: mdmCsTable.setStatus('mandatory')
mdmCsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmCsIndex"))
if mibBuilder.loadTexts: mdmCsEntry.setStatus('mandatory')
mdmCsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsIndex.setStatus('mandatory')
mdmCsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62))).clone(namedValues=NamedValues(("idle", 1), ("offHook", 2), ("dialing", 3), ("ringing", 4), ("ringRcvd", 5), ("linkNegotiation", 6), ("onlineOriginate", 7), ("onlineAnswer", 8), ("localCommandMode", 9), ("remoteCommandMode", 10), ("lineBusiedOut", 11), ("toneTest", 12), ("responderTest105", 13), ("responderTest102", 14), ("failed", 33), ("testingRom", 49), ("testingRam", 50), ("testingNvram", 51), ("analogLoopback", 52), ("localDigitalLoopback", 53), ("remoteDigitalLoopback", 54), ("selfTest", 55), ("phoneTest", 56), ("nonManagedDevice", 57), ("slotEmpty", 58), ("modemDisabled", 59), ("notResponding", 60), ("nonManagableDevice", 61), ("miuFailed", 62)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsStatus.setStatus('mandatory')
mdmCsLastNumberDialedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsLastNumberDialedOut.setStatus('mandatory')
mdmCsLastNumberDialedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsLastNumberDialedIn.setStatus('mandatory')
mdmCsLastCallingPartyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsLastCallingPartyNum.setStatus('mandatory')
mdmCsOriginateAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("originateInOriginate", 1), ("originateInAnswer", 2), ("answerInOriginate", 3), ("answerInAnswer", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsOriginateAnswer.setStatus('mandatory')
mdmCsRings = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsRings.setStatus('mandatory')
mdmCsDisconnectReason = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111))).clone(namedValues=NamedValues(("dtrDrop", 1), ("escapeSequence", 2), ("athCommand", 3), ("carrierLoss", 4), ("inactivityTimout", 5), ("mnpIncompatible", 6), ("undefined", 7), ("remotePassword", 8), ("linkPassword", 9), ("retransmitLimit", 10), ("linkDisconnectMsgReceived", 11), ("noLoopCurrent", 12), ("invalidSpeed", 13), ("unableToRetrain", 14), ("managementCommand", 15), ("noDialTone", 16), ("keyAbort", 17), ("lineBusy", 18), ("noAnswer", 19), ("voice", 20), ("noAnswerTone", 21), ("noCarrier", 22), ("undetermined", 23), ("v42SabmeTimeout", 24), ("v42BreakTimeout", 25), ("v42DisconnectCmd", 26), ("v42IdExchangeFail", 27), ("v42BadSetup", 28), ("v42InvalidCodeWord", 29), ("v42StringToLong", 30), ("v42InvalidCommand", 31), ("none", 32), ("v32Cleardown", 33), ("dialSecurity", 34), ("remoteAccessDenied", 35), ("loopLoss", 36), ("ds0Teardown", 37), ("promptNotEnabled", 38), ("noPromptingInSync", 39), ("nonArqMode", 40), ("modeIncompatible", 41), ("noPromptInNonARQ", 42), ("dialBackLink", 43), ("linkAbort", 44), ("autopassFailed", 45), ("pbGenericError", 46), ("pbLinkErrTxPreAck", 47), ("pbLinkErrTxTardyACK", 48), ("pbTransmitBusTimeout", 49), ("pbReceiveBusTimeout", 50), ("pbLinkErrTxTAL", 51), ("pbLinkErrRxTAL", 52), ("pbTransmitMasterTimeout", 53), ("pbClockMissing", 54), ("pbReceivedLsWhileLinkUp", 55), ("pbOutOfSequenceFrame", 56), ("pbBadFrame", 57), ("pbAckWaitTimeout", 58), ("pbReceivedAckSequenceErr", 59), ("pbReceiveOvrflwRNRFailed", 60), ("pbReceiveMsgBufOvrflw", 61), ("rcvdGatewayDiscCmd", 62), ("tokenPassingTimeout", 63), ("dspInterruptTimeout", 64), ("mnpProtocolViolation", 65), ("class2FaxHangupCmd", 66), ("hstSpeedSwitchTimeout", 67), ("tooManyUnacked", 68), ("timerExpired", 69), ("t1Glare", 70), ("priDialoutRqTimeout", 71), ("abortAnlgDstOvrIsdn", 72), ("normalUserCallClear", 73), ("normalUnspecified", 74), ("bearerIncompatibility", 75), ("protocolErrorEvent", 76), ("abnormalDisconnect", 77), ("invalidCauseValue", 78), ("resourceUnavailable", 79), ("remotHungUpDuringTraining", 80), ("trainingTimeout", 81), ("incomingModemNotAvailable", 82), ("incomingInvalidBearerCap", 83), ("incomingInvalidChannelID", 84), ("incomingInvalidProgInd", 85), ("incomingInvalidCallingPty", 86), ("incomingInvalidCalledPty", 87), ("incomingCallBlock", 88), ("incomingLoopStNoRingOff", 89), ("outgoingTelcoDisconnect", 90), ("outgoingEMWinkTimeout", 91), ("outgoingEMWinkTooShort", 92), ("outgoingNoChannelAvail", 93), ("dspReboot", 94), ("noDSPRespToKA", 95), ("noDSPRespToDisc", 96), ("dspTailPtrInvalid", 97), ("dspHeadPtrInvalid", 98), ("dataProcessingGenericErr", 99), ("timeslotUnavailable", 100), ("gmtTimeNotSet", 101), ("chasAwarenessNotAvailable", 102), ("r2InvalidChannelDirection", 103), ("r2ChannelBlockedByNetwork", 104), ("r2Glare", 105), ("r2OutgoingCallBlocked", 106), ("r2DNISNotFound", 107), ("r2SigCauseCongestion", 108), ("r2SigCauseUnallocNumber", 109), ("r2DSPFatalError", 110), ("callBlacklisted", 111)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsDisconnectReason.setStatus('mandatory')
mdmCsConnectFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111))).clone(namedValues=NamedValues(("dtrDrop", 1), ("escapeSequence", 2), ("athCommand", 3), ("carrierLoss", 4), ("inactivityTimout", 5), ("mnpIncompatible", 6), ("undefined", 7), ("remotePassword", 8), ("linkPassword", 9), ("retransmitLimit", 10), ("linkDisconnectMsgReceived", 11), ("noLoopCurrent", 12), ("invalidSpeed", 13), ("unableToRetrain", 14), ("managementCommand", 15), ("noDialTone", 16), ("keyAbort", 17), ("lineBusy", 18), ("noAnswer", 19), ("voice", 20), ("noAnswerTone", 21), ("noCarrier", 22), ("undetermined", 23), ("v42SabmeTimeout", 24), ("v42BreakTimeout", 25), ("v42DisconnectCmd", 26), ("v42IdExchangeFail", 27), ("v42BadSetup", 28), ("v42InvalidCodeWord", 29), ("v42StringToLong", 30), ("v42InvalidCommand", 31), ("none", 32), ("v32Cleardown", 33), ("dialSecurity", 34), ("remoteAccessDenied", 35), ("loopLoss", 36), ("ds0Teardown", 37), ("promptNotEnabled", 38), ("noPromptingInSync", 39), ("nonArqMode", 40), ("modeIncompatible", 41), ("noPromptInNonARQ", 42), ("dialBackLink", 43), ("linkAbort", 44), ("autopassFailed", 45), ("pbGenericError", 46), ("pbLinkErrTxPreAck", 47), ("pbLinkErrTxTardyACK", 48), ("pbTransmitBusTimeout", 49), ("pbReceiveBusTimeout", 50), ("pbLinkErrTxTAL", 51), ("pbLinkErrRxTAL", 52), ("pbTransmitMasterTimeout", 53), ("pbClockMissing", 54), ("pbReceivedLsWhileLinkUp", 55), ("pbOutOfSequenceFrame", 56), ("pbBadFrame", 57), ("pbAckWaitTimeout", 58), ("pbReceivedAckSequenceErr", 59), ("pbReceiveOvrflwRNRFailed", 60), ("pbReceiveMsgBufOvrflw", 61), ("rcvdGatewayDiscCmd", 62), ("tokenPassingTimeout", 63), ("dspInterruptTimeout", 64), ("mnpProtocolViolation", 65), ("class2FaxHangupCmd", 66), ("hstSpeedSwitchTimeout", 67), ("tooManyUnacked", 68), ("timerExpired", 69), ("t1Glare", 70), ("priDialoutRqTimeout", 71), ("abortAnlgDstOvrIsdn", 72), ("normalUserCallClear", 73), ("normalUnspecified", 74), ("bearerIncompatibility", 75), ("protocolErrorEvent", 76), ("abnormalDisconnect", 77), ("invalidCauseValue", 78), ("resourceUnavailable", 79), ("remotHungUpDuringTraining", 80), ("trainingTimeout", 81), ("incomingModemNotAvailable", 82), ("incomingInvalidBearerCap", 83), ("incomingInvalidChannelID", 84), ("incomingInvalidProgInd", 85), ("incomingInvalidCallingPty", 86), ("incomingInvalidCalledPty", 87), ("incomingCallBlock", 88), ("incomingLoopStNoRingOff", 89), ("outgoingTelcoDisconnect", 90), ("outgoingEMWinkTimeout", 91), ("outgoingEMWinkTooShort", 92), ("outgoingNoChannelAvail", 93), ("dspReboot", 94), ("noDSPRespToKA", 95), ("noDSPRespToDisc", 96), ("dspTailPtrInvalid", 97), ("dspHeadPtrInvalid", 98), ("dataProcessingGenericErr", 99), ("timeslotUnavailable", 100), ("gmtTimeNotSet", 101), ("chasAwarenessNotAvailable", 102), ("r2InvalidChannelDirection", 103), ("r2ChannelBlockedByNetwork", 104), ("r2Glare", 105), ("r2OutgoingCallBlocked", 106), ("r2DNISNotFound", 107), ("r2SigCauseCongestion", 108), ("r2SigCauseUnallocNumber", 109), ("r2DSPFatalError", 110), ("callBlacklisted", 111)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsConnectFailReason.setStatus('mandatory')
mdmCsInitialTxLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsInitialTxLinkRate.setStatus('mandatory')
mdmCsInitialRxLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsInitialRxLinkRate.setStatus('mandatory')
mdmCsFinalTxLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsFinalTxLinkRate.setStatus('mandatory')
mdmCsFinalRxLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsFinalRxLinkRate.setStatus('mandatory')
mdmCsModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35))).clone(namedValues=NamedValues(("usRoboticsHST", 1), ("ccittV32", 2), ("ccittV22bis", 3), ("bell103", 4), ("ccittV21", 5), ("bell212", 6), ("ccittV32bis", 7), ("ccittV23", 8), ("noConnection", 9), ("bell208b", 10), ("v21FaxClass1", 11), ("v27FaxClass1", 12), ("v29FaxClass1", 13), ("v17FaxClass1", 14), ("v21FaxClass2", 15), ("v27FaxClass2", 16), ("v29FaxClass2", 17), ("v17FaxClass2", 18), ("v32Terbo", 19), ("v34", 20), ("vFC", 21), ("v34plus", 22), ("x2server", 23), ("v110", 24), ("v120", 25), ("x75", 26), ("asyncSyncPPP", 27), ("clearChannel", 28), ("x2client", 29), ("x2symmetric", 30), ("piafs", 31), ("x2version2", 32), ("v90Analogue", 33), ("v90Digital", 34), ("v90AllDigital", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsModulationType.setStatus('mandatory')
mdmCsSyncAsyncModeUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("asynchronous", 1), ("synchronous", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsSyncAsyncModeUsed.setStatus('mandatory')
mdmCsErrorControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("none", 1), ("mnpLevel3", 2), ("mnpLevel4", 3), ("ccittV42", 4), ("usRoboticsHST", 5), ("synchronousNone", 6), ("mnpLevel2", 7), ("mnp10", 8), ("v42Etc", 9), ("mnp10Ec", 10), ("lapmEc", 11), ("v42Etc2", 12), ("ccittV42SREJ", 13), ("piafs", 14), ("v120", 15), ("x75", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsErrorControlType.setStatus('mandatory')
mdmCsCompressionType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ccittV42bis", 2), ("mnpLevel5", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCompressionType.setStatus('mandatory')
mdmCsEqualizationType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("long", 1), ("short", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsEqualizationType.setStatus('mandatory')
mdmCsFallbackEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsFallbackEnabled.setStatus('mandatory')
mdmCsCharsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCharsSent.setStatus('mandatory')
mdmCsCharsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCharsReceived.setStatus('mandatory')
mdmCsOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsOctetsSent.setStatus('mandatory')
mdmCsOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsOctetsReceived.setStatus('mandatory')
mdmCsBlocksSent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsBlocksSent.setStatus('mandatory')
mdmCsBlocksReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsBlocksReceived.setStatus('mandatory')
mdmCsBlocksResent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsBlocksResent.setStatus('mandatory')
mdmCsRetrainsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsRetrainsRequested.setStatus('mandatory')
mdmCsRetrainsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsRetrainsGranted.setStatus('mandatory')
mdmCsLineReversalQty = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsLineReversalQty.setStatus('mandatory')
mdmCsCharsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCharsLost.setStatus('mandatory')
mdmCsBackChannelRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bps450", 1), ("bps300", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsBackChannelRate.setStatus('mandatory')
mdmCsBlerQty = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsBlerQty.setStatus('mandatory')
mdmCsLinkTimeoutQty = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsLinkTimeoutQty.setStatus('mandatory')
mdmCsFallbackQty = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsFallbackQty.setStatus('mandatory')
mdmCsUpshiftQty = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsUpshiftQty.setStatus('mandatory')
mdmCsLinkNakQty = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsLinkNakQty.setStatus('mandatory')
mdmCsGainHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsGainHitCount.setStatus('mandatory')
mdmCsSecurityUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsSecurityUserName.setStatus('mandatory')
mdmCsCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCallDuration.setStatus('mandatory')
mdmCsCallRefNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCallRefNum.setStatus('mandatory')
mdmCsPriCardSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsPriCardSlot.setStatus('mandatory')
mdmCsTDMTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsTDMTimeSlot.setStatus('mandatory')
mdmCsPriCardSpanLine = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsPriCardSpanLine.setStatus('mandatory')
mdmCsBChannelUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsBChannelUsed.setStatus('mandatory')
mdmCsQCarrFreqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCarrFreqTx.setStatus('mandatory')
mdmCsQCarrFreqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCarrFreqRx.setStatus('mandatory')
mdmCsQSymRateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQSymRateTx.setStatus('mandatory')
mdmCsQSymRateRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQSymRateRx.setStatus('mandatory')
mdmCsQTrellisTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("trellis8S-2D", 1), ("trellis16S-4D", 2), ("trellis32S-2D", 3), ("trellis64S-4D", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQTrellisTx.setStatus('mandatory')
mdmCsQTrellisRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("trellis8S-2D", 1), ("trellis16S-4D", 2), ("trellis32S-2D", 3), ("trellis64S-4D", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQTrellisRx.setStatus('mandatory')
mdmCsQNonLinCdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQNonLinCdTx.setStatus('mandatory')
mdmCsQNonLinCdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQNonLinCdRx.setStatus('mandatory')
mdmCsQPrecodingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQPrecodingTx.setStatus('mandatory')
mdmCsQPrecodingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQPrecodingRx.setStatus('mandatory')
mdmCsQShapingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQShapingTx.setStatus('mandatory')
mdmCsQShapingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQShapingRx.setStatus('mandatory')
mdmCsQPreemphTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQPreemphTx.setStatus('mandatory')
mdmCsQPreemphRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQPreemphRx.setStatus('mandatory')
mdmCsQRxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQRxLevel.setStatus('mandatory')
mdmCsQTxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQTxLevel.setStatus('mandatory')
mdmCsQSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQSNR.setStatus('mandatory')
mdmCsQNearEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQNearEcho.setStatus('mandatory')
mdmCsQFarEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQFarEcho.setStatus('mandatory')
mdmCsQRndTripDly = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQRndTripDly.setStatus('mandatory')
mdmCsQPacketSizeCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQPacketSizeCurr.setStatus('mandatory')
mdmCsQPacketSizeLow = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQPacketSizeLow.setStatus('mandatory')
mdmCsQPacketSizeHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQPacketSizeHigh.setStatus('mandatory')
mdmCsQCellTxLevelCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCellTxLevelCurr.setStatus('mandatory')
mdmCsQCellTxLevelLow = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCellTxLevelLow.setStatus('mandatory')
mdmCsQCellTxLevelHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCellTxLevelHigh.setStatus('mandatory')
mdmCsQSNRLevelCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQSNRLevelCurr.setStatus('mandatory')
mdmCsQSNRLevelLow = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQSNRLevelLow.setStatus('mandatory')
mdmCsQSNRLevelHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQSNRLevelHigh.setStatus('mandatory')
mdmCsQCellularProt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("mnp10", 2), ("mnp10ec", 3), ("v42etc", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCellularProt.setStatus('mandatory')
mdmCsFreqProbeData = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 75), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsFreqProbeData.setStatus('mandatory')
mdmCsLevelProbeData = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 76), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsLevelProbeData.setStatus('mandatory')
mdmCsQTimingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQTimingOffset.setStatus('mandatory')
mdmCsQCarrierOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCarrierOffset.setStatus('mandatory')
mdmCsQCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mulaw", 1), ("alaw", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsQCoding.setStatus('mandatory')
mdmCsTrainingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 81), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsTrainingInfo.setStatus('mandatory')
mdmCsX2signature = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 82), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsX2signature.setStatus('mandatory')
mdmCsX2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("x2v90NotOperational", 1), ("x2Operational", 2), ("v8DisabledLocal", 3), ("x2DisabledLocal", 4), ("baud3200DisabledLocal", 5), ("speedLimitedLocal", 6), ("v8notDetectedFromRemote", 7), ("x2notDetectedFromRemote", 8), ("incompatibleX2Versions", 9), ("incompatibleX2Modes", 10), ("baud3200DisabledRemote", 11), ("excessiveHFAttenuation", 12), ("channelNoSymbolRate", 13), ("exitBeforeX2Connect", 14), ("v90Operational", 15), ("x2v90Operational", 16), ("v90DisabledLocal", 17), ("x2v90DisabledLocal", 18), ("v90SymRatesDisabledLcl", 19), ("v90NotDetectedFrmRemote", 20), ("x2v90NotDetectedFrmRmt", 21), ("incompatibleV90Versions", 22), ("incompatibleV90Modes", 23), ("v90IncompactibleSymRate", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsX2Status.setStatus('mandatory')
mdmCsCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("analogCall", 1), ("chT1WinkStart", 2), ("chT1ImmediateStart", 3), ("chT1LoopStart", 4), ("chT1GroundStart", 5), ("chT1PRICall", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCallType.setStatus('mandatory')
mdmCsCallStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCallStartTime.setStatus('mandatory')
mdmCsCallEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCallEndTime.setStatus('mandatory')
mdmCsDigitalPadAttenuated = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 87), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsDigitalPadAttenuated.setStatus('mandatory')
mdmCsInitModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35))).clone(namedValues=NamedValues(("usRoboticsHST", 1), ("ccittV32", 2), ("ccittV22bis", 3), ("bell103", 4), ("ccittV21", 5), ("bell212", 6), ("ccittV32bis", 7), ("ccittV23", 8), ("noConnection", 9), ("bell208b", 10), ("v21FaxClass1", 11), ("v27FaxClass1", 12), ("v29FaxClass1", 13), ("v17FaxClass1", 14), ("v21FaxClass2", 15), ("v27FaxClass2", 16), ("v29FaxClass2", 17), ("v17FaxClass2", 18), ("v32Terbo", 19), ("v34", 20), ("vFC", 21), ("v34plus", 22), ("x2server", 23), ("v110", 24), ("v120", 25), ("x75", 26), ("asyncSyncPPP", 27), ("clearChannel", 28), ("x2client", 29), ("x2symmetric", 30), ("piafs", 31), ("x2version2", 32), ("v90Analogue", 33), ("v90Digital", 34), ("v90AllDigital", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsInitModulationType.setStatus('mandatory')
mdmCsRxMinSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsRxMinSpeed.setStatus('mandatory')
mdmCsRxMaxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsRxMaxSpeed.setStatus('mandatory')
mdmCsTxMinSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsTxMinSpeed.setStatus('mandatory')
mdmCsTxMaxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))).clone(namedValues=NamedValues(("bps110", 1), ("bps300", 2), ("bps600", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12K", 9), ("bps14K", 10), ("bps16K", 11), ("bps19K", 12), ("bps38K", 13), ("bps75", 14), ("bps450", 15), ("unknown", 16), ("bps57K", 17), ("bps21K", 18), ("bps24K", 19), ("bps26K", 20), ("bps28K", 21), ("bps31K", 23), ("bps33K", 24), ("bps25333", 25), ("bps26666", 26), ("bps28000", 27), ("bps29333", 28), ("bps30666", 29), ("bps32000", 30), ("bps33333", 31), ("bps34666", 32), ("bps36000", 33), ("bps37333", 34), ("bps38666", 35), ("bps40000", 36), ("bps41333", 37), ("bps42666", 38), ("bps44000", 39), ("bps45333", 40), ("bps46666", 41), ("bps48000", 42), ("bps49333", 43), ("bps50666", 44), ("bps52000", 45), ("bps53333", 46), ("bps54666", 47), ("bps56000", 48), ("bps57333", 49), ("bps58666", 50), ("bps60000", 51), ("bps61333", 52), ("bps62666", 53), ("bps64000", 54)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsTxMaxSpeed.setStatus('mandatory')
mdmCsCollectedDTMFDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 9, 1, 1, 93), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCsCollectedDTMFDigits.setStatus('mandatory')
mdmEv = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 10))
mdmEvTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1), )
if mibBuilder.loadTexts: mdmEvTable.setStatus('mandatory')
mdmEvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmEvIndex"))
if mibBuilder.loadTexts: mdmEvEntry.setStatus('mandatory')
mdmEvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvIndex.setStatus('mandatory')
mdmEvWatchdogTimouts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvWatchdogTimouts.setStatus('mandatory')
mdmEvDteIdleTimouts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvDteIdleTimouts.setStatus('mandatory')
mdmEvInConnectEstabs = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvInConnectEstabs.setStatus('mandatory')
mdmEvOutConnectEstabs = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvOutConnectEstabs.setStatus('mandatory')
mdmEvInConnectTerms = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvInConnectTerms.setStatus('mandatory')
mdmEvOutConnectTerms = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvOutConnectTerms.setStatus('mandatory')
mdmEvConnectAttemptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvConnectAttemptFails.setStatus('mandatory')
mdmEvConnectTimouts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvConnectTimouts.setStatus('mandatory')
mdmEvMgmtBusFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvMgmtBusFailures.setStatus('mandatory')
mdmEvResetByDtes = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvResetByDtes.setStatus('mandatory')
mdmEvDtrFalses = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvDtrFalses.setStatus('mandatory')
mdmEvDtrTrues = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvDtrTrues.setStatus('mandatory')
mdmEvNoTones = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvNoTones.setStatus('mandatory')
mdmEvNoLoops = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvNoLoops.setStatus('mandatory')
mdmEvBlers = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvBlers.setStatus('mandatory')
mdmEvFallBacks = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvFallBacks.setStatus('mandatory')
mdmEvInConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvInConnectTime.setStatus('mandatory')
mdmEvInTotalBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvInTotalBytesRx.setStatus('mandatory')
mdmEvInTotalBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvInTotalBytesTx.setStatus('mandatory')
mdmEvOutConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvOutConnectTime.setStatus('mandatory')
mdmEvOutTotalBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvOutTotalBytesRx.setStatus('mandatory')
mdmEvOutTotalBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvOutTotalBytesTx.setStatus('mandatory')
mdmEvInConnAttemptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvInConnAttemptFails.setStatus('mandatory')
mdmEvOutConnAttemptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 10, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEvOutConnAttemptFails.setStatus('mandatory')
mdmEt = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 11))
mdmEtTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1), )
if mibBuilder.loadTexts: mdmEtTable.setStatus('mandatory')
mdmEtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmEtIndex"))
if mibBuilder.loadTexts: mdmEtEntry.setStatus('mandatory')
mdmEtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmEtIndex.setStatus('mandatory')
mdmEtDteIdleThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEtDteIdleThresh.setStatus('mandatory')
mdmEtDtrFalseThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEtDtrFalseThresh.setStatus('mandatory')
mdmEtDtrTrueThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEtDtrTrueThresh.setStatus('mandatory')
mdmEtConnTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEtConnTimeLimit.setStatus('mandatory')
mdmEtBlerThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEtBlerThresh.setStatus('mandatory')
mdmEtFallbackThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 11, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEtFallbackThresh.setStatus('mandatory')
mdmCd = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 12))
mdmCdTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1), )
if mibBuilder.loadTexts: mdmCdTable.setStatus('mandatory')
mdmCdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmCdIndex"))
if mibBuilder.loadTexts: mdmCdEntry.setStatus('mandatory')
mdmCdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCdIndex.setStatus('mandatory')
mdmCdMgtStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCdMgtStationId.setStatus('mandatory')
mdmCdReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCdReqId.setStatus('mandatory')
mdmCdFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35))).clone(namedValues=NamedValues(("noCommand", 1), ("softwareReset", 2), ("storeToNvram", 3), ("restoreFromDflt", 4), ("restoreFromNvram", 5), ("offHook", 6), ("onHook", 7), ("sndTone", 8), ("rcvTone", 9), ("endTest", 10), ("rspndrTest105", 11), ("rspndrTest102", 12), ("lclAnlgLpbk", 13), ("lclDgtlLpbk", 14), ("rmtDgtlLpbk", 15), ("selfTest", 16), ("testRam", 17), ("testRom", 18), ("testNVRAM", 19), ("v54LclAnlgLpbk", 20), ("v54RmtDgtlLpbk", 21), ("idlePhoneLine", 22), ("loadHwFlowDflt", 23), ("loadSwFlowDflt", 24), ("loadMnp10CllulrDflt", 25), ("loadV42CllulrMblDflt", 26), ("loadV42CllulrFxdDflt", 27), ("hardBusyAtDisable", 33), ("softBusyAtDisable", 34), ("restoreLineAt", 35)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCdFunction.setStatus('mandatory')
mdmCdForce = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("force", 1), ("noForce", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCdForce.setStatus('mandatory')
mdmCdParam = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCdParam.setStatus('mandatory')
mdmCdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("inProgress", 3), ("notSupported", 4), ("unAbleToRun", 5), ("aborted", 6), ("failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCdResult.setStatus('mandatory')
mdmCdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 8, 12, 13, 14, 17, 20, 22, 24, 25, 31, 51, 52, 53, 54, 73, 89, 90, 91, 92))).clone(namedValues=NamedValues(("noError", 1), ("unable", 2), ("unrecognizedCommand", 6), ("slotEmpty", 8), ("noResponse", 12), ("notConnected", 13), ("connected", 14), ("onLine", 17), ("unsupportedCommand", 20), ("deviceDisabled", 22), ("deviceInTestMode", 24), ("testFailed", 25), ("deviceInSecurityMode", 31), ("noRTS", 51), ("noDTR", 52), ("wrongLoopbackSpeed", 53), ("noLoopbackInARQ", 54), ("pendingSoftwareDownload", 73), ("invalidFrequency", 89), ("noLoopCurrent", 90), ("noDialTone", 91), ("noLineDetected", 92)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCdCode.setStatus('mandatory')
mdmTe = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 13))
mdmTeTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1), )
if mibBuilder.loadTexts: mdmTeTable.setStatus('mandatory')
mdmTeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmTeIndex"))
if mibBuilder.loadTexts: mdmTeEntry.setStatus('mandatory')
mdmTeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTeIndex.setStatus('mandatory')
mdmTeInConnEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeInConnEstablished.setStatus('mandatory')
mdmTeOutConnEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeOutConnEstablished.setStatus('mandatory')
mdmTeInConnTerminated = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeInConnTerminated.setStatus('mandatory')
mdmTeOutConnTerminated = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeOutConnTerminated.setStatus('mandatory')
mdmTeConnAttemptFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeConnAttemptFailure.setStatus('mandatory')
mdmTeConnLimitExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeConnLimitExpired.setStatus('mandatory')
mdmTeDteXmitDataIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeDteXmitDataIdle.setStatus('mandatory')
mdmTeDtrTrue = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeDtrTrue.setStatus('mandatory')
mdmTeDtrFalse = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeDtrFalse.setStatus('mandatory')
mdmTeBlerCountAtThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeBlerCountAtThresh.setStatus('mandatory')
mdmTeFallbkCountAtThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeFallbkCountAtThresh.setStatus('mandatory')
mdmTeNoDialTone = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeNoDialTone.setStatus('mandatory')
mdmTeNoLoopCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeNoLoopCurrent.setStatus('mandatory')
mdmTeResetByDTE = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeResetByDTE.setStatus('mandatory')
mdmTeDialOutCallDur = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeDialOutCallDur.setStatus('mandatory')
mdmTeDialInCallDur = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeDialInCallDur.setStatus('mandatory')
mdmTePbActive = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTePbActive.setStatus('optional')
mdmTePbLost = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTePbLost.setStatus('optional')
mdmTeDteRingNoAns = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeDteRingNoAns.setStatus('optional')
mdmTePbClockLossEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTePbClockLossEvent.setStatus('mandatory')
mdmTePbClockRestoreEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTePbClockRestoreEvent.setStatus('mandatory')
mdmTeInConnAttemptFail = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeInConnAttemptFail.setStatus('mandatory')
mdmTeOutConnAttemptFail = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTeOutConnAttemptFail.setStatus('mandatory')
mdmTe105ResponderTest = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 13, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTe105ResponderTest.setStatus('mandatory')
mdmLs = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 14))
mdmLsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1), )
if mibBuilder.loadTexts: mdmLsTable.setStatus('mandatory')
mdmLsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmLsIndex"))
if mibBuilder.loadTexts: mdmLsTableEntry.setStatus('mandatory')
mdmLsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmLsIndex.setStatus('mandatory')
mdmLsSecurityEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsSecurityEnable.setStatus('mandatory')
mdmLsFallbackPromptEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsFallbackPromptEnable.setStatus('mandatory')
mdmLsForcePromptEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsForcePromptEnable.setStatus('mandatory')
mdmLsLocAccPasswdEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsLocAccPasswdEnable.setStatus('mandatory')
mdmLsDialBackEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsDialBackEnable.setStatus('mandatory')
mdmLsAutoPassPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsAutoPassPasswd.setStatus('mandatory')
mdmLsLocalAccessPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsLocalAccessPasswd.setStatus('mandatory')
mdmLsAccountPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 14, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLsAccountPasswd.setStatus('mandatory')
mdmHs = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 15))
mdmHsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 15, 1), )
if mibBuilder.loadTexts: mdmHsTable.setStatus('optional')
mdmHsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 15, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmHsIndex"))
if mibBuilder.loadTexts: mdmHsEntry.setStatus('optional')
mdmHsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmHsIndex.setStatus('optional')
mdmHsDialInEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 1), ("allowNoNMC", 2), ("refuseNoNMC", 3), ("busyOutNoNMC", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmHsDialInEnable.setStatus('optional')
mdmHsDialOutEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("refuseNoNMC", 2), ("allowNoNMC", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmHsDialOutEnable.setStatus('optional')
mdmHsDtrDcdDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmHsDtrDcdDelay.setStatus('optional')
mdmHsDtrDsrDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmHsDtrDsrDelay.setStatus('optional')
mdmAutoResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 16))
mdmArTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1), )
if mibBuilder.loadTexts: mdmArTable.setStatus('optional')
mdmArEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmArIndex"))
if mibBuilder.loadTexts: mdmArEntry.setStatus('optional')
mdmArIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmArIndex.setStatus('optional')
mdmArIncomConnectEstab = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArIncomConnectEstab.setStatus('optional')
mdmArOutgoConnectEstab = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArOutgoConnectEstab.setStatus('optional')
mdmArIncomConnectTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArIncomConnectTerm.setStatus('optional')
mdmArOutgoConnectTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArOutgoConnectTerm.setStatus('optional')
mdmArConnectAttemptFail = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArConnectAttemptFail.setStatus('optional')
mdmArConnectTimeExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArConnectTimeExpire.setStatus('optional')
mdmArResetByDte = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArResetByDte.setStatus('optional')
mdmArDteXmitIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDteXmitIdle.setStatus('optional')
mdmArBlersAtThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArBlersAtThresh.setStatus('optional')
mdmArFbacksAtThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArFbacksAtThresh.setStatus('optional')
mdmArDialOutLoginFail = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDialOutLoginFail.setStatus('optional')
mdmArDialOutRestrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDialOutRestrNum.setStatus('optional')
mdmArDialInLoginFail = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDialInLoginFail.setStatus('optional')
mdmArDialBackRestrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDialBackRestrNum.setStatus('optional')
mdmArDialBackRestModem = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDialBackRestModem.setStatus('optional')
mdmArLoginAttemptsExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArLoginAttemptsExceed.setStatus('optional')
mdmArUserBlacklisted = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArUserBlacklisted.setStatus('optional')
mdmArAttmpLoginByBlistUsr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArAttmpLoginByBlistUsr.setStatus('optional')
mdmArRspAttemptLimExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArRspAttemptLimExceed.setStatus('optional')
mdmArWatchdog = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArWatchdog.setStatus('optional')
mdmArMgtBusFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArMgtBusFailure.setStatus('optional')
mdmArDtrTrue = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDtrTrue.setStatus('optional')
mdmArDtrFalse = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDtrFalse.setStatus('optional')
mdmArMdmRingNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArMdmRingNoAnswer.setStatus('optional')
mdmArDteRingNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArDteRingNoAnswer.setStatus('optional')
mdmArNoDialTone = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArNoDialTone.setStatus('optional')
mdmArNoLoopCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArNoLoopCurrent.setStatus('optional')
mdmArTimer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArTimer1.setStatus('optional')
mdmArTimer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArTimer2.setStatus('optional')
mdmArTimer3 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArTimer3.setStatus('optional')
mdmArTimer4 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArTimer4.setStatus('optional')
mdmArPacketBusActive = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArPacketBusActive.setStatus('optional')
mdmArPacketBusLost = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 16, 1, 1, 34), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmArPacketBusLost.setStatus('optional')
mdmCe = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 17))
mdmCeTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1), )
if mibBuilder.loadTexts: mdmCeTable.setStatus('mandatory')
mdmCeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmCeIndex"))
if mibBuilder.loadTexts: mdmCeEntry.setStatus('mandatory')
mdmCeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCeIndex.setStatus('mandatory')
mdmCeMnp10Dis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeMnp10Dis.setStatus('mandatory')
mdmCeMnpxDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeMnpxDis.setStatus('mandatory')
mdmCeComp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mnp5", 1), ("v42bis", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeComp.setStatus('mandatory')
mdmCeOperDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeOperDis.setStatus('mandatory')
mdmCeLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linkAtHighSpeed", 1), ("linkAt1200BpsV22", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeLinkSpeed.setStatus('mandatory')
mdmCeShortFormRules = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 1), ("form1CodeWords512", 2), ("form2CodeWords1024", 3), ("form3CodeWords2048", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeShortFormRules.setStatus('mandatory')
mdmCeDceBitraLim = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("maxDceRate", 1), ("bps4800", 2), ("bps7200", 3), ("bps9600", 4), ("bps12000", 5), ("bps14400", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeDceBitraLim.setStatus('mandatory')
mdmCeDceTxLev = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("modemContrlTxLev", 1), ("dBm10", 2), ("dBm11", 3), ("dBm12", 4), ("dBm13", 5), ("dBm14", 6), ("dBm15", 7), ("dBm16", 8), ("dBm17", 9), ("dBm18", 10), ("dBm19", 11), ("dBm20", 12), ("dBm21", 13), ("dBm22", 14), ("dBm23", 15), ("dBm24", 16), ("dBm25", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeDceTxLev.setStatus('mandatory')
mdmCeV42EtcDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeV42EtcDis.setStatus('mandatory')
mdmCeV42CellSite = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixedSite", 1), ("mobileSite", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeV42CellSite.setStatus('mandatory')
mdmCeV42EtcCallToneDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeV42EtcCallToneDis.setStatus('mandatory')
mdmCeV42EtcTxLevConDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeV42EtcTxLevConDis.setStatus('mandatory')
mdmCeDceStartRate = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("bps4800", 2), ("bps9600", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeDceStartRate.setStatus('mandatory')
mdmCeV42DceTxDemDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeV42DceTxDemDis.setStatus('mandatory')
mdmCeMnp10FallbackDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeMnp10FallbackDis.setStatus('mandatory')
mdmCeMnp10FallforDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeMnp10FallforDis.setStatus('mandatory')
mdmCeDbNoEtcDis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeDbNoEtcDis.setStatus('mandatory')
mdmCeMnpxDetPhEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 17, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCeMnpxDetPhEna.setStatus('mandatory')
mdmSts = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 18))
mdmStsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 18, 1), )
if mibBuilder.loadTexts: mdmStsTable.setStatus('mandatory')
mdmStsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 18, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmStsIndex"))
if mibBuilder.loadTexts: mdmStsEntry.setStatus('mandatory')
mdmStsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmStsIndex.setStatus('mandatory')
mdmStsPbClock = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("clockMaster", 2), ("clockSlave", 3), ("noClockPresent", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmStsPbClock.setStatus('mandatory')
mdmMa = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 6, 19))
mdmMaTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 6, 19, 1), )
if mibBuilder.loadTexts: mdmMaTable.setStatus('mandatory')
mdmMaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 6, 19, 1, 1), ).setIndexNames((0, "MDM-MIB", "mdmMaIndex"))
if mibBuilder.loadTexts: mdmMaEntry.setStatus('mandatory')
mdmMaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 19, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmMaIndex.setStatus('mandatory')
mdmMaChangeIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 19, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("cfgChanged", 2), ("cfgUnchanged", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmMaChangeIndicator.setStatus('mandatory')
mdmMaChannelConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 6, 19, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("group1", 1), ("group2", 2), ("group3", 3), ("group4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmMaChannelConfig.setStatus('mandatory')
mibBuilder.exportSymbols("MDM-MIB", mdmTf2804FarNearLvl=mdmTf2804FarNearLvl, mdmDiLineFeedChar=mdmDiLineFeedChar, mdmTfCmsgNearFarSts=mdmTfCmsgNearFarSts, mdmScHstMod=mdmScHstMod, mdmCsLinkTimeoutQty=mdmCsLinkTimeoutQty, mdmEvOutConnectEstabs=mdmEvOutConnectEstabs, mdmTf=mdmTf, mdmCsQSymRateTx=mdmCsQSymRateTx, mdmScV8=mdmScV8, mdmArRspAttemptLimExceed=mdmArRspAttemptLimExceed, mdmStsTable=mdmStsTable, mdmIDIndex=mdmIDIndex, mdmTeDialOutCallDur=mdmTeDialOutCallDur, mdmTeBlerCountAtThresh=mdmTeBlerCountAtThresh, mdmCeV42EtcCallToneDis=mdmCeV42EtcCallToneDis, mdmArTable=mdmArTable, mdmDiRtsCtsDelay=mdmDiRtsCtsDelay, mdmCsCallEndTime=mdmCsCallEndTime, mdmLsTableEntry=mdmLsTableEntry, mdmTfToneTable=mdmTfToneTable, mdmArEntry=mdmArEntry, mdmCsQPacketSizeHigh=mdmCsQPacketSizeHigh, mdmCeLinkSpeed=mdmCeLinkSpeed, mdmArBlersAtThresh=mdmArBlersAtThresh, mdmCcT1KpStMfTones=mdmCcT1KpStMfTones, mdmTf1004NearFarLvl=mdmTf1004NearFarLvl, mdmScV21Mod=mdmScV21Mod, mdmCsLinkNakQty=mdmCsLinkNakQty, mdmDiDteNvramLock=mdmDiDteNvramLock, mdmTfToneTestCallRef=mdmTfToneTestCallRef, mdmCeV42DceTxDemDis=mdmCeV42DceTxDemDis, mdmTfCnotchNearFarSts=mdmTfCnotchNearFarSts, mdmCcCarrierAccessCode3=mdmCcCarrierAccessCode3, mdmCsQCarrFreqTx=mdmCsQCarrFreqTx, mdmEt=mdmEt, mdmDiXonChar=mdmDiXonChar, mdmCsEntry=mdmCsEntry, mdmMaTable=mdmMaTable, mdmCsOriginateAnswer=mdmCsOriginateAnswer, mdmScX2HighPowerConst=mdmScX2HighPowerConst, mdmDiHiSpeedResCodeEna=mdmDiHiSpeedResCodeEna, mdmScSyncTimingSource=mdmScSyncTimingSource, mdmCcExtDTMFToneSupport=mdmCcExtDTMFToneSupport, mdmArIncomConnectEstab=mdmArIncomConnectEstab, mdmCcEntry=mdmCcEntry, mdmDiDtrRecognitionTime=mdmDiDtrRecognitionTime, mdmCsQSymRateRx=mdmCsQSymRateRx, mdmID=mdmID, mdmCc2100AnswerTone=mdmCc2100AnswerTone, mdmCeDceTxLev=mdmCeDceTxLev, mdmCcCallingInitStr2=mdmCcCallingInitStr2, mdmScX2Version2=mdmScX2Version2, mdmCcAddnlAnswToneDur=mdmCcAddnlAnswToneDur, mdmCsLastNumberDialedIn=mdmCsLastNumberDialedIn, mdmCcT1DialInAniDig=mdmCcT1DialInAniDig, mdmEtDteIdleThresh=mdmEtDteIdleThresh, mdmEvDtrTrues=mdmEvDtrTrues, mdmCsFinalRxLinkRate=mdmCsFinalRxLinkRate, mdmCsFreqProbeData=mdmCsFreqProbeData, mdmDiSrc=mdmDiSrc, mdmCsQTrellisTx=mdmCsQTrellisTx, mdmTf1004FarNearSts=mdmTf1004FarNearSts, mdmDiHardwareRxFlowCntl=mdmDiHardwareRxFlowCntl, mdmScV32Mod=mdmScV32Mod, mdmCdEntry=mdmCdEntry, mdmTe=mdmTe, mdmCs=mdmCs, mdmScV32QuickRetrain=mdmScV32QuickRetrain, mdmCsLevelProbeData=mdmCsLevelProbeData, mdmIDEntry=mdmIDEntry, mdmScNonArqBufSize=mdmScNonArqBufSize, mdmEcTable=mdmEcTable, mdmEvConnectAttemptFails=mdmEvConnectAttemptFails, mdmTf1004FarNearLvl=mdmTf1004FarNearLvl, mdmCcAfaxMaxRateSrvOpt20=mdmCcAfaxMaxRateSrvOpt20, mdmScVFCPreCoding=mdmScVFCPreCoding, mdmEvOutConnAttemptFails=mdmEvOutConnAttemptFails, mdmCdCode=mdmCdCode, mdmArWatchdog=mdmArWatchdog, mdmTfTest=mdmTfTest, mdmTeEntry=mdmTeEntry, mdmLiToneDialTiming=mdmLiToneDialTiming, mdmCcErrorCntlMode=mdmCcErrorCntlMode, mdmDiBusyClock=mdmDiBusyClock, mdmDiBackspaceChar=mdmDiBackspaceChar, mdmEcMnp3Dis=mdmEcMnp3Dis, mdmArTimer1=mdmArTimer1, mdmTfTestTime=mdmTfTestTime, mdmDiBreakHandling=mdmDiBreakHandling, mdmCcCallingInitStr1=mdmCcCallingInitStr1, mdmLs=mdmLs, mdmCcWaitForCarrier=mdmCcWaitForCarrier, mdmArDialOutRestrNum=mdmArDialOutRestrNum, mdmMa=mdmMa, mdmLiRemAccessLimit=mdmLiRemAccessLimit, mdmDiSoftwareRxFlowCntl=mdmDiSoftwareRxFlowCntl, mdmCsPriCardSlot=mdmCsPriCardSlot, mdmCsSyncAsyncModeUsed=mdmCsSyncAsyncModeUsed, mdmTf1004NearFarSts=mdmTf1004NearFarSts, mdmDc=mdmDc, mdmCsQRndTripDly=mdmCsQRndTripDly, mdmCeV42EtcTxLevConDis=mdmCeV42EtcTxLevConDis, mdmCsQSNRLevelHigh=mdmCsQSNRLevelHigh, mdmScVFCModeEnable=mdmScVFCModeEnable, mdmTfCnotchFarNearLvl=mdmTfCnotchFarNearLvl, mdmScNonMnpDataCapture=mdmScNonMnpDataCapture, mdmEvInConnAttemptFails=mdmEvInConnAttemptFails, mdmCdIndex=mdmCdIndex, mdmTeDtrTrue=mdmTeDtrTrue, mdmMaChannelConfig=mdmMaChannelConfig, mdmCsOctetsReceived=mdmCsOctetsReceived, mdmCsBlocksResent=mdmCsBlocksResent, mdmCcMnpWith2400=mdmCcMnpWith2400, mdmScX2Server=mdmScX2Server, mdmArTimer2=mdmArTimer2, mdmCeMnpxDis=mdmCeMnpxDis, mdmDiLocalEscChar=mdmDiLocalEscChar, mdmLiDialPause=mdmLiDialPause, mdmArLoginAttemptsExceed=mdmArLoginAttemptsExceed, mdmCcMnp10Ec=mdmCcMnp10Ec, mdmTePbLost=mdmTePbLost, mdmTeOutConnEstablished=mdmTeOutConnEstablished, mdmCcAutoAnswer=mdmCcAutoAnswer, mdmScV32BisEnhance=mdmScV32BisEnhance, mdmArDteXmitIdle=mdmArDteXmitIdle, mdmCsQTimingOffset=mdmCsQTimingOffset, mdmHsDialOutEnable=mdmHsDialOutEnable, mdmCcIndex=mdmCcIndex, mdmCcV21V23FallBackTimer=mdmCcV21V23FallBackTimer, mdmCsQCellularProt=mdmCsQCellularProt, mdmCsCollectedDTMFDigits=mdmCsCollectedDTMFDigits, mdmEtFallbackThresh=mdmEtFallbackThresh, mdmTePbActive=mdmTePbActive, mdmCcMnp10=mdmCcMnp10, mdmCcHdlcLicIe=mdmCcHdlcLicIe, mdmScV90Analogue=mdmScV90Analogue, mdmCcT1CallInitStrBase=mdmCcT1CallInitStrBase, mdm=mdm, mdmLsAutoPassPasswd=mdmLsAutoPassPasswd, mdmTeInConnAttemptFail=mdmTeInConnAttemptFail, mdmDiDataModeEchoEna=mdmDiDataModeEchoEna, mdmCsIndex=mdmCsIndex, mdmArIndex=mdmArIndex, mdmEvFallBacks=mdmEvFallBacks, mdmCsCallStartTime=mdmCsCallStartTime, mdmEvMgmtBusFailures=mdmEvMgmtBusFailures, mdmScHiFreqEq=mdmScHiFreqEq, mdmCsInitialTxLinkRate=mdmCsInitialTxLinkRate, mdmCdResult=mdmCdResult, mdmTfCnotchFarNearSts=mdmTfCnotchFarNearSts, mdmScEntry=mdmScEntry, mdmDiResultCodePauseDis=mdmDiResultCodePauseDis, mdmCsSecurityUserName=mdmCsSecurityUserName, mdmEcV42MnpHandshake=mdmEcV42MnpHandshake, mdmDiCdOverride=mdmDiCdOverride, mdmCsX2signature=mdmCsX2signature, mdmLsForcePromptEnable=mdmLsForcePromptEnable, mdmSts=mdmSts, mdmTfRspndrTable=mdmTfRspndrTable, mdmScV32TerboModeEnable=mdmScV32TerboModeEnable, mdmTeInConnTerminated=mdmTeInConnTerminated, mdmLiSrc=mdmLiSrc, mdmArDialBackRestrNum=mdmArDialBackRestrNum, mdmDcEntry=mdmDcEntry, mdmCcDefltPRISlot=mdmCcDefltPRISlot, mdmCsBackChannelRate=mdmCsBackChannelRate, mdmLiTransmitLevel=mdmLiTransmitLevel, mdmTfV54=mdmTfV54, mdmCsFallbackEnabled=mdmCsFallbackEnabled, mdmIDTable=mdmIDTable, mdmArDteRingNoAnswer=mdmArDteRingNoAnswer, mdmCsQNonLinCdRx=mdmCsQNonLinCdRx, mdmTfIndex=mdmTfIndex, mdmDiCarriageRetChar=mdmDiCarriageRetChar, mdmCcQuietResultCodes=mdmCcQuietResultCodes, mdmCcCarrierAccessCode2=mdmCcCarrierAccessCode2, mdmCeMnp10Dis=mdmCeMnp10Dis, mdmArAttmpLoginByBlistUsr=mdmArAttmpLoginByBlistUsr, mdmScLinkRateAmpU=mdmScLinkRateAmpU, mdmScVFCSymRate2800=mdmScVFCSymRate2800, mdmTfRxFreq=mdmTfRxFreq, mdmArResetByDte=mdmArResetByDte, mdmScBell208=mdmScBell208, mdmEvInConnectEstabs=mdmEvInConnectEstabs, mdmCeComp=mdmCeComp, mdmCeTable=mdmCeTable, mdmCcAfaxMaxRateSrvOpt21=mdmCcAfaxMaxRateSrvOpt21, mdmDiDtrOverride=mdmDiDtrOverride, mdmSCV8CallIndicator=mdmSCV8CallIndicator, mdmCsOctetsSent=mdmCsOctetsSent, mdmTfEntry=mdmTfEntry, mdmCcT1DialInDnisDig=mdmCcT1DialInDnisDig, mdmCcEnableV120v42Bis=mdmCcEnableV120v42Bis, mdmTeDteRingNoAns=mdmTeDteRingNoAns, mdmTfCnotchNearFarLvl=mdmTfCnotchNearFarLvl, usr=usr, mdmScVFCShaping=mdmScVFCShaping, mdmCsQCarrierOffset=mdmCsQCarrierOffset, mdmScBackChanRate=mdmScBackChanRate, mdmEcIndex=mdmEcIndex, mdmTeNoLoopCurrent=mdmTeNoLoopCurrent, mdmTf0dB1004NearFarSts=mdmTf0dB1004NearFarSts, mdmCsFinalTxLinkRate=mdmCsFinalTxLinkRate, mdmCsQPreemphTx=mdmCsQPreemphTx, mdmEvOutTotalBytesRx=mdmEvOutTotalBytesRx, mdmCsLineReversalQty=mdmCsLineReversalQty, mdmTeNoDialTone=mdmTeNoDialTone, mdmArNoLoopCurrent=mdmArNoLoopCurrent, mdmCcT1CallInitStrUse=mdmCcT1CallInitStrUse, mdmTfRspndrEntry=mdmTfRspndrEntry, mdmDiTransmitFlowCntl=mdmDiTransmitFlowCntl, mdmEvEntry=mdmEvEntry, mdmArFbacksAtThresh=mdmArFbacksAtThresh, mdmCsQPreemphRx=mdmCsQPreemphRx, mdmTfSigNoiseFarNearSts=mdmTfSigNoiseFarNearSts, mdmEvInTotalBytesRx=mdmEvInTotalBytesRx, mdmEvInTotalBytesTx=mdmEvInTotalBytesTx, mdmDcTable=mdmDcTable, mdmTf0dB1004FarNearSts=mdmTf0dB1004FarNearSts, mdmCsModulationType=mdmCsModulationType, mdmCcAtzPbHandling=mdmCcAtzPbHandling, mdmCsTable=mdmCsTable, mdmCeIndex=mdmCeIndex, mdmTe105ResponderTest=mdmTe105ResponderTest, mdmTfTxFreq=mdmTfTxFreq, mdmScVFCSymRate2743=mdmScVFCSymRate2743, mdmDiAtString=mdmDiAtString, mdmScVFCPreEmphasis=mdmScVFCPreEmphasis, mdmDiDsrOverride=mdmDiDsrOverride, mdmCcTable=mdmCcTable, mdmCsQShapingRx=mdmCsQShapingRx, mdmCsQRxLevel=mdmCsQRxLevel, mdmDcIndex=mdmDcIndex, mdmScV32UnencodedMod=mdmScV32UnencodedMod, mdmTePbClockLossEvent=mdmTePbClockLossEvent, mdmArConnectAttemptFail=mdmArConnectAttemptFail, mdmtTfSigNoiseFarNearLvl=mdmtTfSigNoiseFarNearLvl, mdmCeDceBitraLim=mdmCeDceBitraLim, mdmCcPhoneString0=mdmCcPhoneString0, mdmCe=mdmCe, mdmCsLastNumberDialedOut=mdmCsLastNumberDialedOut, mdmDi=mdmDi, mdmCsQCellTxLevelLow=mdmCsQCellTxLevelLow, mdmScPhExclusionDel=mdmScPhExclusionDel, mdmCcMnpWithV32=mdmCcMnpWithV32, mdmLiLeasedLineRestDelay=mdmLiLeasedLineRestDelay, mdmLi=mdmLi, mdmHsDtrDsrDelay=mdmHsDtrDsrDelay, mdmTeConnLimitExpired=mdmTeConnLimitExpired, mdmEcMnpUnusual=mdmEcMnpUnusual, mdmCdForce=mdmCdForce, mdmTf2804NearFarSts=mdmTf2804NearFarSts, mdmCsTxMinSpeed=mdmCsTxMinSpeed, mdmScHighSpeed=mdmScHighSpeed)
mibBuilder.exportSymbols("MDM-MIB", mdmCsQSNRLevelCurr=mdmCsQSNRLevelCurr, mdmEvTable=mdmEvTable, mdmCsLastCallingPartyNum=mdmCsLastCallingPartyNum, mdmCsPriCardSpanLine=mdmCsPriCardSpanLine, mdmCcT1DialToneType=mdmCcT1DialToneType, mdmScV32Bis=mdmScV32Bis, mdmCeEntry=mdmCeEntry, mdmArConnectTimeExpire=mdmArConnectTimeExpire, mdmLiRemoteEscChar=mdmLiRemoteEscChar, mdmScLowerSpeedMin=mdmScLowerSpeedMin, mdmCcV32ToneDuration=mdmCcV32ToneDuration, mdmCeOperDis=mdmCeOperDis, mdmCeDceStartRate=mdmCeDceStartRate, mdmScSelectiveReject=mdmScSelectiveReject, mdmTeTable=mdmTeTable, mdmStsIndex=mdmStsIndex, mdmLsTable=mdmLsTable, mdmCsQSNR=mdmCsQSNR, mdmScTable=mdmScTable, mdmLsSecurityEnable=mdmLsSecurityEnable, mdmCsRetrainsGranted=mdmCsRetrainsGranted, mdmCsQPrecodingTx=mdmCsQPrecodingTx, mdmEvOutConnectTime=mdmEvOutConnectTime, mdmTfRspndrIndex=mdmTfRspndrIndex, mdmIDHardwareRev=mdmIDHardwareRev, mdmCsQCarrFreqRx=mdmCsQCarrFreqRx, mdmScVFCNonLinearCoding=mdmScVFCNonLinearCoding, mdmAutoResponse=mdmAutoResponse, mdmTfToneIndex=mdmTfToneIndex, mdmScTxPwrLvl=mdmScTxPwrLvl, mdmEcEntry=mdmEcEntry, mdmEtDtrTrueThresh=mdmEtDtrTrueThresh, mdmEcMnp4Dis=mdmEcMnp4Dis, mdmCsTxMaxSpeed=mdmCsTxMaxSpeed, mdmCcPhoneString3=mdmCcPhoneString3, mdmTf0dB1004FarNearLvl=mdmTf0dB1004FarNearLvl, mdmLiCarrierRecDelay=mdmLiCarrierRecDelay, mdmEtBlerThresh=mdmEtBlerThresh, mdmLiDialMode=mdmLiDialMode, mdmScX2Symmetric=mdmScX2Symmetric, mdmScX2Client=mdmScX2Client, mdmCdTable=mdmCdTable, mdmTfTxAmpl=mdmTfTxAmpl, mdmLiRemoteEscGuardTime=mdmLiRemoteEscGuardTime, mdmCsQNonLinCdTx=mdmCsQNonLinCdTx, mdmArIncomConnectTerm=mdmArIncomConnectTerm, mdmCeV42CellSite=mdmCeV42CellSite, mdmTeConnAttemptFailure=mdmTeConnAttemptFailure, mdmCcCallingInitStr3=mdmCcCallingInitStr3, mdmHsIndex=mdmHsIndex, mdmCcResultCodeOptions=mdmCcResultCodeOptions, mdmArTimer4=mdmArTimer4, mdmMaChangeIndicator=mdmMaChangeIndicator, mdmCcCarrierAccessCode1=mdmCcCarrierAccessCode1, mdmCcAnswerInOrigMode=mdmCcAnswerInOrigMode, mdmCsInitialRxLinkRate=mdmCsInitialRxLinkRate, mdmDiEiaLineStatus=mdmDiEiaLineStatus, mdmCcGhostPortLockEna=mdmCcGhostPortLockEna, mdmLsIndex=mdmLsIndex, mdmTfRxAmpl=mdmTfRxAmpl, mdmScVFC64S4DMapping=mdmScVFC64S4DMapping, mdmCsFallbackQty=mdmCsFallbackQty, mdmTfSigNoiseNearFarSts=mdmTfSigNoiseNearFarSts, mdmScV90Digital=mdmScV90Digital, mdmCsX2Status=mdmCsX2Status, mdmScVFCSymRate2400=mdmScVFCSymRate2400, mdmTf0dB1004NearFarLvl=mdmTf0dB1004NearFarLvl, mdmCsCompressionType=mdmCsCompressionType, mdmScFallback=mdmScFallback, mdmArOutgoConnectEstab=mdmArOutgoConnectEstab, mdmScVFCTxLevelDeviation=mdmScVFCTxLevelDeviation, mdmArMdmRingNoAnswer=mdmArMdmRingNoAnswer, mdmArOutgoConnectTerm=mdmArOutgoConnectTerm, mdmCsCharsReceived=mdmCsCharsReceived, mdmCcMgmtSysMsgDis=mdmCcMgmtSysMsgDis, mdmStsPbClock=mdmStsPbClock, mdmCsCallRefNum=mdmCsCallRefNum, mdmDiSerialFormat=mdmDiSerialFormat, mdmCsQShapingTx=mdmCsQShapingTx, mdmSc300=mdmSc300, mdmScHiSpeedModulation=mdmScHiSpeedModulation, mdmCcAutoDialOnDtrEna=mdmCcAutoDialOnDtrEna, mdmCsConnectFailReason=mdmCsConnectFailReason, mdmTeDtrFalse=mdmTeDtrFalse, mdmCsQTxLevel=mdmCsQTxLevel, mdmCcMnpWith1200=mdmCcMnpWith1200, mdmCsDisconnectReason=mdmCsDisconnectReason, mdmCeMnp10FallbackDis=mdmCeMnp10FallbackDis, mdmTf404NearFarLvl=mdmTf404NearFarLvl, mdmCsRxMaxSpeed=mdmCsRxMaxSpeed, mdmScV34pModeEnable=mdmScV34pModeEnable, mdmIDSupervisorDate=mdmIDSupervisorDate, mdmCcEscCodeRsp=mdmCcEscCodeRsp, mdmCsDigitalPadAttenuated=mdmCsDigitalPadAttenuated, mdmCcInactivityTimer=mdmCcInactivityTimer, mdmDiIndex=mdmDiIndex, mdmEvWatchdogTimouts=mdmEvWatchdogTimouts, mdmLiIndex=mdmLiIndex, mdmTf2804NearFarLvl=mdmTf2804NearFarLvl, mdmCdParam=mdmCdParam, mdmLiAnswerTone=mdmLiAnswerTone, mdmCcArqBufWait=mdmCcArqBufWait, mdmDiDelAsBackspace=mdmDiDelAsBackspace, mdmTeIndex=mdmTeIndex, mdmScV34Fallback=mdmScV34Fallback, mdmCsRings=mdmCsRings, mdmScPiafs=mdmScPiafs, mdmCsStatus=mdmCsStatus, mdmScVFCSymRate3200=mdmScVFCSymRate3200, mdmTeDialInCallDur=mdmTeDialInCallDur, mdmScLinkRateSelect=mdmScLinkRateSelect, mdmDcDataCompression=mdmDcDataCompression, mdmCcIntBlackListDis=mdmCcIntBlackListDis, mdmDiResetOnDtrEna=mdmDiResetOnDtrEna, mdmCsQCellTxLevelCurr=mdmCsQCellTxLevelCurr, mdmCcArqResultCodeMode=mdmCcArqResultCodeMode, mdmSc1200=mdmSc1200, mdmLiTransmiter=mdmLiTransmiter, mdmCdReqId=mdmCdReqId, mdmScVFC16S4DMapping=mdmScVFC16S4DMapping, mdmCcDialDelay=mdmCcDialDelay, mdmTf404FarNearSts=mdmTf404FarNearSts, mdmArPacketBusLost=mdmArPacketBusLost, mdmTeFallbkCountAtThresh=mdmTeFallbkCountAtThresh, mdmCcMiMic=mdmCcMiMic, mdmCsTDMTimeSlot=mdmCsTDMTimeSlot, mdmStsEntry=mdmStsEntry, mdmCc=mdmCc, mdmCcAutoDialOnPwrUpEna=mdmCcAutoDialOnPwrUpEna, mdmCsCallType=mdmCsCallType, mdmLiRemPassword1=mdmLiRemPassword1, mdmLsFallbackPromptEnable=mdmLsFallbackPromptEnable, mdmTf404NearFarSts=mdmTf404NearFarSts, mdmTf404FarNearLvl=mdmTf404FarNearLvl, mdmTeOutConnTerminated=mdmTeOutConnTerminated, nas=nas, mdmEvOutConnectTerms=mdmEvOutConnectTerms, mdmCsQCoding=mdmCsQCoding, mdmArDtrFalse=mdmArDtrFalse, mdmScV34ModeEnable=mdmScV34ModeEnable, mdmTfToneEntry=mdmTfToneEntry, mdmMaIndex=mdmMaIndex, mdmCcResponseMode=mdmCcResponseMode, mdmDiV25DteDataRate=mdmDiV25DteDataRate, mdmEtEntry=mdmEtEntry, mdmEtIndex=mdmEtIndex, mdmIDSupervisorSwRev=mdmIDSupervisorSwRev, mdmArDialOutLoginFail=mdmArDialOutLoginFail, mdmArDtrTrue=mdmArDtrTrue, mdmSc2400=mdmSc2400, mdmCeShortFormRules=mdmCeShortFormRules, mdmArPacketBusActive=mdmArPacketBusActive, mdmEvInConnectTerms=mdmEvInConnectTerms, mdmTeResetByDTE=mdmTeResetByDTE, mdmScVFCSymRate3000=mdmScVFCSymRate3000, mdmEvBlers=mdmEvBlers, mdmEtConnTimeLimit=mdmEtConnTimeLimit, mdmEvNoLoops=mdmEvNoLoops, mdmDiRemAccessMsg=mdmDiRemAccessMsg, mdmArDialBackRestModem=mdmArDialBackRestModem, mdmDiDsrPulseTime=mdmDiDsrPulseTime, mdmIDCountry=mdmIDCountry, mdmtTfSigNoiseNearFarLvl=mdmtTfSigNoiseNearFarLvl, mdmLsDialBackEnable=mdmLsDialBackEnable, mdmArUserBlacklisted=mdmArUserBlacklisted, mdmEvOutTotalBytesTx=mdmEvOutTotalBytesTx, mdmCeMnp10FallforDis=mdmCeMnp10FallforDis, mdmScV23=mdmScV23, mdmEvNoTones=mdmEvNoTones, mdmCsEqualizationType=mdmCsEqualizationType, mdmTeOutConnAttemptFail=mdmTeOutConnAttemptFail, mdmCcPhoneString1=mdmCcPhoneString1, mdmCsQTrellisRx=mdmCsQTrellisRx, mdmTfDialInToneTest=mdmTfDialInToneTest, mdmCsQNearEcho=mdmCsQNearEcho, mdmArMgtBusFailure=mdmArMgtBusFailure, mdmCsQPacketSizeLow=mdmCsQPacketSizeLow, mdmCsQFarEcho=mdmCsQFarEcho, mdmCdFunction=mdmCdFunction, mdmCsInitModulationType=mdmCsInitModulationType, mdmCsErrorControlType=mdmCsErrorControlType, mdmHsEntry=mdmHsEntry, mdmCcNoPbNoConnEna=mdmCcNoPbNoConnEna, mdmIDModel=mdmIDModel, mdmTfCmsgFarNearSts=mdmTfCmsgFarNearSts, mdmCcT1CallSetupProc=mdmCcT1CallSetupProc, mdmCsBlocksSent=mdmCsBlocksSent, mdmScVFCSymRate3429=mdmScVFCSymRate3429, mdmScIndex=mdmScIndex, mdmEtTable=mdmEtTable, mdmEc=mdmEc, mdmCcCallingInitStr4=mdmCcCallingInitStr4, mdmLsLocAccPasswdEnable=mdmLsLocAccPasswdEnable, mdmCd=mdmCd, mdmDiTable=mdmDiTable, mdmIDHardwareSerNum=mdmIDHardwareSerNum, mdmEvDtrFalses=mdmEvDtrFalses, mdmCcOffHookRestrict=mdmCcOffHookRestrict, mdmCcDataOverVoice=mdmCcDataOverVoice, mdmLiLeasedLine=mdmLiLeasedLine, mdmTeInConnEstablished=mdmTeInConnEstablished, mdmCsQSNRLevelLow=mdmCsQSNRLevelLow, mdmDiDteDataRateMode=mdmDiDteDataRateMode, mdmHs=mdmHs, mdmCsCharsLost=mdmCsCharsLost, mdmScVFC32S2DMapping=mdmScVFC32S2DMapping, mdmArNoDialTone=mdmArNoDialTone, mdmCsQCellTxLevelHigh=mdmCsQCellTxLevelHigh, mdmCeDbNoEtcDis=mdmCeDbNoEtcDis, mdmMaEntry=mdmMaEntry, mdmCsRxMinSpeed=mdmCsRxMinSpeed, mdmDiSlot=mdmDiSlot, mdmCcPhoneString2=mdmCcPhoneString2, mdmLiTable=mdmLiTable, mdmDiBreakLen=mdmDiBreakLen, mdmEvIndex=mdmEvIndex, mdmLiRemPassword0=mdmLiRemPassword0, mdmLiDteRxDataDelay=mdmLiDteRxDataDelay, mdmLiPulseMakeBreak=mdmLiPulseMakeBreak, mdmDiDefaultDteDataRate=mdmDiDefaultDteDataRate, mdmCcIdleDiscPatt=mdmCcIdleDiscPatt, mdmCsCallDuration=mdmCsCallDuration, mdmDiCmdLocalEchoEna=mdmDiCmdLocalEchoEna, mdmTfV54Errors=mdmTfV54Errors, mdmEvConnectTimouts=mdmEvConnectTimouts, mdmIDIoProcessorSwRev=mdmIDIoProcessorSwRev, mdmEvInConnectTime=mdmEvInConnectTime, mdmCsBChannelUsed=mdmCsBChannelUsed, mdmCcDataFaxMode=mdmCcDataFaxMode, mdmEv=mdmEv, mdmTeDteXmitDataIdle=mdmTeDteXmitDataIdle, mdmDiXoffChar=mdmDiXoffChar, mdmScLowerSpeedMax=mdmScLowerSpeedMax, mdmHsDtrDcdDelay=mdmHsDtrDcdDelay, mdmIDDataPumpSwRev=mdmIDDataPumpSwRev, mdmLsAccountPasswd=mdmLsAccountPasswd, mdmLiGuardTone=mdmLiGuardTone, mdmHsTable=mdmHsTable, mdmScTxPwrLvlApplied=mdmScTxPwrLvlApplied, mdmLsLocalAccessPasswd=mdmLsLocalAccessPasswd, mdmTfTable=mdmTfTable, mdmArDialInLoginFail=mdmArDialInLoginFail, mdmCeV42EtcDis=mdmCeV42EtcDis, mdmSc=mdmSc, mdmScV90AllDigital=mdmScV90AllDigital, mdmCdMgtStationId=mdmCdMgtStationId, mdmCcBillingDelayPeriod=mdmCcBillingDelayPeriod, mdmCsRetrainsRequested=mdmCsRetrainsRequested, mdmEvResetByDtes=mdmEvResetByDtes, mdmCcAtRecognition=mdmCcAtRecognition, mdmCsQPacketSizeCurr=mdmCsQPacketSizeCurr, mdmLiCarrierLoss=mdmLiCarrierLoss, mdmCsQPrecodingRx=mdmCsQPrecodingRx, mdmCsBlerQty=mdmCsBlerQty)
mibBuilder.exportSymbols("MDM-MIB", mdmCcDtmfTerminationTone=mdmCcDtmfTerminationTone, mdmScPiafsV42bis=mdmScPiafsV42bis, mdmCsCharsSent=mdmCsCharsSent, mdmTf2804FarNearSts=mdmTf2804FarNearSts, mdmTePbClockRestoreEvent=mdmTePbClockRestoreEvent, mdmEvDteIdleTimouts=mdmEvDteIdleTimouts, mdmCsTrainingInfo=mdmCsTrainingInfo, mdmEtDtrFalseThresh=mdmEtDtrFalseThresh, mdmLiEntry=mdmLiEntry, mdmTfATG=mdmTfATG, mdmScVFC8S2DMapping=mdmScVFC8S2DMapping, mdmCcMnpTimeout=mdmCcMnpTimeout, mdmDiEntry=mdmDiEntry, mdmHsDialInEnable=mdmHsDialInEnable, mdmCsUpshiftQty=mdmCsUpshiftQty, mdmDiEscCodeGuardTime=mdmDiEscCodeGuardTime, mdmCeMnpxDetPhEna=mdmCeMnpxDetPhEna, mdmDiInterbridgeEna=mdmDiInterbridgeEna, mdmArTimer3=mdmArTimer3, mdmCsBlocksReceived=mdmCsBlocksReceived, mdmTfCmsgNearFarLvl=mdmTfCmsgNearFarLvl, mdmTfCmsgFarNearLvl=mdmTfCmsgFarNearLvl, mdmCsGainHitCount=mdmCsGainHitCount)
