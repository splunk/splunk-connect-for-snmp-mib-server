#
# PySNMP MIB module CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:53:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoVlanList, = mibBuilder.importSymbols("CISCO-TC", "CiscoVlanList")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, Counter64, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, TimeTicks, ObjectIdentity, Bits, Gauge32, Unsigned32, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "TimeTicks", "ObjectIdentity", "Bits", "Gauge32", "Unsigned32", "Integer32", "Counter32")
DisplayString, TruthValue, RowStatus, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention", "TimeStamp")
ciscoResilientEthernetProtocolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 601))
ciscoResilientEthernetProtocolMIB.setRevisions(('2011-01-11 00:00', '2010-10-27 00:00', '2007-05-22 00:00', '2007-02-19 00:00',))
if mibBuilder.loadTexts: ciscoResilientEthernetProtocolMIB.setLastUpdated('201101110000Z')
if mibBuilder.loadTexts: ciscoResilientEthernetProtocolMIB.setOrganization('Cisco Systems, Inc.')
class RepPortType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("notEdge", 1), ("edge", 2), ("edgePrimary", 3), ("edgeNoNeighbor", 4), ("edgeNoNeighborPrimary", 5))

class RepSegmentId(TextualConvention, Unsigned32):
    status = 'current'

class RepSegmentList(TextualConvention, OctetString):
    status = 'current'

ciscoRepMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 0))
ciscoRepMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 1))
ciscoRepMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 2))
crepGlobalInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 1))
crepInterfaceConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2))
crepSegmentConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3))
crepSegmentTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1), )
if mibBuilder.loadTexts: crepSegmentTable.setStatus('current')
crepSegmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepSegmentId"))
if mibBuilder.loadTexts: crepSegmentEntry.setStatus('current')
crepSegmentId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1, 1, 1), RepSegmentId())
if mibBuilder.loadTexts: crepSegmentId.setStatus('current')
crepSegmentInterface1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepSegmentInterface1.setStatus('current')
crepSegmentInterface2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepSegmentInterface2.setStatus('current')
crepSegmentComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepSegmentComplete.setStatus('current')
crepSegmentPreempt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crepSegmentPreempt.setStatus('current')
crepSegmentPreemptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("preemptSuccessful", 2), ("preemptFailure", 3), ("preemptTrigger", 4), ("preemptTriggerFailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepSegmentPreemptStatus.setStatus('current')
crepInterfaceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1), )
if mibBuilder.loadTexts: crepInterfaceConfigTable.setStatus('current')
crepInterfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfIndex"))
if mibBuilder.loadTexts: crepInterfaceConfigEntry.setStatus('current')
crepIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: crepIfIndex.setStatus('current')
crepIfSegmentId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 2), RepSegmentId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfSegmentId.setStatus('current')
crepIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("initDown", 2), ("noNeighbour", 3), ("oneWay", 4), ("twoWay", 5), ("flapping", 6), ("wait", 7), ("unknown", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepIfOperStatus.setStatus('current')
crepIfPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("failedPort", 1), ("alternatePort", 2), ("openPort", 3), ("failedPortNoNeighbor", 4), ("failedPortLogicalOpen", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepIfPortRole.setStatus('current')
crepIfPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepIfPortID.setStatus('current')
crepIfAdminEdgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 6), RepPortType().clone('notEdge')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfAdminEdgePortType.setStatus('current')
crepIfOperEdgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 7), RepPortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepIfOperEdgePortType.setStatus('current')
crepIfPreferredConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfPreferredConfig.setStatus('current')
crepifBlockedVlans1k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 9), CiscoVlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepifBlockedVlans1k.setStatus('current')
crepifBlockedVlans2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 10), CiscoVlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepifBlockedVlans2k.setStatus('current')
crepifBlockedVlans3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 11), CiscoVlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepifBlockedVlans3k.setStatus('current')
crepifBlockedVlans4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 12), CiscoVlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepifBlockedVlans4k.setStatus('current')
crepLoadBalanceBlockPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("offset", 2), ("portId", 3), ("prefFlag", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepLoadBalanceBlockPortType.setStatus('current')
crepBlockPortNumInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-256, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepBlockPortNumInfo.setStatus('current')
crepBlockPortIdInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepBlockPortIdInfo.setStatus('current')
crepIfPreemptDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300)).clone(-1)).setUnits('delay in seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfPreemptDelayTimer.setStatus('current')
crepIfStcnPropagateToSTP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfStcnPropagateToSTP.setStatus('current')
crepIfStcnPropagateToOtherSegs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 18), RepSegmentList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfStcnPropagateToOtherSegs.setStatus('current')
crepIfStcnPropagateToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 19), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfStcnPropagateToIf.setStatus('current')
crepIfConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 1, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crepIfConfigRowStatus.setStatus('current')
crepInterfaceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2), )
if mibBuilder.loadTexts: crepInterfaceStatsTable.setStatus('current')
crepInterfaceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1), )
crepInterfaceConfigEntry.registerAugmentions(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepInterfaceStatsEntry"))
crepInterfaceStatsEntry.setIndexNames(*crepInterfaceConfigEntry.getIndexNames())
if mibBuilder.loadTexts: crepInterfaceStatsEntry.setStatus('current')
crepCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepCounterDiscontinuityTime.setStatus('current')
crepLslRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepLslRxPdus.setStatus('current')
crepLslTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepLslTxPdus.setStatus('current')
crepHflRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepHflRxPdus.setStatus('current')
crepHflTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepHflTxPdus.setStatus('current')
crepBpaTlvRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepBpaTlvRxPackets.setStatus('current')
crepBpaTlvTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepBpaTlvTxPackets.setStatus('current')
crepBpaStcnLslRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepBpaStcnLslRxPackets.setStatus('current')
crepBpaStcnLslTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepBpaStcnLslTxPackets.setStatus('current')
crepBpaStcnHflRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepBpaStcnHflRxPackets.setStatus('current')
crepBpaStcnHflTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepBpaStcnHflTxPackets.setStatus('current')
crepEpaElectionTlvRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepEpaElectionTlvRxPackets.setStatus('current')
crepEpaElectionTlvTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepEpaElectionTlvTxPackets.setStatus('current')
crepEpaCommandTlvRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepEpaCommandTlvRxPackets.setStatus('current')
crepEpaCommandTlvTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepEpaCommandTlvTxPackets.setStatus('current')
crepEpaInfoTlvRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepEpaInfoTlvRxPackets.setStatus('current')
crepEpaInfoTlvTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepEpaInfoTlvTxPackets.setStatus('current')
crepVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepVersion.setStatus('current')
crepAdminVlan = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 1, 2), VlanId().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crepAdminVlan.setStatus('current')
crepNotifsEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crepNotifsEnable.setStatus('current')
crepGlobalRepNotifsRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('notifications per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: crepGlobalRepNotifsRate.setStatus('current')
crepMinSegmentId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 1, 5), RepSegmentId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepMinSegmentId.setStatus('current')
crepMaxSegmentId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 601, 1, 1, 6), RepSegmentId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crepMaxSegmentId.setStatus('current')
crepLinkStatus = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 601, 0, 1)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfSegmentId"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfOperStatus"))
if mibBuilder.loadTexts: crepLinkStatus.setStatus('current')
crepPreemptionStatus = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 601, 0, 2)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepSegmentPreemptStatus"))
if mibBuilder.loadTexts: crepPreemptionStatus.setStatus('current')
crepPortRoleChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 601, 0, 3)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfSegmentId"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfPortRole"))
if mibBuilder.loadTexts: crepPortRoleChange.setStatus('current')
ciscoRepMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 2, 1))
ciscoRepMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 601, 2, 2))
ciscoRepMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 601, 2, 1, 1)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "ciscoRepGlobalGroup"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "ciscoRepNotificationGroup"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "ciscoRepInterfaceGroup"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "ciscoRepSegmentGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRepMIBCompliance = ciscoRepMIBCompliance.setStatus('current')
ciscoRepGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 601, 2, 2, 1)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepVersion"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepAdminVlan"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepNotifsEnable"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepGlobalRepNotifsRate"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepMinSegmentId"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepMaxSegmentId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRepGlobalGroup = ciscoRepGlobalGroup.setStatus('current')
ciscoRepInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 601, 2, 2, 2)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfSegmentId"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfOperStatus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfPortRole"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfPortID"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfAdminEdgePortType"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfOperEdgePortType"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfPreferredConfig"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepifBlockedVlans1k"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepifBlockedVlans2k"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepifBlockedVlans3k"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepifBlockedVlans4k"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepLoadBalanceBlockPortType"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBlockPortNumInfo"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBlockPortIdInfo"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfPreemptDelayTimer"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfStcnPropagateToSTP"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfStcnPropagateToOtherSegs"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfStcnPropagateToIf"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepIfConfigRowStatus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepCounterDiscontinuityTime"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepLslRxPdus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepLslTxPdus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepHflRxPdus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepHflTxPdus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBpaTlvRxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBpaTlvTxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBpaStcnLslRxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBpaStcnLslTxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBpaStcnHflRxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepBpaStcnHflTxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepEpaElectionTlvRxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepEpaElectionTlvTxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepEpaCommandTlvRxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepEpaCommandTlvTxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepEpaInfoTlvRxPackets"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepEpaInfoTlvTxPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRepInterfaceGroup = ciscoRepInterfaceGroup.setStatus('current')
ciscoRepNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 601, 2, 2, 3)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepLinkStatus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepPreemptionStatus"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepPortRoleChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRepNotificationGroup = ciscoRepNotificationGroup.setStatus('current')
ciscoRepSegmentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 601, 2, 2, 4)).setObjects(("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepSegmentInterface1"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepSegmentInterface2"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepSegmentComplete"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepSegmentPreempt"), ("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", "crepSegmentPreemptStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRepSegmentGroup = ciscoRepSegmentGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-RESILIENT-ETHERNET-PROTOCOL-MIB", crepIfStcnPropagateToOtherSegs=crepIfStcnPropagateToOtherSegs, crepHflRxPdus=crepHflRxPdus, crepIfOperEdgePortType=crepIfOperEdgePortType, crepSegmentPreemptStatus=crepSegmentPreemptStatus, crepBlockPortNumInfo=crepBlockPortNumInfo, crepInterfaceConfig=crepInterfaceConfig, crepInterfaceStatsEntry=crepInterfaceStatsEntry, ciscoRepMIBConform=ciscoRepMIBConform, RepSegmentId=RepSegmentId, crepNotifsEnable=crepNotifsEnable, crepLinkStatus=crepLinkStatus, crepBpaStcnLslTxPackets=crepBpaStcnLslTxPackets, crepBlockPortIdInfo=crepBlockPortIdInfo, crepIfPreemptDelayTimer=crepIfPreemptDelayTimer, crepInterfaceStatsTable=crepInterfaceStatsTable, crepifBlockedVlans1k=crepifBlockedVlans1k, PYSNMP_MODULE_ID=ciscoResilientEthernetProtocolMIB, crepSegmentInterface2=crepSegmentInterface2, crepInterfaceConfigEntry=crepInterfaceConfigEntry, crepIfPreferredConfig=crepIfPreferredConfig, crepSegmentInterface1=crepSegmentInterface1, ciscoRepMIBCompliances=ciscoRepMIBCompliances, ciscoRepMIBGroups=ciscoRepMIBGroups, crepCounterDiscontinuityTime=crepCounterDiscontinuityTime, crepifBlockedVlans2k=crepifBlockedVlans2k, ciscoRepMIBNotifs=ciscoRepMIBNotifs, crepIfPortRole=crepIfPortRole, crepIfConfigRowStatus=crepIfConfigRowStatus, crepSegmentEntry=crepSegmentEntry, crepBpaTlvTxPackets=crepBpaTlvTxPackets, crepBpaTlvRxPackets=crepBpaTlvRxPackets, ciscoResilientEthernetProtocolMIB=ciscoResilientEthernetProtocolMIB, crepEpaCommandTlvRxPackets=crepEpaCommandTlvRxPackets, crepVersion=crepVersion, RepSegmentList=RepSegmentList, crepSegmentConfig=crepSegmentConfig, crepifBlockedVlans4k=crepifBlockedVlans4k, crepifBlockedVlans3k=crepifBlockedVlans3k, crepAdminVlan=crepAdminVlan, crepLslTxPdus=crepLslTxPdus, crepGlobalInfo=crepGlobalInfo, crepSegmentTable=crepSegmentTable, crepMaxSegmentId=crepMaxSegmentId, crepPreemptionStatus=crepPreemptionStatus, ciscoRepNotificationGroup=ciscoRepNotificationGroup, crepSegmentPreempt=crepSegmentPreempt, crepPortRoleChange=crepPortRoleChange, crepBpaStcnHflTxPackets=crepBpaStcnHflTxPackets, crepBpaStcnLslRxPackets=crepBpaStcnLslRxPackets, crepMinSegmentId=crepMinSegmentId, crepIfStcnPropagateToIf=crepIfStcnPropagateToIf, crepSegmentComplete=crepSegmentComplete, crepIfOperStatus=crepIfOperStatus, crepEpaInfoTlvRxPackets=crepEpaInfoTlvRxPackets, ciscoRepSegmentGroup=ciscoRepSegmentGroup, crepEpaCommandTlvTxPackets=crepEpaCommandTlvTxPackets, crepSegmentId=crepSegmentId, crepIfSegmentId=crepIfSegmentId, crepIfPortID=crepIfPortID, crepEpaInfoTlvTxPackets=crepEpaInfoTlvTxPackets, crepEpaElectionTlvTxPackets=crepEpaElectionTlvTxPackets, crepGlobalRepNotifsRate=crepGlobalRepNotifsRate, ciscoRepMIBObjects=ciscoRepMIBObjects, crepBpaStcnHflRxPackets=crepBpaStcnHflRxPackets, ciscoRepMIBCompliance=ciscoRepMIBCompliance, crepIfStcnPropagateToSTP=crepIfStcnPropagateToSTP, crepEpaElectionTlvRxPackets=crepEpaElectionTlvRxPackets, ciscoRepInterfaceGroup=ciscoRepInterfaceGroup, crepIfAdminEdgePortType=crepIfAdminEdgePortType, crepLoadBalanceBlockPortType=crepLoadBalanceBlockPortType, ciscoRepGlobalGroup=ciscoRepGlobalGroup, crepIfIndex=crepIfIndex, crepInterfaceConfigTable=crepInterfaceConfigTable, crepLslRxPdus=crepLslRxPdus, RepPortType=RepPortType, crepHflTxPdus=crepHflTxPdus)
