#
# PySNMP MIB module ALCATEL-IND1-IGMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-IGMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Igmp, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Igmp")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType, InetAddressIPv4 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetAddressIPv4")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, Counter32, NotificationType, Gauge32, ObjectIdentity, iso, Integer32, MibIdentifier, IpAddress, Bits, TimeTicks, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "Counter32", "NotificationType", "Gauge32", "ObjectIdentity", "iso", "Integer32", "MibIdentifier", "IpAddress", "Bits", "TimeTicks", "ModuleIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
alcatelIND1IgmpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1))
alcatelIND1IgmpMIB.setRevisions(('2011-02-23 00:00', '2009-03-31 00:00', '2008-09-10 00:00', '2008-08-08 00:00', '2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1IgmpMIB.setLastUpdated('201102230000Z')
if mibBuilder.loadTexts: alcatelIND1IgmpMIB.setOrganization('Alcatel-Lucent')
alcatelIND1IgmpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1))
alaIgmp = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1))
alaIgmpStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpStatus.setStatus('current')
alaIgmpQuerying = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpQuerying.setStatus('current')
alaIgmpSpoofing = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpSpoofing.setStatus('current')
alaIgmpZapping = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpZapping.setStatus('current')
alaIgmpVersion = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 5), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVersion.setStatus('current')
alaIgmpRobustness = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 6), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpRobustness.setStatus('current')
alaIgmpQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 7), Unsigned32().clone(125)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpQueryInterval.setStatus('current')
alaIgmpQueryResponseInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 8), Unsigned32().clone(100)).setUnits('tenths of seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpQueryResponseInterval.setStatus('current')
alaIgmpLastMemberQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 9), Unsigned32().clone(10)).setUnits('tenths of seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpLastMemberQueryInterval.setStatus('current')
alaIgmpRouterTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 10), Unsigned32().clone(90)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpRouterTimeout.setStatus('current')
alaIgmpSourceTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 11), Unsigned32().clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpSourceTimeout.setStatus('current')
alaIgmpProxying = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpProxying.setStatus('current')
alaIgmpUnsolicitedReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 13), Unsigned32().clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpUnsolicitedReportInterval.setStatus('current')
alaIgmpQuerierForwarding = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpQuerierForwarding.setStatus('current')
alaIgmpMaxGroupLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpMaxGroupLimit.setStatus('current')
alaIgmpMaxGroupExceedAction = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("drop", 1), ("replace", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpMaxGroupExceedAction.setStatus('current')
alaIgmpFloodUnknown = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpFloodUnknown.setStatus('current')
alaIgmpHelperAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 18), InetAddressType().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpHelperAddressType.setStatus('current')
alaIgmpHelperAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 19), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpHelperAddress.setStatus('current')
alaIgmpZeroBasedQuery = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpZeroBasedQuery.setStatus('current')
alaIgmpVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2))
alaIgmpVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alaIgmpVlanTable.setStatus('current')
alaIgmpVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanIndex"))
if mibBuilder.loadTexts: alaIgmpVlanEntry.setStatus('current')
alaIgmpVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpVlanIndex.setStatus('current')
alaIgmpVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanStatus.setStatus('current')
alaIgmpVlanQuerying = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanQuerying.setStatus('current')
alaIgmpVlanSpoofing = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanSpoofing.setStatus('current')
alaIgmpVlanZapping = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanZapping.setStatus('current')
alaIgmpVlanVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanVersion.setStatus('current')
alaIgmpVlanRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanRobustness.setStatus('current')
alaIgmpVlanQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanQueryInterval.setStatus('current')
alaIgmpVlanQueryResponseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 9), Unsigned32()).setUnits('tenths of seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanQueryResponseInterval.setStatus('current')
alaIgmpVlanLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 10), Unsigned32()).setUnits('tenths of seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanLastMemberQueryInterval.setStatus('current')
alaIgmpVlanRouterTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 11), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanRouterTimeout.setStatus('current')
alaIgmpVlanSourceTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 12), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanSourceTimeout.setStatus('current')
alaIgmpVlanProxying = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanProxying.setStatus('current')
alaIgmpVlanUnsolicitedReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 14), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanUnsolicitedReportInterval.setStatus('current')
alaIgmpVlanQuerierForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanQuerierForwarding.setStatus('current')
alaIgmpVlanMaxGroupLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanMaxGroupLimit.setStatus('current')
alaIgmpVlanMaxGroupExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("drop", 1), ("replace", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanMaxGroupExceedAction.setStatus('current')
alaIgmpVlanZeroBasedQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpVlanZeroBasedQuery.setStatus('current')
alaIgmpMember = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3))
alaIgmpMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alaIgmpMemberTable.setStatus('current')
alaIgmpMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberIfIndex"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberGroupAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberSourceAddress"))
if mibBuilder.loadTexts: alaIgmpMemberEntry.setStatus('current')
alaIgmpMemberVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpMemberVlan.setStatus('current')
alaIgmpMemberIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpMemberIfIndex.setStatus('current')
alaIgmpMemberGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1, 3), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpMemberGroupAddress.setStatus('current')
alaIgmpMemberSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1, 4), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpMemberSourceAddress.setStatus('current')
alaIgmpMemberMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpMemberMode.setStatus('current')
alaIgmpMemberCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpMemberCount.setStatus('current')
alaIgmpMemberTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 3, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpMemberTimeout.setStatus('current')
alaIgmpStaticMember = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 4))
alaIgmpStaticMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 4, 1), )
if mibBuilder.loadTexts: alaIgmpStaticMemberTable.setStatus('current')
alaIgmpStaticMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 4, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticMemberVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticMemberIfIndex"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticMemberGroupAddress"))
if mibBuilder.loadTexts: alaIgmpStaticMemberEntry.setStatus('current')
alaIgmpStaticMemberVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpStaticMemberVlan.setStatus('current')
alaIgmpStaticMemberIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 4, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpStaticMemberIfIndex.setStatus('current')
alaIgmpStaticMemberGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 4, 1, 1, 3), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpStaticMemberGroupAddress.setStatus('current')
alaIgmpStaticMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 4, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIgmpStaticMemberRowStatus.setStatus('current')
alaIgmpNeighbor = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5))
alaIgmpNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5, 1), )
if mibBuilder.loadTexts: alaIgmpNeighborTable.setStatus('current')
alaIgmpNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpNeighborVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpNeighborIfIndex"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpNeighborHostAddress"))
if mibBuilder.loadTexts: alaIgmpNeighborEntry.setStatus('current')
alaIgmpNeighborVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpNeighborVlan.setStatus('current')
alaIgmpNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpNeighborIfIndex.setStatus('current')
alaIgmpNeighborHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5, 1, 1, 3), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpNeighborHostAddress.setStatus('current')
alaIgmpNeighborCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpNeighborCount.setStatus('current')
alaIgmpNeighborTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 5, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpNeighborTimeout.setStatus('current')
alaIgmpStaticNeighbor = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 6))
alaIgmpStaticNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 6, 1), )
if mibBuilder.loadTexts: alaIgmpStaticNeighborTable.setStatus('current')
alaIgmpStaticNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 6, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticNeighborVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticNeighborIfIndex"))
if mibBuilder.loadTexts: alaIgmpStaticNeighborEntry.setStatus('current')
alaIgmpStaticNeighborVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 6, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpStaticNeighborVlan.setStatus('current')
alaIgmpStaticNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 6, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpStaticNeighborIfIndex.setStatus('current')
alaIgmpStaticNeighborRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 6, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIgmpStaticNeighborRowStatus.setStatus('current')
alaIgmpQuerier = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7))
alaIgmpQuerierTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7, 1), )
if mibBuilder.loadTexts: alaIgmpQuerierTable.setStatus('current')
alaIgmpQuerierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerierVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerierIfIndex"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerierHostAddress"))
if mibBuilder.loadTexts: alaIgmpQuerierEntry.setStatus('current')
alaIgmpQuerierVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpQuerierVlan.setStatus('current')
alaIgmpQuerierIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpQuerierIfIndex.setStatus('current')
alaIgmpQuerierHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7, 1, 1, 3), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpQuerierHostAddress.setStatus('current')
alaIgmpQuerierCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpQuerierCount.setStatus('current')
alaIgmpQuerierTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 7, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpQuerierTimeout.setStatus('current')
alaIgmpStaticQuerier = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 8))
alaIgmpStaticQuerierTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 8, 1), )
if mibBuilder.loadTexts: alaIgmpStaticQuerierTable.setStatus('current')
alaIgmpStaticQuerierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 8, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticQuerierVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticQuerierIfIndex"))
if mibBuilder.loadTexts: alaIgmpStaticQuerierEntry.setStatus('current')
alaIgmpStaticQuerierVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 8, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpStaticQuerierVlan.setStatus('current')
alaIgmpStaticQuerierIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 8, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpStaticQuerierIfIndex.setStatus('current')
alaIgmpStaticQuerierRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 8, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIgmpStaticQuerierRowStatus.setStatus('current')
alaIgmpSource = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9))
alaIgmpSourceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1), )
if mibBuilder.loadTexts: alaIgmpSourceTable.setStatus('current')
alaIgmpSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceGroupAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceHostAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceDestAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceOrigAddress"))
if mibBuilder.loadTexts: alaIgmpSourceEntry.setStatus('current')
alaIgmpSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpSourceVlan.setStatus('current')
alaIgmpSourceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpSourceIfIndex.setStatus('current')
alaIgmpSourceGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1, 3), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpSourceGroupAddress.setStatus('current')
alaIgmpSourceHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1, 4), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpSourceHostAddress.setStatus('current')
alaIgmpSourceDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1, 5), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpSourceDestAddress.setStatus('current')
alaIgmpSourceOrigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1, 6), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpSourceOrigAddress.setStatus('current')
alaIgmpSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mcast", 1), ("pim", 2), ("ipip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpSourceType.setStatus('current')
alaIgmpForward = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10))
alaIgmpForwardTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1), )
if mibBuilder.loadTexts: alaIgmpForwardTable.setStatus('current')
alaIgmpForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardGroupAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardHostAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardDestAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardOrigAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardNextVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardNextIfIndex"))
if mibBuilder.loadTexts: alaIgmpForwardEntry.setStatus('current')
alaIgmpForwardVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpForwardVlan.setStatus('current')
alaIgmpForwardIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpForwardIfIndex.setStatus('current')
alaIgmpForwardGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 3), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpForwardGroupAddress.setStatus('current')
alaIgmpForwardHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 4), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpForwardHostAddress.setStatus('current')
alaIgmpForwardDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 5), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpForwardDestAddress.setStatus('current')
alaIgmpForwardOrigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 6), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpForwardOrigAddress.setStatus('current')
alaIgmpForwardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mcast", 1), ("pim", 2), ("ipip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpForwardType.setStatus('current')
alaIgmpForwardNextVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 8), Unsigned32())
if mibBuilder.loadTexts: alaIgmpForwardNextVlan.setStatus('current')
alaIgmpForwardNextIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 9), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpForwardNextIfIndex.setStatus('current')
alaIgmpForwardNextType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mcast", 1), ("pim", 2), ("ipip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpForwardNextType.setStatus('current')
alaIgmpTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11))
alaIgmpTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1), )
if mibBuilder.loadTexts: alaIgmpTunnelTable.setStatus('current')
alaIgmpTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelVlan"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelGroupAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelHostAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelDestAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelOrigAddress"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelNextDestAddress"))
if mibBuilder.loadTexts: alaIgmpTunnelEntry.setStatus('current')
alaIgmpTunnelVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpTunnelVlan.setStatus('current')
alaIgmpTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpTunnelIfIndex.setStatus('current')
alaIgmpTunnelGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 3), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpTunnelGroupAddress.setStatus('current')
alaIgmpTunnelHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 4), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpTunnelHostAddress.setStatus('current')
alaIgmpTunnelDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 5), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpTunnelDestAddress.setStatus('current')
alaIgmpTunnelOrigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 6), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpTunnelOrigAddress.setStatus('current')
alaIgmpTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mcast", 1), ("pim", 2), ("ipip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpTunnelType.setStatus('current')
alaIgmpTunnelNextDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 8), InetAddressIPv4())
if mibBuilder.loadTexts: alaIgmpTunnelNextDestAddress.setStatus('current')
alaIgmpTunnelNextType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 11, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mcast", 1), ("pim", 2), ("ipip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpTunnelNextType.setStatus('current')
alaIgmpPort = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 12))
alaIgmpPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 12, 1), )
if mibBuilder.loadTexts: alaIgmpPortTable.setStatus('current')
alaIgmpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 12, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpPortIfIndex"))
if mibBuilder.loadTexts: alaIgmpPortEntry.setStatus('current')
alaIgmpPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 12, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaIgmpPortIfIndex.setStatus('current')
alaIgmpPortMaxGroupLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 12, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpPortMaxGroupLimit.setStatus('current')
alaIgmpPortMaxGroupExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("drop", 1), ("replace", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIgmpPortMaxGroupExceedAction.setStatus('current')
alaIgmpPortVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 13))
alaIgmpPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 13, 1), )
if mibBuilder.loadTexts: alaIgmpPortVlanTable.setStatus('current')
alaIgmpPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 13, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpPortIfIndex"), (0, "ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanId"))
if mibBuilder.loadTexts: alaIgmpPortVlanEntry.setStatus('current')
alaIgmpVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 13, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIgmpVlanId.setStatus('current')
alaIgmpPortVlanCurrentGroupCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 13, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpPortVlanCurrentGroupCount.setStatus('current')
alaIgmpPortVlanMaxGroupLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 13, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpPortVlanMaxGroupLimit.setStatus('current')
alaIgmpPortVlanMaxGroupExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 1, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("drop", 1), ("replace", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIgmpPortVlanMaxGroupExceedAction.setStatus('current')
alcatelIND1IgmpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2))
alcatelIND1IgmpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 1))
alaIgmpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticMemberGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpNeighborGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticNeighborGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerierGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticQuerierGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpPortGroup"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpPortVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpCompliance = alaIgmpCompliance.setStatus('current')
alcatelIND1IgmpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2))
alaIgmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpStatus"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerying"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpSpoofing"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpZapping"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVersion"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpRobustness"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpQueryInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpQueryResponseInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpLastMemberQueryInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpRouterTimeout"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceTimeout"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpProxying"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpUnsolicitedReportInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerierForwarding"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpMaxGroupLimit"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpMaxGroupExceedAction"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpFloodUnknown"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpHelperAddressType"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpHelperAddress"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpZeroBasedQuery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpGroup = alaIgmpGroup.setStatus('current')
alaIgmpVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 2)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanStatus"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanQuerying"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanSpoofing"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanZapping"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanVersion"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanRobustness"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanQueryInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanQueryResponseInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanLastMemberQueryInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanRouterTimeout"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanSourceTimeout"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanProxying"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanUnsolicitedReportInterval"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanQuerierForwarding"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanMaxGroupLimit"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanMaxGroupExceedAction"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpVlanZeroBasedQuery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpVlanGroup = alaIgmpVlanGroup.setStatus('current')
alaIgmpMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 3)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberMode"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberCount"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpMemberTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpMemberGroup = alaIgmpMemberGroup.setStatus('current')
alaIgmpStaticMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 4)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticMemberRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpStaticMemberGroup = alaIgmpStaticMemberGroup.setStatus('current')
alaIgmpNeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 5)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpNeighborCount"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpNeighborTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpNeighborGroup = alaIgmpNeighborGroup.setStatus('current')
alaIgmpStaticNeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 6)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticNeighborRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpStaticNeighborGroup = alaIgmpStaticNeighborGroup.setStatus('current')
alaIgmpQuerierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 7)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerierCount"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpQuerierTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpQuerierGroup = alaIgmpQuerierGroup.setStatus('current')
alaIgmpStaticQuerierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 8)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpStaticQuerierRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpStaticQuerierGroup = alaIgmpStaticQuerierGroup.setStatus('current')
alaIgmpSourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 9)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceIfIndex"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpSourceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpSourceGroup = alaIgmpSourceGroup.setStatus('current')
alaIgmpForwardGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 10)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardIfIndex"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardType"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpForwardNextType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpForwardGroup = alaIgmpForwardGroup.setStatus('current')
alaIgmpTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 11)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelIfIndex"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelType"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpTunnelNextType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpTunnelGroup = alaIgmpTunnelGroup.setStatus('current')
alaIgmpPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 12)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpPortMaxGroupLimit"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpPortMaxGroupExceedAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpPortGroup = alaIgmpPortGroup.setStatus('current')
alaIgmpPortVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 34, 1, 2, 2, 13)).setObjects(("ALCATEL-IND1-IGMP-MIB", "alaIgmpPortVlanCurrentGroupCount"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpPortVlanMaxGroupLimit"), ("ALCATEL-IND1-IGMP-MIB", "alaIgmpPortVlanMaxGroupExceedAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIgmpPortVlanGroup = alaIgmpPortVlanGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-IGMP-MIB", alaIgmpPortVlanGroup=alaIgmpPortVlanGroup, alaIgmpNeighborVlan=alaIgmpNeighborVlan, alaIgmpQuerierCount=alaIgmpQuerierCount, alaIgmpVlanSourceTimeout=alaIgmpVlanSourceTimeout, alaIgmpMember=alaIgmpMember, alaIgmpPortMaxGroupExceedAction=alaIgmpPortMaxGroupExceedAction, alaIgmpVlanMaxGroupExceedAction=alaIgmpVlanMaxGroupExceedAction, alaIgmpPortVlanCurrentGroupCount=alaIgmpPortVlanCurrentGroupCount, alaIgmpVlanIndex=alaIgmpVlanIndex, alaIgmpPortGroup=alaIgmpPortGroup, alaIgmpStaticQuerierIfIndex=alaIgmpStaticQuerierIfIndex, alaIgmpVlanQueryInterval=alaIgmpVlanQueryInterval, alaIgmpMemberTable=alaIgmpMemberTable, alaIgmpNeighborCount=alaIgmpNeighborCount, alaIgmpVlanQuerierForwarding=alaIgmpVlanQuerierForwarding, alaIgmpSourceDestAddress=alaIgmpSourceDestAddress, alaIgmpForwardHostAddress=alaIgmpForwardHostAddress, alaIgmpVersion=alaIgmpVersion, alaIgmpNeighborGroup=alaIgmpNeighborGroup, alaIgmpPortVlanMaxGroupLimit=alaIgmpPortVlanMaxGroupLimit, alaIgmpVlanSpoofing=alaIgmpVlanSpoofing, alaIgmpGroup=alaIgmpGroup, alaIgmpStaticMemberGroup=alaIgmpStaticMemberGroup, alaIgmpSourceGroupAddress=alaIgmpSourceGroupAddress, alaIgmpZapping=alaIgmpZapping, alaIgmpVlanQueryResponseInterval=alaIgmpVlanQueryResponseInterval, alaIgmpPortVlanMaxGroupExceedAction=alaIgmpPortVlanMaxGroupExceedAction, alaIgmpTunnelIfIndex=alaIgmpTunnelIfIndex, alaIgmpMemberMode=alaIgmpMemberMode, alaIgmpMemberGroupAddress=alaIgmpMemberGroupAddress, alaIgmpTunnelDestAddress=alaIgmpTunnelDestAddress, alaIgmpMemberGroup=alaIgmpMemberGroup, alaIgmpNeighborTable=alaIgmpNeighborTable, alaIgmpMemberIfIndex=alaIgmpMemberIfIndex, alcatelIND1IgmpMIBCompliances=alcatelIND1IgmpMIBCompliances, alaIgmpCompliance=alaIgmpCompliance, alaIgmpPortVlanTable=alaIgmpPortVlanTable, alaIgmpStaticMemberRowStatus=alaIgmpStaticMemberRowStatus, alaIgmpQuerierVlan=alaIgmpQuerierVlan, alaIgmpHelperAddressType=alaIgmpHelperAddressType, alaIgmpMemberEntry=alaIgmpMemberEntry, alaIgmpForwardOrigAddress=alaIgmpForwardOrigAddress, alaIgmpStaticMemberGroupAddress=alaIgmpStaticMemberGroupAddress, alaIgmpMaxGroupLimit=alaIgmpMaxGroupLimit, alaIgmpQuerierTimeout=alaIgmpQuerierTimeout, alaIgmpForwardNextIfIndex=alaIgmpForwardNextIfIndex, alcatelIND1IgmpMIB=alcatelIND1IgmpMIB, alaIgmpStaticNeighborEntry=alaIgmpStaticNeighborEntry, alaIgmpStaticNeighborVlan=alaIgmpStaticNeighborVlan, alaIgmpSourceTable=alaIgmpSourceTable, alaIgmpSourceOrigAddress=alaIgmpSourceOrigAddress, alaIgmpPortIfIndex=alaIgmpPortIfIndex, alaIgmpTunnelNextType=alaIgmpTunnelNextType, alaIgmpQueryInterval=alaIgmpQueryInterval, alaIgmpForwardEntry=alaIgmpForwardEntry, alaIgmpStaticNeighborIfIndex=alaIgmpStaticNeighborIfIndex, alcatelIND1IgmpMIBObjects=alcatelIND1IgmpMIBObjects, alaIgmpStaticNeighbor=alaIgmpStaticNeighbor, alaIgmpPort=alaIgmpPort, alaIgmpSourceType=alaIgmpSourceType, alaIgmpPortEntry=alaIgmpPortEntry, alaIgmpQuerier=alaIgmpQuerier, alaIgmpHelperAddress=alaIgmpHelperAddress, alaIgmpSourceHostAddress=alaIgmpSourceHostAddress, alaIgmpPortVlanEntry=alaIgmpPortVlanEntry, alaIgmpStaticMemberTable=alaIgmpStaticMemberTable, alaIgmpTunnelEntry=alaIgmpTunnelEntry, alaIgmpTunnelGroupAddress=alaIgmpTunnelGroupAddress, alaIgmpNeighborEntry=alaIgmpNeighborEntry, alaIgmpVlanStatus=alaIgmpVlanStatus, alaIgmpStaticQuerierGroup=alaIgmpStaticQuerierGroup, alaIgmpRobustness=alaIgmpRobustness, alaIgmpQuerierHostAddress=alaIgmpQuerierHostAddress, alaIgmpVlanProxying=alaIgmpVlanProxying, alaIgmpZeroBasedQuery=alaIgmpZeroBasedQuery, alaIgmpTunnelOrigAddress=alaIgmpTunnelOrigAddress, alaIgmpNeighbor=alaIgmpNeighbor, alaIgmpNeighborTimeout=alaIgmpNeighborTimeout, alaIgmpMemberTimeout=alaIgmpMemberTimeout, alaIgmpTunnelNextDestAddress=alaIgmpTunnelNextDestAddress, alaIgmpMemberVlan=alaIgmpMemberVlan, alaIgmpTunnelType=alaIgmpTunnelType, alaIgmpStaticNeighborTable=alaIgmpStaticNeighborTable, alaIgmpSourceIfIndex=alaIgmpSourceIfIndex, alaIgmpSource=alaIgmpSource, alaIgmpStatus=alaIgmpStatus, alaIgmpProxying=alaIgmpProxying, alaIgmpVlanRobustness=alaIgmpVlanRobustness, alaIgmpQuerierIfIndex=alaIgmpQuerierIfIndex, alaIgmpVlan=alaIgmpVlan, alaIgmpForwardNextVlan=alaIgmpForwardNextVlan, alaIgmpFloodUnknown=alaIgmpFloodUnknown, alaIgmpSourceEntry=alaIgmpSourceEntry, PYSNMP_MODULE_ID=alcatelIND1IgmpMIB, alaIgmpStaticQuerier=alaIgmpStaticQuerier, alaIgmpQuerierForwarding=alaIgmpQuerierForwarding, alcatelIND1IgmpMIBConformance=alcatelIND1IgmpMIBConformance, alaIgmpQueryResponseInterval=alaIgmpQueryResponseInterval, alaIgmpMemberCount=alaIgmpMemberCount, alaIgmpTunnel=alaIgmpTunnel, alaIgmpForwardNextType=alaIgmpForwardNextType, alaIgmpStaticNeighborRowStatus=alaIgmpStaticNeighborRowStatus, alaIgmpStaticMemberEntry=alaIgmpStaticMemberEntry, alaIgmpQuerierTable=alaIgmpQuerierTable, alaIgmpPortMaxGroupLimit=alaIgmpPortMaxGroupLimit, alaIgmpVlanLastMemberQueryInterval=alaIgmpVlanLastMemberQueryInterval, alaIgmpVlanUnsolicitedReportInterval=alaIgmpVlanUnsolicitedReportInterval, alaIgmp=alaIgmp, alaIgmpVlanTable=alaIgmpVlanTable, alaIgmpSourceVlan=alaIgmpSourceVlan, alaIgmpVlanQuerying=alaIgmpVlanQuerying, alaIgmpSourceTimeout=alaIgmpSourceTimeout, alaIgmpPortTable=alaIgmpPortTable, alaIgmpQuerierGroup=alaIgmpQuerierGroup, alaIgmpNeighborHostAddress=alaIgmpNeighborHostAddress, alaIgmpTunnelGroup=alaIgmpTunnelGroup, alaIgmpStaticQuerierTable=alaIgmpStaticQuerierTable, alaIgmpForwardVlan=alaIgmpForwardVlan, alaIgmpForwardGroup=alaIgmpForwardGroup, alaIgmpVlanEntry=alaIgmpVlanEntry, alaIgmpPortVlan=alaIgmpPortVlan, alcatelIND1IgmpMIBGroups=alcatelIND1IgmpMIBGroups, alaIgmpForwardGroupAddress=alaIgmpForwardGroupAddress, alaIgmpForwardDestAddress=alaIgmpForwardDestAddress, alaIgmpSpoofing=alaIgmpSpoofing, alaIgmpStaticNeighborGroup=alaIgmpStaticNeighborGroup, alaIgmpStaticQuerierEntry=alaIgmpStaticQuerierEntry, alaIgmpVlanZapping=alaIgmpVlanZapping, alaIgmpVlanGroup=alaIgmpVlanGroup, alaIgmpMaxGroupExceedAction=alaIgmpMaxGroupExceedAction, alaIgmpLastMemberQueryInterval=alaIgmpLastMemberQueryInterval, alaIgmpVlanMaxGroupLimit=alaIgmpVlanMaxGroupLimit, alaIgmpQuerying=alaIgmpQuerying, alaIgmpVlanId=alaIgmpVlanId, alaIgmpForward=alaIgmpForward, alaIgmpQuerierEntry=alaIgmpQuerierEntry, alaIgmpUnsolicitedReportInterval=alaIgmpUnsolicitedReportInterval, alaIgmpForwardType=alaIgmpForwardType, alaIgmpTunnelTable=alaIgmpTunnelTable, alaIgmpVlanZeroBasedQuery=alaIgmpVlanZeroBasedQuery, alaIgmpTunnelHostAddress=alaIgmpTunnelHostAddress, alaIgmpSourceGroup=alaIgmpSourceGroup, alaIgmpForwardTable=alaIgmpForwardTable, alaIgmpVlanVersion=alaIgmpVlanVersion, alaIgmpVlanRouterTimeout=alaIgmpVlanRouterTimeout, alaIgmpMemberSourceAddress=alaIgmpMemberSourceAddress, alaIgmpStaticQuerierRowStatus=alaIgmpStaticQuerierRowStatus, alaIgmpStaticMember=alaIgmpStaticMember, alaIgmpStaticQuerierVlan=alaIgmpStaticQuerierVlan, alaIgmpNeighborIfIndex=alaIgmpNeighborIfIndex, alaIgmpForwardIfIndex=alaIgmpForwardIfIndex, alaIgmpStaticMemberVlan=alaIgmpStaticMemberVlan, alaIgmpRouterTimeout=alaIgmpRouterTimeout, alaIgmpTunnelVlan=alaIgmpTunnelVlan, alaIgmpStaticMemberIfIndex=alaIgmpStaticMemberIfIndex)
