#
# PySNMP MIB module TPLINK-AAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-AAA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:16:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, ModuleIdentity, IpAddress, MibIdentifier, NotificationType, ObjectIdentity, Gauge32, Bits, Counter32, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "ModuleIdentity", "IpAddress", "MibIdentifier", "NotificationType", "ObjectIdentity", "Gauge32", "Bits", "Counter32", "Counter64", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkAaaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 82))
tplinkAaaMIB.setRevisions(('2015-06-11 14:30',))
if mibBuilder.loadTexts: tplinkAaaMIB.setLastUpdated('201506111430Z')
if mibBuilder.loadTexts: tplinkAaaMIB.setOrganization('TPLINK')
aaaGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1))
swAaaGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swAaaGlobalEnable.setStatus('current')
aaaApplicationList = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 2))
aaaApplicationListTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 2, 1), )
if mibBuilder.loadTexts: aaaApplicationListTable.setStatus('current')
aaaApplicationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-AAA-MIB", "moduleId"))
if mibBuilder.loadTexts: aaaApplicationListEntry.setStatus('current')
moduleId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleId.setStatus('current')
moduleName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleName.setStatus('current')
loginList = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loginList.setStatus('current')
enableList = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableList.setStatus('current')
aaaAuthenticationListConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2))
authenticationLoginMethodListTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1), )
if mibBuilder.loadTexts: authenticationLoginMethodListTable.setStatus('current')
authenticationLoginMethodListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1, 1), ).setIndexNames((0, "TPLINK-AAA-MIB", "authenLoginListName"))
if mibBuilder.loadTexts: authenticationLoginMethodListEntry.setStatus('current')
authenLoginListName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: authenLoginListName.setStatus('current')
authenLoginPri1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenLoginPri1.setStatus('current')
authenLoginPri2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenLoginPri2.setStatus('current')
authenLoginPri3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenLoginPri3.setStatus('current')
authenLoginPri4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenLoginPri4.setStatus('current')
authenLoginStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 1, 1, 6), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: authenLoginStatus.setStatus('current')
authenticationEnableMethodListTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2), )
if mibBuilder.loadTexts: authenticationEnableMethodListTable.setStatus('current')
authenticationEnableMethodListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2, 1), ).setIndexNames((0, "TPLINK-AAA-MIB", "authenEnableListName"))
if mibBuilder.loadTexts: authenticationEnableMethodListEntry.setStatus('current')
authenEnableListName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: authenEnableListName.setStatus('current')
authenEnablePri1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenEnablePri1.setStatus('current')
authenEnablePri2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenEnablePri2.setStatus('current')
authenEnablePri3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenEnablePri3.setStatus('current')
authenEnablePri4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenEnablePri4.setStatus('current')
authenEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 2, 2, 1, 6), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: authenEnableStatus.setStatus('current')
aaaDot1xListConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3))
authenticationDot1xMethodListTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 1), )
if mibBuilder.loadTexts: authenticationDot1xMethodListTable.setStatus('current')
authenticationDot1xMethodListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 1, 1), ).setIndexNames((0, "TPLINK-AAA-MIB", "authenDot1xListName"))
if mibBuilder.loadTexts: authenticationDot1xMethodListEntry.setStatus('current')
authenDot1xListName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: authenDot1xListName.setStatus('current')
authenDot1xPri1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenDot1xPri1.setStatus('current')
authenDot1xStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 1, 1, 3), TPRowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: authenDot1xStatus.setStatus('current')
accountingDot1xMethodListTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 2), )
if mibBuilder.loadTexts: accountingDot1xMethodListTable.setStatus('current')
accountingDot1xMethodListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 2, 1), ).setIndexNames((0, "TPLINK-AAA-MIB", "acctDot1xListName"))
if mibBuilder.loadTexts: accountingDot1xMethodListEntry.setStatus('current')
acctDot1xListName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acctDot1xListName.setStatus('current')
acctDot1xPri1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acctDot1xPri1.setStatus('current')
acctDot1xStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 3, 2, 1, 3), TPRowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acctDot1xStatus.setStatus('current')
radiusDeamonTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4), )
if mibBuilder.loadTexts: radiusDeamonTable.setStatus('current')
radiusDeamonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1), ).setIndexNames((0, "TPLINK-AAA-MIB", "radiusDeamonServerIp"))
if mibBuilder.loadTexts: radiusDeamonEntry.setStatus('current')
radiusDeamonServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusDeamonServerIp.setStatus('current')
radiusDeamonTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusDeamonTimeout.setStatus('current')
radiusDeamonRetransimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusDeamonRetransimit.setStatus('current')
radiusDeamonKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusDeamonKey.setStatus('current')
radiusDeamonAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusDeamonAuthPort.setStatus('current')
radiusDeamonAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusDeamonAcctPort.setStatus('current')
radiusDeamonStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 4, 1, 7), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusDeamonStatus.setStatus('current')
tacacsDeamonTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 82, 5), )
if mibBuilder.loadTexts: tacacsDeamonTable.setStatus('current')
tacacsDeamonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 82, 5, 1), ).setIndexNames((0, "TPLINK-AAA-MIB", "tacacsDeamonServerIp"))
if mibBuilder.loadTexts: tacacsDeamonEntry.setStatus('current')
tacacsDeamonServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 5, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tacacsDeamonServerIp.setStatus('current')
tacacsDeamonTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tacacsDeamonTimeout.setStatus('current')
tacacsDeamonKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tacacsDeamonKey.setStatus('current')
tacacsDeamonPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tacacsDeamonPort.setStatus('current')
tacacsDeamonStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 82, 5, 1, 5), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tacacsDeamonStatus.setStatus('current')
mibBuilder.exportSymbols("TPLINK-AAA-MIB", authenticationLoginMethodListTable=authenticationLoginMethodListTable, PYSNMP_MODULE_ID=tplinkAaaMIB, authenLoginPri4=authenLoginPri4, moduleId=moduleId, tacacsDeamonEntry=tacacsDeamonEntry, tacacsDeamonStatus=tacacsDeamonStatus, authenLoginPri2=authenLoginPri2, radiusDeamonEntry=radiusDeamonEntry, tacacsDeamonTable=tacacsDeamonTable, acctDot1xListName=acctDot1xListName, authenEnableStatus=authenEnableStatus, aaaApplicationListEntry=aaaApplicationListEntry, authenticationDot1xMethodListTable=authenticationDot1xMethodListTable, authenDot1xStatus=authenDot1xStatus, acctDot1xPri1=acctDot1xPri1, radiusDeamonAcctPort=radiusDeamonAcctPort, authenLoginPri3=authenLoginPri3, authenticationEnableMethodListTable=authenticationEnableMethodListTable, authenDot1xListName=authenDot1xListName, radiusDeamonServerIp=radiusDeamonServerIp, tacacsDeamonKey=tacacsDeamonKey, authenEnablePri3=authenEnablePri3, aaaApplicationList=aaaApplicationList, authenEnablePri2=authenEnablePri2, authenDot1xPri1=authenDot1xPri1, authenticationEnableMethodListEntry=authenticationEnableMethodListEntry, radiusDeamonRetransimit=radiusDeamonRetransimit, radiusDeamonTable=radiusDeamonTable, moduleName=moduleName, loginList=loginList, authenLoginPri1=authenLoginPri1, swAaaGlobalEnable=swAaaGlobalEnable, radiusDeamonAuthPort=radiusDeamonAuthPort, authenLoginStatus=authenLoginStatus, authenticationDot1xMethodListEntry=authenticationDot1xMethodListEntry, acctDot1xStatus=acctDot1xStatus, radiusDeamonStatus=radiusDeamonStatus, radiusDeamonTimeout=radiusDeamonTimeout, accountingDot1xMethodListEntry=accountingDot1xMethodListEntry, tacacsDeamonServerIp=tacacsDeamonServerIp, authenEnablePri4=authenEnablePri4, radiusDeamonKey=radiusDeamonKey, aaaAuthenticationListConfig=aaaAuthenticationListConfig, tplinkAaaMIB=tplinkAaaMIB, tacacsDeamonPort=tacacsDeamonPort, aaaApplicationListTable=aaaApplicationListTable, authenEnableListName=authenEnableListName, aaaDot1xListConfig=aaaDot1xListConfig, tacacsDeamonTimeout=tacacsDeamonTimeout, authenticationLoginMethodListEntry=authenticationLoginMethodListEntry, authenLoginListName=authenLoginListName, aaaGlobalConfig=aaaGlobalConfig, accountingDot1xMethodListTable=accountingDot1xMethodListTable, authenEnablePri1=authenEnablePri1, enableList=enableList)
