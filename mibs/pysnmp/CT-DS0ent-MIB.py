#
# PySNMP MIB module CT-DS0ent-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CT-DS0ent-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:12:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
cabletron, = mibBuilder.importSymbols("CTRON-OIDS", "cabletron")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, NotificationType, ModuleIdentity, MibIdentifier, Gauge32, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, ObjectIdentity, Unsigned32, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "ModuleIdentity", "MibIdentifier", "Gauge32", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "ObjectIdentity", "Unsigned32", "TimeTicks", "Integer32")
DisplayString, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress")
ctSSA = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4497))
ctDs0Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4497, 20))
ctDsx0Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4497, 21))
class InterfaceIndex(Integer32):
    pass

ctDs0ifNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4497, 20, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifNumber.setStatus('mandatory')
ctDs0ifTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2), )
if mibBuilder.loadTexts: ctDs0ifTable.setStatus('mandatory')
ctDs0ifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1), ).setIndexNames((0, "CT-DS0ent-MIB", "ctDs0ifIndex"))
if mibBuilder.loadTexts: ctDs0ifEntry.setStatus('mandatory')
ctDs0ifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 1), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifIndex.setStatus('mandatory')
ctDs0ifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifDescr.setStatus('mandatory')
ctDs0ifMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifMtu.setStatus('mandatory')
ctDs0ifSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifSpeed.setStatus('mandatory')
ctDs0ifPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifPhysAddress.setStatus('mandatory')
ctDs0ifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDs0ifAdminStatus.setStatus('mandatory')
ctDs0ifOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifOperStatus.setStatus('mandatory')
ctDs0ifLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifLastChange.setStatus('mandatory')
ctDs0ifInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifInOctets.setStatus('mandatory')
ctDs0ifInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifInUcastPkts.setStatus('mandatory')
ctDs0ifInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifInNUcastPkts.setStatus('deprecated')
ctDs0ifInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifInDiscards.setStatus('mandatory')
ctDs0ifInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifInErrors.setStatus('mandatory')
ctDs0ifInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifInUnknownProtos.setStatus('mandatory')
ctDs0ifOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifOutOctets.setStatus('mandatory')
ctDs0ifOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifOutUcastPkts.setStatus('mandatory')
ctDs0ifOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifOutNUcastPkts.setStatus('deprecated')
ctDs0ifOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifOutDiscards.setStatus('mandatory')
ctDs0ifOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifOutErrors.setStatus('mandatory')
ctDs0ifOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifOutQLen.setStatus('deprecated')
ctDs0ifSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 22), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifSpecific.setStatus('deprecated')
class IANActDs0ifType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))
    namedValues = NamedValues(("other", 1), ("regular1822", 2), ("hdh1822", 3), ("ddnX25", 4), ("rfc877x25", 5), ("ethernetCsmacd", 6), ("iso88023Csmacd", 7), ("iso88024TokenBus", 8), ("iso88025TokenRing", 9), ("iso88026Man", 10), ("starLan", 11), ("proteon10Mbit", 12), ("proteon80Mbit", 13), ("hyperchannel", 14), ("fddi", 15), ("lapb", 16), ("sdlc", 17), ("ds1", 18), ("e1", 19), ("basicISDN", 20), ("primaryISDN", 21), ("propPointToPointSerial", 22), ("ppp", 23), ("softwareLoopback", 24), ("eon", 25), ("ethernet3Mbit", 26), ("nsip", 27), ("slip", 28), ("ultra", 29), ("ds3", 30), ("sip", 31), ("frameRelay", 32), ("rs232", 33), ("para", 34), ("arcnet", 35), ("arcnetPlus", 36), ("atm", 37), ("miox25", 38), ("sonet", 39), ("x25ple", 40), ("iso88022llc", 41), ("localTalk", 42), ("smdsDxi", 43), ("frameRelayService", 44), ("v35", 45), ("hssi", 46), ("hippi", 47), ("modem", 48), ("aal5", 49), ("sonetPath", 50), ("sonetVT", 51), ("smdsIcip", 52), ("propVirtual", 53), ("propMultiplexor", 54))

ctDs0ifType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 20, 2, 1, 3), IANActDs0ifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDs0ifType.setStatus('mandatory')
ctDsx0ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4497, 21, 1), )
if mibBuilder.loadTexts: ctDsx0ConfigTable.setStatus('mandatory')
ctDsx0ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4497, 21, 1, 1), ).setIndexNames((0, "CT-DS0ent-MIB", "ctDs0ifIndex"))
if mibBuilder.loadTexts: ctDsx0ConfigEntry.setStatus('mandatory')
ctDsx0ConfigLineId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 21, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDsx0ConfigLineId.setStatus('mandatory')
ctDsx0ConfigAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDsx0ConfigAdminStatus.setStatus('mandatory')
ctDsx0ConfigOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDsx0ConfigOperStatus.setStatus('mandatory')
mibBuilder.exportSymbols("CT-DS0ent-MIB", ctDs0ifInErrors=ctDs0ifInErrors, IANActDs0ifType=IANActDs0ifType, ctDsx0ConfigAdminStatus=ctDsx0ConfigAdminStatus, ctDs0ifMtu=ctDs0ifMtu, ctDs0ifNumber=ctDs0ifNumber, ctDs0ifAdminStatus=ctDs0ifAdminStatus, ctSSA=ctSSA, ctDs0ifSpecific=ctDs0ifSpecific, ctDsx0ConfigEntry=ctDsx0ConfigEntry, ctDs0ifInNUcastPkts=ctDs0ifInNUcastPkts, ctDs0ifIndex=ctDs0ifIndex, ctDs0ifDescr=ctDs0ifDescr, ctDsx0ConfigLineId=ctDsx0ConfigLineId, ctDs0ifType=ctDs0ifType, ctDs0ifOutErrors=ctDs0ifOutErrors, ctDs0Mib=ctDs0Mib, ctDs0ifSpeed=ctDs0ifSpeed, ctDs0ifOperStatus=ctDs0ifOperStatus, ctDs0ifInUnknownProtos=ctDs0ifInUnknownProtos, ctDs0ifOutOctets=ctDs0ifOutOctets, ctDs0ifOutUcastPkts=ctDs0ifOutUcastPkts, ctDs0ifLastChange=ctDs0ifLastChange, ctDs0ifTable=ctDs0ifTable, ctDsx0Mib=ctDsx0Mib, ctDs0ifInDiscards=ctDs0ifInDiscards, ctDs0ifOutNUcastPkts=ctDs0ifOutNUcastPkts, ctDsx0ConfigTable=ctDsx0ConfigTable, ctDsx0ConfigOperStatus=ctDsx0ConfigOperStatus, ctDs0ifInOctets=ctDs0ifInOctets, ctDs0ifOutDiscards=ctDs0ifOutDiscards, ctDs0ifOutQLen=ctDs0ifOutQLen, ctDs0ifEntry=ctDs0ifEntry, InterfaceIndex=InterfaceIndex, ctDs0ifPhysAddress=ctDs0ifPhysAddress, ctDs0ifInUcastPkts=ctDs0ifInUcastPkts)
