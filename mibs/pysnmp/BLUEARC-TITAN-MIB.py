#
# PySNMP MIB module BLUEARC-TITAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BLUEARC-TITAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:22:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
blueArc, blueArcPrivate = mibBuilder.importSymbols("BLUEARC-SERVER-MIB", "blueArc", "blueArcPrivate")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, iso, Bits, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, TimeTicks, ModuleIdentity, enterprises, Unsigned32, Counter32, Counter64, ObjectIdentity, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Bits", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "TimeTicks", "ModuleIdentity", "enterprises", "Unsigned32", "Counter32", "Counter64", "ObjectIdentity", "mib-2")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
blueArcTitan = ModuleIdentity((1, 3, 6, 1, 4, 1, 11096, 6, 2))
blueArcTitan.setRevisions(('2007-11-05 12:00', '2006-04-24 12:00', '2004-02-20 12:00', '2003-11-28 12:00', '2003-06-16 12:00',))
if mibBuilder.loadTexts: blueArcTitan.setLastUpdated('200711051200Z')
if mibBuilder.loadTexts: blueArcTitan.setOrganization('BlueArc UK Ltd.')
blueArcTitanObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1))
systemTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 1))
storageTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2))
virtualVolumesTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1))
nvram = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2))
networkTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3))
ethernetTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3, 1))
linkAggregation = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3, 1, 1))
mgmntTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4))
packageMgmnt = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1))
fileProtocolTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5))
ftpTitan = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1))
ftpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1))
ftpMountpoints = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2))
ftpUser = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3))
ftpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4))
virtualVolumeTitanNumber = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanNumber.setStatus('current')
virtualVolumeTitanTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 2), )
if mibBuilder.loadTexts: virtualVolumeTitanTable.setStatus('current')
virtualVolumeTitanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 2, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanSpanId"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanName"))
if mibBuilder.loadTexts: virtualVolumeTitanEntry.setStatus('current')
virtualVolumeTitanSpanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanSpanId.setStatus('current')
virtualVolumeTitanName = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanName.setStatus('current')
virtualVolumeTitanPath = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanPath.setStatus('current')
virtualVolumeTitanEmailNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanEmailNumber.setStatus('current')
virtualVolumeTitanQuotaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaNumber.setStatus('current')
virtualVolumeTitanEmailTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 3), )
if mibBuilder.loadTexts: virtualVolumeTitanEmailTable.setStatus('current')
virtualVolumeTitanEmailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 3, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanSpanId"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanName"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanEmailAddress"))
if mibBuilder.loadTexts: virtualVolumeTitanEmailEntry.setStatus('current')
virtualVolumeTitanEmailAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanEmailAddress.setStatus('current')
virtualVolumeTitanQuotaTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4), )
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateTable.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanSpanId"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanName"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeQuotaTemplateTargetType"))
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateEntry.setStatus('obsolete')
virtualVolumeQuotaTemplateTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("group", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeQuotaTemplateTargetType.setStatus('obsolete')
virtualVolumeQuotaTemplateIgnoreWellKnownGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("include", 2), ("notapplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeQuotaTemplateIgnoreWellKnownGroups.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateUsageLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateUsageLimit.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateUsageHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateUsageHardLimit.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateUsageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateUsageReset.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateUsageWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateUsageWarning.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateUsageCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateUsageCritical.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateFileCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateFileCountLimit.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateFileCountHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateFileCountHardLimit.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateFileCountReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateFileCountReset.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateFileCountWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateFileCountWarning.setStatus('obsolete')
virtualVolumeTitanQuotaTemplateFileCountCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTemplateFileCountCritical.setStatus('obsolete')
virtualVolumeTitanQuotaTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5), )
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTable.setStatus('obsolete')
virtualVolumeTitanQuotaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanSpanId"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanName"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanQuotaTarget"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanQuotaTargetType"))
if mibBuilder.loadTexts: virtualVolumeTitanQuotaEntry.setStatus('obsolete')
virtualVolumeTitanQuotaTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTarget.setStatus('obsolete')
virtualVolumeTitanQuotaType = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("explicit", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaType.setStatus('obsolete')
virtualVolumeTitanQuotaTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("user", 1), ("group", 2), ("virtualvolume", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaTargetType.setStatus('obsolete')
virtualVolumeTitanQuotaUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaUsage.setStatus('obsolete')
virtualVolumeTitanQuotaFileCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaFileCount.setStatus('obsolete')
virtualVolumeTitanQuotaUsageLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaUsageLimit.setStatus('obsolete')
virtualVolumeTitanQuotaUsageHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaUsageHardLimit.setStatus('obsolete')
virtualVolumeTitanQuotaUsageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaUsageReset.setStatus('obsolete')
virtualVolumeTitanQuotaUsageWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaUsageWarning.setStatus('obsolete')
virtualVolumeTitanQuotaUsageCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaUsageCritical.setStatus('obsolete')
virtualVolumeTitanQuotaFileCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaFileCountLimit.setStatus('obsolete')
virtualVolumeTitanQuotaFileCountHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaFileCountHardLimit.setStatus('obsolete')
virtualVolumeTitanQuotaFileCountReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaFileCountReset.setStatus('obsolete')
virtualVolumeTitanQuotaFileCountWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaFileCountWarning.setStatus('obsolete')
virtualVolumeTitanQuotaFileCountCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 5, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaFileCountCritical.setStatus('obsolete')
virtualVolumeTitanQuotaDefaultTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6), )
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultTable.setStatus('current')
virtualVolumeTitanQuotaDefaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanSpanId"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanName"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeQuotaDefaultTargetType"))
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultEntry.setStatus('current')
virtualVolumeQuotaDefaultTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("group", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeQuotaDefaultTargetType.setStatus('current')
virtualVolumeQuotaDefaultIgnoreWellKnownGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("include", 2), ("notapplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeQuotaDefaultIgnoreWellKnownGroups.setStatus('current')
virtualVolumeTitanQuotaDefaultUsageLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultUsageLimit.setStatus('current')
virtualVolumeTitanQuotaDefaultUsageHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultUsageHardLimit.setStatus('current')
virtualVolumeTitanQuotaDefaultUsageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultUsageReset.setStatus('current')
virtualVolumeTitanQuotaDefaultUsageWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultUsageWarning.setStatus('current')
virtualVolumeTitanQuotaDefaultUsageCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultUsageCritical.setStatus('current')
virtualVolumeTitanQuotaDefaultFileCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultFileCountLimit.setStatus('current')
virtualVolumeTitanQuotaDefaultFileCountHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultFileCountHardLimit.setStatus('current')
virtualVolumeTitanQuotaDefaultFileCountReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultFileCountReset.setStatus('current')
virtualVolumeTitanQuotaDefaultFileCountWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultFileCountWarning.setStatus('current')
virtualVolumeTitanQuotaDefaultFileCountCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 6, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotaDefaultFileCountCritical.setStatus('current')
virtualVolumeTitanQuotasTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7), )
if mibBuilder.loadTexts: virtualVolumeTitanQuotasTable.setStatus('current')
virtualVolumeTitanQuotasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanSpanId"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanName"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanQuotasTarget"), (0, "BLUEARC-TITAN-MIB", "virtualVolumeTitanQuotasTargetType"))
if mibBuilder.loadTexts: virtualVolumeTitanQuotasEntry.setStatus('current')
virtualVolumeTitanQuotasTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasTarget.setStatus('current')
virtualVolumeTitanQuotasType = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("explicit", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasType.setStatus('current')
virtualVolumeTitanQuotasTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("user", 1), ("group", 2), ("virtualvolume", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasTargetType.setStatus('current')
virtualVolumeTitanQuotasUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasUsage.setStatus('current')
virtualVolumeTitanQuotasFileCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasFileCount.setStatus('current')
virtualVolumeTitanQuotasUsageLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasUsageLimit.setStatus('current')
virtualVolumeTitanQuotasUsageHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasUsageHardLimit.setStatus('current')
virtualVolumeTitanQuotasUsageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasUsageReset.setStatus('current')
virtualVolumeTitanQuotasUsageWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasUsageWarning.setStatus('current')
virtualVolumeTitanQuotasUsageCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasUsageCritical.setStatus('current')
virtualVolumeTitanQuotasFileCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasFileCountLimit.setStatus('current')
virtualVolumeTitanQuotasFileCountHardLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasFileCountHardLimit.setStatus('current')
virtualVolumeTitanQuotasFileCountReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasFileCountReset.setStatus('current')
virtualVolumeTitanQuotasFileCountWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasFileCountWarning.setStatus('current')
virtualVolumeTitanQuotasFileCountCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 1, 7, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualVolumeTitanQuotasFileCountCritical.setStatus('current')
nvramSize = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramSize.setStatus('obsolete')
nvramMaximumUsed = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramMaximumUsed.setStatus('obsolete')
nvramTotalCurrentUsage = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramTotalCurrentUsage.setStatus('obsolete')
nvramNumber = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramNumber.setStatus('obsolete')
nvramTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 5), )
if mibBuilder.loadTexts: nvramTable.setStatus('obsolete')
nvramEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 5, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "spanId"))
if mibBuilder.loadTexts: nvramEntry.setStatus('obsolete')
spanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanId.setStatus('obsolete')
nvramCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramCurrentUsage.setStatus('obsolete')
nvramNumberCheckpoints = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramNumberCheckpoints.setStatus('obsolete')
nvramNumberActivityCheckpoints = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramNumberActivityCheckpoints.setStatus('obsolete')
nvramPoolTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 6), )
if mibBuilder.loadTexts: nvramPoolTable.setStatus('obsolete')
nvramPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 6, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "clusterNodeId"))
if mibBuilder.loadTexts: nvramPoolEntry.setStatus('obsolete')
clusterNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusterNodeId.setStatus('obsolete')
nvramPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramPoolSize.setStatus('obsolete')
nvramPoolMaximumUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramPoolMaximumUsed.setStatus('obsolete')
nvramPoolTotalCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 2, 2, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvramPoolTotalCurrentUsage.setStatus('obsolete')
lagNumber = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lagNumber.setStatus('current')
lagTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3, 1, 1, 2), )
if mibBuilder.loadTexts: lagTable.setStatus('current')
lagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3, 1, 1, 2, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "lagName"))
if mibBuilder.loadTexts: lagEntry.setStatus('current')
lagName = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3, 1, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lagName.setStatus('current')
linkedInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 3, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkedInterfaces.setStatus('current')
packageNumber = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: packageNumber.setStatus('current')
packageTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 2), )
if mibBuilder.loadTexts: packageTable.setStatus('current')
packageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 2, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "packageName"))
if mibBuilder.loadTexts: packageEntry.setStatus('current')
packageName = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packageName.setStatus('current')
packageDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packageDate.setStatus('current')
packageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: packageSize.setStatus('current')
packageDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("notdefault", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: packageDefault.setStatus('current')
packageCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("current", 0), ("notcurrent", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: packageCurrent.setStatus('current')
packageFreeSpace = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: packageFreeSpace.setStatus('current')
ftpConfigServiceEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigServiceEnabled.setStatus('obsolete')
ftpConfigServiceMaxUsers = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigServiceMaxUsers.setStatus('obsolete')
ftpConfigTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigTimeout.setStatus('obsolete')
ftpConfigNTPasswordEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("notavailable", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigNTPasswordEnabled.setStatus('obsolete')
ftpConfigNISPasswordEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("notavailable", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigNISPasswordEnabled.setStatus('obsolete')
ftpAuditLoggingTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6), )
if mibBuilder.loadTexts: ftpAuditLoggingTable.setStatus('obsolete')
ftpAuditLoggingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "ftpAuditLoggingEVS"))
if mibBuilder.loadTexts: ftpAuditLoggingEntry.setStatus('obsolete')
ftpAuditLoggingEVS = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpAuditLoggingEVS.setStatus('obsolete')
ftpConfigAuditLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigAuditLogging.setStatus('obsolete')
ftpConfigAuditLogDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigAuditLogDeviceId.setStatus('obsolete')
ftpConfigAuditLogDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigAuditLogDirectory.setStatus('obsolete')
ftpConfigAuditLogRecordsPerFile = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigAuditLogRecordsPerFile.setStatus('obsolete')
ftpConfigAuditMaximumLogFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpConfigAuditMaximumLogFiles.setStatus('obsolete')
ftpMountpointNumber = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpMountpointNumber.setStatus('obsolete')
ftpMountpointTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2, 2), )
if mibBuilder.loadTexts: ftpMountpointTable.setStatus('obsolete')
ftpMountpointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2, 2, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "ftpMountpointName"), (0, "BLUEARC-TITAN-MIB", "ftpMountpointEVS"))
if mibBuilder.loadTexts: ftpMountpointEntry.setStatus('obsolete')
ftpMountpointName = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpMountpointName.setStatus('obsolete')
ftpMountpointEVS = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpMountpointEVS.setStatus('obsolete')
ftpMountpointDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpMountpointDeviceId.setStatus('obsolete')
ftpMountpointNumberUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpMountpointNumberUsers.setStatus('obsolete')
ftpNumberUsers = MibScalar((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpNumberUsers.setStatus('obsolete')
ftpUsersTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 2), )
if mibBuilder.loadTexts: ftpUsersTable.setStatus('obsolete')
ftpUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 2, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "ftpUsersName"), (0, "BLUEARC-TITAN-MIB", "ftpUsersEVS"))
if mibBuilder.loadTexts: ftpUsersEntry.setStatus('obsolete')
ftpUsersName = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpUsersName.setStatus('obsolete')
ftpUsersEVS = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpUsersEVS.setStatus('obsolete')
ftpUsersMountPointExists = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exists", 1), ("doesnotExist", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpUsersMountPointExists.setStatus('obsolete')
ftpUsersMountPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpUsersMountPoint.setStatus('obsolete')
ftpUsersMountInitDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpUsersMountInitDirectory.setStatus('obsolete')
ftpStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1), )
if mibBuilder.loadTexts: ftpStatisticsTable.setStatus('current')
ftpStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1), ).setIndexNames((0, "BLUEARC-TITAN-MIB", "ftpStatisticsClusterNode"))
if mibBuilder.loadTexts: ftpStatisticsEntry.setStatus('current')
ftpStatisticsClusterNode = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsClusterNode.setStatus('current')
ftpStatisticsTotalSess = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsTotalSess.setStatus('current')
ftpStatisticsTotalFtpXferIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsTotalFtpXferIn.setStatus('current')
ftpStatisticsBytesTotalXferIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsBytesTotalXferIn.setStatus('current')
ftpStatisticsTotalFtpXferOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsTotalFtpXferOut.setStatus('current')
ftpStatisticsBytesTotalXferOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsBytesTotalXferOut.setStatus('current')
ftpStatisticsTotalFtpCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsTotalFtpCommands.setStatus('current')
ftpStatisticsTotalFtpReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsTotalFtpReplies.setStatus('current')
ftpStatisticsTotalBytesCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsTotalBytesCommands.setStatus('current')
ftpStatisticsTotalBytesReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 11096, 6, 2, 1, 5, 1, 4, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpStatisticsTotalBytesReplies.setStatus('current')
mibBuilder.exportSymbols("BLUEARC-TITAN-MIB", networkTitan=networkTitan, storageTitan=storageTitan, ftpTitan=ftpTitan, ftpConfigAuditLogRecordsPerFile=ftpConfigAuditLogRecordsPerFile, ftpUsersName=ftpUsersName, nvramNumberCheckpoints=nvramNumberCheckpoints, virtualVolumeTitanQuotaDefaultFileCountLimit=virtualVolumeTitanQuotaDefaultFileCountLimit, virtualVolumeTitanQuotaNumber=virtualVolumeTitanQuotaNumber, virtualVolumeTitanQuotaTemplateEntry=virtualVolumeTitanQuotaTemplateEntry, ftpStatisticsBytesTotalXferOut=ftpStatisticsBytesTotalXferOut, ftpUsersEntry=ftpUsersEntry, virtualVolumeQuotaDefaultIgnoreWellKnownGroups=virtualVolumeQuotaDefaultIgnoreWellKnownGroups, ftpMountpoints=ftpMountpoints, virtualVolumeTitanQuotaDefaultFileCountWarning=virtualVolumeTitanQuotaDefaultFileCountWarning, packageSize=packageSize, ftpMountpointEVS=ftpMountpointEVS, ftpConfigAuditLogDirectory=ftpConfigAuditLogDirectory, virtualVolumeTitanQuotaFileCountCritical=virtualVolumeTitanQuotaFileCountCritical, ftpUsersMountPointExists=ftpUsersMountPointExists, ftpMountpointNumberUsers=ftpMountpointNumberUsers, virtualVolumeQuotaTemplateIgnoreWellKnownGroups=virtualVolumeQuotaTemplateIgnoreWellKnownGroups, virtualVolumeTitanQuotaTemplateUsageWarning=virtualVolumeTitanQuotaTemplateUsageWarning, packageFreeSpace=packageFreeSpace, clusterNodeId=clusterNodeId, nvramPoolSize=nvramPoolSize, nvramPoolTotalCurrentUsage=nvramPoolTotalCurrentUsage, ftpUsersMountPoint=ftpUsersMountPoint, virtualVolumeTitanQuotaTargetType=virtualVolumeTitanQuotaTargetType, nvramNumberActivityCheckpoints=nvramNumberActivityCheckpoints, ftpAuditLoggingTable=ftpAuditLoggingTable, virtualVolumeTitanEmailNumber=virtualVolumeTitanEmailNumber, nvramCurrentUsage=nvramCurrentUsage, ftpUsersEVS=ftpUsersEVS, packageCurrent=packageCurrent, nvramNumber=nvramNumber, mgmntTitan=mgmntTitan, ftpStatisticsTotalFtpReplies=ftpStatisticsTotalFtpReplies, ethernetTitan=ethernetTitan, nvramPoolEntry=nvramPoolEntry, ftpStatisticsBytesTotalXferIn=ftpStatisticsBytesTotalXferIn, PYSNMP_MODULE_ID=blueArcTitan, ftpAuditLoggingEntry=ftpAuditLoggingEntry, virtualVolumeTitanQuotasUsageLimit=virtualVolumeTitanQuotasUsageLimit, packageDate=packageDate, virtualVolumeTitanQuotaDefaultFileCountCritical=virtualVolumeTitanQuotaDefaultFileCountCritical, spanId=spanId, packageDefault=packageDefault, virtualVolumeTitanQuotasFileCountHardLimit=virtualVolumeTitanQuotasFileCountHardLimit, ftpConfigNTPasswordEnabled=ftpConfigNTPasswordEnabled, virtualVolumeTitanQuotasFileCountCritical=virtualVolumeTitanQuotasFileCountCritical, ftpUser=ftpUser, virtualVolumeTitanQuotaFileCountReset=virtualVolumeTitanQuotaFileCountReset, virtualVolumeTitanPath=virtualVolumeTitanPath, ftpStatisticsTotalBytesCommands=ftpStatisticsTotalBytesCommands, lagEntry=lagEntry, virtualVolumeTitanQuotasEntry=virtualVolumeTitanQuotasEntry, virtualVolumeTitanQuotaUsageCritical=virtualVolumeTitanQuotaUsageCritical, ftpConfigServiceMaxUsers=ftpConfigServiceMaxUsers, ftpStatisticsEntry=ftpStatisticsEntry, virtualVolumeTitanQuotaDefaultFileCountHardLimit=virtualVolumeTitanQuotaDefaultFileCountHardLimit, virtualVolumeTitanQuotaTemplateFileCountReset=virtualVolumeTitanQuotaTemplateFileCountReset, virtualVolumeTitanTable=virtualVolumeTitanTable, virtualVolumeTitanQuotaTemplateFileCountHardLimit=virtualVolumeTitanQuotaTemplateFileCountHardLimit, virtualVolumeTitanQuotasTarget=virtualVolumeTitanQuotasTarget, virtualVolumeTitanQuotaFileCount=virtualVolumeTitanQuotaFileCount, virtualVolumeTitanQuotasTargetType=virtualVolumeTitanQuotasTargetType, virtualVolumeTitanName=virtualVolumeTitanName, virtualVolumeTitanQuotaTarget=virtualVolumeTitanQuotaTarget, virtualVolumeTitanQuotaDefaultTable=virtualVolumeTitanQuotaDefaultTable, virtualVolumeTitanQuotasFileCountWarning=virtualVolumeTitanQuotasFileCountWarning, packageTable=packageTable, ftpConfigAuditLogDeviceId=ftpConfigAuditLogDeviceId, virtualVolumeTitanQuotasUsageHardLimit=virtualVolumeTitanQuotasUsageHardLimit, ftpConfig=ftpConfig, nvramTotalCurrentUsage=nvramTotalCurrentUsage, ftpStatisticsTotalSess=ftpStatisticsTotalSess, virtualVolumeTitanQuotaTemplateUsageHardLimit=virtualVolumeTitanQuotaTemplateUsageHardLimit, ftpConfigTimeout=ftpConfigTimeout, virtualVolumeTitanQuotaDefaultUsageReset=virtualVolumeTitanQuotaDefaultUsageReset, packageEntry=packageEntry, lagTable=lagTable, packageName=packageName, virtualVolumeTitanEmailTable=virtualVolumeTitanEmailTable, ftpStatisticsTotalFtpCommands=ftpStatisticsTotalFtpCommands, virtualVolumeTitanQuotaDefaultUsageLimit=virtualVolumeTitanQuotaDefaultUsageLimit, nvram=nvram, virtualVolumeTitanQuotaTemplateUsageReset=virtualVolumeTitanQuotaTemplateUsageReset, virtualVolumeTitanSpanId=virtualVolumeTitanSpanId, virtualVolumeTitanNumber=virtualVolumeTitanNumber, nvramSize=nvramSize, virtualVolumeTitanEntry=virtualVolumeTitanEntry, ftpMountpointDeviceId=ftpMountpointDeviceId, ftpConfigAuditMaximumLogFiles=ftpConfigAuditMaximumLogFiles, ftpStatisticsTotalBytesReplies=ftpStatisticsTotalBytesReplies, packageMgmnt=packageMgmnt, ftpMountpointNumber=ftpMountpointNumber, virtualVolumeTitanQuotasFileCount=virtualVolumeTitanQuotasFileCount, virtualVolumeTitanQuotasUsageCritical=virtualVolumeTitanQuotasUsageCritical, ftpStatisticsTotalFtpXferIn=ftpStatisticsTotalFtpXferIn, virtualVolumeTitanQuotaTable=virtualVolumeTitanQuotaTable, ftpStatisticsClusterNode=ftpStatisticsClusterNode, virtualVolumeTitanQuotaTemplateUsageLimit=virtualVolumeTitanQuotaTemplateUsageLimit, virtualVolumeTitanEmailEntry=virtualVolumeTitanEmailEntry, virtualVolumeTitanQuotasFileCountLimit=virtualVolumeTitanQuotasFileCountLimit, virtualVolumeTitanQuotaUsageWarning=virtualVolumeTitanQuotaUsageWarning, lagNumber=lagNumber, fileProtocolTitan=fileProtocolTitan, ftpStatisticsTotalFtpXferOut=ftpStatisticsTotalFtpXferOut, blueArcTitan=blueArcTitan, virtualVolumeTitanQuotaDefaultUsageHardLimit=virtualVolumeTitanQuotaDefaultUsageHardLimit, nvramMaximumUsed=nvramMaximumUsed, linkedInterfaces=linkedInterfaces, ftpMountpointName=ftpMountpointName, ftpConfigNISPasswordEnabled=ftpConfigNISPasswordEnabled, virtualVolumeTitanQuotaEntry=virtualVolumeTitanQuotaEntry, lagName=lagName, virtualVolumeTitanQuotasUsage=virtualVolumeTitanQuotasUsage, nvramTable=nvramTable, virtualVolumeTitanQuotaDefaultFileCountReset=virtualVolumeTitanQuotaDefaultFileCountReset, packageNumber=packageNumber, virtualVolumeTitanQuotaDefaultUsageCritical=virtualVolumeTitanQuotaDefaultUsageCritical, virtualVolumeTitanQuotaTemplateTable=virtualVolumeTitanQuotaTemplateTable, virtualVolumeTitanQuotaDefaultUsageWarning=virtualVolumeTitanQuotaDefaultUsageWarning, ftpStatisticsTable=ftpStatisticsTable, ftpConfigServiceEnabled=ftpConfigServiceEnabled, nvramEntry=nvramEntry, virtualVolumeTitanQuotaFileCountWarning=virtualVolumeTitanQuotaFileCountWarning, virtualVolumeTitanQuotaUsageReset=virtualVolumeTitanQuotaUsageReset, virtualVolumeTitanQuotaDefaultEntry=virtualVolumeTitanQuotaDefaultEntry, virtualVolumeTitanQuotaTemplateFileCountWarning=virtualVolumeTitanQuotaTemplateFileCountWarning, ftpConfigAuditLogging=ftpConfigAuditLogging, ftpUsersMountInitDirectory=ftpUsersMountInitDirectory, virtualVolumeTitanQuotaUsageLimit=virtualVolumeTitanQuotaUsageLimit, virtualVolumeTitanQuotasType=virtualVolumeTitanQuotasType, ftpMountpointTable=ftpMountpointTable, ftpMountpointEntry=ftpMountpointEntry, linkAggregation=linkAggregation, virtualVolumeTitanQuotasFileCountReset=virtualVolumeTitanQuotasFileCountReset, virtualVolumeTitanQuotaUsageHardLimit=virtualVolumeTitanQuotaUsageHardLimit, ftpStatistics=ftpStatistics, virtualVolumeTitanQuotaFileCountHardLimit=virtualVolumeTitanQuotaFileCountHardLimit, blueArcTitanObjs=blueArcTitanObjs, virtualVolumeTitanQuotaUsage=virtualVolumeTitanQuotaUsage, virtualVolumeTitanQuotaFileCountLimit=virtualVolumeTitanQuotaFileCountLimit, virtualVolumeQuotaTemplateTargetType=virtualVolumeQuotaTemplateTargetType, virtualVolumeQuotaDefaultTargetType=virtualVolumeQuotaDefaultTargetType, nvramPoolTable=nvramPoolTable, virtualVolumeTitanQuotasTable=virtualVolumeTitanQuotasTable, ftpUsersTable=ftpUsersTable, virtualVolumesTitan=virtualVolumesTitan, nvramPoolMaximumUsed=nvramPoolMaximumUsed, ftpNumberUsers=ftpNumberUsers, virtualVolumeTitanEmailAddress=virtualVolumeTitanEmailAddress, virtualVolumeTitanQuotasUsageWarning=virtualVolumeTitanQuotasUsageWarning, ftpAuditLoggingEVS=ftpAuditLoggingEVS, virtualVolumeTitanQuotaTemplateUsageCritical=virtualVolumeTitanQuotaTemplateUsageCritical, virtualVolumeTitanQuotasUsageReset=virtualVolumeTitanQuotasUsageReset, systemTitan=systemTitan, virtualVolumeTitanQuotaType=virtualVolumeTitanQuotaType, virtualVolumeTitanQuotaTemplateFileCountCritical=virtualVolumeTitanQuotaTemplateFileCountCritical, virtualVolumeTitanQuotaTemplateFileCountLimit=virtualVolumeTitanQuotaTemplateFileCountLimit)
