#
# PySNMP MIB module CAMBIUM-PTP600-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CAMBIUM-PTP600-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, ModuleIdentity, enterprises, Unsigned32, Counter32, iso, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Integer32, Counter64, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "enterprises", "Unsigned32", "Counter32", "iso", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Integer32", "Counter64", "Gauge32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cambium = ModuleIdentity((1, 3, 6, 1, 4, 1, 17713))
cambium.setRevisions(('2012-12-17 13:30', '2012-05-01 11:58', '2012-02-13 12:38', '2011-11-08 13:47', '2010-12-07 13:28', '2010-11-02 13:33', '2010-07-16 15:41', '2010-04-23 10:07', '2010-02-19 18:55', '2009-07-10 15:20', '2009-02-27 17:11', '2008-12-15 12:19', '2008-06-30 10:16', '2008-02-29 09:42', '2007-07-31 18:39', '2006-11-23 14:36', '2006-07-24 10:08',))
if mibBuilder.loadTexts: cambium.setLastUpdated('201212171330Z')
if mibBuilder.loadTexts: cambium.setOrganization('Cambium Networks Ltd.')
ptp = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 1))
ptmp = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 2))
ptp600 = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6))
dfs = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 3))
bridge = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 4))
configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 5))
ethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 6))
telecom = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 7))
licence = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 8))
management = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 9))
phyControl = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 10))
phyStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 12))
alarms = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 13))
smtp = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 15))
snmpControl = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 16))
sntp = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 17))
reset = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 18))
versions = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 19))
pubStats = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 20))
encryption = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 22))
tDDControl = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 23))
syslogControl = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 24))
supplementary = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 96))
ptpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 98))
ptpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 99))
ptpTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0))
ptpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 17713, 6, 97)).setObjects(("CAMBIUM-PTP600-MIB", "dfsGroup"), ("CAMBIUM-PTP600-MIB", "bridgeGroup"), ("CAMBIUM-PTP600-MIB", "configurationGroup"), ("CAMBIUM-PTP600-MIB", "ethernetGroup"), ("CAMBIUM-PTP600-MIB", "telecomGroup"), ("CAMBIUM-PTP600-MIB", "licenceGroup"), ("CAMBIUM-PTP600-MIB", "managementGroup"), ("CAMBIUM-PTP600-MIB", "phyControlGroup"), ("CAMBIUM-PTP600-MIB", "phyStatusGroup"), ("CAMBIUM-PTP600-MIB", "alarmsGroup"), ("CAMBIUM-PTP600-MIB", "smtpGroup"), ("CAMBIUM-PTP600-MIB", "snmpControlGroup"), ("CAMBIUM-PTP600-MIB", "sntpGroup"), ("CAMBIUM-PTP600-MIB", "resetGroup"), ("CAMBIUM-PTP600-MIB", "versionsGroup"), ("CAMBIUM-PTP600-MIB", "pubStatsGroup"), ("CAMBIUM-PTP600-MIB", "encryptionGroup"), ("CAMBIUM-PTP600-MIB", "tDDControlGroup"), ("CAMBIUM-PTP600-MIB", "syslogControlGroup"), ("CAMBIUM-PTP600-MIB", "supplementaryGroup"), ("CAMBIUM-PTP600-MIB", "notificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ptpCompliance = ptpCompliance.setStatus('current')
dfsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 3)).setObjects(("CAMBIUM-PTP600-MIB", "dfsTableNumber"), ("CAMBIUM-PTP600-MIB", "dfsMeans"), ("CAMBIUM-PTP600-MIB", "dfsNineNinePointNinePercentiles"), ("CAMBIUM-PTP600-MIB", "dfsPeaks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfsGroup = dfsGroup.setStatus('current')
bridgeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 4)).setObjects(("CAMBIUM-PTP600-MIB", "localPacketFiltering"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bridgeGroup = bridgeGroup.setStatus('current')
configurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 5)).setObjects(("CAMBIUM-PTP600-MIB", "iPAddress"), ("CAMBIUM-PTP600-MIB", "subnetMask"), ("CAMBIUM-PTP600-MIB", "gatewayIPAddress"), ("CAMBIUM-PTP600-MIB", "targetMACAddress"), ("CAMBIUM-PTP600-MIB", "masterSlaveMode"), ("CAMBIUM-PTP600-MIB", "maximumTransmitPower"), ("CAMBIUM-PTP600-MIB", "antennaGain"), ("CAMBIUM-PTP600-MIB", "cableLoss"), ("CAMBIUM-PTP600-MIB", "eIRP"), ("CAMBIUM-PTP600-MIB", "ethernetCappedMaxWirelessSpeed"), ("CAMBIUM-PTP600-MIB", "channelBandwidth"), ("CAMBIUM-PTP600-MIB", "remoteIPAddress"), ("CAMBIUM-PTP600-MIB", "linkName"), ("CAMBIUM-PTP600-MIB", "siteName"), ("CAMBIUM-PTP600-MIB", "accessMethod"), ("CAMBIUM-PTP600-MIB", "groupID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    configurationGroup = configurationGroup.setStatus('current')
ethernetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 6)).setObjects(("CAMBIUM-PTP600-MIB", "dataPortAutoNegotiation"), ("CAMBIUM-PTP600-MIB", "dataPortAutoNegAdvertisement"), ("CAMBIUM-PTP600-MIB", "dataPortAutoMdix"), ("CAMBIUM-PTP600-MIB", "dataPortStatus"), ("CAMBIUM-PTP600-MIB", "dataPortSpeedAndDuplex"), ("CAMBIUM-PTP600-MIB", "dataPortWirelessDownAlert"), ("CAMBIUM-PTP600-MIB", "useVLANForManagementInterfaces"), ("CAMBIUM-PTP600-MIB", "vLANManagementPriority"), ("CAMBIUM-PTP600-MIB", "vLANManagementVID"), ("CAMBIUM-PTP600-MIB", "managementPortStatus"), ("CAMBIUM-PTP600-MIB", "managementPortSpeedAndDuplex"), ("CAMBIUM-PTP600-MIB", "ethernetPriorityTableNumber"), ("CAMBIUM-PTP600-MIB", "l2CPPriorityTableNumber"), ("CAMBIUM-PTP600-MIB", "iPDSCPPriorityTableNumber"), ("CAMBIUM-PTP600-MIB", "mPLSTCPriorityTableNumber"), ("CAMBIUM-PTP600-MIB", "managementMode"), ("CAMBIUM-PTP600-MIB", "managementPortWirelessDownAlert"), ("CAMBIUM-PTP600-MIB", "qOSPriorityScheme"), ("CAMBIUM-PTP600-MIB", "unknownNetworkPriorityQueueMapping"), ("CAMBIUM-PTP600-MIB", "dSCPManagementPriority"), ("CAMBIUM-PTP600-MIB", "ethernetBridgingStatus"), ("CAMBIUM-PTP600-MIB", "ethernetPriorityQueueMapping"), ("CAMBIUM-PTP600-MIB", "l2CPPriorityQueueMapping"), ("CAMBIUM-PTP600-MIB", "iPDSCPPriorityQueueMapping"), ("CAMBIUM-PTP600-MIB", "mPLSTCPriorityQueueMapping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ethernetGroup = ethernetGroup.setStatus('current')
telecomGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 7)).setObjects(("CAMBIUM-PTP600-MIB", "telecomsInterface"), ("CAMBIUM-PTP600-MIB", "telecomsChannelAStatus"), ("CAMBIUM-PTP600-MIB", "telecomsChannelBStatus"), ("CAMBIUM-PTP600-MIB", "channelALineCode"), ("CAMBIUM-PTP600-MIB", "channelBLineCode"), ("CAMBIUM-PTP600-MIB", "channelACableLength"), ("CAMBIUM-PTP600-MIB", "channelBCableLength"), ("CAMBIUM-PTP600-MIB", "channelALoopback"), ("CAMBIUM-PTP600-MIB", "channelBLoopback"), ("CAMBIUM-PTP600-MIB", "telecomsChannelSelection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    telecomGroup = telecomGroup.setStatus('current')
licenceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 8)).setObjects(("CAMBIUM-PTP600-MIB", "regionCode"), ("CAMBIUM-PTP600-MIB", "productVariant"), ("CAMBIUM-PTP600-MIB", "productName"), ("CAMBIUM-PTP600-MIB", "ethernetFiberSupport"), ("CAMBIUM-PTP600-MIB", "frequencyVariant"), ("CAMBIUM-PTP600-MIB", "bandwidthVariant"), ("CAMBIUM-PTP600-MIB", "constantPowerSpectralDensity"), ("CAMBIUM-PTP600-MIB", "sNMPv3Enable"), ("CAMBIUM-PTP600-MIB", "hAZLOCConfiguration"), ("CAMBIUM-PTP600-MIB", "securityLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    licenceGroup = licenceGroup.setStatus('current')
managementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 9)).setObjects(("CAMBIUM-PTP600-MIB", "targetRange"), ("CAMBIUM-PTP600-MIB", "rangingMode"), ("CAMBIUM-PTP600-MIB", "installStatus"), ("CAMBIUM-PTP600-MIB", "installArmState"), ("CAMBIUM-PTP600-MIB", "tFTPServerIPAddress"), ("CAMBIUM-PTP600-MIB", "tFTPServerPortNumber"), ("CAMBIUM-PTP600-MIB", "tFTPSoftwareUpgradeFileName"), ("CAMBIUM-PTP600-MIB", "tFTPStartSoftwareUpgrade"), ("CAMBIUM-PTP600-MIB", "tFTPSoftwareUpgradeStatus"), ("CAMBIUM-PTP600-MIB", "tFTPSoftwareUpgradeStatusText"), ("CAMBIUM-PTP600-MIB", "tFTPSoftwareUpgradeStatusAdditionalText"), ("CAMBIUM-PTP600-MIB", "hTTPAccessEnabled"), ("CAMBIUM-PTP600-MIB", "telnetAccessEnabled"), ("CAMBIUM-PTP600-MIB", "hTTPPortNumber"), ("CAMBIUM-PTP600-MIB", "hTTPSPortNumber"), ("CAMBIUM-PTP600-MIB", "telnetPortNumber"), ("CAMBIUM-PTP600-MIB", "hTTPSAccessEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    managementGroup = managementGroup.setStatus('current')
phyControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 10)).setObjects(("CAMBIUM-PTP600-MIB", "linkSymmetry"), ("CAMBIUM-PTP600-MIB", "linkModeOptimisation"), ("CAMBIUM-PTP600-MIB", "userConfiguredMaxModulationMode"), ("CAMBIUM-PTP600-MIB", "remoteMaximumTransmitPower"), ("CAMBIUM-PTP600-MIB", "txColorCode"), ("CAMBIUM-PTP600-MIB", "rxColorCode"), ("CAMBIUM-PTP600-MIB", "automaticTxPowerControl"), ("CAMBIUM-PTP600-MIB", "remoteRxTargetPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    phyControlGroup = phyControlGroup.setStatus('current')
phyStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 12)).setObjects(("CAMBIUM-PTP600-MIB", "receivePower"), ("CAMBIUM-PTP600-MIB", "vectorError"), ("CAMBIUM-PTP600-MIB", "transmitPower"), ("CAMBIUM-PTP600-MIB", "range"), ("CAMBIUM-PTP600-MIB", "linkLoss"), ("CAMBIUM-PTP600-MIB", "receiveChannel"), ("CAMBIUM-PTP600-MIB", "transmitChannel"), ("CAMBIUM-PTP600-MIB", "receiveModulationMode"), ("CAMBIUM-PTP600-MIB", "transmitModulationMode"), ("CAMBIUM-PTP600-MIB", "receiveFreqMHz"), ("CAMBIUM-PTP600-MIB", "transmitFreqMHz"), ("CAMBIUM-PTP600-MIB", "signalStrengthRatio"), ("CAMBIUM-PTP600-MIB", "receiveFreqKHz"), ("CAMBIUM-PTP600-MIB", "transmitFreqKHz"), ("CAMBIUM-PTP600-MIB", "searchState"), ("CAMBIUM-PTP600-MIB", "rawReceivePower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    phyStatusGroup = phyStatusGroup.setStatus('current')
alarmsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 13)).setObjects(("CAMBIUM-PTP600-MIB", "unitOutOfCalibration"), ("CAMBIUM-PTP600-MIB", "encryptionEnabledMismatch"), ("CAMBIUM-PTP600-MIB", "incompatibleRegionCodes"), ("CAMBIUM-PTP600-MIB", "noWirelessChannelAvailable"), ("CAMBIUM-PTP600-MIB", "wirelessLinkDisabledWarning"), ("CAMBIUM-PTP600-MIB", "dataPortDisabledWarning"), ("CAMBIUM-PTP600-MIB", "dataPortFiberStatus"), ("CAMBIUM-PTP600-MIB", "dataPortConfigurationMismatch"), ("CAMBIUM-PTP600-MIB", "incompatibleMasterAndSlave"), ("CAMBIUM-PTP600-MIB", "tDDSynchronizationStatus"), ("CAMBIUM-PTP600-MIB", "managementPortDisabledWarning"), ("CAMBIUM-PTP600-MIB", "tDDSynchronizationAlarm"), ("CAMBIUM-PTP600-MIB", "linkModeOptimizationMismatch"), ("CAMBIUM-PTP600-MIB", "managementPortConfigurationMismatch"), ("CAMBIUM-PTP600-MIB", "secureModeAlarm"), ("CAMBIUM-PTP600-MIB", "ethernetBridgingStatusAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alarmsGroup = alarmsGroup.setStatus('current')
smtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 15)).setObjects(("CAMBIUM-PTP600-MIB", "sMTPEmailAlert"), ("CAMBIUM-PTP600-MIB", "sMTPServerIPAddress"), ("CAMBIUM-PTP600-MIB", "sMTPServerPortNumber"), ("CAMBIUM-PTP600-MIB", "sMTPSourceEmailAddress"), ("CAMBIUM-PTP600-MIB", "sMTPDestinationEmailAddress"), ("CAMBIUM-PTP600-MIB", "sMTPEnabledMessages"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smtpGroup = smtpGroup.setStatus('current')
snmpControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 16)).setObjects(("CAMBIUM-PTP600-MIB", "sNMPPortNumber"), ("CAMBIUM-PTP600-MIB", "sNMPCommunityString"), ("CAMBIUM-PTP600-MIB", "sNMPTrapTableNumber"), ("CAMBIUM-PTP600-MIB", "sNMPTrapVersion"), ("CAMBIUM-PTP600-MIB", "sNMPEnabledTraps"), ("CAMBIUM-PTP600-MIB", "enabledDiagnosticAlarms"), ("CAMBIUM-PTP600-MIB", "sNMPTrapIPAddress"), ("CAMBIUM-PTP600-MIB", "sNMPTrapPortNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snmpControlGroup = snmpControlGroup.setStatus('current')
sntpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 17)).setObjects(("CAMBIUM-PTP600-MIB", "sNTPState"), ("CAMBIUM-PTP600-MIB", "sNTPPollInterval"), ("CAMBIUM-PTP600-MIB", "sNTPSync"), ("CAMBIUM-PTP600-MIB", "sNTPLastSync"), ("CAMBIUM-PTP600-MIB", "systemClock"), ("CAMBIUM-PTP600-MIB", "timeZone"), ("CAMBIUM-PTP600-MIB", "daylightSaving"), ("CAMBIUM-PTP600-MIB", "sNTPPrimaryServer"), ("CAMBIUM-PTP600-MIB", "sNTPPrimaryServerDeadTime"), ("CAMBIUM-PTP600-MIB", "sNTPServerRetries"), ("CAMBIUM-PTP600-MIB", "sNTPServerTimeout"), ("CAMBIUM-PTP600-MIB", "sNTPServerTableNumber"), ("CAMBIUM-PTP600-MIB", "sNTPServerIPAddress"), ("CAMBIUM-PTP600-MIB", "sNTPServerPortNumber"), ("CAMBIUM-PTP600-MIB", "sNTPServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sntpGroup = sntpGroup.setStatus('current')
resetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 18)).setObjects(("CAMBIUM-PTP600-MIB", "systemReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    resetGroup = resetGroup.setStatus('current')
versionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 19)).setObjects(("CAMBIUM-PTP600-MIB", "softwareVersion"), ("CAMBIUM-PTP600-MIB", "hardwareVersion"), ("CAMBIUM-PTP600-MIB", "secondarySoftwareVersion"), ("CAMBIUM-PTP600-MIB", "bootVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    versionsGroup = versionsGroup.setStatus('current')
pubStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 20)).setObjects(("CAMBIUM-PTP600-MIB", "receiveDataRate"), ("CAMBIUM-PTP600-MIB", "transmitDataRate"), ("CAMBIUM-PTP600-MIB", "aggregateDataRate"), ("CAMBIUM-PTP600-MIB", "wirelessLinkAvailability"), ("CAMBIUM-PTP600-MIB", "wirelessLinkStatus"), ("CAMBIUM-PTP600-MIB", "byteErrorRatio"), ("CAMBIUM-PTP600-MIB", "receiveModulationModeDetail"), ("CAMBIUM-PTP600-MIB", "ethernetBridgingAvailability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pubStatsGroup = pubStatsGroup.setStatus('current')
encryptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 22)).setObjects(("CAMBIUM-PTP600-MIB", "encryptionAlgorithm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    encryptionGroup = encryptionGroup.setStatus('current')
tDDControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 23)).setObjects(("CAMBIUM-PTP600-MIB", "tDDSynchronizationMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tDDControlGroup = tDDControlGroup.setStatus('current')
syslogControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 24)).setObjects(("CAMBIUM-PTP600-MIB", "syslogClient"), ("CAMBIUM-PTP600-MIB", "syslogState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    syslogControlGroup = syslogControlGroup.setStatus('current')
supplementaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 96)).setObjects(("CAMBIUM-PTP600-MIB", "longitude"), ("CAMBIUM-PTP600-MIB", "latitude"), ("CAMBIUM-PTP600-MIB", "altitude"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    supplementaryGroup = supplementaryGroup.setStatus('current')
notificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 17713, 6, 98, 99)).setObjects(("CAMBIUM-PTP600-MIB", "dfsChannelChangeTrap"), ("CAMBIUM-PTP600-MIB", "dfsImpulsiveInterferenceTrap"), ("CAMBIUM-PTP600-MIB", "dataPortStatusTrap"), ("CAMBIUM-PTP600-MIB", "telecomsChannelAStatusTrap"), ("CAMBIUM-PTP600-MIB", "telecomsChannelBStatusTrap"), ("CAMBIUM-PTP600-MIB", "channelALoopbackTrap"), ("CAMBIUM-PTP600-MIB", "channelBLoopbackTrap"), ("CAMBIUM-PTP600-MIB", "regionCodeTrap"), ("CAMBIUM-PTP600-MIB", "installStatusTrap"), ("CAMBIUM-PTP600-MIB", "installArmStateTrap"), ("CAMBIUM-PTP600-MIB", "unitOutOfCalibrationTrap"), ("CAMBIUM-PTP600-MIB", "encryptionEnabledMismatchTrap"), ("CAMBIUM-PTP600-MIB", "incompatibleRegionCodesTrap"), ("CAMBIUM-PTP600-MIB", "noWirelessChannelAvailableTrap"), ("CAMBIUM-PTP600-MIB", "wirelessLinkDisabledWarningTrap"), ("CAMBIUM-PTP600-MIB", "dataPortDisabledWarningTrap"), ("CAMBIUM-PTP600-MIB", "dataPortFiberStatusTrap"), ("CAMBIUM-PTP600-MIB", "dataPortConfigurationMismatchTrap"), ("CAMBIUM-PTP600-MIB", "incompatibleMasterAndSlaveTrap"), ("CAMBIUM-PTP600-MIB", "sNTPSyncTrap"), ("CAMBIUM-PTP600-MIB", "tDDSynchronizationAlarmTrap"), ("CAMBIUM-PTP600-MIB", "managementPortStatusTrap"), ("CAMBIUM-PTP600-MIB", "managementPortDisabledWarningTrap"), ("CAMBIUM-PTP600-MIB", "linkModeOptimizationMismatchTrap"), ("CAMBIUM-PTP600-MIB", "managementPortConfigurationMismatchTrap"), ("CAMBIUM-PTP600-MIB", "syslogStateTrap"), ("CAMBIUM-PTP600-MIB", "syslogLocalNearlyFullTrap"), ("CAMBIUM-PTP600-MIB", "syslogLocalWrappedTrap"), ("CAMBIUM-PTP600-MIB", "syslogClientTrap"), ("CAMBIUM-PTP600-MIB", "secureModeAlarmTrap"), ("CAMBIUM-PTP600-MIB", "ethernetBridgingStatusAlarmTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    notificationsGroup = notificationsGroup.setStatus('current')
dfsTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 6, 3, 2), )
if mibBuilder.loadTexts: dfsTable.setStatus('current')
dfsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 6, 3, 2, 1), ).setIndexNames((0, "CAMBIUM-PTP600-MIB", "dfsTableIndex"))
if mibBuilder.loadTexts: dfsTableEntry.setStatus('current')
ethernetPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 6, 6, 15), )
if mibBuilder.loadTexts: ethernetPriorityTable.setStatus('current')
ethernetPriorityTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 6, 6, 15, 1), ).setIndexNames((0, "CAMBIUM-PTP600-MIB", "ethernetPriorityTableIndex"))
if mibBuilder.loadTexts: ethernetPriorityTableEntry.setStatus('current')
l2CPPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 6, 6, 17), )
if mibBuilder.loadTexts: l2CPPriorityTable.setStatus('current')
l2CPPriorityTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 6, 6, 17, 1), ).setIndexNames((0, "CAMBIUM-PTP600-MIB", "l2CPPriorityTableIndex"))
if mibBuilder.loadTexts: l2CPPriorityTableEntry.setStatus('current')
iPDSCPPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 6, 6, 19), )
if mibBuilder.loadTexts: iPDSCPPriorityTable.setStatus('current')
iPDSCPPriorityTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 6, 6, 19, 1), ).setIndexNames((0, "CAMBIUM-PTP600-MIB", "iPDSCPPriorityTableIndex"))
if mibBuilder.loadTexts: iPDSCPPriorityTableEntry.setStatus('current')
mPLSTCPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 6, 6, 21), )
if mibBuilder.loadTexts: mPLSTCPriorityTable.setStatus('current')
mPLSTCPriorityTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 6, 6, 21, 1), ).setIndexNames((0, "CAMBIUM-PTP600-MIB", "mPLSTCPriorityTableIndex"))
if mibBuilder.loadTexts: mPLSTCPriorityTableEntry.setStatus('current')
sNMPTrapTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 6, 16, 4), )
if mibBuilder.loadTexts: sNMPTrapTable.setStatus('current')
sNMPTrapTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 6, 16, 4, 1), ).setIndexNames((0, "CAMBIUM-PTP600-MIB", "sNMPTrapTableIndex"))
if mibBuilder.loadTexts: sNMPTrapTableEntry.setStatus('current')
sNTPServerTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 6, 17, 15), )
if mibBuilder.loadTexts: sNTPServerTable.setStatus('current')
sNTPServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 6, 17, 15, 1), ).setIndexNames((0, "CAMBIUM-PTP600-MIB", "sNTPServerTableIndex"))
if mibBuilder.loadTexts: sNTPServerTableEntry.setStatus('current')
dfsTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsTableNumber.setStatus('current')
dfsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)))
if mibBuilder.loadTexts: dfsTableIndex.setStatus('current')
dfsMeans = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsMeans.setStatus('current')
dfsNineNinePointNinePercentiles = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsNineNinePointNinePercentiles.setStatus('current')
dfsPeaks = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsPeaks.setStatus('current')
localPacketFiltering = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localPacketFiltering.setStatus('current')
iPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iPAddress.setStatus('current')
subnetMask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnetMask.setStatus('current')
gatewayIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gatewayIPAddress.setStatus('current')
targetMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetMACAddress.setStatus('current')
masterSlaveMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: masterSlaveMode.setStatus('current')
maximumTransmitPower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: maximumTransmitPower.setStatus('current')
antennaGain = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 610))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: antennaGain.setStatus('current')
cableLoss = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cableLoss.setStatus('current')
eIRP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eIRP.setStatus('current')
ethernetCappedMaxWirelessSpeed = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethernetCappedMaxWirelessSpeed.setStatus('current')
channelBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("bw30MHz", 0), ("bw15MHz", 1), ("bw10MHz", 2), ("bw5MHz", 3), ("bw20MHz", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelBandwidth.setStatus('current')
remoteIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteIPAddress.setStatus('current')
linkName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkName.setStatus('current')
siteName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteName.setStatus('current')
accessMethod = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("linkAccess", 0), ("linkNameAccess", 1), ("groupAccess", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accessMethod.setStatus('current')
groupID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 5, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupID.setStatus('current')
dataPortAutoNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataPortAutoNegotiation.setStatus('current')
dataPortAutoNegAdvertisement = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 2), Bits().clone(namedValues=NamedValues(("negInvalid", 2), ("neg10MbpsHalfDuplex", 3), ("neg10MbpsFullDuplex", 4), ("neg100MbpsHalfDuplex", 5), ("neg100MbpsFullDuplex", 6), ("neg1000MbpsFullDuplex", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataPortAutoNegAdvertisement.setStatus('current')
dataPortAutoMdix = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataPortAutoMdix.setStatus('current')
dataPortStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("down", 0), ("copperLinkUp", 1), ("fiberLinkUp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dataPortStatus.setStatus('current')
dataPortSpeedAndDuplex = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("speed1000MbpsFullDuplex", 0), ("speed100MbpsFullDuplex", 1), ("speed100MbpsHalfDuplex", 2), ("speed10MbpsFullDuplex", 3), ("speed10MbpsHalfDuplex", 4), ("speedUnknown6", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dataPortSpeedAndDuplex.setStatus('current')
dataPortWirelessDownAlert = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataPortWirelessDownAlert.setStatus('current')
useVLANForManagementInterfaces = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noVLANTagging", 0), ("iEEE8021QTaggedCTagType8100", 1), ("iEEE8021adTaggedSTagorBTagType88a8", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: useVLANForManagementInterfaces.setStatus('current')
vLANManagementPriority = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("p0", 0), ("p1", 1), ("p2", 2), ("p3", 3), ("p4", 4), ("p5", 5), ("p6", 6), ("p7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANManagementPriority.setStatus('current')
vLANManagementVID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANManagementVID.setStatus('current')
managementPortStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("copperLinkUp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementPortStatus.setStatus('current')
managementPortSpeedAndDuplex = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("speed100MbpsFullDuplex", 1), ("speed100MbpsHalfDuplex", 2), ("speed10MbpsFullDuplex", 3), ("speed10MbpsHalfDuplex", 4), ("speedUnknown6", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementPortSpeedAndDuplex.setStatus('current')
ethernetPriorityTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetPriorityTableNumber.setStatus('current')
l2CPPriorityTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2CPPriorityTableNumber.setStatus('current')
iPDSCPPriorityTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPDSCPPriorityTableNumber.setStatus('current')
mPLSTCPriorityTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mPLSTCPriorityTableNumber.setStatus('current')
managementMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("outofBandLocal", 0), ("outofBand", 1), ("inBand", 2), ("inBandLocal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementMode.setStatus('current')
managementPortWirelessDownAlert = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementPortWirelessDownAlert.setStatus('current')
qOSPriorityScheme = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ethernet", 0), ("iPMPLS", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qOSPriorityScheme.setStatus('current')
unknownNetworkPriorityQueueMapping = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("q0", 0), ("q1", 1), ("q2", 2), ("q3", 3), ("q4", 4), ("q5", 5), ("q6", 6), ("q7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unknownNetworkPriorityQueueMapping.setStatus('current')
dSCPManagementPriority = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dSCPManagementPriority.setStatus('current')
ethernetBridgingStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 6, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetBridgingStatus.setStatus('current')
ethernetPriorityTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("p0", 1), ("p1", 2), ("p2", 3), ("p3", 4), ("p4", 5), ("p5", 6), ("p6", 7), ("p7", 8), ("untagged", 9))))
if mibBuilder.loadTexts: ethernetPriorityTableIndex.setStatus('current')
ethernetPriorityQueueMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("q0", 0), ("q1", 1), ("q2", 2), ("q3", 3), ("q4", 4), ("q5", 5), ("q6", 6), ("q7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethernetPriorityQueueMapping.setStatus('current')
l2CPPriorityTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("bridge", 1), ("mRP", 2), ("cFM", 3), ("rAPS", 4), ("eAPS", 5))))
if mibBuilder.loadTexts: l2CPPriorityTableIndex.setStatus('current')
l2CPPriorityQueueMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("q0", 0), ("q1", 1), ("q2", 2), ("q3", 3), ("q4", 4), ("q5", 5), ("q6", 6), ("q7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2CPPriorityQueueMapping.setStatus('current')
iPDSCPPriorityTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: iPDSCPPriorityTableIndex.setStatus('current')
iPDSCPPriorityQueueMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("q0", 0), ("q1", 1), ("q2", 2), ("q3", 3), ("q4", 4), ("q5", 5), ("q6", 6), ("q7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iPDSCPPriorityQueueMapping.setStatus('current')
mPLSTCPriorityTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: mPLSTCPriorityTableIndex.setStatus('current')
mPLSTCPriorityQueueMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 6, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("q0", 0), ("q1", 1), ("q2", 2), ("q3", 3), ("q4", 4), ("q5", 5), ("q6", 6), ("q7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mPLSTCPriorityQueueMapping.setStatus('current')
telecomsInterface = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("e1", 1), ("t1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telecomsInterface.setStatus('current')
telecomsChannelAStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 0), ("noSignalLocal", 1), ("noSignalRemote", 2), ("noSignalLocalandRemote", 3), ("up", 4), ("remoteTiming", 5), ("noSignalLocalandRemoteTiming", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telecomsChannelAStatus.setStatus('current')
telecomsChannelBStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 0), ("noSignalLocal", 1), ("noSignalRemote", 2), ("noSignalLocalandRemote", 3), ("up", 4), ("remoteTiming", 5), ("noSignalLocalandRemoteTiming", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telecomsChannelBStatus.setStatus('current')
channelALineCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aMI", 0), ("b8ZSHDB3", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelALineCode.setStatus('current')
channelBLineCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aMI", 0), ("b8ZSHDB3", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelBLineCode.setStatus('current')
channelACableLength = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("feet133", 0), ("feet266", 1), ("feet399", 2), ("feet533", 3), ("feet655", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelACableLength.setStatus('current')
channelBCableLength = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("feet133", 0), ("feet266", 1), ("feet399", 2), ("feet533", 3), ("feet655", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelBCableLength.setStatus('current')
channelALoopback = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("copper", 1), ("wireless", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelALoopback.setStatus('current')
channelBLoopback = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("copper", 1), ("wireless", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelBLoopback.setStatus('current')
telecomsChannelSelection = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("channelAOnly", 0), ("channelsAandB", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telecomsChannelSelection.setStatus('current')
regionCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("regionCodeInvalid", 0), ("regionCode1", 1), ("regionCode2", 2), ("regionCode3", 3), ("regionCode4", 4), ("regionCode5", 5), ("regionCode6", 6), ("regionCode7", 7), ("regionCode8", 8), ("regionCode9", 9), ("regionCode10", 10), ("regionCode11", 11), ("regionCode12", 12), ("regionCode13", 13), ("regionCode14", 14), ("regionCode15", 15), ("regionCode16", 16), ("regionCode17", 17), ("regionCode18", 18), ("regionCode19", 19), ("regionCode20", 20), ("regionCode21", 21), ("regionCode22", 22), ("regionCode23", 23), ("regionCode24", 24), ("regionCode25", 25), ("regionCode26", 26), ("regionCode27", 27), ("regionCode28", 28), ("regionCode29", 29), ("regionCode30", 30), ("regionCode31", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: regionCode.setStatus('current')
productVariant = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("pTPxx400Full", 0), ("pTPxx400Deprecated1", 1), ("pTPxx400Deprecated2", 2), ("pTPxx400Lite", 3), ("spare1", 4), ("pTPxx300", 5), ("spare2", 6), ("spare3", 7), ("pTPxx500FullDeprecated", 8), ("pTPxx500LiteDeprecated", 9), ("pTPxx500", 10), ("pTPxx600Lite", 11), ("pTPxx600Full", 12), ("spare5", 13), ("spare6", 14), ("pTP800", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: productVariant.setStatus('current')
productName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: productName.setStatus('current')
ethernetFiberSupport = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetFiberSupport.setStatus('current')
frequencyVariant = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("freq5800MHz", 0), ("freq5400MHz", 1), ("freq4900MHz", 2), ("freq2500MHz", 3), ("freq5800MHz2", 4), ("freq5400MHz2", 5), ("freq4500MHz", 6), ("freq5900MHz", 7), ("freq5200MHz", 8), ("freq5100MHz", 9), ("freq4800MHz", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frequencyVariant.setStatus('current')
bandwidthVariant = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("bw30MHz", 0), ("bw15MHz", 1), ("bw10MHz", 2), ("bw5MHz", 3), ("bw20MHz", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthVariant.setStatus('current')
constantPowerSpectralDensity = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("constant", 0), ("fullPower", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: constantPowerSpectralDensity.setStatus('current')
sNMPv3Enable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sNMPv3Enable.setStatus('current')
hAZLOCConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("nonHAZLOCUnit", 0), ("gasGroupA", 1), ("gasGroupB", 2), ("gasGroupC", 3), ("gasGroupD", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hAZLOCConfiguration.setStatus('current')
securityLevel = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("fIPS", 1), ("uCAPL", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: securityLevel.setStatus('current')
targetRange = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetRange.setStatus('current')
rangingMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("auto0to40km", 0), ("auto0to100km", 1), ("auto0to200km", 2), ("targetRange", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rangingMode.setStatus('current')
installStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("wrongPeer", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: installStatus.setStatus('current')
installArmState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disarmed", 0), ("armed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: installArmState.setStatus('current')
tFTPServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tFTPServerIPAddress.setStatus('current')
tFTPServerPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tFTPServerPortNumber.setStatus('current')
tFTPSoftwareUpgradeFileName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tFTPSoftwareUpgradeFileName.setStatus('current')
tFTPStartSoftwareUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tFTPStartSoftwareUpgrade.setStatus('current')
tFTPSoftwareUpgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("uploadinprogress", 1), ("uploadsuccessfulprogrammingFLASH", 2), ("upgradesuccessfulreboottorunthenewsoftwareimage", 3), ("upgradefailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFTPSoftwareUpgradeStatus.setStatus('current')
tFTPSoftwareUpgradeStatusText = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFTPSoftwareUpgradeStatusText.setStatus('current')
tFTPSoftwareUpgradeStatusAdditionalText = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFTPSoftwareUpgradeStatusAdditionalText.setStatus('current')
hTTPAccessEnabled = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hTTPAccessEnabled.setStatus('current')
telnetAccessEnabled = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetAccessEnabled.setStatus('current')
hTTPPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hTTPPortNumber.setStatus('current')
hTTPSPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hTTPSPortNumber.setStatus('current')
telnetPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetPortNumber.setStatus('current')
hTTPSAccessEnabled = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 9, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hTTPSAccessEnabled.setStatus('current')
linkSymmetry = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("symmetryAdaptive", 0), ("symmetry2to1", 1), ("symmetry1to1", 2), ("symmetry1to2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkSymmetry.setStatus('current')
linkModeOptimisation = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("iPTraffic", 0), ("tDMTraffic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkModeOptimisation.setStatus('current')
userConfiguredMaxModulationMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("modBpsk63percent", 0), ("modQpsk63percent", 1), ("modQpsk87percent", 2), ("mod16qam63percent", 3), ("mod16qam87percent", 4), ("mod64qam75percent", 5), ("mod64qam92percent", 6), ("mod256qam81percent", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userConfiguredMaxModulationMode.setStatus('current')
remoteMaximumTransmitPower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteMaximumTransmitPower.setStatus('current')
txColorCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("a", 0), ("b", 1), ("c", 2), ("d", 3), ("e", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txColorCode.setStatus('current')
rxColorCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("a", 0), ("b", 1), ("c", 2), ("d", 3), ("e", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxColorCode.setStatus('current')
automaticTxPowerControl = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("enabledwithinitialestimate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: automaticTxPowerControl.setStatus('current')
remoteRxTargetPower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 10, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, -400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteRxTargetPower.setStatus('current')
receivePower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: receivePower.setStatus('current')
vectorError = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vectorError.setStatus('current')
transmitPower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmitPower.setStatus('current')
range = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: range.setStatus('current')
linkLoss = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkLoss.setStatus('current')
receiveChannel = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveChannel.setStatus('current')
transmitChannel = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmitChannel.setStatus('current')
receiveModulationMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("modAcquisition", 0), ("modBpsk63percent", 1), ("modQpsk63percentSingle", 2), ("modTransient1", 3), ("modQpsk87percentSingle", 4), ("modTransient2", 5), ("mod16qam63percentSingleA", 6), ("modTransient3", 7), ("mod16qam87percentSingle", 8), ("modTransient4", 9), ("mod64qam75percentSingle", 10), ("modTransient5", 11), ("mod64qam92percentSingle", 12), ("modTransient6", 13), ("mod256qam81percentSingle", 14), ("mod16qam63percentSingleB", 15), ("mod16qam63percentDual", 16), ("modTransient7", 17), ("mod16qam87percentDual", 18), ("modTransient8", 19), ("mod64qam75percentDual", 20), ("modTransient9", 21), ("mod64qam92percentDual", 22), ("modTransient10", 23), ("mod256qam81percentDual", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveModulationMode.setStatus('current')
transmitModulationMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("modAcquisition", 0), ("modBpsk63percent", 1), ("modQpsk63percentSingle", 2), ("modTransient1", 3), ("modQpsk87percentSingle", 4), ("modTransient2", 5), ("mod16qam63percentSingleA", 6), ("modTransient3", 7), ("mod16qam87percentSingle", 8), ("modTransient4", 9), ("mod64qam75percentSingle", 10), ("modTransient5", 11), ("mod64qam92percentSingle", 12), ("modTransient6", 13), ("mod256qam81percentSingle", 14), ("mod16qam63percentSingleB", 15), ("mod16qam63percentDual", 16), ("modTransient7", 17), ("mod16qam87percentDual", 18), ("modTransient8", 19), ("mod64qam75percentDual", 20), ("modTransient9", 21), ("mod64qam92percentDual", 22), ("modTransient10", 23), ("mod256qam81percentDual", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmitModulationMode.setStatus('current')
receiveFreqMHz = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5925))).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveFreqMHz.setStatus('current')
transmitFreqMHz = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5925))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmitFreqMHz.setStatus('current')
signalStrengthRatio = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signalStrengthRatio.setStatus('current')
receiveFreqKHz = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5925000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveFreqKHz.setStatus('current')
transmitFreqKHz = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5925000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmitFreqKHz.setStatus('current')
searchState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("registering", 0), ("searching", 1), ("acquiring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: searchState.setStatus('current')
rawReceivePower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 12, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rawReceivePower.setStatus('current')
unitOutOfCalibration = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("calibrated", 0), ("outOfCalibration", 1), ("outOfCalibrationPAsShutdown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: unitOutOfCalibration.setStatus('current')
encryptionEnabledMismatch = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("encryptionEnabledMismatch", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: encryptionEnabledMismatch.setStatus('current')
incompatibleRegionCodes = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("incompatibleLicenceKeys", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: incompatibleRegionCodes.setStatus('current')
noWirelessChannelAvailable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("noWirelessChannelAvailable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: noWirelessChannelAvailable.setStatus('current')
wirelessLinkDisabledWarning = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("disabledBySNMPifAdminStatus", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessLinkDisabledWarning.setStatus('current')
dataPortDisabledWarning = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("disabledBySNMPifAdminStatus", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dataPortDisabledWarning.setStatus('current')
dataPortFiberStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ok", 0), ("installedFiberNotLicensed", 1), ("fiberLinkNotEstablishedButLOSNotDetected", 2), ("fiberLinkNotEstablishedAndLOSDetected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dataPortFiberStatus.setStatus('current')
dataPortConfigurationMismatch = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noError", 0), ("mismatchDetected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dataPortConfigurationMismatch.setStatus('current')
incompatibleMasterAndSlave = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ok", 0), ("incompatibleProductVariants", 1), ("differentSoftwareVersionsRunning", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: incompatibleMasterAndSlave.setStatus('current')
tDDSynchronizationStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("locked", 0), ("holdover", 1), ("holdoverNotConnected", 2), ("acquiringLock", 3), ("noTimingReference", 4), ("timingSystemNotConnected", 5), ("initialising", 6), ("clusterTimingMaster", 7), ("tDDSyncNotActive", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDDSynchronizationStatus.setStatus('current')
managementPortDisabledWarning = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("disabledBySNMPifAdminStatus", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementPortDisabledWarning.setStatus('current')
tDDSynchronizationAlarm = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ok", 0), ("notSynchronized", 1), ("timingSystemFailure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDDSynchronizationAlarm.setStatus('current')
linkModeOptimizationMismatch = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("linkModeOptimizationMismatch", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkModeOptimizationMismatch.setStatus('current')
managementPortConfigurationMismatch = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noError", 0), ("mismatchDetected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementPortConfigurationMismatch.setStatus('current')
secureModeAlarm = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("secureModeIsActive", 0), ("secureModeIsNotConfigured", 1), ("secureModeIsConfiguredButNotActive", 2), ("secureModeIsNotSupported", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureModeAlarm.setStatus('current')
ethernetBridgingStatusAlarm = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 13, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ethernetBridgingEnabled", 0), ("ethernetBridgingDisabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetBridgingStatusAlarm.setStatus('current')
sMTPEmailAlert = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sMTPEmailAlert.setStatus('current')
sMTPServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 15, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sMTPServerIPAddress.setStatus('current')
sMTPServerPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sMTPServerPortNumber.setStatus('current')
sMTPSourceEmailAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 15, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sMTPSourceEmailAddress.setStatus('current')
sMTPDestinationEmailAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 15, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sMTPDestinationEmailAddress.setStatus('current')
sMTPEnabledMessages = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 15, 6), Bits().clone(namedValues=NamedValues(("telecomsChannelUpDown", 1), ("managementPortUpDown", 2), ("dataPortUpDown", 3), ("enabledDiagnosticAlarms", 4), ("dFSImpulseInterference", 5), ("dFSChannelChange", 6), ("wirelessLinkUpDown", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sMTPEnabledMessages.setStatus('current')
sNMPPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 16, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNMPPortNumber.setStatus('current')
sNMPCommunityString = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNMPCommunityString.setStatus('current')
sNMPTrapTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 16, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sNMPTrapTableNumber.setStatus('current')
sNMPTrapVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 16, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("v1", 0), ("v2c", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNMPTrapVersion.setStatus('current')
sNMPEnabledTraps = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 16, 6), Bits().clone(namedValues=NamedValues(("managementPortUpDown", 0), ("dataPortUpDown", 1), ("authenticationFailure", 2), ("enabledDiagnosticAlarms", 3), ("dFSImpulseInterference", 4), ("dFSChannelChange", 5), ("wirelessLinkUpDown", 6), ("coldStart", 7), ("telecomsChannelUpDown", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNMPEnabledTraps.setStatus('current')
enabledDiagnosticAlarms = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 16, 7), Bits().clone(namedValues=NamedValues(("incompatibleMasterAndSlave", 0), ("incompatibleRegionCodes", 1), ("unknown6", 2), ("unknown5", 3), ("unitOutOfCalibration", 4), ("installArmState", 5), ("installStatus", 6), ("regionCode", 7), ("telecomsChannelAStatus", 8), ("dataPortFiberStatus", 9), ("dataPortStatus", 10), ("dataPortDisabledWarning", 11), ("wirelessLinkDisabledWarning", 12), ("sNTPSyncronisationFailed", 13), ("noWirelessChannelAvailable", 14), ("dataPortConfigurationMismatch", 15), ("syslogDisabledWarning", 16), ("linkModeOptimizationMismatch", 17), ("managementPortStatus", 18), ("managementPortDisabledWarning", 19), ("tDDSynchronizationAlarm", 20), ("telecomsChannelBLoopback", 21), ("telecomsChannelALoopback", 22), ("telecomsChannelBStatus", 23), ("ethernetBridgingStatus", 26), ("secureMode", 27), ("syslogClientDisabledWarning", 28), ("managementPortConfigurationMismatch", 29), ("syslogLocalWrapped", 30), ("syslogLocalNearlyFull", 31)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enabledDiagnosticAlarms.setStatus('current')
sNMPTrapTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 16, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: sNMPTrapTableIndex.setStatus('current')
sNMPTrapIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 16, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNMPTrapIPAddress.setStatus('current')
sNMPTrapPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 16, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNMPTrapPortNumber.setStatus('current')
sNTPState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPState.setStatus('current')
sNTPPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 43200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPPollInterval.setStatus('current')
sNTPSync = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noSync", 0), ("inSync", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sNTPSync.setStatus('current')
sNTPLastSync = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sNTPLastSync.setStatus('current')
systemClock = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemClock.setStatus('current')
timeZone = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50))).clone(namedValues=NamedValues(("gmtMinus1200", 0), ("gmtMinus1130", 1), ("gmtMinus1100", 2), ("gmtMinus1030", 3), ("gmtMinus1000", 4), ("gmtMinus0930", 5), ("gmtMinus0900", 6), ("gmtMinus0830", 7), ("gmtMinus0800", 8), ("gmtMinus0730", 9), ("gmtMinus0700", 10), ("gmtMinus0630", 11), ("gmtMinus0600", 12), ("gmtMinus0530", 13), ("gmtMinus0500", 14), ("gmtMinus0430", 15), ("gmtMinus0400", 16), ("gmtMinus0330", 17), ("gmtMinus0300", 18), ("gmtMinus0230", 19), ("gmtMinus0200", 20), ("gmtMinus0130", 21), ("gmtMinus0100", 22), ("gmtMinus0030", 23), ("gmtZero", 24), ("gmtPlus0030", 25), ("gmtPlus0100", 26), ("gmtPlus0130", 27), ("gmtPlus0200", 28), ("gmtPlus0230", 29), ("gmtPlus0300", 30), ("gmtPlus0330", 31), ("gmtPlus0400", 32), ("gmtPlus0430", 33), ("gmtPlus0500", 34), ("gmtPlus0530", 35), ("gmtPlus0600", 36), ("gmtPlus0630", 37), ("gmtPlus0700", 38), ("gmtPlus0730", 39), ("gmtPlus0800", 40), ("gmtPlus0830", 41), ("gmtPlus0900", 42), ("gmtPlus0930", 43), ("gmtPlus1000", 44), ("gmtPlus1030", 45), ("gmtPlus1100", 46), ("gmtPlus1130", 47), ("gmtPlus1200", 48), ("gmtPlus1230", 49), ("gmtPlus1300", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeZone.setStatus('current')
daylightSaving = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: daylightSaving.setStatus('current')
sNTPPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("server1", 0), ("server2", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPPrimaryServer.setStatus('current')
sNTPPrimaryServerDeadTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPPrimaryServerDeadTime.setStatus('current')
sNTPServerRetries = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPServerRetries.setStatus('current')
sNTPServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPServerTimeout.setStatus('current')
sNTPServerTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 17, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sNTPServerTableNumber.setStatus('current')
sNTPServerTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 17, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: sNTPServerTableIndex.setStatus('current')
sNTPServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 17, 15, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPServerIPAddress.setStatus('current')
sNTPServerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 17, 15, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sNTPServerPortNumber.setStatus('current')
sNTPServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 6, 17, 15, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sNTPServerStatus.setStatus('current')
systemReset = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("running", 0), ("consoleReboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReset.setStatus('current')
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 19, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('current')
hardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 19, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hardwareVersion.setStatus('current')
secondarySoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 19, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secondarySoftwareVersion.setStatus('current')
bootVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 19, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootVersion.setStatus('current')
receiveDataRate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveDataRate.setStatus('current')
transmitDataRate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmitDataRate.setStatus('current')
aggregateDataRate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aggregateDataRate.setStatus('current')
wirelessLinkAvailability = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessLinkAvailability.setStatus('current')
wirelessLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 0), ("registering", 1), ("searching", 2), ("acquiring", 3), ("radarCAC", 4), ("initialising", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessLinkStatus.setStatus('current')
byteErrorRatio = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteErrorRatio.setStatus('current')
receiveModulationModeDetail = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("runningAtMaximumReceiveMode", 0), ("runningAtUserConfiguredMaxModulationMode", 1), ("restrictedBecauseInstallationIsArmed", 2), ("restrictedBecauseOfByteErrorsOnTheWirelessLink", 3), ("restrictedBecauseTheLinkParametersAreUpdating", 4), ("restrictedBecauseDFSchannelChangeIsInProgress", 5), ("restrictedDueToTheLowEthernetLinkSpeed", 6), ("runningAtMaximumReceiveModeForChannelBandwidth", 7), ("limitedByTheWirelessConditions", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveModulationModeDetail.setStatus('current')
ethernetBridgingAvailability = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 20, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetBridgingAvailability.setStatus('current')
encryptionAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("aESRijndael", 1), ("aES256bitRijndael", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: encryptionAlgorithm.setStatus('current')
tDDSynchronizationMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 23, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDDSynchronizationMode.setStatus('current')
syslogClient = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogClient.setStatus('current')
syslogState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 24, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogState.setStatus('current')
longitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 96, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: longitude.setStatus('current')
latitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 96, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: latitude.setStatus('current')
altitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 6, 96, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altitude.setStatus('current')
dfsChannelChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 1)).setObjects(("CAMBIUM-PTP600-MIB", "receiveChannel"))
if mibBuilder.loadTexts: dfsChannelChangeTrap.setStatus('current')
dfsImpulsiveInterferenceTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 2)).setObjects(("CAMBIUM-PTP600-MIB", "receiveChannel"))
if mibBuilder.loadTexts: dfsImpulsiveInterferenceTrap.setStatus('current')
dataPortStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 3)).setObjects(("CAMBIUM-PTP600-MIB", "dataPortStatus"))
if mibBuilder.loadTexts: dataPortStatusTrap.setStatus('current')
telecomsChannelAStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 4)).setObjects(("CAMBIUM-PTP600-MIB", "telecomsChannelAStatus"))
if mibBuilder.loadTexts: telecomsChannelAStatusTrap.setStatus('current')
telecomsChannelBStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 5)).setObjects(("CAMBIUM-PTP600-MIB", "telecomsChannelBStatus"))
if mibBuilder.loadTexts: telecomsChannelBStatusTrap.setStatus('current')
channelALoopbackTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 6)).setObjects(("CAMBIUM-PTP600-MIB", "channelALoopback"))
if mibBuilder.loadTexts: channelALoopbackTrap.setStatus('current')
channelBLoopbackTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 7)).setObjects(("CAMBIUM-PTP600-MIB", "channelBLoopback"))
if mibBuilder.loadTexts: channelBLoopbackTrap.setStatus('current')
regionCodeTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 8)).setObjects(("CAMBIUM-PTP600-MIB", "regionCode"))
if mibBuilder.loadTexts: regionCodeTrap.setStatus('current')
installStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 9)).setObjects(("CAMBIUM-PTP600-MIB", "installStatus"))
if mibBuilder.loadTexts: installStatusTrap.setStatus('current')
installArmStateTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 10)).setObjects(("CAMBIUM-PTP600-MIB", "installArmState"))
if mibBuilder.loadTexts: installArmStateTrap.setStatus('current')
unitOutOfCalibrationTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 11)).setObjects(("CAMBIUM-PTP600-MIB", "unitOutOfCalibration"))
if mibBuilder.loadTexts: unitOutOfCalibrationTrap.setStatus('current')
encryptionEnabledMismatchTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 13)).setObjects(("CAMBIUM-PTP600-MIB", "encryptionEnabledMismatch"))
if mibBuilder.loadTexts: encryptionEnabledMismatchTrap.setStatus('current')
incompatibleRegionCodesTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 14)).setObjects(("CAMBIUM-PTP600-MIB", "incompatibleRegionCodes"))
if mibBuilder.loadTexts: incompatibleRegionCodesTrap.setStatus('current')
noWirelessChannelAvailableTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 15)).setObjects(("CAMBIUM-PTP600-MIB", "noWirelessChannelAvailable"))
if mibBuilder.loadTexts: noWirelessChannelAvailableTrap.setStatus('current')
wirelessLinkDisabledWarningTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 16)).setObjects(("CAMBIUM-PTP600-MIB", "wirelessLinkDisabledWarning"))
if mibBuilder.loadTexts: wirelessLinkDisabledWarningTrap.setStatus('current')
dataPortDisabledWarningTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 17)).setObjects(("CAMBIUM-PTP600-MIB", "dataPortDisabledWarning"))
if mibBuilder.loadTexts: dataPortDisabledWarningTrap.setStatus('current')
dataPortFiberStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 18)).setObjects(("CAMBIUM-PTP600-MIB", "dataPortFiberStatus"))
if mibBuilder.loadTexts: dataPortFiberStatusTrap.setStatus('current')
dataPortConfigurationMismatchTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 19)).setObjects(("CAMBIUM-PTP600-MIB", "dataPortConfigurationMismatch"))
if mibBuilder.loadTexts: dataPortConfigurationMismatchTrap.setStatus('current')
incompatibleMasterAndSlaveTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 20)).setObjects(("CAMBIUM-PTP600-MIB", "incompatibleMasterAndSlave"))
if mibBuilder.loadTexts: incompatibleMasterAndSlaveTrap.setStatus('current')
sNTPSyncTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 21)).setObjects(("CAMBIUM-PTP600-MIB", "sNTPSync"))
if mibBuilder.loadTexts: sNTPSyncTrap.setStatus('current')
tDDSynchronizationAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 22)).setObjects(("CAMBIUM-PTP600-MIB", "tDDSynchronizationAlarm"))
if mibBuilder.loadTexts: tDDSynchronizationAlarmTrap.setStatus('current')
managementPortStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 23)).setObjects(("CAMBIUM-PTP600-MIB", "managementPortStatus"))
if mibBuilder.loadTexts: managementPortStatusTrap.setStatus('current')
managementPortDisabledWarningTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 24)).setObjects(("CAMBIUM-PTP600-MIB", "managementPortDisabledWarning"))
if mibBuilder.loadTexts: managementPortDisabledWarningTrap.setStatus('current')
linkModeOptimizationMismatchTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 25)).setObjects(("CAMBIUM-PTP600-MIB", "linkModeOptimizationMismatch"))
if mibBuilder.loadTexts: linkModeOptimizationMismatchTrap.setStatus('current')
managementPortConfigurationMismatchTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 28)).setObjects(("CAMBIUM-PTP600-MIB", "managementPortConfigurationMismatch"))
if mibBuilder.loadTexts: managementPortConfigurationMismatchTrap.setStatus('current')
syslogStateTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 30)).setObjects(("CAMBIUM-PTP600-MIB", "syslogState"))
if mibBuilder.loadTexts: syslogStateTrap.setStatus('current')
syslogLocalNearlyFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 31))
if mibBuilder.loadTexts: syslogLocalNearlyFullTrap.setStatus('current')
syslogLocalWrappedTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 32))
if mibBuilder.loadTexts: syslogLocalWrappedTrap.setStatus('current')
syslogClientTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 33)).setObjects(("CAMBIUM-PTP600-MIB", "syslogClient"))
if mibBuilder.loadTexts: syslogClientTrap.setStatus('current')
secureModeAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 34)).setObjects(("CAMBIUM-PTP600-MIB", "secureModeAlarm"))
if mibBuilder.loadTexts: secureModeAlarmTrap.setStatus('current')
ethernetBridgingStatusAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 6, 99, 0, 35)).setObjects(("CAMBIUM-PTP600-MIB", "ethernetBridgingStatusAlarm"))
if mibBuilder.loadTexts: ethernetBridgingStatusAlarmTrap.setStatus('current')
mibBuilder.exportSymbols("CAMBIUM-PTP600-MIB", managementPortDisabledWarningTrap=managementPortDisabledWarningTrap, l2CPPriorityTableIndex=l2CPPriorityTableIndex, wirelessLinkAvailability=wirelessLinkAvailability, tFTPSoftwareUpgradeStatusText=tFTPSoftwareUpgradeStatusText, transmitModulationMode=transmitModulationMode, dfsChannelChangeTrap=dfsChannelChangeTrap, ethernetBridgingStatusAlarmTrap=ethernetBridgingStatusAlarmTrap, ethernetBridgingAvailability=ethernetBridgingAvailability, smtp=smtp, encryptionGroup=encryptionGroup, dataPortStatusTrap=dataPortStatusTrap, wirelessLinkDisabledWarning=wirelessLinkDisabledWarning, regionCodeTrap=regionCodeTrap, rawReceivePower=rawReceivePower, secureModeAlarm=secureModeAlarm, phyControl=phyControl, iPDSCPPriorityTableEntry=iPDSCPPriorityTableEntry, hTTPSPortNumber=hTTPSPortNumber, ptp600=ptp600, alarms=alarms, managementPortStatus=managementPortStatus, noWirelessChannelAvailable=noWirelessChannelAvailable, ethernetGroup=ethernetGroup, dfsPeaks=dfsPeaks, searchState=searchState, supplementary=supplementary, altitude=altitude, sNTPSync=sNTPSync, sNMPTrapTable=sNMPTrapTable, channelALoopback=channelALoopback, sNTPPollInterval=sNTPPollInterval, smtpGroup=smtpGroup, telnetPortNumber=telnetPortNumber, noWirelessChannelAvailableTrap=noWirelessChannelAvailableTrap, dataPortAutoNegotiation=dataPortAutoNegotiation, ptpGroups=ptpGroups, licence=licence, ethernetPriorityTableEntry=ethernetPriorityTableEntry, remoteIPAddress=remoteIPAddress, mPLSTCPriorityTable=mPLSTCPriorityTable, telecomsInterface=telecomsInterface, vLANManagementVID=vLANManagementVID, gatewayIPAddress=gatewayIPAddress, management=management, transmitDataRate=transmitDataRate, groupID=groupID, dfsTableIndex=dfsTableIndex, sMTPDestinationEmailAddress=sMTPDestinationEmailAddress, productName=productName, sNMPTrapPortNumber=sNMPTrapPortNumber, installArmState=installArmState, phyControlGroup=phyControlGroup, mPLSTCPriorityTableEntry=mPLSTCPriorityTableEntry, cableLoss=cableLoss, enabledDiagnosticAlarms=enabledDiagnosticAlarms, dataPortSpeedAndDuplex=dataPortSpeedAndDuplex, byteErrorRatio=byteErrorRatio, syslogClientTrap=syslogClientTrap, ethernetCappedMaxWirelessSpeed=ethernetCappedMaxWirelessSpeed, rangingMode=rangingMode, hardwareVersion=hardwareVersion, installArmStateTrap=installArmStateTrap, managementPortStatusTrap=managementPortStatusTrap, ptpTrapPrefix=ptpTrapPrefix, transmitPower=transmitPower, longitude=longitude, sNTPServerTimeout=sNTPServerTimeout, linkLoss=linkLoss, daylightSaving=daylightSaving, resetGroup=resetGroup, l2CPPriorityTableEntry=l2CPPriorityTableEntry, ethernetPriorityTableIndex=ethernetPriorityTableIndex, signalStrengthRatio=signalStrengthRatio, masterSlaveMode=masterSlaveMode, sNMPTrapVersion=sNMPTrapVersion, linkModeOptimisation=linkModeOptimisation, ptp=ptp, ethernetPriorityTableNumber=ethernetPriorityTableNumber, targetRange=targetRange, dataPortAutoMdix=dataPortAutoMdix, dataPortConfigurationMismatch=dataPortConfigurationMismatch, sNMPTrapIPAddress=sNMPTrapIPAddress, receivePower=receivePower, sMTPEmailAlert=sMTPEmailAlert, dataPortDisabledWarning=dataPortDisabledWarning, dataPortDisabledWarningTrap=dataPortDisabledWarningTrap, pubStatsGroup=pubStatsGroup, transmitFreqMHz=transmitFreqMHz, iPDSCPPriorityQueueMapping=iPDSCPPriorityQueueMapping, ptpTraps=ptpTraps, dataPortAutoNegAdvertisement=dataPortAutoNegAdvertisement, channelALoopbackTrap=channelALoopbackTrap, userConfiguredMaxModulationMode=userConfiguredMaxModulationMode, telecomGroup=telecomGroup, l2CPPriorityTable=l2CPPriorityTable, channelBLoopback=channelBLoopback, qOSPriorityScheme=qOSPriorityScheme, telecomsChannelBStatus=telecomsChannelBStatus, managementPortDisabledWarning=managementPortDisabledWarning, configuration=configuration, tDDSynchronizationAlarm=tDDSynchronizationAlarm, dfsNineNinePointNinePercentiles=dfsNineNinePointNinePercentiles, syslogClient=syslogClient, latitude=latitude, linkSymmetry=linkSymmetry, sNTPServerTableNumber=sNTPServerTableNumber, remoteRxTargetPower=remoteRxTargetPower, notificationsGroup=notificationsGroup, syslogControl=syslogControl, supplementaryGroup=supplementaryGroup, sNMPTrapTableIndex=sNMPTrapTableIndex, maximumTransmitPower=maximumTransmitPower, syslogStateTrap=syslogStateTrap, dfsImpulsiveInterferenceTrap=dfsImpulsiveInterferenceTrap, phyStatusGroup=phyStatusGroup, cambium=cambium, snmpControlGroup=snmpControlGroup, syslogControlGroup=syslogControlGroup, hTTPAccessEnabled=hTTPAccessEnabled, dfsGroup=dfsGroup, tFTPServerPortNumber=tFTPServerPortNumber, l2CPPriorityTableNumber=l2CPPriorityTableNumber, telecomsChannelBStatusTrap=telecomsChannelBStatusTrap, timeZone=timeZone, securityLevel=securityLevel, dataPortFiberStatus=dataPortFiberStatus, dfsMeans=dfsMeans, remoteMaximumTransmitPower=remoteMaximumTransmitPower, licenceGroup=licenceGroup, ptmp=ptmp, antennaGain=antennaGain, managementPortWirelessDownAlert=managementPortWirelessDownAlert, tDDSynchronizationAlarmTrap=tDDSynchronizationAlarmTrap, reset=reset, mPLSTCPriorityTableIndex=mPLSTCPriorityTableIndex, iPDSCPPriorityTableNumber=iPDSCPPriorityTableNumber, sNMPPortNumber=sNMPPortNumber, sNTPState=sNTPState, sMTPEnabledMessages=sMTPEnabledMessages, sNTPSyncTrap=sNTPSyncTrap, dfsTableNumber=dfsTableNumber, ethernetPriorityQueueMapping=ethernetPriorityQueueMapping, vLANManagementPriority=vLANManagementPriority, sMTPServerPortNumber=sMTPServerPortNumber, versions=versions, hTTPPortNumber=hTTPPortNumber, sNTPServerTableIndex=sNTPServerTableIndex, incompatibleRegionCodesTrap=incompatibleRegionCodesTrap, tDDControl=tDDControl, sNTPServerTable=sNTPServerTable, encryption=encryption, regionCode=regionCode, telecomsChannelAStatusTrap=telecomsChannelAStatusTrap, alarmsGroup=alarmsGroup, sNTPServerStatus=sNTPServerStatus, secondarySoftwareVersion=secondarySoftwareVersion, sntpGroup=sntpGroup, rxColorCode=rxColorCode, hTTPSAccessEnabled=hTTPSAccessEnabled, phyStatus=phyStatus, tDDSynchronizationMode=tDDSynchronizationMode, productVariant=productVariant, transmitFreqKHz=transmitFreqKHz, syslogState=syslogState, useVLANForManagementInterfaces=useVLANForManagementInterfaces, bridge=bridge, sNMPv3Enable=sNMPv3Enable, mPLSTCPriorityTableNumber=mPLSTCPriorityTableNumber, unknownNetworkPriorityQueueMapping=unknownNetworkPriorityQueueMapping, telecomsChannelSelection=telecomsChannelSelection, tFTPStartSoftwareUpgrade=tFTPStartSoftwareUpgrade, tFTPServerIPAddress=tFTPServerIPAddress, incompatibleRegionCodes=incompatibleRegionCodes, sNTPServerIPAddress=sNTPServerIPAddress, systemReset=systemReset, ethernet=ethernet, automaticTxPowerControl=automaticTxPowerControl, dataPortStatus=dataPortStatus, telecom=telecom, secureModeAlarmTrap=secureModeAlarmTrap, telnetAccessEnabled=telnetAccessEnabled, tDDControlGroup=tDDControlGroup, pubStats=pubStats, receiveDataRate=receiveDataRate, l2CPPriorityQueueMapping=l2CPPriorityQueueMapping, receiveFreqMHz=receiveFreqMHz, sNMPEnabledTraps=sNMPEnabledTraps, dfs=dfs, sNMPTrapTableEntry=sNMPTrapTableEntry, installStatus=installStatus, incompatibleMasterAndSlave=incompatibleMasterAndSlave, dataPortFiberStatusTrap=dataPortFiberStatusTrap, PYSNMP_MODULE_ID=cambium, managementMode=managementMode, bandwidthVariant=bandwidthVariant, receiveModulationModeDetail=receiveModulationModeDetail, sNTPPrimaryServer=sNTPPrimaryServer, receiveFreqKHz=receiveFreqKHz, syslogLocalWrappedTrap=syslogLocalWrappedTrap, configurationGroup=configurationGroup, bootVersion=bootVersion, systemClock=systemClock, channelBandwidth=channelBandwidth, linkName=linkName, mPLSTCPriorityQueueMapping=mPLSTCPriorityQueueMapping, managementPortSpeedAndDuplex=managementPortSpeedAndDuplex, managementPortConfigurationMismatch=managementPortConfigurationMismatch, encryptionEnabledMismatchTrap=encryptionEnabledMismatchTrap, dataPortConfigurationMismatchTrap=dataPortConfigurationMismatchTrap, transmitChannel=transmitChannel, iPDSCPPriorityTable=iPDSCPPriorityTable, sntp=sntp, unitOutOfCalibration=unitOutOfCalibration, sNTPLastSync=sNTPLastSync, channelBLineCode=channelBLineCode, channelBLoopbackTrap=channelBLoopbackTrap, installStatusTrap=installStatusTrap, ptpCompliance=ptpCompliance, sNTPServerRetries=sNTPServerRetries, receiveChannel=receiveChannel, unitOutOfCalibrationTrap=unitOutOfCalibrationTrap, encryptionEnabledMismatch=encryptionEnabledMismatch, constantPowerSpectralDensity=constantPowerSpectralDensity, txColorCode=txColorCode, eIRP=eIRP, ethernetBridgingStatus=ethernetBridgingStatus, sMTPServerIPAddress=sMTPServerIPAddress, managementPortConfigurationMismatchTrap=managementPortConfigurationMismatchTrap, wirelessLinkStatus=wirelessLinkStatus, vectorError=vectorError, telecomsChannelAStatus=telecomsChannelAStatus, hAZLOCConfiguration=hAZLOCConfiguration, dfsTable=dfsTable, frequencyVariant=frequencyVariant, sNMPTrapTableNumber=sNMPTrapTableNumber, linkModeOptimizationMismatchTrap=linkModeOptimizationMismatchTrap, channelACableLength=channelACableLength, siteName=siteName, tFTPSoftwareUpgradeStatusAdditionalText=tFTPSoftwareUpgradeStatusAdditionalText, linkModeOptimizationMismatch=linkModeOptimizationMismatch, wirelessLinkDisabledWarningTrap=wirelessLinkDisabledWarningTrap, snmpControl=snmpControl, tFTPSoftwareUpgradeFileName=tFTPSoftwareUpgradeFileName, dataPortWirelessDownAlert=dataPortWirelessDownAlert, dSCPManagementPriority=dSCPManagementPriority, channelBCableLength=channelBCableLength, softwareVersion=softwareVersion, receiveModulationMode=receiveModulationMode, managementGroup=managementGroup, sNTPServerPortNumber=sNTPServerPortNumber, syslogLocalNearlyFullTrap=syslogLocalNearlyFullTrap, ethernetPriorityTable=ethernetPriorityTable, sNTPPrimaryServerDeadTime=sNTPPrimaryServerDeadTime, range=range)
mibBuilder.exportSymbols("CAMBIUM-PTP600-MIB", versionsGroup=versionsGroup, channelALineCode=channelALineCode, sNTPServerTableEntry=sNTPServerTableEntry, targetMACAddress=targetMACAddress, encryptionAlgorithm=encryptionAlgorithm, accessMethod=accessMethod, ethernetBridgingStatusAlarm=ethernetBridgingStatusAlarm, sNMPCommunityString=sNMPCommunityString, iPDSCPPriorityTableIndex=iPDSCPPriorityTableIndex, ethernetFiberSupport=ethernetFiberSupport, iPAddress=iPAddress, tFTPSoftwareUpgradeStatus=tFTPSoftwareUpgradeStatus, bridgeGroup=bridgeGroup, aggregateDataRate=aggregateDataRate, sMTPSourceEmailAddress=sMTPSourceEmailAddress, tDDSynchronizationStatus=tDDSynchronizationStatus, subnetMask=subnetMask, dfsTableEntry=dfsTableEntry, localPacketFiltering=localPacketFiltering, incompatibleMasterAndSlaveTrap=incompatibleMasterAndSlaveTrap)
