#
# PySNMP MIB module PDN-MGMT-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-MGMT-IP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:30:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
AtmVcIdentifier, AtmVpIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVcIdentifier", "AtmVpIdentifier")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, iso, Counter64, MibIdentifier, Bits, Unsigned32, Gauge32, ModuleIdentity, ObjectIdentity, TimeTicks, IpAddress, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Counter64", "MibIdentifier", "Bits", "Unsigned32", "Gauge32", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "IpAddress", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, PhysAddress, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "RowStatus", "TextualConvention")
pdnMgmtIpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21))
if mibBuilder.loadTexts: pdnMgmtIpMIB.setLastUpdated('200206051500Z')
if mibBuilder.loadTexts: pdnMgmtIpMIB.setOrganization('Paradyne Corporation MIB Working Group')
pdnMgmtIpConfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1))
pdnMgmtIpPortTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1), )
if mibBuilder.loadTexts: pdnMgmtIpPortTable.setStatus('current')
pdnMgmtIpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1), ).setIndexNames((0, "PDN-MGMT-IP-MIB", "pdnMgmtIpPortIndex"))
if mibBuilder.loadTexts: pdnMgmtIpPortEntry.setStatus('current')
pdnMgmtIpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pdnMgmtIpPortIndex.setStatus('current')
pdnMgmtIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtIpAddress.setStatus('current')
pdnMgmtIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtIpNetMask.setStatus('current')
pdnMgmtIpEthGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtIpEthGateway.setStatus('current')
pdnMgmtIpPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 5), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtIpPhysAddress.setStatus('current')
pdnMgmtIpConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("dhcp", 2), ("bootp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtIpConfigMode.setStatus('current')
pdnMgmtBootIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 7), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtBootIfIndex.setStatus('current')
pdnMgmtBootVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 8), AtmVpIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtBootVpi.setStatus('current')
pdnMgmtBootVci = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 9), AtmVcIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtBootVci.setStatus('current')
pdnMgmtIpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtIpAdminStatus.setStatus('current')
pdnMgmtAtmInvArpTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2), )
if mibBuilder.loadTexts: pdnMgmtAtmInvArpTable.setStatus('current')
pdnMgmtAtmInvArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2, 1), ).setIndexNames((0, "PDN-MGMT-IP-MIB", "pdnMgmtAtmIfIndex"), (0, "PDN-MGMT-IP-MIB", "pdnMgmtAtmVpi"), (0, "PDN-MGMT-IP-MIB", "pdnMgmtAtmVci"))
if mibBuilder.loadTexts: pdnMgmtAtmInvArpEntry.setStatus('current')
pdnMgmtAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pdnMgmtAtmIfIndex.setStatus('current')
pdnMgmtAtmVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: pdnMgmtAtmVpi.setStatus('current')
pdnMgmtAtmVci = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2, 1, 3), AtmVcIdentifier())
if mibBuilder.loadTexts: pdnMgmtAtmVci.setStatus('current')
pdnMgmtIpPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2, 1, 4), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnMgmtIpPortIfIndex.setStatus('current')
pdnMgmtNextHopIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnMgmtNextHopIp.setStatus('current')
pdnMgmtAtmInvArpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnMgmtAtmInvArpRowStatus.setStatus('current')
pdnMgmtIpDefaultRouter = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnMgmtIpDefaultRouter.setStatus('current')
pdnMgmtIpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 2))
pdnMgmtIpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 2, 1))
pdnMgmtIpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 2, 2))
pdnMgmtIpConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 2, 2, 1)).setObjects(("PDN-MGMT-IP-MIB", "pdnMgmtIpConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnMgmtIpConfigCompliance = pdnMgmtIpConfigCompliance.setStatus('current')
pdnMgmtIpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 21, 2, 1, 1)).setObjects(("PDN-MGMT-IP-MIB", "pdnMgmtIpAddress"), ("PDN-MGMT-IP-MIB", "pdnMgmtIpNetMask"), ("PDN-MGMT-IP-MIB", "pdnMgmtIpEthGateway"), ("PDN-MGMT-IP-MIB", "pdnMgmtIpPhysAddress"), ("PDN-MGMT-IP-MIB", "pdnMgmtIpConfigMode"), ("PDN-MGMT-IP-MIB", "pdnMgmtBootIfIndex"), ("PDN-MGMT-IP-MIB", "pdnMgmtBootVpi"), ("PDN-MGMT-IP-MIB", "pdnMgmtBootVci"), ("PDN-MGMT-IP-MIB", "pdnMgmtIpAdminStatus"), ("PDN-MGMT-IP-MIB", "pdnMgmtIpPortIfIndex"), ("PDN-MGMT-IP-MIB", "pdnMgmtNextHopIp"), ("PDN-MGMT-IP-MIB", "pdnMgmtAtmInvArpRowStatus"), ("PDN-MGMT-IP-MIB", "pdnMgmtIpDefaultRouter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnMgmtIpConfigGroup = pdnMgmtIpConfigGroup.setStatus('current')
mibBuilder.exportSymbols("PDN-MGMT-IP-MIB", pdnMgmtIpPortEntry=pdnMgmtIpPortEntry, pdnMgmtAtmVci=pdnMgmtAtmVci, pdnMgmtIpConfigMode=pdnMgmtIpConfigMode, pdnMgmtIpEthGateway=pdnMgmtIpEthGateway, pdnMgmtIpConfigGroup=pdnMgmtIpConfigGroup, pdnMgmtIpPortIfIndex=pdnMgmtIpPortIfIndex, pdnMgmtIpDefaultRouter=pdnMgmtIpDefaultRouter, pdnMgmtIpAddress=pdnMgmtIpAddress, pdnMgmtAtmVpi=pdnMgmtAtmVpi, pdnMgmtIpGroups=pdnMgmtIpGroups, pdnMgmtAtmInvArpTable=pdnMgmtAtmInvArpTable, pdnMgmtBootVpi=pdnMgmtBootVpi, pdnMgmtIpPortIndex=pdnMgmtIpPortIndex, pdnMgmtIpPhysAddress=pdnMgmtIpPhysAddress, pdnMgmtIpCompliances=pdnMgmtIpCompliances, pdnMgmtAtmInvArpEntry=pdnMgmtAtmInvArpEntry, pdnMgmtIpMIB=pdnMgmtIpMIB, pdnMgmtIpAdminStatus=pdnMgmtIpAdminStatus, pdnMgmtBootVci=pdnMgmtBootVci, pdnMgmtIpConformance=pdnMgmtIpConformance, pdnMgmtBootIfIndex=pdnMgmtBootIfIndex, PYSNMP_MODULE_ID=pdnMgmtIpMIB, pdnMgmtIpConfObjects=pdnMgmtIpConfObjects, pdnMgmtIpConfigCompliance=pdnMgmtIpConfigCompliance, pdnMgmtAtmIfIndex=pdnMgmtAtmIfIndex, pdnMgmtAtmInvArpRowStatus=pdnMgmtAtmInvArpRowStatus, pdnMgmtNextHopIp=pdnMgmtNextHopIp, pdnMgmtIpNetMask=pdnMgmtIpNetMask, pdnMgmtIpPortTable=pdnMgmtIpPortTable)
