#
# PySNMP MIB module CISCO-LWAPP-IPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-IPV6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
claAclRuleHits, claAclCounterEnable, claCpuAclName, claCpuAclPacketApplicability, claAclCounterClear = mibBuilder.importSymbols("CISCO-LWAPP-ACL-MIB", "claAclRuleHits", "claAclCounterEnable", "claCpuAclName", "claCpuAclPacketApplicability", "claAclCounterClear")
cldcClientMacAddress, = mibBuilder.importSymbols("CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, ObjectIdentity, MibIdentifier, iso, Unsigned32, Integer32, Counter64, Bits, TimeTicks, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "ObjectIdentity", "MibIdentifier", "iso", "Unsigned32", "Integer32", "Counter64", "Bits", "TimeTicks", "IpAddress", "Counter32")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
ciscoLwappIpv6MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 9999))
ciscoLwappIpv6MIB.setRevisions(('2010-03-04 00:00',))
if mibBuilder.loadTexts: ciscoLwappIpv6MIB.setLastUpdated('201103040000Z')
if mibBuilder.loadTexts: ciscoLwappIpv6MIB.setOrganization('Cisco Systems Inc.')
ciscoLwappIpv6MIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 0))
ciscoLwappIpv6MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1))
ciscoLwappIpv6MIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2))
ciscoLwappIpv6Config = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1))
ciscoLwappIpv6Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2))
ciscoLwappIpv6NbRaThrottleConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4))
ciscoLwappIpv6NbTimerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5))
cLIpv6AclTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 1), )
if mibBuilder.loadTexts: cLIpv6AclTable.setStatus('current')
cLIpv6AclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-IPV6-MIB", "cLIpv6AclName"))
if mibBuilder.loadTexts: cLIpv6AclEntry.setStatus('current')
cLIpv6AclName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclName.setStatus('current')
cLIpv6AclApplyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notapplied", 0), ("applied", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6AclApplyMode.setStatus('current')
cLIpv6AclCounterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6AclCounterClear.setStatus('current')
cLIpv6AclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRowStatus.setStatus('current')
cLIpv6AclRuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2), )
if mibBuilder.loadTexts: cLIpv6AclRuleTable.setStatus('current')
cLIpv6AclRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-IPV6-MIB", "cLIpv6AclName"), (0, "CISCO-LWAPP-IPV6-MIB", "cLIpv6AclRuleIndex"))
if mibBuilder.loadTexts: cLIpv6AclRuleEntry.setStatus('current')
cLIpv6AclRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleIndex.setStatus('current')
cLIpv6AclRuleAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deny", 0), ("permit", 1))).clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleAction.setStatus('current')
cLIpv6AclRuleDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inbound", 0), ("outbound", 1), ("any", 2))).clone('any')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleDirection.setStatus('current')
cLIpv6AclRuleSourceInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleSourceInetAddressType.setStatus('current')
cLIpv6AclRuleSourceInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleSourceInetAddress.setStatus('current')
cLIpv6AclRuleSourcePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleSourcePrefixLength.setStatus('current')
cLIpv6AclRuleDestinationInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleDestinationInetAddressType.setStatus('current')
cLIpv6AclRuleDestinationInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleDestinationInetAddress.setStatus('current')
cLIpv6AclRuleDestinationPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleDestinationPrefixLength.setStatus('current')
cLIpv6AclRuleProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)).clone(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleProtocol.setStatus('current')
cLIpv6AclRuleStartSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleStartSourcePort.setStatus('current')
cLIpv6AclRuleEndSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleEndSourcePort.setStatus('current')
cLIpv6AclRuleStartDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleStartDestinationPort.setStatus('current')
cLIpv6AclRuleEndDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleEndDestinationPort.setStatus('current')
cLIpv6AclRuleDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)).clone(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleDscp.setStatus('current')
cLIpv6AclNewRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclNewRuleIndex.setStatus('current')
cLIpv6AclRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6AclRuleHits.setStatus('current')
cLIpv6AclRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6AclRuleRowStatus.setStatus('current')
ciscoLwappIpv6RaFiltering = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3))
cLIpv6RaFilteringEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6RaFilteringEnabled.setStatus('current')
cLIpv6RaFilteringOnApEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6RaFilteringOnApEnabled.setStatus('current')
cLIpv6RaFilteringClientInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 3), )
if mibBuilder.loadTexts: cLIpv6RaFilteringClientInfoTable.setStatus('current')
cLIpv6RaFilteringClientInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cLIpv6RaFilteringClientInfoEntry.setStatus('current')
cLIpv6RaFilteringClientInfoApName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6RaFilteringClientInfoApName.setStatus('current')
cLIpv6RaFilteringClientInfoWlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6RaFilteringClientInfoWlan.setStatus('current')
cLIpv6RaFilteringClientInfoPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6RaFilteringClientInfoPktsDropped.setStatus('current')
cLIpv6NbRaThrottleEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbRaThrottleEnabled.setStatus('current')
cLIpv6NbRaThrottlePeriod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 86400)).clone(600)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6NbRaThrottlePeriod.setStatus('current')
cLIpv6NbRaThrottleMaxThrough = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6NbRaThrottleMaxThrough.setStatus('current')
cLIpv6NbRaThrottleMaxThroughNoLimitEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6NbRaThrottleMaxThroughNoLimitEnabled.setStatus('current')
cLIpv6NbRaThrottleIntervalOption = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("passthrough", 2), ("throttle", 3))).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6NbRaThrottleIntervalOption.setStatus('current')
cLIpv6NbRaThrottleAllowAtleast = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6NbRaThrottleAllowAtleast.setStatus('current')
cLIpv6NbRaThrottleAllowAtmost = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6NbRaThrottleAllowAtmost.setStatus('current')
cLIpv6NbRaThrottleAllowNoLimitEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIpv6NbRaThrottleAllowNoLimitEnabled.setStatus('current')
cLIpv6NbTimerDownLifeTimeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbTimerDownLifeTimeEnabled.setStatus('current')
cLIpv6NbTimerDownLifeTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(86400)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbTimerDownLifeTimeInterval.setStatus('current')
cLIpv6NbTimerStaleLifeTimeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbTimerStaleLifeTimeEnabled.setStatus('current')
cLIpv6NbTimerStaleLifeTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(86400)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbTimerStaleLifeTimeInterval.setStatus('current')
cLIpv6NbTimerReachableLifeTimeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbTimerReachableLifeTimeEnabled.setStatus('current')
cLIpv6NbTimerReachableLifeTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(300)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbTimerReachableLifeTimeInterval.setStatus('current')
cLIpv6NbTimerNsMulticastCacheMissForward = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NbTimerNsMulticastCacheMissForward.setStatus('current')
cLIpv6NeighborBindingCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1), )
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterTable.setStatus('current')
cLIpv6NeighborBindingCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-IPV6-MIB", "cLIpv6NeighborBindingCounterType"))
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterEntry.setStatus('current')
cLIpv6NeighborBindingCounterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("receivedMessages", 1), ("bridgedMessages", 2))))
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterType.setStatus('current')
cLIpv6NeighborBindingCounterNdpRs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterNdpRs.setStatus('current')
cLIpv6NeighborBindingCounterNdpRa = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterNdpRa.setStatus('current')
cLIpv6NeighborBindingCounterNdpNs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterNdpNs.setStatus('current')
cLIpv6NeighborBindingCounterNdpNa = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterNdpNa.setStatus('current')
cLIpv6NeighborBindingCounterNdpRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterNdpRedirect.setStatus('current')
cLIpv6NeighborBindingCounterNdpCertSol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterNdpCertSol.setStatus('current')
cLIpv6NeighborBindingCounterNdpCertAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterNdpCertAdv.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Sol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Sol.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Adv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Adv.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Request = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Request.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Confirm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Confirm.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Renew = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Renew.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Rebind = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Rebind.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Reply = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Reply.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Release = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Release.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Decline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Decline.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6Recfg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6Recfg.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6InfoReq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6InfoReq.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6RelayForward = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6RelayForward.setStatus('current')
cLIpv6NeighborBindingCounterDhcpV6RelayReplay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterDhcpV6RelayReplay.setStatus('current')
cLIpv6NbNdSuppressDropCounter = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2))
cLIpv6NbNdSuppressDropCounterTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbNdSuppressDropCounterTotal.setStatus('current')
cLIpv6NbNdSuppressDropCounterReasonSilent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbNdSuppressDropCounterReasonSilent.setStatus('current')
cIpv6NbNdSuppressDropCounterReasonInOut = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpv6NbNdSuppressDropCounterReasonInOut.setStatus('current')
cLIpv6NbNdSuppressDropCounterReasonDad = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbNdSuppressDropCounterReasonDad.setStatus('current')
cLIpv6NbNdSuppressDropCounterReasonUnicast = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbNdSuppressDropCounterReasonUnicast.setStatus('current')
cLIpv6NbNdSuppressDropCounterReasonMulticast = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbNdSuppressDropCounterReasonMulticast.setStatus('current')
cLIpv6NbNdSuppressDropCounterReasonInt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbNdSuppressDropCounterReasonInt.setStatus('current')
cLIpv6NbSnoopingDropCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3), )
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterTable.setStatus('current')
cLIpv6NbSnoopingDropCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-IPV6-MIB", "cLIpv6NbSnoopingDropCounterType"))
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterEntry.setStatus('current')
cLIpv6NbSnoopingDropCounterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("ndpRs", 1), ("ndpRa", 2), ("ndpNs", 3), ("ndpNa", 4), ("ndpRedirect", 5), ("ndpCertSol", 6), ("ndpCertAdv", 7), ("nhcpV6Sol", 8), ("nhcpV6Adv", 9), ("dhcpV6Request", 10), ("dhcpV6Confirm", 11), ("dhcpV6Renew", 12), ("dhcpV6Rebind", 13), ("dhcpV6Reply", 14), ("dhcpV6Release", 15), ("dhcpV6Decline", 16), ("dhcpV6Recfg", 17), ("dhcpV6InfoReq", 18), ("dhcpV6RelayForward", 19), ("dhcpV6RelayReplay", 20))))
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterType.setStatus('current')
cLIpv6NbSnoopingDropCounterTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterTotal.setStatus('current')
cLIpv6NbSnoopingDropCounterSilent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterSilent.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonInt.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonCga = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonCga.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonRsa = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonRsa.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonLimit.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonMartian = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonMartian.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonMartianMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonMartianMac.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonNotAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonNotAllowed.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonNotAuthorised = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonNotAuthorised.setStatus('current')
cLIpv6NbSnoopingDropCounterReasonStop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIpv6NbSnoopingDropCounterReasonStop.setStatus('current')
cLIpv6NeighborBindingCounterClear = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6NeighborBindingCounterClear.setStatus('current')
cLIpv6GlobalEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLIpv6GlobalEnabled.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-IPV6-MIB", cLIpv6AclRuleDirection=cLIpv6AclRuleDirection, cLIpv6NbSnoopingDropCounterType=cLIpv6NbSnoopingDropCounterType, cLIpv6NeighborBindingCounterDhcpV6Renew=cLIpv6NeighborBindingCounterDhcpV6Renew, cLIpv6NbNdSuppressDropCounterReasonUnicast=cLIpv6NbNdSuppressDropCounterReasonUnicast, cLIpv6NbNdSuppressDropCounterTotal=cLIpv6NbNdSuppressDropCounterTotal, ciscoLwappIpv6NbTimerConfig=ciscoLwappIpv6NbTimerConfig, cLIpv6AclTable=cLIpv6AclTable, ciscoLwappIpv6MIB=ciscoLwappIpv6MIB, cLIpv6NeighborBindingCounterNdpNa=cLIpv6NeighborBindingCounterNdpNa, cLIpv6NbTimerStaleLifeTimeEnabled=cLIpv6NbTimerStaleLifeTimeEnabled, cLIpv6NbSnoopingDropCounterReasonInt=cLIpv6NbSnoopingDropCounterReasonInt, cLIpv6NeighborBindingCounterDhcpV6Sol=cLIpv6NeighborBindingCounterDhcpV6Sol, cLIpv6NeighborBindingCounterDhcpV6Adv=cLIpv6NeighborBindingCounterDhcpV6Adv, cLIpv6AclRuleDestinationInetAddressType=cLIpv6AclRuleDestinationInetAddressType, cLIpv6NeighborBindingCounterNdpRedirect=cLIpv6NeighborBindingCounterNdpRedirect, cLIpv6NeighborBindingCounterDhcpV6Decline=cLIpv6NeighborBindingCounterDhcpV6Decline, ciscoLwappIpv6MIBConform=ciscoLwappIpv6MIBConform, cLIpv6NeighborBindingCounterNdpRs=cLIpv6NeighborBindingCounterNdpRs, cLIpv6AclRuleStartSourcePort=cLIpv6AclRuleStartSourcePort, cLIpv6NeighborBindingCounterType=cLIpv6NeighborBindingCounterType, cLIpv6NbTimerNsMulticastCacheMissForward=cLIpv6NbTimerNsMulticastCacheMissForward, cLIpv6AclRuleProtocol=cLIpv6AclRuleProtocol, cLIpv6GlobalEnabled=cLIpv6GlobalEnabled, cLIpv6AclRuleHits=cLIpv6AclRuleHits, cLIpv6NeighborBindingCounterTable=cLIpv6NeighborBindingCounterTable, cLIpv6RaFilteringClientInfoEntry=cLIpv6RaFilteringClientInfoEntry, cLIpv6RaFilteringOnApEnabled=cLIpv6RaFilteringOnApEnabled, cLIpv6NeighborBindingCounterNdpCertSol=cLIpv6NeighborBindingCounterNdpCertSol, cLIpv6AclName=cLIpv6AclName, cLIpv6NbSnoopingDropCounterReasonRsa=cLIpv6NbSnoopingDropCounterReasonRsa, cLIpv6AclRuleAction=cLIpv6AclRuleAction, PYSNMP_MODULE_ID=ciscoLwappIpv6MIB, ciscoLwappIpv6MIBNotifs=ciscoLwappIpv6MIBNotifs, cLIpv6RaFilteringClientInfoTable=cLIpv6RaFilteringClientInfoTable, cLIpv6NbSnoopingDropCounterSilent=cLIpv6NbSnoopingDropCounterSilent, cLIpv6NbNdSuppressDropCounterReasonInt=cLIpv6NbNdSuppressDropCounterReasonInt, cLIpv6RaFilteringClientInfoPktsDropped=cLIpv6RaFilteringClientInfoPktsDropped, cLIpv6NeighborBindingCounterDhcpV6RelayForward=cLIpv6NeighborBindingCounterDhcpV6RelayForward, cLIpv6NbNdSuppressDropCounterReasonMulticast=cLIpv6NbNdSuppressDropCounterReasonMulticast, ciscoLwappIpv6Stats=ciscoLwappIpv6Stats, cLIpv6AclRuleEndDestinationPort=cLIpv6AclRuleEndDestinationPort, cLIpv6NeighborBindingCounterDhcpV6Confirm=cLIpv6NeighborBindingCounterDhcpV6Confirm, cLIpv6NbNdSuppressDropCounterReasonDad=cLIpv6NbNdSuppressDropCounterReasonDad, cLIpv6NbTimerReachableLifeTimeInterval=cLIpv6NbTimerReachableLifeTimeInterval, ciscoLwappIpv6Config=ciscoLwappIpv6Config, ciscoLwappIpv6NbRaThrottleConfig=ciscoLwappIpv6NbRaThrottleConfig, cLIpv6NbSnoopingDropCounterEntry=cLIpv6NbSnoopingDropCounterEntry, cLIpv6NbSnoopingDropCounterReasonStop=cLIpv6NbSnoopingDropCounterReasonStop, cLIpv6AclRuleSourceInetAddressType=cLIpv6AclRuleSourceInetAddressType, cLIpv6NbRaThrottleEnabled=cLIpv6NbRaThrottleEnabled, cLIpv6NbSnoopingDropCounterReasonMartian=cLIpv6NbSnoopingDropCounterReasonMartian, cLIpv6NbSnoopingDropCounterReasonCga=cLIpv6NbSnoopingDropCounterReasonCga, cLIpv6NbSnoopingDropCounterReasonNotAuthorised=cLIpv6NbSnoopingDropCounterReasonNotAuthorised, cLIpv6AclRuleIndex=cLIpv6AclRuleIndex, cLIpv6AclEntry=cLIpv6AclEntry, cLIpv6NbRaThrottleAllowAtleast=cLIpv6NbRaThrottleAllowAtleast, cLIpv6AclNewRuleIndex=cLIpv6AclNewRuleIndex, cLIpv6NeighborBindingCounterDhcpV6Rebind=cLIpv6NeighborBindingCounterDhcpV6Rebind, cLIpv6AclRuleSourceInetAddress=cLIpv6AclRuleSourceInetAddress, cLIpv6NeighborBindingCounterNdpRa=cLIpv6NeighborBindingCounterNdpRa, cLIpv6AclRuleDscp=cLIpv6AclRuleDscp, cLIpv6AclRuleTable=cLIpv6AclRuleTable, cLIpv6AclRuleRowStatus=cLIpv6AclRuleRowStatus, cLIpv6AclCounterClear=cLIpv6AclCounterClear, cLIpv6NbSnoopingDropCounterTotal=cLIpv6NbSnoopingDropCounterTotal, cLIpv6NbNdSuppressDropCounter=cLIpv6NbNdSuppressDropCounter, cLIpv6NbSnoopingDropCounterReasonMartianMac=cLIpv6NbSnoopingDropCounterReasonMartianMac, cLIpv6NeighborBindingCounterDhcpV6InfoReq=cLIpv6NeighborBindingCounterDhcpV6InfoReq, cLIpv6NbRaThrottleMaxThroughNoLimitEnabled=cLIpv6NbRaThrottleMaxThroughNoLimitEnabled, cLIpv6AclRuleDestinationPrefixLength=cLIpv6AclRuleDestinationPrefixLength, cLIpv6NbSnoopingDropCounterReasonNotAllowed=cLIpv6NbSnoopingDropCounterReasonNotAllowed, cLIpv6NbTimerDownLifeTimeInterval=cLIpv6NbTimerDownLifeTimeInterval, cLIpv6NeighborBindingCounterNdpCertAdv=cLIpv6NeighborBindingCounterNdpCertAdv, cLIpv6RaFilteringClientInfoWlan=cLIpv6RaFilteringClientInfoWlan, cIpv6NbNdSuppressDropCounterReasonInOut=cIpv6NbNdSuppressDropCounterReasonInOut, ciscoLwappIpv6RaFiltering=ciscoLwappIpv6RaFiltering, cLIpv6AclRowStatus=cLIpv6AclRowStatus, cLIpv6NbRaThrottlePeriod=cLIpv6NbRaThrottlePeriod, cLIpv6NeighborBindingCounterDhcpV6Recfg=cLIpv6NeighborBindingCounterDhcpV6Recfg, ciscoLwappIpv6MIBObjects=ciscoLwappIpv6MIBObjects, cLIpv6NbTimerDownLifeTimeEnabled=cLIpv6NbTimerDownLifeTimeEnabled, cLIpv6AclApplyMode=cLIpv6AclApplyMode, cLIpv6NeighborBindingCounterDhcpV6RelayReplay=cLIpv6NeighborBindingCounterDhcpV6RelayReplay, cLIpv6AclRuleDestinationInetAddress=cLIpv6AclRuleDestinationInetAddress, cLIpv6RaFilteringEnabled=cLIpv6RaFilteringEnabled, cLIpv6NbRaThrottleAllowNoLimitEnabled=cLIpv6NbRaThrottleAllowNoLimitEnabled, cLIpv6NbTimerReachableLifeTimeEnabled=cLIpv6NbTimerReachableLifeTimeEnabled, cLIpv6NbRaThrottleIntervalOption=cLIpv6NbRaThrottleIntervalOption, cLIpv6RaFilteringClientInfoApName=cLIpv6RaFilteringClientInfoApName, cLIpv6NeighborBindingCounterEntry=cLIpv6NeighborBindingCounterEntry, cLIpv6NbTimerStaleLifeTimeInterval=cLIpv6NbTimerStaleLifeTimeInterval, cLIpv6NbRaThrottleAllowAtmost=cLIpv6NbRaThrottleAllowAtmost, cLIpv6NbSnoopingDropCounterTable=cLIpv6NbSnoopingDropCounterTable, cLIpv6AclRuleEndSourcePort=cLIpv6AclRuleEndSourcePort, cLIpv6NbRaThrottleMaxThrough=cLIpv6NbRaThrottleMaxThrough, cLIpv6AclRuleStartDestinationPort=cLIpv6AclRuleStartDestinationPort, cLIpv6NbSnoopingDropCounterReasonLimit=cLIpv6NbSnoopingDropCounterReasonLimit, cLIpv6NeighborBindingCounterDhcpV6Release=cLIpv6NeighborBindingCounterDhcpV6Release, cLIpv6NeighborBindingCounterNdpNs=cLIpv6NeighborBindingCounterNdpNs, cLIpv6AclRuleEntry=cLIpv6AclRuleEntry, cLIpv6NbNdSuppressDropCounterReasonSilent=cLIpv6NbNdSuppressDropCounterReasonSilent, cLIpv6NeighborBindingCounterDhcpV6Reply=cLIpv6NeighborBindingCounterDhcpV6Reply, cLIpv6NeighborBindingCounterClear=cLIpv6NeighborBindingCounterClear, cLIpv6NeighborBindingCounterDhcpV6Request=cLIpv6NeighborBindingCounterDhcpV6Request, cLIpv6AclRuleSourcePrefixLength=cLIpv6AclRuleSourcePrefixLength)
