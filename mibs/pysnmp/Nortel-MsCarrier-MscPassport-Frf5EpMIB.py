#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-Frf5EpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-Frf5EpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
mscMcsMgrIndex, mscMcsMgr = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex", "mscMcsMgr")
RowStatus, Counter32, StorageType, DisplayString, Unsigned32, RowPointer, Integer32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "RowStatus", "Counter32", "StorageType", "DisplayString", "Unsigned32", "RowPointer", "Integer32")
NonReplicated, IntegerSequence, HexString, AsciiString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "IntegerSequence", "HexString", "AsciiString")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Bits, ObjectIdentity, Counter32, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, Counter64, Unsigned32, Integer32, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "ObjectIdentity", "Counter32", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "Counter64", "Unsigned32", "Integer32", "TimeTicks", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
frf5EpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121))
mscMcsMgrFrf5EpG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14))
mscMcsMgrFrf5EpGRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 1), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGRowStatusTable.setStatus('mandatory')
mscMcsMgrFrf5EpGRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGRowStatusEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGComponentName.setStatus('mandatory')
mscMcsMgrFrf5EpGStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGStorageType.setStatus('mandatory')
mscMcsMgrFrf5EpGIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGIndex.setStatus('mandatory')
mscMcsMgrFrf5EpGAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2))
mscMcsMgrFrf5EpGAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 1), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrRowStatusTable.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGAddrIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrRowStatusEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrComponentName.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrStorageType.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrIndex.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 10), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrProvTable.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGAddrIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrProvEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrRemoteAddress.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 750)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrCommentText.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrAddrPreTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 362), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrAddrPreTable.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrAddrPreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 362, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGAddrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGAddrAddrPreValue"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrAddrPreEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrAddrPreValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 362, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrAddrPreValue.setStatus('mandatory')
mscMcsMgrFrf5EpGAddrAddrPreRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 2, 362, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGAddrAddrPreRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3))
mscMcsMgrFrf5EpGEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 1), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpRowStatusTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpRowStatusEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpComponentName.setStatus('mandatory')
mscMcsMgrFrf5EpGEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpStorageType.setStatus('mandatory')
mscMcsMgrFrf5EpGEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpIndex.setStatus('mandatory')
mscMcsMgrFrf5EpGEpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpStateTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpStateEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAdminState.setStatus('mandatory')
mscMcsMgrFrf5EpGEpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpOperationalState.setStatus('mandatory')
mscMcsMgrFrf5EpGEpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpUsageState.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAvailabilityStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpProceduralStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpControlStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAlarmStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpStandbyStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpUnknownStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpOperTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpOperEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLastVccClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLastVccClearCause.setStatus('mandatory')
mscMcsMgrFrf5EpGEpConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpConnectionTransferPriority.setStatus('mandatory')
mscMcsMgrFrf5EpGEpServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpServiceCategory.setStatus('mandatory')
mscMcsMgrFrf5EpGEpPeakCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpPeakCellRate01.setStatus('mandatory')
mscMcsMgrFrf5EpGEpSustainedCellRate0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpSustainedCellRate0.setStatus('mandatory')
mscMcsMgrFrf5EpGEpSustainedCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpSustainedCellRate01.setStatus('mandatory')
mscMcsMgrFrf5EpGEpMaximumBurstSize0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpMaximumBurstSize0.setStatus('mandatory')
mscMcsMgrFrf5EpGEpMaximumBurstSize01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpMaximumBurstSize01.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAvgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAvgFrameSize.setStatus('mandatory')
mscMcsMgrFrf5EpGEpTrafficParmConversionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6))).clone(namedValues=NamedValues(("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpTrafficParmConversionPolicy.setStatus('mandatory')
mscMcsMgrFrf5EpGEpType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpType.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLastVccCauseDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 11, 1, 20), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLastVccCauseDiag.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2))
mscMcsMgrFrf5EpGEpLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 1), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiRowStatusTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiRowStatusEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiComponentName.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiStorageType.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiIndex.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiParmsTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiParmsEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ansi", 2), ("ccitt", 3))).clone('ccitt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiProcedures.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiAsyncStatusReport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiAsyncStatusReport.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiErrorEventThreshold.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiEventCount.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiCheckPointTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiCheckPointTimer.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("network", 0), ("user", 1), ("both", 2))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiSide.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiNniParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 11), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiNniParmsTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiNniParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiNniParmsEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiFullStatusPollingCycles.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiLinkVerificationTimer.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 12), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiStateTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiStateEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiAdminState.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiOperationalState.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiUsageState.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 13), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiPsiTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiPsiEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1))).clone('normalCondition')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiProtocolStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiStatsTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiStatsEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiFullStatusToInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiFullStatusToInterface.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiNetworkSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiNetworkSideEventHistory.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiUserSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 6), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiUserSideEventHistory.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiProtocolErrors.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiUnexpectedIes.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiSequenceErrors.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiStatusSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiStatusSequenceErrors.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiUnexpectedReports.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiPollingVerifTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiPollingVerifTimeouts.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiNoStatusReportCount.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiKeepAliveEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiKeepAliveEnqToIf.setStatus('mandatory')
mscMcsMgrFrf5EpGEpLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 2, 14, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpLmiFullStatusEnqToIf.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3))
mscMcsMgrFrf5EpGEpEpdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 1), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdRowStatusTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpEpdIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdRowStatusEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdComponentName.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdStorageType.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdIndex.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdProvTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpEpdIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdProvEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 3), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdConnectionTransferPriority.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdCommittedInformationRate.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdExcessInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdExcessInformationRate.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(16000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdCommittedBurstSize.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1))).clone('master')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdType.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdAccessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(1536000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdAccessRate.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdExcessBurstSize.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 11), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdCidDataTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpEpdIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdCidDataEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpEpdCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpEpdCustomerIdentifier.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4))
mscMcsMgrFrf5EpGEpDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 1), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciRowStatusTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpDlciIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciRowStatusEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciComponentName.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciStorageType.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(16, 1007), ValueRangeConstraint(1022, 1022), )))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciIndex.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 10), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciOperTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpDlciIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciOperEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciABitStatusToIf.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcDown", 6))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciABitReasonToIf.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciABitStatusFromIf.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignalled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("missingFromLmiReport", 7))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciABitReasonFromIf.setStatus('mandatory')
mscMcsMgrFrf5EpGEpDlciAccessConnectionComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 4, 10, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpDlciAccessConnectionComponent.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmCon = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5))
mscMcsMgrFrf5EpGEpAtmConRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 1), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConRowStatusTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpAtmConIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConRowStatusEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConRowStatus.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConComponentName.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConStorageType.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConIndex.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 10), )
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConOperTable.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-Frf5EpMIB", "mscMcsMgrFrf5EpGEpAtmConIndex"))
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConOperEntry.setStatus('mandatory')
mscMcsMgrFrf5EpGEpAtmConNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 14, 3, 5, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrFrf5EpGEpAtmConNextHop.setStatus('mandatory')
frf5EpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 1))
frf5EpGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 1, 1))
frf5EpGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 1, 1, 3))
frf5EpGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 1, 1, 3, 2))
frf5EpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 3))
frf5EpCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 3, 1))
frf5EpCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 3, 1, 3))
frf5EpCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 121, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-Frf5EpMIB", mscMcsMgrFrf5EpGEpDlciIndex=mscMcsMgrFrf5EpGEpDlciIndex, mscMcsMgrFrf5EpGEpLmiUnexpectedIes=mscMcsMgrFrf5EpGEpLmiUnexpectedIes, mscMcsMgrFrf5EpGEpIndex=mscMcsMgrFrf5EpGEpIndex, mscMcsMgrFrf5EpGEpUnknownStatus=mscMcsMgrFrf5EpGEpUnknownStatus, mscMcsMgrFrf5EpG=mscMcsMgrFrf5EpG, mscMcsMgrFrf5EpGEpEpdCidDataEntry=mscMcsMgrFrf5EpGEpEpdCidDataEntry, mscMcsMgrFrf5EpGAddrRowStatus=mscMcsMgrFrf5EpGAddrRowStatus, mscMcsMgrFrf5EpGEpSustainedCellRate0=mscMcsMgrFrf5EpGEpSustainedCellRate0, mscMcsMgrFrf5EpGEpAtmConRowStatus=mscMcsMgrFrf5EpGEpAtmConRowStatus, mscMcsMgrFrf5EpGEpLmiPsiTable=mscMcsMgrFrf5EpGEpLmiPsiTable, mscMcsMgrFrf5EpGEpEpdComponentName=mscMcsMgrFrf5EpGEpEpdComponentName, mscMcsMgrFrf5EpGEpDlciAccessConnectionComponent=mscMcsMgrFrf5EpGEpDlciAccessConnectionComponent, mscMcsMgrFrf5EpGEpEpdCidDataTable=mscMcsMgrFrf5EpGEpEpdCidDataTable, mscMcsMgrFrf5EpGEpLmiProcedures=mscMcsMgrFrf5EpGEpLmiProcedures, mscMcsMgrFrf5EpGEpEpdProvTable=mscMcsMgrFrf5EpGEpEpdProvTable, mscMcsMgrFrf5EpGEpAtmConOperTable=mscMcsMgrFrf5EpGEpAtmConOperTable, mscMcsMgrFrf5EpGEpEpdRowStatusTable=mscMcsMgrFrf5EpGEpEpdRowStatusTable, mscMcsMgrFrf5EpGEpRowStatusTable=mscMcsMgrFrf5EpGEpRowStatusTable, mscMcsMgrFrf5EpGEpAtmConStorageType=mscMcsMgrFrf5EpGEpAtmConStorageType, mscMcsMgrFrf5EpGEpDlciOperEntry=mscMcsMgrFrf5EpGEpDlciOperEntry, mscMcsMgrFrf5EpGEpLmiStatsTable=mscMcsMgrFrf5EpGEpLmiStatsTable, mscMcsMgrFrf5EpGEpLmiProtocolErrors=mscMcsMgrFrf5EpGEpLmiProtocolErrors, frf5EpGroup=frf5EpGroup, mscMcsMgrFrf5EpGEpDlciABitReasonFromIf=mscMcsMgrFrf5EpGEpDlciABitReasonFromIf, mscMcsMgrFrf5EpGEpLmiFullStatusPollingCycles=mscMcsMgrFrf5EpGEpLmiFullStatusPollingCycles, frf5EpCapabilitiesCA=frf5EpCapabilitiesCA, mscMcsMgrFrf5EpGEpAvailabilityStatus=mscMcsMgrFrf5EpGEpAvailabilityStatus, mscMcsMgrFrf5EpGEpEpdStorageType=mscMcsMgrFrf5EpGEpEpdStorageType, mscMcsMgrFrf5EpGEpLmiCheckPointTimer=mscMcsMgrFrf5EpGEpLmiCheckPointTimer, mscMcsMgrFrf5EpGEpLmiNniParmsTable=mscMcsMgrFrf5EpGEpLmiNniParmsTable, frf5EpCapabilitiesCA02=frf5EpCapabilitiesCA02, mscMcsMgrFrf5EpGRowStatusTable=mscMcsMgrFrf5EpGRowStatusTable, mscMcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface=mscMcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface, mscMcsMgrFrf5EpGEpLmiNoStatusReportCount=mscMcsMgrFrf5EpGEpLmiNoStatusReportCount, mscMcsMgrFrf5EpGEpDlciRowStatusEntry=mscMcsMgrFrf5EpGEpDlciRowStatusEntry, mscMcsMgrFrf5EpGEpEpdIndex=mscMcsMgrFrf5EpGEpEpdIndex, mscMcsMgrFrf5EpGEpEpdCommittedBurstSize=mscMcsMgrFrf5EpGEpEpdCommittedBurstSize, mscMcsMgrFrf5EpGEpDlciOperTable=mscMcsMgrFrf5EpGEpDlciOperTable, mscMcsMgrFrf5EpGAddr=mscMcsMgrFrf5EpGAddr, mscMcsMgrFrf5EpGAddrStorageType=mscMcsMgrFrf5EpGAddrStorageType, frf5EpGroupCA02=frf5EpGroupCA02, mscMcsMgrFrf5EpGAddrRemoteAddress=mscMcsMgrFrf5EpGAddrRemoteAddress, mscMcsMgrFrf5EpGAddrProvTable=mscMcsMgrFrf5EpGAddrProvTable, mscMcsMgrFrf5EpGEpLmiEventCount=mscMcsMgrFrf5EpGEpLmiEventCount, mscMcsMgrFrf5EpGEpEpdRowStatus=mscMcsMgrFrf5EpGEpEpdRowStatus, mscMcsMgrFrf5EpGEpLmiUserSideEventHistory=mscMcsMgrFrf5EpGEpLmiUserSideEventHistory, mscMcsMgrFrf5EpGEpAtmConOperEntry=mscMcsMgrFrf5EpGEpAtmConOperEntry, mscMcsMgrFrf5EpGEpLmiComponentName=mscMcsMgrFrf5EpGEpLmiComponentName, mscMcsMgrFrf5EpGAddrAddrPreTable=mscMcsMgrFrf5EpGAddrAddrPreTable, mscMcsMgrFrf5EpGEpLmiSide=mscMcsMgrFrf5EpGEpLmiSide, mscMcsMgrFrf5EpGEpStateTable=mscMcsMgrFrf5EpGEpStateTable, mscMcsMgrFrf5EpGEpStateEntry=mscMcsMgrFrf5EpGEpStateEntry, frf5EpGroupCA02A=frf5EpGroupCA02A, mscMcsMgrFrf5EpGEpAtmCon=mscMcsMgrFrf5EpGEpAtmCon, mscMcsMgrFrf5EpGEpLmiRowStatusEntry=mscMcsMgrFrf5EpGEpLmiRowStatusEntry, mscMcsMgrFrf5EpGEpLastVccClearCause=mscMcsMgrFrf5EpGEpLastVccClearCause, mscMcsMgrFrf5EpGEpDlci=mscMcsMgrFrf5EpGEpDlci, mscMcsMgrFrf5EpGEpDlciABitReasonToIf=mscMcsMgrFrf5EpGEpDlciABitReasonToIf, mscMcsMgrFrf5EpGEpMaximumBurstSize01=mscMcsMgrFrf5EpGEpMaximumBurstSize01, mscMcsMgrFrf5EpGIndex=mscMcsMgrFrf5EpGIndex, mscMcsMgrFrf5EpGEpServiceCategory=mscMcsMgrFrf5EpGEpServiceCategory, mscMcsMgrFrf5EpGEpStorageType=mscMcsMgrFrf5EpGEpStorageType, mscMcsMgrFrf5EpGEpOperEntry=mscMcsMgrFrf5EpGEpOperEntry, mscMcsMgrFrf5EpGEpDlciABitStatusFromIf=mscMcsMgrFrf5EpGEpDlciABitStatusFromIf, mscMcsMgrFrf5EpGEpLmi=mscMcsMgrFrf5EpGEpLmi, mscMcsMgrFrf5EpGEpSustainedCellRate01=mscMcsMgrFrf5EpGEpSustainedCellRate01, mscMcsMgrFrf5EpGEpEpdAccessRate=mscMcsMgrFrf5EpGEpEpdAccessRate, mscMcsMgrFrf5EpGEpDlciABitStatusToIf=mscMcsMgrFrf5EpGEpDlciABitStatusToIf, mscMcsMgrFrf5EpGEpMaximumBurstSize0=mscMcsMgrFrf5EpGEpMaximumBurstSize0, mscMcsMgrFrf5EpGAddrCommentText=mscMcsMgrFrf5EpGAddrCommentText, mscMcsMgrFrf5EpGEpRowStatusEntry=mscMcsMgrFrf5EpGEpRowStatusEntry, mscMcsMgrFrf5EpGEpLmiUsageState=mscMcsMgrFrf5EpGEpLmiUsageState, mscMcsMgrFrf5EpGEpOperTable=mscMcsMgrFrf5EpGEpOperTable, mscMcsMgrFrf5EpGEpOperationalState=mscMcsMgrFrf5EpGEpOperationalState, mscMcsMgrFrf5EpGAddrAddrPreRowStatus=mscMcsMgrFrf5EpGAddrAddrPreRowStatus, mscMcsMgrFrf5EpGEpEpdType=mscMcsMgrFrf5EpGEpEpdType, mscMcsMgrFrf5EpGEpAvgFrameSize=mscMcsMgrFrf5EpGEpAvgFrameSize, mscMcsMgrFrf5EpGEpAtmConIndex=mscMcsMgrFrf5EpGEpAtmConIndex, mscMcsMgrFrf5EpGEpLmiParmsEntry=mscMcsMgrFrf5EpGEpLmiParmsEntry, mscMcsMgrFrf5EpGEpEpdExcessInformationRate=mscMcsMgrFrf5EpGEpEpdExcessInformationRate, mscMcsMgrFrf5EpGEpEpd=mscMcsMgrFrf5EpGEpEpd, mscMcsMgrFrf5EpGEpStandbyStatus=mscMcsMgrFrf5EpGEpStandbyStatus, frf5EpCapabilities=frf5EpCapabilities, mscMcsMgrFrf5EpGEpLmiStatusSequenceErrors=mscMcsMgrFrf5EpGEpLmiStatusSequenceErrors, mscMcsMgrFrf5EpGEpLmiRowStatus=mscMcsMgrFrf5EpGEpLmiRowStatus, mscMcsMgrFrf5EpGEpLmiFullStatusEnqToIf=mscMcsMgrFrf5EpGEpLmiFullStatusEnqToIf, mscMcsMgrFrf5EpGAddrAddrPreValue=mscMcsMgrFrf5EpGAddrAddrPreValue, mscMcsMgrFrf5EpGEpDlciRowStatus=mscMcsMgrFrf5EpGEpDlciRowStatus, mscMcsMgrFrf5EpGEpLmiKeepAliveEnqToIf=mscMcsMgrFrf5EpGEpLmiKeepAliveEnqToIf, mscMcsMgrFrf5EpGAddrRowStatusTable=mscMcsMgrFrf5EpGAddrRowStatusTable, mscMcsMgrFrf5EpGEpAtmConRowStatusEntry=mscMcsMgrFrf5EpGEpAtmConRowStatusEntry, mscMcsMgrFrf5EpGStorageType=mscMcsMgrFrf5EpGStorageType, mscMcsMgrFrf5EpGEpAtmConComponentName=mscMcsMgrFrf5EpGEpAtmConComponentName, mscMcsMgrFrf5EpGEpComponentName=mscMcsMgrFrf5EpGEpComponentName, mscMcsMgrFrf5EpGEpProceduralStatus=mscMcsMgrFrf5EpGEpProceduralStatus, mscMcsMgrFrf5EpGEpAdminState=mscMcsMgrFrf5EpGEpAdminState, mscMcsMgrFrf5EpGAddrIndex=mscMcsMgrFrf5EpGAddrIndex, mscMcsMgrFrf5EpGEpType=mscMcsMgrFrf5EpGEpType, mscMcsMgrFrf5EpGEpLmiNetworkSideEventHistory=mscMcsMgrFrf5EpGEpLmiNetworkSideEventHistory, mscMcsMgrFrf5EpGEpConnectionTransferPriority=mscMcsMgrFrf5EpGEpConnectionTransferPriority, mscMcsMgrFrf5EpGEpLmiNniParmsEntry=mscMcsMgrFrf5EpGEpLmiNniParmsEntry, mscMcsMgrFrf5EpGEpEpdCommittedInformationRate=mscMcsMgrFrf5EpGEpEpdCommittedInformationRate, mscMcsMgrFrf5EpGEpRowStatus=mscMcsMgrFrf5EpGEpRowStatus, mscMcsMgrFrf5EpGAddrProvEntry=mscMcsMgrFrf5EpGAddrProvEntry, mscMcsMgrFrf5EpGEpUsageState=mscMcsMgrFrf5EpGEpUsageState, mscMcsMgrFrf5EpGEpAtmConNextHop=mscMcsMgrFrf5EpGEpAtmConNextHop, mscMcsMgrFrf5EpGEpEpdConnectionTransferPriority=mscMcsMgrFrf5EpGEpEpdConnectionTransferPriority, mscMcsMgrFrf5EpGEpDlciRowStatusTable=mscMcsMgrFrf5EpGEpDlciRowStatusTable, mscMcsMgrFrf5EpGEpDlciStorageType=mscMcsMgrFrf5EpGEpDlciStorageType, frf5EpCapabilitiesCA02A=frf5EpCapabilitiesCA02A, mscMcsMgrFrf5EpGEpTrafficParmConversionPolicy=mscMcsMgrFrf5EpGEpTrafficParmConversionPolicy, mscMcsMgrFrf5EpGEpLmiAsyncStatusReport=mscMcsMgrFrf5EpGEpLmiAsyncStatusReport, mscMcsMgrFrf5EpGEpDlciComponentName=mscMcsMgrFrf5EpGEpDlciComponentName, mscMcsMgrFrf5EpGEpLmiPsiEntry=mscMcsMgrFrf5EpGEpLmiPsiEntry, mscMcsMgrFrf5EpGEpLmiSequenceErrors=mscMcsMgrFrf5EpGEpLmiSequenceErrors, mscMcsMgrFrf5EpGEpLastVccCauseDiag=mscMcsMgrFrf5EpGEpLastVccCauseDiag, mscMcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface=mscMcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface, mscMcsMgrFrf5EpGEpLmiStorageType=mscMcsMgrFrf5EpGEpLmiStorageType, mscMcsMgrFrf5EpGEpAtmConRowStatusTable=mscMcsMgrFrf5EpGEpAtmConRowStatusTable, mscMcsMgrFrf5EpGEpLmiUnexpectedReports=mscMcsMgrFrf5EpGEpLmiUnexpectedReports, frf5EpMIB=frf5EpMIB, mscMcsMgrFrf5EpGEpLmiStatsEntry=mscMcsMgrFrf5EpGEpLmiStatsEntry, mscMcsMgrFrf5EpGEpLmiParmsTable=mscMcsMgrFrf5EpGEpLmiParmsTable, mscMcsMgrFrf5EpGEpEpdRowStatusEntry=mscMcsMgrFrf5EpGEpEpdRowStatusEntry, mscMcsMgrFrf5EpGEpLmiRowStatusTable=mscMcsMgrFrf5EpGEpLmiRowStatusTable, mscMcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface=mscMcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface, mscMcsMgrFrf5EpGEpAlarmStatus=mscMcsMgrFrf5EpGEpAlarmStatus, mscMcsMgrFrf5EpGEpPeakCellRate01=mscMcsMgrFrf5EpGEpPeakCellRate01, frf5EpGroupCA=frf5EpGroupCA, mscMcsMgrFrf5EpGEpEpdCustomerIdentifier=mscMcsMgrFrf5EpGEpEpdCustomerIdentifier, mscMcsMgrFrf5EpGEpLmiProtocolStatus=mscMcsMgrFrf5EpGEpLmiProtocolStatus, mscMcsMgrFrf5EpGEpControlStatus=mscMcsMgrFrf5EpGEpControlStatus, mscMcsMgrFrf5EpGEpLmiFullStatusToInterface=mscMcsMgrFrf5EpGEpLmiFullStatusToInterface, mscMcsMgrFrf5EpGEpEpdProvEntry=mscMcsMgrFrf5EpGEpEpdProvEntry, mscMcsMgrFrf5EpGEpLmiAdminState=mscMcsMgrFrf5EpGEpLmiAdminState, mscMcsMgrFrf5EpGAddrAddrPreEntry=mscMcsMgrFrf5EpGAddrAddrPreEntry, mscMcsMgrFrf5EpGEpLmiErrorEventThreshold=mscMcsMgrFrf5EpGEpLmiErrorEventThreshold, mscMcsMgrFrf5EpGRowStatusEntry=mscMcsMgrFrf5EpGRowStatusEntry, mscMcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier=mscMcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier, mscMcsMgrFrf5EpGComponentName=mscMcsMgrFrf5EpGComponentName, mscMcsMgrFrf5EpGAddrComponentName=mscMcsMgrFrf5EpGAddrComponentName, mscMcsMgrFrf5EpGAddrRowStatusEntry=mscMcsMgrFrf5EpGAddrRowStatusEntry, mscMcsMgrFrf5EpGEp=mscMcsMgrFrf5EpGEp, mscMcsMgrFrf5EpGEpLmiPollingVerifTimeouts=mscMcsMgrFrf5EpGEpLmiPollingVerifTimeouts, mscMcsMgrFrf5EpGEpLmiLinkVerificationTimer=mscMcsMgrFrf5EpGEpLmiLinkVerificationTimer, mscMcsMgrFrf5EpGEpLmiIndex=mscMcsMgrFrf5EpGEpLmiIndex, mscMcsMgrFrf5EpGRowStatus=mscMcsMgrFrf5EpGRowStatus, mscMcsMgrFrf5EpGEpLmiStateTable=mscMcsMgrFrf5EpGEpLmiStateTable, mscMcsMgrFrf5EpGEpEpdExcessBurstSize=mscMcsMgrFrf5EpGEpEpdExcessBurstSize, mscMcsMgrFrf5EpGEpLmiStateEntry=mscMcsMgrFrf5EpGEpLmiStateEntry, mscMcsMgrFrf5EpGEpLmiOperationalState=mscMcsMgrFrf5EpGEpLmiOperationalState)
