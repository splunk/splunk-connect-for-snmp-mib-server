#
# PySNMP MIB module MSSQLSERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSSQLSERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter64, ModuleIdentity, enterprises, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, Bits, Integer32, iso, Unsigned32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "ModuleIdentity", "enterprises", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "Bits", "Integer32", "iso", "Unsigned32", "NotificationType", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
microsoft = MibIdentifier((1, 3, 6, 1, 4, 1, 311))
software = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1))
apps = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 4))
mssqlServer = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 4, 1))
mssqlServerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1))
mssqlSrvTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 1), )
if mibBuilder.loadTexts: mssqlSrvTable.setStatus('mandatory')
mssqlSrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 1, 1), ).setIndexNames((0, "MSSQLSERVER-MIB", "mssqlSrvVendorName"))
if mibBuilder.loadTexts: mssqlSrvEntry.setStatus('mandatory')
mssqlSrvVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvVendorName.setStatus('mandatory')
mssqlSrvProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvProductName.setStatus('mandatory')
mssqlSrvVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvVersion.setStatus('mandatory')
mssqlSrvContact = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvContact.setStatus('mandatory')
mssqlSrvState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("running", 1), ("paused", 2), ("stopped", 3), ("starting", 4), ("stopping", 5), ("continuing", 6), ("pausing", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvState.setStatus('mandatory')
mssqlSrvInfoTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2), )
if mibBuilder.loadTexts: mssqlSrvInfoTable.setStatus('mandatory')
mssqlSrvInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1), ).setIndexNames((0, "MSSQLSERVER-MIB", "mssqlSrvInfoServerName"))
if mibBuilder.loadTexts: mssqlSrvInfoEntry.setStatus('mandatory')
mssqlSrvInfoServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoServerName.setStatus('mandatory')
mssqlSrvInfoStartupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoStartupTime.setStatus('mandatory')
mssqlSrvInfoTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoTrans.setStatus('mandatory')
mssqlSrvInfoPageReads = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoPageReads.setStatus('mandatory')
mssqlSrvInfoSinglePageWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoSinglePageWrites.setStatus('mandatory')
mssqlSrvInfoBatchWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoBatchWrites.setStatus('mandatory')
mssqlSrvInfoLazyWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoLazyWrites.setStatus('mandatory')
mssqlSrvInfoLogWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoLogWrites.setStatus('mandatory')
mssqlSrvInfoOutstandingReads = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoOutstandingReads.setStatus('mandatory')
mssqlSrvInfoOutstandingWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoOutstandingWrites.setStatus('mandatory')
mssqlSrvInfoCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoCacheHitRatio.setStatus('mandatory')
mssqlSrvInfoFreeBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoFreeBuffers.setStatus('mandatory')
mssqlSrvInfoNetworkReads = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoNetworkReads.setStatus('mandatory')
mssqlSrvInfoNetworkWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoNetworkWrites.setStatus('mandatory')
mssqlSrvInfoRAPhysicalReads = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoRAPhysicalReads.setStatus('mandatory')
mssqlSrvInfoUserConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoUserConnections.setStatus('mandatory')
mssqlSrvInfoTotalLocks = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoTotalLocks.setStatus('mandatory')
mssqlSrvInfoTotalBlockingLocks = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoTotalBlockingLocks.setStatus('mandatory')
mssqlSrvInfoUsersBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvInfoUsersBlocked.setStatus('mandatory')
mssqlSrvConfigParamTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 3), )
if mibBuilder.loadTexts: mssqlSrvConfigParamTable.setStatus('mandatory')
mssqlSrvConfigParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 3, 1), )
if mibBuilder.loadTexts: mssqlSrvConfigParamEntry.setStatus('mandatory')
mssqlSrvConfigParamName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvConfigParamName.setStatus('mandatory')
mssqlSrvConfigParamMax = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvConfigParamMax.setStatus('mandatory')
mssqlSrvConfigParamMin = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvConfigParamMin.setStatus('mandatory')
mssqlSrvConfigParamConfigValue = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvConfigParamConfigValue.setStatus('mandatory')
mssqlSrvConfigParamRunValue = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvConfigParamRunValue.setStatus('mandatory')
mssqlSrvDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 4), )
if mibBuilder.loadTexts: mssqlSrvDeviceTable.setStatus('mandatory')
mssqlSrvDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 4, 1), ).setIndexNames((0, "MSSQLSERVER-MIB", "mssqlSrvDeviceLogicalName"))
if mibBuilder.loadTexts: mssqlSrvDeviceEntry.setStatus('mandatory')
mssqlSrvDeviceLogicalName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvDeviceLogicalName.setStatus('mandatory')
mssqlSrvDevicePhysicalName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvDevicePhysicalName.setStatus('mandatory')
mssqlSrvDeviceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlSrvDeviceDescription.setStatus('mandatory')
mssqlDbTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 5), )
if mibBuilder.loadTexts: mssqlDbTable.setStatus('mandatory')
mssqlDbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 5, 1), ).setIndexNames((0, "MSSQLSERVER-MIB", "mssqlDbId"), (0, "MSSQLSERVER-MIB", "mssqlDbState"))
if mibBuilder.loadTexts: mssqlDbEntry.setStatus('mandatory')
mssqlDbId = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbId.setStatus('mandatory')
mssqlDbName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbName.setStatus('mandatory')
mssqlDbState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("active", 1), ("singleUser", 2), ("dboonly", 3), ("readOnly", 4), ("offline", 5), ("suspect", 6), ("loading", 7), ("publishing", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbState.setStatus('mandatory')
mssqlDbInfoTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6), )
if mibBuilder.loadTexts: mssqlDbInfoTable.setStatus('mandatory')
mssqlDbInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1), ).setIndexNames((0, "MSSQLSERVER-MIB", "mssqlDbInfoDbId"))
if mibBuilder.loadTexts: mssqlDbInfoEntry.setStatus('mandatory')
mssqlDbInfoDbId = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoDbId.setStatus('mandatory')
mssqlDbInfoDbName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoDbName.setStatus('mandatory')
mssqlDbInfoCreationDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoCreationDateTime.setStatus('mandatory')
mssqlDbInfoOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoOwner.setStatus('mandatory')
mssqlDbInfoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoSize.setStatus('mandatory')
mssqlDbInfoUnallocatedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoUnallocatedSpace.setStatus('mandatory')
mssqlDbInfoReservedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoReservedSpace.setStatus('mandatory')
mssqlDbInfoDataSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoDataSpace.setStatus('mandatory')
mssqlDbInfoIndexSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoIndexSpace.setStatus('mandatory')
mssqlDbInfoUnusedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoUnusedSpace.setStatus('mandatory')
mssqlDbInfoLastTrLogDump = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoLastTrLogDump.setStatus('mandatory')
mssqlDbInfoLogSize = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoLogSize.setStatus('mandatory')
mssqlDbInfoLogSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbInfoLogSpaceUsed.setStatus('mandatory')
mssqlDbOptionTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 7), )
if mibBuilder.loadTexts: mssqlDbOptionTable.setStatus('mandatory')
pysmiFakeCol1000 = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 7, 1) + (1000, ), Integer32())
mssqlDbOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 7, 1), ).setIndexNames((0, "MSSQLSERVER-MIB", "mssqlDbOptionDbId"), (0, "MSSQLSERVER-MIB", "pysmiFakeCol1000"))
if mibBuilder.loadTexts: mssqlDbOptionEntry.setStatus('mandatory')
mssqlDbOptionDbId = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbOptionDbId.setStatus('mandatory')
mssqlDbOptionDbName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbOptionDbName.setStatus('mandatory')
mssqlDbOptionSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbOptionSetName.setStatus('mandatory')
mssqlDbDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8), )
if mibBuilder.loadTexts: mssqlDbDeviceTable.setStatus('mandatory')
pysmiFakeCol1001 = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8, 1) + (1001, ), Integer32())
mssqlDbDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8, 1), ).setIndexNames((0, "MSSQLSERVER-MIB", "mssqlDbDeviceDbId"), (0, "MSSQLSERVER-MIB", "pysmiFakeCol1001"))
if mibBuilder.loadTexts: mssqlDbDeviceEntry.setStatus('mandatory')
mssqlDbDeviceDbId = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbDeviceDbId.setStatus('mandatory')
mssqlDbDeviceDbName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbDeviceDbName.setStatus('mandatory')
mssqlDbDeviceFragmentName = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbDeviceFragmentName.setStatus('mandatory')
mssqlDbDeviceFragmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbDeviceFragmentSize.setStatus('mandatory')
mssqlDbDeviceFragmentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 4, 1, 1, 8, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssqlDbDeviceFragmentUsage.setStatus('mandatory')
mibBuilder.exportSymbols("MSSQLSERVER-MIB", mssqlDbId=mssqlDbId, mssqlDbInfoSize=mssqlDbInfoSize, mssqlSrvInfoLogWrites=mssqlSrvInfoLogWrites, mssqlSrvInfoFreeBuffers=mssqlSrvInfoFreeBuffers, mssqlDbInfoEntry=mssqlDbInfoEntry, mssqlSrvInfoLazyWrites=mssqlSrvInfoLazyWrites, mssqlSrvDevicePhysicalName=mssqlSrvDevicePhysicalName, mssqlDbDeviceEntry=mssqlDbDeviceEntry, mssqlSrvInfoPageReads=mssqlSrvInfoPageReads, microsoft=microsoft, mssqlDbInfoReservedSpace=mssqlDbInfoReservedSpace, mssqlDbDeviceDbName=mssqlDbDeviceDbName, mssqlSrvInfoOutstandingWrites=mssqlSrvInfoOutstandingWrites, mssqlDbDeviceFragmentSize=mssqlDbDeviceFragmentSize, mssqlSrvConfigParamMin=mssqlSrvConfigParamMin, mssqlSrvConfigParamConfigValue=mssqlSrvConfigParamConfigValue, mssqlSrvInfoUsersBlocked=mssqlSrvInfoUsersBlocked, mssqlSrvContact=mssqlSrvContact, mssqlSrvInfoStartupTime=mssqlSrvInfoStartupTime, mssqlSrvConfigParamTable=mssqlSrvConfigParamTable, mssqlSrvTable=mssqlSrvTable, mssqlDbInfoTable=mssqlDbInfoTable, mssqlSrvInfoTrans=mssqlSrvInfoTrans, mssqlDbInfoLogSize=mssqlDbInfoLogSize, mssqlDbInfoOwner=mssqlDbInfoOwner, mssqlSrvInfoCacheHitRatio=mssqlSrvInfoCacheHitRatio, pysmiFakeCol1001=pysmiFakeCol1001, mssqlDbTable=mssqlDbTable, mssqlDbDeviceDbId=mssqlDbDeviceDbId, mssqlSrvInfoTable=mssqlSrvInfoTable, mssqlDbInfoUnusedSpace=mssqlDbInfoUnusedSpace, mssqlSrvConfigParamEntry=mssqlSrvConfigParamEntry, mssqlDbInfoIndexSpace=mssqlDbInfoIndexSpace, mssqlDbDeviceFragmentName=mssqlDbDeviceFragmentName, mssqlSrvDeviceLogicalName=mssqlSrvDeviceLogicalName, mssqlSrvConfigParamMax=mssqlSrvConfigParamMax, mssqlSrvInfoBatchWrites=mssqlSrvInfoBatchWrites, mssqlSrvDeviceDescription=mssqlSrvDeviceDescription, mssqlServerObjects=mssqlServerObjects, mssqlDbOptionSetName=mssqlDbOptionSetName, mssqlSrvState=mssqlSrvState, mssqlSrvInfoUserConnections=mssqlSrvInfoUserConnections, mssqlDbName=mssqlDbName, apps=apps, mssqlSrvInfoTotalLocks=mssqlSrvInfoTotalLocks, mssqlDbInfoLastTrLogDump=mssqlDbInfoLastTrLogDump, mssqlSrvInfoSinglePageWrites=mssqlSrvInfoSinglePageWrites, mssqlDbInfoLogSpaceUsed=mssqlDbInfoLogSpaceUsed, mssqlSrvInfoNetworkWrites=mssqlSrvInfoNetworkWrites, mssqlSrvInfoEntry=mssqlSrvInfoEntry, mssqlSrvConfigParamName=mssqlSrvConfigParamName, mssqlSrvInfoOutstandingReads=mssqlSrvInfoOutstandingReads, mssqlSrvDeviceTable=mssqlSrvDeviceTable, mssqlDbOptionTable=mssqlDbOptionTable, mssqlDbDeviceFragmentUsage=mssqlDbDeviceFragmentUsage, mssqlSrvInfoNetworkReads=mssqlSrvInfoNetworkReads, mssqlSrvVendorName=mssqlSrvVendorName, mssqlDbInfoDataSpace=mssqlDbInfoDataSpace, mssqlServer=mssqlServer, mssqlDbState=mssqlDbState, mssqlDbInfoDbName=mssqlDbInfoDbName, software=software, mssqlSrvEntry=mssqlSrvEntry, mssqlSrvVersion=mssqlSrvVersion, mssqlDbEntry=mssqlDbEntry, mssqlDbOptionDbId=mssqlDbOptionDbId, mssqlSrvInfoRAPhysicalReads=mssqlSrvInfoRAPhysicalReads, mssqlDbInfoCreationDateTime=mssqlDbInfoCreationDateTime, mssqlSrvDeviceEntry=mssqlSrvDeviceEntry, mssqlDbInfoUnallocatedSpace=mssqlDbInfoUnallocatedSpace, mssqlDbDeviceTable=mssqlDbDeviceTable, mssqlSrvInfoTotalBlockingLocks=mssqlSrvInfoTotalBlockingLocks, pysmiFakeCol1000=pysmiFakeCol1000, mssqlSrvInfoServerName=mssqlSrvInfoServerName, mssqlSrvConfigParamRunValue=mssqlSrvConfigParamRunValue, mssqlDbOptionDbName=mssqlDbOptionDbName, mssqlSrvProductName=mssqlSrvProductName, mssqlDbOptionEntry=mssqlDbOptionEntry, mssqlDbInfoDbId=mssqlDbInfoDbId)
