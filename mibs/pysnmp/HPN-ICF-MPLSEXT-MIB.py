#
# PySNMP MIB module HPN-ICF-MPLSEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MPLSEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, MibIdentifier, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Gauge32, Counter32, ObjectIdentity, iso, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "MibIdentifier", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Gauge32", "Counter32", "ObjectIdentity", "iso", "Unsigned32", "ModuleIdentity")
RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
hpnicfMplsExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142))
hpnicfMplsExt.setRevisions(('2013-06-13 18:00',))
if mibBuilder.loadTexts: hpnicfMplsExt.setLastUpdated('201306131800Z')
if mibBuilder.loadTexts: hpnicfMplsExt.setOrganization('')
hpnicfMplsExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1))
hpnicfMplsExtScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 1))
hpnicfMplsExtLsrID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsExtLsrID.setStatus('current')
hpnicfMplsExtLdpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsExtLdpStatus.setStatus('current')
hpnicfMplsExtTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2), )
if mibBuilder.loadTexts: hpnicfMplsExtTable.setStatus('current')
hpnicfMplsExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-MPLSEXT-MIB", "hpnicfMplsExtIndex"))
if mibBuilder.loadTexts: hpnicfMplsExtEntry.setStatus('current')
hpnicfMplsExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsExtIndex.setStatus('current')
hpnicfMplsExtCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtCapability.setStatus('current')
hpnicfMplsExtMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(46, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtMtu.setStatus('current')
hpnicfMplsExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtRowStatus.setStatus('current')
hpnicfMplsExtLdpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3), )
if mibBuilder.loadTexts: hpnicfMplsExtLdpTable.setStatus('current')
hpnicfMplsExtLdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-MPLSEXT-MIB", "hpnicfMplsExtLdpIndex"))
if mibBuilder.loadTexts: hpnicfMplsExtLdpEntry.setStatus('current')
hpnicfMplsExtLdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsExtLdpIndex.setStatus('current')
hpnicfMplsExtLdpCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtLdpCapability.setStatus('current')
hpnicfMplsExtLdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 142, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsExtLdpRowStatus.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MPLSEXT-MIB", hpnicfMplsExtObjects=hpnicfMplsExtObjects, hpnicfMplsExtLdpTable=hpnicfMplsExtLdpTable, hpnicfMplsExtLdpIndex=hpnicfMplsExtLdpIndex, hpnicfMplsExtCapability=hpnicfMplsExtCapability, hpnicfMplsExtLdpEntry=hpnicfMplsExtLdpEntry, PYSNMP_MODULE_ID=hpnicfMplsExt, hpnicfMplsExtLdpStatus=hpnicfMplsExtLdpStatus, hpnicfMplsExtRowStatus=hpnicfMplsExtRowStatus, hpnicfMplsExtLdpCapability=hpnicfMplsExtLdpCapability, hpnicfMplsExtTable=hpnicfMplsExtTable, hpnicfMplsExtEntry=hpnicfMplsExtEntry, hpnicfMplsExtMtu=hpnicfMplsExtMtu, hpnicfMplsExtLsrID=hpnicfMplsExtLsrID, hpnicfMplsExtScalarGroup=hpnicfMplsExtScalarGroup, hpnicfMplsExtLdpRowStatus=hpnicfMplsExtLdpRowStatus, hpnicfMplsExt=hpnicfMplsExt, hpnicfMplsExtIndex=hpnicfMplsExtIndex)
