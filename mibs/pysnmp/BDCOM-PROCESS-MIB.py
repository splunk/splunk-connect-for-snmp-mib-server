#
# PySNMP MIB module BDCOM-PROCESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BDCOM-PROCESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
bdMgmt, = mibBuilder.importSymbols("BDCOM-SMI", "bdMgmt")
EntPhysicalIndexOrZero, = mibBuilder.importSymbols("BDCOM-TC", "EntPhysicalIndexOrZero")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, Bits, NotificationType, IpAddress, MibIdentifier, Counter64, iso, ObjectIdentity, ModuleIdentity, Unsigned32, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "Bits", "NotificationType", "IpAddress", "MibIdentifier", "Counter64", "iso", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Counter32", "TimeTicks")
DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp")
bdcomProcessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3320, 9, 109))
bdcomProcessMIB.setRevisions(('2003-10-16 00:00',))
if mibBuilder.loadTexts: bdcomProcessMIB.setLastUpdated('200311060000Z')
if mibBuilder.loadTexts: bdcomProcessMIB.setOrganization('BDCOM, Inc.')
bdcomProcessMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1))
bdpmCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1))
bdpmProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 2))
bdpmCPUTotalTable = MibTable((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1, 1), )
if mibBuilder.loadTexts: bdpmCPUTotalTable.setStatus('current')
bdpmCPUTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1, 1, 1), ).setIndexNames((0, "BDCOM-PROCESS-MIB", "bdpmCPUTotalIndex"))
if mibBuilder.loadTexts: bdpmCPUTotalEntry.setStatus('current')
bdpmCPUTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: bdpmCPUTotalIndex.setStatus('current')
bdpmCPUTotalPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1, 1, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdpmCPUTotalPhysicalIndex.setStatus('current')
bdpmCPUTotal5sec = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1, 1, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: bdpmCPUTotal5sec.setStatus('current')
bdpmCPUTotal1min = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1, 1, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: bdpmCPUTotal1min.setStatus('current')
bdpmCPUTotal5min = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 1, 1, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: bdpmCPUTotal5min.setStatus('current')
bdpmProcessTable = MibTable((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 2, 1), )
if mibBuilder.loadTexts: bdpmProcessTable.setStatus('current')
bdpmProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 2, 1, 1), ).setIndexNames((0, "BDCOM-PROCESS-MIB", "bdpmCPUTotalIndex"), (0, "BDCOM-PROCESS-MIB", "bdpmProcessPID"))
if mibBuilder.loadTexts: bdpmProcessEntry.setStatus('current')
bdpmProcessPID = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdpmProcessPID.setStatus('current')
bdpmProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdpmProcessName.setStatus('current')
bdpmProcessPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 55, 60, 128, 180, 255))).clone(namedValues=NamedValues(("critical", 0), ("veryhigh", 55), ("high", 60), ("normal", 128), ("low", 180), ("verylow", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bdpmProcessPriority.setStatus('current')
bdpmProcessTimeCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 9, 109, 1, 2, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdpmProcessTimeCreated.setStatus('current')
bdcomProcessMIBNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 3320, 9, 109, 2))
bdcomProcessMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 3320, 9, 109, 2, 0))
mibBuilder.exportSymbols("BDCOM-PROCESS-MIB", bdpmProcessEntry=bdpmProcessEntry, bdpmCPUTotalIndex=bdpmCPUTotalIndex, bdpmCPUTotalPhysicalIndex=bdpmCPUTotalPhysicalIndex, bdpmCPUTotal5min=bdpmCPUTotal5min, bdpmProcessPriority=bdpmProcessPriority, bdcomProcessMIBObjects=bdcomProcessMIBObjects, bdpmProcessPID=bdpmProcessPID, bdcomProcessMIB=bdcomProcessMIB, bdpmCPUTotal5sec=bdpmCPUTotal5sec, bdpmCPUTotal1min=bdpmCPUTotal1min, bdpmCPUTotalTable=bdpmCPUTotalTable, bdpmCPU=bdpmCPU, bdcomProcessMIBNotifs=bdcomProcessMIBNotifs, bdpmCPUTotalEntry=bdpmCPUTotalEntry, PYSNMP_MODULE_ID=bdcomProcessMIB, bdpmProcess=bdpmProcess, bdpmProcessTable=bdpmProcessTable, bdpmProcessTimeCreated=bdpmProcessTimeCreated, bdpmProcessName=bdpmProcessName, bdcomProcessMIBNotifPrefix=bdcomProcessMIBNotifPrefix)
