#
# PySNMP MIB module DSG-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DSG-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
Dsid, = mibBuilder.importSymbols("DOCS-IF3-MIB", "Dsid")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddressType, InetAddressPrefixLength, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressPrefixLength", "InetPortNumber", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, IpAddress, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, ModuleIdentity, Counter64, Gauge32, iso, Counter32, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "ModuleIdentity", "Counter64", "Gauge32", "iso", "Counter32", "ObjectIdentity", "NotificationType")
TruthValue, TextualConvention, DisplayString, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "RowStatus", "MacAddress")
dsgIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3))
dsgIfMIB.setRevisions(('2017-06-15 00:00', '2011-11-17 00:00', '2009-05-29 00:00', '2008-06-26 00:00', '2006-07-28 00:00',))
if mibBuilder.loadTexts: dsgIfMIB.setLastUpdated('201706150000Z')
if mibBuilder.loadTexts: dsgIfMIB.setOrganization('Cable Television Laboratories, Inc')
dsgIfMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 0))
dsgIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1))
dsgIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 2))
dsgIfClassifier = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1))
dsgIfTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2))
dsgIfTunnelGrpToChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3))
dsgIfDownstreamChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4))
dsgIfDCD = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5))
dsgIfTunnelDsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 6))
dsgIfClassifierTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1), )
if mibBuilder.loadTexts: dsgIfClassifierTable.setStatus('current')
dsgIfClassifierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTunnelIndex"), (0, "DSG-IF-MIB", "dsgIfClassId"))
if mibBuilder.loadTexts: dsgIfClassifierEntry.setStatus('current')
dsgIfClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dsgIfClassId.setStatus('current')
dsgIfClassPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassPriority.setStatus('current')
dsgIfClassSrcIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassSrcIpAddrType.setStatus('current')
dsgIfClassSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 4), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassSrcIpAddr.setStatus('current')
dsgIfClassSrcIpPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 5), InetAddressPrefixLength().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassSrcIpPrefixLength.setStatus('current')
dsgIfClassDestIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 6), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestIpAddressType.setStatus('current')
dsgIfClassDestIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 7), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestIpAddress.setStatus('current')
dsgIfClassDestPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 8), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestPortStart.setStatus('current')
dsgIfClassDestPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 9), InetPortNumber().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestPortEnd.setStatus('current')
dsgIfClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassRowStatus.setStatus('current')
dsgIfClassIncludeInDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassIncludeInDCD.setStatus('current')
dsgIfTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1), )
if mibBuilder.loadTexts: dsgIfTunnelTable.setStatus('current')
dsgIfTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTunnelIndex"))
if mibBuilder.loadTexts: dsgIfTunnelEntry.setStatus('current')
dsgIfTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfTunnelIndex.setStatus('current')
dsgIfTunnelGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGroupIndex.setStatus('current')
dsgIfTunnelClientIdListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelClientIdListIndex.setStatus('current')
dsgIfTunnelMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 4), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelMacAddress.setStatus('current')
dsgIfTunnelServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 5), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelServiceClassName.setStatus('current')
dsgIfTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelRowStatus.setStatus('current')
dsgIfTunnelGrpToChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: dsgIfTunnelGrpToChannelTable.setStatus('current')
dsgIfTunnelGrpToChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTunnelGrpIndex"), (0, "DSG-IF-MIB", "dsgIfTunnelGrpChannelIndex"))
if mibBuilder.loadTexts: dsgIfTunnelGrpToChannelEntry.setStatus('current')
dsgIfTunnelGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfTunnelGrpIndex.setStatus('current')
dsgIfTunnelGrpChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfTunnelGrpChannelIndex.setStatus('current')
dsgIfTunnelGrpDsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpDsIfIndex.setStatus('current')
dsgIfTunnelGrpRulePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpRulePriority.setStatus('current')
dsgIfTunnelGrpUcidList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpUcidList.setStatus('deprecated')
dsgIfTunnelGrpVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpVendorParamId.setStatus('current')
dsgIfTunnelGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpRowStatus.setStatus('current')
dsgIfDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1), )
if mibBuilder.loadTexts: dsgIfDownstreamTable.setStatus('current')
dsgIfDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dsgIfDownstreamEntry.setStatus('current')
dsgIfDownTimerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownTimerIndex.setStatus('current')
dsgIfDownVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownVendorParamId.setStatus('current')
dsgIfDownChannelListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownChannelListIndex.setStatus('current')
dsgIfDownEnableDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownEnableDCD.setStatus('current')
dsgIfClientIdTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1), )
if mibBuilder.loadTexts: dsgIfClientIdTable.setStatus('current')
dsgIfClientIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfClientIdListIndex"), (0, "DSG-IF-MIB", "dsgIfClientIdIndex"))
if mibBuilder.loadTexts: dsgIfClientIdEntry.setStatus('current')
dsgIfClientIdListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfClientIdListIndex.setStatus('current')
dsgIfClientIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfClientIdIndex.setStatus('current')
dsgIfClientIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("broadcast", 1), ("macAddress", 2), ("caSystemId", 3), ("applicationId", 4))).clone('broadcast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientIdType.setStatus('current')
dsgIfClientIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientIdValue.setStatus('current')
dsgIfClientVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientVendorParamId.setStatus('current')
dsgIfClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientRowStatus.setStatus('current')
dsgIfVendorParamTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2), )
if mibBuilder.loadTexts: dsgIfVendorParamTable.setStatus('current')
dsgIfVendorParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfVendorParamId"), (0, "DSG-IF-MIB", "dsgIfVendorIndex"))
if mibBuilder.loadTexts: dsgIfVendorParamEntry.setStatus('current')
dsgIfVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfVendorParamId.setStatus('current')
dsgIfVendorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfVendorIndex.setStatus('current')
dsgIfVendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3).clone(hexValue="000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfVendorOUI.setStatus('current')
dsgIfVendorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfVendorValue.setStatus('current')
dsgIfVendorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfVendorRowStatus.setStatus('current')
dsgIfChannelListTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3), )
if mibBuilder.loadTexts: dsgIfChannelListTable.setStatus('current')
dsgIfChannelListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfChannelListIndex"), (0, "DSG-IF-MIB", "dsgIfChannelIndex"))
if mibBuilder.loadTexts: dsgIfChannelListEntry.setStatus('current')
dsgIfChannelListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfChannelListIndex.setStatus('current')
dsgIfChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfChannelIndex.setStatus('current')
dsgIfChannelDsFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfChannelDsFreq.setStatus('current')
dsgIfChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfChannelRowStatus.setStatus('current')
dsgIfTimerTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4), )
if mibBuilder.loadTexts: dsgIfTimerTable.setStatus('current')
dsgIfTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTimerIndex"))
if mibBuilder.loadTexts: dsgIfTimerEntry.setStatus('current')
dsgIfTimerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfTimerIndex.setStatus('current')
dsgIfTimerTdsg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg1.setStatus('current')
dsgIfTimerTdsg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(600)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg2.setStatus('current')
dsgIfTimerTdsg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(300)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg3.setStatus('current')
dsgIfTimerTdsg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1800)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg4.setStatus('current')
dsgIfTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerRowStatus.setStatus('current')
dsgIfTunnelDsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 6, 1), )
if mibBuilder.loadTexts: dsgIfTunnelDsStatsTable.setStatus('current')
dsgIfTunnelDsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 6, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTunnelIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dsgIfTunnelDsStatsEntry.setStatus('current')
dsgIfTunnelDsStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 6, 1, 1, 1), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: dsgIfTunnelDsStatsPkts.setStatus('current')
dsgIfTunnelDsStatsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 6, 1, 1, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: dsgIfTunnelDsStatsOctets.setStatus('current')
dsgIfTunnelDsStatsDsid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 6, 1, 1, 3), Dsid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsgIfTunnelDsStatsDsid.setStatus('current')
dsgIfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4))
dsgIfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1))
dsgIfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 2))
dsgIfBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 2, 1)).setObjects(("DSG-IF-MIB", "dsgIfClassifierGroup"), ("DSG-IF-MIB", "dsgIfBaseGroup"), ("DSG-IF-MIB", "dsgIfDCDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfBasicCompliance = dsgIfBasicCompliance.setStatus('current')
dsgIfClassifierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1, 1)).setObjects(("DSG-IF-MIB", "dsgIfClassPriority"), ("DSG-IF-MIB", "dsgIfClassSrcIpAddrType"), ("DSG-IF-MIB", "dsgIfClassSrcIpAddr"), ("DSG-IF-MIB", "dsgIfClassSrcIpPrefixLength"), ("DSG-IF-MIB", "dsgIfClassDestIpAddressType"), ("DSG-IF-MIB", "dsgIfClassDestIpAddress"), ("DSG-IF-MIB", "dsgIfClassDestPortStart"), ("DSG-IF-MIB", "dsgIfClassDestPortEnd"), ("DSG-IF-MIB", "dsgIfClassRowStatus"), ("DSG-IF-MIB", "dsgIfClassIncludeInDCD"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfClassifierGroup = dsgIfClassifierGroup.setStatus('current')
dsgIfBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1, 2)).setObjects(("DSG-IF-MIB", "dsgIfTunnelGroupIndex"), ("DSG-IF-MIB", "dsgIfTunnelClientIdListIndex"), ("DSG-IF-MIB", "dsgIfTunnelMacAddress"), ("DSG-IF-MIB", "dsgIfTunnelServiceClassName"), ("DSG-IF-MIB", "dsgIfTunnelRowStatus"), ("DSG-IF-MIB", "dsgIfTunnelGrpDsIfIndex"), ("DSG-IF-MIB", "dsgIfTunnelGrpRulePriority"), ("DSG-IF-MIB", "dsgIfTunnelGrpVendorParamId"), ("DSG-IF-MIB", "dsgIfTunnelGrpRowStatus"), ("DSG-IF-MIB", "dsgIfDownTimerIndex"), ("DSG-IF-MIB", "dsgIfDownVendorParamId"), ("DSG-IF-MIB", "dsgIfDownChannelListIndex"), ("DSG-IF-MIB", "dsgIfDownEnableDCD"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfBaseGroup = dsgIfBaseGroup.setStatus('current')
dsgIfDCDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1, 3)).setObjects(("DSG-IF-MIB", "dsgIfClientIdType"), ("DSG-IF-MIB", "dsgIfClientIdValue"), ("DSG-IF-MIB", "dsgIfClientVendorParamId"), ("DSG-IF-MIB", "dsgIfClientRowStatus"), ("DSG-IF-MIB", "dsgIfVendorOUI"), ("DSG-IF-MIB", "dsgIfVendorValue"), ("DSG-IF-MIB", "dsgIfVendorRowStatus"), ("DSG-IF-MIB", "dsgIfChannelDsFreq"), ("DSG-IF-MIB", "dsgIfChannelRowStatus"), ("DSG-IF-MIB", "dsgIfTimerTdsg1"), ("DSG-IF-MIB", "dsgIfTimerTdsg2"), ("DSG-IF-MIB", "dsgIfTimerTdsg3"), ("DSG-IF-MIB", "dsgIfTimerTdsg4"), ("DSG-IF-MIB", "dsgIfTimerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfDCDGroup = dsgIfDCDGroup.setStatus('current')
dsgIfDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1, 4)).setObjects(("DSG-IF-MIB", "dsgIfTunnelGrpUcidList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfDeprecatedGroup = dsgIfDeprecatedGroup.setStatus('deprecated')
mibBuilder.exportSymbols("DSG-IF-MIB", dsgIfClassifierGroup=dsgIfClassifierGroup, dsgIfTimerTdsg4=dsgIfTimerTdsg4, dsgIfClassIncludeInDCD=dsgIfClassIncludeInDCD, dsgIfTimerEntry=dsgIfTimerEntry, dsgIfClassId=dsgIfClassId, dsgIfTunnelEntry=dsgIfTunnelEntry, dsgIfTunnelIndex=dsgIfTunnelIndex, dsgIfDCDGroup=dsgIfDCDGroup, dsgIfClassRowStatus=dsgIfClassRowStatus, dsgIfClientRowStatus=dsgIfClientRowStatus, dsgIfClientIdType=dsgIfClientIdType, dsgIfTunnelMacAddress=dsgIfTunnelMacAddress, dsgIfDCD=dsgIfDCD, dsgIfTunnelGrpToChannel=dsgIfTunnelGrpToChannel, dsgIfVendorParamId=dsgIfVendorParamId, dsgIfBaseGroup=dsgIfBaseGroup, dsgIfTunnel=dsgIfTunnel, dsgIfTimerTdsg2=dsgIfTimerTdsg2, dsgIfClientIdListIndex=dsgIfClientIdListIndex, dsgIfDownTimerIndex=dsgIfDownTimerIndex, dsgIfTunnelGrpVendorParamId=dsgIfTunnelGrpVendorParamId, dsgIfDownstreamTable=dsgIfDownstreamTable, dsgIfTunnelGrpUcidList=dsgIfTunnelGrpUcidList, dsgIfVendorParamEntry=dsgIfVendorParamEntry, dsgIfClientVendorParamId=dsgIfClientVendorParamId, dsgIfTunnelServiceClassName=dsgIfTunnelServiceClassName, dsgIfMIBObjects=dsgIfMIBObjects, dsgIfTimerIndex=dsgIfTimerIndex, dsgIfTimerTdsg1=dsgIfTimerTdsg1, dsgIfTunnelGroupIndex=dsgIfTunnelGroupIndex, dsgIfMIBConformance=dsgIfMIBConformance, dsgIfClassifierTable=dsgIfClassifierTable, dsgIfClassDestIpAddress=dsgIfClassDestIpAddress, dsgIfCompliances=dsgIfCompliances, dsgIfClientIdIndex=dsgIfClientIdIndex, dsgIfTunnelGrpToChannelEntry=dsgIfTunnelGrpToChannelEntry, dsgIfVendorIndex=dsgIfVendorIndex, dsgIfTunnelGrpRulePriority=dsgIfTunnelGrpRulePriority, dsgIfClientIdTable=dsgIfClientIdTable, dsgIfClassDestIpAddressType=dsgIfClassDestIpAddressType, PYSNMP_MODULE_ID=dsgIfMIB, dsgIfClassifier=dsgIfClassifier, dsgIfClientIdEntry=dsgIfClientIdEntry, dsgIfDownEnableDCD=dsgIfDownEnableDCD, dsgIfTimerTable=dsgIfTimerTable, dsgIfTunnelClientIdListIndex=dsgIfTunnelClientIdListIndex, dsgIfTunnelDsStatsEntry=dsgIfTunnelDsStatsEntry, dsgIfClassSrcIpAddr=dsgIfClassSrcIpAddr, dsgIfDeprecatedGroup=dsgIfDeprecatedGroup, dsgIfDownVendorParamId=dsgIfDownVendorParamId, dsgIfGroups=dsgIfGroups, dsgIfVendorValue=dsgIfVendorValue, dsgIfTunnelGrpIndex=dsgIfTunnelGrpIndex, dsgIfDownstreamEntry=dsgIfDownstreamEntry, dsgIfConformance=dsgIfConformance, dsgIfBasicCompliance=dsgIfBasicCompliance, dsgIfMIBNotifications=dsgIfMIBNotifications, dsgIfChannelListEntry=dsgIfChannelListEntry, dsgIfClassSrcIpAddrType=dsgIfClassSrcIpAddrType, dsgIfVendorOUI=dsgIfVendorOUI, dsgIfTimerTdsg3=dsgIfTimerTdsg3, dsgIfChannelRowStatus=dsgIfChannelRowStatus, dsgIfClassifierEntry=dsgIfClassifierEntry, dsgIfChannelIndex=dsgIfChannelIndex, dsgIfTimerRowStatus=dsgIfTimerRowStatus, dsgIfTunnelGrpRowStatus=dsgIfTunnelGrpRowStatus, dsgIfTunnelDsStats=dsgIfTunnelDsStats, dsgIfClientIdValue=dsgIfClientIdValue, dsgIfDownstreamChannel=dsgIfDownstreamChannel, dsgIfMIB=dsgIfMIB, dsgIfClassDestPortStart=dsgIfClassDestPortStart, dsgIfTunnelGrpChannelIndex=dsgIfTunnelGrpChannelIndex, dsgIfTunnelGrpDsIfIndex=dsgIfTunnelGrpDsIfIndex, dsgIfChannelListTable=dsgIfChannelListTable, dsgIfChannelDsFreq=dsgIfChannelDsFreq, dsgIfVendorRowStatus=dsgIfVendorRowStatus, dsgIfTunnelDsStatsTable=dsgIfTunnelDsStatsTable, dsgIfClassPriority=dsgIfClassPriority, dsgIfTunnelGrpToChannelTable=dsgIfTunnelGrpToChannelTable, dsgIfChannelListIndex=dsgIfChannelListIndex, dsgIfTunnelRowStatus=dsgIfTunnelRowStatus, dsgIfClassSrcIpPrefixLength=dsgIfClassSrcIpPrefixLength, dsgIfTunnelTable=dsgIfTunnelTable, dsgIfDownChannelListIndex=dsgIfDownChannelListIndex, dsgIfClassDestPortEnd=dsgIfClassDestPortEnd, dsgIfVendorParamTable=dsgIfVendorParamTable, dsgIfTunnelDsStatsOctets=dsgIfTunnelDsStatsOctets, dsgIfTunnelDsStatsDsid=dsgIfTunnelDsStatsDsid, dsgIfTunnelDsStatsPkts=dsgIfTunnelDsStatsPkts)
