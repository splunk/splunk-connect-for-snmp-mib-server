#
# PySNMP MIB module DNOS-BGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-BGP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:36:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, ModuleIdentity, Counter32, Counter64, Integer32, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, iso, Gauge32, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "Counter32", "Counter64", "Integer32", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "iso", "Gauge32", "Bits", "TimeTicks")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
fastPathBGP = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5))
fastPathBGP.setRevisions(('2011-01-26 00:00', '2007-05-23 00:00', '2003-11-21 00:00', '2003-03-28 20:30',))
if mibBuilder.loadTexts: fastPathBGP.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastPathBGP.setOrganization('Dell, Inc.')
agentBGPQueueGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1))
agentBGPQueueTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1), )
if mibBuilder.loadTexts: agentBGPQueueTable.setStatus('current')
agentBGPQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1, 1), ).setIndexNames((0, "DNOS-BGP-MIB", "agentBGPQueueIndex"))
if mibBuilder.loadTexts: agentBGPQueueEntry.setStatus('current')
agentBGPQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentBGPQueueIndex.setStatus('current')
agentBGPQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPQueueName.setStatus('current')
agentBGPQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPQueueLength.setStatus('current')
agentBGPQueueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPQueueHigh.setStatus('current')
agentBGPQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPQueueDrops.setStatus('current')
agentBGPQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPQueueLimit.setStatus('current')
agentBGPMessageStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2))
agentBGPCountersCleared = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPCountersCleared.setStatus('current')
agentBGPInOpens = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPInOpens.setStatus('current')
agentBGPOutOpens = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPOutOpens.setStatus('current')
agentBGPInUpdates = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPInUpdates.setStatus('current')
agentBGPOutUpdates = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPOutUpdates.setStatus('current')
agentBGPInNotifications = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPInNotifications.setStatus('current')
agentBGPOutNotifications = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPOutNotifications.setStatus('current')
agentBGPInKeepalives = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPInKeepalives.setStatus('current')
agentBGPOutKeepalives = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPOutKeepalives.setStatus('current')
agentBGPInRouteRefreshes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPInRouteRefreshes.setStatus('current')
agentBGPOutRouteRefreshes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPOutRouteRefreshes.setStatus('current')
agentBGPInUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPInUpdatesMax.setStatus('current')
agentBGPOutUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 2, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPOutUpdatesMax.setStatus('current')
agentBGPDecProcTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3), )
if mibBuilder.loadTexts: agentBGPDecProcTable.setStatus('current')
agentBGPDecProcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1), ).setIndexNames((0, "DNOS-BGP-MIB", "agentBGPDecProcIndex"))
if mibBuilder.loadTexts: agentBGPDecProcEntry.setStatus('current')
agentBGPDecProcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 1), Counter32())
if mibBuilder.loadTexts: agentBGPDecProcIndex.setStatus('current')
agentBGPDecProcDeltaT = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcDeltaT.setStatus('current')
agentBGPDecProcPhase = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcPhase.setStatus('current')
agentBGPDecProcUpdateGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcUpdateGroup.setStatus('current')
agentBGPDecProcGenId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcGenId.setStatus('current')
agentBGPDecProcReason = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcReason.setStatus('current')
agentBGPDecProcPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcPeer.setStatus('current')
agentBGPDecProcDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcDuration.setStatus('current')
agentBGPDecProcAdds = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcAdds.setStatus('current')
agentBGPDecProcMods = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcMods.setStatus('current')
agentBGPDecProcDels = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcDels.setStatus('current')
agentBGPDecProcIPv6Table = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5), )
if mibBuilder.loadTexts: agentBGPDecProcIPv6Table.setStatus('current')
agentBGPDecProcIPv6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1), ).setIndexNames((0, "DNOS-BGP-MIB", "agentBGPDecProcIPv6Index"))
if mibBuilder.loadTexts: agentBGPDecProcIPv6Entry.setStatus('current')
agentBGPDecProcIPv6Index = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 1), Counter32())
if mibBuilder.loadTexts: agentBGPDecProcIPv6Index.setStatus('current')
agentBGPDecProcDeltaTIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcDeltaTIPv6.setStatus('current')
agentBGPDecProcPhaseIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcPhaseIPv6.setStatus('current')
agentBGPDecProcUpdateGroupIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcUpdateGroupIPv6.setStatus('current')
agentBGPDecProcGenIdIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcGenIdIPv6.setStatus('current')
agentBGPDecProcReasonIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcReasonIPv6.setStatus('current')
agentBGPDecProcPeerIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcPeerIPv6.setStatus('current')
agentBGPDecProcDurationIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcDurationIPv6.setStatus('current')
agentBGPDecProcAddsIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcAddsIPv6.setStatus('current')
agentBGPDecProcModsIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcModsIPv6.setStatus('current')
agentBGPDecProcDelsIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPDecProcDelsIPv6.setStatus('current')
agentBGPPeerTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4), )
if mibBuilder.loadTexts: agentBGPPeerTable.setStatus('current')
agentBGPPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1), ).setIndexNames((0, "DNOS-BGP-MIB", "agentBGPPeerRemoteAddr"))
if mibBuilder.loadTexts: agentBGPPeerEntry.setStatus('current')
agentBGPPeerRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerRemoteAddr.setStatus('current')
agentBGPPeerInOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInOpens.setStatus('current')
agentBGPPeerOutOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutOpens.setStatus('current')
agentBGPPeerInUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInUpdates.setStatus('current')
agentBGPPeerOutUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutUpdates.setStatus('current')
agentBGPPeerInNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInNotifications.setStatus('current')
agentBGPPeerOutNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutNotifications.setStatus('current')
agentBGPPeerInKeepalives = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInKeepalives.setStatus('current')
agentBGPPeerOutKeepalives = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutKeepalives.setStatus('current')
agentBGPPeerInRouteRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInRouteRefreshes.setStatus('current')
agentBGPPeerOutRouteRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutRouteRefreshes.setStatus('current')
agentBGPPeerInTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInTotalMessages.setStatus('current')
agentBGPPeerOutTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutTotalMessages.setStatus('current')
agentBGPPeerUpdateQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerUpdateQueueLen.setStatus('current')
agentBGPPeerUpdateQueueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerUpdateQueueHigh.setStatus('current')
agentBGPPeerUpdateQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerUpdateQueueLimit.setStatus('current')
agentBGPPeerUpdateQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerUpdateQueueDrops.setStatus('current')
agentBGPPeerInPfxAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxAdv.setStatus('current')
agentBGPPeerOutPfxAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutPfxAdv.setStatus('current')
agentBGPPeerInPfxWithdrawn = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxWithdrawn.setStatus('current')
agentBGPPeerOutPfxWithdrawn = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutPfxWithdrawn.setStatus('current')
agentBGPPeerInPfxCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxCurrent.setStatus('current')
agentBGPPeerOutPfxCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutPfxCurrent.setStatus('current')
agentBGPPeerInPfxAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxAccepted.setStatus('current')
agentBGPPeerInPfxRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxRejected.setStatus('current')
agentBGPPeerInMaxNlriPerUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInMaxNlriPerUpdate.setStatus('current')
agentBGPPeerOutMaxNlriPerUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutMaxNlriPerUpdate.setStatus('current')
agentBGPPeerInMinNlriPerUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInMinNlriPerUpdate.setStatus('current')
agentBGPPeerOutMinNlriPerUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutMinNlriPerUpdate.setStatus('current')
agentBGPPeerInPfxAdvIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxAdvIPv6.setStatus('current')
agentBGPPeerOutPfxAdvIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutPfxAdvIPv6.setStatus('current')
agentBGPPeerInPfxWithdrawnIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxWithdrawnIPv6.setStatus('current')
agentBGPPeerOutPfxWithdrawnIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutPfxWithdrawnIPv6.setStatus('current')
agentBGPPeerInPfxCurrentIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxCurrentIPv6.setStatus('current')
agentBGPPeerOutPfxCurrentIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutPfxCurrentIPv6.setStatus('current')
agentBGPPeerInPfxAcceptedIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxAcceptedIPv6.setStatus('current')
agentBGPPeerInPfxRejectedIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInPfxRejectedIPv6.setStatus('current')
agentBGPPeerInMaxNlriPerUpdateIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInMaxNlriPerUpdateIPv6.setStatus('current')
agentBGPPeerOutMaxNlriPerUpdateIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutMaxNlriPerUpdateIPv6.setStatus('current')
agentBGPPeerInMinNlriPerUpdateIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerInMinNlriPerUpdateIPv6.setStatus('current')
agentBGPPeerOutMinNlriPerUpdateIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 4, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBGPPeerOutMinNlriPerUpdateIPv6.setStatus('current')
agentBGPSnmpTrapFlagsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 6))
agentBGPSnmpAllTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 5, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBGPSnmpAllTrapFlag.setStatus('current')
mibBuilder.exportSymbols("DNOS-BGP-MIB", agentBGPDecProcDeltaTIPv6=agentBGPDecProcDeltaTIPv6, agentBGPPeerUpdateQueueHigh=agentBGPPeerUpdateQueueHigh, agentBGPDecProcDuration=agentBGPDecProcDuration, agentBGPPeerInPfxWithdrawn=agentBGPPeerInPfxWithdrawn, agentBGPDecProcEntry=agentBGPDecProcEntry, agentBGPPeerInKeepalives=agentBGPPeerInKeepalives, agentBGPCountersCleared=agentBGPCountersCleared, agentBGPPeerInMinNlriPerUpdate=agentBGPPeerInMinNlriPerUpdate, agentBGPDecProcPeer=agentBGPDecProcPeer, agentBGPDecProcModsIPv6=agentBGPDecProcModsIPv6, agentBGPDecProcReasonIPv6=agentBGPDecProcReasonIPv6, agentBGPSnmpTrapFlagsConfigGroup=agentBGPSnmpTrapFlagsConfigGroup, agentBGPQueueName=agentBGPQueueName, agentBGPDecProcAddsIPv6=agentBGPDecProcAddsIPv6, agentBGPPeerOutNotifications=agentBGPPeerOutNotifications, agentBGPInUpdates=agentBGPInUpdates, agentBGPPeerInTotalMessages=agentBGPPeerInTotalMessages, agentBGPPeerOutTotalMessages=agentBGPPeerOutTotalMessages, agentBGPPeerUpdateQueueLimit=agentBGPPeerUpdateQueueLimit, agentBGPInUpdatesMax=agentBGPInUpdatesMax, agentBGPPeerInMaxNlriPerUpdate=agentBGPPeerInMaxNlriPerUpdate, agentBGPPeerOutPfxCurrent=agentBGPPeerOutPfxCurrent, agentBGPQueueEntry=agentBGPQueueEntry, agentBGPOutKeepalives=agentBGPOutKeepalives, agentBGPDecProcGenId=agentBGPDecProcGenId, agentBGPPeerOutPfxWithdrawn=agentBGPPeerOutPfxWithdrawn, agentBGPPeerOutOpens=agentBGPPeerOutOpens, agentBGPDecProcDurationIPv6=agentBGPDecProcDurationIPv6, agentBGPPeerOutPfxWithdrawnIPv6=agentBGPPeerOutPfxWithdrawnIPv6, agentBGPPeerInPfxAcceptedIPv6=agentBGPPeerInPfxAcceptedIPv6, agentBGPDecProcTable=agentBGPDecProcTable, agentBGPDecProcUpdateGroup=agentBGPDecProcUpdateGroup, agentBGPSnmpAllTrapFlag=agentBGPSnmpAllTrapFlag, agentBGPPeerOutPfxAdv=agentBGPPeerOutPfxAdv, agentBGPQueueDrops=agentBGPQueueDrops, agentBGPPeerInNotifications=agentBGPPeerInNotifications, agentBGPPeerInPfxAdv=agentBGPPeerInPfxAdv, agentBGPPeerOutUpdates=agentBGPPeerOutUpdates, agentBGPPeerOutRouteRefreshes=agentBGPPeerOutRouteRefreshes, agentBGPDecProcDels=agentBGPDecProcDels, agentBGPOutUpdatesMax=agentBGPOutUpdatesMax, agentBGPPeerInUpdates=agentBGPPeerInUpdates, agentBGPQueueLength=agentBGPQueueLength, agentBGPPeerOutMaxNlriPerUpdateIPv6=agentBGPPeerOutMaxNlriPerUpdateIPv6, agentBGPPeerInMaxNlriPerUpdateIPv6=agentBGPPeerInMaxNlriPerUpdateIPv6, agentBGPInKeepalives=agentBGPInKeepalives, agentBGPDecProcIPv6Table=agentBGPDecProcIPv6Table, agentBGPOutRouteRefreshes=agentBGPOutRouteRefreshes, agentBGPDecProcIPv6Index=agentBGPDecProcIPv6Index, agentBGPPeerOutMinNlriPerUpdate=agentBGPPeerOutMinNlriPerUpdate, agentBGPPeerOutPfxCurrentIPv6=agentBGPPeerOutPfxCurrentIPv6, agentBGPDecProcIndex=agentBGPDecProcIndex, agentBGPPeerInPfxCurrentIPv6=agentBGPPeerInPfxCurrentIPv6, agentBGPDecProcAdds=agentBGPDecProcAdds, agentBGPPeerOutMaxNlriPerUpdate=agentBGPPeerOutMaxNlriPerUpdate, agentBGPInRouteRefreshes=agentBGPInRouteRefreshes, agentBGPQueueTable=agentBGPQueueTable, agentBGPPeerOutPfxAdvIPv6=agentBGPPeerOutPfxAdvIPv6, agentBGPPeerInOpens=agentBGPPeerInOpens, fastPathBGP=fastPathBGP, agentBGPPeerInPfxAdvIPv6=agentBGPPeerInPfxAdvIPv6, agentBGPPeerRemoteAddr=agentBGPPeerRemoteAddr, agentBGPPeerInMinNlriPerUpdateIPv6=agentBGPPeerInMinNlriPerUpdateIPv6, agentBGPOutOpens=agentBGPOutOpens, PYSNMP_MODULE_ID=fastPathBGP, agentBGPDecProcPeerIPv6=agentBGPDecProcPeerIPv6, agentBGPPeerInPfxWithdrawnIPv6=agentBGPPeerInPfxWithdrawnIPv6, agentBGPQueueLimit=agentBGPQueueLimit, agentBGPOutUpdates=agentBGPOutUpdates, agentBGPDecProcIPv6Entry=agentBGPDecProcIPv6Entry, agentBGPMessageStatsGroup=agentBGPMessageStatsGroup, agentBGPPeerInPfxCurrent=agentBGPPeerInPfxCurrent, agentBGPPeerInRouteRefreshes=agentBGPPeerInRouteRefreshes, agentBGPDecProcGenIdIPv6=agentBGPDecProcGenIdIPv6, agentBGPDecProcPhaseIPv6=agentBGPDecProcPhaseIPv6, agentBGPQueueHigh=agentBGPQueueHigh, agentBGPPeerInPfxRejectedIPv6=agentBGPPeerInPfxRejectedIPv6, agentBGPQueueGroup=agentBGPQueueGroup, agentBGPDecProcPhase=agentBGPDecProcPhase, agentBGPPeerOutKeepalives=agentBGPPeerOutKeepalives, agentBGPDecProcDeltaT=agentBGPDecProcDeltaT, agentBGPPeerInPfxRejected=agentBGPPeerInPfxRejected, agentBGPPeerUpdateQueueDrops=agentBGPPeerUpdateQueueDrops, agentBGPOutNotifications=agentBGPOutNotifications, agentBGPQueueIndex=agentBGPQueueIndex, agentBGPPeerUpdateQueueLen=agentBGPPeerUpdateQueueLen, agentBGPDecProcUpdateGroupIPv6=agentBGPDecProcUpdateGroupIPv6, agentBGPDecProcMods=agentBGPDecProcMods, agentBGPDecProcDelsIPv6=agentBGPDecProcDelsIPv6, agentBGPDecProcReason=agentBGPDecProcReason, agentBGPPeerEntry=agentBGPPeerEntry, agentBGPPeerInPfxAccepted=agentBGPPeerInPfxAccepted, agentBGPInOpens=agentBGPInOpens, agentBGPPeerTable=agentBGPPeerTable, agentBGPPeerOutMinNlriPerUpdateIPv6=agentBGPPeerOutMinNlriPerUpdateIPv6, agentBGPInNotifications=agentBGPInNotifications)
