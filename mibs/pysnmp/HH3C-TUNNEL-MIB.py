#
# PySNMP MIB module HH3C-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InterfaceIndex, ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
IPv6FlowLabelOrAny, = mibBuilder.importSymbols("IPV6-FLOW-LABEL-MIB", "IPv6FlowLabelOrAny")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibIdentifier, ModuleIdentity, ObjectIdentity, TimeTicks, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Unsigned32, Bits, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Unsigned32", "Bits", "IpAddress", "Gauge32")
DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
hh3cTunnel = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 53))
hh3cTunnel.setRevisions(('2013-02-28 00:00',))
if mibBuilder.loadTexts: hh3cTunnel.setLastUpdated('201302280000Z')
if mibBuilder.loadTexts: hh3cTunnel.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class Hh3cTunnelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54))
    namedValues = NamedValues(("other", 1), ("direct", 2), ("gre", 3), ("minimal", 4), ("l2tp", 5), ("pptp", 6), ("l2f", 7), ("udp", 8), ("atmp", 9), ("msdp", 10), ("sixToFour", 11), ("sixOverFour", 12), ("isatap", 13), ("teredo", 14), ("tunnelModeReserve", 35), ("tunnelModeIPv4Gre", 36), ("tunnelModeIPv6Gre", 37), ("tunnelModeIPv4IPv4", 38), ("tunnelModeIPv4IPv6Config", 39), ("tunnelModeIPv4IPv6Auto", 40), ("tunnelModeIPv4IPv66to4", 41), ("tunnelModeIPv4IPv6Isatap", 42), ("tunnelModeIPv6IPv4", 43), ("tunnelModeIPv6IPv6", 44), ("tunnelModeIPv4UdpDVPN", 45), ("tunnelModeIPv4GreDVPN", 46), ("tunnelModeIPv6UdpDVPN", 47), ("tunnelModeIPv6GreDVPN", 48), ("tunnelModeCrLsp", 49), ("tunnelModeMax", 50), ("tunnelModeIPv4UdpVxlan", 51), ("tunnelModeIPv6UdpVxlan", 52), ("tunnelModeIPv4NVGRE", 53), ("tunnelModeIPv6NVGRE", 54))

hh3cTunnelMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1))
hh3cTunnelTables = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1))
hh3cTunnelIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cTunnelIfTable.setStatus('current')
hh3cTunnelIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cTunnelIfEntry.setStatus('current')
hh3cTunnelIfEncapsMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 3), Hh3cTunnelType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTunnelIfEncapsMethod.setStatus('current')
hh3cTunnelIfHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelIfHopLimit.setStatus('current')
hh3cTunnelIfSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ipsec", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelIfSecurity.setStatus('current')
hh3cTunnelIfTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelIfTOS.setStatus('current')
hh3cTunnelIfFlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 7), IPv6FlowLabelOrAny()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelIfFlowLabel.setStatus('current')
hh3cTunnelIfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTunnelIfAddressType.setStatus('current')
hh3cTunnelIfLocalInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTunnelIfLocalInetAddress.setStatus('current')
hh3cTunnelIfRemoteInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 10), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTunnelIfRemoteInetAddress.setStatus('current')
hh3cTunnelIfEncapsLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelIfEncapsLimit.setStatus('current')
hh3cTunnelInetConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 3), )
if mibBuilder.loadTexts: hh3cTunnelInetConfigTable.setStatus('current')
hh3cTunnelInetConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 3, 1), ).setIndexNames((0, "HH3C-TUNNEL-MIB", "hh3cTunnelInetConfigSlot"), (0, "HH3C-TUNNEL-MIB", "hh3cTunnelInetConfigSubSlot"), (0, "HH3C-TUNNEL-MIB", "hh3cTunnelInetConfigTunnNum"))
if mibBuilder.loadTexts: hh3cTunnelInetConfigEntry.setStatus('current')
hh3cTunnelInetConfigSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: hh3cTunnelInetConfigSlot.setStatus('current')
hh3cTunnelInetConfigSubSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: hh3cTunnelInetConfigSubSlot.setStatus('current')
hh3cTunnelInetConfigTunnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hh3cTunnelInetConfigTunnNum.setStatus('current')
hh3cTunnelInetConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 3, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelInetConfigIfIndex.setStatus('current')
hh3cTunnelInetConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelInetConfigStatus.setStatus('current')
hh3cTunnelEviTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4), )
if mibBuilder.loadTexts: hh3cTunnelEviTable.setStatus('current')
hh3cTunnelEviEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1), ).setIndexNames((0, "HH3C-TUNNEL-MIB", "hh3cTunnelEviTunnNum"))
if mibBuilder.loadTexts: hh3cTunnelEviEntry.setStatus('current')
hh3cTunnelEviTunnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cTunnelEviTunnNum.setStatus('current')
hh3cTunnelEviIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelEviIfIndex.setStatus('current')
hh3cTunnelEviStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelEviStatus.setStatus('current')
hh3cTunnelEviAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelEviAddressType.setStatus('current')
hh3cTunnelEviLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelEviLocalAddr.setStatus('current')
hh3cTunnelEviNetworkID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelEviNetworkID.setStatus('current')
hh3cTunnelEviKeepaliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelEviKeepaliveInterval.setStatus('current')
hh3cTunnelEviKeepaliveTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelEviKeepaliveTimes.setStatus('current')
hh3cTunnelEviLinkTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 5), )
if mibBuilder.loadTexts: hh3cTunnelEviLinkTable.setStatus('current')
hh3cTunnelEviLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 5, 1), ).setIndexNames((0, "HH3C-TUNNEL-MIB", "hh3cTunnelEviTunnNum"), (0, "HH3C-TUNNEL-MIB", "hh3cTunnelEviLinkNum"))
if mibBuilder.loadTexts: hh3cTunnelEviLinkEntry.setStatus('current')
hh3cTunnelEviLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cTunnelEviLinkNum.setStatus('current')
hh3cTunnelEviLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 5, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelEviLinkIfIndex.setStatus('current')
hh3cTunnelEviLinkAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 5, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelEviLinkAddressType.setStatus('current')
hh3cTunnelEviLinkRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 5, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelEviLinkRemoteAddr.setStatus('current')
hh3cTunnelGreTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6), )
if mibBuilder.loadTexts: hh3cTunnelGreTable.setStatus('current')
hh3cTunnelGreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1), ).setIndexNames((0, "HH3C-TUNNEL-MIB", "hh3cTunnelGreTunnNum"))
if mibBuilder.loadTexts: hh3cTunnelGreEntry.setStatus('current')
hh3cTunnelGreTunnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cTunnelGreTunnNum.setStatus('current')
hh3cTunnelGreTunnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelGreTunnIfIndex.setStatus('current')
hh3cTunnelGreAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreAddressType.setStatus('current')
hh3cTunnelGreLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreLocalAddr.setStatus('current')
hh3cTunnelGreRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreRemoteAddr.setStatus('current')
hh3cTunnelGreKeepaliveEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreKeepaliveEnabled.setStatus('current')
hh3cTunnelGreKeepaliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreKeepaliveInterval.setStatus('current')
hh3cTunnelGreKeepaliveTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreKeepaliveTimes.setStatus('current')
hh3cTunnelGreSlbgGroupNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreSlbgGroupNum.setStatus('current')
hh3cTunnelGreTunnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 6, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelGreTunnStatus.setStatus('current')
hh3cTunnelVxlanIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7), )
if mibBuilder.loadTexts: hh3cTunnelVxlanIfTable.setStatus('current')
hh3cTunnelVxlanIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7, 1), ).setIndexNames((0, "HH3C-TUNNEL-MIB", "hh3cTunnelVxlanIfTunnNum"))
if mibBuilder.loadTexts: hh3cTunnelVxlanIfEntry.setStatus('current')
hh3cTunnelVxlanIfTunnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cTunnelVxlanIfTunnNum.setStatus('current')
hh3cTunnelVxlanTunnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelVxlanTunnIfIndex.setStatus('current')
hh3cTunnelVxlanIfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelVxlanIfAddressType.setStatus('current')
hh3cTunnelVxlanIfLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelVxlanIfLocalAddr.setStatus('current')
hh3cTunnelVxlanIfRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelVxlanIfRemoteAddr.setStatus('current')
hh3cTunnelVxlanIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelVxlanIfStatus.setStatus('current')
hh3cTunnelVxlanConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 8))
hh3cTunnelVxlanUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTunnelVxlanUdpPort.setStatus('current')
hh3cTunnelVxlanDropWrongCksmPkt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 8, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTunnelVxlanDropWrongCksmPkt.setStatus('current')
hh3cTunnelVxlanDropVlanTagPkt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 8, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTunnelVxlanDropVlanTagPkt.setStatus('current')
hh3cTunnelAvailableIDGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 9))
hh3cTunnelAvailableID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelAvailableID.setStatus('current')
hh3cTunnelTotalNumTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 10), )
if mibBuilder.loadTexts: hh3cTunnelTotalNumTable.setStatus('current')
hh3cTunnelTotalNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 10, 1), ).setIndexNames((0, "HH3C-TUNNEL-MIB", "hh3cTunnelEncapsMethod"))
if mibBuilder.loadTexts: hh3cTunnelTotalNumEntry.setStatus('current')
hh3cTunnelEncapsMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 10, 1, 1), Hh3cTunnelType())
if mibBuilder.loadTexts: hh3cTunnelEncapsMethod.setStatus('current')
hh3cTunnelTotalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelTotalNum.setStatus('current')
hh3cTunnelNvgreIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11), )
if mibBuilder.loadTexts: hh3cTunnelNvgreIfTable.setStatus('current')
hh3cTunnelNvgreIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11, 1), ).setIndexNames((0, "HH3C-TUNNEL-MIB", "hh3cTunnelNvgreIfTunnNum"))
if mibBuilder.loadTexts: hh3cTunnelNvgreIfEntry.setStatus('current')
hh3cTunnelNvgreIfTunnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cTunnelNvgreIfTunnNum.setStatus('current')
hh3cTunnelNvgreTunnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTunnelNvgreTunnIfIndex.setStatus('current')
hh3cTunnelNvgreIfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelNvgreIfAddressType.setStatus('current')
hh3cTunnelNvgreIfLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelNvgreIfLocalAddr.setStatus('current')
hh3cTunnelNvgreIfRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelNvgreIfRemoteAddr.setStatus('current')
hh3cTunnelNvgreIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 53, 1, 1, 11, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTunnelNvgreIfStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-TUNNEL-MIB", hh3cTunnelEviNetworkID=hh3cTunnelEviNetworkID, hh3cTunnelGreTable=hh3cTunnelGreTable, hh3cTunnelGreLocalAddr=hh3cTunnelGreLocalAddr, hh3cTunnelVxlanDropVlanTagPkt=hh3cTunnelVxlanDropVlanTagPkt, hh3cTunnelIfTOS=hh3cTunnelIfTOS, PYSNMP_MODULE_ID=hh3cTunnel, hh3cTunnelEviLinkEntry=hh3cTunnelEviLinkEntry, hh3cTunnelTables=hh3cTunnelTables, hh3cTunnelEviLocalAddr=hh3cTunnelEviLocalAddr, hh3cTunnelIfHopLimit=hh3cTunnelIfHopLimit, hh3cTunnelInetConfigIfIndex=hh3cTunnelInetConfigIfIndex, hh3cTunnelGreEntry=hh3cTunnelGreEntry, hh3cTunnelEviStatus=hh3cTunnelEviStatus, hh3cTunnelMIBObjects=hh3cTunnelMIBObjects, hh3cTunnelNvgreTunnIfIndex=hh3cTunnelNvgreTunnIfIndex, hh3cTunnelEviLinkTable=hh3cTunnelEviLinkTable, hh3cTunnelIfEncapsMethod=hh3cTunnelIfEncapsMethod, hh3cTunnelNvgreIfTunnNum=hh3cTunnelNvgreIfTunnNum, hh3cTunnelEviIfIndex=hh3cTunnelEviIfIndex, hh3cTunnelEviTable=hh3cTunnelEviTable, hh3cTunnelNvgreIfAddressType=hh3cTunnelNvgreIfAddressType, hh3cTunnelGreSlbgGroupNum=hh3cTunnelGreSlbgGroupNum, hh3cTunnelVxlanIfTable=hh3cTunnelVxlanIfTable, hh3cTunnelEviLinkIfIndex=hh3cTunnelEviLinkIfIndex, hh3cTunnelNvgreIfTable=hh3cTunnelNvgreIfTable, hh3cTunnelVxlanIfEntry=hh3cTunnelVxlanIfEntry, hh3cTunnelEviEntry=hh3cTunnelEviEntry, hh3cTunnelNvgreIfLocalAddr=hh3cTunnelNvgreIfLocalAddr, hh3cTunnelAvailableIDGroup=hh3cTunnelAvailableIDGroup, hh3cTunnelIfEntry=hh3cTunnelIfEntry, hh3cTunnelNvgreIfStatus=hh3cTunnelNvgreIfStatus, hh3cTunnelNvgreIfRemoteAddr=hh3cTunnelNvgreIfRemoteAddr, Hh3cTunnelType=Hh3cTunnelType, hh3cTunnelEviAddressType=hh3cTunnelEviAddressType, hh3cTunnelVxlanUdpPort=hh3cTunnelVxlanUdpPort, hh3cTunnelInetConfigStatus=hh3cTunnelInetConfigStatus, hh3cTunnelVxlanIfStatus=hh3cTunnelVxlanIfStatus, hh3cTunnelEviTunnNum=hh3cTunnelEviTunnNum, hh3cTunnelAvailableID=hh3cTunnelAvailableID, hh3cTunnelVxlanIfAddressType=hh3cTunnelVxlanIfAddressType, hh3cTunnelIfAddressType=hh3cTunnelIfAddressType, hh3cTunnelVxlanIfRemoteAddr=hh3cTunnelVxlanIfRemoteAddr, hh3cTunnelNvgreIfEntry=hh3cTunnelNvgreIfEntry, hh3cTunnelGreKeepaliveInterval=hh3cTunnelGreKeepaliveInterval, hh3cTunnelInetConfigTunnNum=hh3cTunnelInetConfigTunnNum, hh3cTunnelGreTunnIfIndex=hh3cTunnelGreTunnIfIndex, hh3cTunnelGreTunnNum=hh3cTunnelGreTunnNum, hh3cTunnelTotalNumTable=hh3cTunnelTotalNumTable, hh3cTunnelIfEncapsLimit=hh3cTunnelIfEncapsLimit, hh3cTunnelGreKeepaliveEnabled=hh3cTunnelGreKeepaliveEnabled, hh3cTunnelVxlanConfigGroup=hh3cTunnelVxlanConfigGroup, hh3cTunnelInetConfigSubSlot=hh3cTunnelInetConfigSubSlot, hh3cTunnelVxlanDropWrongCksmPkt=hh3cTunnelVxlanDropWrongCksmPkt, hh3cTunnelEviLinkNum=hh3cTunnelEviLinkNum, hh3cTunnelIfLocalInetAddress=hh3cTunnelIfLocalInetAddress, hh3cTunnelIfTable=hh3cTunnelIfTable, hh3cTunnelTotalNum=hh3cTunnelTotalNum, hh3cTunnelInetConfigTable=hh3cTunnelInetConfigTable, hh3cTunnelEviLinkAddressType=hh3cTunnelEviLinkAddressType, hh3cTunnel=hh3cTunnel, hh3cTunnelIfFlowLabel=hh3cTunnelIfFlowLabel, hh3cTunnelVxlanTunnIfIndex=hh3cTunnelVxlanTunnIfIndex, hh3cTunnelEviKeepaliveTimes=hh3cTunnelEviKeepaliveTimes, hh3cTunnelGreRemoteAddr=hh3cTunnelGreRemoteAddr, hh3cTunnelEviKeepaliveInterval=hh3cTunnelEviKeepaliveInterval, hh3cTunnelEviLinkRemoteAddr=hh3cTunnelEviLinkRemoteAddr, hh3cTunnelVxlanIfTunnNum=hh3cTunnelVxlanIfTunnNum, hh3cTunnelInetConfigSlot=hh3cTunnelInetConfigSlot, hh3cTunnelGreKeepaliveTimes=hh3cTunnelGreKeepaliveTimes, hh3cTunnelInetConfigEntry=hh3cTunnelInetConfigEntry, hh3cTunnelIfSecurity=hh3cTunnelIfSecurity, hh3cTunnelIfRemoteInetAddress=hh3cTunnelIfRemoteInetAddress, hh3cTunnelVxlanIfLocalAddr=hh3cTunnelVxlanIfLocalAddr, hh3cTunnelEncapsMethod=hh3cTunnelEncapsMethod, hh3cTunnelGreAddressType=hh3cTunnelGreAddressType, hh3cTunnelTotalNumEntry=hh3cTunnelTotalNumEntry, hh3cTunnelGreTunnStatus=hh3cTunnelGreTunnStatus)
