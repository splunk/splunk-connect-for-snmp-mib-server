#
# PySNMP MIB module TIMETRA-SAS-LOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-SAS-LOG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:14:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpSecurityLevel, SnmpMessageProcessingModel, SnmpAdminString = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpSecurityLevel", "SnmpMessageProcessingModel", "SnmpAdminString")
snmpNotifyEntry, = mibBuilder.importSymbols("SNMP-NOTIFICATION-MIB", "snmpNotifyEntry")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
sysDescr, sysObjectID = mibBuilder.importSymbols("SNMPv2-MIB", "sysDescr", "sysObjectID")
ModuleIdentity, Integer32, Counter64, Unsigned32, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, NotificationType, MibIdentifier, Bits, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Counter64", "Unsigned32", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "Bits", "ObjectIdentity", "iso")
TruthValue, TextualConvention, RowStatus, StorageType, DisplayString, DateAndTime, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "StorageType", "DisplayString", "DateAndTime", "TimeStamp")
TFilterActionOrDefault, TFilterAction = mibBuilder.importSymbols("TIMETRA-FILTER-MIB", "TFilterActionOrDefault", "TFilterAction")
tmnxSRNotifyPrefix, tmnxSRObjs, tmnxSRConfs, timetraSRMIBModules = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRNotifyPrefix", "tmnxSRObjs", "tmnxSRConfs", "timetraSRMIBModules")
tmnxSnmpTrapDestEntry, tmnxLogApEntry, TmnxLogIdIndex = mibBuilder.importSymbols("TIMETRA-LOG-MIB", "tmnxSnmpTrapDestEntry", "tmnxLogApEntry", "TmnxLogIdIndex")
timetraSASNotifyPrefix, timetraSASModules, timetraSASObjs, timetraSASConfs = mibBuilder.importSymbols("TIMETRA-SAS-GLOBAL-MIB", "timetraSASNotifyPrefix", "timetraSASModules", "timetraSASObjs", "timetraSASConfs")
THsmdaCounterIdOrZeroOrAll, TmnxAccPlcyQICounters, TNamedItem, TItemDescription, TNamedItemOrEmpty, TmnxActionType, TmnxAdminState, TQueueIdOrAll, TmnxAccPlcyAACounters, TmnxOperState, TmnxAccPlcyQECounters, TQueueId, TmnxAccPlcyOICounters, TmnxAccPlcyOECounters, THsmdaCounterIdOrZero = mibBuilder.importSymbols("TIMETRA-TC-MIB", "THsmdaCounterIdOrZeroOrAll", "TmnxAccPlcyQICounters", "TNamedItem", "TItemDescription", "TNamedItemOrEmpty", "TmnxActionType", "TmnxAdminState", "TQueueIdOrAll", "TmnxAccPlcyAACounters", "TmnxOperState", "TmnxAccPlcyQECounters", "TQueueId", "TmnxAccPlcyOICounters", "TmnxAccPlcyOECounters", "THsmdaCounterIdOrZero")
timetraSASLogMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 6, 2, 1, 1, 14))
timetraSASLogMIBModule.setRevisions(('1911-08-01 00:00',))
if mibBuilder.loadTexts: timetraSASLogMIBModule.setLastUpdated('1108010000Z')
if mibBuilder.loadTexts: timetraSASLogMIBModule.setOrganization('Alcatel')
tmnxSASLogObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14))
tmnxSASLogGlobObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1))
tmnxSASLogConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 9))
tmnxSASLogGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 9, 1))
class TLogMemSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 128)

tmnxDygGaspPriLogId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDygGaspPriLogId.setStatus('current')
tmnxDygGaspPriTgtName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDygGaspPriTgtName.setStatus('current')
tmnxDygGaspSecLogId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDygGaspSecLogId.setStatus('current')
tmnxDygGaspSecTgtName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDygGaspSecTgtName.setStatus('current')
tmnxDygGaspTerLogId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDygGaspTerLogId.setStatus('current')
tmnxDygGaspTerTgtName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDygGaspTerTgtName.setStatus('current')
tmnxLogApExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 7), )
if mibBuilder.loadTexts: tmnxLogApExtnTable.setStatus('current')
tmnxLogApExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 7, 1), )
tmnxLogApEntry.registerAugmentions(("TIMETRA-SAS-LOG-MIB", "tmnxLogApExtnEntry"))
tmnxLogApExtnEntry.setIndexNames(*tmnxLogApEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxLogApExtnEntry.setStatus('current')
tmnxLogApLogMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 7, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxLogApLogMemory.setStatus('current')
tmnxLogApLogMemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 14, 1, 7, 1, 2), TLogMemSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLogApLogMemSize.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-SAS-LOG-MIB", tmnxDygGaspPriLogId=tmnxDygGaspPriLogId, tmnxDygGaspSecLogId=tmnxDygGaspSecLogId, tmnxSASLogConformance=tmnxSASLogConformance, tmnxLogApExtnTable=tmnxLogApExtnTable, tmnxLogApLogMemSize=tmnxLogApLogMemSize, tmnxSASLogGroups=tmnxSASLogGroups, tmnxDygGaspPriTgtName=tmnxDygGaspPriTgtName, tmnxDygGaspSecTgtName=tmnxDygGaspSecTgtName, tmnxSASLogObjs=tmnxSASLogObjs, tmnxDygGaspTerLogId=tmnxDygGaspTerLogId, tmnxLogApLogMemory=tmnxLogApLogMemory, tmnxDygGaspTerTgtName=tmnxDygGaspTerTgtName, tmnxLogApExtnEntry=tmnxLogApExtnEntry, timetraSASLogMIBModule=timetraSASLogMIBModule, TLogMemSize=TLogMemSize, tmnxSASLogGlobObjs=tmnxSASLogGlobObjs, PYSNMP_MODULE_ID=timetraSASLogMIBModule)
