#
# PySNMP MIB module HPN-ICF-CFCARD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-CFCARD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hpnicfCfCard, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCfCard")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, IpAddress, MibIdentifier, TimeTicks, ObjectIdentity, ModuleIdentity, Integer32, Unsigned32, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "IpAddress", "MibIdentifier", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Integer32", "Unsigned32", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfCfCardMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1))
if mibBuilder.loadTexts: hpnicfCfCardMIB.setLastUpdated('200412240000Z')
if mibBuilder.loadTexts: hpnicfCfCardMIB.setOrganization('')
hpnicfCfCardMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1))
if mibBuilder.loadTexts: hpnicfCfCardMIBObjects.setStatus('current')
hpnicfCfCardScalarObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 1))
if mibBuilder.loadTexts: hpnicfCfCardScalarObjects.setStatus('current')
hpnicfCfCardNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardNumber.setStatus('current')
hpnicfCfCardInfoObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2))
if mibBuilder.loadTexts: hpnicfCfCardInfoObjects.setStatus('current')
hpnicfCfCardInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfCfCardInfoTable.setStatus('current')
hpnicfCfCardInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-CFCARD-MIB", "hpnicfCfCardIndex"))
if mibBuilder.loadTexts: hpnicfCfCardInfoEntry.setStatus('current')
hpnicfCfCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardIndex.setStatus('current')
hpnicfCfCardIsPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardIsPresent.setStatus('current')
hpnicfCfCardContainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardContainedIn.setStatus('current')
hpnicfCfCardParentRelPos = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardParentRelPos.setStatus('current')
hpnicfCfCardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardDescription.setStatus('current')
hpnicfCfCardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardSerialNumber.setStatus('current')
hpnicfCfCardFirewareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardFirewareVersion.setStatus('current')
hpnicfCfCardModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardModelNumber.setStatus('current')
hpnicfCfCardState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 128, 240, 255))).clone(namedValues=NamedValues(("sNoError", 1), ("sFormatError", 2), ("sSectorBufferError", 3), ("sECCError", 4), ("sCMPError", 5), ("sSlaveError", 128), ("sIOError", 240), ("sOther", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardState.setStatus('current')
hpnicfCfCardSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 10), Unsigned32()).setUnits('byte').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardSize.setStatus('current')
hpnicfCfCardUsedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 11), Unsigned32()).setUnits('byte').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardUsedSize.setStatus('current')
hpnicfCfCardFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 1, 2, 2, 1, 12), Unsigned32()).setUnits('byte').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfCardFreeSize.setStatus('current')
hpnicfCfCardNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 2))
if mibBuilder.loadTexts: hpnicfCfCardNotifications.setStatus('current')
hpnicfCfCardNotificationsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 2, 0))
if mibBuilder.loadTexts: hpnicfCfCardNotificationsV2.setStatus('current')
hpnicfCfCardHotSwapOn = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 2, 0, 1)).setObjects(("HPN-ICF-CFCARD-MIB", "hpnicfCfCardContainedIn"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardParentRelPos"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardDescription"))
if mibBuilder.loadTexts: hpnicfCfCardHotSwapOn.setStatus('current')
hpnicfCfCardHotSwapOff = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 2, 0, 2)).setObjects(("HPN-ICF-CFCARD-MIB", "hpnicfCfCardContainedIn"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardParentRelPos"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardDescription"))
if mibBuilder.loadTexts: hpnicfCfCardHotSwapOff.setStatus('current')
hpnicfCfCardMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 4))
hpnicfCfCardMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 4, 1))
hpnicfcurrentObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 4, 1, 1)).setObjects(("HPN-ICF-CFCARD-MIB", "hpnicfCfCardNumber"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardIndex"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardIsPresent"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardContainedIn"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardParentRelPos"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardDescription"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardSerialNumber"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardFirewareVersion"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardModelNumber"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardState"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardSize"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardUsedSize"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardFreeSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfcurrentObjectGroup = hpnicfcurrentObjectGroup.setStatus('current')
hpnicfcurrentNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 4, 1, 2)).setObjects(("HPN-ICF-CFCARD-MIB", "hpnicfCfCardHotSwapOn"), ("HPN-ICF-CFCARD-MIB", "hpnicfCfCardHotSwapOff"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfcurrentNotificationGroup = hpnicfcurrentNotificationGroup.setStatus('current')
hpnicfCfCardMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 4, 2))
hpnicfbasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 41, 1, 4, 2, 1)).setObjects(("HPN-ICF-CFCARD-MIB", "hpnicfcurrentObjectGroup"), ("HPN-ICF-CFCARD-MIB", "hpnicfcurrentNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfbasicCompliance = hpnicfbasicCompliance.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-CFCARD-MIB", hpnicfCfCardFirewareVersion=hpnicfCfCardFirewareVersion, hpnicfCfCardHotSwapOn=hpnicfCfCardHotSwapOn, hpnicfCfCardInfoTable=hpnicfCfCardInfoTable, hpnicfCfCardState=hpnicfCfCardState, hpnicfCfCardIsPresent=hpnicfCfCardIsPresent, hpnicfCfCardNumber=hpnicfCfCardNumber, hpnicfCfCardNotificationsV2=hpnicfCfCardNotificationsV2, hpnicfCfCardMIBObjects=hpnicfCfCardMIBObjects, hpnicfbasicCompliance=hpnicfbasicCompliance, hpnicfCfCardUsedSize=hpnicfCfCardUsedSize, hpnicfCfCardMIBConformance=hpnicfCfCardMIBConformance, hpnicfCfCardParentRelPos=hpnicfCfCardParentRelPos, hpnicfCfCardNotifications=hpnicfCfCardNotifications, hpnicfCfCardContainedIn=hpnicfCfCardContainedIn, hpnicfCfCardMIB=hpnicfCfCardMIB, hpnicfCfCardSize=hpnicfCfCardSize, hpnicfCfCardMIBGroups=hpnicfCfCardMIBGroups, hpnicfCfCardFreeSize=hpnicfCfCardFreeSize, hpnicfCfCardScalarObjects=hpnicfCfCardScalarObjects, hpnicfCfCardIndex=hpnicfCfCardIndex, hpnicfcurrentObjectGroup=hpnicfcurrentObjectGroup, hpnicfCfCardMIBCompliances=hpnicfCfCardMIBCompliances, hpnicfCfCardSerialNumber=hpnicfCfCardSerialNumber, hpnicfcurrentNotificationGroup=hpnicfcurrentNotificationGroup, PYSNMP_MODULE_ID=hpnicfCfCardMIB, hpnicfCfCardHotSwapOff=hpnicfCfCardHotSwapOff, hpnicfCfCardModelNumber=hpnicfCfCardModelNumber, hpnicfCfCardDescription=hpnicfCfCardDescription, hpnicfCfCardInfoObjects=hpnicfCfCardInfoObjects, hpnicfCfCardInfoEntry=hpnicfCfCardInfoEntry)
