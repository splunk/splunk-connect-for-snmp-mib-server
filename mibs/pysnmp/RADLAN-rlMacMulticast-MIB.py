#
# PySNMP MIB module RADLAN-rlMacMulticast-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-rlMacMulticast-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:47:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
InetAddress, InetVersion, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetVersion", "InetAddressType")
PortList, VlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanIndex")
rndErrorSeverity, rndErrorDesc = mibBuilder.importSymbols("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity", "rndErrorDesc")
rnd, rndNotifications, rlMacMulticast = mibBuilder.importSymbols("RADLAN-MIB", "rnd", "rndNotifications", "rlMacMulticast")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, Unsigned32, MibIdentifier, TimeTicks, ModuleIdentity, ObjectIdentity, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "Unsigned32", "MibIdentifier", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Gauge32", "Counter32")
RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
rlMacMulticastEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMacMulticastEnable.setStatus('current')
rlIgmpSnoop = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 55, 2))
rlIgmpSnoopMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMibVersion.setStatus('current')
rlIgmpSnoopEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 2, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopEnable.setStatus('current')
rlIgmpSnoopHostAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopHostAgingTime.setStatus('obsolete')
rlIgmpSnoopRouterAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopRouterAgingTime.setStatus('obsolete')
class IgmpVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("v1", 1), ("v2", 2), ("v3", 3))

rlIgmpSnoopVlanTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 2, 7), )
if mibBuilder.loadTexts: rlIgmpSnoopVlanTable.setStatus('obsolete')
rlIgmpSnoopVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpSnoopVlanTag"))
if mibBuilder.loadTexts: rlIgmpSnoopVlanEntry.setStatus('obsolete')
rlIgmpSnoopVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopVlanTag.setStatus('obsolete')
rlIgmpSnoopVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanEnable.setStatus('obsolete')
rlIgmpSnoopVlanRouterLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanRouterLearn.setStatus('obsolete')
rlIgmpSnoopVlanHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanHostTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanQuerierTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanQuerierTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanRouterTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanLeaveTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 8), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopVlanIgmpVersion.setStatus('obsolete')
rlIgmpSnoopVlanRouterPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 7, 1, 9), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopVlanRouterPortlist.setStatus('obsolete')
rlIgmpSnoopIGMP224ReportsHandle = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("ignore", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopIGMP224ReportsHandle.setStatus('current')
rlIgmpSnoopMulticastTvTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 2, 10), )
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvTable.setStatus('current')
rlIgmpSnoopMulticastTvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 2, 10, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpSnoopMulticastTvVID"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpSnoopMulticastTvGroup"))
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvEntry.setStatus('current')
rlIgmpSnoopMulticastTvVID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 10, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvVID.setStatus('current')
rlIgmpSnoopMulticastTvGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvGroup.setStatus('current')
rlIgmpSnoopMulticastTvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 10, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvStatus.setStatus('current')
rlIgmpSnoopMembershipTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 2, 11), )
if mibBuilder.loadTexts: rlIgmpSnoopMembershipTable.setStatus('current')
rlIgmpSnoopMembershipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpSnoopMembershipVlanTag"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpSnoopMembershipGroupIpAddress"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpSnoopMembershipSourceIpAddress"))
if mibBuilder.loadTexts: rlIgmpSnoopMembershipEntry.setStatus('current')
rlIgmpSnoopMembershipVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipVlanTag.setStatus('current')
rlIgmpSnoopMembershipGroupIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipGroupIpAddress.setStatus('current')
rlIgmpSnoopMembershipSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipSourceIpAddress.setStatus('current')
rlIgmpSnoopMembershipIncPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipIncPortlist.setStatus('current')
rlIgmpSnoopMembershipExcPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipExcPortlist.setStatus('current')
rlIgmpSnoopMembershipExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipExpiryTime.setStatus('obsolete')
rlIgmpSnoopMembershipCompatibilityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 11, 1, 7), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipCompatibilityMode.setStatus('current')
rlIgmpSnoopQuerierVlanTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 2, 12), )
if mibBuilder.loadTexts: rlIgmpSnoopQuerierVlanTable.setStatus('current')
rlIgmpSnoopQuerierVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpSnoopQuerierVlanTag"))
if mibBuilder.loadTexts: rlIgmpSnoopQuerierVlanEntry.setStatus('current')
rlIgmpSnoopQuerierVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierVlanTag.setStatus('current')
rlIgmpSnoopQuerierAdminEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierAdminEnable.setStatus('current')
rlIgmpSnoopQuerierOperEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierOperEnable.setStatus('current')
rlIgmpSnoopQuerierAdminAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierAdminAddr.setStatus('current')
rlIgmpSnoopQuerierOperAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierOperAddr.setStatus('current')
rlIgmpSnoopQuerierAdminVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 6), IgmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierAdminVersionNumber.setStatus('current')
rlIgmpSnoopQuerierOperVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 7), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierOperVersionNumber.setStatus('current')
rlIgmpSnoopQuerierElectionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 2, 12, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierElectionEnable.setStatus('current')
rlIgmpSnoopQuerierEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 2, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierEnable.setStatus('current')
rlMacMulticastMaxEntriesNum = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMacMulticastMaxEntriesNum.setStatus('current')
rlMacMulticastFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 55, 4))
rlMacMulticastUnregFilterEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 4, 1), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMacMulticastUnregFilterEnable.setStatus('current')
rlMldSnoop = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 55, 5))
rlMldSnoopEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopEnable.setStatus('current')
rlMldSnoopHostAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopHostAgingTime.setStatus('obsolete')
rlMldSnoopRouterAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopRouterAgingTime.setStatus('obsolete')
rlIgmpMldSnoopMembershipTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 5, 4), )
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipTable.setStatus('current')
rlIgmpMldSnoopMembershipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMembershipVlanTag"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMembershipGroupIpAddressType"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMembershipGroupIpAddress"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMembershipSourceIpAddressType"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMembershipSourceIpAddress"))
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipEntry.setStatus('current')
rlIgmpMldSnoopMembershipVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipVlanTag.setStatus('current')
rlIgmpMldSnoopMembershipGroupIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipGroupIpAddressType.setStatus('current')
rlIgmpMldSnoopMembershipGroupIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipGroupIpAddress.setStatus('current')
rlIgmpMldSnoopMembershipSourceIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipSourceIpAddressType.setStatus('current')
rlIgmpMldSnoopMembershipSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipSourceIpAddress.setStatus('current')
rlIgmpMldSnoopMembershipIncPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipIncPortlist.setStatus('current')
rlIgmpMldSnoopMembershipExcPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 7), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipExcPortlist.setStatus('current')
rlIgmpMldSnoopMembershipExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipExpiryTime.setStatus('obsolete')
rlIgmpMldSnoopMembershipCompatibilityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 4, 1, 9), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipCompatibilityMode.setStatus('current')
rlIgmpMldSnoopVlanTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 5, 5), )
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanTable.setStatus('current')
rlIgmpMldSnoopVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopVlanInetAddressType"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopVlanTag"))
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanEntry.setStatus('current')
rlIgmpMldSnoopVlanInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanInetAddressType.setStatus('current')
rlIgmpMldSnoopVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanTag.setStatus('current')
rlIgmpMldSnoopVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanEnable.setStatus('current')
rlIgmpMldSnoopVlanRouterLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterLearn.setStatus('current')
rlIgmpMldSnoopVlanHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanHostTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanQuerierTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanQuerierTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanLeaveTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 9), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanIgmpVersion.setStatus('current')
rlIgmpMldSnoopVlanRouterPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 10), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterPortlist.setStatus('current')
rlIgmpMldSnoopVlanRouterStaticPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 11), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterStaticPortlist.setStatus('current')
rlIgmpMldSnoopVlanRouterForbiddenPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 12), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterForbiddenPortlist.setStatus('current')
rlIgmpMldSnoopVlanQueryOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanQueryOverride.setStatus('current')
rlIgmpMldSnoopVlanOperRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperRobustness.setStatus('current')
rlIgmpMldSnoopVlanOperQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 31744000)).clone(125000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanOperQueryMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8387584)).clone(10000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperQueryMaxResponseTime.setStatus('current')
rlIgmpMldSnoopVlanOperLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8387584)).clone(1000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperLastMemberQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanOperLastMemberQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperLastMemberQueryCount.setStatus('current')
rlIgmpMldSnoopVlanOperStartupQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31744000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperStartupQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanOperStartupQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperStartupQueryCount.setStatus('current')
rlIgmpMldSnoopVlanOperHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperHostTimeOut.setStatus('current')
rlIgmpMldSnoopVlanOperRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperRouterTimeOut.setStatus('current')
rlIgmpMldSnoopVlanOperLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperLeaveTimeOut.setStatus('current')
rlIgmpMldSnoopVlanAdminRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminRobustness.setStatus('current')
rlIgmpMldSnoopVlanAdminQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 18000000)).clone(125000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanAdminQueryMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 20000)).clone(10000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminQueryMaxResponseTime.setStatus('current')
rlIgmpMldSnoopVlanAdminLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 25500)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminLastMemberQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanAdminLastMemberQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminLastMemberQueryCount.setStatus('current')
rlIgmpMldSnoopVlanAdminStartupQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4500000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminStartupQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanAdminStartupQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminStartupQueryCount.setStatus('current')
rlIgmpMldSnoopVlanAdminHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminHostTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanAdminRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminRouterTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanAdminLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminLeaveTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanIsImmediateLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 5, 1, 34), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanIsImmediateLeave.setStatus('current')
rlIgmpMldSnoopMulticastTvTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 5, 6), )
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvTable.setStatus('current')
rlIgmpMldSnoopMulticastTvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 5, 6, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMulticastTvInetAddressType"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMulticastTvVID"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMulticastTvGroupAddressType"), (0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopMulticastTvGroup"))
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvEntry.setStatus('current')
rlIgmpMldSnoopMulticastTvInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 6, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvInetAddressType.setStatus('current')
rlIgmpMldSnoopMulticastTvVID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 6, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvVID.setStatus('current')
rlIgmpMldSnoopMulticastTvGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 6, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvGroupAddressType.setStatus('current')
rlIgmpMldSnoopMulticastTvGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvGroup.setStatus('current')
rlIgmpMldSnoopMulticastTvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 6, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvStatus.setStatus('current')
class MldVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("v1", 1), ("v2", 2))

rlMldSnoopQuerierVlanTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 5, 7), )
if mibBuilder.loadTexts: rlMldSnoopQuerierVlanTable.setStatus('current')
rlMldSnoopQuerierVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlMldSnoopQuerierVlanTag"))
if mibBuilder.loadTexts: rlMldSnoopQuerierVlanEntry.setStatus('current')
rlMldSnoopQuerierVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMldSnoopQuerierVlanTag.setStatus('current')
rlMldSnoopQuerierAdminEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopQuerierAdminEnable.setStatus('current')
rlMldSnoopQuerierOperEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMldSnoopQuerierOperEnable.setStatus('current')
rlMldSnoopQuerierAdminAddrInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMldSnoopQuerierAdminAddrInetAddressType.setStatus('current')
rlMldSnoopQuerierAdminAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopQuerierAdminAddr.setStatus('current')
rlMldSnoopQuerierOperAddrInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMldSnoopQuerierOperAddrInetAddressType.setStatus('current')
rlMldSnoopQuerierOperAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMldSnoopQuerierOperAddr.setStatus('current')
rlMldSnoopQuerierAdminVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 8), MldVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopQuerierAdminVersionNumber.setStatus('current')
rlMldSnoopQuerierOperVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 9), MldVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMldSnoopQuerierOperVersionNumber.setStatus('current')
rlMldSnoopQuerierElectionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 7, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopQuerierElectionEnable.setStatus('current')
rlMldSnoopQuerierEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 55, 5, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopQuerierEnable.setStatus('current')
rlIgmpMldSnoopQuerierGlobalAddressTable = MibTable((1, 3, 6, 1, 4, 1, 89, 55, 5, 9), )
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierGlobalAddressTable.setStatus('current')
rlIgmpMldSnoopQuerierGlobalAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 55, 5, 9, 1), ).setIndexNames((0, "RADLAN-rlMacMulticast-MIB", "rlIgmpMldSnoopQuerierGlobalAddressIPVersion"))
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierGlobalAddressEntry.setStatus('current')
rlIgmpMldSnoopQuerierGlobalAddressIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 9, 1, 1), InetVersion())
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierGlobalAddressIPVersion.setStatus('current')
rlIgmpMldSnoopQuerierGlobalAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 9, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierGlobalAddressType.setStatus('current')
rlIgmpMldSnoopQuerierGlobalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 55, 5, 9, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierGlobalAddress.setStatus('current')
rlMacMulticastUnregFilterFailed = NotificationType((1, 3, 6, 1, 4, 1, 89) + (0,1)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
rlIgmpMldSnoopTriplePlayPort = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 208)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIgmpMldSnoopTriplePlayPort.setStatus('current')
rlbrgIgmpSnoopQrrDuplicateIP = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 227)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlbrgIgmpSnoopQrrDuplicateIP.setStatus('current')
mibBuilder.exportSymbols("RADLAN-rlMacMulticast-MIB", rlIgmpSnoopEnable=rlIgmpSnoopEnable, rlIgmpSnoopVlanEnable=rlIgmpSnoopVlanEnable, rlMldSnoopQuerierEnable=rlMldSnoopQuerierEnable, rlIgmpMldSnoopTriplePlayPort=rlIgmpMldSnoopTriplePlayPort, rlIgmpMldSnoopMembershipIncPortlist=rlIgmpMldSnoopMembershipIncPortlist, rlIgmpSnoopVlanRouterTimeOut=rlIgmpSnoopVlanRouterTimeOut, rlIgmpMldSnoopVlanAdminLeaveTimeOut=rlIgmpMldSnoopVlanAdminLeaveTimeOut, rlMldSnoopQuerierVlanEntry=rlMldSnoopQuerierVlanEntry, rlIgmpSnoopQuerierVlanTag=rlIgmpSnoopQuerierVlanTag, rlIgmpSnoopMembershipExpiryTime=rlIgmpSnoopMembershipExpiryTime, rlIgmpMldSnoopVlanRouterLearn=rlIgmpMldSnoopVlanRouterLearn, rlIgmpSnoopQuerierVlanEntry=rlIgmpSnoopQuerierVlanEntry, rlIgmpMldSnoopMembershipTable=rlIgmpMldSnoopMembershipTable, rlMldSnoopQuerierElectionEnable=rlMldSnoopQuerierElectionEnable, rlIgmpMldSnoopVlanOperLastMemberQueryCount=rlIgmpMldSnoopVlanOperLastMemberQueryCount, rlIgmpMldSnoopVlanLeaveTimeOut=rlIgmpMldSnoopVlanLeaveTimeOut, rlMldSnoop=rlMldSnoop, rlIgmpMldSnoopMulticastTvStatus=rlIgmpMldSnoopMulticastTvStatus, rlIgmpMldSnoopMulticastTvInetAddressType=rlIgmpMldSnoopMulticastTvInetAddressType, IgmpVersion=IgmpVersion, rlMldSnoopQuerierVlanTable=rlMldSnoopQuerierVlanTable, rlMldSnoopRouterAgingTime=rlMldSnoopRouterAgingTime, rlIgmpSnoopQuerierVlanTable=rlIgmpSnoopQuerierVlanTable, rlIgmpMldSnoopVlanRouterForbiddenPortlist=rlIgmpMldSnoopVlanRouterForbiddenPortlist, rlIgmpSnoopQuerierOperEnable=rlIgmpSnoopQuerierOperEnable, rlIgmpSnoopQuerierAdminVersionNumber=rlIgmpSnoopQuerierAdminVersionNumber, rlIgmpMldSnoopVlanInetAddressType=rlIgmpMldSnoopVlanInetAddressType, rlIgmpMldSnoopMulticastTvTable=rlIgmpMldSnoopMulticastTvTable, rlIgmpSnoopMembershipTable=rlIgmpSnoopMembershipTable, rlIgmpMldSnoopVlanAdminQueryInterval=rlIgmpMldSnoopVlanAdminQueryInterval, rlIgmpMldSnoopVlanRouterTimeOut=rlIgmpMldSnoopVlanRouterTimeOut, rlIgmpMldSnoopVlanIsImmediateLeave=rlIgmpMldSnoopVlanIsImmediateLeave, rlIgmpMldSnoopQuerierGlobalAddressTable=rlIgmpMldSnoopQuerierGlobalAddressTable, rlIgmpSnoopMembershipExcPortlist=rlIgmpSnoopMembershipExcPortlist, rlMldSnoopQuerierAdminAddrInetAddressType=rlMldSnoopQuerierAdminAddrInetAddressType, rlIgmpMldSnoopVlanTag=rlIgmpMldSnoopVlanTag, rlIgmpSnoopVlanHostTimeOut=rlIgmpSnoopVlanHostTimeOut, rlIgmpSnoopRouterAgingTime=rlIgmpSnoopRouterAgingTime, rlIgmpSnoopMulticastTvEntry=rlIgmpSnoopMulticastTvEntry, rlIgmpSnoopQuerierOperAddr=rlIgmpSnoopQuerierOperAddr, rlMldSnoopQuerierOperVersionNumber=rlMldSnoopQuerierOperVersionNumber, rlIgmpMldSnoopVlanAdminRouterTimeOut=rlIgmpMldSnoopVlanAdminRouterTimeOut, rlIgmpMldSnoopMembershipCompatibilityMode=rlIgmpMldSnoopMembershipCompatibilityMode, rlIgmpMldSnoopMulticastTvEntry=rlIgmpMldSnoopMulticastTvEntry, rlIgmpMldSnoopMembershipSourceIpAddress=rlIgmpMldSnoopMembershipSourceIpAddress, rlIgmpMldSnoopVlanOperLastMemberQueryInterval=rlIgmpMldSnoopVlanOperLastMemberQueryInterval, rlIgmpMldSnoopQuerierGlobalAddress=rlIgmpMldSnoopQuerierGlobalAddress, rlIgmpSnoopVlanEntry=rlIgmpSnoopVlanEntry, rlIgmpMldSnoopMulticastTvGroup=rlIgmpMldSnoopMulticastTvGroup, rlbrgIgmpSnoopQrrDuplicateIP=rlbrgIgmpSnoopQrrDuplicateIP, rlMldSnoopHostAgingTime=rlMldSnoopHostAgingTime, rlIgmpSnoopMembershipVlanTag=rlIgmpSnoopMembershipVlanTag, rlMldSnoopQuerierAdminEnable=rlMldSnoopQuerierAdminEnable, rlIgmpMldSnoopVlanEnable=rlIgmpMldSnoopVlanEnable, rlIgmpMldSnoopVlanAdminRobustness=rlIgmpMldSnoopVlanAdminRobustness, rlIgmpMldSnoopVlanOperRobustness=rlIgmpMldSnoopVlanOperRobustness, rlMldSnoopEnable=rlMldSnoopEnable, rlIgmpMldSnoopVlanAdminStartupQueryInterval=rlIgmpMldSnoopVlanAdminStartupQueryInterval, rlIgmpSnoopVlanLeaveTimeOut=rlIgmpSnoopVlanLeaveTimeOut, rlMacMulticastFilter=rlMacMulticastFilter, rlIgmpMldSnoopVlanOperHostTimeOut=rlIgmpMldSnoopVlanOperHostTimeOut, rlIgmpMldSnoopVlanAdminHostTimeOut=rlIgmpMldSnoopVlanAdminHostTimeOut, rlIgmpSnoopMembershipEntry=rlIgmpSnoopMembershipEntry, rlIgmpMldSnoopVlanHostTimeOut=rlIgmpMldSnoopVlanHostTimeOut, rlMldSnoopQuerierAdminAddr=rlMldSnoopQuerierAdminAddr, rlIgmpMldSnoopQuerierGlobalAddressEntry=rlIgmpMldSnoopQuerierGlobalAddressEntry, rlMldSnoopQuerierOperEnable=rlMldSnoopQuerierOperEnable, rlIgmpSnoopVlanTag=rlIgmpSnoopVlanTag, rlIgmpMldSnoopMembershipSourceIpAddressType=rlIgmpMldSnoopMembershipSourceIpAddressType, rlIgmpMldSnoopVlanAdminQueryMaxResponseTime=rlIgmpMldSnoopVlanAdminQueryMaxResponseTime, rlIgmpSnoopVlanTable=rlIgmpSnoopVlanTable, MldVersion=MldVersion, rlIgmpSnoopMembershipCompatibilityMode=rlIgmpSnoopMembershipCompatibilityMode, rlIgmpSnoopQuerierEnable=rlIgmpSnoopQuerierEnable, rlIgmpMldSnoopMembershipEntry=rlIgmpMldSnoopMembershipEntry, rlIgmpMldSnoopVlanQuerierTimeOut=rlIgmpMldSnoopVlanQuerierTimeOut, rlIgmpMldSnoopVlanQueryOverride=rlIgmpMldSnoopVlanQueryOverride, rlIgmpMldSnoopMulticastTvGroupAddressType=rlIgmpMldSnoopMulticastTvGroupAddressType, rlIgmpSnoopVlanRouterLearn=rlIgmpSnoopVlanRouterLearn, rlIgmpMldSnoopVlanAdminLastMemberQueryCount=rlIgmpMldSnoopVlanAdminLastMemberQueryCount, rlMldSnoopQuerierOperAddr=rlMldSnoopQuerierOperAddr, rlIgmpMldSnoopMembershipExpiryTime=rlIgmpMldSnoopMembershipExpiryTime, rlIgmpSnoopMulticastTvTable=rlIgmpSnoopMulticastTvTable, rlIgmpSnoopQuerierAdminEnable=rlIgmpSnoopQuerierAdminEnable, rlMacMulticastUnregFilterFailed=rlMacMulticastUnregFilterFailed, rlIgmpMldSnoopVlanAdminLastMemberQueryInterval=rlIgmpMldSnoopVlanAdminLastMemberQueryInterval, rlMacMulticastEnable=rlMacMulticastEnable, rlIgmpMldSnoopVlanRouterStaticPortlist=rlIgmpMldSnoopVlanRouterStaticPortlist, rlIgmpMldSnoopVlanAdminStartupQueryCount=rlIgmpMldSnoopVlanAdminStartupQueryCount, rlIgmpSnoopVlanQuerierTimeOut=rlIgmpSnoopVlanQuerierTimeOut, rlIgmpSnoopMulticastTvStatus=rlIgmpSnoopMulticastTvStatus, rlIgmpMldSnoopVlanOperRouterTimeOut=rlIgmpMldSnoopVlanOperRouterTimeOut, rlIgmpSnoopVlanIgmpVersion=rlIgmpSnoopVlanIgmpVersion, rlMldSnoopQuerierAdminVersionNumber=rlMldSnoopQuerierAdminVersionNumber, rlIgmpMldSnoopVlanOperQueryInterval=rlIgmpMldSnoopVlanOperQueryInterval, rlIgmpMldSnoopVlanOperStartupQueryCount=rlIgmpMldSnoopVlanOperStartupQueryCount, rlIgmpSnoopMembershipSourceIpAddress=rlIgmpSnoopMembershipSourceIpAddress, rlMldSnoopQuerierVlanTag=rlMldSnoopQuerierVlanTag, rlIgmpSnoopMibVersion=rlIgmpSnoopMibVersion, rlIgmpMldSnoopQuerierGlobalAddressType=rlIgmpMldSnoopQuerierGlobalAddressType, rlIgmpMldSnoopMembershipGroupIpAddressType=rlIgmpMldSnoopMembershipGroupIpAddressType, rlIgmpSnoopQuerierElectionEnable=rlIgmpSnoopQuerierElectionEnable, rlIgmpMldSnoopVlanOperLeaveTimeOut=rlIgmpMldSnoopVlanOperLeaveTimeOut, rlIgmpMldSnoopQuerierGlobalAddressIPVersion=rlIgmpMldSnoopQuerierGlobalAddressIPVersion, rlIgmpSnoopMulticastTvVID=rlIgmpSnoopMulticastTvVID, rlIgmpSnoopVlanRouterPortlist=rlIgmpSnoopVlanRouterPortlist, rlIgmpSnoopMembershipIncPortlist=rlIgmpSnoopMembershipIncPortlist, rlIgmpMldSnoopMembershipGroupIpAddress=rlIgmpMldSnoopMembershipGroupIpAddress, rlIgmpMldSnoopVlanRouterPortlist=rlIgmpMldSnoopVlanRouterPortlist, rlIgmpMldSnoopVlanEntry=rlIgmpMldSnoopVlanEntry, rlIgmpSnoopQuerierOperVersionNumber=rlIgmpSnoopQuerierOperVersionNumber, rlIgmpMldSnoopVlanIgmpVersion=rlIgmpMldSnoopVlanIgmpVersion, rlIgmpSnoopMembershipGroupIpAddress=rlIgmpSnoopMembershipGroupIpAddress, rlIgmpMldSnoopMulticastTvVID=rlIgmpMldSnoopMulticastTvVID, rlIgmpSnoopQuerierAdminAddr=rlIgmpSnoopQuerierAdminAddr, rlMacMulticastMaxEntriesNum=rlMacMulticastMaxEntriesNum, rlIgmpSnoopHostAgingTime=rlIgmpSnoopHostAgingTime, rlIgmpMldSnoopVlanOperStartupQueryInterval=rlIgmpMldSnoopVlanOperStartupQueryInterval, rlMacMulticastUnregFilterEnable=rlMacMulticastUnregFilterEnable, rlIgmpSnoopMulticastTvGroup=rlIgmpSnoopMulticastTvGroup, rlIgmpMldSnoopVlanOperQueryMaxResponseTime=rlIgmpMldSnoopVlanOperQueryMaxResponseTime, rlIgmpMldSnoopMembershipVlanTag=rlIgmpMldSnoopMembershipVlanTag, rlIgmpMldSnoopVlanTable=rlIgmpMldSnoopVlanTable, rlIgmpSnoopIGMP224ReportsHandle=rlIgmpSnoopIGMP224ReportsHandle, rlMldSnoopQuerierOperAddrInetAddressType=rlMldSnoopQuerierOperAddrInetAddressType, rlIgmpMldSnoopMembershipExcPortlist=rlIgmpMldSnoopMembershipExcPortlist, rlIgmpSnoop=rlIgmpSnoop)
