#
# PySNMP MIB module VPLS-BGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VPLS-BGP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:28:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
pwIndex, = mibBuilder.importSymbols("PW-STD-MIB", "pwIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, Bits, Integer32, ObjectIdentity, Counter32, Gauge32, ModuleIdentity, transmission, NotificationType, IpAddress, MibIdentifier, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "Integer32", "ObjectIdentity", "Counter32", "Gauge32", "ModuleIdentity", "transmission", "NotificationType", "IpAddress", "MibIdentifier", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, RowStatus, TextualConvention, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "StorageType")
vplsConfigIndex, = mibBuilder.importSymbols("VPLS-GENERIC-MIB", "vplsConfigIndex")
vplsBgpMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 276))
vplsBgpMIB.setRevisions(('2014-05-19 12:00',))
if mibBuilder.loadTexts: vplsBgpMIB.setLastUpdated('201405191200Z')
if mibBuilder.loadTexts: vplsBgpMIB.setOrganization('Layer 2 Virtual Private Networks (L2VPN) Working Group')
vplsBgpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 276, 1))
vplsBgpConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 276, 2))
vplsBgpConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 276, 1, 1), )
if mibBuilder.loadTexts: vplsBgpConfigTable.setStatus('current')
vplsBgpConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 276, 1, 1, 1), ).setIndexNames((0, "VPLS-GENERIC-MIB", "vplsConfigIndex"))
if mibBuilder.loadTexts: vplsBgpConfigEntry.setStatus('current')
vplsBgpConfigVERangeSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vplsBgpConfigVERangeSize.setStatus('current')
vplsBgpVETable = MibTable((1, 3, 6, 1, 2, 1, 10, 276, 1, 2), )
if mibBuilder.loadTexts: vplsBgpVETable.setStatus('current')
vplsBgpVEEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 276, 1, 2, 1), ).setIndexNames((0, "VPLS-GENERIC-MIB", "vplsConfigIndex"), (0, "VPLS-BGP-MIB", "vplsBgpVEId"))
if mibBuilder.loadTexts: vplsBgpVEEntry.setStatus('current')
vplsBgpVEId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: vplsBgpVEId.setStatus('current')
vplsBgpVEName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpVEName.setStatus('current')
vplsBgpVEPreference = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpVEPreference.setStatus('current')
vplsBgpVERowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpVERowStatus.setStatus('current')
vplsBgpVEStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 2, 1, 6), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpVEStorageType.setStatus('current')
vplsBgpPwBindTable = MibTable((1, 3, 6, 1, 2, 1, 10, 276, 1, 3), )
if mibBuilder.loadTexts: vplsBgpPwBindTable.setStatus('current')
vplsBgpPwBindEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 276, 1, 3, 1), ).setIndexNames((0, "VPLS-GENERIC-MIB", "vplsConfigIndex"), (0, "PW-STD-MIB", "pwIndex"))
if mibBuilder.loadTexts: vplsBgpPwBindEntry.setStatus('current')
vplsBgpPwBindLocalVEId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vplsBgpPwBindLocalVEId.setStatus('current')
vplsBgpPwBindRemoteVEId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 276, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vplsBgpPwBindRemoteVEId.setStatus('current')
vplsBgpCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 276, 2, 1))
vplsBgpModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 276, 2, 1, 1)).setObjects(("VPLS-BGP-MIB", "vplsBgpConfigGroup"), ("VPLS-BGP-MIB", "vplsBgpVEGroup"), ("VPLS-BGP-MIB", "vplsBgpPwBindGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsBgpModuleFullCompliance = vplsBgpModuleFullCompliance.setStatus('current')
vplsBgpModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 276, 2, 1, 2)).setObjects(("VPLS-BGP-MIB", "vplsBgpConfigGroup"), ("VPLS-BGP-MIB", "vplsBgpVEGroup"), ("VPLS-BGP-MIB", "vplsBgpPwBindGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsBgpModuleReadOnlyCompliance = vplsBgpModuleReadOnlyCompliance.setStatus('current')
vplsBgpGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 276, 2, 2))
vplsBgpConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 276, 2, 2, 1)).setObjects(("VPLS-BGP-MIB", "vplsBgpConfigVERangeSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsBgpConfigGroup = vplsBgpConfigGroup.setStatus('current')
vplsBgpVEGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 276, 2, 2, 2)).setObjects(("VPLS-BGP-MIB", "vplsBgpVEName"), ("VPLS-BGP-MIB", "vplsBgpVEPreference"), ("VPLS-BGP-MIB", "vplsBgpVERowStatus"), ("VPLS-BGP-MIB", "vplsBgpVEStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsBgpVEGroup = vplsBgpVEGroup.setStatus('current')
vplsBgpPwBindGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 276, 2, 2, 3)).setObjects(("VPLS-BGP-MIB", "vplsBgpPwBindLocalVEId"), ("VPLS-BGP-MIB", "vplsBgpPwBindRemoteVEId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsBgpPwBindGroup = vplsBgpPwBindGroup.setStatus('current')
mibBuilder.exportSymbols("VPLS-BGP-MIB", vplsBgpVEEntry=vplsBgpVEEntry, vplsBgpModuleFullCompliance=vplsBgpModuleFullCompliance, vplsBgpConfigEntry=vplsBgpConfigEntry, vplsBgpVEName=vplsBgpVEName, vplsBgpConfigGroup=vplsBgpConfigGroup, vplsBgpObjects=vplsBgpObjects, vplsBgpVEId=vplsBgpVEId, vplsBgpPwBindTable=vplsBgpPwBindTable, vplsBgpConformance=vplsBgpConformance, vplsBgpModuleReadOnlyCompliance=vplsBgpModuleReadOnlyCompliance, vplsBgpVEPreference=vplsBgpVEPreference, vplsBgpVEGroup=vplsBgpVEGroup, vplsBgpCompliances=vplsBgpCompliances, vplsBgpConfigTable=vplsBgpConfigTable, vplsBgpVEStorageType=vplsBgpVEStorageType, PYSNMP_MODULE_ID=vplsBgpMIB, vplsBgpVERowStatus=vplsBgpVERowStatus, vplsBgpPwBindEntry=vplsBgpPwBindEntry, vplsBgpVETable=vplsBgpVETable, vplsBgpPwBindLocalVEId=vplsBgpPwBindLocalVEId, vplsBgpPwBindRemoteVEId=vplsBgpPwBindRemoteVEId, vplsBgpConfigVERangeSize=vplsBgpConfigVERangeSize, vplsBgpPwBindGroup=vplsBgpPwBindGroup, vplsBgpGroups=vplsBgpGroups, vplsBgpMIB=vplsBgpMIB)
