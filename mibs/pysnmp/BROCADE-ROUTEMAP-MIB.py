#
# PySNMP MIB module BROCADE-ROUTEMAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BROCADE-ROUTEMAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
AclNumber, Action = mibBuilder.importSymbols("FOUNDRY-SN-IP-ACL-MIB", "AclNumber", "Action")
FdryVlanIdOrNoneTC, brcdRouteMap = mibBuilder.importSymbols("FOUNDRY-SN-SWITCH-GROUP-MIB", "FdryVlanIdOrNoneTC", "brcdRouteMap")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Bits, ObjectIdentity, Gauge32, TimeTicks, Counter64, ModuleIdentity, iso, MibIdentifier, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Bits", "ObjectIdentity", "Gauge32", "TimeTicks", "Counter64", "ModuleIdentity", "iso", "MibIdentifier", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
TextualConvention, MacAddress, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "RowStatus", "TruthValue", "DisplayString")
brcdRouteMapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1))
brcdRouteMapMIB.setRevisions(('2011-11-28 00:00',))
if mibBuilder.loadTexts: brcdRouteMapMIB.setLastUpdated('201111280000Z')
if mibBuilder.loadTexts: brcdRouteMapMIB.setOrganization('Brocade Communications Systems, Inc.')
brcdRouteMapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1))
brcdRouteMapShow = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2))
brcdRouteMapTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 1), )
if mibBuilder.loadTexts: brcdRouteMapTable.setStatus('current')
brcdRouteMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 1, 1), ).setIndexNames((0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapName"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapSequence"))
if mibBuilder.loadTexts: brcdRouteMapEntry.setStatus('current')
brcdRouteMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 1, 1, 1), DisplayString())
if mibBuilder.loadTexts: brcdRouteMapName.setStatus('current')
brcdRouteMapSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: brcdRouteMapSequence.setStatus('current')
brcdRouteMapAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 1, 1, 3), Action()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapAction.setStatus('current')
brcdRouteMapRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapRuleName.setStatus('current')
brcdRouteMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapRowStatus.setStatus('current')
brcdRouteMapMatchTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 2), )
if mibBuilder.loadTexts: brcdRouteMapMatchTable.setStatus('current')
brcdRouteMapMatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 2, 1), ).setIndexNames((0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapName"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapSequence"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapMatchSequence"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapMatchType"))
if mibBuilder.loadTexts: brcdRouteMapMatchEntry.setStatus('current')
brcdRouteMapMatchSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: brcdRouteMapMatchSequence.setStatus('current')
brcdRouteMapMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("matchUndefined", 0), ("matchAsPath", 1), ("matchBgpCommunityName", 2), ("matchBgpCommunityNameExact", 3), ("matchBgpExtCommunityNumber", 4), ("matchInterfaces", 5), ("matchIpv4AddressAclNames", 6), ("matchIpv4AddressAclNumbers", 7), ("matchIpv4AddressPrefixList", 8), ("matchIpv4NextHopAclNames", 9), ("matchIpv4NextHopAclNumbers", 10), ("matchIpv4NextHopPrefixList", 11), ("matchIpv4RouteSourceAclNames", 12), ("matchIpv4RouteSourceAclNumbers", 13), ("matchIpv4RouteSourcePrefixList", 14), ("matchIpv6AddressAclNames", 15), ("matchIpv6AddressPrefixList", 16), ("matchIpv6NextHopPrefixList", 17), ("matchIpv6RouteSourcePrefixList", 18), ("matchMetric", 19), ("matchRoutingProtocol", 20), ("matchRouteType", 21), ("matchTags", 22))))
if mibBuilder.loadTexts: brcdRouteMapMatchType.setStatus('current')
brcdRouteMapMatchValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapMatchValue.setStatus('current')
brcdRouteMapMatchCliString = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdRouteMapMatchCliString.setStatus('current')
brcdRouteMapMatchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapMatchRowStatus.setStatus('current')
brcdRouteMapSetTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 3), )
if mibBuilder.loadTexts: brcdRouteMapSetTable.setStatus('current')
brcdRouteMapSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 3, 1), ).setIndexNames((0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapName"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapSequence"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapSetSequence"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapSetType"))
if mibBuilder.loadTexts: brcdRouteMapSetEntry.setStatus('current')
brcdRouteMapSetSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: brcdRouteMapSetSequence.setStatus('current')
brcdRouteMapSetType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("setUnDefinedType", 0), ("setAsPath", 1), ("setAutomaticTag", 2), ("setDeleteCommunityList", 3), ("setCommunityNumber", 4), ("setCommunityFlag", 5), ("setDampening", 6), ("setDistance", 7), ("setExtCommunityRT", 8), ("setExtCommunityRTAdditive", 9), ("setExtCommunitySOO", 10), ("setOutputInterfaces", 11), ("setNextHopIpv4Addr", 12), ("setNextHopIpv4AddrWithPreserveVlan", 13), ("setNextHopIpv6Addr", 14), ("setNextHopIpv6AddrWithPreserveVlan", 15), ("setNextHopIpPeerAddr", 16), ("setIsisLevel", 17), ("setLocalPreference", 18), ("setMetricType", 19), ("setMetric", 20), ("setNextHopFloodVlan", 21), ("setNextHopFloodVlanPreserveVlan", 22), ("setNextHopFloodVlanOutgoingDa", 23), ("setNextHopIpTunnel", 24), ("setNextHopLsp", 25), ("setBgpOrigin", 26), ("setTag", 27), ("setWeight", 28))))
if mibBuilder.loadTexts: brcdRouteMapSetType.setStatus('current')
brcdRouteMapSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 3, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapSetValue.setStatus('current')
brcdRouteMapSetCliString = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdRouteMapSetCliString.setStatus('current')
brcdRouteMapSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapSetRowStatus.setStatus('current')
brcdRouteMapBindTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 4), )
if mibBuilder.loadTexts: brcdRouteMapBindTable.setStatus('current')
brcdRouteMapBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 4, 1), ).setIndexNames((0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapBindIfIndex"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRouteMapBindIpType"))
if mibBuilder.loadTexts: brcdRouteMapBindEntry.setStatus('current')
brcdRouteMapBindIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: brcdRouteMapBindIfIndex.setStatus('current')
brcdRouteMapBindIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: brcdRouteMapBindIpType.setStatus('current')
brcdRouteMapBindMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 4, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapBindMapName.setStatus('current')
brcdRouteMapBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdRouteMapBindRowStatus.setStatus('current')
brcdRMapRuleDisplayTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1), )
if mibBuilder.loadTexts: brcdRMapRuleDisplayTable.setStatus('current')
brcdRMapRuleDisplayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1), ).setIndexNames((0, "BROCADE-ROUTEMAP-MIB", "brcdRMapRuleDisplayRuleName"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRMapRuleDisplayRouteMapName"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRMapRuleDisplaySequence"), (0, "BROCADE-ROUTEMAP-MIB", "brcdRMapRuleDisplayIpType"))
if mibBuilder.loadTexts: brcdRMapRuleDisplayEntry.setStatus('current')
brcdRMapRuleDisplayRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 1), DisplayString())
if mibBuilder.loadTexts: brcdRMapRuleDisplayRuleName.setStatus('current')
brcdRMapRuleDisplayRouteMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 2), DisplayString())
if mibBuilder.loadTexts: brcdRMapRuleDisplayRouteMapName.setStatus('current')
brcdRMapRuleDisplaySequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: brcdRMapRuleDisplaySequence.setStatus('current')
brcdRMapRuleDisplayIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 4), InetAddressType())
if mibBuilder.loadTexts: brcdRMapRuleDisplayIpType.setStatus('current')
brcdRMapRuleDisplayInputInterfaceList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdRMapRuleDisplayInputInterfaceList.setStatus('current')
brcdRMapRuleDisplayAclMatchFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdRMapRuleDisplayAclMatchFilter.setStatus('current')
brcdRMapRuleDisplayOutputVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdRMapRuleDisplayOutputVlan.setStatus('current')
brcdRMapRuleDisplayOutputPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdRMapRuleDisplayOutputPort.setStatus('current')
brcdRMapRuleDisplayOutputIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 39, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brcdRMapRuleDisplayOutputIPAddress.setStatus('current')
mibBuilder.exportSymbols("BROCADE-ROUTEMAP-MIB", brcdRouteMapMIB=brcdRouteMapMIB, brcdRouteMapMatchTable=brcdRouteMapMatchTable, PYSNMP_MODULE_ID=brcdRouteMapMIB, brcdRMapRuleDisplayTable=brcdRMapRuleDisplayTable, brcdRouteMapBindTable=brcdRouteMapBindTable, brcdRouteMapBindIfIndex=brcdRouteMapBindIfIndex, brcdRouteMapBindRowStatus=brcdRouteMapBindRowStatus, brcdRouteMapSetEntry=brcdRouteMapSetEntry, brcdRMapRuleDisplayOutputVlan=brcdRMapRuleDisplayOutputVlan, brcdRouteMapSetTable=brcdRouteMapSetTable, brcdRMapRuleDisplayRouteMapName=brcdRMapRuleDisplayRouteMapName, brcdRouteMapMatchEntry=brcdRouteMapMatchEntry, brcdRouteMapBindEntry=brcdRouteMapBindEntry, brcdRouteMapConfig=brcdRouteMapConfig, brcdRouteMapTable=brcdRouteMapTable, brcdRouteMapShow=brcdRouteMapShow, brcdRouteMapAction=brcdRouteMapAction, brcdRouteMapMatchType=brcdRouteMapMatchType, brcdRouteMapSetSequence=brcdRouteMapSetSequence, brcdRouteMapSetValue=brcdRouteMapSetValue, brcdRouteMapSetCliString=brcdRouteMapSetCliString, brcdRouteMapRuleName=brcdRouteMapRuleName, brcdRouteMapSetType=brcdRouteMapSetType, brcdRouteMapSetRowStatus=brcdRouteMapSetRowStatus, brcdRouteMapBindIpType=brcdRouteMapBindIpType, brcdRMapRuleDisplayOutputPort=brcdRMapRuleDisplayOutputPort, brcdRouteMapEntry=brcdRouteMapEntry, brcdRouteMapMatchSequence=brcdRouteMapMatchSequence, brcdRMapRuleDisplayOutputIPAddress=brcdRMapRuleDisplayOutputIPAddress, brcdRouteMapName=brcdRouteMapName, brcdRMapRuleDisplaySequence=brcdRMapRuleDisplaySequence, brcdRMapRuleDisplayInputInterfaceList=brcdRMapRuleDisplayInputInterfaceList, brcdRMapRuleDisplayEntry=brcdRMapRuleDisplayEntry, brcdRouteMapBindMapName=brcdRouteMapBindMapName, brcdRMapRuleDisplayIpType=brcdRMapRuleDisplayIpType, brcdRouteMapMatchRowStatus=brcdRouteMapMatchRowStatus, brcdRouteMapMatchCliString=brcdRouteMapMatchCliString, brcdRouteMapRowStatus=brcdRouteMapRowStatus, brcdRouteMapSequence=brcdRouteMapSequence, brcdRMapRuleDisplayAclMatchFilter=brcdRMapRuleDisplayAclMatchFilter, brcdRMapRuleDisplayRuleName=brcdRMapRuleDisplayRuleName, brcdRouteMapMatchValue=brcdRouteMapMatchValue)
