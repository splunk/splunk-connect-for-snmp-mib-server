#
# PySNMP MIB module AT-PVSTPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-PVSTPM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:14:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
modules, = mibBuilder.importSymbols("AT-SMI-MIB", "modules")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, MibIdentifier, Gauge32, Unsigned32, TimeTicks, ObjectIdentity, IpAddress, NotificationType, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "MibIdentifier", "Gauge32", "Unsigned32", "TimeTicks", "ObjectIdentity", "IpAddress", "NotificationType", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pvstpm = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140))
pvstpm.setRevisions(('2006-03-29 16:51',))
if mibBuilder.loadTexts: pvstpm.setLastUpdated('200603291651Z')
if mibBuilder.loadTexts: pvstpm.setOrganization('Allied Telesis, Inc')
pvstpmEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 0))
pvstpmEventVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 1))
pvstpmBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 1, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pvstpmBridgeId.setStatus('current')
pvstpmTopologyChangeVlan = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 1, 2), VlanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pvstpmTopologyChangeVlan.setStatus('current')
pvstpmRxPort = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pvstpmRxPort.setStatus('current')
pvstpmRxVlan = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 1, 4), VlanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pvstpmRxVlan.setStatus('current')
pvstpmTxVlan = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 1, 5), VlanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pvstpmTxVlan.setStatus('current')
pvstpmTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 0, 1)).setObjects(("AT-PVSTPM-MIB", "pvstpmBridgeId"), ("AT-PVSTPM-MIB", "pvstpmTopologyChangeVlan"))
if mibBuilder.loadTexts: pvstpmTopologyChange.setStatus('current')
pvstpmInconsistentBPDU = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 140, 0, 2)).setObjects(("AT-PVSTPM-MIB", "pvstpmBridgeId"), ("AT-PVSTPM-MIB", "pvstpmRxPort"), ("AT-PVSTPM-MIB", "pvstpmRxVlan"), ("AT-PVSTPM-MIB", "pvstpmTxVlan"))
if mibBuilder.loadTexts: pvstpmInconsistentBPDU.setStatus('current')
mibBuilder.exportSymbols("AT-PVSTPM-MIB", pvstpmInconsistentBPDU=pvstpmInconsistentBPDU, pvstpmBridgeId=pvstpmBridgeId, pvstpmTxVlan=pvstpmTxVlan, PYSNMP_MODULE_ID=pvstpm, pvstpmEvents=pvstpmEvents, pvstpmEventVariables=pvstpmEventVariables, pvstpm=pvstpm, pvstpmTopologyChangeVlan=pvstpmTopologyChangeVlan, pvstpmRxPort=pvstpmRxPort, pvstpmRxVlan=pvstpmRxVlan, pvstpmTopologyChange=pvstpmTopologyChange)
