#
# PySNMP MIB module SNMP553S-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNMP553S-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:00:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
dsx1, = mibBuilder.importSymbols("GDCDSX1-MIB", "dsx1")
SCinstance, = mibBuilder.importSymbols("GDCMACRO-MIB", "SCinstance")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, NotificationType, Bits, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, ObjectIdentity, Gauge32, Counter32, Counter64, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "Bits", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "Gauge32", "Counter32", "Counter64", "TimeTicks", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snmp553s = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3))
snmp553sc = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 4))
snmp553sAlarmData = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1))
snmp553sNoResponseAlm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 1))
snmp553sDiagRxErrAlm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 2))
snmp553sPowerUpAlm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 3))
snmp553sNvRamCorrupt = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 4))
snmp553sUnitFailure = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 5))
snmp553sMbiLock = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 6))
snmp553sLocalPwrFail = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 7))
snmp553sTimingLoss = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 8))
snmp553sStatusChange = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 9))
snmp553sUnsoTest = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 10))
snmp553sLossOfSignal = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 11))
snmp553sLossOfFrame = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 12))
snmp553sAis = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 13))
snmp553sReceivedYellow = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 14))
snmp553sUnavailSignalState = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 15))
snmp553sExcessiveZeros = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 16))
snmp553sLowAverageDensity = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 17))
snmp553sControlledSlips = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 18))
snmp553sBipolarViolations = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 19))
snmp553sCrcErrors = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 1, 20))
snmp553sMIBversion = MibScalar((1, 3, 6, 1, 4, 1, 498, 6, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sMIBversion.setStatus('mandatory')
snmp553sMaintenanceTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 3, 3), )
if mibBuilder.loadTexts: snmp553sMaintenanceTable.setStatus('mandatory')
snmp553sMaintenanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1), ).setIndexNames((0, "SNMP553S-MGMT-MIB", "snmp553sMaintenanceIndex"))
if mibBuilder.loadTexts: snmp553sMaintenanceEntry.setStatus('mandatory')
snmp553sMaintenanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sMaintenanceIndex.setStatus('mandatory')
snmp553sCascadePresent = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notPresent", 1), ("present", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sCascadePresent.setStatus('mandatory')
snmp553sExtModemPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notPresent", 1), ("present", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sExtModemPresent.setStatus('mandatory')
snmp553sUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sUnitType.setStatus('mandatory')
snmp553sManagementSource = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("modemSnmp", 1), ("secondaryChannel", 2), ("fdl", 3), ("daisyChain", 4), ("bus485", 5), ("localSnmp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sManagementSource.setStatus('mandatory')
snmp553sProductType = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("snmp553sd1ifp", 1), ("snmp553sd3ifp", 2), ("snmp553scifp", 3), ("nms553d1", 4), ("nms553d1ifp", 5), ("nms553d3ifp", 6), ("nms553c", 7), ("nms553cifp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sProductType.setStatus('mandatory')
snmp553sLedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sLedStatus.setStatus('mandatory')
snmp553sUnitSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sUnitSerialNumber.setStatus('mandatory')
snmp553sSaveAllConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("saveConfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sSaveAllConfig.setStatus('mandatory')
snmp553sUnitConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 3, 4), )
if mibBuilder.loadTexts: snmp553sUnitConfigTable.setStatus('mandatory')
snmp553sUnitConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 3, 4, 1), ).setIndexNames((0, "SNMP553S-MGMT-MIB", "snmp553sUnitConfigIndex"))
if mibBuilder.loadTexts: snmp553sUnitConfigEntry.setStatus('mandatory')
snmp553sUnitConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 4, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sUnitConfigIndex.setStatus('mandatory')
snmp553sSaveCsuConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("saveConfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sSaveCsuConfig.setStatus('mandatory')
snmp553sShelfCommander = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sShelfCommander.setStatus('mandatory')
snmp553sForceFakeMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sForceFakeMaster.setStatus('mandatory')
snmp553sDaisyChainBps = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bps75", 2), ("bps9600", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sDaisyChainBps.setStatus('mandatory')
snmp553sChannelConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 3, 5), )
if mibBuilder.loadTexts: snmp553sChannelConfigTable.setStatus('mandatory')
snmp553sChannelConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 3, 5, 1), ).setIndexNames((0, "SNMP553S-MGMT-MIB", "snmp553sChannelConfigIndex"))
if mibBuilder.loadTexts: snmp553sChannelConfigEntry.setStatus('mandatory')
snmp553sChannelConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 5, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sChannelConfigIndex.setStatus('mandatory')
snmp553sDCCCompatibilityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nms553", 1), ("nms510", 2), ("other", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sDCCCompatibilityMode.setStatus('mandatory')
snmp553sSaveDsuConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("saveConfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sSaveDsuConfig.setStatus('mandatory')
snmp553sDiagTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 3, 6), )
if mibBuilder.loadTexts: snmp553sDiagTable.setStatus('mandatory')
snmp553sDiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 3, 6, 1), ).setIndexNames((0, "SNMP553S-MGMT-MIB", "snmp553sDiagIndex"))
if mibBuilder.loadTexts: snmp553sDiagEntry.setStatus('mandatory')
snmp553sDiagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 6, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sDiagIndex.setStatus('mandatory')
snmp553sDiagTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("noLimit", 1), ("testTime1Min", 2), ("testTime2Mins", 3), ("testTime3Mins", 4), ("testTime4Mins", 5), ("testTime5Mins", 6), ("testTime6Mins", 7), ("testTime7Mins", 8), ("testTime8Mins", 9), ("testTime9Mins", 10), ("testTime10Mins", 11), ("testTime15Mins", 12), ("testTime20Mins", 13), ("testTime25Mins", 14), ("testTime30Mins", 15), ("testTime30Secs", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sDiagTestDuration.setStatus('mandatory')
snmp553sDiagProgPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sDiagProgPattern.setStatus('mandatory')
snmp553sAlarmHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 3, 7), )
if mibBuilder.loadTexts: snmp553sAlarmHistoryTable.setStatus('mandatory')
snmp553sAlarmHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1), ).setIndexNames((0, "SNMP553S-MGMT-MIB", "snmp553sAlarmHistoryIndex"), (0, "SNMP553S-MGMT-MIB", "snmp553sAlarmHistoryIdentifier"))
if mibBuilder.loadTexts: snmp553sAlarmHistoryEntry.setStatus('mandatory')
snmp553sAlarmHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmHistoryIndex.setStatus('mandatory')
snmp553sAlarmHistoryIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmHistoryIdentifier.setStatus('mandatory')
snmp553sAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmCount.setStatus('mandatory')
snmp553sAlarmFirstOccurrenceHours = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmFirstOccurrenceHours.setStatus('mandatory')
snmp553sAlarmFirstOccurrenceMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmFirstOccurrenceMinutes.setStatus('mandatory')
snmp553sAlarmFirstOccurrenceSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmFirstOccurrenceSeconds.setStatus('mandatory')
snmp553sAlarmFirstOccurrenceMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmFirstOccurrenceMonth.setStatus('mandatory')
snmp553sAlarmFirstOccurrenceDay = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmFirstOccurrenceDay.setStatus('mandatory')
snmp553sAlarmFirstOccurrenceYear = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmFirstOccurrenceYear.setStatus('mandatory')
snmp553sAlarmLastOccurrenceHours = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmLastOccurrenceHours.setStatus('mandatory')
snmp553sAlarmLastOccurrenceMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmLastOccurrenceMinutes.setStatus('mandatory')
snmp553sAlarmLastOccurrenceSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmLastOccurrenceSeconds.setStatus('mandatory')
snmp553sAlarmLastOccurrenceMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmLastOccurrenceMonth.setStatus('mandatory')
snmp553sAlarmLastOccurrenceDay = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmLastOccurrenceDay.setStatus('mandatory')
snmp553sAlarmLastOccurrenceYear = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 7, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmLastOccurrenceYear.setStatus('mandatory')
snmp553sAlarmMaintenanceTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 3, 8), )
if mibBuilder.loadTexts: snmp553sAlarmMaintenanceTable.setStatus('mandatory')
snmp553sAlarmMaintenanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1), ).setIndexNames((0, "SNMP553S-MGMT-MIB", "snmp553sAlarmMaintenanceIndex"))
if mibBuilder.loadTexts: snmp553sAlarmMaintenanceEntry.setStatus('mandatory')
snmp553sAlarmMaintenanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sAlarmMaintenanceIndex.setStatus('mandatory')
snmp553sClearAlarmHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("norm", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sClearAlarmHistory.setStatus('mandatory')
snmp553sRTCHours = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sRTCHours.setStatus('mandatory')
snmp553sRTCMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sRTCMinutes.setStatus('mandatory')
snmp553sRTCSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sRTCSeconds.setStatus('mandatory')
snmp553sRTCMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sRTCMonth.setStatus('mandatory')
snmp553sRTCDay = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sRTCDay.setStatus('mandatory')
snmp553sRTCYear = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sRTCYear.setStatus('mandatory')
snmp553sTimeOfLastAlarmClear = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 8, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sTimeOfLastAlarmClear.setStatus('mandatory')
mibBuilder.exportSymbols("SNMP553S-MGMT-MIB", snmp553sLossOfSignal=snmp553sLossOfSignal, snmp553sAlarmLastOccurrenceHours=snmp553sAlarmLastOccurrenceHours, snmp553sAis=snmp553sAis, snmp553sSaveAllConfig=snmp553sSaveAllConfig, snmp553sDiagRxErrAlm=snmp553sDiagRxErrAlm, snmp553sAlarmFirstOccurrenceHours=snmp553sAlarmFirstOccurrenceHours, snmp553sDiagTestDuration=snmp553sDiagTestDuration, snmp553sAlarmCount=snmp553sAlarmCount, snmp553sDiagEntry=snmp553sDiagEntry, snmp553sManagementSource=snmp553sManagementSource, snmp553sUnitConfigIndex=snmp553sUnitConfigIndex, snmp553sCrcErrors=snmp553sCrcErrors, snmp553sMaintenanceEntry=snmp553sMaintenanceEntry, snmp553sAlarmHistoryIndex=snmp553sAlarmHistoryIndex, snmp553sMaintenanceIndex=snmp553sMaintenanceIndex, snmp553sDiagTable=snmp553sDiagTable, snmp553sAlarmFirstOccurrenceYear=snmp553sAlarmFirstOccurrenceYear, snmp553sRTCMinutes=snmp553sRTCMinutes, snmp553sMIBversion=snmp553sMIBversion, snmp553sAlarmLastOccurrenceDay=snmp553sAlarmLastOccurrenceDay, snmp553sClearAlarmHistory=snmp553sClearAlarmHistory, snmp553sMbiLock=snmp553sMbiLock, snmp553sChannelConfigEntry=snmp553sChannelConfigEntry, snmp553s=snmp553s, snmp553sChannelConfigIndex=snmp553sChannelConfigIndex, snmp553sAlarmMaintenanceIndex=snmp553sAlarmMaintenanceIndex, snmp553sForceFakeMaster=snmp553sForceFakeMaster, snmp553sUnitType=snmp553sUnitType, snmp553sAlarmFirstOccurrenceDay=snmp553sAlarmFirstOccurrenceDay, snmp553sTimingLoss=snmp553sTimingLoss, snmp553sAlarmFirstOccurrenceMinutes=snmp553sAlarmFirstOccurrenceMinutes, snmp553sSaveDsuConfig=snmp553sSaveDsuConfig, snmp553sUnitConfigTable=snmp553sUnitConfigTable, snmp553sAlarmData=snmp553sAlarmData, snmp553sNoResponseAlm=snmp553sNoResponseAlm, snmp553sLedStatus=snmp553sLedStatus, snmp553sAlarmFirstOccurrenceSeconds=snmp553sAlarmFirstOccurrenceSeconds, snmp553sUnsoTest=snmp553sUnsoTest, snmp553sUnavailSignalState=snmp553sUnavailSignalState, snmp553sAlarmMaintenanceEntry=snmp553sAlarmMaintenanceEntry, snmp553sShelfCommander=snmp553sShelfCommander, snmp553sAlarmLastOccurrenceYear=snmp553sAlarmLastOccurrenceYear, snmp553sMaintenanceTable=snmp553sMaintenanceTable, snmp553sAlarmLastOccurrenceSeconds=snmp553sAlarmLastOccurrenceSeconds, snmp553sLowAverageDensity=snmp553sLowAverageDensity, snmp553sAlarmHistoryEntry=snmp553sAlarmHistoryEntry, snmp553sUnitFailure=snmp553sUnitFailure, snmp553sDiagProgPattern=snmp553sDiagProgPattern, snmp553sc=snmp553sc, snmp553sStatusChange=snmp553sStatusChange, snmp553sChannelConfigTable=snmp553sChannelConfigTable, snmp553sRTCYear=snmp553sRTCYear, snmp553sReceivedYellow=snmp553sReceivedYellow, snmp553sAlarmHistoryTable=snmp553sAlarmHistoryTable, snmp553sBipolarViolations=snmp553sBipolarViolations, snmp553sCascadePresent=snmp553sCascadePresent, snmp553sAlarmLastOccurrenceMinutes=snmp553sAlarmLastOccurrenceMinutes, snmp553sDCCCompatibilityMode=snmp553sDCCCompatibilityMode, snmp553sLossOfFrame=snmp553sLossOfFrame, snmp553sPowerUpAlm=snmp553sPowerUpAlm, snmp553sRTCMonth=snmp553sRTCMonth, snmp553sRTCDay=snmp553sRTCDay, snmp553sNvRamCorrupt=snmp553sNvRamCorrupt, snmp553sRTCHours=snmp553sRTCHours, snmp553sSaveCsuConfig=snmp553sSaveCsuConfig, snmp553sRTCSeconds=snmp553sRTCSeconds, snmp553sAlarmHistoryIdentifier=snmp553sAlarmHistoryIdentifier, snmp553sAlarmLastOccurrenceMonth=snmp553sAlarmLastOccurrenceMonth, snmp553sTimeOfLastAlarmClear=snmp553sTimeOfLastAlarmClear, snmp553sExcessiveZeros=snmp553sExcessiveZeros, snmp553sProductType=snmp553sProductType, snmp553sControlledSlips=snmp553sControlledSlips, snmp553sUnitConfigEntry=snmp553sUnitConfigEntry, snmp553sAlarmMaintenanceTable=snmp553sAlarmMaintenanceTable, snmp553sLocalPwrFail=snmp553sLocalPwrFail, snmp553sDiagIndex=snmp553sDiagIndex, snmp553sUnitSerialNumber=snmp553sUnitSerialNumber, snmp553sDaisyChainBps=snmp553sDaisyChainBps, snmp553sAlarmFirstOccurrenceMonth=snmp553sAlarmFirstOccurrenceMonth, snmp553sExtModemPresent=snmp553sExtModemPresent)
