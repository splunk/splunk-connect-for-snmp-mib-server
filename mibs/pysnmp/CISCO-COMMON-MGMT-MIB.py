#
# PySNMP MIB module CISCO-COMMON-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-COMMON-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
usmNoPrivProtocol, usmNoAuthProtocol = mibBuilder.importSymbols("SNMP-USER-BASED-SM-MIB", "usmNoPrivProtocol", "usmNoAuthProtocol")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, Unsigned32, Counter32, iso, NotificationType, ObjectIdentity, IpAddress, Gauge32, dod = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "Unsigned32", "Counter32", "iso", "NotificationType", "ObjectIdentity", "IpAddress", "Gauge32", "dod")
TruthValue, StorageType, AutonomousType, DateAndTime, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "StorageType", "AutonomousType", "DateAndTime", "DisplayString", "TextualConvention", "RowStatus")
ciscoCommonMgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 443))
ciscoCommonMgmtMIB.setRevisions(('2008-06-13 00:00', '2005-06-23 00:00',))
if mibBuilder.loadTexts: ciscoCommonMgmtMIB.setLastUpdated('200806130000Z')
if mibBuilder.loadTexts: ciscoCommonMgmtMIB.setOrganization('Cisco Systems Inc.')
ciscoCommonMgmtNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 443, 0))
ciscoCommonMgmtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 443, 1))
ciscoCommonMgmtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 443, 2))
ccmUserConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1))
ccmCommonMaxUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmCommonMaxUsers.setStatus('current')
ccmCommonUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmCommonUsers.setStatus('current')
ccmCommonUsersGlobalEnforcePriv = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccmCommonUsersGlobalEnforcePriv.setStatus('current')
ccmCommonUserLastChange = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmCommonUserLastChange.setStatus('current')
ccmCommonUserTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5), )
if mibBuilder.loadTexts: ccmCommonUserTable.setStatus('current')
ccmCommonUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-COMMON-MGMT-MIB", "ccmCommonUserName"))
if mibBuilder.loadTexts: ccmCommonUserEntry.setStatus('current')
ccmCommonUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: ccmCommonUserName.setStatus('current')
ccmCommonUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 2), DisplayString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserPassword.setStatus('current')
ccmCommonUserExpiryDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 3), DateAndTime().clone(hexValue="0000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserExpiryDate.setStatus('current')
ccmCommonUserSshKeyFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserSshKeyFilename.setStatus('current')
ccmCommonUserSshKeyConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmCommonUserSshKeyConfigured.setStatus('current')
ccmCommonUserSNMPAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 6), AutonomousType().clone((1, 3, 6, 1, 6, 3, 10, 1, 1, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserSNMPAuthProtocol.setStatus('current')
ccmCommonUserSNMPPrivProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 7), AutonomousType().clone((1, 3, 6, 1, 6, 3, 10, 1, 2, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserSNMPPrivProtocol.setStatus('current')
ccmCommonUserCredType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("localCredentialStore", 2), ("remoteCredentialStore", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmCommonUserCredType.setStatus('current')
ccmCommonUserStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserStorageType.setStatus('current')
ccmCommonUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 5, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserRowStatus.setStatus('current')
ccmCommonUserRoleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 6), )
if mibBuilder.loadTexts: ccmCommonUserRoleTable.setStatus('current')
ccmCommonUserRoleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-COMMON-MGMT-MIB", "ccmCommonUserName"), (0, "CISCO-COMMON-MGMT-MIB", "ccmCommonUserRoleName"))
if mibBuilder.loadTexts: ccmCommonUserRoleEntry.setStatus('current')
ccmCommonUserRoleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 6, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: ccmCommonUserRoleName.setStatus('current')
ccmCommonUserRoleStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 6, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserRoleStorageType.setStatus('current')
ccmCommonUserRoleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccmCommonUserRoleRowStatus.setStatus('current')
ccmCommonUserCacheTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 443, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccmCommonUserCacheTimeout.setStatus('current')
ciscoCommonMgmtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 443, 2, 1))
ciscoCommonMgmtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 443, 2, 2))
ciscoCommonMgmtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 443, 2, 1, 1)).setObjects(("CISCO-COMMON-MGMT-MIB", "ccmConfigurationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCommonMgmtMIBCompliance = ciscoCommonMgmtMIBCompliance.setStatus('obsolete')
ciscoCommonMgmtMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 443, 2, 1, 2)).setObjects(("CISCO-COMMON-MGMT-MIB", "ccmConfigurationGroup"), ("CISCO-COMMON-MGMT-MIB", "ccmCacheTimeoutConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCommonMgmtMIBCompliance1 = ciscoCommonMgmtMIBCompliance1.setStatus('current')
ccmConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 443, 2, 2, 1)).setObjects(("CISCO-COMMON-MGMT-MIB", "ccmCommonMaxUsers"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUsers"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUsersGlobalEnforcePriv"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserLastChange"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserPassword"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserExpiryDate"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserSshKeyFilename"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserSshKeyConfigured"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserSNMPAuthProtocol"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserSNMPPrivProtocol"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserCredType"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserStorageType"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserRowStatus"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserRoleStorageType"), ("CISCO-COMMON-MGMT-MIB", "ccmCommonUserRoleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmConfigurationGroup = ccmConfigurationGroup.setStatus('current')
ccmCacheTimeoutConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 443, 2, 2, 2)).setObjects(("CISCO-COMMON-MGMT-MIB", "ccmCommonUserCacheTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmCacheTimeoutConfigGroup = ccmCacheTimeoutConfigGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-COMMON-MGMT-MIB", ccmCommonUserTable=ccmCommonUserTable, ccmCommonUserPassword=ccmCommonUserPassword, ccmCommonUserSNMPAuthProtocol=ccmCommonUserSNMPAuthProtocol, ccmCommonUserRoleStorageType=ccmCommonUserRoleStorageType, PYSNMP_MODULE_ID=ciscoCommonMgmtMIB, ccmCommonUsers=ccmCommonUsers, ciscoCommonMgmtMIB=ciscoCommonMgmtMIB, ccmCommonUserEntry=ccmCommonUserEntry, ciscoCommonMgmtMIBObjects=ciscoCommonMgmtMIBObjects, ccmConfigurationGroup=ccmConfigurationGroup, ccmCommonUserSNMPPrivProtocol=ccmCommonUserSNMPPrivProtocol, ccmCommonUserLastChange=ccmCommonUserLastChange, ccmCommonUserRoleName=ccmCommonUserRoleName, ciscoCommonMgmtMIBCompliance1=ciscoCommonMgmtMIBCompliance1, ciscoCommonMgmtMIBCompliances=ciscoCommonMgmtMIBCompliances, ccmCommonUserRoleTable=ccmCommonUserRoleTable, ccmCommonUserRoleEntry=ccmCommonUserRoleEntry, ccmCommonUserSshKeyConfigured=ccmCommonUserSshKeyConfigured, ccmUserConfig=ccmUserConfig, ciscoCommonMgmtMIBGroups=ciscoCommonMgmtMIBGroups, ccmCommonUserName=ccmCommonUserName, ccmCommonMaxUsers=ccmCommonMaxUsers, ccmCacheTimeoutConfigGroup=ccmCacheTimeoutConfigGroup, ccmCommonUserRowStatus=ccmCommonUserRowStatus, ciscoCommonMgmtMIBCompliance=ciscoCommonMgmtMIBCompliance, ccmCommonUserCredType=ccmCommonUserCredType, ccmCommonUserSshKeyFilename=ccmCommonUserSshKeyFilename, ciscoCommonMgmtNotifs=ciscoCommonMgmtNotifs, ciscoCommonMgmtMIBConform=ciscoCommonMgmtMIBConform, ccmCommonUserRoleRowStatus=ccmCommonUserRoleRowStatus, ccmCommonUsersGlobalEnforcePriv=ccmCommonUsersGlobalEnforcePriv, ccmCommonUserCacheTimeout=ccmCommonUserCacheTimeout, ccmCommonUserStorageType=ccmCommonUserStorageType, ccmCommonUserExpiryDate=ccmCommonUserExpiryDate)
