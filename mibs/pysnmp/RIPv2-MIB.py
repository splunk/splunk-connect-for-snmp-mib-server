#
# PySNMP MIB module RIPv2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RIPv2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:03:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Counter32, ModuleIdentity, TimeTicks, Gauge32, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, mib_2, NotificationType, Counter64, IpAddress, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "ModuleIdentity", "TimeTicks", "Gauge32", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "mib-2", "NotificationType", "Counter64", "IpAddress", "iso", "Integer32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
rip2 = ModuleIdentity((1, 3, 6, 1, 2, 1, 23))
if mibBuilder.loadTexts: rip2.setLastUpdated('9407272253Z')
if mibBuilder.loadTexts: rip2.setOrganization('IETF RIP-II Working Group')
class RouteTag(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

rip2Globals = MibIdentifier((1, 3, 6, 1, 2, 1, 23, 1))
rip2GlobalRouteChanges = MibScalar((1, 3, 6, 1, 2, 1, 23, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2GlobalRouteChanges.setStatus('current')
rip2GlobalQueries = MibScalar((1, 3, 6, 1, 2, 1, 23, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2GlobalQueries.setStatus('current')
rip2IfStatTable = MibTable((1, 3, 6, 1, 2, 1, 23, 2), )
if mibBuilder.loadTexts: rip2IfStatTable.setStatus('current')
rip2IfStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 23, 2, 1), ).setIndexNames((0, "RIPv2-MIB", "rip2IfStatAddress"))
if mibBuilder.loadTexts: rip2IfStatEntry.setStatus('current')
rip2IfStatAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2IfStatAddress.setStatus('current')
rip2IfStatRcvBadPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2IfStatRcvBadPackets.setStatus('current')
rip2IfStatRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2IfStatRcvBadRoutes.setStatus('current')
rip2IfStatSentUpdates = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2IfStatSentUpdates.setStatus('current')
rip2IfStatStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfStatStatus.setStatus('current')
rip2IfConfTable = MibTable((1, 3, 6, 1, 2, 1, 23, 3), )
if mibBuilder.loadTexts: rip2IfConfTable.setStatus('current')
rip2IfConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 23, 3, 1), ).setIndexNames((0, "RIPv2-MIB", "rip2IfConfAddress"))
if mibBuilder.loadTexts: rip2IfConfEntry.setStatus('current')
rip2IfConfAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2IfConfAddress.setStatus('current')
rip2IfConfDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 2), RouteTag().clone(hexValue="0000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfDomain.setStatus('obsolete')
rip2IfConfAuthType = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthentication", 1), ("simplePassword", 2), ("md5", 3))).clone('noAuthentication')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfAuthType.setStatus('current')
rip2IfConfAuthKey = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfAuthKey.setStatus('current')
rip2IfConfSend = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("doNotSend", 1), ("ripVersion1", 2), ("rip1Compatible", 3), ("ripVersion2", 4), ("ripV1Demand", 5), ("ripV2Demand", 6))).clone('rip1Compatible')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfSend.setStatus('current')
rip2IfConfReceive = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rip1", 1), ("rip2", 2), ("rip1OrRip2", 3), ("doNotRecieve", 4))).clone('rip1OrRip2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfReceive.setStatus('current')
rip2IfConfDefaultMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfDefaultMetric.setStatus('current')
rip2IfConfStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfStatus.setStatus('current')
rip2IfConfSrcAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 3, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rip2IfConfSrcAddress.setStatus('current')
rip2PeerTable = MibTable((1, 3, 6, 1, 2, 1, 23, 4), )
if mibBuilder.loadTexts: rip2PeerTable.setStatus('current')
rip2PeerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 23, 4, 1), ).setIndexNames((0, "RIPv2-MIB", "rip2PeerAddress"), (0, "RIPv2-MIB", "rip2PeerDomain"))
if mibBuilder.loadTexts: rip2PeerEntry.setStatus('current')
rip2PeerAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2PeerAddress.setStatus('current')
rip2PeerDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 4, 1, 2), RouteTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2PeerDomain.setStatus('current')
rip2PeerLastUpdate = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2PeerLastUpdate.setStatus('current')
rip2PeerVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2PeerVersion.setStatus('current')
rip2PeerRcvBadPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2PeerRcvBadPackets.setStatus('current')
rip2PeerRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 2, 1, 23, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rip2PeerRcvBadRoutes.setStatus('current')
rip2Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 23, 5))
rip2Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 23, 5, 1))
rip2Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 23, 5, 2))
rip2Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 23, 5, 2, 1)).setObjects(("RIPv2-MIB", "rip2GlobalGroup"), ("RIPv2-MIB", "rip2IfStatGroup"), ("RIPv2-MIB", "rip2IfConfGroup"), ("RIPv2-MIB", "rip2PeerGroup"), ("RIPv2-MIB", "rip2GlobalGroup"), ("RIPv2-MIB", "rip2IfStatGroup"), ("RIPv2-MIB", "rip2IfConfGroup"), ("RIPv2-MIB", "rip2PeerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rip2Compliance = rip2Compliance.setStatus('current')
rip2GlobalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 23, 5, 1, 1)).setObjects(("RIPv2-MIB", "rip2GlobalRouteChanges"), ("RIPv2-MIB", "rip2GlobalQueries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rip2GlobalGroup = rip2GlobalGroup.setStatus('current')
rip2IfStatGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 23, 5, 1, 2)).setObjects(("RIPv2-MIB", "rip2IfStatAddress"), ("RIPv2-MIB", "rip2IfStatRcvBadPackets"), ("RIPv2-MIB", "rip2IfStatRcvBadRoutes"), ("RIPv2-MIB", "rip2IfStatSentUpdates"), ("RIPv2-MIB", "rip2IfStatStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rip2IfStatGroup = rip2IfStatGroup.setStatus('current')
rip2IfConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 23, 5, 1, 3)).setObjects(("RIPv2-MIB", "rip2IfConfAddress"), ("RIPv2-MIB", "rip2IfConfAuthType"), ("RIPv2-MIB", "rip2IfConfAuthKey"), ("RIPv2-MIB", "rip2IfConfSend"), ("RIPv2-MIB", "rip2IfConfReceive"), ("RIPv2-MIB", "rip2IfConfDefaultMetric"), ("RIPv2-MIB", "rip2IfConfStatus"), ("RIPv2-MIB", "rip2IfConfSrcAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rip2IfConfGroup = rip2IfConfGroup.setStatus('current')
rip2PeerGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 23, 5, 1, 4)).setObjects(("RIPv2-MIB", "rip2PeerAddress"), ("RIPv2-MIB", "rip2PeerDomain"), ("RIPv2-MIB", "rip2PeerLastUpdate"), ("RIPv2-MIB", "rip2PeerVersion"), ("RIPv2-MIB", "rip2PeerRcvBadPackets"), ("RIPv2-MIB", "rip2PeerRcvBadRoutes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rip2PeerGroup = rip2PeerGroup.setStatus('current')
mibBuilder.exportSymbols("RIPv2-MIB", rip2PeerVersion=rip2PeerVersion, rip2IfConfSrcAddress=rip2IfConfSrcAddress, rip2Compliances=rip2Compliances, rip2IfConfEntry=rip2IfConfEntry, rip2IfConfAddress=rip2IfConfAddress, rip2IfStatRcvBadRoutes=rip2IfStatRcvBadRoutes, rip2IfStatTable=rip2IfStatTable, rip2IfStatAddress=rip2IfStatAddress, rip2PeerLastUpdate=rip2PeerLastUpdate, rip2PeerDomain=rip2PeerDomain, rip2PeerRcvBadRoutes=rip2PeerRcvBadRoutes, rip2PeerRcvBadPackets=rip2PeerRcvBadPackets, rip2IfConfDomain=rip2IfConfDomain, PYSNMP_MODULE_ID=rip2, rip2GlobalGroup=rip2GlobalGroup, rip2IfConfDefaultMetric=rip2IfConfDefaultMetric, rip2IfStatSentUpdates=rip2IfStatSentUpdates, RouteTag=RouteTag, rip2IfConfAuthType=rip2IfConfAuthType, rip2GlobalQueries=rip2GlobalQueries, rip2Conformance=rip2Conformance, rip2IfStatGroup=rip2IfStatGroup, rip2PeerEntry=rip2PeerEntry, rip2=rip2, rip2IfStatEntry=rip2IfStatEntry, rip2IfConfStatus=rip2IfConfStatus, rip2IfConfSend=rip2IfConfSend, rip2PeerGroup=rip2PeerGroup, rip2Groups=rip2Groups, rip2IfStatRcvBadPackets=rip2IfStatRcvBadPackets, rip2PeerTable=rip2PeerTable, rip2IfConfGroup=rip2IfConfGroup, rip2PeerAddress=rip2PeerAddress, rip2IfConfReceive=rip2IfConfReceive, rip2IfConfTable=rip2IfConfTable, rip2IfConfAuthKey=rip2IfConfAuthKey, rip2Globals=rip2Globals, rip2GlobalRouteChanges=rip2GlobalRouteChanges, rip2Compliance=rip2Compliance, rip2IfStatStatus=rip2IfStatStatus)
