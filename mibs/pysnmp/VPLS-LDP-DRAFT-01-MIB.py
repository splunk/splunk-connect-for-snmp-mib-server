#
# PySNMP MIB module VPLS-LDP-DRAFT-01-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VPLS-LDP-DRAFT-01-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:28:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
jnxExperiment, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxExperiment")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, Integer32, iso, Gauge32, MibIdentifier, ObjectIdentity, Counter64, IpAddress, Unsigned32, Counter32, transmission, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Integer32", "iso", "Gauge32", "MibIdentifier", "ObjectIdentity", "Counter64", "IpAddress", "Unsigned32", "Counter32", "transmission", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
TruthValue, RowStatus, StorageType, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "StorageType", "TextualConvention", "DisplayString")
jnxVplsConfigIndex, jnxVplsPwBindIndex = mibBuilder.importSymbols("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex", "jnxVplsPwBindIndex")
jnxVplsLdpDraft01MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 9))
jnxVplsLdpDraft01MIB.setRevisions(('2006-08-30 12:00',))
if mibBuilder.loadTexts: jnxVplsLdpDraft01MIB.setLastUpdated('200608301200Z')
if mibBuilder.loadTexts: jnxVplsLdpDraft01MIB.setOrganization('Layer 2 Virtual Private Networks (L2VPN) Working Group')
jnxVplsLdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 9, 0))
jnxVplsLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 9, 1))
jnxVplsLdpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 9, 2))
jnxVplsLdpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 9, 1, 1), )
if mibBuilder.loadTexts: jnxVplsLdpConfigTable.setStatus('current')
jnxVplsLdpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 9, 1, 1, 1), ).setIndexNames((0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"))
if mibBuilder.loadTexts: jnxVplsLdpConfigEntry.setStatus('current')
jnxVplsLdpConfigMacAddrWithdraw = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 9, 1, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsLdpConfigMacAddrWithdraw.setStatus('current')
jnxVplsLdpPwBindTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 9, 1, 2), )
if mibBuilder.loadTexts: jnxVplsLdpPwBindTable.setStatus('current')
jnxVplsLdpPwBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 9, 1, 2, 1), ).setIndexNames((0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"), (0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsPwBindIndex"))
if mibBuilder.loadTexts: jnxVplsLdpPwBindEntry.setStatus('current')
jnxVplsLdpPwBindMacAddressLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 9, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsLdpPwBindMacAddressLimit.setStatus('current')
jnxVplsLdpPwBindMacTableFull = NotificationType((1, 3, 6, 1, 4, 1, 2636, 5, 9, 0, 1)).setObjects(("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"), ("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsPwBindIndex"))
if mibBuilder.loadTexts: jnxVplsLdpPwBindMacTableFull.setStatus('current')
mibBuilder.exportSymbols("VPLS-LDP-DRAFT-01-MIB", jnxVplsLdpConfigMacAddrWithdraw=jnxVplsLdpConfigMacAddrWithdraw, jnxVplsLdpPwBindTable=jnxVplsLdpPwBindTable, jnxVplsLdpPwBindEntry=jnxVplsLdpPwBindEntry, jnxVplsLdpNotifications=jnxVplsLdpNotifications, PYSNMP_MODULE_ID=jnxVplsLdpDraft01MIB, jnxVplsLdpConfigEntry=jnxVplsLdpConfigEntry, jnxVplsLdpObjects=jnxVplsLdpObjects, jnxVplsLdpConfigTable=jnxVplsLdpConfigTable, jnxVplsLdpDraft01MIB=jnxVplsLdpDraft01MIB, jnxVplsLdpPwBindMacAddressLimit=jnxVplsLdpPwBindMacAddressLimit, jnxVplsLdpPwBindMacTableFull=jnxVplsLdpPwBindMacTableFull, jnxVplsLdpConformance=jnxVplsLdpConformance)
