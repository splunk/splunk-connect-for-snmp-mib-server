#
# PySNMP MIB module CNT23-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CNT23-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
cnt2Snmp, = mibBuilder.importSymbols("CNT2-MIB", "cnt2Snmp")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, Integer32, Counter64, IpAddress, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Unsigned32, iso, ObjectIdentity, enterprises, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Integer32", "Counter64", "IpAddress", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Unsigned32", "iso", "ObjectIdentity", "enterprises", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cnt2SubAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 333, 2, 3, 1))
cnt2RegistrationNum = MibScalar((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegistrationNum.setStatus('mandatory')
cnt2RegistrationTable = MibTable((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2), )
if mibBuilder.loadTexts: cnt2RegistrationTable.setStatus('mandatory')
cnt2RegistrationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1), ).setIndexNames((0, "CNT23-MIB", "cnt2RegisterIndex"))
if mibBuilder.loadTexts: cnt2RegistrationEntry.setStatus('mandatory')
cnt2RegisterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterIndex.setStatus('mandatory')
cnt2RegisterSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterSlot.setStatus('mandatory')
cnt2RegisterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("dpiv2", 2), ("smux", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterProtocol.setStatus('mandatory')
cnt2RegisterTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("switch", 1), ("tcp", 2), ("udp", 3), ("memory", 4), ("fl", 5), ("direct", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterTransport.setStatus('mandatory')
cnt2RegisterAgentDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterAgentDescr.setStatus('mandatory')
cnt2RegisterGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterGroup.setStatus('mandatory')
cnt2RegisterMibVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterMibVersion.setStatus('mandatory')
cnt2RegisterUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterUpTime.setStatus('mandatory')
cnt2RegisterRowInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 3, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2RegisterRowInstance.setStatus('mandatory')
mibBuilder.exportSymbols("CNT23-MIB", cnt2RegisterProtocol=cnt2RegisterProtocol, cnt2RegisterTransport=cnt2RegisterTransport, cnt2RegisterAgentDescr=cnt2RegisterAgentDescr, cnt2RegisterIndex=cnt2RegisterIndex, cnt2RegisterMibVersion=cnt2RegisterMibVersion, cnt2RegistrationEntry=cnt2RegistrationEntry, cnt2RegisterSlot=cnt2RegisterSlot, cnt2SubAgent=cnt2SubAgent, cnt2RegisterUpTime=cnt2RegisterUpTime, cnt2RegisterGroup=cnt2RegisterGroup, cnt2RegistrationNum=cnt2RegistrationNum, cnt2RegisterRowInstance=cnt2RegisterRowInstance, cnt2RegistrationTable=cnt2RegistrationTable)
