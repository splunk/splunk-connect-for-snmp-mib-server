#
# PySNMP MIB module ATMEDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATMEDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:15:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
lannet, = mibBuilder.importSymbols("GEN-MIB", "lannet")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, iso, ObjectIdentity, IpAddress, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32, Bits, Integer32, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "iso", "ObjectIdentity", "IpAddress", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32", "Bits", "Integer32", "Counter32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
atmEdge = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 26))
cti = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 29))
atmEdgePort = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 26, 1))
atmEdgePortTable = MibTable((1, 3, 6, 1, 4, 1, 81, 26, 1, 1), )
if mibBuilder.loadTexts: atmEdgePortTable.setStatus('mandatory')
atmEdgePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1), ).setIndexNames((0, "ATMEDGE-MIB", "atmEdgePortGroupId"), (0, "ATMEDGE-MIB", "atmEdgePortId"))
if mibBuilder.loadTexts: atmEdgePortEntry.setStatus('mandatory')
atmEdgePortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortGroupId.setStatus('mandatory')
atmEdgePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortId.setStatus('mandatory')
atmEdgePortHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("ok", 1), ("atmError", 2), ("sonetLinkError", 3), ("sonetRemoteLinkError", 4), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortHealthStatus.setStatus('mandatory')
atmEdgePortMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortMACAddr.setStatus('mandatory')
atmEdgePortATMAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortATMAddr.setStatus('mandatory')
atmEdgePortLanType = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("ethernet", 1), ("token-ring", 2), ("notSupported", 255))).clone('ethernet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortLanType.setStatus('mandatory')
atmEdgePortILMIStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("notsupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortILMIStatus.setStatus('mandatory')
atmEdgePortSignalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("notsupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortSignalStatus.setStatus('mandatory')
atmEdgePortActualUNIVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("unknown", 1), ("uni-30", 2), ("uni-31", 3), ("uni-40", 4), ("notsupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortActualUNIVersion.setStatus('mandatory')
atmEdgePortNetworkPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmEdgePortNetworkPrefix.setStatus('mandatory')
atmEdgePortDormantHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("ok", 1), ("atmError", 2), ("sonetLinkError", 3), ("sonetRemoteLinkError", 4), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortDormantHealthStatus.setStatus('mandatory')
atmEdgePortRedundancyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("masterNicActive", 1), ("secondaryNicActive", 2), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgePortRedundancyStatus.setStatus('mandatory')
atmEdgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 26, 2))
atmEdgeGroupTable = MibTable((1, 3, 6, 1, 4, 1, 81, 26, 2, 1), )
if mibBuilder.loadTexts: atmEdgeGroupTable.setStatus('mandatory')
atmEdgeGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 81, 26, 2, 1, 1), ).setIndexNames((0, "ATMEDGE-MIB", "atmEdgeGroupGroupId"))
if mibBuilder.loadTexts: atmEdgeGroupEntry.setStatus('mandatory')
atmEdgeGroupGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgeGroupGroupId.setStatus('mandatory')
atmEdgeGroupWorkState = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("run", 1), ("boot", 2), ("runAndBoot", 3), ("none", 4), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgeGroupWorkState.setStatus('mandatory')
atmEdgeGroupBITResult = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("ok", 1), ("faulty", 2), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmEdgeGroupBITResult.setStatus('mandatory')
atmEdgeAssociation = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 26, 3))
associationTable = MibTable((1, 3, 6, 1, 4, 1, 81, 26, 3, 1), )
if mibBuilder.loadTexts: associationTable.setStatus('mandatory')
associationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1), ).setIndexNames((0, "ATMEDGE-MIB", "associationSlotIndex"), (0, "ATMEDGE-MIB", "associationPortIndex"), (0, "ATMEDGE-MIB", "associationIndex"))
if mibBuilder.loadTexts: associationEntry.setStatus('mandatory')
associationSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: associationSlotIndex.setStatus('mandatory')
associationPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: associationPortIndex.setStatus('mandatory')
associationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: associationIndex.setStatus('mandatory')
associationVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: associationVlan.setStatus('mandatory')
associationElan = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: associationElan.setStatus('mandatory')
associationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: associationRowStatus.setStatus('mandatory')
associationIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 26, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: associationIfIndex.setStatus('mandatory')
genCTIGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 29, 1))
genCTIGroupTable = MibTable((1, 3, 6, 1, 4, 1, 81, 29, 1, 1), )
if mibBuilder.loadTexts: genCTIGroupTable.setStatus('mandatory')
genCTIGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 81, 29, 1, 1, 1), ).setIndexNames((0, "ATMEDGE-MIB", "genCTIGroupId"))
if mibBuilder.loadTexts: genCTIGroupEntry.setStatus('mandatory')
genCTIGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIGroupId.setStatus('mandatory')
genCTIGroupCellLossAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("cellLossAlarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIGroupCellLossAlarm.setStatus('mandatory')
genCTIGroupRedunAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noRedun", 1), ("redunAvailable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIGroupRedunAvailable.setStatus('mandatory')
genCTIGroupRedunFlip = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noFlip", 1), ("flipFiber", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genCTIGroupRedunFlip.setStatus('mandatory')
genCTIGroupFiberActive = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fiberActiveA", 1), ("fiberActiveB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIGroupFiberActive.setStatus('mandatory')
genCTIGroupVmuxMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localMaster", 1), ("localSlave", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIGroupVmuxMaster.setStatus('mandatory')
genCTIPortTable = MibTable((1, 3, 6, 1, 4, 1, 81, 29, 1, 2), )
if mibBuilder.loadTexts: genCTIPortTable.setStatus('mandatory')
genCTIPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 81, 29, 1, 2, 1), ).setIndexNames((0, "ATMEDGE-MIB", "genCTIPortGroupId"), (0, "ATMEDGE-MIB", "genCTIPortId"))
if mibBuilder.loadTexts: genCTIPortEntry.setStatus('mandatory')
genCTIPortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIPortGroupId.setStatus('mandatory')
genCTIPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIPortId.setStatus('mandatory')
genCTIPortSync = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("ok", 1), ("noSync", 2), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIPortSync.setStatus('mandatory')
genCTIPortRxAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("ok", 1), ("rxAlarm", 2), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIPortRxAlarm.setStatus('mandatory')
genCTIPortTxAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 81, 29, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("ok", 1), ("txAlarm", 2), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCTIPortTxAlarm.setStatus('mandatory')
mibBuilder.exportSymbols("ATMEDGE-MIB", genCTIPortEntry=genCTIPortEntry, atmEdgePortGroupId=atmEdgePortGroupId, atmEdgeGroupTable=atmEdgeGroupTable, associationSlotIndex=associationSlotIndex, genCTIGroupVmuxMaster=genCTIGroupVmuxMaster, atmEdgePortNetworkPrefix=atmEdgePortNetworkPrefix, atmEdgeAssociation=atmEdgeAssociation, atmEdgePortTable=atmEdgePortTable, associationRowStatus=associationRowStatus, atmEdgeGroupBITResult=atmEdgeGroupBITResult, associationElan=associationElan, genCTIPortId=genCTIPortId, atmEdgePortEntry=atmEdgePortEntry, associationVlan=associationVlan, genCTIPortTable=genCTIPortTable, associationPortIndex=associationPortIndex, genCTIGroupRedunFlip=genCTIGroupRedunFlip, genCTIPortSync=genCTIPortSync, genCTIGroupId=genCTIGroupId, associationIndex=associationIndex, genCTIGroup=genCTIGroup, atmEdgePortRedundancyStatus=atmEdgePortRedundancyStatus, atmEdgePortHealthStatus=atmEdgePortHealthStatus, atmEdgePortATMAddr=atmEdgePortATMAddr, atmEdgePortDormantHealthStatus=atmEdgePortDormantHealthStatus, atmEdgePortLanType=atmEdgePortLanType, atmEdgePortSignalStatus=atmEdgePortSignalStatus, genCTIPortRxAlarm=genCTIPortRxAlarm, genCTIPortTxAlarm=genCTIPortTxAlarm, genCTIGroupFiberActive=genCTIGroupFiberActive, atmEdge=atmEdge, atmEdgeGroupGroupId=atmEdgeGroupGroupId, genCTIGroupRedunAvailable=genCTIGroupRedunAvailable, atmEdgeGroupWorkState=atmEdgeGroupWorkState, genCTIGroupEntry=genCTIGroupEntry, atmEdgeGroup=atmEdgeGroup, associationTable=associationTable, genCTIGroupTable=genCTIGroupTable, genCTIPortGroupId=genCTIPortGroupId, atmEdgePort=atmEdgePort, associationEntry=associationEntry, associationIfIndex=associationIfIndex, atmEdgePortILMIStatus=atmEdgePortILMIStatus, genCTIGroupCellLossAlarm=genCTIGroupCellLossAlarm, cti=cti, atmEdgePortId=atmEdgePortId, atmEdgePortMACAddr=atmEdgePortMACAddr, atmEdgePortActualUNIVersion=atmEdgePortActualUNIVersion, atmEdgeGroupEntry=atmEdgeGroupEntry)
