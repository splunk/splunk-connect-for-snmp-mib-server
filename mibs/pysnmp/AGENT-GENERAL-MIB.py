#
# PySNMP MIB module AGENT-GENERAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AGENT-GENERAL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:00:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
dlink_common_mgmt, AgentNotifyLevel = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt", "AgentNotifyLevel")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, IpAddress, ModuleIdentity, Unsigned32, ObjectIdentity, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, MibIdentifier, iso, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "MibIdentifier", "iso", "Integer32", "TimeTicks")
RowStatus, TruthValue, DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention", "MacAddress")
agentGeneralMgmt = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 1))
if mibBuilder.loadTexts: agentGeneralMgmt.setLastUpdated('201103020000Z')
if mibBuilder.loadTexts: agentGeneralMgmt.setOrganization('D-Link Corp.')
class Ipv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

class UnitList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 3)

agentBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 1))
agentMgmtProtocolCapability = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("snmp-ip", 2), ("snmp-ipx", 3), ("snmp-ip-ipx", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMgmtProtocolCapability.setStatus('current')
agentMibCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2), )
if mibBuilder.loadTexts: agentMibCapabilityTable.setStatus('current')
agentMibCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentMibCapabilityIndex"))
if mibBuilder.loadTexts: agentMibCapabilityEntry.setStatus('current')
agentMibCapabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityIndex.setStatus('current')
agentMibCapabilityDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityDescr.setStatus('current')
agentMibCapabilityVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityVersion.setStatus('current')
agentMibCapabilityType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("standard", 2), ("proprietary", 3), ("experiment", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityType.setStatus('current')
agentStatusConsoleInUse = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("in-use", 2), ("not-in-use", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusConsoleInUse.setStatus('current')
agentStatusSaveCfg = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("proceeding", 2), ("completed", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusSaveCfg.setStatus('current')
agentStatusFileTransfer = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("other", 1), ("in-process", 2), ("invalid-file", 3), ("violation", 4), ("file-not-found", 5), ("disk-full", 6), ("complete", 7), ("time-out", 8), ("not-format", 9), ("memory-full", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusFileTransfer.setStatus('current')
agentCPUutilization = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6))
agentCPUutilizationIn5sec = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCPUutilizationIn5sec.setStatus('current')
agentCPUutilizationIn1min = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCPUutilizationIn1min.setStatus('current')
agentCPUutilizationIn5min = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCPUutilizationIn5min.setStatus('current')
agentDualImageStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-supported", 0), ("supported", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDualImageStatus.setStatus('current')
agentPORTutilizationTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 8), )
if mibBuilder.loadTexts: agentPORTutilizationTable.setStatus('current')
agentPORTutilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 8, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentPORTutilizationProtIndex"))
if mibBuilder.loadTexts: agentPORTutilizationEntry.setStatus('current')
agentPORTutilizationProtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationProtIndex.setStatus('current')
agentPORTutilizationTX = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationTX.setStatus('current')
agentPORTutilizationRX = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationRX.setStatus('current')
agentPORTutilizationUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationUtil.setStatus('current')
agentDRAMutilizationTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9), )
if mibBuilder.loadTexts: agentDRAMutilizationTable.setStatus('current')
agentDRAMutilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentDRAMutilizationUnitID"))
if mibBuilder.loadTexts: agentDRAMutilizationEntry.setStatus('current')
agentDRAMutilizationUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilizationUnitID.setStatus('current')
agentDRAMutilizationTotalDRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 2), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilizationTotalDRAM.setStatus('current')
agentDRAMutilizationUsedDRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 3), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilizationUsedDRAM.setStatus('current')
agentDRAMutilization = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilization.setStatus('current')
agentFLASHutilizationTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 10), )
if mibBuilder.loadTexts: agentFLASHutilizationTable.setStatus('current')
agentFLASHutilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 10, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentFLASHutilizationUnitID"))
if mibBuilder.loadTexts: agentFLASHutilizationEntry.setStatus('current')
agentFLASHutilizationUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFLASHutilizationUnitID.setStatus('current')
agentFLASHutilizationTotalFLASH = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 10, 1, 2), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFLASHutilizationTotalFLASH.setStatus('current')
agentFLASHutilizationUsedFLASH = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 10, 1, 3), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFLASHutilizationUsedFLASH.setStatus('current')
agentFLASHutilization = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFLASHutilization.setStatus('current')
agentStatusReset = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("proceeding", 1), ("completed", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusReset.setStatus('current')
agentSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialNumber.setStatus('current')
agentFirmwareType = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFirmwareType.setStatus('current')
agentBasicConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2))
agentBscSwFileTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1), )
if mibBuilder.loadTexts: agentBscSwFileTable.setStatus('current')
agentBscSwFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentBscSwFileIndex"))
if mibBuilder.loadTexts: agentBscSwFileEntry.setStatus('current')
agentBscSwFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBscSwFileIndex.setStatus('current')
agentBscSwFileDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileDscr.setStatus('current')
agentBscSwFileAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileAddr.setStatus('current')
agentBscSwFileTransferType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("network-load", 2), ("out-of-band-load", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileTransferType.setStatus('current')
agentBscSwFile = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFile.setStatus('current')
agentBscSwFileLocateId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileLocateId.setStatus('current')
agentBscSwFileLoadType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("upload", 2), ("download", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileLoadType.setStatus('current')
agentBscSwFileCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("inactive", 2), ("start", 3), ("delete", 4), ("config-as-bootup", 5), ("apply", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileCtrl.setStatus('current')
agentBscSwFileBIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileBIncrement.setStatus('current')
agentBscSwFileCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileCtrlID.setStatus('current')
agentBscSwFileCtrlUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 11), UnitList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileCtrlUnitID.setStatus('current')
agentBscSwFileIPv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 12), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileIPv6Addr.setStatus('current')
agentBscSwFileBootUpImage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileBootUpImage.setStatus('current')
agentBscSwFileForceAgree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileForceAgree.setStatus('current')
agentBscSwFileInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileInterfaceName.setStatus('current')
agentBscSwFileServerDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileServerDomainName.setStatus('current')
agentFileTransfer = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("start", 2), ("start-and-reset", 3), ("noaction", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFileTransfer.setStatus('obsolete')
agentSystemReset = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("cold-start", 2), ("warm-start", 3), ("no-reset", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSystemReset.setStatus('deprecated')
agentRs232PortConfig = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("console", 2), ("out-of-band", 3), ("notAvail", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRs232PortConfig.setStatus('current')
agentOutOfBandBaudRateConfig = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("baudRate-2400", 2), ("baudRate-9600", 3), ("baudRate-19200", 4), ("baudRate-38400", 5), ("baudRate-115200", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOutOfBandBaudRateConfig.setStatus('obsolete')
agentSaveCfg = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("cfg-id1", 2), ("cfg-id2", 3), ("log", 4), ("all", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSaveCfg.setStatus('current')
swMultiImageInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7), )
if mibBuilder.loadTexts: swMultiImageInfoTable.setStatus('current')
swMultiImageInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "swMultiImageInfoID"))
if mibBuilder.loadTexts: swMultiImageInfoEntry.setStatus('current')
swMultiImageInfoID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageInfoID.setStatus('current')
swMultiImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageVersion.setStatus('current')
swMultiImageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageSize.setStatus('current')
swMultiImageUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageUpdateTime.setStatus('current')
swMultiImageFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageFrom.setStatus('current')
swMultiImageSendUser = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageSendUser.setStatus('current')
swMultiImageFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageFileName.setStatus('current')
agentMultiCfgMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8))
swMultiCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1), )
if mibBuilder.loadTexts: swMultiCfgInfoTable.setStatus('current')
swMultiCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "swMultiCfgInfoID"))
if mibBuilder.loadTexts: swMultiCfgInfoEntry.setStatus('current')
swMultiCfgInfoID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgInfoID.setStatus('current')
swMultiCfgVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgVersion.setStatus('current')
swMultiCfgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgSize.setStatus('current')
swMultiCFgUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCFgUpdateTime.setStatus('current')
swMultiCfgFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgFrom.setStatus('current')
swMultiCfgSendUser = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgSendUser.setStatus('current')
swMultiCfgFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgFileName.setStatus('current')
swMultiCfgCurrentUsed = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgCurrentUsed.setStatus('current')
swMultiCfgBootUp = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgBootUp.setStatus('current')
swMultiCfgCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 4), )
if mibBuilder.loadTexts: swMultiCfgCtrlTable.setStatus('current')
swMultiCfgCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 4, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "swMultiCfgCtrlID"))
if mibBuilder.loadTexts: swMultiCfgCtrlEntry.setStatus('current')
swMultiCfgCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cfgId-1", 1), ("cfgId-2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiCfgCtrlID.setStatus('current')
swMultiCfgAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("active", 1), ("delete", 2), ("apply", 3), ("none", 4), ("config-as-bootup-cfg", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMultiCfgAction.setStatus('current')
systemSeverityControlMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 9))
systemSeverityTrapControl = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 9, 1), AgentNotifyLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSeverityTrapControl.setStatus('current')
systemSeverityLogControl = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 9, 2), AgentNotifyLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSeverityLogControl.setStatus('current')
agentTrustedHostMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10))
agentTrustedHostTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1), )
if mibBuilder.loadTexts: agentTrustedHostTable.setStatus('current')
agentTrustedHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentTrustedHostIndex"))
if mibBuilder.loadTexts: agentTrustedHostEntry.setStatus('current')
agentTrustedHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrustedHostIndex.setStatus('current')
agentTrustedHostIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostIPAddress.setStatus('current')
agentTrustedHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostRowStatus.setStatus('current')
agentTrustedHostIPSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostIPSubnetMask.setStatus('current')
agentTrustedHostForSNMP = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostForSNMP.setStatus('current')
agentTrustedHostForTELNET = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostForTELNET.setStatus('current')
agentTrustedHostForSSH = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostForSSH.setStatus('current')
agentTrustedHostForHTTP = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostForHTTP.setStatus('current')
agentTrustedHostForHTTPS = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostForHTTPS.setStatus('current')
agentTrustedHostForPING = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostForPING.setStatus('current')
agentTrustedHostAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 11), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostAddrType.setStatus('current')
agentTrustedHostAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 12), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostAddr.setStatus('current')
agentTrustedHostIPv6PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustedHostIPv6PrefixLen.setStatus('current')
agentTrustedHostDelAllState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrustedHostDelAllState.setStatus('current')
agentFDBMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11))
agentFDBClearAllState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFDBClearAllState.setStatus('current')
agentFDBClearByPortTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 2), )
if mibBuilder.loadTexts: agentFDBClearByPortTable.setStatus('current')
agentFDBClearByPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 2, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentFDBClearPortIndex"))
if mibBuilder.loadTexts: agentFDBClearByPortEntry.setStatus('current')
agentFDBClearPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: agentFDBClearPortIndex.setStatus('current')
agentFDBClearByPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFDBClearByPortAction.setStatus('current')
agentFDBClearByVlanTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 3), )
if mibBuilder.loadTexts: agentFDBClearByVlanTable.setStatus('current')
agentFDBClearByVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 3, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentFDBClearVid"))
if mibBuilder.loadTexts: agentFDBClearByVlanEntry.setStatus('current')
agentFDBClearVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 3, 1, 1), VlanId())
if mibBuilder.loadTexts: agentFDBClearVid.setStatus('current')
agentFDBClearByVlanAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFDBClearByVlanAction.setStatus('current')
agentFDBSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4), )
if mibBuilder.loadTexts: agentFDBSecurityTable.setStatus('current')
agentFDBSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentFDBVid"), (0, "AGENT-GENERAL-MIB", "agentFDBMacAddress"))
if mibBuilder.loadTexts: agentFDBSecurityEntry.setStatus('current')
agentFDBVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: agentFDBVid.setStatus('current')
agentFDBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4, 1, 2), MacAddress())
if mibBuilder.loadTexts: agentFDBMacAddress.setStatus('current')
agentFDBPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFDBPort.setStatus('current')
agentFDBType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFDBType.setStatus('current')
agentFDBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("forward", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFDBStatus.setStatus('current')
agentFDBSecurityModule = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dot1x", 1), ("wac", 2), ("jwac", 3), ("port-security", 4), ("mac-based-access-control", 5), ("compound-authentication", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFDBSecurityModule.setStatus('current')
agentARPMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12))
agentARPClearAllState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentARPClearAllState.setStatus('current')
agentGratuitousARPMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2))
agentGratuitousARPSendIpifStatusUpState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPSendIpifStatusUpState.setStatus('current')
agentGratuitousARPSendDupIpDetectedState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPSendDupIpDetectedState.setStatus('current')
agentGratuitousARPLearningState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPLearningState.setStatus('current')
agentGratuitousARPTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4), )
if mibBuilder.loadTexts: agentGratuitousARPTable.setStatus('current')
agentGratuitousARPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentGratuitousARPInterfaceName"))
if mibBuilder.loadTexts: agentGratuitousARPEntry.setStatus('current')
agentGratuitousARPInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGratuitousARPInterfaceName.setStatus('current')
agentGratuitousARPPeriodicalSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPPeriodicalSendInterval.setStatus('current')
agentGratuitousARPTrapState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPTrapState.setStatus('current')
agentGratuitousARPLogState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPLogState.setStatus('current')
agentARPTotalARPEntries = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentARPTotalARPEntries.setStatus('current')
agentARPRetryTimes = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentARPRetryTimes.setStatus('current')
swMultiImageCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 13), )
if mibBuilder.loadTexts: swMultiImageCtrlTable.setStatus('current')
swMultiImageCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 13, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "swMultiImageCtrlID"))
if mibBuilder.loadTexts: swMultiImageCtrlEntry.setStatus('current')
swMultiImageCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageCtrlID.setStatus('current')
swMultiImageCtrlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("config-as-bootup-fw", 1), ("delete", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMultiImageCtrlAction.setStatus('current')
agentOutOfBandDataBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOutOfBandDataBits.setStatus('current')
agentOutOfBandParityBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOutOfBandParityBits.setStatus('current')
agentOutOfBandStopBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOutOfBandStopBits.setStatus('current')
agentOutOfBandAutoLogoutConfig = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("never", 1), ("minutes-2", 2), ("minutes-5", 3), ("minutes-10", 4), ("minutes-15", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOutOfBandAutoLogoutConfig.setStatus('current')
agentBscFileSystemMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18))
agentBscFileSystemTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1), )
if mibBuilder.loadTexts: agentBscFileSystemTable.setStatus('current')
agentBscFileSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentBscFileSystemIndex"))
if mibBuilder.loadTexts: agentBscFileSystemEntry.setStatus('current')
agentBscFileSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBscFileSystemIndex.setStatus('current')
agentBscFileSystemDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBscFileSystemDscr.setStatus('current')
agentBscFileSystemServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemServerAddr.setStatus('current')
agentBscFileSystemServerIPv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 4), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemServerIPv6Addr.setStatus('current')
agentBscFileSystemServerFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemServerFileName.setStatus('current')
agentBscFileSystemDeviceDriverID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("none", 1), ("a", 2), ("b", 3), ("c", 4), ("d", 5), ("e", 6), ("f", 7), ("g", 8), ("h", 9), ("i", 10), ("j", 11), ("k", 12), ("l", 13), ("m", 14), ("n", 15), ("o", 16), ("p", 17), ("q", 18), ("r", 19), ("s", 20), ("t", 21), ("u", 22), ("v", 23), ("w", 24), ("x", 25), ("y", 26), ("z", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemDeviceDriverID.setStatus('current')
agentBscFileSystemDeviceFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemDeviceFileName.setStatus('current')
agentBscFileSystemLoadType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("upload", 2), ("download", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemLoadType.setStatus('current')
agentBscFileSystemCtrlUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 9), UnitList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemCtrlUnitID.setStatus('current')
agentBscFileSystemBootUpImage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemBootUpImage.setStatus('current')
agentBscFileSystemForceAgree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemForceAgree.setStatus('current')
agentBscFileSystemCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("inactive", 2), ("start", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemCtrl.setStatus('current')
agentBscFileSystemInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemInterfaceName.setStatus('current')
agentBscFileSystemServerDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemServerDomainName.setStatus('current')
agentBscFileSystemIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemIncrement.setStatus('current')
agentBscFileSystemSaveConfigDriverID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("none", 1), ("a", 2), ("b", 3), ("c", 4), ("d", 5), ("e", 6), ("f", 7), ("g", 8), ("h", 9), ("i", 10), ("j", 11), ("k", 12), ("l", 13), ("m", 14), ("n", 15), ("o", 16), ("p", 17), ("q", 18), ("r", 19), ("s", 20), ("t", 21), ("u", 22), ("v", 23), ("w", 24), ("x", 25), ("y", 26), ("z", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemSaveConfigDriverID.setStatus('current')
agentBscFileSystemSaveConfigFileName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemSaveConfigFileName.setStatus('current')
agentBscFileSystemSaveCfg = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("cfg", 2), ("log", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscFileSystemSaveCfg.setStatus('current')
agentFileSystemConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 5), )
if mibBuilder.loadTexts: agentFileSystemConfigTable.setStatus('current')
agentFileSystemConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 5, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentFileSystemUnit"))
if mibBuilder.loadTexts: agentFileSystemConfigEntry.setStatus('current')
agentFileSystemUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFileSystemUnit.setStatus('current')
agentFileSystemDriverID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("none", 1), ("a", 2), ("b", 3), ("c", 4), ("d", 5), ("e", 6), ("f", 7), ("g", 8), ("h", 9), ("i", 10), ("j", 11), ("k", 12), ("l", 13), ("m", 14), ("n", 15), ("o", 16), ("p", 17), ("q", 18), ("r", 19), ("s", 20), ("t", 21), ("u", 22), ("v", 23), ("w", 24), ("x", 25), ("y", 26), ("z", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFileSystemDriverID.setStatus('current')
agentFileSystemBootImage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFileSystemBootImage.setStatus('current')
agentFileSystemBootConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFileSystemBootConfig.setStatus('current')
agentFileSystemActConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 18, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFileSystemActConfig.setStatus('current')
agentReboot = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentReboot.setStatus('current')
agentReset = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("config", 2), ("system", 3), ("reset", 4), ("system-exclude-vlan", 5), ("system-exclude-ip", 6), ("system-exclude-vlan-ip", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentReset.setStatus('current')
agentFTPFileTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21), )
if mibBuilder.loadTexts: agentFTPFileTable.setStatus('current')
agentFTPFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentFTPFileIndex"))
if mibBuilder.loadTexts: agentFTPFileEntry.setStatus('current')
agentFTPFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFTPFileIndex.setStatus('current')
agentFTPFileDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileDscr.setStatus('current')
agentFTPFileLoadType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("upload", 2), ("download", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileLoadType.setStatus('current')
agentFTPFileAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileAddr.setStatus('current')
agentFTPTCPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPTCPPort.setStatus('current')
agentFTPFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileName.setStatus('current')
agentFTPUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPUserName.setStatus('current')
agentFTPPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPPassword.setStatus('current')
agentFTPFileCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileCtrlID.setStatus('current')
agentFTPFileBIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileBIncrement.setStatus('current')
agentFTPFileCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileCtrl.setStatus('current')
agentFTPFileBootUpImage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileBootUpImage.setStatus('current')
agentFTPFileForceAgree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileForceAgree.setStatus('current')
agentFTPFileIPv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileIPv6Addr.setStatus('current')
agentFTPFileInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileInterfaceName.setStatus('current')
agentFTPFileUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 21, 1, 16), UnitList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileUnitID.setStatus('current')
agentSnmpTrapState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapState.setStatus('current')
agentOutOfBandMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 23))
agentOutOfBandMgmtState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 23, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOutOfBandMgmtState.setStatus('current')
agentOutOfBandMgmtIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 23, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOutOfBandMgmtIpAddr.setStatus('current')
agentOutOfBandMgmtSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 23, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOutOfBandMgmtSubnetMask.setStatus('current')
agentOutOfBandMgmtGateway = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 23, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOutOfBandMgmtGateway.setStatus('current')
agentOutOfBandMgmtLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 23, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("link-up", 1), ("link-down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentOutOfBandMgmtLinkStatus.setStatus('current')
agentTrapMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24))
agentTrapColdStart = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapColdStart.setStatus('current')
agentTrapWarmStart = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapWarmStart.setStatus('current')
agentTrapRmonRisingAlarm = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapRmonRisingAlarm.setStatus('current')
agentTrapRmonFallingAlarm = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapRmonFallingAlarm.setStatus('current')
agentTrapCfgSave = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapCfgSave.setStatus('current')
agentTrapCfgUpload = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapCfgUpload.setStatus('current')
agentTrapCfgDownload = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 24, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapCfgDownload.setStatus('current')
agentFTPFileSystemTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25), )
if mibBuilder.loadTexts: agentFTPFileSystemTable.setStatus('current')
agentFTPFileSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentFTPFileSystemIndex"))
if mibBuilder.loadTexts: agentFTPFileSystemEntry.setStatus('current')
agentFTPFileSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 1), Integer32())
if mibBuilder.loadTexts: agentFTPFileSystemIndex.setStatus('current')
agentFTPFileSystemDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFTPFileSystemDscr.setStatus('current')
agentFTPFileSystemLoadType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("upload", 2), ("download", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemLoadType.setStatus('current')
agentFTPFileSystemAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 4), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemAddressType.setStatus('current')
agentFTPFileSystemAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemAddress.setStatus('current')
agentFTPFileSystemTCPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemTCPPort.setStatus('current')
agentFTPFileSystemServerFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemServerFileName.setStatus('current')
agentFTPFileSystemDeviceFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemDeviceFileName.setStatus('current')
agentFTPFileSystemUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemUserName.setStatus('current')
agentFTPFileSystemPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemPassword.setStatus('current')
agentFTPFileSystemCtrlUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 11), UnitList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemCtrlUnitID.setStatus('current')
agentFTPFileSystemBootUpImage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemBootUpImage.setStatus('current')
agentFTPFileSystemCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 25, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFTPFileSystemCtrl.setStatus('current')
agentBscCMDLogState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscCMDLogState.setStatus('current')
agentBscBroadcastPingReplyState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscBroadcastPingReplyState.setStatus('current')
agentBscTftpConfigMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28))
agentBscTftpCfgFirmwareFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgFirmwareFile.setStatus('current')
agentBscTftpCfgConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgConfigFile.setStatus('current')
agentBscTftpCfgLogFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgLogFile.setStatus('current')
agentBscTftpCfgAttackLogFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgAttackLogFile.setStatus('current')
agentBscTftpCfgCertificateFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgCertificateFile.setStatus('current')
agentBscTftpCfgKeyFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgKeyFile.setStatus('current')
agentBscTftpCfgTechSuooprtFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgTechSuooprtFile.setStatus('current')
agentBscTftpCfgDebugLogFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgDebugLogFile.setStatus('current')
agentBscTftpCfgSIMFirmwareFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgSIMFirmwareFile.setStatus('current')
agentBscTftpCfgSIMConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgSIMConfigFile.setStatus('current')
agentBscTftpCfgSIMLogFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgSIMLogFile.setStatus('current')
agentBscTftpCfgServerIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgServerIPAddr.setStatus('current')
agentBscTftpCfgServerIPv6Addr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 13), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgServerIPv6Addr.setStatus('current')
agentBscTftpCfgServerDomainName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 28, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscTftpCfgServerDomainName.setStatus('current')
agentBscCommunityEncryptionState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscCommunityEncryptionState.setStatus('current')
agentIpProtoConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 3))
agentIpNumOfIf = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpNumOfIf.setStatus('current')
agentIpTftpServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpTftpServerAddr.setStatus('obsolete')
agentIpGetIpFrom = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("bootp", 3), ("dhcp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpGetIpFrom.setStatus('current')
agentIpAutoconfig = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpAutoconfig.setStatus('current')
agentIpAutoconfigTimeout = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpAutoconfigTimeout.setStatus('current')
agentIpTrapManager = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 4))
agentTrapManagerTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2), )
if mibBuilder.loadTexts: agentTrapManagerTable.setStatus('current')
agentTrapManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1), ).setIndexNames((0, "AGENT-GENERAL-MIB", "agentTrapManagerIndex"))
if mibBuilder.loadTexts: agentTrapManagerEntry.setStatus('current')
agentTrapManagerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: agentTrapManagerIndex.setStatus('current')
agentTrapManagerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapManagerIpAddr.setStatus('current')
agentTrapManagerComm = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapManagerComm.setStatus('current')
agentTrapManagerMsgVer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("snmpAgentVersionDependent", 1), ("v1Trap", 2), ("v2Trap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapManagerMsgVer.setStatus('current')
agentTrapManagerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrapManagerStatus.setStatus('current')
agentNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 7))
agentNotifMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 1))
agentNotifFirmware = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2))
agentNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0))
notifFirmwareMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 1, 2))
agentsystemRestart = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 1)).setObjects(("AGENT-GENERAL-MIB", "trapInfosystemRestart"))
if mibBuilder.loadTexts: agentsystemRestart.setStatus('current')
agentSaveToNVRAM = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 2)).setObjects(("AGENT-GENERAL-MIB", "unitID"))
if mibBuilder.loadTexts: agentSaveToNVRAM.setStatus('current')
agentFileTransferStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 3)).setObjects(("AGENT-GENERAL-MIB", "unitID"), ("AGENT-GENERAL-MIB", "agentStatusFileTransfer"))
if mibBuilder.loadTexts: agentFileTransferStatusChange.setStatus('current')
agentSetToFactoryDefault = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 4)).setObjects(("AGENT-GENERAL-MIB", "unitID"))
if mibBuilder.loadTexts: agentSetToFactoryDefault.setStatus('current')
agentGratuitousARPTrap = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 5)).setObjects(("AGENT-GENERAL-MIB", "agentGratuitousARPIpAddr"), ("AGENT-GENERAL-MIB", "agentGratuitousARPMacAddr"), ("AGENT-GENERAL-MIB", "agentGratuitousARPPortNumber"), ("AGENT-GENERAL-MIB", "agentGratuitousARPInterfaceName"))
if mibBuilder.loadTexts: agentGratuitousARPTrap.setStatus('current')
agentLoginFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 6)).setObjects(("AGENT-GENERAL-MIB", "agentLoginType"), ("AGENT-GENERAL-MIB", "agentLoginAAAMethod"), ("AGENT-GENERAL-MIB", "agentLoginUserName"), ("AGENT-GENERAL-MIB", "agentLoginIpAddr"), ("AGENT-GENERAL-MIB", "agentLoginMacAddr"), ("AGENT-GENERAL-MIB", "agentLoginAAAServerAddr"), ("AGENT-GENERAL-MIB", "agentLoginFailInfo"))
if mibBuilder.loadTexts: agentLoginFailTrap.setStatus('current')
agentFirmwareUpgrade = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 7)).setObjects(("AGENT-GENERAL-MIB", "swMultiImageVersion"))
if mibBuilder.loadTexts: agentFirmwareUpgrade.setStatus('current')
agentAccessFlashFailed = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 8)).setObjects(("AGENT-GENERAL-MIB", "agentAccessFlashOper"), ("AGENT-GENERAL-MIB", "agentAccessFlashAddr"))
if mibBuilder.loadTexts: agentAccessFlashFailed.setStatus('current')
agentCfgOperCompleteTrap = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 0, 9)).setObjects(("AGENT-GENERAL-MIB", "unitID"), ("AGENT-GENERAL-MIB", "agentCfgOperate"), ("AGENT-GENERAL-MIB", "agentLoginUserName"))
if mibBuilder.loadTexts: agentCfgOperCompleteTrap.setStatus('current')
notificationBindings = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1))
unitID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: unitID.setStatus('current')
trapInfosystemRestart = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapInfosystemRestart.setStatus('current')
agentGratuitousARPIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 3), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentGratuitousARPIpAddr.setStatus('current')
agentGratuitousARPMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentGratuitousARPMacAddr.setStatus('current')
agentGratuitousARPPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentGratuitousARPPortNumber.setStatus('current')
agentLoginType = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("console", 1), ("telnet", 2), ("web", 3), ("ssl", 4), ("ssh", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentLoginType.setStatus('current')
agentLoginAAAMethod = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("server", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentLoginAAAMethod.setStatus('current')
agentLoginUserName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 8), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentLoginUserName.setStatus('current')
agentLoginIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 9), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentLoginIpAddr.setStatus('current')
agentLoginMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 10), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentLoginMacAddr.setStatus('current')
agentLoginAAAServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 11), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentLoginAAAServerAddr.setStatus('current')
agentLoginFailInfo = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("authenticate-fail", 2), ("server-timeout", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentLoginFailInfo.setStatus('current')
agentAccessFlashOper = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentAccessFlashOper.setStatus('current')
agentAccessFlashAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 14), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentAccessFlashAddr.setStatus('current')
agentCfgOperate = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 7, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("save", 1), ("upload", 2), ("download", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentCfgOperate.setStatus('current')
mibBuilder.exportSymbols("AGENT-GENERAL-MIB", agentOutOfBandMgmt=agentOutOfBandMgmt, agentTrapManagerTable=agentTrapManagerTable, agentAccessFlashOper=agentAccessFlashOper, agentFLASHutilizationUnitID=agentFLASHutilizationUnitID, agentCPUutilizationIn5min=agentCPUutilizationIn5min, agentCPUutilizationIn5sec=agentCPUutilizationIn5sec, agentFileSystemUnit=agentFileSystemUnit, agentSystemReset=agentSystemReset, agentGratuitousARPMgmt=agentGratuitousARPMgmt, agentFTPFileSystemTable=agentFTPFileSystemTable, agentBscFileSystemIndex=agentBscFileSystemIndex, agentTrustedHostRowStatus=agentTrustedHostRowStatus, agentTrustedHostMgmt=agentTrustedHostMgmt, agentFTPFileTable=agentFTPFileTable, agentBscSwFileCtrlID=agentBscSwFileCtrlID, agentOutOfBandParityBits=agentOutOfBandParityBits, agentFDBSecurityModule=agentFDBSecurityModule, agentFTPFileForceAgree=agentFTPFileForceAgree, agentFTPUserName=agentFTPUserName, agentTrapCfgDownload=agentTrapCfgDownload, agentCPUutilization=agentCPUutilization, unitID=unitID, swMultiCfgSendUser=swMultiCfgSendUser, agentTrapManagerIndex=agentTrapManagerIndex, agentIpTrapManager=agentIpTrapManager, agentFileTransfer=agentFileTransfer, systemSeverityLogControl=systemSeverityLogControl, agentFTPFileSystemCtrlUnitID=agentFTPFileSystemCtrlUnitID, agentFTPFileEntry=agentFTPFileEntry, agentFTPFileSystemBootUpImage=agentFTPFileSystemBootUpImage, agentPORTutilizationEntry=agentPORTutilizationEntry, UnitList=UnitList, swMultiImageFrom=swMultiImageFrom, swMultiCfgInfoEntry=swMultiCfgInfoEntry, agentFDBClearByPortAction=agentFDBClearByPortAction, agentFDBVid=agentFDBVid, agentGratuitousARPTrap=agentGratuitousARPTrap, agentFDBSecurityTable=agentFDBSecurityTable, agentTrapColdStart=agentTrapColdStart, agentOutOfBandMgmtLinkStatus=agentOutOfBandMgmtLinkStatus, agentTrapRmonFallingAlarm=agentTrapRmonFallingAlarm, agentGratuitousARPLogState=agentGratuitousARPLogState, agentGratuitousARPPeriodicalSendInterval=agentGratuitousARPPeriodicalSendInterval, agentLoginUserName=agentLoginUserName, agentOutOfBandDataBits=agentOutOfBandDataBits, agentTrustedHostEntry=agentTrustedHostEntry, swMultiImageSize=swMultiImageSize, swMultiCfgCtrlEntry=swMultiCfgCtrlEntry, agentIpGetIpFrom=agentIpGetIpFrom, agentNotifyPrefix=agentNotifyPrefix, agentCPUutilizationIn1min=agentCPUutilizationIn1min, agentFTPFileSystemEntry=agentFTPFileSystemEntry, agentFTPFileDscr=agentFTPFileDscr, agentTrustedHostForTELNET=agentTrustedHostForTELNET, agentMibCapabilityDescr=agentMibCapabilityDescr, agentLoginType=agentLoginType, notificationBindings=notificationBindings, swMultiImageInfoID=swMultiImageInfoID, agentARPTotalARPEntries=agentARPTotalARPEntries, agentMibCapabilityType=agentMibCapabilityType, swMultiImageInfoTable=swMultiImageInfoTable, agentBscFileSystemDscr=agentBscFileSystemDscr, agentStatusReset=agentStatusReset, agentGratuitousARPSendDupIpDetectedState=agentGratuitousARPSendDupIpDetectedState, agentFTPFileSystemDeviceFileName=agentFTPFileSystemDeviceFileName, agentPORTutilizationProtIndex=agentPORTutilizationProtIndex, agentFLASHutilizationTotalFLASH=agentFLASHutilizationTotalFLASH, agentBscSwFileForceAgree=agentBscSwFileForceAgree, agentFDBPort=agentFDBPort, agentFTPFileBootUpImage=agentFTPFileBootUpImage, agentFTPFileSystemDscr=agentFTPFileSystemDscr, agentFirmwareUpgrade=agentFirmwareUpgrade, agentBscSwFileBootUpImage=agentBscSwFileBootUpImage, agentCfgOperCompleteTrap=agentCfgOperCompleteTrap, agentLoginAAAMethod=agentLoginAAAMethod, agentTrapManagerIpAddr=agentTrapManagerIpAddr, agentGratuitousARPEntry=agentGratuitousARPEntry, agentReset=agentReset, agentBscFileSystemSaveCfg=agentBscFileSystemSaveCfg, agentBscTftpCfgSIMFirmwareFile=agentBscTftpCfgSIMFirmwareFile, agentBscTftpCfgTechSuooprtFile=agentBscTftpCfgTechSuooprtFile, agentBscFileSystemServerIPv6Addr=agentBscFileSystemServerIPv6Addr, swMultiCFgUpdateTime=swMultiCFgUpdateTime, agentBscCMDLogState=agentBscCMDLogState, agentBasicInfo=agentBasicInfo, agentBscTftpCfgConfigFile=agentBscTftpCfgConfigFile, agentFileSystemActConfig=agentFileSystemActConfig, agentBscTftpConfigMgmt=agentBscTftpConfigMgmt, agentAccessFlashAddr=agentAccessFlashAddr, agentFTPFileSystemTCPPort=agentFTPFileSystemTCPPort, agentFTPFileSystemCtrl=agentFTPFileSystemCtrl, trapInfosystemRestart=trapInfosystemRestart, agentFTPFileAddr=agentFTPFileAddr, swMultiCfgVersion=swMultiCfgVersion, agentBscTftpCfgLogFile=agentBscTftpCfgLogFile, agentFDBClearByPortTable=agentFDBClearByPortTable, agentBscSwFileLocateId=agentBscSwFileLocateId, agentIpNumOfIf=agentIpNumOfIf, agentDualImageStatus=agentDualImageStatus, agentBscSwFileTable=agentBscSwFileTable, agentTrustedHostIPv6PrefixLen=agentTrustedHostIPv6PrefixLen, agentDRAMutilizationUsedDRAM=agentDRAMutilizationUsedDRAM, swMultiCfgSize=swMultiCfgSize, agentTrustedHostIPSubnetMask=agentTrustedHostIPSubnetMask, agentFDBClearByPortEntry=agentFDBClearByPortEntry, swMultiImageCtrlTable=swMultiImageCtrlTable, agentFileSystemBootImage=agentFileSystemBootImage, agentPORTutilizationTX=agentPORTutilizationTX, agentGratuitousARPIpAddr=agentGratuitousARPIpAddr, agentBscSwFileInterfaceName=agentBscSwFileInterfaceName, swMultiCfgBootUp=swMultiCfgBootUp, agentMibCapabilityEntry=agentMibCapabilityEntry, systemSeverityTrapControl=systemSeverityTrapControl, agentFTPFileInterfaceName=agentFTPFileInterfaceName, agentDRAMutilizationTable=agentDRAMutilizationTable, agentGratuitousARPTable=agentGratuitousARPTable, swMultiCfgCtrlID=swMultiCfgCtrlID, swMultiImageCtrlID=swMultiImageCtrlID, agentAccessFlashFailed=agentAccessFlashFailed, swMultiImageInfoEntry=swMultiImageInfoEntry, agentFileSystemDriverID=agentFileSystemDriverID, agentTrapManagerMsgVer=agentTrapManagerMsgVer, agentBscSwFileBIncrement=agentBscSwFileBIncrement, agentBscFileSystemDeviceFileName=agentBscFileSystemDeviceFileName, agentFDBClearAllState=agentFDBClearAllState, swMultiCfgInfoID=swMultiCfgInfoID, agentGratuitousARPMacAddr=agentGratuitousARPMacAddr, agentIpAutoconfig=agentIpAutoconfig, agentBscFileSystemIncrement=agentBscFileSystemIncrement, agentFDBStatus=agentFDBStatus, agentBscTftpCfgSIMLogFile=agentBscTftpCfgSIMLogFile, agentPORTutilizationRX=agentPORTutilizationRX, agentFileTransferStatusChange=agentFileTransferStatusChange, swMultiCfgFrom=swMultiCfgFrom, agentBscBroadcastPingReplyState=agentBscBroadcastPingReplyState, agentBscFileSystemMgmt=agentBscFileSystemMgmt, agentFTPFileSystemAddressType=agentFTPFileSystemAddressType, agentMibCapabilityIndex=agentMibCapabilityIndex, agentFLASHutilizationUsedFLASH=agentFLASHutilizationUsedFLASH, agentLoginFailTrap=agentLoginFailTrap, agentFTPFileSystemPassword=agentFTPFileSystemPassword, agentGratuitousARPLearningState=agentGratuitousARPLearningState, agentSetToFactoryDefault=agentSetToFactoryDefault, swMultiCfgCtrlTable=swMultiCfgCtrlTable, agentBscTftpCfgServerDomainName=agentBscTftpCfgServerDomainName, agentFDBClearByVlanEntry=agentFDBClearByVlanEntry, agentTrapCfgUpload=agentTrapCfgUpload, agentDRAMutilizationUnitID=agentDRAMutilizationUnitID, agentBscTftpCfgServerIPv6Addr=agentBscTftpCfgServerIPv6Addr, agentRs232PortConfig=agentRs232PortConfig, agentBscTftpCfgCertificateFile=agentBscTftpCfgCertificateFile, agentTrustedHostForHTTP=agentTrustedHostForHTTP, agentSnmpTrapState=agentSnmpTrapState, agentIpProtoConfig=agentIpProtoConfig, agentDRAMutilizationEntry=agentDRAMutilizationEntry, swMultiImageSendUser=swMultiImageSendUser, systemSeverityControlMgmt=systemSeverityControlMgmt, agentBscTftpCfgSIMConfigFile=agentBscTftpCfgSIMConfigFile, agentsystemRestart=agentsystemRestart, agentTrustedHostForSNMP=agentTrustedHostForSNMP, agentFTPFileLoadType=agentFTPFileLoadType, agentGratuitousARPInterfaceName=agentGratuitousARPInterfaceName, agentBscFileSystemServerAddr=agentBscFileSystemServerAddr, agentStatusFileTransfer=agentStatusFileTransfer, agentTrustedHostForPING=agentTrustedHostForPING, agentTrustedHostAddr=agentTrustedHostAddr, agentBscSwFileTransferType=agentBscSwFileTransferType, agentOutOfBandAutoLogoutConfig=agentOutOfBandAutoLogoutConfig, agentBscFileSystemDeviceDriverID=agentBscFileSystemDeviceDriverID, agentFTPFileCtrlID=agentFTPFileCtrlID, agentOutOfBandMgmtIpAddr=agentOutOfBandMgmtIpAddr, agentBscTftpCfgServerIPAddr=agentBscTftpCfgServerIPAddr, agentFirmwareType=agentFirmwareType, agentCfgOperate=agentCfgOperate, agentPORTutilizationTable=agentPORTutilizationTable, agentFTPFileSystemUserName=agentFTPFileSystemUserName, agentMgmtProtocolCapability=agentMgmtProtocolCapability, agentOutOfBandMgmtGateway=agentOutOfBandMgmtGateway, agentGratuitousARPSendIpifStatusUpState=agentGratuitousARPSendIpifStatusUpState, agentFTPFileUnitID=agentFTPFileUnitID, agentBscSwFileLoadType=agentBscSwFileLoadType, agentFLASHutilizationEntry=agentFLASHutilizationEntry, agentFTPFileName=agentFTPFileName, agentBscSwFile=agentBscSwFile, agentLoginIpAddr=agentLoginIpAddr, agentBscTftpCfgAttackLogFile=agentBscTftpCfgAttackLogFile, agentLoginMacAddr=agentLoginMacAddr, swMultiImageVersion=swMultiImageVersion, agentARPClearAllState=agentARPClearAllState, agentBasicConfig=agentBasicConfig, agentBscFileSystemForceAgree=agentBscFileSystemForceAgree, agentGratuitousARPPortNumber=agentGratuitousARPPortNumber, agentBscFileSystemServerDomainName=agentBscFileSystemServerDomainName, agentFDBType=agentFDBType, agentARPRetryTimes=agentARPRetryTimes, agentIpTftpServerAddr=agentIpTftpServerAddr, agentMultiCfgMgmt=agentMultiCfgMgmt, agentFTPFileBIncrement=agentFTPFileBIncrement, agentBscFileSystemCtrl=agentBscFileSystemCtrl, agentFTPFileIPv6Addr=agentFTPFileIPv6Addr, agentStatusSaveCfg=agentStatusSaveCfg, agentBscSwFileAddr=agentBscSwFileAddr, agentBscTftpCfgKeyFile=agentBscTftpCfgKeyFile, agentBscSwFileDscr=agentBscSwFileDscr, agentFDBClearByVlanAction=agentFDBClearByVlanAction, agentTrapMgmt=agentTrapMgmt, agentTrapManagerStatus=agentTrapManagerStatus, agentFTPFileSystemLoadType=agentFTPFileSystemLoadType, agentDRAMutilizationTotalDRAM=agentDRAMutilizationTotalDRAM, agentIpAutoconfigTimeout=agentIpAutoconfigTimeout, agentBscCommunityEncryptionState=agentBscCommunityEncryptionState, swMultiCfgInfoTable=swMultiCfgInfoTable, agentTrapManagerEntry=agentTrapManagerEntry, agentBscFileSystemBootUpImage=agentBscFileSystemBootUpImage, agentOutOfBandMgmtSubnetMask=agentOutOfBandMgmtSubnetMask, agentBscFileSystemEntry=agentBscFileSystemEntry, agentBscFileSystemSaveConfigFileName=agentBscFileSystemSaveConfigFileName, agentStatusConsoleInUse=agentStatusConsoleInUse, agentBscSwFileIndex=agentBscSwFileIndex, agentGratuitousARPTrapState=agentGratuitousARPTrapState, agentTrustedHostForSSH=agentTrustedHostForSSH, agentLoginFailInfo=agentLoginFailInfo, agentReboot=agentReboot, agentOutOfBandStopBits=agentOutOfBandStopBits, agentFDBMacAddress=agentFDBMacAddress, agentBscFileSystemServerFileName=agentBscFileSystemServerFileName, agentFDBClearPortIndex=agentFDBClearPortIndex, agentFTPFileSystemIndex=agentFTPFileSystemIndex, agentFTPFileSystemAddress=agentFTPFileSystemAddress, agentDRAMutilization=agentDRAMutilization, agentPORTutilizationUtil=agentPORTutilizationUtil, agentTrustedHostAddrType=agentTrustedHostAddrType, agentOutOfBandMgmtState=agentOutOfBandMgmtState, agentARPMgmt=agentARPMgmt, agentFileSystemConfigTable=agentFileSystemConfigTable, PYSNMP_MODULE_ID=agentGeneralMgmt, agentOutOfBandBaudRateConfig=agentOutOfBandBaudRateConfig, agentBscSwFileEntry=agentBscSwFileEntry, agentTrustedHostTable=agentTrustedHostTable, agentTrustedHostIndex=agentTrustedHostIndex, agentSaveCfg=agentSaveCfg, agentFDBMgmt=agentFDBMgmt, agentFDBSecurityEntry=agentFDBSecurityEntry, swMultiImageCtrlEntry=swMultiImageCtrlEntry, agentFTPTCPPort=agentFTPTCPPort, swMultiCfgAction=swMultiCfgAction, agentTrapWarmStart=agentTrapWarmStart, agentBscFileSystemCtrlUnitID=agentBscFileSystemCtrlUnitID, agentTrapCfgSave=agentTrapCfgSave, agentBscTftpCfgFirmwareFile=agentBscTftpCfgFirmwareFile, agentBscFileSystemLoadType=agentBscFileSystemLoadType, agentFTPFileCtrl=agentFTPFileCtrl, agentMibCapabilityTable=agentMibCapabilityTable, agentFDBClearVid=agentFDBClearVid)
mibBuilder.exportSymbols("AGENT-GENERAL-MIB", agentBscFileSystemTable=agentBscFileSystemTable, agentBscFileSystemSaveConfigDriverID=agentBscFileSystemSaveConfigDriverID, agentFLASHutilizationTable=agentFLASHutilizationTable, agentTrustedHostIPAddress=agentTrustedHostIPAddress, agentBscSwFileIPv6Addr=agentBscSwFileIPv6Addr, agentBscSwFileCtrlUnitID=agentBscSwFileCtrlUnitID, agentTrustedHostForHTTPS=agentTrustedHostForHTTPS, agentFTPPassword=agentFTPPassword, agentTrapManagerComm=agentTrapManagerComm, agentNotifFirmware=agentNotifFirmware, notifFirmwareMgmt=notifFirmwareMgmt, agentSaveToNVRAM=agentSaveToNVRAM, agentNotifMgmt=agentNotifMgmt, agentSerialNumber=agentSerialNumber, swMultiImageCtrlAction=swMultiImageCtrlAction, agentFileSystemConfigEntry=agentFileSystemConfigEntry, agentTrustedHostDelAllState=agentTrustedHostDelAllState, agentBscTftpCfgDebugLogFile=agentBscTftpCfgDebugLogFile, agentFLASHutilization=agentFLASHutilization, swMultiImageFileName=swMultiImageFileName, Ipv6Address=Ipv6Address, agentBscSwFileServerDomainName=agentBscSwFileServerDomainName, agentFileSystemBootConfig=agentFileSystemBootConfig, agentTrapRmonRisingAlarm=agentTrapRmonRisingAlarm, agentFDBClearByVlanTable=agentFDBClearByVlanTable, agentMibCapabilityVersion=agentMibCapabilityVersion, swMultiImageUpdateTime=swMultiImageUpdateTime, agentBscFileSystemInterfaceName=agentBscFileSystemInterfaceName, agentLoginAAAServerAddr=agentLoginAAAServerAddr, agentFTPFileSystemServerFileName=agentFTPFileSystemServerFileName, agentBscSwFileCtrl=agentBscSwFileCtrl, swMultiCfgCurrentUsed=swMultiCfgCurrentUsed, agentGeneralMgmt=agentGeneralMgmt, agentNotify=agentNotify, agentFTPFileIndex=agentFTPFileIndex, swMultiCfgFileName=swMultiCfgFileName)
