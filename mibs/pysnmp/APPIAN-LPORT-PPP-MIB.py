#
# PySNMP MIB module APPIAN-LPORT-PPP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPIAN-LPORT-PPP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acLport, AcNodeId = mibBuilder.importSymbols("APPIAN-SMI-MIB", "acLport", "AcNodeId")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, iso, Counter32, NotificationType, Unsigned32, Gauge32, Integer32, IpAddress, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Counter32", "NotificationType", "Unsigned32", "Gauge32", "Integer32", "IpAddress", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
acPppLinks = ModuleIdentity((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5))
if mibBuilder.loadTexts: acPppLinks.setLastUpdated('0002230000Z')
if mibBuilder.loadTexts: acPppLinks.setOrganization('Appian Communications, Inc.')
class AcPppEndDiscriminator(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("null", 1), ("localAddress", 2), ("networkAddress", 3), ("macAddress", 4), ("magicNumber", 5), ("psndn", 6))

acPppLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1), )
if mibBuilder.loadTexts: acPppLinkStatusTable.setStatus('current')
acPppLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1), ).setIndexNames((0, "APPIAN-LPORT-PPP-MIB", "acPppLinkStatusNodeId"), (0, "APPIAN-LPORT-PPP-MIB", "acPppLinkStatusTimeSlotIndex"))
if mibBuilder.loadTexts: acPppLinkStatusEntry.setStatus('current')
acPppLinkStatusNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 1), AcNodeId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acPppLinkStatusNodeId.setStatus('current')
acPppLinkStatusTimeSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acPppLinkStatusTimeSlotIndex.setStatus('current')
acPppLinkStatusLocalMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalMRU.setStatus('current')
acPppLinkStatusRemoteMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusRemoteMRU.setStatus('current')
acPppLinkStatusLocalToPeerACCMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalToPeerACCMap.setStatus('current')
acPppLinkStatusPeerToLocalACCMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusPeerToLocalACCMap.setStatus('current')
acPppLinkStatusLocalToRemoteProtocolCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalToRemoteProtocolCompression.setStatus('current')
acPppLinkStatusRemoteToLocalProtocolCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusRemoteToLocalProtocolCompression.setStatus('current')
acPppLinkStatusLocalToRemoteACCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalToRemoteACCompression.setStatus('current')
acPppLinkStatusRemoteToLocalACCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusRemoteToLocalACCompression.setStatus('current')
acPppLinkStatusTransmitFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusTransmitFcsSize.setStatus('current')
acPppLinkStatusReceiveFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusReceiveFcsSize.setStatus('current')
acPppLinkStatusLocalMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalMRRU.setStatus('current')
acPppLinkStatusRemoteMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusRemoteMRRU.setStatus('current')
acPppLinkStatusLocalEPDClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 15), AcPppEndDiscriminator()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalEPDClass.setStatus('current')
acPppLinkStatusLocalEPDLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalEPDLength.setStatus('current')
acPppLinkStatusLocalEPDArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 55))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusLocalEPDArray.setStatus('current')
acPppLinkStatusRemoteEPDClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 18), AcPppEndDiscriminator()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusRemoteEPDClass.setStatus('current')
acPppLinkStatusRemoteEPDLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusRemoteEPDLength.setStatus('current')
acPppLinkStatusRemoteEPDArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 5, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 55))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPppLinkStatusRemoteEPDArray.setStatus('current')
mibBuilder.exportSymbols("APPIAN-LPORT-PPP-MIB", acPppLinkStatusRemoteMRU=acPppLinkStatusRemoteMRU, acPppLinkStatusLocalToRemoteACCompression=acPppLinkStatusLocalToRemoteACCompression, acPppLinkStatusReceiveFcsSize=acPppLinkStatusReceiveFcsSize, acPppLinkStatusRemoteMRRU=acPppLinkStatusRemoteMRRU, acPppLinkStatusRemoteEPDArray=acPppLinkStatusRemoteEPDArray, acPppLinkStatusLocalToPeerACCMap=acPppLinkStatusLocalToPeerACCMap, acPppLinkStatusTransmitFcsSize=acPppLinkStatusTransmitFcsSize, acPppLinkStatusLocalMRRU=acPppLinkStatusLocalMRRU, acPppLinkStatusRemoteEPDLength=acPppLinkStatusRemoteEPDLength, acPppLinkStatusLocalEPDArray=acPppLinkStatusLocalEPDArray, acPppLinks=acPppLinks, acPppLinkStatusLocalMRU=acPppLinkStatusLocalMRU, acPppLinkStatusTable=acPppLinkStatusTable, acPppLinkStatusLocalEPDLength=acPppLinkStatusLocalEPDLength, acPppLinkStatusRemoteToLocalACCompression=acPppLinkStatusRemoteToLocalACCompression, acPppLinkStatusEntry=acPppLinkStatusEntry, acPppLinkStatusPeerToLocalACCMap=acPppLinkStatusPeerToLocalACCMap, PYSNMP_MODULE_ID=acPppLinks, acPppLinkStatusLocalEPDClass=acPppLinkStatusLocalEPDClass, acPppLinkStatusNodeId=acPppLinkStatusNodeId, acPppLinkStatusTimeSlotIndex=acPppLinkStatusTimeSlotIndex, acPppLinkStatusLocalToRemoteProtocolCompression=acPppLinkStatusLocalToRemoteProtocolCompression, acPppLinkStatusRemoteEPDClass=acPppLinkStatusRemoteEPDClass, AcPppEndDiscriminator=AcPppEndDiscriminator, acPppLinkStatusRemoteToLocalProtocolCompression=acPppLinkStatusRemoteToLocalProtocolCompression)
