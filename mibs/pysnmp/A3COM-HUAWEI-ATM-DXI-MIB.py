#
# PySNMP MIB module A3COM-HUAWEI-ATM-DXI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-ATM-DXI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, Gauge32, Counter64, ModuleIdentity, Counter32, Integer32, NotificationType, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "Gauge32", "Counter64", "ModuleIdentity", "Counter32", "Integer32", "NotificationType", "MibIdentifier", "iso")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
h3cAtmDxi = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49))
h3cAtmDxi.setRevisions(('2005-04-14 15:18',))
if mibBuilder.loadTexts: h3cAtmDxi.setLastUpdated('200504141518Z')
if mibBuilder.loadTexts: h3cAtmDxi.setOrganization('Huawei-3Com Technologies Co., Ltd.')
h3cAtmDxiScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 1))
h3cAtmDxiConfMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mode1a", 1), ("mode1b", 2), ("mode2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cAtmDxiConfMode.setStatus('current')
h3cAtmDxiIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2))
h3cAtmDxiPvcTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1), )
if mibBuilder.loadTexts: h3cAtmDxiPvcTable.setStatus('current')
h3cAtmDxiPvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiPvcVpi"), (0, "A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiPvcVci"))
if mibBuilder.loadTexts: h3cAtmDxiPvcEntry.setStatus('current')
h3cAtmDxiPvcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: h3cAtmDxiPvcVpi.setStatus('current')
h3cAtmDxiPvcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: h3cAtmDxiPvcVci.setStatus('current')
h3cAtmDxiPvcDFA = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAtmDxiPvcDFA.setStatus('current')
h3cAtmDxiPvcEncType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("snap", 1), ("nlpid", 2), ("mux", 3))).clone('snap')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAtmDxiPvcEncType.setStatus('current')
h3cAtmDxiPvcMapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAtmDxiPvcMapCount.setStatus('current')
h3cAtmDxiPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAtmDxiPvcRowStatus.setStatus('current')
h3cAtmDxiMapTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2), )
if mibBuilder.loadTexts: h3cAtmDxiMapTable.setStatus('current')
h3cAtmDxiMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapPeerIpType"), (0, "A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapPeerIp"), (0, "A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapPvcVpi"), (0, "A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapPvcVci"), (0, "A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapType"))
if mibBuilder.loadTexts: h3cAtmDxiMapEntry.setStatus('current')
h3cAtmDxiMapPeerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: h3cAtmDxiMapPeerIpType.setStatus('current')
h3cAtmDxiMapPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: h3cAtmDxiMapPeerIp.setStatus('current')
h3cAtmDxiMapPvcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: h3cAtmDxiMapPvcVpi.setStatus('current')
h3cAtmDxiMapPvcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: h3cAtmDxiMapPvcVci.setStatus('current')
h3cAtmDxiMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("address", 1), ("inarp", 2), ("default", 3))))
if mibBuilder.loadTexts: h3cAtmDxiMapType.setStatus('current')
h3cAtmDxiMapInarpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 10), )).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAtmDxiMapInarpTime.setStatus('current')
h3cAtmDxiMapBroEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAtmDxiMapBroEnable.setStatus('current')
h3cAtmDxiMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 2, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cAtmDxiMapRowStatus.setStatus('current')
h3cAtmDxiConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 3))
h3cAtmDxiCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 3, 1))
h3cAtmDxiCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 3, 1, 1)).setObjects(("A3COM-HUAWEI-ATM-DXI-MIB", "h3cPVCMAPGroup"), ("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cAtmDxiCompliance = h3cAtmDxiCompliance.setStatus('current')
h3cAtmDxiGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 3, 2))
h3cPVCMAPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 3, 2, 1)).setObjects(("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiPvcDFA"), ("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiPvcEncType"), ("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiPvcMapCount"), ("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiPvcRowStatus"), ("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapBroEnable"), ("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapInarpTime"), ("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPVCMAPGroup = h3cPVCMAPGroup.setStatus('current')
h3cAtmDxiGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 49, 3, 2, 2)).setObjects(("A3COM-HUAWEI-ATM-DXI-MIB", "h3cAtmDxiConfMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cAtmDxiGeneralGroup = h3cAtmDxiGeneralGroup.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-ATM-DXI-MIB", h3cAtmDxiIfObjects=h3cAtmDxiIfObjects, h3cAtmDxiMapPeerIp=h3cAtmDxiMapPeerIp, h3cAtmDxiPvcVci=h3cAtmDxiPvcVci, h3cAtmDxiPvcRowStatus=h3cAtmDxiPvcRowStatus, h3cAtmDxiCompliance=h3cAtmDxiCompliance, h3cAtmDxiMapEntry=h3cAtmDxiMapEntry, h3cAtmDxiConformance=h3cAtmDxiConformance, h3cAtmDxi=h3cAtmDxi, h3cAtmDxiMapPvcVci=h3cAtmDxiMapPvcVci, h3cAtmDxiPvcMapCount=h3cAtmDxiPvcMapCount, h3cAtmDxiPvcTable=h3cAtmDxiPvcTable, h3cAtmDxiCompliances=h3cAtmDxiCompliances, h3cAtmDxiMapPvcVpi=h3cAtmDxiMapPvcVpi, h3cAtmDxiMapBroEnable=h3cAtmDxiMapBroEnable, h3cAtmDxiPvcVpi=h3cAtmDxiPvcVpi, h3cAtmDxiGroup=h3cAtmDxiGroup, h3cPVCMAPGroup=h3cPVCMAPGroup, h3cAtmDxiMapType=h3cAtmDxiMapType, h3cAtmDxiPvcEntry=h3cAtmDxiPvcEntry, PYSNMP_MODULE_ID=h3cAtmDxi, h3cAtmDxiMapTable=h3cAtmDxiMapTable, h3cAtmDxiMapPeerIpType=h3cAtmDxiMapPeerIpType, h3cAtmDxiMapInarpTime=h3cAtmDxiMapInarpTime, h3cAtmDxiConfMode=h3cAtmDxiConfMode, h3cAtmDxiPvcDFA=h3cAtmDxiPvcDFA, h3cAtmDxiPvcEncType=h3cAtmDxiPvcEncType, h3cAtmDxiGeneralGroup=h3cAtmDxiGeneralGroup, h3cAtmDxiMapRowStatus=h3cAtmDxiMapRowStatus, h3cAtmDxiScalarGroup=h3cAtmDxiScalarGroup)
