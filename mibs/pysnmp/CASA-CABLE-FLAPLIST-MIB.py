#
# PySNMP MIB module CASA-CABLE-FLAPLIST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CASA-CABLE-FLAPLIST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
casa, = mibBuilder.importSymbols("CASA-MIB", "casa")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, NotificationType, IpAddress, TimeTicks, ObjectIdentity, MibIdentifier, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Gauge32, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "IpAddress", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Gauge32", "ModuleIdentity", "Integer32")
DisplayString, RowStatus, TruthValue, DateAndTime, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "DateAndTime", "MacAddress", "TextualConvention")
casaFlapListMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 20858, 10, 11))
if mibBuilder.loadTexts: casaFlapListMib.setLastUpdated('200809051453Z')
if mibBuilder.loadTexts: casaFlapListMib.setOrganization('Casa Systems Inc')
casaMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10))
casaFlapListMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1))
casaFlapListGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1))
casaFlapInsertionTime = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 1), Unsigned32().clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapInsertionTime.setStatus('current')
casaFlapMissThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(6)).setUnits('times').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapMissThreshold.setStatus('current')
casaFlapPowerAdjThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 3), Unsigned32().clone(2)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapPowerAdjThreshold.setStatus('current')
casaFlapListAging = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 86400)).clone(10080)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListAging.setStatus('current')
casaFlapListMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListMaxSize.setStatus('current')
casaFlapListResetAll = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListResetAll.setStatus('current')
casaFlapListLastResetTime = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapListLastResetTime.setStatus('current')
casaFlapListClearAll = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListClearAll.setStatus('current')
casaFlapListLastClearTime = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapListLastClearTime.setStatus('current')
casaFlapListCheckInterval = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 10), Unsigned32().clone(120)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListCheckInterval.setStatus('current')
casaFlapListTable = MibTable((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2), )
if mibBuilder.loadTexts: casaFlapListTable.setStatus('current')
casaFlapListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1), ).setIndexNames((0, "CASA-CABLE-FLAPLIST-MIB", "casaFlapCmMacAddress"))
if mibBuilder.loadTexts: casaFlapListEntry.setStatus('current')
casaFlapCmMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmMacAddress.setStatus('current')
casaFlapCmUpstreamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmUpstreamIfIndex.setStatus('current')
casaFlapCmDownstreamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmDownstreamIfIndex.setStatus('current')
casaFlapCmInsertionFails = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 4), Integer32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmInsertionFails.setStatus('current')
casaFlapCmHits = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 5), Unsigned32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmHits.setStatus('current')
casaFlapCmMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 6), Unsigned32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmMisses.setStatus('current')
casaFlapCmCRCCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmCRCCounts.setStatus('current')
casaFlapCmPowerAdjustments = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmPowerAdjustments.setStatus('current')
casaFlapCmFlapCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmFlapCounts.setStatus('current')
casaFlapCmLastFlapTime = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmLastFlapTime.setStatus('current')
casaFlapCmFlapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapCmFlapRowStatus.setStatus('current')
casaFlapListGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 2))
casaFlapListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 20858, 10, 11, 2, 1)).setObjects(("CASA-CABLE-FLAPLIST-MIB", "casaFlapInsertionTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapMissThreshold"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapPowerAdjThreshold"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListAging"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListMaxSize"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListResetAll"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListLastResetTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListClearAll"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListLastClearTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListCheckInterval"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmUpstreamIfIndex"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmDownstreamIfIndex"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmInsertionFails"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmHits"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmMisses"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmCRCCounts"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmPowerAdjustments"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmFlapCounts"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmLastFlapTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmFlapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    casaFlapListGroup = casaFlapListGroup.setStatus('current')
casaFlapListCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 3))
casaFlapListCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 20858, 10, 11, 3, 1)).setObjects(("CASA-CABLE-FLAPLIST-MIB", "casaFlapListGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    casaFlapListCompliance = casaFlapListCompliance.setStatus('current')
mibBuilder.exportSymbols("CASA-CABLE-FLAPLIST-MIB", casaFlapCmHits=casaFlapCmHits, casaFlapListGlobal=casaFlapListGlobal, casaFlapPowerAdjThreshold=casaFlapPowerAdjThreshold, casaFlapCmFlapRowStatus=casaFlapCmFlapRowStatus, casaFlapCmPowerAdjustments=casaFlapCmPowerAdjustments, casaFlapListTable=casaFlapListTable, casaFlapListCompliances=casaFlapListCompliances, casaFlapListClearAll=casaFlapListClearAll, casaFlapCmMacAddress=casaFlapCmMacAddress, PYSNMP_MODULE_ID=casaFlapListMib, casaMgmt=casaMgmt, casaFlapListEntry=casaFlapListEntry, casaFlapCmDownstreamIfIndex=casaFlapCmDownstreamIfIndex, casaFlapListResetAll=casaFlapListResetAll, casaFlapListAging=casaFlapListAging, casaFlapCmFlapCounts=casaFlapCmFlapCounts, casaFlapMissThreshold=casaFlapMissThreshold, casaFlapListLastClearTime=casaFlapListLastClearTime, casaFlapInsertionTime=casaFlapInsertionTime, casaFlapListGroup=casaFlapListGroup, casaFlapCmCRCCounts=casaFlapCmCRCCounts, casaFlapListMaxSize=casaFlapListMaxSize, casaFlapListMIBObjects=casaFlapListMIBObjects, casaFlapCmLastFlapTime=casaFlapCmLastFlapTime, casaFlapListGroups=casaFlapListGroups, casaFlapListLastResetTime=casaFlapListLastResetTime, casaFlapCmInsertionFails=casaFlapCmInsertionFails, casaFlapCmMisses=casaFlapCmMisses, casaFlapListMib=casaFlapListMib, casaFlapCmUpstreamIfIndex=casaFlapCmUpstreamIfIndex, casaFlapListCompliance=casaFlapListCompliance, casaFlapListCheckInterval=casaFlapListCheckInterval)
