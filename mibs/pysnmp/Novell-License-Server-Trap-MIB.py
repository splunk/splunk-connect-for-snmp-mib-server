#
# PySNMP MIB module Novell-License-Server-Trap-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Novell-License-Server-Trap-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InternationalDisplayString, = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "InternationalDisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter64, NotificationType, NotificationType, ObjectIdentity, Gauge32, Integer32, Unsigned32, IpAddress, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, MibIdentifier, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "NotificationType", "NotificationType", "ObjectIdentity", "Gauge32", "Integer32", "Unsigned32", "IpAddress", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "MibIdentifier", "TimeTicks", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
nlstrap_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 73)).setLabel("nlstrap-mib")
trapinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 73, 1))
serverName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 1), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: serverName.setStatus('mandatory')
trapTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 2), Integer32())
if mibBuilder.loadTexts: trapTime.setStatus('mandatory')
appName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 3), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: appName.setStatus('mandatory')
userName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: userName.setStatus('mandatory')
networkAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4))
if mibBuilder.loadTexts: networkAddress.setStatus('mandatory')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 73, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: macAddress.setStatus('mandatory')
lsRequestSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,1)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRequestSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,2)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRequestResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,3)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRequestAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,4)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRequestBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,5)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRequestInsuffUnits = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,6)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRequestLicUnavail = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,7)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRequestNetUnavail = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,8)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRelSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,9)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRelSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,10)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRelResouceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,11)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRelAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,12)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRelBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,13)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsRelBadHandle = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,14)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,15)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,16)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateResouceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,17)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,18)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,19)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateBadHandle = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,20)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateInsuffUnits = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,21)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateLicUnavail = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,22)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateLicTerm = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,23)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
lsUpdateLicExpired = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,24)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"), ("Novell-License-Server-Trap-MIB", "userName"), ("Novell-License-Server-Trap-MIB", "networkAddress"), ("Novell-License-Server-Trap-MIB", "macAddress"))
addAssignSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,25)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addAssignSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,26)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addAssignResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,27)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addAssignAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,28)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addAssignBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,29)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
removeAssignSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,30)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
removeAssignSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,31)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
removeAssignResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,32)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
removeAssignAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,33)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
removeAssignBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,34)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
installCertifSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,35)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
installCertifSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,36)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
installCertifResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,37)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
installCertifAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,38)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
installCertifBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,39)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
deleteCertifSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,40)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
deleteCertifSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,41)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
deleteCertifResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,42)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
deleteCertifAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,43)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
deleteCertifBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,44)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
transOwnerSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,45)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
transOwnerSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,46)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
transOwnerResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,47)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
transOwnerAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,48)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
transOwnerBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,49)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addProdInfoSuccess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,50)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addProdInfoSystemError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,51)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addProdInfoResourceError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,52)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addProdInfoAuthError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,53)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
addProdInfoBadArg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,54)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"), ("Novell-License-Server-Trap-MIB", "appName"))
nlsTrapLoaded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,98)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"))
nlsTrapUnloaded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 73) + (0,99)).setObjects(("Novell-License-Server-Trap-MIB", "serverName"), ("Novell-License-Server-Trap-MIB", "trapTime"))
mibBuilder.exportSymbols("Novell-License-Server-Trap-MIB", installCertifSuccess=installCertifSuccess, addProdInfoResourceError=addProdInfoResourceError, lsUpdateSuccess=lsUpdateSuccess, lsUpdateSystemError=lsUpdateSystemError, userName=userName, lsUpdateBadArg=lsUpdateBadArg, removeAssignSuccess=removeAssignSuccess, transOwnerResourceError=transOwnerResourceError, nlsTrapLoaded=nlsTrapLoaded, addProdInfoBadArg=addProdInfoBadArg, lsRelResouceError=lsRelResouceError, installCertifBadArg=installCertifBadArg, appName=appName, installCertifAuthError=installCertifAuthError, nlsTrapUnloaded=nlsTrapUnloaded, lsRequestAuthError=lsRequestAuthError, removeAssignBadArg=removeAssignBadArg, addProdInfoSuccess=addProdInfoSuccess, lsUpdateBadHandle=lsUpdateBadHandle, installCertifSystemError=installCertifSystemError, lsRequestResourceError=lsRequestResourceError, removeAssignResourceError=removeAssignResourceError, deleteCertifBadArg=deleteCertifBadArg, addAssignAuthError=addAssignAuthError, nlstrap_mib=nlstrap_mib, deleteCertifSuccess=deleteCertifSuccess, lsRequestNetUnavail=lsRequestNetUnavail, deleteCertifAuthError=deleteCertifAuthError, addAssignSuccess=addAssignSuccess, addProdInfoAuthError=addProdInfoAuthError, lsRelSystemError=lsRelSystemError, lsRequestInsuffUnits=lsRequestInsuffUnits, lsUpdateLicTerm=lsUpdateLicTerm, lsRequestBadArg=lsRequestBadArg, addAssignResourceError=addAssignResourceError, installCertifResourceError=installCertifResourceError, lsRequestSuccess=lsRequestSuccess, deleteCertifResourceError=deleteCertifResourceError, mibDoc=mibDoc, addProdInfoSystemError=addProdInfoSystemError, removeAssignSystemError=removeAssignSystemError, lsRelBadHandle=lsRelBadHandle, lsUpdateLicUnavail=lsUpdateLicUnavail, networkAddress=networkAddress, trapinfo=trapinfo, macAddress=macAddress, deleteCertifSystemError=deleteCertifSystemError, lsUpdateInsuffUnits=lsUpdateInsuffUnits, removeAssignAuthError=removeAssignAuthError, lsUpdateAuthError=lsUpdateAuthError, serverName=serverName, lsRequestLicUnavail=lsRequestLicUnavail, lsRelAuthError=lsRelAuthError, lsUpdateResouceError=lsUpdateResouceError, transOwnerSystemError=transOwnerSystemError, transOwnerBadArg=transOwnerBadArg, transOwnerSuccess=transOwnerSuccess, lsRelSuccess=lsRelSuccess, transOwnerAuthError=transOwnerAuthError, addAssignBadArg=addAssignBadArg, lsUpdateLicExpired=lsUpdateLicExpired, lsRequestSystemError=lsRequestSystemError, novell=novell, trapTime=trapTime, lsRelBadArg=lsRelBadArg, addAssignSystemError=addAssignSystemError)
