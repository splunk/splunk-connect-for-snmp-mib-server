#
# PySNMP MIB module IOMEGANAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IOMEGANAS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:44:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, TimeTicks, enterprises, Counter64, MibIdentifier, iso, Counter32, Gauge32, ObjectIdentity, Unsigned32, IpAddress, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "TimeTicks", "enterprises", "Counter64", "MibIdentifier", "iso", "Counter32", "Gauge32", "ObjectIdentity", "Unsigned32", "IpAddress", "Bits", "NotificationType")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
lenovoemc = ModuleIdentity((1, 3, 6, 1, 4, 1, 11369))
lenovoemc.setRevisions(('2007-03-01 10:11',))
if mibBuilder.loadTexts: lenovoemc.setLastUpdated('200703011011Z')
if mibBuilder.loadTexts: lenovoemc.setOrganization('LenovoEMC')
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
iomegaNAS = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10))
iomegaNASInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 1))
systemPerformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 2))
iomegaNASFunctionStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 3))
iomegaNASStorage = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 4))
iomegaNASDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 5))
iomegaNASSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 6))
iomegaNASEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 7))
iomegaNASNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 8))
deviceDescr = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('Iomega NAS BOX')).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceDescr.setStatus('current')
deviceName = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceName.setStatus('current')
netConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 1, 3))
ioTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1), )
if mibBuilder.loadTexts: ioTable.setStatus('current')
ioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "ioIndex"))
if mibBuilder.loadTexts: ioEntry.setStatus('current')
ioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: ioIndex.setStatus('current')
diskName = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskName.setStatus('current')
ioMgrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioMgrs.setStatus('current')
ioMgws = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioMgws.setStatus('current')
ioReqrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioReqrs.setStatus('current')
ioReqws = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioReqws.setStatus('current')
ioKbrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioKbrs.setStatus('current')
ioKbws = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioKbws.setStatus('current')
ioAvgQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioAvgQueue.setStatus('current')
ioAvgWait = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioAvgWait.setStatus('current')
ioAvgSvc = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioAvgSvc.setStatus('current')
ioAvgUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioAvgUtil.setStatus('current')
ioCpuTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 2, 1, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioCpuTime.setStatus('current')
bkupTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 3, 1), )
if mibBuilder.loadTexts: bkupTable.setStatus('current')
bkupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 3, 1, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "bkupIndex"))
if mibBuilder.loadTexts: bkupEntry.setStatus('current')
bkupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: bkupIndex.setStatus('current')
bkupClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bkupClient.setStatus('current')
bkupltStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 3, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bkupltStatus.setStatus('current')
bkupTotalSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 3, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bkupTotalSpace.setStatus('current')
remoteAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 3, 2))
conTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 3, 3), )
if mibBuilder.loadTexts: conTable.setStatus('current')
conEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 3, 3, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "conIndex"))
if mibBuilder.loadTexts: conEntry.setStatus('current')
conIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)))
if mibBuilder.loadTexts: conIndex.setStatus('current')
conCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: conCount.setStatus('current')
conProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 3, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: conProtocol.setStatus('current')
mediaService = MibIdentifier((1, 3, 6, 1, 4, 1, 11369, 10, 3, 4))
raidStatus = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 4, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidStatus.setStatus('current')
raidLevel = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidLevel.setStatus('current')
diskTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 4, 3), )
if mibBuilder.loadTexts: diskTable.setStatus('current')
diskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 4, 3, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "diskIndex"))
if mibBuilder.loadTexts: diskEntry.setStatus('current')
diskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)))
if mibBuilder.loadTexts: diskIndex.setStatus('current')
diskID = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 4, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskID.setStatus('current')
diskSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 4, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskSize.setStatus('current')
diskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 4, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatus.setStatus('current')
usbTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 5, 1), )
if mibBuilder.loadTexts: usbTable.setStatus('current')
usbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 5, 1, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "usbIndex"))
if mibBuilder.loadTexts: usbEntry.setStatus('current')
usbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 5, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: usbIndex.setStatus('current')
usbManufacture = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbManufacture.setStatus('current')
usbModel = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbModel.setStatus('current')
usbType = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbType.setStatus('current')
fanTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 6, 1), )
if mibBuilder.loadTexts: fanTable.setStatus('current')
fanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 6, 1, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "fanIndex"))
if mibBuilder.loadTexts: fanEntry.setStatus('current')
fanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: fanIndex.setStatus('current')
fanName = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanName.setStatus('current')
fanValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanValue.setStatus('current')
tempTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 6, 2), )
if mibBuilder.loadTexts: tempTable.setStatus('current')
tempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 6, 2, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "tempIndex"))
if mibBuilder.loadTexts: tempEntry.setStatus('current')
tempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: tempIndex.setStatus('current')
tempName = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempName.setStatus('current')
tempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempValue.setStatus('current')
voltTable = MibTable((1, 3, 6, 1, 4, 1, 11369, 10, 6, 3), )
if mibBuilder.loadTexts: voltTable.setStatus('current')
voltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11369, 10, 6, 3, 1), ).setIndexNames((0, "IOMEGANAS-MIB", "voltIndex"))
if mibBuilder.loadTexts: voltEntry.setStatus('current')
voltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: voltIndex.setStatus('current')
voltName = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltName.setStatus('current')
voltValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11369, 10, 6, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltValue.setStatus('current')
eventID = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventID.setStatus('current')
eventText = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 7, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventText.setStatus('current')
iomegaNASNotificationError = NotificationType((1, 3, 6, 1, 4, 1, 11369, 10, 8, 1)).setObjects(("IOMEGANAS-MIB", "deviceDescr"), ("IOMEGANAS-MIB", "deviceName"), ("IOMEGANAS-MIB", "eventID"), ("IOMEGANAS-MIB", "eventText"))
if mibBuilder.loadTexts: iomegaNASNotificationError.setStatus('current')
dns0 = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 1, 3, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns0.setStatus('current')
dns1 = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 1, 3, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns1.setStatus('current')
wins0 = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 1, 3, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wins0.setStatus('current')
wins1 = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 1, 3, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wins1.setStatus('current')
raEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raEnabled.setStatus('current')
mediaServiceEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11369, 10, 3, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaServiceEnabled.setStatus('current')
iomegaNASNotificationWarn = NotificationType((1, 3, 6, 1, 4, 1, 11369, 10, 8, 2)).setObjects(("IOMEGANAS-MIB", "deviceDescr"), ("IOMEGANAS-MIB", "deviceName"), ("IOMEGANAS-MIB", "eventID"), ("IOMEGANAS-MIB", "eventText"))
if mibBuilder.loadTexts: iomegaNASNotificationWarn.setStatus('current')
iomegaNASNotificationInfo = NotificationType((1, 3, 6, 1, 4, 1, 11369, 10, 8, 3)).setObjects(("IOMEGANAS-MIB", "deviceDescr"), ("IOMEGANAS-MIB", "deviceName"), ("IOMEGANAS-MIB", "eventID"), ("IOMEGANAS-MIB", "eventText"))
if mibBuilder.loadTexts: iomegaNASNotificationInfo.setStatus('current')
mibBuilder.exportSymbols("IOMEGANAS-MIB", bkupIndex=bkupIndex, ioMgws=ioMgws, diskStatus=diskStatus, voltValue=voltValue, wins0=wins0, usbType=usbType, tempTable=tempTable, dod=dod, voltName=voltName, ioIndex=ioIndex, iomegaNASNotificationInfo=iomegaNASNotificationInfo, fanTable=fanTable, private=private, raidStatus=raidStatus, tempEntry=tempEntry, tempValue=tempValue, ioKbws=ioKbws, iomegaNASNotificationError=iomegaNASNotificationError, ioMgrs=ioMgrs, ioTable=ioTable, ioEntry=ioEntry, ioAvgWait=ioAvgWait, netConfig=netConfig, bkupEntry=bkupEntry, voltTable=voltTable, ioReqws=ioReqws, ioAvgSvc=ioAvgSvc, enterprises=enterprises, ioAvgQueue=ioAvgQueue, ioKbrs=ioKbrs, conTable=conTable, usbModel=usbModel, bkupltStatus=bkupltStatus, PYSNMP_MODULE_ID=lenovoemc, fanIndex=fanIndex, diskName=diskName, ioReqrs=ioReqrs, tempName=tempName, voltEntry=voltEntry, ioAvgUtil=ioAvgUtil, fanValue=fanValue, dns1=dns1, fanEntry=fanEntry, eventText=eventText, iomegaNASInfo=iomegaNASInfo, iomegaNASNotificationWarn=iomegaNASNotificationWarn, org=org, conIndex=conIndex, eventID=eventID, usbManufacture=usbManufacture, voltIndex=voltIndex, raidLevel=raidLevel, fanName=fanName, dns0=dns0, deviceDescr=deviceDescr, iomegaNASNotifications=iomegaNASNotifications, bkupTable=bkupTable, remoteAccess=remoteAccess, mediaService=mediaService, mediaServiceEnabled=mediaServiceEnabled, iomegaNASStorage=iomegaNASStorage, bkupTotalSpace=bkupTotalSpace, usbEntry=usbEntry, iomegaNASEvent=iomegaNASEvent, tempIndex=tempIndex, usbIndex=usbIndex, diskEntry=diskEntry, lenovoemc=lenovoemc, wins1=wins1, systemPerformance=systemPerformance, deviceName=deviceName, iomegaNASDevice=iomegaNASDevice, conProtocol=conProtocol, conEntry=conEntry, diskIndex=diskIndex, internet=internet, ioCpuTime=ioCpuTime, iomegaNASSensor=iomegaNASSensor, diskTable=diskTable, diskSize=diskSize, iomegaNASFunctionStatus=iomegaNASFunctionStatus, iomegaNAS=iomegaNAS, raEnabled=raEnabled, usbTable=usbTable, bkupClient=bkupClient, diskID=diskID, conCount=conCount)
