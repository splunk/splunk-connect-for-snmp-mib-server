#
# PySNMP MIB module CISCO-SCTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SCTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:54:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, iso, Bits, Unsigned32, IpAddress, Counter32, Integer32, ObjectIdentity, TimeTicks, MibIdentifier, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "Bits", "Unsigned32", "IpAddress", "Counter32", "Integer32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
ceSctpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 74))
ceSctpMIB.setRevisions(('2005-12-21 00:00', '2001-06-07 00:00',))
if mibBuilder.loadTexts: ceSctpMIB.setLastUpdated('200512210000Z')
if mibBuilder.loadTexts: ceSctpMIB.setOrganization('Cisco Systems, Inc.')
class InetAddressType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 16))
    namedValues = NamedValues(("unknown", 0), ("ipv4", 1), ("ipv6", 2), ("dns", 16))

class InetAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

ceSctpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 74, 1))
ceSctpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 74, 2))
ceSctpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1))
ceSctpTables = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2))
ceSctpRtoAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("vanj", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpRtoAlgorithm.setStatus('current')
ceSctpMaxAssociations = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpMaxAssociations.setStatus('current')
ceSctpCurrEstab = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpCurrEstab.setStatus('current')
ceSctpActiveEstab = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpActiveEstab.setStatus('current')
ceSctpPassiveEstab = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpPassiveEstab.setStatus('current')
ceSctpAborted = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAborted.setStatus('current')
ceSctpShutdowns = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpShutdowns.setStatus('current')
ceSctpStatBytesRec = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatBytesRec.setStatus('current')
ceSctpStatBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatBytesSent.setStatus('current')
ceSctpStatChunksDiscard = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksDiscard.setStatus('current')
ceSctpStatChunksSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksSent.setStatus('current')
ceSctpStatChunksSentControl = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksSentControl.setStatus('current')
ceSctpStatChunksSentOrdered = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksSentOrdered.setStatus('current')
ceSctpStatChunksSentUnOrdered = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksSentUnOrdered.setStatus('current')
ceSctpStatChunksRec = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksRec.setStatus('current')
ceSctpStatChunksRecControl = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksRecControl.setStatus('current')
ceSctpStatChunksRecOrdered = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksRecOrdered.setStatus('current')
ceSctpStatChunksRecUnOrdered = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksRecUnOrdered.setStatus('current')
ceSctpStatDatagramsRec = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatDatagramsRec.setStatus('current')
ceSctpStatDatagramsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatDatagramsSent.setStatus('current')
ceSctpStatFragmentedUsrMessages = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatFragmentedUsrMessages.setStatus('current')
ceSctpStatReassembledUsrMessages = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatReassembledUsrMessages.setStatus('current')
ceSctpStatChunksReTrans = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatChunksReTrans.setStatus('current')
ceSctpStatOutOfBlue = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatOutOfBlue.setStatus('current')
ceSctpStatT1expired = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatT1expired.setStatus('current')
ceSctpStatT2expired = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpStatT2expired.setStatus('current')
ceSctpAssocTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1), )
if mibBuilder.loadTexts: ceSctpAssocTable.setStatus('current')
ceSctpAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SCTP-MIB", "ceSctpAssocId"))
if mibBuilder.loadTexts: ceSctpAssocEntry.setStatus('current')
ceSctpAssocId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)))
if mibBuilder.loadTexts: ceSctpAssocId.setStatus('current')
ceSctpAssocState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("closed", 1), ("cookieWait", 2), ("cookieEchoed", 3), ("established", 4), ("shutdownPending", 5), ("shutdownSent", 6), ("shutdownReceived", 7), ("shutdownAckSent", 8), ("deleteTCB", 9), ("retrieval", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocState.setStatus('current')
ceSctpAssocUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocUpTime.setStatus('current')
ceSctpAssocRtoMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 3600000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRtoMin.setStatus('current')
ceSctpAssocRtoMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 3600000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRtoMax.setStatus('current')
ceSctpAssocRtoInitial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 3600000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRtoInitial.setStatus('current')
ceSctpAssocValCookieLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 3600000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocValCookieLife.setStatus('current')
ceSctpAssocMaxInitRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 3600000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocMaxInitRetr.setStatus('current')
ceSctpAssocInitialT1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 3600000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocInitialT1.setStatus('current')
ceSctpAssocInitialT2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 3600000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocInitialT2.setStatus('current')
ceSctpAssocRemHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemHostName.setStatus('current')
ceSctpAssocLocalSCTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4096, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocLocalSCTPPort.setStatus('current')
ceSctpAssocRemSCTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4096, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemSCTPPort.setStatus('current')
ceSctpAssocRemPrimaryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemPrimaryAddressType.setStatus('current')
ceSctpAssocRemPrimaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemPrimaryAddress.setStatus('current')
ceSctpAssocCongestionLevels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionLevels.setStatus('current')
ceSctpAssocCongestionLevelsCur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionLevelsCur.setStatus('current')
ceSctpAssocCongestionAbate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionAbate1.setStatus('current')
ceSctpAssocCongestionAbate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionAbate2.setStatus('current')
ceSctpAssocCongestionAbate3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionAbate3.setStatus('current')
ceSctpAssocCongestionOnset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionOnset1.setStatus('current')
ceSctpAssocCongestionOnset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionOnset2.setStatus('current')
ceSctpAssocCongestionOnset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocCongestionOnset3.setStatus('current')
ceSctpAssocInStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocInStreams.setStatus('current')
ceSctpAssocOutStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocOutStreams.setStatus('current')
ceSctpAssocMaxRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocMaxRetr.setStatus('current')
ceSctpAssocMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocMTU.setStatus('current')
ceSctpAssocLocRecWnd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocLocRecWnd.setStatus('current')
ceSctpAssocLocRecWndLowMark = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocLocRecWndLowMark.setStatus('current')
ceSctpAssocLocRecWndZeroCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocLocRecWndZeroCnt.setStatus('current')
ceSctpAssocRemRecWnd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemRecWnd.setStatus('current')
ceSctpAssocRemRecWndLowMark = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemRecWndLowMark.setStatus('current')
ceSctpAssocRemRecWndZeroCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemRecWndZeroCnt.setStatus('current')
ceSctpAssocULPDatagramsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('DataGrams').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocULPDatagramsQueued.setStatus('current')
ceSctpAssocULPDatagramsQueuedHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('DataGrams').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocULPDatagramsQueuedHigh.setStatus('current')
ceSctpAssocChecksumErrorCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChecksumErrorCounter.setStatus('current')
ceSctpAssocBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocBytesSent.setStatus('current')
ceSctpAssocBytesRec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocBytesRec.setStatus('current')
ceSctpAssocChunksDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksDiscarded.setStatus('current')
ceSctpAssocChunksRec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksRec.setStatus('current')
ceSctpAssocChunksRecControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksRecControl.setStatus('current')
ceSctpAssocChunksRecOrdered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksRecOrdered.setStatus('current')
ceSctpAssocChunksRecUnOrdered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksRecUnOrdered.setStatus('current')
ceSctpAssocChunksRecOutOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksRecOutOrder.setStatus('current')
ceSctpAssocChunksReTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksReTrans.setStatus('current')
ceSctpAssocChunksSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksSent.setStatus('current')
ceSctpAssocChunksSentControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksSentControl.setStatus('current')
ceSctpAssocChunksSentOrdered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksSentOrdered.setStatus('current')
ceSctpAssocChunksSentUnOrdered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocChunksSentUnOrdered.setStatus('current')
ceSctpAssocDatagramsRec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocDatagramsRec.setStatus('current')
ceSctpAssocDatagramsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocDatagramsSent.setStatus('current')
ceSctpAssocRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 1, 1, 52), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRowStatus.setStatus('current')
ceSctpAssocLocalAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 2), )
if mibBuilder.loadTexts: ceSctpAssocLocalAddressTable.setStatus('current')
ceSctpAssocLocalAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-SCTP-MIB", "ceSctpAssocId"), (0, "CISCO-SCTP-MIB", "ceSctpAssocLocalAddressIPType"), (0, "CISCO-SCTP-MIB", "ceSctpAssocLocalAddressIP"))
if mibBuilder.loadTexts: ceSctpAssocLocalAddressEntry.setStatus('current')
ceSctpAssocLocalAddressIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ceSctpAssocLocalAddressIPType.setStatus('current')
ceSctpAssocLocalAddressIP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: ceSctpAssocLocalAddressIP.setStatus('current')
ceSctpAssocLocalAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocLocalAddressRowStatus.setStatus('current')
ceSctpAssocRemAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3), )
if mibBuilder.loadTexts: ceSctpAssocRemAddressTable.setStatus('current')
ceSctpAssocRemAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-SCTP-MIB", "ceSctpAssocId"), (0, "CISCO-SCTP-MIB", "ceSctpAssocRemAddressIPType"), (0, "CISCO-SCTP-MIB", "ceSctpAssocRemAddressIP"))
if mibBuilder.loadTexts: ceSctpAssocRemAddressEntry.setStatus('current')
ceSctpAssocRemAddressIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ceSctpAssocRemAddressIPType.setStatus('current')
ceSctpAssocRemAddressIP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: ceSctpAssocRemAddressIP.setStatus('current')
ceSctpAssocRemAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressStatus.setStatus('current')
ceSctpAssocRemAddressRTO = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressRTO.setStatus('current')
ceSctpAssocRemAddressHtBtFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressHtBtFlag.setStatus('current')
ceSctpAssocRemAddressHtBtTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressHtBtTime.setStatus('current')
ceSctpAssocRemAddressMaxRetran = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressMaxRetran.setStatus('current')
ceSctpAssocRemAddressRetransCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressRetransCnt.setStatus('current')
ceSctpAssocRemAddressSRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressSRTT.setStatus('current')
ceSctpAssocRemAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 74, 1, 2, 3, 1, 10), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceSctpAssocRemAddressRowStatus.setStatus('current')
ceSctpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 1))
ceSctpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 2))
ceSctpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 2, 1)).setObjects(("CISCO-SCTP-MIB", "ceSctpGeneralVariablesGroup"), ("CISCO-SCTP-MIB", "ceSctpAssocTablesVariablesGroup"), ("CISCO-SCTP-MIB", "ceSctpStateStatGroup"), ("CISCO-SCTP-MIB", "ceSctpOtherStatGroup"), ("CISCO-SCTP-MIB", "ceSctpAssocStatGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ceSctpCompliance = ceSctpCompliance.setStatus('current')
ceSctpGeneralVariablesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 1, 1)).setObjects(("CISCO-SCTP-MIB", "ceSctpRtoAlgorithm"), ("CISCO-SCTP-MIB", "ceSctpMaxAssociations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ceSctpGeneralVariablesGroup = ceSctpGeneralVariablesGroup.setStatus('current')
ceSctpStateStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 1, 2)).setObjects(("CISCO-SCTP-MIB", "ceSctpCurrEstab"), ("CISCO-SCTP-MIB", "ceSctpActiveEstab"), ("CISCO-SCTP-MIB", "ceSctpPassiveEstab"), ("CISCO-SCTP-MIB", "ceSctpAborted"), ("CISCO-SCTP-MIB", "ceSctpShutdowns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ceSctpStateStatGroup = ceSctpStateStatGroup.setStatus('current')
ceSctpOtherStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 1, 3)).setObjects(("CISCO-SCTP-MIB", "ceSctpStatBytesRec"), ("CISCO-SCTP-MIB", "ceSctpStatBytesSent"), ("CISCO-SCTP-MIB", "ceSctpStatChunksDiscard"), ("CISCO-SCTP-MIB", "ceSctpStatChunksSent"), ("CISCO-SCTP-MIB", "ceSctpStatChunksSentControl"), ("CISCO-SCTP-MIB", "ceSctpStatChunksSentOrdered"), ("CISCO-SCTP-MIB", "ceSctpStatChunksSentUnOrdered"), ("CISCO-SCTP-MIB", "ceSctpStatChunksRec"), ("CISCO-SCTP-MIB", "ceSctpStatChunksRecControl"), ("CISCO-SCTP-MIB", "ceSctpStatChunksRecOrdered"), ("CISCO-SCTP-MIB", "ceSctpStatChunksRecUnOrdered"), ("CISCO-SCTP-MIB", "ceSctpStatChunksReTrans"), ("CISCO-SCTP-MIB", "ceSctpStatDatagramsRec"), ("CISCO-SCTP-MIB", "ceSctpStatDatagramsSent"), ("CISCO-SCTP-MIB", "ceSctpStatFragmentedUsrMessages"), ("CISCO-SCTP-MIB", "ceSctpStatReassembledUsrMessages"), ("CISCO-SCTP-MIB", "ceSctpStatOutOfBlue"), ("CISCO-SCTP-MIB", "ceSctpStatT1expired"), ("CISCO-SCTP-MIB", "ceSctpStatT2expired"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ceSctpOtherStatGroup = ceSctpOtherStatGroup.setStatus('current')
ceSctpAssocTablesVariablesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 1, 4)).setObjects(("CISCO-SCTP-MIB", "ceSctpAssocState"), ("CISCO-SCTP-MIB", "ceSctpAssocUpTime"), ("CISCO-SCTP-MIB", "ceSctpAssocRtoMin"), ("CISCO-SCTP-MIB", "ceSctpAssocRtoMax"), ("CISCO-SCTP-MIB", "ceSctpAssocRtoInitial"), ("CISCO-SCTP-MIB", "ceSctpAssocValCookieLife"), ("CISCO-SCTP-MIB", "ceSctpAssocMaxInitRetr"), ("CISCO-SCTP-MIB", "ceSctpAssocInitialT1"), ("CISCO-SCTP-MIB", "ceSctpAssocInitialT2"), ("CISCO-SCTP-MIB", "ceSctpAssocRemHostName"), ("CISCO-SCTP-MIB", "ceSctpAssocLocalSCTPPort"), ("CISCO-SCTP-MIB", "ceSctpAssocRemSCTPPort"), ("CISCO-SCTP-MIB", "ceSctpAssocRemPrimaryAddressType"), ("CISCO-SCTP-MIB", "ceSctpAssocRemPrimaryAddress"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionLevels"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionLevelsCur"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionAbate1"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionAbate2"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionAbate3"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionOnset1"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionOnset2"), ("CISCO-SCTP-MIB", "ceSctpAssocCongestionOnset3"), ("CISCO-SCTP-MIB", "ceSctpAssocInStreams"), ("CISCO-SCTP-MIB", "ceSctpAssocOutStreams"), ("CISCO-SCTP-MIB", "ceSctpAssocMaxRetr"), ("CISCO-SCTP-MIB", "ceSctpAssocMTU"), ("CISCO-SCTP-MIB", "ceSctpAssocLocRecWnd"), ("CISCO-SCTP-MIB", "ceSctpAssocLocRecWndLowMark"), ("CISCO-SCTP-MIB", "ceSctpAssocLocRecWndZeroCnt"), ("CISCO-SCTP-MIB", "ceSctpAssocRemRecWnd"), ("CISCO-SCTP-MIB", "ceSctpAssocRemRecWndLowMark"), ("CISCO-SCTP-MIB", "ceSctpAssocRemRecWndZeroCnt"), ("CISCO-SCTP-MIB", "ceSctpAssocULPDatagramsQueued"), ("CISCO-SCTP-MIB", "ceSctpAssocULPDatagramsQueuedHigh"), ("CISCO-SCTP-MIB", "ceSctpAssocChecksumErrorCounter"), ("CISCO-SCTP-MIB", "ceSctpAssocBytesRec"), ("CISCO-SCTP-MIB", "ceSctpAssocBytesSent"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksDiscarded"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksRec"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksRecControl"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksRecOrdered"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksRecUnOrdered"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksRecOutOrder"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksReTrans"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksSent"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksSentControl"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksSentOrdered"), ("CISCO-SCTP-MIB", "ceSctpAssocChunksSentUnOrdered"), ("CISCO-SCTP-MIB", "ceSctpAssocDatagramsRec"), ("CISCO-SCTP-MIB", "ceSctpAssocDatagramsSent"), ("CISCO-SCTP-MIB", "ceSctpAssocRowStatus"), ("CISCO-SCTP-MIB", "ceSctpAssocLocalAddressRowStatus"), ("CISCO-SCTP-MIB", "ceSctpAssocRemAddressStatus"), ("CISCO-SCTP-MIB", "ceSctpAssocRemAddressRTO"), ("CISCO-SCTP-MIB", "ceSctpAssocRemAddressHtBtFlag"), ("CISCO-SCTP-MIB", "ceSctpAssocRemAddressHtBtTime"), ("CISCO-SCTP-MIB", "ceSctpAssocRemAddressMaxRetran"), ("CISCO-SCTP-MIB", "ceSctpAssocRemAddressSRTT"), ("CISCO-SCTP-MIB", "ceSctpAssocRemAddressRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ceSctpAssocTablesVariablesGroup = ceSctpAssocTablesVariablesGroup.setStatus('current')
ceSctpAssocStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 74, 2, 1, 5)).setObjects(("CISCO-SCTP-MIB", "ceSctpAssocRemAddressRetransCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ceSctpAssocStatGroup = ceSctpAssocStatGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SCTP-MIB", ceSctpStatChunksSentUnOrdered=ceSctpStatChunksSentUnOrdered, ceSctpAssocRtoMax=ceSctpAssocRtoMax, ceSctpStatChunksReTrans=ceSctpStatChunksReTrans, ceSctpAssocCongestionLevelsCur=ceSctpAssocCongestionLevelsCur, ceSctpAssocRemAddressStatus=ceSctpAssocRemAddressStatus, ceSctpStatChunksRecUnOrdered=ceSctpStatChunksRecUnOrdered, ceSctpStatBytesRec=ceSctpStatBytesRec, ceSctpStatBytesSent=ceSctpStatBytesSent, ceSctpAborted=ceSctpAborted, ceSctpAssocLocalAddressTable=ceSctpAssocLocalAddressTable, ceSctpAssocChunksRecOrdered=ceSctpAssocChunksRecOrdered, ceSctpAssocLocRecWnd=ceSctpAssocLocRecWnd, ceSctpAssocStatGroup=ceSctpAssocStatGroup, ceSctpAssocId=ceSctpAssocId, ceSctpAssocRemAddressSRTT=ceSctpAssocRemAddressSRTT, ceSctpAssocTablesVariablesGroup=ceSctpAssocTablesVariablesGroup, ceSctpCurrEstab=ceSctpCurrEstab, ceSctpAssocRemSCTPPort=ceSctpAssocRemSCTPPort, ceSctpAssocChunksSentUnOrdered=ceSctpAssocChunksSentUnOrdered, ceSctpAssocChunksReTrans=ceSctpAssocChunksReTrans, ceSctpAssocRemAddressHtBtFlag=ceSctpAssocRemAddressHtBtFlag, PYSNMP_MODULE_ID=ceSctpMIB, ceSctpStatFragmentedUsrMessages=ceSctpStatFragmentedUsrMessages, ceSctpAssocULPDatagramsQueued=ceSctpAssocULPDatagramsQueued, ceSctpGeneralVariablesGroup=ceSctpGeneralVariablesGroup, ceSctpAssocTable=ceSctpAssocTable, ceSctpCompliances=ceSctpCompliances, ceSctpAssocMaxRetr=ceSctpAssocMaxRetr, ceSctpAssocLocRecWndLowMark=ceSctpAssocLocRecWndLowMark, ceSctpAssocChunksRec=ceSctpAssocChunksRec, ceSctpAssocInStreams=ceSctpAssocInStreams, ceSctpStatChunksRecOrdered=ceSctpStatChunksRecOrdered, ceSctpAssocRemAddressRTO=ceSctpAssocRemAddressRTO, ceSctpGroups=ceSctpGroups, ceSctpAssocRemPrimaryAddress=ceSctpAssocRemPrimaryAddress, ceSctpStatDatagramsSent=ceSctpStatDatagramsSent, ceSctpShutdowns=ceSctpShutdowns, ceSctpAssocRowStatus=ceSctpAssocRowStatus, ceSctpStatChunksSentControl=ceSctpStatChunksSentControl, ceSctpAssocRemRecWndLowMark=ceSctpAssocRemRecWndLowMark, ceSctpStatChunksDiscard=ceSctpStatChunksDiscard, ceSctpAssocRemRecWnd=ceSctpAssocRemRecWnd, ceSctpAssocMTU=ceSctpAssocMTU, ceSctpAssocChunksSentOrdered=ceSctpAssocChunksSentOrdered, ceSctpStatDatagramsRec=ceSctpStatDatagramsRec, ceSctpActiveEstab=ceSctpActiveEstab, ceSctpStatT1expired=ceSctpStatT1expired, ceSctpAssocLocalSCTPPort=ceSctpAssocLocalSCTPPort, ceSctpStatChunksRec=ceSctpStatChunksRec, ceSctpAssocRtoInitial=ceSctpAssocRtoInitial, ceSctpAssocLocalAddressIP=ceSctpAssocLocalAddressIP, ceSctpAssocMaxInitRetr=ceSctpAssocMaxInitRetr, ceSctpScalars=ceSctpScalars, InetAddress=InetAddress, ceSctpStatChunksSent=ceSctpStatChunksSent, ceSctpAssocLocRecWndZeroCnt=ceSctpAssocLocRecWndZeroCnt, ceSctpPassiveEstab=ceSctpPassiveEstab, ceSctpAssocChunksSent=ceSctpAssocChunksSent, ceSctpAssocChecksumErrorCounter=ceSctpAssocChecksumErrorCounter, ceSctpAssocInitialT1=ceSctpAssocInitialT1, ceSctpMIB=ceSctpMIB, ceSctpAssocBytesSent=ceSctpAssocBytesSent, ceSctpAssocRemAddressRowStatus=ceSctpAssocRemAddressRowStatus, ceSctpAssocChunksSentControl=ceSctpAssocChunksSentControl, ceSctpStatChunksSentOrdered=ceSctpStatChunksSentOrdered, ceSctpAssocLocalAddressRowStatus=ceSctpAssocLocalAddressRowStatus, ceSctpStateStatGroup=ceSctpStateStatGroup, ceSctpRtoAlgorithm=ceSctpRtoAlgorithm, ceSctpAssocCongestionAbate1=ceSctpAssocCongestionAbate1, ceSctpCompliance=ceSctpCompliance, ceSctpAssocChunksRecUnOrdered=ceSctpAssocChunksRecUnOrdered, ceSctpAssocRemAddressIP=ceSctpAssocRemAddressIP, ceSctpAssocCongestionOnset3=ceSctpAssocCongestionOnset3, ceSctpAssocState=ceSctpAssocState, ceSctpAssocCongestionLevels=ceSctpAssocCongestionLevels, ceSctpConformance=ceSctpConformance, ceSctpAssocOutStreams=ceSctpAssocOutStreams, ceSctpAssocLocalAddressIPType=ceSctpAssocLocalAddressIPType, ceSctpAssocRemRecWndZeroCnt=ceSctpAssocRemRecWndZeroCnt, ceSctpAssocRemAddressTable=ceSctpAssocRemAddressTable, ceSctpObjects=ceSctpObjects, ceSctpAssocInitialT2=ceSctpAssocInitialT2, ceSctpAssocChunksDiscarded=ceSctpAssocChunksDiscarded, ceSctpAssocRemAddressEntry=ceSctpAssocRemAddressEntry, ceSctpMaxAssociations=ceSctpMaxAssociations, ceSctpAssocBytesRec=ceSctpAssocBytesRec, ceSctpAssocRemPrimaryAddressType=ceSctpAssocRemPrimaryAddressType, ceSctpStatReassembledUsrMessages=ceSctpStatReassembledUsrMessages, ceSctpAssocEntry=ceSctpAssocEntry, ceSctpAssocValCookieLife=ceSctpAssocValCookieLife, ceSctpAssocRemAddressRetransCnt=ceSctpAssocRemAddressRetransCnt, ceSctpAssocCongestionOnset1=ceSctpAssocCongestionOnset1, ceSctpAssocULPDatagramsQueuedHigh=ceSctpAssocULPDatagramsQueuedHigh, ceSctpAssocLocalAddressEntry=ceSctpAssocLocalAddressEntry, ceSctpAssocRemAddressIPType=ceSctpAssocRemAddressIPType, ceSctpTables=ceSctpTables, ceSctpAssocRemAddressHtBtTime=ceSctpAssocRemAddressHtBtTime, ceSctpAssocCongestionOnset2=ceSctpAssocCongestionOnset2, ceSctpAssocCongestionAbate3=ceSctpAssocCongestionAbate3, ceSctpAssocUpTime=ceSctpAssocUpTime, ceSctpStatOutOfBlue=ceSctpStatOutOfBlue, ceSctpAssocChunksRecControl=ceSctpAssocChunksRecControl, ceSctpAssocChunksRecOutOrder=ceSctpAssocChunksRecOutOrder, ceSctpAssocCongestionAbate2=ceSctpAssocCongestionAbate2, ceSctpAssocRemHostName=ceSctpAssocRemHostName, ceSctpStatChunksRecControl=ceSctpStatChunksRecControl, ceSctpAssocDatagramsSent=ceSctpAssocDatagramsSent, ceSctpAssocRtoMin=ceSctpAssocRtoMin, ceSctpStatT2expired=ceSctpStatT2expired, ceSctpAssocRemAddressMaxRetran=ceSctpAssocRemAddressMaxRetran, InetAddressType=InetAddressType, ceSctpOtherStatGroup=ceSctpOtherStatGroup, ceSctpAssocDatagramsRec=ceSctpAssocDatagramsRec)
