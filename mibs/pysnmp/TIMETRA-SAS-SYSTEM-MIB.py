#
# PySNMP MIB module TIMETRA-SAS-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-SAS-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:15:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, Unsigned32, MibIdentifier, ObjectIdentity, ModuleIdentity, Bits, Gauge32, TimeTicks, Counter64, Counter32, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "Unsigned32", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Bits", "Gauge32", "TimeTicks", "Counter64", "Counter32", "Integer32", "IpAddress")
TimeStamp, TruthValue, DateAndTime, RowPointer, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TruthValue", "DateAndTime", "RowPointer", "TextualConvention", "RowStatus", "DisplayString")
tmnxChassisPowerSupplyInputStatus, tmnxChassisPowerSupplyEntry, tmnxHwName, tmnxHwTemperature, tmnxHwID, tmnxCardEntry, TmnxLEDState, tmnxChassisEntry, tmnxHwClass, tmnxChassisFanEntry, TmnxSlotNumOrZero, tmnxChassisPowerSupplyOutputStatus, tmnxHwEntry, tmnxCpmCardEntry, tmnxChassisNotifyHwIndex, tmnxHwOperState, tmnxChassisIndex = mibBuilder.importSymbols("TIMETRA-CHASSIS-MIB", "tmnxChassisPowerSupplyInputStatus", "tmnxChassisPowerSupplyEntry", "tmnxHwName", "tmnxHwTemperature", "tmnxHwID", "tmnxCardEntry", "TmnxLEDState", "tmnxChassisEntry", "tmnxHwClass", "tmnxChassisFanEntry", "TmnxSlotNumOrZero", "tmnxChassisPowerSupplyOutputStatus", "tmnxHwEntry", "tmnxCpmCardEntry", "tmnxChassisNotifyHwIndex", "tmnxHwOperState", "tmnxChassisIndex")
timetraSRMIBModules, tmnxSRNotifyPrefix, tmnxSRObjs, tmnxSRConfs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "timetraSRMIBModules", "tmnxSRNotifyPrefix", "tmnxSRObjs", "tmnxSRConfs")
timetraSASConfs, timetraSASNotifyPrefix, timetraSASObjs, timetraSASModules = mibBuilder.importSymbols("TIMETRA-SAS-GLOBAL-MIB", "timetraSASConfs", "timetraSASNotifyPrefix", "timetraSASObjs", "timetraSASModules")
TItemDescription, TmnxOperGrpHoldDownTime, IpAddressPrefixLength, TmnxPortID, TmnxOperGrpHoldUpTime, TBurstSize, TPIRRate, TmnxVwmCardType, TNamedItem, TCIRRate, TTcpUdpPort, TSysResource, TmnxOperState, ServiceOperStatus, TNamedItemOrEmpty, TmnxAdminState, TmnxActionType, TPolicyID = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TItemDescription", "TmnxOperGrpHoldDownTime", "IpAddressPrefixLength", "TmnxPortID", "TmnxOperGrpHoldUpTime", "TBurstSize", "TPIRRate", "TmnxVwmCardType", "TNamedItem", "TCIRRate", "TTcpUdpPort", "TSysResource", "TmnxOperState", "ServiceOperStatus", "TNamedItemOrEmpty", "TmnxAdminState", "TmnxActionType", "TPolicyID")
timetraSASysMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 6, 2, 1, 1, 7))
timetraSASysMIBModule.setRevisions(('1908-01-01 00:00',))
if mibBuilder.loadTexts: timetraSASysMIBModule.setLastUpdated('0701010000Z')
if mibBuilder.loadTexts: timetraSASysMIBModule.setOrganization('Alcatel')
tmnxSASSysObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5))
tmnxSASChassisObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6))
tmnxSASSysConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3))
tmnxSASSysMIBNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 3, 1))
tmnxSASSysNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 3, 1, 3))
tmnxSASChassisNotificationObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 1))
tmnxSASChassisNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2))
sysSASBofInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11))
sysEthMgmtBofInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12))
sysMpointMgmtInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 15))
sysLoopBackInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 16))
sysResourceProfInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17))
sysSASObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 18))
sysSASVwmObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19))
sysQosObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 20))
sysClockInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 21))
sysResProfPlcyObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22))
sysResProfDecommObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23))
sysOperGrpObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24))
tmnxSASSecurityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 15))
tmnxSASSecurityNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 3, 2))
tmnxSASSecurityNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 3, 2, 0))
class TmnxFanCfgMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("on", 1), ("off", 2), ("auto", 3))

class TmnxPtpTime(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("noPtpTime", 0), ("system", 1), ("oam", 2))

class TmnxSysOperGrpCreationOrigin(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("manual", 1), ("mvrp", 2))

sbiUplinkAPort = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 1), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkAPort.setStatus('current')
sbiUplinkAIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkAIpAddr.setStatus('current')
sbiUplinkAMask = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 3), IpAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkAMask.setStatus('current')
sbiUplinkAVlan = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4094)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkAVlan.setStatus('current')
sbiUplinkBPort = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 6), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkBPort.setStatus('current')
sbiUplinkBIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkBIpAddr.setStatus('current')
sbiUplinkBMask = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 8), IpAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkBMask.setStatus('current')
sbiUplinkBVlan = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4094)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkBVlan.setStatus('current')
sbiPingAddress = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiPingAddress.setStatus('current')
sbiUplinkRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 12), )
if mibBuilder.loadTexts: sbiUplinkRouteTable.setStatus('current')
sbiUplinkRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 12, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAorB"), (0, "TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkRouteDest"), (0, "TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkRouteMask"))
if mibBuilder.loadTexts: sbiUplinkRouteEntry.setStatus('current')
sbiUplinkAorB = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )))
if mibBuilder.loadTexts: sbiUplinkAorB.setStatus('current')
sbiUplinkRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 12, 1, 2), IpAddress())
if mibBuilder.loadTexts: sbiUplinkRouteDest.setStatus('current')
sbiUplinkRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 12, 1, 3), IpAddressPrefixLength())
if mibBuilder.loadTexts: sbiUplinkRouteMask.setStatus('current')
sbiUplinkRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 12, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbiUplinkRouteNextHop.setStatus('current')
sbiUplinkRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 12, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbiUplinkRouteRowStatus.setStatus('current')
sbiEthMgmtDisabled = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiEthMgmtDisabled.setStatus('current')
sbiEthMgmtActiveIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiEthMgmtActiveIpAddr.setStatus('current')
sbiEthMgmtActiveIpMask = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 3), IpAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiEthMgmtActiveIpMask.setStatus('current')
sbiEthMgmtAutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiEthMgmtAutoNegotiate.setStatus('current')
sbiEthMgmtSpeed = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), )).clone(100)).setUnits('Mbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiEthMgmtSpeed.setStatus('current')
sbiEthMgmtDuplex = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2))).clone('full')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiEthMgmtDuplex.setStatus('current')
sbiEthMgmtStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 7), )
if mibBuilder.loadTexts: sbiEthMgmtStaticRouteTable.setStatus('current')
sbiEthMgmtStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 7, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtStaticRouteDest"), (0, "TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtStaticRouteMask"))
if mibBuilder.loadTexts: sbiEthMgmtStaticRouteEntry.setStatus('current')
sbiEthMgmtStaticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 7, 1, 1), IpAddress())
if mibBuilder.loadTexts: sbiEthMgmtStaticRouteDest.setStatus('current')
sbiEthMgmtStaticRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 7, 1, 2), IpAddressPrefixLength())
if mibBuilder.loadTexts: sbiEthMgmtStaticRouteMask.setStatus('current')
sbiEthMgmtStaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 7, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbiEthMgmtStaticRouteNextHop.setStatus('current')
sbiEthMgmtStaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 12, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbiEthMgmtStaticRouteRowStatus.setStatus('current')
sbiNoServicePortOne = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 13), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiNoServicePortOne.setStatus('current')
sbiNoServicePortTwo = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 14), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiNoServicePortTwo.setStatus('current')
sbiUplinkAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("access-uplink", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkAdminMode.setStatus('current')
sbiUplinkOperMode = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("access-uplink", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbiUplinkOperMode.setStatus('current')
sbiExpansionCardType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("m4-ds1-ces", 1), ("m2-xfp", 2))).clone('m4-ds1-ces')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiExpansionCardType.setStatus('current')
sbiConsoleDisabled = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiConsoleDisabled.setStatus('current')
sbiPassword = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiPassword.setStatus('current')
sbiUplinkAAutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 20), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkAAutoNegotiate.setStatus('current')
sbiUplinkASpeed = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 21), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ValueRangeConstraint(1000, 1000), )).clone(100)).setUnits('Mbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkASpeed.setStatus('current')
sbiUplinkADuplex = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2))).clone('full')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkADuplex.setStatus('current')
sbiUplinkBAutoNegotiate = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 23), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkBAutoNegotiate.setStatus('current')
sbiUplinkBSpeed = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 24), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ValueRangeConstraint(1000, 1000), )).clone(100)).setUnits('Mbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkBSpeed.setStatus('current')
sbiUplinkBDuplex = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 11, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2))).clone('full')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbiUplinkBDuplex.setStatus('current')
tmnxChassisExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3), )
if mibBuilder.loadTexts: tmnxChassisExtnTable.setStatus('current')
tmnxChassisExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1), )
tmnxChassisEntry.registerAugmentions(("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisExtnEntry"))
tmnxChassisExtnEntry.setIndexNames(*tmnxChassisEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxChassisExtnEntry.setStatus('current')
tmnxChassisUpdateGoldenBootstrapImage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1, 1), TmnxActionType().clone('notApplicable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxChassisUpdateGoldenBootstrapImage.setStatus('current')
tmnxChassisGoldenBootstrapImageSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxChassisGoldenBootstrapImageSrc.setStatus('current')
tmnxChassisValidateGoldenBootstrapImage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1, 3), TmnxActionType().clone('notApplicable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxChassisValidateGoldenBootstrapImage.setStatus('current')
tmnxChassisGoldenBootstrapImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1, 4), DisplayString().clone('not-validated')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxChassisGoldenBootstrapImageVersion.setStatus('current')
tmnxChassisRebootAutoInit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1, 5), TmnxActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxChassisRebootAutoInit.setStatus('current')
tmnxChassisLowTempState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stateOk", 1), ("stateLowTemp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxChassisLowTempState.setStatus('current')
tmnxChassisSystemLEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 3, 1, 7), TmnxLEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxChassisSystemLEDState.setStatus('current')
tmnxHwExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 4), )
if mibBuilder.loadTexts: tmnxHwExtnTable.setStatus('current')
tmnxHwExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 4, 1), )
tmnxHwEntry.registerAugmentions(("TIMETRA-SAS-SYSTEM-MIB", "tmnxHwExtnEntry"))
tmnxHwExtnEntry.setIndexNames(*tmnxHwEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxHwExtnEntry.setStatus('current')
tmnxHwLowTempThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 4, 1, 1), Integer32()).setUnits('degrees celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxHwLowTempThreshold.setStatus('current')
tmnxFabricPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5), )
if mibBuilder.loadTexts: tmnxFabricPolicyTable.setStatus('current')
tmnxFabricPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "tmnxFabricPolicyIndex"))
if mibBuilder.loadTexts: tmnxFabricPolicyEntry.setStatus('current')
tmnxFabricPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1, 1), TPolicyID().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxFabricPolicyIndex.setStatus('current')
tmnxFabricPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxFabricPolicyRowStatus.setStatus('current')
tmnxFabricPolicyCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1, 3), TCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxFabricPolicyCIR.setStatus('current')
tmnxFabricPolicyPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1, 4), TPIRRate().clone(8000000)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxFabricPolicyPIR.setStatus('current')
tmnxFabricPolicyCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1, 5), TBurstSize().clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxFabricPolicyCBS.setStatus('current')
tmnxFabricPolicyMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1, 6), TBurstSize().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxFabricPolicyMBS.setStatus('current')
tmnxFabricPolicyMpointFabricPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxFabricPolicyMpointFabricPort.setStatus('current')
tmnxChassisPowerSupplyExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 6), )
if mibBuilder.loadTexts: tmnxChassisPowerSupplyExtnTable.setStatus('current')
tmnxChassisPowerSupplyExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 6, 1), )
tmnxChassisPowerSupplyEntry.registerAugmentions(("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisPowerSupplyExtnEntry"))
tmnxChassisPowerSupplyExtnEntry.setIndexNames(*tmnxChassisPowerSupplyEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxChassisPowerSupplyExtnEntry.setStatus('current')
tmnxChassisPowerSupplyAssignedDCType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("not-applicable", 0), ("m48-dc", 1), ("p24-dc", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxChassisPowerSupplyAssignedDCType.setStatus('current')
tmnxChassisFanExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 7), )
if mibBuilder.loadTexts: tmnxChassisFanExtnTable.setStatus('current')
tmnxChassisFanExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 7, 1), )
tmnxChassisFanEntry.registerAugmentions(("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisFanExtnEntry"))
tmnxChassisFanExtnEntry.setIndexNames(*tmnxChassisFanEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxChassisFanExtnEntry.setStatus('current')
tmnxChassisFanCfgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 7, 1, 1), TmnxFanCfgMode().clone('auto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxChassisFanCfgMode.setStatus('current')
tmnxChassisFanOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxChassisFanOperMode.setStatus('current')
tmnxSASCardObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 8))
tmnxCardExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 8, 1), )
if mibBuilder.loadTexts: tmnxCardExtnTable.setStatus('current')
tmnxCardExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 8, 1, 1), )
tmnxCardEntry.registerAugmentions(("TIMETRA-SAS-SYSTEM-MIB", "tmnxCardExtnEntry"))
tmnxCardExtnEntry.setIndexNames(*tmnxCardEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxCardExtnEntry.setStatus('current')
tmnxCardSysResPlcyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxCardSysResPlcyId.setStatus('current')
tmnxCpmCardExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 8, 2), )
if mibBuilder.loadTexts: tmnxCpmCardExtnTable.setStatus('current')
tmnxCpmCardExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 8, 2, 1), )
tmnxCpmCardEntry.registerAugmentions(("TIMETRA-SAS-SYSTEM-MIB", "tmnxCpmCardExtnEntry"))
tmnxCpmCardExtnEntry.setIndexNames(*tmnxCpmCardEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxCpmCardExtnEntry.setStatus('current')
tmnxCpmCardBootImageSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 8, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxCpmCardBootImageSource.setStatus('current')
sysLoopbackNoServPort = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 16, 1), TmnxPortID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLoopbackNoServPort.setStatus('current')
sysMirrorLoopbackNoServPort = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 16, 2), TmnxPortID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMirrorLoopbackNoServPort.setStatus('current')
sysTestHdNoServPort = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 16, 3), TmnxPortID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTestHdNoServPort.setStatus('current')
sysG8032FastFloodEnable = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysG8032FastFloodEnable.setStatus('current')
sysResIngTcamSapIngAcl = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 2), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamSapIngAcl.setStatus('current')
sysResIngTcamIngAclMac = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 3), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamIngAclMac.setStatus('current')
sysResIngTcamIngAclIpv4 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 4), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamIngAclIpv4.setStatus('current')
sysResIngTcamIngAcl64bitIpv4Ipv6 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 5), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamIngAcl64bitIpv4Ipv6.setStatus('current')
sysResIngTcamIngAcl128bitIpv4Ipv6 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 6), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamIngAcl128bitIpv4Ipv6.setStatus('current')
sysResIngTcamIngAcl64bitIpv6Only = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 7), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamIngAcl64bitIpv6Only.setStatus('current')
sysResIngSapIngClass = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 8), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngSapIngClass.setStatus('current')
sysResIngSapIngClassMac = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 9), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngSapIngClassMac.setStatus('current')
sysResIngSapIngClassIpv4 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 10), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngSapIngClassIpv4.setStatus('current')
sysResIngSapIngClassIpv4Ipv6 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 11), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngSapIngClassIpv4Ipv6.setStatus('current')
sysResFabricPathBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lb1-11-lb2-25", 1), ("lb1-24-lb2-12", 2), ("lb1-25-lb2-11", 3), ("lb1-18-lb2-18", 4))).clone('lb1-11-lb2-25')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResFabricPathBandwidth.setStatus('obsolete')
sysResMaxIPv6Routes = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16000)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysResMaxIPv6Routes.setStatus('current')
sysResIngTcamEthCfm = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 14), TSysResource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamEthCfm.setStatus('current')
sysResIngTcamEthCfmUpMep = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 15), TSysResource().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamEthCfmUpMep.setStatus('current')
sysG8032FastFloodEnableOperVal = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 16), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysG8032FastFloodEnableOperVal.setStatus('current')
sysResEgrTcamSapEgrAcl = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 17), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrTcamSapEgrAcl.setStatus('current')
sysResEgrTcamEgrAclMac = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 18), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrTcamEgrAclMac.setStatus('current')
sysResEgrTcamEgrAclIpv4 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 19), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrTcamEgrAclIpv4.setStatus('current')
sysResEgrTcamEgrAcl64bitIpv4Ipv6 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 20), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrTcamEgrAcl64bitIpv4Ipv6.setStatus('current')
sysResEgrTcamEgrAcl128bitIpv4Ipv6 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 21), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrTcamEgrAcl128bitIpv4Ipv6.setStatus('current')
sysResEgrTcamEgrAcl64bitIpv6Only = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 22), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrTcamEgrAcl64bitIpv6Only.setStatus('current')
sysResEgrSapEgrClass = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 23), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrSapEgrClass.setStatus('current')
sysResEgrSapEgrClassMac = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 24), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrSapEgrClassMac.setStatus('current')
sysResEgrSapEgrClassIpv4 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 25), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrSapEgrClassIpv4.setStatus('current')
sysResEgrSapEgrClassIpv4Ipv6 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 26), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResEgrSapEgrClassIpv4Ipv6.setStatus('current')
sysResIngTcamSapAggMeter = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 27), TSysResource().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamSapAggMeter.setStatus('current')
sysResIngTcamSapAggMeterOperVal = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 28), TSysResource().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysResIngTcamSapAggMeterOperVal.setStatus('current')
sysResQosSapIngQMode = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResQosSapIngQMode.setStatus('current')
sysResQosSapIngQOperMode = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 30), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysResQosSapIngQOperMode.setStatus('current')
sysResRouterEcmpMaxRoutesDst = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysResRouterEcmpMaxRoutesDst.setStatus('current')
sysDhcpSnoopingSdpEnable = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 32), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDhcpSnoopingSdpEnable.setStatus('current')
sysDhcpSnoopingEnable = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 33), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDhcpSnoopingEnable.setStatus('current')
sysResRouterEcmpMaxRoutesDstOperVal = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysResRouterEcmpMaxRoutesDstOperVal.setStatus('obsolete')
sysResIpMacMatchEnable = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 10), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysResIpMacMatchEnable.setStatus('current')
sysG8032FastFlood = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysG8032FastFlood.setStatus('current')
sysResIngTcamEthCfmDownMep = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 51), TSysResource().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamEthCfmDownMep.setStatus('current')
sysResQosMbsPool = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("node", 1), ("port", 2))).clone('node')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResQosMbsPool.setStatus('current')
sysResIngTcamEthCfmUpMepPrimaryVlan = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamEthCfmUpMepPrimaryVlan.setStatus('current')
sysResIngTcamEthCfmDownMepPrimaryVlan = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysResIngTcamEthCfmDownMepPrimaryVlan.setStatus('current')
sysResRouterMaxIPSubnets = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32000)).clone(2000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysResRouterMaxIPSubnets.setStatus('current')
sysQosPortSchedModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 57), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysQosPortSchedModeEnable.setStatus('current')
sysResMaxIPv6RoutesOperVal = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 17, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16000)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysResMaxIPv6RoutesOperVal.setStatus('current')
tResPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1), )
if mibBuilder.loadTexts: tResPlcyTable.setStatus('current')
tResPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "tResPlcyId"))
if mibBuilder.loadTexts: tResPlcyEntry.setStatus('current')
tResPlcyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: tResPlcyId.setStatus('current')
tResPlcyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyRowStatus.setStatus('current')
tResPlcyIngTcamSapAggMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamSapAggMeter.setStatus('current')
tResPlcyIngTcamQosSapIng = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamQosSapIng.setStatus('current')
tResPlcyIngTcamQosSapIngIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamQosSapIngIpv4.setStatus('current')
tResPlcyIngTcamQosSapIngIpv4Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamQosSapIngIpv4Ipv6.setStatus('current')
tResPlcyIngTcamQosSapIngMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamQosSapIngMac.setStatus('current')
tResPlcyIngTcamAclSapIng = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamAclSapIng.setStatus('current')
tResPlcyIngTcamAclSapIngIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamAclSapIngIpv4.setStatus('current')
tResPlcyIngTcamAclSapIng64Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamAclSapIng64Ipv6.setStatus('current')
tResPlcyIngTcamAclSapIng128Ipv4Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamAclSapIng128Ipv4Ipv6.setStatus('current')
tResPlcyIngTcamAclSapIngMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamAclSapIngMac.setStatus('current')
tResPlcyEgrTcamAclSapEgr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyEgrTcamAclSapEgr.setStatus('current')
tResPlcyEgrTcamAclSapEgrMacIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyEgrTcamAclSapEgrMacIpv4.setStatus('current')
tResPlcyEgrTcamAclSapEgr128Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyEgrTcamAclSapEgr128Ipv6.setStatus('current')
tResPlcyEgrTcamAclSapEgr64MacIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyEgrTcamAclSapEgr64MacIpv6.setStatus('current')
tResPlcyEgrTcamAclSapEgrMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyEgrTcamAclSapEgrMac.setStatus('current')
tResPlcyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 18), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyDescription.setStatus('current')
tResPlcyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 19), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tResPlcyLastChanged.setStatus('current')
tResPlcyIngTcamEthCfm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamEthCfm.setStatus('current')
tResPlcyIngTcamEthCfmUpMep = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamEthCfmUpMep.setStatus('current')
tResPlcyG8032CtrlSapStartVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3000, 3512), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyG8032CtrlSapStartVlan.setStatus('current')
tResPlcyG8032CtrlSapEndVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3000, 3512), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyG8032CtrlSapEndVlan.setStatus('current')
tResPlcyResIpMacMatchEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 10), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyResIpMacMatchEnable.setStatus('current')
tResPlcyIngTcamEthCfmDownMep = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResPlcyIngTcamEthCfmDownMep.setStatus('current')
tResPlcyIngTcamEthCfmUpMepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 27), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tResPlcyIngTcamEthCfmUpMepEnable.setStatus('current')
tResPlcyIngTcamEthCfmDownMepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 22, 1, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tResPlcyIngTcamEthCfmDownMepEnable.setStatus('current')
tResDecommTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 1), )
if mibBuilder.loadTexts: tResDecommTable.setStatus('current')
tResDecommEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 1, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "tResDecommId"))
if mibBuilder.loadTexts: tResDecommEntry.setStatus('current')
tResDecommId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: tResDecommId.setStatus('current')
tResDecommRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResDecommRowStatus.setStatus('current')
tResDecommFromPortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResDecommFromPortMap.setStatus('current')
tResDecommToPortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tResDecommToPortMap.setStatus('current')
tResDecommOperTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 2), )
if mibBuilder.loadTexts: tResDecommOperTable.setStatus('current')
tResDecommOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 2, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "tResDecommOperId"))
if mibBuilder.loadTexts: tResDecommOperEntry.setStatus('current')
tResDecommOperId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: tResDecommOperId.setStatus('current')
tResDecommOperFromPortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tResDecommOperFromPortMap.setStatus('current')
tResDecommOperToPortMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 23, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tResDecommOperToPortMap.setStatus('current')
sysQosWredSlopes = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("high-low", 1), ("tcp-non-tcp", 2))).clone('tcp-non-tcp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysQosWredSlopes.setStatus('current')
sysOperGrpTblLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpTblLastChanged.setStatus('current')
sysOperGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2), )
if mibBuilder.loadTexts: sysOperGrpTable.setStatus('current')
sysOperGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "sysOperGrpName"))
if mibBuilder.loadTexts: sysOperGrpEntry.setStatus('current')
sysOperGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: sysOperGrpName.setStatus('current')
sysOperGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysOperGrpRowStatus.setStatus('current')
sysOperGrpLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpLastChange.setStatus('current')
sysOperGrpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 4), ServiceOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpOperStatus.setStatus('current')
sysOperGrpHoldDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 5), TmnxOperGrpHoldDownTime()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysOperGrpHoldDownTime.setStatus('current')
sysOperGrpCreationOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 6), TmnxSysOperGrpCreationOrigin()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpCreationOrigin.setStatus('current')
sysOperGrpHoldUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 7), TmnxOperGrpHoldUpTime().clone(4)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysOperGrpHoldUpTime.setStatus('current')
sysOperGrpHoldUpTimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 8), TmnxOperGrpHoldUpTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpHoldUpTimeRemain.setStatus('current')
sysOperGrpHoldDownTimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 9), TmnxOperGrpHoldDownTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpHoldDownTimeRemain.setStatus('current')
sysOperGrpNumMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpNumMembers.setStatus('current')
sysOperGrpNumMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 24, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperGrpNumMonitoring.setStatus('current')
tmnxEnvTempTooLow = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 1)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-CHASSIS-MIB", "tmnxHwTemperature"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxHwLowTempThreshold"))
if mibBuilder.loadTexts: tmnxEnvTempTooLow.setStatus('current')
tmnxEqMDACfgMissing = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 5)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-CHASSIS-MIB", "tmnxHwOperState"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisNotifyMDACfgFailReason"))
if mibBuilder.loadTexts: tmnxEqMDACfgMissing.setStatus('current')
tmnxVwmShelfInserted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 6)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfId"))
if mibBuilder.loadTexts: tmnxVwmShelfInserted.setStatus('current')
tmnxVwmShelfIdMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 7)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfId"))
if mibBuilder.loadTexts: tmnxVwmShelfIdMismatch.setStatus('current')
tmnxVwmShelfRemoved = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 8)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfId"))
if mibBuilder.loadTexts: tmnxVwmShelfRemoved.setStatus('current')
tmnxUsbUnknownDev = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 9))
if mibBuilder.loadTexts: tmnxUsbUnknownDev.setStatus('current')
tmnxVwmShelfCardInserted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 11)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfCardInserted.setStatus('current')
tmnxVwmShelfCardRemoved = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 12)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfCardRemoved.setStatus('current')
tmnxVwmShelfCardIdMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 13)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfCardIdMismatch.setStatus('current')
tmnxVwmShelfPSInputFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 14)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfPSInputFailure.setStatus('current')
tmnxVwmShelfPSOutputFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 15)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfPSOutputFailure.setStatus('current')
tmnxVwmShelfInputLoss = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 16)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfInputLoss.setStatus('current')
tmnxVwmShelfOutputLoss = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 17)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfOutputLoss.setStatus('current')
tmnxVwmShelfCardCfgError = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 18)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfCardCfgError.setStatus('current')
tmnxAlarmInputVoltageFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 10)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"))
if mibBuilder.loadTexts: tmnxAlarmInputVoltageFailure.setStatus('current')
tmnxRootDirFull = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 2)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-CHASSIS-MIB", "tmnxHwName"))
if mibBuilder.loadTexts: tmnxRootDirFull.setStatus('current')
tSASMpointBwPlcy = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 15, 1), TNamedItem().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tSASMpointBwPlcy.setStatus('current')
tmnxPtpTimeUsePtp = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 21, 1), TmnxPtpTime().clone('noPtpTime')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPtpTimeUsePtp.setStatus('current')
tmnxSysConsoleAlarmInput = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 18, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxSysConsoleAlarmInput.setStatus('current')
tmnxDyingGasp = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 3, 1, 3, 1))
if mibBuilder.loadTexts: tmnxDyingGasp.setStatus('current')
tmnxVwmShelfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1), )
if mibBuilder.loadTexts: tmnxVwmShelfTable.setStatus('current')
tmnxVwmShelfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfId"))
if mibBuilder.loadTexts: tmnxVwmShelfEntry.setStatus('current')
tmnxVwmShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxVwmShelfId.setStatus('current')
tmnxVwmShelfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxVwmShelfRowStatus.setStatus('current')
tmnxVwmShelfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1, 3), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxVwmShelfAdminState.setStatus('current')
tmnxVwmShelfOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxVwmShelfOperState.setStatus('current')
tmnxVwmShelfVwmType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ec-cw", 1), ("ec-dw", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxVwmShelfVwmType.setStatus('current')
tmnxVwmShelfEquippedType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("not-equipped", 0), ("unknown", 1), ("cwdm", 2), ("dwdm", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxVwmShelfEquippedType.setStatus('current')
tmnxVwmshelfTypeConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("usb", 1), ("i2c", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxVwmshelfTypeConnected.setStatus('current')
tmnxVwmShelfCardTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 2), )
if mibBuilder.loadTexts: tmnxVwmShelfCardTable.setStatus('current')
tmnxVwmShelfCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 2, 1), ).setIndexNames((0, "TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfId"), (0, "TIMETRA-SAS-SYSTEM-MIB", "tmnxVwmShelfCardId"))
if mibBuilder.loadTexts: tmnxVwmShelfCardEntry.setStatus('current')
tmnxVwmShelfCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxVwmShelfCardId.setStatus('current')
tmnxVwmShelfCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 2, 1, 2), TmnxVwmCardType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxVwmShelfCardType.setStatus('current')
tmnxVwmShelfCardEqType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 2, 1, 3), TmnxVwmCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxVwmShelfCardEqType.setStatus('current')
tmnxVwmShelfCardAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 2, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxVwmShelfCardAdminState.setStatus('current')
tmnxVwmShelfCardOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 5, 19, 2, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxVwmShelfCardOperState.setStatus('current')
aluExtTmnxChassisTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 9), )
if mibBuilder.loadTexts: aluExtTmnxChassisTable.setStatus('current')
aluExtTmnxChassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 9, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"))
if mibBuilder.loadTexts: aluExtTmnxChassisEntry.setStatus('current')
aluExtPoePowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("internal", 1), ("external", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtPoePowerMode.setStatus('current')
aluExtPoePowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("bad", 1), ("good", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtPoePowerSupplyStatus.setStatus('current')
aluExtPoeExternalPowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("absent", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtPoeExternalPowerSupplyStatus.setStatus('current')
tCardResOperTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10), )
if mibBuilder.loadTexts: tCardResOperTable.setStatus('current')
tCardResOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1), )
tmnxCpmCardEntry.registerAugmentions(("TIMETRA-SAS-SYSTEM-MIB", "tCardResOperEntry"))
tCardResOperEntry.setIndexNames(*tmnxCpmCardEntry.getIndexNames())
if mibBuilder.loadTexts: tCardResOperEntry.setStatus('current')
tCardResOperIngTcamSapAggMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamSapAggMeter.setStatus('current')
tCardResOperIngTcamQosSapIng = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamQosSapIng.setStatus('current')
tCardResOperIngTcamQosSapIngIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamQosSapIngIpv4.setStatus('current')
tCardResOperIngTcamQosSapIngIpv4Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamQosSapIngIpv4Ipv6.setStatus('current')
tCardResOperIngTcamQosSapIngMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamQosSapIngMac.setStatus('current')
tCardResOperIngTcamAclSapIng = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamAclSapIng.setStatus('current')
tCardResOperIngTcamAclSapIngIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamAclSapIngIpv4.setStatus('current')
tCardResOperIngTcamAclSapIng64Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamAclSapIng64Ipv6.setStatus('current')
tCardResOperIngTcamAclSapIng128Ipv4Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamAclSapIng128Ipv4Ipv6.setStatus('current')
tCardResOperIngTcamAclSapIngMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamAclSapIngMac.setStatus('current')
tCardResOperEgrTcamAclSapEgr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperEgrTcamAclSapEgr.setStatus('current')
tCardResOperEgrTcamAclSapEgrMacIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperEgrTcamAclSapEgrMacIpv4.setStatus('current')
tCardResOperEgrTcamAclSapEgr128Ipv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperEgrTcamAclSapEgr128Ipv6.setStatus('current')
tCardResOperEgrTcamAclSapEgr64MacIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperEgrTcamAclSapEgr64MacIpv6.setStatus('current')
tCardResOperEgrTcamAclSapEgrMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperEgrTcamAclSapEgrMac.setStatus('current')
tCardResOperIngTcamEthCfm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamEthCfm.setStatus('current')
tCardResOperIngTcamEthCfmUpMep = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamEthCfmUpMep.setStatus('current')
tCardResOperG8032CtrlSapStartVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperG8032CtrlSapStartVlan.setStatus('current')
tCardResOperG8032CtrlSapEndVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperG8032CtrlSapEndVlan.setStatus('current')
tCardResOperResIpMacMatchEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 10), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperResIpMacMatchEnable.setStatus('current')
tCardResOperIngTcamEthCfmDownMep = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamEthCfmDownMep.setStatus('current')
tCardResOperIngTcamIpMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 10, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tCardResOperIngTcamIpMulticast.setStatus('current')
tmnxSASSecurityNotificationObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 15, 5))
tmnxLoginUserName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 15, 5, 1), TNamedItem().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxLoginUserName.setStatus('current')
tmnxLoginUserSrcIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 15, 5, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxLoginUserSrcIPAddress.setStatus('current')
tmnxLoginMaxAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 15, 5, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxLoginMaxAttempts.setStatus('current')
tmnxUserLoginMaxAttempts = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 3, 2, 0, 1)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginUserName"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginUserSrcIPAddress"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginMaxAttempts"))
if mibBuilder.loadTexts: tmnxUserLoginMaxAttempts.setStatus('current')
tmnxSSHUserLoginMaxAttempts = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 3, 2, 0, 3)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginUserName"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginUserSrcIPAddress"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginMaxAttempts"))
if mibBuilder.loadTexts: tmnxSSHUserLoginMaxAttempts.setStatus('current')
tmnxEqPowerInputFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 3)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-CHASSIS-MIB", "tmnxHwName"), ("TIMETRA-CHASSIS-MIB", "tmnxChassisPowerSupplyInputStatus"))
if mibBuilder.loadTexts: tmnxEqPowerInputFailure.setStatus('current')
tmnxEqPowerOutputFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 4)).setObjects(("TIMETRA-CHASSIS-MIB", "tmnxChassisNotifyHwIndex"), ("TIMETRA-CHASSIS-MIB", "tmnxHwID"), ("TIMETRA-CHASSIS-MIB", "tmnxHwClass"), ("TIMETRA-CHASSIS-MIB", "tmnxHwName"), ("TIMETRA-CHASSIS-MIB", "tmnxChassisPowerSupplyOutputStatus"))
if mibBuilder.loadTexts: tmnxEqPowerOutputFailure.setStatus('current')
sysOperGrpOperStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 6, 2, 25)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "sysOperGrpOperStatus"))
if mibBuilder.loadTexts: sysOperGrpOperStatusChanged.setStatus('current')
tmnxChassisNotifyMDACfgFailReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 15, 5, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxChassisNotifyMDACfgFailReason.setStatus('current')
tmnxSASSysCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 1))
tmnxSASSysGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2))
tmnxSASSysSecConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 4))
tmnxSASSysSecGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 4, 1))
tmnxSASChassisGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 10))
tmnxSASSysV1v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 1)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAPort"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAIpAddr"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAMask"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAVlan"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBPort"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBIpAddr"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBMask"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBVlan"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiPingAddress"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkRouteNextHop"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkRouteRowStatus"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisUpdateGoldenBootstrapImage"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisGoldenBootstrapImageSrc"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisValidateGoldenBootstrapImage"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisGoldenBootstrapImageVersion"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisRebootAutoInit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysV1v0Group = tmnxSASSysV1v0Group.setStatus('obsolete')
tmnxSASSysV2v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 2)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tSASMpointBwPlcy"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAPort"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAIpAddr"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAMask"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkAVlan"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBPort"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBIpAddr"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBMask"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkBVlan"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiPingAddress"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkRouteNextHop"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiUplinkRouteRowStatus"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisUpdateGoldenBootstrapImage"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisGoldenBootstrapImageSrc"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisValidateGoldenBootstrapImage"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisGoldenBootstrapImageVersion"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisRebootAutoInit"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtDisabled"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtActiveIpAddr"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtActiveIpMask"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtAutoNegotiate"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtSpeed"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtDuplex"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtStaticRouteNextHop"), ("TIMETRA-SAS-SYSTEM-MIB", "sbiEthMgmtStaticRouteRowStatus"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisLowTempState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysV2v0Group = tmnxSASSysV2v0Group.setStatus('current')
tmnxSASSysV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 3)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "sbiExpansionCardType"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxFabricPolicyRowStatus"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxFabricPolicyCIR"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxFabricPolicyPIR"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxFabricPolicyCBS"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxFabricPolicyMBS"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxFabricPolicyMpointFabricPort"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisPowerSupplyAssignedDCType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysV3v0Group = tmnxSASSysV3v0Group.setStatus('current')
tmnxSASSysV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 4)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "sbiConsoleDisabled"), ("TIMETRA-SAS-SYSTEM-MIB", "sysLoopbackNoServPort"), ("TIMETRA-SAS-SYSTEM-MIB", "sysG8032FastFloodEnable"), ("TIMETRA-SAS-SYSTEM-MIB", "sysMirrorLoopbackNoServPort"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResFabricPathBandwidth"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResMaxIPv6Routes"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResIngTcamEthCfm"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResIngTcamEthCfmUpMep"), ("TIMETRA-SAS-SYSTEM-MIB", "sysG8032FastFloodEnableOperVal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysV4v0Group = tmnxSASSysV4v0Group.setStatus('current')
tmnxSASSysV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 5)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "sysResIngTcamIngAclMac"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrTcamSapEgrAcl"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrTcamEgrAclMac"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrTcamEgrAclIpv4"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrTcamEgrAcl64bitIpv4Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrTcamEgrAcl128bitIpv4Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrTcamEgrAcl64bitIpv6Only"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrSapEgrClass"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrSapEgrClassMac"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrSapEgrClassIpv4"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResEgrSapEgrClassIpv4Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResIngTcamSapAggMeter"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResIngTcamSapAggMeterOperVal"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisFanCfgMode"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisFanOperMode"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResIngTcamIngAcl64bitIpv4Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxPtpTimeUsePtp"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResQosSapIngQMode"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResQosSapIngQOperMode"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResRouterEcmpMaxRoutesDst"), ("TIMETRA-SAS-SYSTEM-MIB", "sysResRouterEcmpMaxRoutesDstOperVal"), ("TIMETRA-SAS-SYSTEM-MIB", "sysTestHdNoServPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysV5v0Group = tmnxSASSysV5v0Group.setStatus('current')
tmnxSASSysObjsV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 6)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxSysConsoleAlarmInput"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysObjsV6v0Group = tmnxSASSysObjsV6v0Group.setStatus('current')
tmnxSASSysQosV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 7)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "sysQosWredSlopes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysQosV5v0Group = tmnxSASSysQosV5v0Group.setStatus('current')
tmnxSASSysV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 8)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "sysDhcpSnoopingSdpEnable"), ("TIMETRA-SAS-SYSTEM-MIB", "sysDhcpSnoopingEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysV6v0Group = tmnxSASSysV6v0Group.setStatus('current')
tmnxSASSysConsoleV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 9)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxSysConsoleAlarmInput"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysConsoleV6v0Group = tmnxSASSysConsoleV6v0Group.setStatus('current')
tmnxSASSysResPlcyV6v1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 2, 10)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyRowStatus"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamSapAggMeter"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamQosSapIng"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamQosSapIngIpv4"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamQosSapIngIpv4Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamQosSapIngMac"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamAclSapIng"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamAclSapIngIpv4"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamAclSapIng64Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamAclSapIng128Ipv4Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamAclSapIngMac"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyEgrTcamAclSapEgr"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyEgrTcamAclSapEgrMacIpv4"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyEgrTcamAclSapEgr128Ipv6"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyEgrTcamAclSapEgr64MacIpv6"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyEgrTcamAclSapEgrMac"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyDescription"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyLastChanged"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamEthCfm"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamEthCfmUpMep"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyG8032CtrlSapStartVlan"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyG8032CtrlSapEndVlan"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyResIpMacMatchEnable"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamEthCfmDownMep"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamEthCfmUpMepEnable"), ("TIMETRA-SAS-SYSTEM-MIB", "tResPlcyIngTcamEthCfmDownMepEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysResPlcyV6v1Group = tmnxSASSysResPlcyV6v1Group.setStatus('current')
tmnxSASSysSecV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 4, 1, 1)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginUserName"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginUserSrcIPAddress"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxLoginMaxAttempts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysSecV4v0Group = tmnxSASSysSecV4v0Group.setStatus('current')
tmnxSASSysSecNotifyV4v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 3, 4, 1, 2)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxUserLoginMaxAttempts"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxSSHUserLoginMaxAttempts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASSysSecNotifyV4v0Group = tmnxSASSysSecNotifyV4v0Group.setStatus('current')
tmnxSASChassisNotificationV3v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 10, 1)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxEnvTempTooLow"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxRootDirFull"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxEqPowerInputFailure"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxEqPowerOutputFailure"), ("TIMETRA-SAS-SYSTEM-MIB", "tmnxEqMDACfgMissing"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASChassisNotificationV3v0Group = tmnxSASChassisNotificationV3v0Group.setStatus('current')
tmnxSASChassisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 10, 2)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxChassisSystemLEDState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASChassisGroup = tmnxSASChassisGroup.setStatus('current')
tmnxSASChassisV61Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 10, 3)).setObjects(("TIMETRA-SAS-SYSTEM-MIB", "tmnxCpmCardBootImageSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASChassisV61Group = tmnxSASChassisV61Group.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-SAS-SYSTEM-MIB", sbiUplinkBMask=sbiUplinkBMask, tResPlcyIngTcamAclSapIngMac=tResPlcyIngTcamAclSapIngMac, aluExtTmnxChassisEntry=aluExtTmnxChassisEntry, sbiEthMgmtActiveIpAddr=sbiEthMgmtActiveIpAddr, sbiUplinkAAutoNegotiate=sbiUplinkAAutoNegotiate, tmnxChassisFanExtnEntry=tmnxChassisFanExtnEntry, tCardResOperIngTcamQosSapIng=tCardResOperIngTcamQosSapIng, tmnxSASSysGroups=tmnxSASSysGroups, sysResIngTcamIngAclIpv4=sysResIngTcamIngAclIpv4, tResDecommFromPortMap=tResDecommFromPortMap, tmnxVwmShelfCardRemoved=tmnxVwmShelfCardRemoved, sysOperGrpRowStatus=sysOperGrpRowStatus, tmnxFabricPolicyRowStatus=tmnxFabricPolicyRowStatus, sysResEgrTcamEgrAclIpv4=sysResEgrTcamEgrAclIpv4, tResPlcyG8032CtrlSapStartVlan=tResPlcyG8032CtrlSapStartVlan, sysOperGrpHoldDownTime=sysOperGrpHoldDownTime, sysLoopBackInfo=sysLoopBackInfo, sysResIngSapIngClass=sysResIngSapIngClass, tmnxFabricPolicyIndex=tmnxFabricPolicyIndex, sysOperGrpHoldUpTime=sysOperGrpHoldUpTime, tCardResOperIngTcamEthCfm=tCardResOperIngTcamEthCfm, tmnxSASSysV4v0Group=tmnxSASSysV4v0Group, sysQosPortSchedModeEnable=sysQosPortSchedModeEnable, tmnxSASChassisNotificationObjs=tmnxSASChassisNotificationObjs, sbiUplinkAPort=sbiUplinkAPort, sbiUplinkASpeed=sbiUplinkASpeed, tResPlcyEgrTcamAclSapEgr=tResPlcyEgrTcamAclSapEgr, sysOperGrpHoldDownTimeRemain=sysOperGrpHoldDownTimeRemain, sysOperGrpNumMonitoring=sysOperGrpNumMonitoring, tmnxFabricPolicyCIR=tmnxFabricPolicyCIR, tmnxSASSecurityNotifications=tmnxSASSecurityNotifications, tResPlcyEgrTcamAclSapEgrMacIpv4=tResPlcyEgrTcamAclSapEgrMacIpv4, tmnxSASSysResPlcyV6v1Group=tmnxSASSysResPlcyV6v1Group, tResPlcyRowStatus=tResPlcyRowStatus, tmnxSASSysQosV5v0Group=tmnxSASSysQosV5v0Group, sysResProfPlcyObjs=sysResProfPlcyObjs, tmnxUsbUnknownDev=tmnxUsbUnknownDev, sysResIngTcamEthCfmDownMepPrimaryVlan=sysResIngTcamEthCfmDownMepPrimaryVlan, timetraSASysMIBModule=timetraSASysMIBModule, sbiUplinkAIpAddr=sbiUplinkAIpAddr, tmnxVwmShelfCardTable=tmnxVwmShelfCardTable, sysResIngTcamIngAcl128bitIpv4Ipv6=sysResIngTcamIngAcl128bitIpv4Ipv6, sysResEgrTcamEgrAcl64bitIpv4Ipv6=sysResEgrTcamEgrAcl64bitIpv4Ipv6, tmnxVwmShelfPSOutputFailure=tmnxVwmShelfPSOutputFailure, sysTestHdNoServPort=sysTestHdNoServPort, tmnxChassisUpdateGoldenBootstrapImage=tmnxChassisUpdateGoldenBootstrapImage, sysResourceProfInfo=sysResourceProfInfo, tmnxVwmShelfOutputLoss=tmnxVwmShelfOutputLoss, sysEthMgmtBofInfo=sysEthMgmtBofInfo, sbiPassword=sbiPassword, sysOperGrpOperStatus=sysOperGrpOperStatus, tCardResOperIngTcamAclSapIngMac=tCardResOperIngTcamAclSapIngMac, tCardResOperIngTcamAclSapIng128Ipv4Ipv6=tCardResOperIngTcamAclSapIng128Ipv4Ipv6, TmnxPtpTime=TmnxPtpTime, tmnxCardExtnEntry=tmnxCardExtnEntry, tResPlcyIngTcamEthCfmUpMepEnable=tResPlcyIngTcamEthCfmUpMepEnable, tResPlcyId=tResPlcyId, tResPlcyEgrTcamAclSapEgr128Ipv6=tResPlcyEgrTcamAclSapEgr128Ipv6, tmnxChassisNotifyMDACfgFailReason=tmnxChassisNotifyMDACfgFailReason, tmnxSASSysMIBNotifyPrefix=tmnxSASSysMIBNotifyPrefix, tResPlcyG8032CtrlSapEndVlan=tResPlcyG8032CtrlSapEndVlan, tmnxSASSysConsoleV6v0Group=tmnxSASSysConsoleV6v0Group, tmnxChassisPowerSupplyAssignedDCType=tmnxChassisPowerSupplyAssignedDCType, sysResIngSapIngClassIpv4Ipv6=sysResIngSapIngClassIpv4Ipv6, tResPlcyIngTcamEthCfmDownMep=tResPlcyIngTcamEthCfmDownMep, tmnxChassisValidateGoldenBootstrapImage=tmnxChassisValidateGoldenBootstrapImage, sbiEthMgmtStaticRouteMask=sbiEthMgmtStaticRouteMask, tmnxPtpTimeUsePtp=tmnxPtpTimeUsePtp, tCardResOperResIpMacMatchEnable=tCardResOperResIpMacMatchEnable, sbiEthMgmtStaticRouteDest=sbiEthMgmtStaticRouteDest, sbiUplinkRouteTable=sbiUplinkRouteTable, sysResIpMacMatchEnable=sysResIpMacMatchEnable, sysResIngTcamEthCfmDownMep=sysResIngTcamEthCfmDownMep, sysResMaxIPv6RoutesOperVal=sysResMaxIPv6RoutesOperVal, tCardResOperEgrTcamAclSapEgr=tCardResOperEgrTcamAclSapEgr, tResDecommRowStatus=tResDecommRowStatus, tResPlcyIngTcamAclSapIngIpv4=tResPlcyIngTcamAclSapIngIpv4, sbiUplinkAMask=sbiUplinkAMask, sbiUplinkRouteEntry=sbiUplinkRouteEntry, sysLoopbackNoServPort=sysLoopbackNoServPort, sysMpointMgmtInfo=sysMpointMgmtInfo, sysResIngTcamEthCfm=sysResIngTcamEthCfm, tResPlcyLastChanged=tResPlcyLastChanged, tmnxSASSysSecConformance=tmnxSASSysSecConformance, tResPlcyTable=tResPlcyTable, tResPlcyIngTcamEthCfm=tResPlcyIngTcamEthCfm, tmnxDyingGasp=tmnxDyingGasp, tmnxEqPowerInputFailure=tmnxEqPowerInputFailure, tCardResOperEgrTcamAclSapEgrMacIpv4=tCardResOperEgrTcamAclSapEgrMacIpv4, tResDecommOperEntry=tResDecommOperEntry, tmnxSASSecurityNotificationObjs=tmnxSASSecurityNotificationObjs, tmnxVwmShelfCardIdMismatch=tmnxVwmShelfCardIdMismatch, sbiConsoleDisabled=sbiConsoleDisabled, tResDecommOperId=tResDecommOperId, tmnxVwmShelfCardId=tmnxVwmShelfCardId, tmnxSASChassisNotificationV3v0Group=tmnxSASChassisNotificationV3v0Group, tmnxChassisPowerSupplyExtnTable=tmnxChassisPowerSupplyExtnTable, tResDecommOperTable=tResDecommOperTable, tmnxSASChassisObjs=tmnxSASChassisObjs, sysResQosSapIngQOperMode=sysResQosSapIngQOperMode, tmnxVwmShelfEquippedType=tmnxVwmShelfEquippedType, tCardResOperIngTcamQosSapIngMac=tCardResOperIngTcamQosSapIngMac, tmnxVwmShelfCardCfgError=tmnxVwmShelfCardCfgError, tmnxVwmShelfTable=tmnxVwmShelfTable, tCardResOperIngTcamEthCfmDownMep=tCardResOperIngTcamEthCfmDownMep, tmnxVwmShelfIdMismatch=tmnxVwmShelfIdMismatch, tmnxVwmShelfCardEqType=tmnxVwmShelfCardEqType, sysResIngTcamIngAcl64bitIpv4Ipv6=sysResIngTcamIngAcl64bitIpv4Ipv6, tmnxSASSysV2v0Group=tmnxSASSysV2v0Group, tmnxVwmShelfAdminState=tmnxVwmShelfAdminState, tmnxSASCardObjs=tmnxSASCardObjs, tmnxLoginUserName=tmnxLoginUserName, tmnxChassisPowerSupplyExtnEntry=tmnxChassisPowerSupplyExtnEntry, sbiUplinkRouteRowStatus=sbiUplinkRouteRowStatus, tCardResOperIngTcamAclSapIngIpv4=tCardResOperIngTcamAclSapIngIpv4, tmnxRootDirFull=tmnxRootDirFull, sysResRouterEcmpMaxRoutesDstOperVal=sysResRouterEcmpMaxRoutesDstOperVal, sysResIngTcamSapIngAcl=sysResIngTcamSapIngAcl, tmnxChassisFanExtnTable=tmnxChassisFanExtnTable, tmnxChassisFanOperMode=tmnxChassisFanOperMode, tmnxCpmCardBootImageSource=tmnxCpmCardBootImageSource, sysResEgrSapEgrClassIpv4=sysResEgrSapEgrClassIpv4, tmnxCpmCardExtnTable=tmnxCpmCardExtnTable, sysResIngSapIngClassIpv4=sysResIngSapIngClassIpv4, sysResEgrSapEgrClass=sysResEgrSapEgrClass, sbiUplinkBVlan=sbiUplinkBVlan, tmnxVwmShelfInserted=tmnxVwmShelfInserted, tCardResOperG8032CtrlSapEndVlan=tCardResOperG8032CtrlSapEndVlan, tmnxEqMDACfgMissing=tmnxEqMDACfgMissing, tResPlcyIngTcamQosSapIngIpv4=tResPlcyIngTcamQosSapIngIpv4, sysClockInfo=sysClockInfo, tmnxChassisFanCfgMode=tmnxChassisFanCfgMode, sysResEgrTcamSapEgrAcl=sysResEgrTcamSapEgrAcl, sbiUplinkRouteNextHop=sbiUplinkRouteNextHop, sbiUplinkBIpAddr=sbiUplinkBIpAddr, tCardResOperEgrTcamAclSapEgr64MacIpv6=tCardResOperEgrTcamAclSapEgr64MacIpv6, sysResProfDecommObjs=sysResProfDecommObjs, tmnxSASSysSecV4v0Group=tmnxSASSysSecV4v0Group, tmnxSASChassisGroup=tmnxSASChassisGroup, sbiUplinkBSpeed=sbiUplinkBSpeed, sysResIngTcamSapAggMeterOperVal=sysResIngTcamSapAggMeterOperVal, sysResRouterMaxIPSubnets=sysResRouterMaxIPSubnets, aluExtTmnxChassisTable=aluExtTmnxChassisTable, tmnxSASSecurityObjects=tmnxSASSecurityObjects, sbiUplinkRouteMask=sbiUplinkRouteMask, sbiEthMgmtStaticRouteTable=sbiEthMgmtStaticRouteTable, sysResIngTcamIngAclMac=sysResIngTcamIngAclMac, tmnxSysConsoleAlarmInput=tmnxSysConsoleAlarmInput, sysResIngTcamEthCfmUpMep=sysResIngTcamEthCfmUpMep, tmnxEnvTempTooLow=tmnxEnvTempTooLow, tCardResOperIngTcamAclSapIng64Ipv6=tCardResOperIngTcamAclSapIng64Ipv6, tResDecommTable=tResDecommTable, TmnxFanCfgMode=TmnxFanCfgMode, tCardResOperIngTcamIpMulticast=tCardResOperIngTcamIpMulticast, sbiUplinkBAutoNegotiate=sbiUplinkBAutoNegotiate, sysOperGrpHoldUpTimeRemain=sysOperGrpHoldUpTimeRemain, tCardResOperG8032CtrlSapStartVlan=tCardResOperG8032CtrlSapStartVlan, tSASMpointBwPlcy=tSASMpointBwPlcy, tmnxSASSysV6v0Group=tmnxSASSysV6v0Group, sysMirrorLoopbackNoServPort=sysMirrorLoopbackNoServPort, tmnxFabricPolicyMpointFabricPort=tmnxFabricPolicyMpointFabricPort, tmnxVwmShelfCardOperState=tmnxVwmShelfCardOperState, tResPlcyIngTcamQosSapIng=tResPlcyIngTcamQosSapIng, tmnxVwmShelfVwmType=tmnxVwmShelfVwmType, sbiEthMgmtStaticRouteEntry=sbiEthMgmtStaticRouteEntry, tmnxCardExtnTable=tmnxCardExtnTable, sysResIngSapIngClassMac=sysResIngSapIngClassMac, tmnxVwmShelfRowStatus=tmnxVwmShelfRowStatus, sysResEgrSapEgrClassIpv4Ipv6=sysResEgrSapEgrClassIpv4Ipv6, tCardResOperIngTcamAclSapIng=tCardResOperIngTcamAclSapIng, sbiUplinkADuplex=sbiUplinkADuplex, tmnxFabricPolicyPIR=tmnxFabricPolicyPIR, sysResEgrTcamEgrAclMac=sysResEgrTcamEgrAclMac, sbiEthMgmtSpeed=sbiEthMgmtSpeed, sbiNoServicePortOne=sbiNoServicePortOne, tmnxSASSysObjsV6v0Group=tmnxSASSysObjsV6v0Group, sysOperGrpNumMembers=sysOperGrpNumMembers, sysResMaxIPv6Routes=sysResMaxIPv6Routes, tResPlcyIngTcamQosSapIngIpv4Ipv6=tResPlcyIngTcamQosSapIngIpv4Ipv6, sbiUplinkRouteDest=sbiUplinkRouteDest, aluExtPoePowerMode=aluExtPoePowerMode, tmnxLoginUserSrcIPAddress=tmnxLoginUserSrcIPAddress, tmnxHwExtnTable=tmnxHwExtnTable, tResDecommOperFromPortMap=tResDecommOperFromPortMap, tmnxCardSysResPlcyId=tmnxCardSysResPlcyId, sysOperGrpCreationOrigin=sysOperGrpCreationOrigin, sbiExpansionCardType=sbiExpansionCardType, tResPlcyIngTcamEthCfmDownMepEnable=tResPlcyIngTcamEthCfmDownMepEnable, sysOperGrpOperStatusChanged=sysOperGrpOperStatusChanged, tmnxChassisExtnTable=tmnxChassisExtnTable, sysOperGrpName=sysOperGrpName, aluExtPoeExternalPowerSupplyStatus=aluExtPoeExternalPowerSupplyStatus, tmnxSASSysNotifications=tmnxSASSysNotifications, tmnxLoginMaxAttempts=tmnxLoginMaxAttempts, tResPlcyIngTcamAclSapIng64Ipv6=tResPlcyIngTcamAclSapIng64Ipv6, sysSASBofInfo=sysSASBofInfo, sbiEthMgmtDisabled=sbiEthMgmtDisabled, tmnxSASSysSecGroups=tmnxSASSysSecGroups, tResDecommEntry=tResDecommEntry, sbiNoServicePortTwo=sbiNoServicePortTwo, sysResEgrTcamEgrAcl64bitIpv6Only=sysResEgrTcamEgrAcl64bitIpv6Only, tmnxVwmShelfId=tmnxVwmShelfId, sbiEthMgmtDuplex=sbiEthMgmtDuplex, tResPlcyEgrTcamAclSapEgrMac=tResPlcyEgrTcamAclSapEgrMac, sysResEgrTcamEgrAcl128bitIpv4Ipv6=sysResEgrTcamEgrAcl128bitIpv4Ipv6, sbiPingAddress=sbiPingAddress, tmnxVwmShelfCardAdminState=tmnxVwmShelfCardAdminState, sysG8032FastFlood=sysG8032FastFlood, sbiEthMgmtStaticRouteRowStatus=sbiEthMgmtStaticRouteRowStatus, tmnxChassisExtnEntry=tmnxChassisExtnEntry, sysOperGrpTable=sysOperGrpTable, sysQosObjs=sysQosObjs, sysDhcpSnoopingEnable=sysDhcpSnoopingEnable, tResPlcyIngTcamAclSapIng=tResPlcyIngTcamAclSapIng, tCardResOperIngTcamSapAggMeter=tCardResOperIngTcamSapAggMeter, sysDhcpSnoopingSdpEnable=sysDhcpSnoopingSdpEnable, tResPlcyDescription=tResPlcyDescription, tCardResOperIngTcamQosSapIngIpv4Ipv6=tCardResOperIngTcamQosSapIngIpv4Ipv6, sysResFabricPathBandwidth=sysResFabricPathBandwidth, tResPlcyEntry=tResPlcyEntry, tmnxSSHUserLoginMaxAttempts=tmnxSSHUserLoginMaxAttempts, tmnxVwmShelfPSInputFailure=tmnxVwmShelfPSInputFailure, tmnxUserLoginMaxAttempts=tmnxUserLoginMaxAttempts, sbiUplinkOperMode=sbiUplinkOperMode, tmnxSASChassisGroups=tmnxSASChassisGroups, sysOperGrpObjs=sysOperGrpObjs, tmnxSASSysObjs=tmnxSASSysObjs, tResPlcyIngTcamAclSapIng128Ipv4Ipv6=tResPlcyIngTcamAclSapIng128Ipv4Ipv6, tResPlcyIngTcamEthCfmUpMep=tResPlcyIngTcamEthCfmUpMep, tResPlcyEgrTcamAclSapEgr64MacIpv6=tResPlcyEgrTcamAclSapEgr64MacIpv6, tmnxSASSysV1v0Group=tmnxSASSysV1v0Group, sysG8032FastFloodEnable=sysG8032FastFloodEnable, tmnxSASSysCompliances=tmnxSASSysCompliances, tResDecommId=tResDecommId, sysResIngTcamSapAggMeter=sysResIngTcamSapAggMeter, tmnxHwExtnEntry=tmnxHwExtnEntry, tmnxVwmShelfCardEntry=tmnxVwmShelfCardEntry, tmnxVwmShelfCardInserted=tmnxVwmShelfCardInserted, sbiUplinkBDuplex=sbiUplinkBDuplex, tmnxChassisSystemLEDState=tmnxChassisSystemLEDState, sbiUplinkAdminMode=sbiUplinkAdminMode, sysResIngTcamEthCfmUpMepPrimaryVlan=sysResIngTcamEthCfmUpMepPrimaryVlan, sysQosWredSlopes=sysQosWredSlopes, sysResIngTcamIngAcl64bitIpv6Only=sysResIngTcamIngAcl64bitIpv6Only, tResDecommOperToPortMap=tResDecommOperToPortMap, tmnxVwmShelfInputLoss=tmnxVwmShelfInputLoss, sbiEthMgmtActiveIpMask=sbiEthMgmtActiveIpMask, tCardResOperTable=tCardResOperTable, tResPlcyResIpMacMatchEnable=tResPlcyResIpMacMatchEnable, tmnxFabricPolicyCBS=tmnxFabricPolicyCBS, tmnxSASSysConformance=tmnxSASSysConformance, sbiUplinkAVlan=sbiUplinkAVlan, tmnxSASSysV5v0Group=tmnxSASSysV5v0Group, tmnxSASChassisNotification=tmnxSASChassisNotification)
mibBuilder.exportSymbols("TIMETRA-SAS-SYSTEM-MIB", tmnxVwmshelfTypeConnected=tmnxVwmshelfTypeConnected, sysG8032FastFloodEnableOperVal=sysG8032FastFloodEnableOperVal, aluExtPoePowerSupplyStatus=aluExtPoePowerSupplyStatus, sbiEthMgmtAutoNegotiate=sbiEthMgmtAutoNegotiate, tmnxVwmShelfCardType=tmnxVwmShelfCardType, tmnxSASSysV3v0Group=tmnxSASSysV3v0Group, tmnxAlarmInputVoltageFailure=tmnxAlarmInputVoltageFailure, tmnxChassisLowTempState=tmnxChassisLowTempState, tmnxVwmShelfOperState=tmnxVwmShelfOperState, tCardResOperIngTcamQosSapIngIpv4=tCardResOperIngTcamQosSapIngIpv4, tResPlcyIngTcamQosSapIngMac=tResPlcyIngTcamQosSapIngMac, sysResRouterEcmpMaxRoutesDst=sysResRouterEcmpMaxRoutesDst, tmnxVwmShelfRemoved=tmnxVwmShelfRemoved, sysResQosSapIngQMode=sysResQosSapIngQMode, PYSNMP_MODULE_ID=timetraSASysMIBModule, tCardResOperIngTcamEthCfmUpMep=tCardResOperIngTcamEthCfmUpMep, TmnxSysOperGrpCreationOrigin=TmnxSysOperGrpCreationOrigin, tCardResOperEntry=tCardResOperEntry, tmnxChassisGoldenBootstrapImageVersion=tmnxChassisGoldenBootstrapImageVersion, sysResEgrSapEgrClassMac=sysResEgrSapEgrClassMac, tmnxEqPowerOutputFailure=tmnxEqPowerOutputFailure, tResDecommToPortMap=tResDecommToPortMap, tmnxHwLowTempThreshold=tmnxHwLowTempThreshold, tmnxFabricPolicyEntry=tmnxFabricPolicyEntry, tmnxChassisRebootAutoInit=tmnxChassisRebootAutoInit, tCardResOperEgrTcamAclSapEgrMac=tCardResOperEgrTcamAclSapEgrMac, tmnxFabricPolicyMBS=tmnxFabricPolicyMBS, sysOperGrpEntry=sysOperGrpEntry, tmnxChassisGoldenBootstrapImageSrc=tmnxChassisGoldenBootstrapImageSrc, tmnxVwmShelfEntry=tmnxVwmShelfEntry, sbiUplinkAorB=sbiUplinkAorB, sysResQosMbsPool=sysResQosMbsPool, tResPlcyIngTcamSapAggMeter=tResPlcyIngTcamSapAggMeter, sysOperGrpTblLastChanged=sysOperGrpTblLastChanged, tmnxSASChassisV61Group=tmnxSASChassisV61Group, tmnxCpmCardExtnEntry=tmnxCpmCardExtnEntry, tCardResOperEgrTcamAclSapEgr128Ipv6=tCardResOperEgrTcamAclSapEgr128Ipv6, sysSASObjs=sysSASObjs, sysSASVwmObjs=sysSASVwmObjs, tmnxSASSysSecNotifyV4v0Group=tmnxSASSysSecNotifyV4v0Group, tmnxFabricPolicyTable=tmnxFabricPolicyTable, sbiEthMgmtStaticRouteNextHop=sbiEthMgmtStaticRouteNextHop, tmnxSASSecurityNotifyPrefix=tmnxSASSecurityNotifyPrefix, sbiUplinkBPort=sbiUplinkBPort, sysOperGrpLastChange=sysOperGrpLastChange)
