#
# PySNMP MIB module NNC-EXT-PM-STATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNC-EXT-PM-STATISTICS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
atmVplVpi, atmVclVci = mibBuilder.importSymbols("ATM-MIB", "atmVplVpi", "atmVclVci")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NncExtAbsIntvlNumberType, NncExtRelIntvlNumberType, NncExtIntvlStateType = mibBuilder.importSymbols("NNC-INTERVAL-STATISTICS-TC-MIB", "NncExtAbsIntvlNumberType", "NncExtRelIntvlNumberType", "NncExtIntvlStateType")
nncExtensions, NncExtCounter64 = mibBuilder.importSymbols("NNCGNI0001-SMI", "nncExtensions", "NncExtCounter64")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, Counter32, TimeTicks, NotificationType, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, Integer32, ModuleIdentity, MibIdentifier, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "TimeTicks", "NotificationType", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "Integer32", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nncExtPmStatistics = ModuleIdentity((1, 3, 6, 1, 4, 1, 123, 3, 65))
if mibBuilder.loadTexts: nncExtPmStatistics.setLastUpdated('9810021415Z')
if mibBuilder.loadTexts: nncExtPmStatistics.setOrganization('Newbridge Networks Corporation')
nncExtPmStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 65, 1))
nncExtPmStatisticsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 65, 2))
nncExtPmStatisticsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 65, 3))
nncExtPmStatisticsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 65, 4))
class NncExtPmCellFlowDirType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("link", 1), ("matrix", 2))

class NncExtPmTestType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("segment", 1), ("end2end", 2))

nncExtPm15MinCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1), )
if mibBuilder.loadTexts: nncExtPm15MinCurrentTable.setStatus('current')
nncExtPm15MinCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentCellFlow"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentTest"))
if mibBuilder.loadTexts: nncExtPm15MinCurrentEntry.setStatus('current')
nncExtPm15MinCurrentCellFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 1), NncExtPmCellFlowDirType())
if mibBuilder.loadTexts: nncExtPm15MinCurrentCellFlow.setStatus('current')
nncExtPm15MinCurrentTest = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 2), NncExtPmTestType())
if mibBuilder.loadTexts: nncExtPm15MinCurrentTest.setStatus('current')
nncExtPm15MinCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 3), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentState.setStatus('current')
nncExtPm15MinCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 4), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentAbsoluteIntervalNumber.setStatus('current')
nncExtPm15MinCurrentSECBs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentSECBs.setStatus('current')
nncExtPm15MinCurrentLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentLostCellsClp0And1.setStatus('current')
nncExtPm15MinCurrentLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentLostCellsClp0.setStatus('current')
nncExtPm15MinCurrentMisinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentMisinsertedCells.setStatus('current')
nncExtPm15MinCurrentCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentCellsClp0And1.setStatus('current')
nncExtPm15MinCurrentCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentCellsClp0.setStatus('current')
nncExtPm15MinCurrentImpairedBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 11), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentImpairedBlocks.setStatus('current')
nncExtPm15MinCurrentTotalLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 12), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentTotalLostCellsClp0And1.setStatus('current')
nncExtPm15MinCurrentTotalLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 13), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentTotalLostCellsClp0.setStatus('current')
nncExtPm15MinCurrentIBWithCellLossMisinsert = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 14), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentIBWithCellLossMisinsert.setStatus('current')
nncExtPm15MinCurrentCellLossRatioClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 15), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentCellLossRatioClp0And1.setStatus('current')
nncExtPm15MinCurrentCellLossRatioClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 1, 1, 16), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinCurrentCellLossRatioClp0.setStatus('current')
nncExtPm15MinIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2), )
if mibBuilder.loadTexts: nncExtPm15MinIntervalTable.setStatus('current')
nncExtPm15MinIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalCellFlow"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalTest"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalNumber"))
if mibBuilder.loadTexts: nncExtPm15MinIntervalEntry.setStatus('current')
nncExtPm15MinIntervalCellFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 1), NncExtPmCellFlowDirType())
if mibBuilder.loadTexts: nncExtPm15MinIntervalCellFlow.setStatus('current')
nncExtPm15MinIntervalTest = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 2), NncExtPmTestType())
if mibBuilder.loadTexts: nncExtPm15MinIntervalTest.setStatus('current')
nncExtPm15MinIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 3), NncExtRelIntvlNumberType())
if mibBuilder.loadTexts: nncExtPm15MinIntervalNumber.setStatus('current')
nncExtPm15MinIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 4), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalState.setStatus('current')
nncExtPm15MinIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 5), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalAbsoluteIntervalNumber.setStatus('current')
nncExtPm15MinIntervalSECBs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalSECBs.setStatus('current')
nncExtPm15MinIntervalLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalLostCellsClp0And1.setStatus('current')
nncExtPm15MinIntervalLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalLostCellsClp0.setStatus('current')
nncExtPm15MinIntervalMisinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalMisinsertedCells.setStatus('current')
nncExtPm15MinIntervalCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalCellsClp0And1.setStatus('current')
nncExtPm15MinIntervalCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 11), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalCellsClp0.setStatus('current')
nncExtPm15MinIntervalImpairedBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 12), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalImpairedBlocks.setStatus('current')
nncExtPm15MinIntervalTotalLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 13), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalTotalLostCellsClp0And1.setStatus('current')
nncExtPm15MinIntervalTotalLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 14), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalTotalLostCellsClp0.setStatus('current')
nncExtPm15MinIntervalIBWithCellLossMisinsert = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 15), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalIBWithCellLossMisinsert.setStatus('current')
nncExtPm15MinIntervalCellLossRatioClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 16), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalCellLossRatioClp0And1.setStatus('current')
nncExtPm15MinIntervalCellLossRatioClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 2, 1, 17), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm15MinIntervalCellLossRatioClp0.setStatus('current')
nncExtPm24HrCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3), )
if mibBuilder.loadTexts: nncExtPm24HrCurrentTable.setStatus('current')
nncExtPm24HrCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentCellFlow"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentTest"))
if mibBuilder.loadTexts: nncExtPm24HrCurrentEntry.setStatus('current')
nncExtPm24HrCurrentCellFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 1), NncExtPmCellFlowDirType())
if mibBuilder.loadTexts: nncExtPm24HrCurrentCellFlow.setStatus('current')
nncExtPm24HrCurrentTest = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 2), NncExtPmTestType())
if mibBuilder.loadTexts: nncExtPm24HrCurrentTest.setStatus('current')
nncExtPm24HrCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 3), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentState.setStatus('current')
nncExtPm24HrCurrentAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 4), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentAbsoluteIntervalNumber.setStatus('current')
nncExtPm24HrCurrentSECBs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentSECBs.setStatus('current')
nncExtPm24HrCurrentErroredCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentErroredCells.setStatus('current')
nncExtPm24HrCurrentLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentLostCellsClp0And1.setStatus('current')
nncExtPm24HrCurrentLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentLostCellsClp0.setStatus('current')
nncExtPm24HrCurrentMisinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentMisinsertedCells.setStatus('current')
nncExtPm24HrCurrentCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentCellsClp0And1.setStatus('current')
nncExtPm24HrCurrentCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 11), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentCellsClp0.setStatus('current')
nncExtPm24HrCurrentImpairedBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 12), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentImpairedBlocks.setStatus('current')
nncExtPm24HrCurrentTotalLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 13), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentTotalLostCellsClp0And1.setStatus('current')
nncExtPm24HrCurrentTotalLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 14), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentTotalLostCellsClp0.setStatus('current')
nncExtPm24HrCurrentSECBErrored = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 15), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentSECBErrored.setStatus('current')
nncExtPm24HrCurrentSECBMisinserted = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 16), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentSECBMisinserted.setStatus('current')
nncExtPm24HrCurrentIBWithCellLossMisinsert = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 17), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentIBWithCellLossMisinsert.setStatus('current')
nncExtPm24HrCurrentCellLossRatioClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 18), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentCellLossRatioClp0And1.setStatus('current')
nncExtPm24HrCurrentCellLossRatioClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 3, 1, 19), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrCurrentCellLossRatioClp0.setStatus('current')
nncExtPm24HrIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4), )
if mibBuilder.loadTexts: nncExtPm24HrIntervalTable.setStatus('current')
nncExtPm24HrIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalCellFlow"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalTest"), (0, "NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalNumber"))
if mibBuilder.loadTexts: nncExtPm24HrIntervalEntry.setStatus('current')
nncExtPm24HrIntervalCellFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 1), NncExtPmCellFlowDirType())
if mibBuilder.loadTexts: nncExtPm24HrIntervalCellFlow.setStatus('current')
nncExtPm24HrIntervalTest = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 2), NncExtPmTestType())
if mibBuilder.loadTexts: nncExtPm24HrIntervalTest.setStatus('current')
nncExtPm24HrIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 3), NncExtRelIntvlNumberType())
if mibBuilder.loadTexts: nncExtPm24HrIntervalNumber.setStatus('current')
nncExtPm24HrIntervalState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 4), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalState.setStatus('current')
nncExtPm24HrIntervalAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 5), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalAbsoluteIntervalNumber.setStatus('current')
nncExtPm24HrIntervalSECBs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalSECBs.setStatus('current')
nncExtPm24HrIntervalErroredCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalErroredCells.setStatus('current')
nncExtPm24HrIntervalLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalLostCellsClp0And1.setStatus('current')
nncExtPm24HrIntervalLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalLostCellsClp0.setStatus('current')
nncExtPm24HrIntervalMisinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalMisinsertedCells.setStatus('current')
nncExtPm24HrIntervalCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 11), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalCellsClp0And1.setStatus('current')
nncExtPm24HrIntervalCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 12), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalCellsClp0.setStatus('current')
nncExtPm24HrIntervalImpairedBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 13), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalImpairedBlocks.setStatus('current')
nncExtPm24HrIntervalTotalLostCellsClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 14), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalTotalLostCellsClp0And1.setStatus('current')
nncExtPm24HrIntervalTotalLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 15), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalTotalLostCellsClp0.setStatus('current')
nncExtPm24HrIntervalSECBErrored = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 16), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalSECBErrored.setStatus('current')
nncExtPm24HrIntervalSECBMisinserted = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 17), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalSECBMisinserted.setStatus('current')
nncExtPm24HrIntervalIBWithCellLossMisinsert = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 18), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalIBWithCellLossMisinsert.setStatus('current')
nncExtPm24HrIntervalCellLossRatioClp0And1 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 19), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalCellLossRatioClp0And1.setStatus('current')
nncExtPm24HrIntervalCellLossRatioClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 65, 1, 4, 1, 20), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtPm24HrIntervalCellLossRatioClp0.setStatus('current')
nncExtPm15MinCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 65, 3, 1)).setObjects(("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentCellFlow"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentTest"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentState"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentAbsoluteIntervalNumber"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentSECBs"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentMisinsertedCells"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentImpairedBlocks"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentTotalLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentTotalLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentIBWithCellLossMisinsert"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentCellLossRatioClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentCellLossRatioClp0"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtPm15MinCurrentGroup = nncExtPm15MinCurrentGroup.setStatus('current')
nncExtPm15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 65, 3, 2)).setObjects(("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalCellFlow"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalTest"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalNumber"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalState"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalAbsoluteIntervalNumber"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalSECBs"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalMisinsertedCells"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalImpairedBlocks"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalTotalLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalTotalLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalIBWithCellLossMisinsert"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalCellLossRatioClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalCellLossRatioClp0"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtPm15MinIntervalGroup = nncExtPm15MinIntervalGroup.setStatus('current')
nncExtPm24HrCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 65, 3, 3)).setObjects(("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentCellFlow"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentTest"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentState"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentAbsoluteIntervalNumber"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentSECBs"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentErroredCells"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentMisinsertedCells"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentImpairedBlocks"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentTotalLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentTotalLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentSECBErrored"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentSECBMisinserted"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentIBWithCellLossMisinsert"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentCellLossRatioClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentCellLossRatioClp0"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtPm24HrCurrentGroup = nncExtPm24HrCurrentGroup.setStatus('current')
nncExtPm24HrIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 65, 3, 4)).setObjects(("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalCellFlow"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalTest"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalNumber"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalState"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalAbsoluteIntervalNumber"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalSECBs"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalErroredCells"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalMisinsertedCells"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalImpairedBlocks"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalTotalLostCellsClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalTotalLostCellsClp0"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalSECBErrored"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalSECBMisinserted"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalIBWithCellLossMisinsert"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalCellLossRatioClp0And1"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalCellLossRatioClp0"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtPm24HrIntervalGroup = nncExtPm24HrIntervalGroup.setStatus('current')
nncExtPmStatisticsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 123, 3, 65, 4, 1)).setObjects(("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinCurrentGroup"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm15MinIntervalGroup"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrCurrentGroup"), ("NNC-EXT-PM-STATISTICS-MIB", "nncExtPm24HrIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtPmStatisticsCompliance = nncExtPmStatisticsCompliance.setStatus('current')
mibBuilder.exportSymbols("NNC-EXT-PM-STATISTICS-MIB", nncExtPm24HrIntervalAbsoluteIntervalNumber=nncExtPm24HrIntervalAbsoluteIntervalNumber, nncExtPm15MinCurrentState=nncExtPm15MinCurrentState, nncExtPm24HrCurrentIBWithCellLossMisinsert=nncExtPm24HrCurrentIBWithCellLossMisinsert, nncExtPm24HrIntervalMisinsertedCells=nncExtPm24HrIntervalMisinsertedCells, PYSNMP_MODULE_ID=nncExtPmStatistics, nncExtPm24HrIntervalLostCellsClp0=nncExtPm24HrIntervalLostCellsClp0, nncExtPm24HrCurrentState=nncExtPm24HrCurrentState, nncExtPm15MinIntervalCellsClp0=nncExtPm15MinIntervalCellsClp0, nncExtPm15MinCurrentCellLossRatioClp0And1=nncExtPm15MinCurrentCellLossRatioClp0And1, nncExtPm15MinIntervalNumber=nncExtPm15MinIntervalNumber, nncExtPm15MinCurrentAbsoluteIntervalNumber=nncExtPm15MinCurrentAbsoluteIntervalNumber, nncExtPm24HrIntervalGroup=nncExtPm24HrIntervalGroup, nncExtPm24HrIntervalState=nncExtPm24HrIntervalState, nncExtPm15MinIntervalLostCellsClp0And1=nncExtPm15MinIntervalLostCellsClp0And1, nncExtPm15MinCurrentLostCellsClp0And1=nncExtPm15MinCurrentLostCellsClp0And1, nncExtPmStatistics=nncExtPmStatistics, nncExtPm24HrIntervalTotalLostCellsClp0=nncExtPm24HrIntervalTotalLostCellsClp0, nncExtPm15MinIntervalImpairedBlocks=nncExtPm15MinIntervalImpairedBlocks, nncExtPm15MinCurrentGroup=nncExtPm15MinCurrentGroup, nncExtPm24HrCurrentTable=nncExtPm24HrCurrentTable, nncExtPm15MinCurrentCellsClp0=nncExtPm15MinCurrentCellsClp0, nncExtPm24HrCurrentSECBMisinserted=nncExtPm24HrCurrentSECBMisinserted, nncExtPm24HrIntervalEntry=nncExtPm24HrIntervalEntry, nncExtPm15MinCurrentLostCellsClp0=nncExtPm15MinCurrentLostCellsClp0, nncExtPmStatisticsCompliance=nncExtPmStatisticsCompliance, nncExtPm24HrIntervalNumber=nncExtPm24HrIntervalNumber, nncExtPm24HrIntervalCellLossRatioClp0=nncExtPm24HrIntervalCellLossRatioClp0, nncExtPm24HrIntervalErroredCells=nncExtPm24HrIntervalErroredCells, nncExtPm24HrCurrentAbsoluteIntervalNumber=nncExtPm24HrCurrentAbsoluteIntervalNumber, nncExtPm24HrIntervalCellFlow=nncExtPm24HrIntervalCellFlow, nncExtPm24HrIntervalLostCellsClp0And1=nncExtPm24HrIntervalLostCellsClp0And1, nncExtPm15MinCurrentTable=nncExtPm15MinCurrentTable, nncExtPm15MinIntervalTotalLostCellsClp0=nncExtPm15MinIntervalTotalLostCellsClp0, nncExtPm15MinIntervalTotalLostCellsClp0And1=nncExtPm15MinIntervalTotalLostCellsClp0And1, nncExtPm24HrCurrentCellsClp0=nncExtPm24HrCurrentCellsClp0, nncExtPm24HrIntervalIBWithCellLossMisinsert=nncExtPm24HrIntervalIBWithCellLossMisinsert, nncExtPm15MinIntervalAbsoluteIntervalNumber=nncExtPm15MinIntervalAbsoluteIntervalNumber, nncExtPm15MinIntervalMisinsertedCells=nncExtPm15MinIntervalMisinsertedCells, nncExtPm15MinCurrentCellsClp0And1=nncExtPm15MinCurrentCellsClp0And1, nncExtPm15MinIntervalCellLossRatioClp0=nncExtPm15MinIntervalCellLossRatioClp0, nncExtPm15MinIntervalGroup=nncExtPm15MinIntervalGroup, nncExtPm15MinIntervalState=nncExtPm15MinIntervalState, nncExtPm24HrCurrentTotalLostCellsClp0And1=nncExtPm24HrCurrentTotalLostCellsClp0And1, nncExtPm24HrCurrentCellLossRatioClp0=nncExtPm24HrCurrentCellLossRatioClp0, nncExtPm15MinCurrentTotalLostCellsClp0And1=nncExtPm15MinCurrentTotalLostCellsClp0And1, nncExtPm24HrCurrentErroredCells=nncExtPm24HrCurrentErroredCells, nncExtPm24HrCurrentImpairedBlocks=nncExtPm24HrCurrentImpairedBlocks, nncExtPm24HrCurrentCellFlow=nncExtPm24HrCurrentCellFlow, nncExtPm15MinIntervalCellLossRatioClp0And1=nncExtPm15MinIntervalCellLossRatioClp0And1, nncExtPm15MinIntervalTest=nncExtPm15MinIntervalTest, nncExtPm15MinIntervalCellsClp0And1=nncExtPm15MinIntervalCellsClp0And1, nncExtPm15MinCurrentMisinsertedCells=nncExtPm15MinCurrentMisinsertedCells, nncExtPm24HrIntervalTotalLostCellsClp0And1=nncExtPm24HrIntervalTotalLostCellsClp0And1, nncExtPm24HrIntervalSECBErrored=nncExtPm24HrIntervalSECBErrored, nncExtPm24HrCurrentLostCellsClp0And1=nncExtPm24HrCurrentLostCellsClp0And1, nncExtPm15MinIntervalTable=nncExtPm15MinIntervalTable, nncExtPm15MinIntervalEntry=nncExtPm15MinIntervalEntry, nncExtPm24HrIntervalSECBMisinserted=nncExtPm24HrIntervalSECBMisinserted, nncExtPm15MinCurrentCellLossRatioClp0=nncExtPm15MinCurrentCellLossRatioClp0, nncExtPm24HrCurrentTotalLostCellsClp0=nncExtPm24HrCurrentTotalLostCellsClp0, nncExtPm24HrIntervalCellLossRatioClp0And1=nncExtPm24HrIntervalCellLossRatioClp0And1, nncExtPm24HrIntervalCellsClp0=nncExtPm24HrIntervalCellsClp0, NncExtPmCellFlowDirType=NncExtPmCellFlowDirType, nncExtPm15MinCurrentTotalLostCellsClp0=nncExtPm15MinCurrentTotalLostCellsClp0, nncExtPm24HrIntervalCellsClp0And1=nncExtPm24HrIntervalCellsClp0And1, nncExtPm24HrCurrentEntry=nncExtPm24HrCurrentEntry, nncExtPm15MinIntervalSECBs=nncExtPm15MinIntervalSECBs, nncExtPm24HrIntervalSECBs=nncExtPm24HrIntervalSECBs, NncExtPmTestType=NncExtPmTestType, nncExtPm24HrIntervalTest=nncExtPm24HrIntervalTest, nncExtPm24HrCurrentSECBs=nncExtPm24HrCurrentSECBs, nncExtPm24HrCurrentCellLossRatioClp0And1=nncExtPm24HrCurrentCellLossRatioClp0And1, nncExtPm15MinCurrentEntry=nncExtPm15MinCurrentEntry, nncExtPm24HrIntervalTable=nncExtPm24HrIntervalTable, nncExtPm24HrIntervalImpairedBlocks=nncExtPm24HrIntervalImpairedBlocks, nncExtPm15MinCurrentCellFlow=nncExtPm15MinCurrentCellFlow, nncExtPm24HrCurrentMisinsertedCells=nncExtPm24HrCurrentMisinsertedCells, nncExtPm15MinCurrentIBWithCellLossMisinsert=nncExtPm15MinCurrentIBWithCellLossMisinsert, nncExtPmStatisticsGroups=nncExtPmStatisticsGroups, nncExtPm24HrCurrentGroup=nncExtPm24HrCurrentGroup, nncExtPm24HrCurrentCellsClp0And1=nncExtPm24HrCurrentCellsClp0And1, nncExtPm24HrCurrentTest=nncExtPm24HrCurrentTest, nncExtPm15MinIntervalIBWithCellLossMisinsert=nncExtPm15MinIntervalIBWithCellLossMisinsert, nncExtPmStatisticsObjects=nncExtPmStatisticsObjects, nncExtPm24HrCurrentSECBErrored=nncExtPm24HrCurrentSECBErrored, nncExtPm15MinCurrentTest=nncExtPm15MinCurrentTest, nncExtPm15MinCurrentImpairedBlocks=nncExtPm15MinCurrentImpairedBlocks, nncExtPm15MinCurrentSECBs=nncExtPm15MinCurrentSECBs, nncExtPm24HrCurrentLostCellsClp0=nncExtPm24HrCurrentLostCellsClp0, nncExtPm15MinIntervalCellFlow=nncExtPm15MinIntervalCellFlow, nncExtPm15MinIntervalLostCellsClp0=nncExtPm15MinIntervalLostCellsClp0, nncExtPmStatisticsCompliances=nncExtPmStatisticsCompliances, nncExtPmStatisticsTraps=nncExtPmStatisticsTraps)
