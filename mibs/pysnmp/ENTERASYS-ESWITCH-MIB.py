#
# PySNMP MIB module ENTERASYS-ESWITCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-ESWITCH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:49:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, Counter64, NotificationType, Gauge32, Integer32, ObjectIdentity, IpAddress, Counter32, TimeTicks, ModuleIdentity, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "Counter64", "NotificationType", "Gauge32", "Integer32", "ObjectIdentity", "IpAddress", "Counter32", "TimeTicks", "ModuleIdentity", "MibIdentifier", "Bits")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
enterasysESwitchMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10))
enterasysESwitchMIB.setRevisions(('2002-03-07 19:50', '2001-02-13 11:00',))
if mibBuilder.loadTexts: enterasysESwitchMIB.setLastUpdated('200203071950Z')
if mibBuilder.loadTexts: enterasysESwitchMIB.setOrganization('Enterasys Networks, Inc')
etsysESwitchObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1))
etsysESwitchParams = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 1))
etsysESwitchRateLimiting = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 2))
etsysESwitchFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 3))
etsysESwitchProtocolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4))
etsysESwitchAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysESwitchAdminStatus.setStatus('current')
etsysESwitchRateLimitingTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 2, 1), )
if mibBuilder.loadTexts: etsysESwitchRateLimitingTable.setStatus('current')
etsysESwitchRateLimitingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysESwitchRateLimitingEntry.setStatus('current')
etsysESwitchRateLimitSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysESwitchRateLimitSwitch.setStatus('current')
etsysESwitchRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysESwitchRateLimit.setStatus('current')
etsysESwitchAddrFilterTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 3, 1), )
if mibBuilder.loadTexts: etsysESwitchAddrFilterTable.setStatus('current')
etsysESwitchAddrFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysESwitchAddrFilterEntry.setStatus('current')
etsysESwitchAddressFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysESwitchAddressFilter.setStatus('current')
etsysESwitchEtherTypeTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 1), )
if mibBuilder.loadTexts: etsysESwitchEtherTypeTable.setStatus('current')
etsysESwitchEtherTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 1, 1), ).setIndexNames((0, "ENTERASYS-ESWITCH-MIB", "etsysESwitchEtherTypeIndex"))
if mibBuilder.loadTexts: etsysESwitchEtherTypeEntry.setStatus('current')
etsysESwitchEtherTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: etsysESwitchEtherTypeIndex.setStatus('current')
etsysESwitchEtherTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysESwitchEtherTypeValue.setStatus('current')
etsysESwitchEtherTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4))).clone('permanent')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysESwitchEtherTypeStatus.setStatus('current')
etsysESwitchEtherTypePreempted = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysESwitchEtherTypePreempted.setStatus('current')
etsysESwitchProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2), )
if mibBuilder.loadTexts: etsysESwitchProtocolTable.setStatus('current')
etsysESwitchProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1), ).setIndexNames((0, "ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolReceivePort"), (0, "ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolType"), (0, "ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolIndex"))
if mibBuilder.loadTexts: etsysESwitchProtocolEntry.setStatus('current')
etsysESwitchProtocolReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: etsysESwitchProtocolReceivePort.setStatus('current')
etsysESwitchProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("userEtherType", 1), ("ipv4", 2), ("ipxEthernet", 3), ("ipxRaw", 4), ("ipxLlc", 5), ("ipxSnap", 6), ("sna", 7), ("netBios", 8), ("decnet", 9), ("ipv6", 10))))
if mibBuilder.loadTexts: etsysESwitchProtocolType.setStatus('current')
etsysESwitchProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: etsysESwitchProtocolIndex.setStatus('current')
etsysESwitchProtocolConstraint = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portMask", 1), ("vlan", 2))).clone('portMask')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysESwitchProtocolConstraint.setStatus('current')
etsysESwitchProtocolAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 5), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysESwitchProtocolAllowedToGoTo.setStatus('current')
etsysESwitchProtocolVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysESwitchProtocolVlanId.setStatus('current')
etsysESwitchProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4))).clone('permanent')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysESwitchProtocolStatus.setStatus('current')
etsysESwitchProtocolPreempted = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 1, 4, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysESwitchProtocolPreempted.setStatus('current')
etsysESwitchConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 2))
etsysESwitchGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 2, 1))
etsysESwitchCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 2, 2))
etsysESwitchBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 2, 1, 1)).setObjects(("ENTERASYS-ESWITCH-MIB", "etsysESwitchAdminStatus"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchRateLimitSwitch"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchRateLimit"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchAddressFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysESwitchBaseGroup = etsysESwitchBaseGroup.setStatus('current')
etsysESwitchEtherTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 2, 1, 2)).setObjects(("ENTERASYS-ESWITCH-MIB", "etsysESwitchEtherTypeValue"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchEtherTypeStatus"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchEtherTypePreempted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysESwitchEtherTypeGroup = etsysESwitchEtherTypeGroup.setStatus('current')
etsysESwitchProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 2, 1, 3)).setObjects(("ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolConstraint"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolAllowedToGoTo"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolVlanId"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolStatus"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolPreempted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysESwitchProtocolGroup = etsysESwitchProtocolGroup.setStatus('current')
etsysESwitchCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 10, 2, 2, 1)).setObjects(("ENTERASYS-ESWITCH-MIB", "etsysESwitchBaseGroup"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchEtherTypeGroup"), ("ENTERASYS-ESWITCH-MIB", "etsysESwitchProtocolGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysESwitchCompliance = etsysESwitchCompliance.setStatus('current')
mibBuilder.exportSymbols("ENTERASYS-ESWITCH-MIB", etsysESwitchProtocolType=etsysESwitchProtocolType, etsysESwitchConformance=etsysESwitchConformance, etsysESwitchProtocolPreempted=etsysESwitchProtocolPreempted, enterasysESwitchMIB=enterasysESwitchMIB, etsysESwitchEtherTypeIndex=etsysESwitchEtherTypeIndex, etsysESwitchBaseGroup=etsysESwitchBaseGroup, etsysESwitchEtherTypeTable=etsysESwitchEtherTypeTable, etsysESwitchParams=etsysESwitchParams, etsysESwitchProtocolTable=etsysESwitchProtocolTable, etsysESwitchGroups=etsysESwitchGroups, etsysESwitchProtocolGroup=etsysESwitchProtocolGroup, etsysESwitchEtherTypeEntry=etsysESwitchEtherTypeEntry, etsysESwitchRateLimit=etsysESwitchRateLimit, etsysESwitchProtocolAllowedToGoTo=etsysESwitchProtocolAllowedToGoTo, etsysESwitchCompliances=etsysESwitchCompliances, etsysESwitchRateLimitSwitch=etsysESwitchRateLimitSwitch, etsysESwitchProtocolStatus=etsysESwitchProtocolStatus, etsysESwitchProtocolObjects=etsysESwitchProtocolObjects, etsysESwitchEtherTypeValue=etsysESwitchEtherTypeValue, etsysESwitchFilter=etsysESwitchFilter, etsysESwitchProtocolConstraint=etsysESwitchProtocolConstraint, etsysESwitchEtherTypeStatus=etsysESwitchEtherTypeStatus, etsysESwitchProtocolVlanId=etsysESwitchProtocolVlanId, etsysESwitchRateLimiting=etsysESwitchRateLimiting, etsysESwitchEtherTypePreempted=etsysESwitchEtherTypePreempted, etsysESwitchAddrFilterTable=etsysESwitchAddrFilterTable, etsysESwitchProtocolIndex=etsysESwitchProtocolIndex, etsysESwitchCompliance=etsysESwitchCompliance, PYSNMP_MODULE_ID=enterasysESwitchMIB, etsysESwitchRateLimitingEntry=etsysESwitchRateLimitingEntry, etsysESwitchObjects=etsysESwitchObjects, etsysESwitchRateLimitingTable=etsysESwitchRateLimitingTable, etsysESwitchProtocolReceivePort=etsysESwitchProtocolReceivePort, etsysESwitchProtocolEntry=etsysESwitchProtocolEntry, etsysESwitchAddrFilterEntry=etsysESwitchAddrFilterEntry, etsysESwitchAdminStatus=etsysESwitchAdminStatus, etsysESwitchEtherTypeGroup=etsysESwitchEtherTypeGroup, etsysESwitchAddressFilter=etsysESwitchAddressFilter)
