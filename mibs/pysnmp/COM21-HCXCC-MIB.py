#
# PySNMP MIB module COM21-HCXCC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COM21-HCXCC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:10:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
com21, com21Traps, com21Hcx = mibBuilder.importSymbols("COM21-HCX-MIB", "com21", "com21Traps", "com21Hcx")
hcxAlmSeverity, hcxEventLogTime = mibBuilder.importSymbols("COM21-HCXALM-MIB", "hcxAlmSeverity", "hcxEventLogTime")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ObjectIdentity, Bits, Unsigned32, ModuleIdentity, TimeTicks, MibIdentifier, Counter32, IpAddress, NotificationType, iso, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "Bits", "Unsigned32", "ModuleIdentity", "TimeTicks", "MibIdentifier", "Counter32", "IpAddress", "NotificationType", "iso", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
com21HcxCc = ModuleIdentity((1, 3, 6, 1, 4, 1, 1141, 2, 60))
if mibBuilder.loadTexts: com21HcxCc.setLastUpdated('9701080000Z')
if mibBuilder.loadTexts: com21HcxCc.setOrganization('Com21, Inc.')
com21HcxCcUnitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 61))
com21HcxCcNtpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 62))
class PrimServiceState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("is", 1), ("oos", 2))

class Com21RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("active", 1), ("create", 2), ("destroy", 3), ("deactive", 4))

hcxCcShelfId = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcShelfId.setStatus('current')
hcxCcSlotId = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcSlotId.setStatus('current')
hcxCcHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcHardwareVersion.setStatus('current')
hcxCcBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcBootVersion.setStatus('current')
hcxSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxSoftwareRevision.setStatus('current')
hcxControlPrimServState = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 7), PrimServiceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxControlPrimServState.setStatus('current')
hcxControlPrimServStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 10)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxControlPrimServState"))
if mibBuilder.loadTexts: hcxControlPrimServStateChange.setStatus('current')
hcxControlSecServState = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxControlSecServState.setStatus('current')
hcxControlSecServStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 11)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxControlSecServState"))
if mibBuilder.loadTexts: hcxControlSecServStateChange.setStatus('current')
hcxCcDiagTestAction = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxCcDiagTestAction.setStatus('current')
hcxCcDiagTestComplete = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 12)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxCcDiagTestResult"))
if mibBuilder.loadTexts: hcxCcDiagTestComplete.setStatus('current')
hcxCcDiagTestResult = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inprogress", 1), ("success", 2), ("failure", 3), ("invalidState", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcDiagTestResult.setStatus('current')
hcxCcTestStatusLed = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcTestStatusLed.setStatus('current')
hcxCcTestStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 13)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxCcTestStatusLed"))
if mibBuilder.loadTexts: hcxCcTestStatusLedChange.setStatus('current')
hcxCcFaultStatusLed = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcFaultStatusLed.setStatus('current')
hcxCcFaultStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 14)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxCcFaultStatusLed"))
if mibBuilder.loadTexts: hcxCcFaultStatusLedChange.setStatus('current')
hcxCcEtherLinkStatusLed = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcEtherLinkStatusLed.setStatus('current')
hcxCcEtherLinkStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 15)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxCcEtherLinkStatusLed"))
if mibBuilder.loadTexts: hcxCcEtherLinkStatusLedChange.setStatus('current')
hcxCcFlashBackupPeriod = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxCcFlashBackupPeriod.setStatus('current')
hcxCcFlashBackupAction = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxCcFlashBackupAction.setStatus('current')
hcxCcFlashBackupComplete = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 16)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxCcFlashBackupResult"))
if mibBuilder.loadTexts: hcxCcFlashBackupComplete.setStatus('current')
hcxCcFlashBackupResult = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inprogress", 1), ("success", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcFlashBackupResult.setStatus('current')
hcxSwitchSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxSwitchSoftwareRevision.setStatus('current')
hcxSwitchHardwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxSwitchHardwareRevision.setStatus('current')
hcxSwitchSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxSwitchSerialNumber.setStatus('current')
hcxNtpv3Control = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxNtpv3Control.setStatus('current')
hcxDiskFaultState = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noFault", 1), ("notInstalled", 2), ("notMounted", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDiskFaultState.setStatus('current')
hcxDiskIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxDiskIdentifier.setStatus('current')
hcxDiskAccessFailure = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 17)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"), ("COM21-HCXCC-MIB", "hcxDiskFaultState"))
if mibBuilder.loadTexts: hcxDiskAccessFailure.setStatus('current')
hcxDiskAccessFailClear = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 18)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXCC-MIB", "hcxCcShelfId"), ("COM21-HCXCC-MIB", "hcxCcSlotId"))
if mibBuilder.loadTexts: hcxDiskAccessFailClear.setStatus('current')
hcxMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 1141, 2, 61, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxMibVersion.setStatus('current')
com21HcxCcNtpTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 62, 1), )
if mibBuilder.loadTexts: com21HcxCcNtpTable.setStatus('current')
com21HcxCcNtpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 62, 1, 1), ).setIndexNames((0, "COM21-HCXCC-MIB", "hcxCcNtpServerIndex"))
if mibBuilder.loadTexts: com21HcxCcNtpEntry.setStatus('current')
hcxCcNtpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 62, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxCcNtpServerIndex.setStatus('current')
hcxCcNtpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 62, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxCcNtpServerAddress.setStatus('current')
hcxCcNtpServerAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 62, 1, 1, 3), Com21RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hcxCcNtpServerAddrStatus.setStatus('current')
mibBuilder.exportSymbols("COM21-HCXCC-MIB", hcxCcShelfId=hcxCcShelfId, com21HcxCcNtpGroup=com21HcxCcNtpGroup, hcxCcFaultStatusLed=hcxCcFaultStatusLed, hcxCcDiagTestResult=hcxCcDiagTestResult, hcxCcTestStatusLedChange=hcxCcTestStatusLedChange, hcxCcDiagTestComplete=hcxCcDiagTestComplete, hcxCcEtherLinkStatusLedChange=hcxCcEtherLinkStatusLedChange, com21HcxCcUnitGroup=com21HcxCcUnitGroup, hcxCcDiagTestAction=hcxCcDiagTestAction, hcxCcHardwareVersion=hcxCcHardwareVersion, hcxNtpv3Control=hcxNtpv3Control, hcxCcFlashBackupResult=hcxCcFlashBackupResult, com21HcxCc=com21HcxCc, hcxDiskAccessFailClear=hcxDiskAccessFailClear, com21HcxCcNtpTable=com21HcxCcNtpTable, hcxControlPrimServState=hcxControlPrimServState, hcxMibVersion=hcxMibVersion, hcxSwitchSoftwareRevision=hcxSwitchSoftwareRevision, hcxControlSecServState=hcxControlSecServState, hcxSwitchHardwareRevision=hcxSwitchHardwareRevision, hcxCcFaultStatusLedChange=hcxCcFaultStatusLedChange, hcxCcFlashBackupPeriod=hcxCcFlashBackupPeriod, hcxDiskIdentifier=hcxDiskIdentifier, hcxSoftwareRevision=hcxSoftwareRevision, hcxCcFlashBackupComplete=hcxCcFlashBackupComplete, hcxControlSecServStateChange=hcxControlSecServStateChange, hcxControlPrimServStateChange=hcxControlPrimServStateChange, hcxCcTestStatusLed=hcxCcTestStatusLed, hcxCcEtherLinkStatusLed=hcxCcEtherLinkStatusLed, hcxDiskAccessFailure=hcxDiskAccessFailure, PYSNMP_MODULE_ID=com21HcxCc, PrimServiceState=PrimServiceState, hcxCcFlashBackupAction=hcxCcFlashBackupAction, hcxDiskFaultState=hcxDiskFaultState, Com21RowStatus=Com21RowStatus, com21HcxCcNtpEntry=com21HcxCcNtpEntry, hcxCcNtpServerAddrStatus=hcxCcNtpServerAddrStatus, hcxCcBootVersion=hcxCcBootVersion, hcxCcNtpServerAddress=hcxCcNtpServerAddress, hcxSwitchSerialNumber=hcxSwitchSerialNumber, hcxCcSlotId=hcxCcSlotId, hcxCcNtpServerIndex=hcxCcNtpServerIndex)
