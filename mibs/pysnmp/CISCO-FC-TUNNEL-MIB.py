#
# PySNMP MIB module CISCO-FC-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FC-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:41:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, Integer32, TimeTicks, ObjectIdentity, IpAddress, Gauge32, iso, MibIdentifier, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "TimeTicks", "ObjectIdentity", "IpAddress", "Gauge32", "iso", "MibIdentifier", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "ModuleIdentity")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
ciscoFiberChannelTunnelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 9999))
ciscoFiberChannelTunnelMIB.setRevisions(('2002-03-08 17:00',))
if mibBuilder.loadTexts: ciscoFiberChannelTunnelMIB.setLastUpdated('200203081700Z')
if mibBuilder.loadTexts: ciscoFiberChannelTunnelMIB.setOrganization('Cisco Systems, Inc.')
ciscoFCTunnelMIBNotifi = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 0))
ciscoFCTunnelMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1))
ciscoFCTunnelMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2))
cftTcpTunnelObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1))
cftMaxTcpTunnels = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftMaxTcpTunnels.setStatus('current')
cftTcpTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2), )
if mibBuilder.loadTexts: cftTcpTunnelTable.setStatus('current')
cftTcpTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-FC-TUNNEL-MIB", "cftFiberChannelIf"), (1, "CISCO-FC-TUNNEL-MIB", "cftTcpTunnelName"))
if mibBuilder.loadTexts: cftTcpTunnelEntry.setStatus('current')
cftFiberChannelIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cftFiberChannelIf.setStatus('current')
cftTcpTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: cftTcpTunnelName.setStatus('current')
cftTcpTunnelSrcIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelSrcIpType.setStatus('current')
cftTcpTunnelSrcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelSrcIp.setStatus('current')
cftTcpTunnelDestIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelDestIpType.setStatus('current')
cftTcpTunnelDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelDestIp.setStatus('current')
cftTcpTunnelCmdSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelCmdSrcPort.setStatus('current')
cftTcpTunnelCmdDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelCmdDestPort.setStatus('current')
cftTcpTunnelDataSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelDataSrcPort.setStatus('current')
cftTcpTunnelDataDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelDataDestPort.setStatus('current')
cftTcpTunnelCmdMWS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ws32kbytes", 1), ("ws128kbytes", 2), ("ws256kbytes", 3), ("ws512kbytes", 4))).clone('ws32kbytes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelCmdMWS.setStatus('current')
cftTcpTunnelDataMWS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ws32kbytes", 1), ("ws128kbytes", 2), ("ws256kbytes", 3), ("ws512kbytes", 4))).clone('ws32kbytes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelDataMWS.setStatus('current')
cftTcpTunnelCmdKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3600, 10800)).clone(7200)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelCmdKeepAliveTime.setStatus('current')
cftTcpTunnelDataKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3600, 10800)).clone(7200)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelDataKeepAliveTime.setStatus('current')
cftTcpTunnelCmdSelectiveAck = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 15), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelCmdSelectiveAck.setStatus('current')
cftTcpTunnelDataSelectiveAck = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 16), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelDataSelectiveAck.setStatus('current')
cftTcpTunnelCmdConnectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("notConnected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelCmdConnectStatus.setStatus('current')
cftTcpTunnelDataConnectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("notConnected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelDataConnectStatus.setStatus('current')
cftTcpTunnelOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelOperStatus.setStatus('current')
cftTcpTunnelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 2, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cftTcpTunnelStatus.setStatus('current')
cftTcpTunnelStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3), )
if mibBuilder.loadTexts: cftTcpTunnelStatsTable.setStatus('current')
cftTcpTunnelStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-FC-TUNNEL-MIB", "cftFiberChannelIf"), (1, "CISCO-FC-TUNNEL-MIB", "cftTcpTunnelName"))
if mibBuilder.loadTexts: cftTcpTunnelStatsEntry.setStatus('current')
cftTcpTunnelCmdRxSegmentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelCmdRxSegmentOctets.setStatus('current')
cftTcpTunnelDataRxSegmentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelDataRxSegmentOctets.setStatus('current')
cftTcpTunnelCmdRxPrestufOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelCmdRxPrestufOctets.setStatus('current')
cftTcpTunnelDataRxPrestufOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 4), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelDataRxPrestufOctets.setStatus('current')
cftTcpTunnelCmdRxPoststufOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 5), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelCmdRxPoststufOctets.setStatus('current')
cftTcpTunnelDataRxPoststufOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 6), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelDataRxPoststufOctets.setStatus('current')
cftTcpTunnelCmdTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 7), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelCmdTxOctets.setStatus('current')
cftTcpTunnelDataTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 8), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelDataTxOctets.setStatus('current')
cftTcpTunnelCmdTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelCmdTxPkts.setStatus('current')
cftTcpTunnelDataTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelDataTxPkts.setStatus('current')
cftTcpTunnelCmdTxDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelCmdTxDrops.setStatus('current')
cftTcpTunnelDataTxDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 3, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cftTcpTunnelDataTxDrops.setStatus('current')
cftIfTcpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4), )
if mibBuilder.loadTexts: cftIfTcpTable.setStatus('current')
cftIfTcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-FC-TUNNEL-MIB", "cftIfTcpIndex"))
if mibBuilder.loadTexts: cftIfTcpEntry.setStatus('current')
cftIfTcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cftIfTcpIndex.setStatus('current')
cftIfTcpConnInit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnInit.setStatus('current')
cftIfTcpConnAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnAccepted.setStatus('current')
cftIfTcpConnEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnEstablished.setStatus('current')
cftIfTcpConnDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnDrops.setStatus('current')
cftIfTcpConnClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnClosed.setStatus('current')
cftIfTcpTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxPkts.setStatus('current')
cftIfTcpTxDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxDataPkts.setStatus('current')
cftIfTcpTxDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxDataOctets.setStatus('current')
cftIfTcpRetxDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRetxDataPkts.setStatus('current')
cftIfTcpRetxDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRetxDataOctets.setStatus('current')
cftIfTcpRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxPkts.setStatus('current')
cftIfTcpRxInSequencePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxInSequencePkts.setStatus('current')
cftIfTcpRxInSequenceOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxInSequenceOctets.setStatus('current')
cftIfTcpRxCcksumErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxCcksumErrPkts.setStatus('current')
cftIfTcpRxBadOffsetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxBadOffsetPkts.setStatus('current')
cftIfTcpRxOutOfOrderPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxOutOfOrderPkts.setStatus('current')
cftIfTcpRxOutOfOrderOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxOutOfOrderOctets.setStatus('current')
cftIfTcpExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5), )
if mibBuilder.loadTexts: cftIfTcpExtTable.setStatus('current')
cftIfTcpExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-FC-TUNNEL-MIB", "cftIfTcpIndex"))
if mibBuilder.loadTexts: cftIfTcpExtEntry.setStatus('current')
cftIfTcpEmbryonicConnDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpEmbryonicConnDrops.setStatus('current')
cftIfTcpSegsTryToGetRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpSegsTryToGetRTT.setStatus('current')
cftIfTcpSegsSucceedToGetRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpSegsSucceedToGetRTT.setStatus('current')
cftIfTcpDelayedAcksSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpDelayedAcksSent.setStatus('current')
cftIfTcpConnDroppedRxTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnDroppedRxTimeout.setStatus('current')
cftIfTcpRetransmitTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRetransmitTimeout.setStatus('current')
cftIfTcpPersistTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpPersistTimeout.setStatus('current')
cftIfTcpKeepaliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpKeepaliveTimeout.setStatus('current')
cftIfTcpKeepaliveProbesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpKeepaliveProbesSent.setStatus('current')
cftIfTcpConnDroppedInKeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnDroppedInKeepalive.setStatus('current')
cftIfTcpConnDroppedInPersist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnDroppedInPersist.setStatus('current')
cftIfTcpConnDrainedByNoMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpConnDrainedByNoMemory.setStatus('current')
cftIfTcpAckOnlyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpAckOnlyPkts.setStatus('current')
cftIfTcpTxWindowProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxWindowProbes.setStatus('current')
cftIfTcpTxURGPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxURGPkts.setStatus('current')
cftIfTcpTxWindowUpdateOnlyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxWindowUpdateOnlyPkts.setStatus('current')
cftIfTcpTxControlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxControlPkts.setStatus('current')
cftIfTcpRxDroppedByNoMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDroppedByNoMemory.setStatus('current')
cftIfTcpRxTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxTooShort.setStatus('current')
cftIfTcpRxDupOnlyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDupOnlyPkts.setStatus('current')
cftIfTcpRxDupOnlyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDupOnlyOctets.setStatus('current')
cftIfTcpRxDupDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDupDataPkts.setStatus('current')
cftIfTcpRxDupOctetsInPartDupPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDupOctetsInPartDupPkts.setStatus('current')
cftIfTcpRxDataAfterWindowPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDataAfterWindowPkts.setStatus('current')
cftIfTcpRxDataAfterWindowOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDataAfterWindowOctets.setStatus('current')
cftIfTcpRxPktsAfterConnClose = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxPktsAfterConnClose.setStatus('current')
cftIfTcpRxWindowProbesPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxWindowProbesPkts.setStatus('current')
cftIfTcpRxDupAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxDupAcks.setStatus('current')
cftIfTcpRxAcksForUnsentData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxAcksForUnsentData.setStatus('current')
cftIfTcpRxAcksPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxAcksPkts.setStatus('current')
cftIfTcpOctetAckedByRxAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpOctetAckedByRxAcks.setStatus('current')
cftIfTcpRxWindowUpdatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRxWindowUpdatePkts.setStatus('current')
cftIfTcpSegDropByPAWS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpSegDropByPAWS.setStatus('current')
cftIfTcpTxSackFackDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxSackFackDataPkts.setStatus('current')
cftIfTcpTxSackFackDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpTxSackFackDataOctets.setStatus('current')
cftIfTcpRetxSackFackDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRetxSackFackDataPkts.setStatus('current')
cftIfTcpRetxSackFackDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRetxSackFackDataOctets.setStatus('current')
cftIfTcpSackFackConnClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpSackFackConnClosed.setStatus('current')
cftIfTcpRetxSackFackTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpRetxSackFackTimeouts.setStatus('current')
cftIfTcpHdrPredictOkForAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpHdrPredictOkForAcks.setStatus('current')
cftIfTcpHdrPredictOkForDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 9999, 1, 1, 5, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cftIfTcpHdrPredictOkForDataPkts.setStatus('current')
cftTunnelMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2, 1))
cftTunnelMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2, 2))
cftTunnelMIBComplianceV01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2, 1, 1)).setObjects(("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cftTunnelMIBComplianceV01 = cftTunnelMIBComplianceV01.setStatus('current')
cftTcpTunnelConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2, 2, 1)).setObjects(("CISCO-FC-TUNNEL-MIB", "cftMaxTcpTunnels"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelSrcIpType"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelSrcIp"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDestIpType"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDestIp"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdSrcPort"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdDestPort"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataSrcPort"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataDestPort"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdMWS"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataMWS"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdKeepAliveTime"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataKeepAliveTime"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdSelectiveAck"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataSelectiveAck"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdConnectStatus"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataConnectStatus"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelOperStatus"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cftTcpTunnelConfigGroup = cftTcpTunnelConfigGroup.setStatus('current')
cftTcpTunnelStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2, 2, 2)).setObjects(("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdRxSegmentOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataRxSegmentOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdRxPrestufOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataRxPrestufOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdRxPoststufOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataRxPoststufOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdTxOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataTxOctets"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdTxPkts"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataTxPkts"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelCmdTxDrops"), ("CISCO-FC-TUNNEL-MIB", "cftTcpTunnelDataTxDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cftTcpTunnelStatGroup = cftTcpTunnelStatGroup.setStatus('current')
cftIfTcpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2, 2, 3)).setObjects(("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnInit"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnAccepted"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnEstablished"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnDrops"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnClosed"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxDataPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxDataOctets"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRetxDataPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRetxDataOctets"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxInSequencePkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxInSequenceOctets"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxCcksumErrPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxBadOffsetPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxOutOfOrderPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxOutOfOrderOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cftIfTcpGroup = cftIfTcpGroup.setStatus('current')
cftIfTcpExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 9999, 2, 2, 4)).setObjects(("CISCO-FC-TUNNEL-MIB", "cftIfTcpEmbryonicConnDrops"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpSegsTryToGetRTT"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpSegsSucceedToGetRTT"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpDelayedAcksSent"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnDroppedRxTimeout"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRetransmitTimeout"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpPersistTimeout"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpKeepaliveTimeout"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpKeepaliveProbesSent"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnDroppedInKeepalive"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnDroppedInPersist"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpConnDrainedByNoMemory"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpAckOnlyPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxWindowProbes"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxURGPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxWindowUpdateOnlyPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxControlPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDroppedByNoMemory"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxTooShort"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDupOnlyPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDupOnlyOctets"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDupDataPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDupOctetsInPartDupPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDataAfterWindowPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDataAfterWindowOctets"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxPktsAfterConnClose"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxWindowProbesPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxDupAcks"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxAcksForUnsentData"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxAcksPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpOctetAckedByRxAcks"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRxWindowUpdatePkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpSegDropByPAWS"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxSackFackDataPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpTxSackFackDataOctets"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRetxSackFackDataPkts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRetxSackFackDataOctets"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpSackFackConnClosed"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpRetxSackFackTimeouts"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpHdrPredictOkForAcks"), ("CISCO-FC-TUNNEL-MIB", "cftIfTcpHdrPredictOkForDataPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cftIfTcpExtGroup = cftIfTcpExtGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FC-TUNNEL-MIB", cftIfTcpTable=cftIfTcpTable, cftFiberChannelIf=cftFiberChannelIf, cftIfTcpConnDrainedByNoMemory=cftIfTcpConnDrainedByNoMemory, cftTcpTunnelDataTxDrops=cftTcpTunnelDataTxDrops, cftIfTcpConnClosed=cftIfTcpConnClosed, cftIfTcpTxWindowProbes=cftIfTcpTxWindowProbes, cftTcpTunnelDataKeepAliveTime=cftTcpTunnelDataKeepAliveTime, cftIfTcpRxDataAfterWindowOctets=cftIfTcpRxDataAfterWindowOctets, cftTcpTunnelName=cftTcpTunnelName, cftIfTcpExtTable=cftIfTcpExtTable, cftIfTcpRxDupOnlyOctets=cftIfTcpRxDupOnlyOctets, cftTcpTunnelConfigGroup=cftTcpTunnelConfigGroup, cftIfTcpAckOnlyPkts=cftIfTcpAckOnlyPkts, cftIfTcpTxSackFackDataOctets=cftIfTcpTxSackFackDataOctets, cftTcpTunnelCmdSelectiveAck=cftTcpTunnelCmdSelectiveAck, cftIfTcpRxPkts=cftIfTcpRxPkts, ciscoFCTunnelMIBObjects=ciscoFCTunnelMIBObjects, cftIfTcpRetransmitTimeout=cftIfTcpRetransmitTimeout, cftTcpTunnelCmdRxPrestufOctets=cftTcpTunnelCmdRxPrestufOctets, cftIfTcpIndex=cftIfTcpIndex, cftIfTcpRxPktsAfterConnClose=cftIfTcpRxPktsAfterConnClose, cftIfTcpRetxDataOctets=cftIfTcpRetxDataOctets, cftTunnelMIBComplianceV01=cftTunnelMIBComplianceV01, cftIfTcpRxInSequenceOctets=cftIfTcpRxInSequenceOctets, PYSNMP_MODULE_ID=ciscoFiberChannelTunnelMIB, cftIfTcpRxCcksumErrPkts=cftIfTcpRxCcksumErrPkts, cftTcpTunnelOperStatus=cftTcpTunnelOperStatus, cftIfTcpConnDroppedRxTimeout=cftIfTcpConnDroppedRxTimeout, cftIfTcpSegsTryToGetRTT=cftIfTcpSegsTryToGetRTT, cftIfTcpEntry=cftIfTcpEntry, cftIfTcpKeepaliveProbesSent=cftIfTcpKeepaliveProbesSent, cftTunnelMIBCompliances=cftTunnelMIBCompliances, ciscoFCTunnelMIBConform=ciscoFCTunnelMIBConform, cftTcpTunnelDataRxPrestufOctets=cftTcpTunnelDataRxPrestufOctets, cftIfTcpRetxDataPkts=cftIfTcpRetxDataPkts, cftIfTcpTxDataPkts=cftIfTcpTxDataPkts, cftIfTcpHdrPredictOkForDataPkts=cftIfTcpHdrPredictOkForDataPkts, cftTcpTunnelCmdTxDrops=cftTcpTunnelCmdTxDrops, cftTcpTunnelDataTxOctets=cftTcpTunnelDataTxOctets, cftIfTcpSackFackConnClosed=cftIfTcpSackFackConnClosed, cftTcpTunnelCmdTxPkts=cftTcpTunnelCmdTxPkts, cftTcpTunnelStatGroup=cftTcpTunnelStatGroup, cftTcpTunnelCmdRxPoststufOctets=cftTcpTunnelCmdRxPoststufOctets, cftTunnelMIBGroups=cftTunnelMIBGroups, cftIfTcpTxDataOctets=cftIfTcpTxDataOctets, cftIfTcpRxDupDataPkts=cftIfTcpRxDupDataPkts, cftIfTcpPersistTimeout=cftIfTcpPersistTimeout, ciscoFiberChannelTunnelMIB=ciscoFiberChannelTunnelMIB, cftTcpTunnelDestIpType=cftTcpTunnelDestIpType, cftTcpTunnelDataMWS=cftTcpTunnelDataMWS, cftIfTcpRxDupAcks=cftIfTcpRxDupAcks, cftIfTcpRxDupOctetsInPartDupPkts=cftIfTcpRxDupOctetsInPartDupPkts, cftTcpTunnelCmdDestPort=cftTcpTunnelCmdDestPort, cftIfTcpSegsSucceedToGetRTT=cftIfTcpSegsSucceedToGetRTT, cftIfTcpRetxSackFackDataOctets=cftIfTcpRetxSackFackDataOctets, cftIfTcpRxWindowUpdatePkts=cftIfTcpRxWindowUpdatePkts, cftTcpTunnelTable=cftTcpTunnelTable, cftIfTcpRxAcksPkts=cftIfTcpRxAcksPkts, cftIfTcpTxControlPkts=cftIfTcpTxControlPkts, cftIfTcpConnDroppedInPersist=cftIfTcpConnDroppedInPersist, cftIfTcpKeepaliveTimeout=cftIfTcpKeepaliveTimeout, cftTcpTunnelObjects=cftTcpTunnelObjects, cftIfTcpRxOutOfOrderOctets=cftIfTcpRxOutOfOrderOctets, cftIfTcpExtGroup=cftIfTcpExtGroup, cftIfTcpRxDroppedByNoMemory=cftIfTcpRxDroppedByNoMemory, cftIfTcpTxWindowUpdateOnlyPkts=cftIfTcpTxWindowUpdateOnlyPkts, cftIfTcpDelayedAcksSent=cftIfTcpDelayedAcksSent, cftTcpTunnelDataSrcPort=cftTcpTunnelDataSrcPort, cftIfTcpRetxSackFackDataPkts=cftIfTcpRetxSackFackDataPkts, cftIfTcpTxSackFackDataPkts=cftIfTcpTxSackFackDataPkts, cftIfTcpSegDropByPAWS=cftIfTcpSegDropByPAWS, cftTcpTunnelDataDestPort=cftTcpTunnelDataDestPort, cftIfTcpRxBadOffsetPkts=cftIfTcpRxBadOffsetPkts, cftTcpTunnelDataRxPoststufOctets=cftTcpTunnelDataRxPoststufOctets, cftIfTcpTxURGPkts=cftIfTcpTxURGPkts, cftIfTcpConnInit=cftIfTcpConnInit, cftTcpTunnelCmdMWS=cftTcpTunnelCmdMWS, cftIfTcpConnAccepted=cftIfTcpConnAccepted, cftTcpTunnelStatus=cftTcpTunnelStatus, cftTcpTunnelSrcIp=cftTcpTunnelSrcIp, cftIfTcpRxOutOfOrderPkts=cftIfTcpRxOutOfOrderPkts, cftMaxTcpTunnels=cftMaxTcpTunnels, cftIfTcpHdrPredictOkForAcks=cftIfTcpHdrPredictOkForAcks, cftTcpTunnelDataSelectiveAck=cftTcpTunnelDataSelectiveAck, cftIfTcpConnDrops=cftIfTcpConnDrops, cftIfTcpRxInSequencePkts=cftIfTcpRxInSequencePkts, cftTcpTunnelDataRxSegmentOctets=cftTcpTunnelDataRxSegmentOctets, ciscoFCTunnelMIBNotifi=ciscoFCTunnelMIBNotifi, cftTcpTunnelCmdConnectStatus=cftTcpTunnelCmdConnectStatus, cftIfTcpRxDataAfterWindowPkts=cftIfTcpRxDataAfterWindowPkts, cftTcpTunnelSrcIpType=cftTcpTunnelSrcIpType, cftIfTcpConnEstablished=cftIfTcpConnEstablished, cftTcpTunnelStatsTable=cftTcpTunnelStatsTable, cftIfTcpConnDroppedInKeepalive=cftIfTcpConnDroppedInKeepalive, cftTcpTunnelDestIp=cftTcpTunnelDestIp, cftIfTcpGroup=cftIfTcpGroup, cftIfTcpRxDupOnlyPkts=cftIfTcpRxDupOnlyPkts, cftTcpTunnelEntry=cftTcpTunnelEntry, cftIfTcpRetxSackFackTimeouts=cftIfTcpRetxSackFackTimeouts, cftIfTcpRxAcksForUnsentData=cftIfTcpRxAcksForUnsentData, cftTcpTunnelCmdSrcPort=cftTcpTunnelCmdSrcPort, cftIfTcpTxPkts=cftIfTcpTxPkts, cftIfTcpExtEntry=cftIfTcpExtEntry, cftTcpTunnelCmdKeepAliveTime=cftTcpTunnelCmdKeepAliveTime, cftTcpTunnelDataConnectStatus=cftTcpTunnelDataConnectStatus, cftIfTcpEmbryonicConnDrops=cftIfTcpEmbryonicConnDrops, cftIfTcpOctetAckedByRxAcks=cftIfTcpOctetAckedByRxAcks, cftTcpTunnelDataTxPkts=cftTcpTunnelDataTxPkts, cftIfTcpRxWindowProbesPkts=cftIfTcpRxWindowProbesPkts, cftIfTcpRxTooShort=cftIfTcpRxTooShort, cftTcpTunnelCmdRxSegmentOctets=cftTcpTunnelCmdRxSegmentOctets, cftTcpTunnelStatsEntry=cftTcpTunnelStatsEntry, cftTcpTunnelCmdTxOctets=cftTcpTunnelCmdTxOctets)
