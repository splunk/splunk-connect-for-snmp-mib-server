#
# PySNMP MIB module AcGateway (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AcGateway
# Produced by pysmi-0.3.4 at Mon Apr 29 17:17:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
acGeneric, acRegistrations, acBoardMibs, acProducts, audioCodes = mibBuilder.importSymbols("AUDIOCODES-TYPES-MIB", "acGeneric", "acRegistrations", "acBoardMibs", "acProducts", "audioCodes")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ObjectIdentity, NotificationType, MibIdentifier, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, iso, Counter64, TimeTicks, Unsigned32, ModuleIdentity, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "NotificationType", "MibIdentifier", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "iso", "Counter64", "TimeTicks", "Unsigned32", "ModuleIdentity", "IpAddress", "Gauge32")
RowPointer, TAddress, RowStatus, DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "TAddress", "RowStatus", "DateAndTime", "TextualConvention", "DisplayString")
acGateway = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3))
if mibBuilder.loadTexts: acGateway.setLastUpdated('201003161503Z')
if mibBuilder.loadTexts: acGateway.setOrganization('AudioCodes Ltd')
gwConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1))
common = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1))
channelsSetting = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1))
channelsSettingSelectMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("byDestPhoneNumber", 0), ("cyclicAscending", 1), ("ascendingAlways", 2), ("cyclicDescending", 3), ("descendingAlways", 4), ("byDestinationPhoneNumberCyclicAscending", 5), ("bySourcePhoneNumber", 6), ("trunkCyclicAscending", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelsSettingSelectMode.setStatus('current')
channelsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21), )
if mibBuilder.loadTexts: channelsTable.setStatus('current')
channelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1), ).setIndexNames((0, "AcGateway", "channelsIndex"))
if mibBuilder.loadTexts: channelsEntry.setStatus('current')
channelsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: channelsIndex.setStatus('current')
channelsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsRowStatus.setStatus('current')
channelsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelsAction.setStatus('current')
channelsActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelsActionResult.setStatus('current')
channelsTrunkID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsTrunkID.setStatus('current')
channelsStartingCh = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2016))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsStartingCh.setStatus('current')
channelsLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2016))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsLastCh.setStatus('current')
channelsStartingPhoneNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsStartingPhoneNum.setStatus('current')
channelsTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsTrunkGroupID.setStatus('current')
channelsProfileID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsProfileID.setStatus('current')
channelsLastTrunkID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsLastTrunkID.setStatus('current')
channelsModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 21, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelsModule.setStatus('current')
trunkGroupSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22), )
if mibBuilder.loadTexts: trunkGroupSettingsTable.setStatus('current')
trunkGroupSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1), ).setIndexNames((0, "AcGateway", "trunkGroupSettingsIndex"))
if mibBuilder.loadTexts: trunkGroupSettingsEntry.setStatus('current')
trunkGroupSettingsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: trunkGroupSettingsIndex.setStatus('current')
trunkGroupSettingsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsRowStatus.setStatus('current')
trunkGroupSettingsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkGroupSettingsAction.setStatus('current')
trunkGroupSettingsActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkGroupSettingsActionResult.setStatus('current')
trunkGroupSettingsTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsTrunkGroupID.setStatus('current')
trunkGroupSettingsChannelSelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 255))).clone(namedValues=NamedValues(("byPhoneNumber", 0), ("cyclicAscending", 1), ("ascendingAlways", 2), ("cyclicDescending", 3), ("descendingAlways", 4), ("byPhoneNumberCyclicAscending", 5), ("bySourcePhoneNumber", 6), ("trunkCyclicAscending", 7), ("trunkAndChannelCyclicAscending", 8), ("valueNotSet", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsChannelSelectMode.setStatus('current')
trunkGroupSettingsRegistrationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 5, 255))).clone(namedValues=NamedValues(("perEndpoint", 0), ("perGateway", 1), ("notApplicable", 2), ("doNotRegister", 4), ("perAccount", 5), ("valueNotSet", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsRegistrationMode.setStatus('current')
trunkGroupSettingsGatewayName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsGatewayName.setStatus('current')
trunkGroupSettingsContactUser = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsContactUser.setStatus('current')
trunkGroupSettingsServingIPGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsServingIPGroup.setStatus('current')
trunkGroupSettingsMwiInterrogationType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 1, 22, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("none", 0), ("useActivateOnly", 1), ("resultNotUsed", 2), ("useResult", 3), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trunkGroupSettingsMwiInterrogationType.setStatus('current')
manipulationAndRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2))
manipulationAndRoutingModeTel2Ip = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("routeBeforeMap", 0), ("routeAfterMap", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingModeTel2Ip.setStatus('current')
manipulationAndRoutingModeIp2Tel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("routeBeforeMap", 0), ("routeAfterMap", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingModeIp2Tel.setStatus('current')
manipulationAndRoutingFilterCalls2Ip = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingFilterCalls2Ip.setStatus('current')
manipulationAndRoutingAltRoutingTel2IpEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("statusOnly", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingAltRoutingTel2IpEnable.setStatus('current')
manipulationAndRoutingAltRoutingTel2IpMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("conn", 1), ("qos", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingAltRoutingTel2IpMode.setStatus('current')
manipulationAndRoutingAltRoutingTel2IpQosAllowTheNCall = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingAltRoutingTel2IpQosAllowTheNCall.setStatus('current')
manipulationAndRoutingPreferRouteTable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingPreferRouteTable.setStatus('current')
manipulationAndRoutingRedundantRoutingMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("routingTable", 1), ("proxy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingRedundantRoutingMode.setStatus('current')
manipulationAndRoutingAltRoutingTel2IpConnMethod = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ping", 0), ("options", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingAltRoutingTel2IpConnMethod.setStatus('current')
manipulationAndRoutingSIPReRoutingMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("standardMode", 0), ("sendInviteToProxy", 1), ("useRoutingTable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingSIPReRoutingMode.setStatus('current')
manipulationAndRoutingAltRoutingToneDuration = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingAltRoutingToneDuration.setStatus('current')
manipulationAndRoutingAltRoutingTel2IpKeepAliveTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAndRoutingAltRoutingTel2IpKeepAliveTime.setStatus('current')
routing = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20))
tel2IPRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1), )
if mibBuilder.loadTexts: tel2IPRoutingTable.setStatus('current')
tel2IPRoutingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1), ).setIndexNames((0, "AcGateway", "tel2IPRoutingIndex"))
if mibBuilder.loadTexts: tel2IPRoutingEntry.setStatus('current')
tel2IPRoutingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 199)))
if mibBuilder.loadTexts: tel2IPRoutingIndex.setStatus('current')
tel2IPRoutingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingRowStatus.setStatus('current')
tel2IPRoutingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tel2IPRoutingAction.setStatus('current')
tel2IPRoutingActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tel2IPRoutingActionResult.setStatus('current')
tel2IPRoutingPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingPrefix.setStatus('current')
tel2IPRoutingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 69))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingAddress.setStatus('current')
tel2IPRoutingSrcPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingSrcPrefix.setStatus('current')
tel2IPRoutingProfileID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingProfileID.setStatus('current')
tel2IPRoutingChargeCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingChargeCode.setStatus('current')
tel2IPRoutingDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingDestPort.setStatus('current')
tel2IPRoutingSourceIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingSourceIPGroupID.setStatus('current')
tel2IPRoutingDestHostPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingDestHostPrefix.setStatus('current')
tel2IPRoutingDestIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingDestIPGroupID.setStatus('current')
tel2IPRoutingSourceHostPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingSourceHostPrefix.setStatus('current')
tel2IPRoutingTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("udp", 0), ("tcp", 1), ("tls", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingTransportType.setStatus('current')
tel2IPRoutingSourceTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tel2IPRoutingSourceTrunkGroupID.setStatus('current')
iP2TelRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2), )
if mibBuilder.loadTexts: iP2TelRoutingTable.setStatus('current')
iP2TelRoutingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1), ).setIndexNames((0, "AcGateway", "iP2TelRoutingIndex"))
if mibBuilder.loadTexts: iP2TelRoutingEntry.setStatus('current')
iP2TelRoutingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 119)))
if mibBuilder.loadTexts: iP2TelRoutingIndex.setStatus('current')
iP2TelRoutingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingRowStatus.setStatus('current')
iP2TelRoutingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iP2TelRoutingAction.setStatus('current')
iP2TelRoutingActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iP2TelRoutingActionResult.setStatus('current')
iP2TelRoutingPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingPrefix.setStatus('current')
iP2TelRoutingTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingTrunkGroupID.setStatus('current')
iP2TelRoutingSrcPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingSrcPrefix.setStatus('current')
iP2TelRoutingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingAddress.setStatus('current')
iP2TelRoutingProfileID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingProfileID.setStatus('current')
iP2TelRoutingSourceIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingSourceIPGroupID.setStatus('current')
iP2TelRoutingDestHostPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingDestHostPrefix.setStatus('current')
iP2TelRoutingSourceHostPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 2, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iP2TelRoutingSourceHostPrefix.setStatus('current')
dnsInfoTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3), )
if mibBuilder.loadTexts: dnsInfoTable.setStatus('current')
dnsInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1), ).setIndexNames((0, "AcGateway", "dnsInfoIndex"))
if mibBuilder.loadTexts: dnsInfoEntry.setStatus('current')
dnsInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 19)))
if mibBuilder.loadTexts: dnsInfoIndex.setStatus('current')
dnsInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsInfoRowStatus.setStatus('current')
dnsInfoAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsInfoAction.setStatus('current')
dnsInfoActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsInfoActionResult.setStatus('current')
dnsInfoDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 69))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsInfoDomainName.setStatus('current')
dnsInfoFirstIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsInfoFirstIPAddress.setStatus('current')
dnsInfoSecondIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsInfoSecondIPAddress.setStatus('current')
dnsInfoThirdIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsInfoThirdIPAddress.setStatus('current')
dnsInfoFourthIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 3, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsInfoFourthIPAddress.setStatus('current')
srvInfoTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4), )
if mibBuilder.loadTexts: srvInfoTable.setStatus('current')
srvInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1), ).setIndexNames((0, "AcGateway", "srvInfoIndex"))
if mibBuilder.loadTexts: srvInfoEntry.setStatus('current')
srvInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: srvInfoIndex.setStatus('current')
srvInfoRecordNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: srvInfoRecordNum.setStatus('current')
srvInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoRowStatus.setStatus('current')
srvInfoAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvInfoAction.setStatus('current')
srvInfoActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvInfoActionResult.setStatus('current')
srvInfoInternalDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoInternalDomainName.setStatus('current')
srvInfoTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("uDP", 0), ("tCP", 1), ("tLS", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoTransportType.setStatus('current')
srvInfoDNSName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoDNSName.setStatus('current')
srvInfoPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoPriority.setStatus('current')
srvInfoWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoWeight.setStatus('current')
srvInfoPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoPort.setStatus('current')
srvInfoDNSName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoDNSName2.setStatus('current')
srvInfoPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoPriority2.setStatus('current')
srvInfoWeight2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoWeight2.setStatus('current')
srvInfoPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoPort2.setStatus('current')
srvInfoDNSName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoDNSName3.setStatus('current')
srvInfoPriority3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoPriority3.setStatus('current')
srvInfoWeight3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoWeight3.setStatus('current')
srvInfoPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 4, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srvInfoPort3.setStatus('current')
forwardOnBusyTrunkDestTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5), )
if mibBuilder.loadTexts: forwardOnBusyTrunkDestTable.setStatus('current')
forwardOnBusyTrunkDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5, 1), ).setIndexNames((0, "AcGateway", "forwardOnBusyTrunkDestIndex"))
if mibBuilder.loadTexts: forwardOnBusyTrunkDestEntry.setStatus('current')
forwardOnBusyTrunkDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)))
if mibBuilder.loadTexts: forwardOnBusyTrunkDestIndex.setStatus('current')
forwardOnBusyTrunkDestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: forwardOnBusyTrunkDestRowStatus.setStatus('current')
forwardOnBusyTrunkDestAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: forwardOnBusyTrunkDestAction.setStatus('current')
forwardOnBusyTrunkDestActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: forwardOnBusyTrunkDestActionResult.setStatus('current')
forwardOnBusyTrunkDestTrunkGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: forwardOnBusyTrunkDestTrunkGroupId.setStatus('current')
forwardOnBusyTrunkDestForwardDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 5, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: forwardOnBusyTrunkDestForwardDestination.setStatus('current')
routingEnableDigitDelivery2IP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routingEnableDigitDelivery2IP.setStatus('current')
routingSourceIPAddressInput = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("sIPContactHeader", 0), ("layer3SourceIP", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routingSourceIPAddressInput.setStatus('current')
altRouteCause = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10))
altRouteCauseIP2TELTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 21), )
if mibBuilder.loadTexts: altRouteCauseIP2TELTable.setStatus('current')
altRouteCauseIP2TELEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 21, 1), ).setIndexNames((0, "AcGateway", "altRouteCauseIP2TELIndex"))
if mibBuilder.loadTexts: altRouteCauseIP2TELEntry.setStatus('current')
altRouteCauseIP2TELIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: altRouteCauseIP2TELIndex.setStatus('current')
altRouteCauseIP2TELRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: altRouteCauseIP2TELRowStatus.setStatus('current')
altRouteCauseIP2TELAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: altRouteCauseIP2TELAction.setStatus('current')
altRouteCauseIP2TELActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: altRouteCauseIP2TELActionResult.setStatus('current')
altRouteCauseIP2TELReleaseCause = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 232))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: altRouteCauseIP2TELReleaseCause.setStatus('current')
altRouteCauseTEL2IPTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 22), )
if mibBuilder.loadTexts: altRouteCauseTEL2IPTable.setStatus('current')
altRouteCauseTEL2IPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 22, 1), ).setIndexNames((0, "AcGateway", "altRouteCauseTEL2IPIndex"))
if mibBuilder.loadTexts: altRouteCauseTEL2IPEntry.setStatus('current')
altRouteCauseTEL2IPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: altRouteCauseTEL2IPIndex.setStatus('current')
altRouteCauseTEL2IPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: altRouteCauseTEL2IPRowStatus.setStatus('current')
altRouteCauseTEL2IPAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: altRouteCauseTEL2IPAction.setStatus('current')
altRouteCauseTEL2IPActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: altRouteCauseTEL2IPActionResult.setStatus('current')
altRouteCauseTEL2IPReleaseCause = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 20, 10, 22, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 700))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: altRouteCauseTEL2IPReleaseCause.setStatus('current')
manipulation = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21))
manipulationRemovePrefix = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationRemovePrefix.setStatus('current')
manipulationAddTrunkGroupAsPrefix = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAddTrunkGroupAsPrefix.setStatus('current')
manipulationAddPortAsPrefix = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAddPortAsPrefix.setStatus('current')
manipulationReplaceEmptyDstWithPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationReplaceEmptyDstWithPortNumber.setStatus('current')
manipulationCIDNotification = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationCIDNotification.setStatus('current')
manipulationUseSourceNumberAsDisplayName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("overwrite", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationUseSourceNumberAsDisplayName.setStatus('current')
manipulationAddNPIandTON2CalledNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAddNPIandTON2CalledNumber.setStatus('current')
manipulationAddNPIandTON2CallingNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAddNPIandTON2CallingNumber.setStatus('current')
manipulationUseDisplayNameAsSourceNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationUseDisplayNameAsSourceNumber.setStatus('current')
manipulationAddPrefixToRedirectNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAddPrefixToRedirectNumber.setStatus('current')
manipulationAddPhoneContextAsPrefix = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAddPhoneContextAsPrefix.setStatus('current')
manipulationBlindTransferAddPrefix = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationBlindTransferAddPrefix.setStatus('current')
manipulationSourceMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fromAndPai", 0), ("fromOnly", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationSourceMode.setStatus('current')
manipulationAddTrunkGroupAsPrefixToSource = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationAddTrunkGroupAsPrefixToSource.setStatus('current')
manipulationSetTel2IpRedirectReason = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 9, 10, 13, 14, 15))).clone(namedValues=NamedValues(("notConfigured", -1), ("unknown", 0), ("bust", 1), ("noReply", 2), ("networkBusy", 3), ("deflection", 4), ("dTEOutOfOrder", 9), ("forwardingDTE", 10), ("transfer", 13), ("pickUp", 14), ("systematicOrUnconditional", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationSetTel2IpRedirectReason.setStatus('current')
manipulationSetIp2TelRedirectReason = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 9, 10, 13, 14, 15))).clone(namedValues=NamedValues(("notConfigured", -1), ("unknown", 0), ("bust", 1), ("noReply", 2), ("networkBusy", 3), ("deflection", 4), ("dTEOutOfOrder", 9), ("forwardingDTE", 10), ("transfer", 13), ("pickUp", 14), ("systematicOrUnconditional", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationSetIp2TelRedirectReason.setStatus('current')
manipulationSetIp2TelRedirectScreeningIndicator = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", -1), ("userProvided", 0), ("userPassed", 1), ("userFailed", 2), ("networkProvided", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: manipulationSetIp2TelRedirectScreeningIndicator.setStatus('current')
dstIP2TELTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21), )
if mibBuilder.loadTexts: dstIP2TELTable.setStatus('current')
dstIP2TELEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1), ).setIndexNames((0, "AcGateway", "dstIP2TELIndex"))
if mibBuilder.loadTexts: dstIP2TELEntry.setStatus('current')
dstIP2TELIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)))
if mibBuilder.loadTexts: dstIP2TELIndex.setStatus('current')
dstIP2TELRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELRowStatus.setStatus('current')
dstIP2TELAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dstIP2TELAction.setStatus('current')
dstIP2TELActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dstIP2TELActionResult.setStatus('current')
dstIP2TELPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELPrefix.setStatus('current')
dstIP2TELNumOfStrippedDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELNumOfStrippedDigits.setStatus('current')
dstIP2TELPrefixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELPrefixToAdd.setStatus('current')
dstIP2TELNumOfDigitsToLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELNumOfDigitsToLeave.setStatus('current')
dstIP2TELNumberPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 9, 255))).clone(namedValues=NamedValues(("unknown", 0), ("e164Public", 1), ("private", 9), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELNumberPlan.setStatus('current')
dstIP2TELNumberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 255))).clone(namedValues=NamedValues(("unknown", 0), ("international-Level2Regional", 1), ("national-Level1Regional", 2), ("networkSpecific-NetworkPISN", 3), ("subscriber-Level0Regional", 4), ("abbreviated", 6), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELNumberType.setStatus('current')
dstIP2TELSourcePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELSourcePrefix.setStatus('current')
dstIP2TELSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELSourceIP.setStatus('current')
dstIP2TELNumOfDigitsToRemFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELNumOfDigitsToRemFromRight.setStatus('current')
dstIP2TELSuffix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELSuffix2Add.setStatus('current')
dstIP2TELIsPresentationRestricted = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstIP2TELIsPresentationRestricted.setStatus('current')
dstTEL2IPTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22), )
if mibBuilder.loadTexts: dstTEL2IPTable.setStatus('current')
dstTEL2IPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1), ).setIndexNames((0, "AcGateway", "dstTEL2IPIndex"))
if mibBuilder.loadTexts: dstTEL2IPEntry.setStatus('current')
dstTEL2IPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 119)))
if mibBuilder.loadTexts: dstTEL2IPIndex.setStatus('current')
dstTEL2IPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPRowStatus.setStatus('current')
dstTEL2IPAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dstTEL2IPAction.setStatus('current')
dstTEL2IPActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dstTEL2IPActionResult.setStatus('current')
dstTEL2IPPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPPrefix.setStatus('current')
dstTEL2IPNumOfStrippedDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPNumOfStrippedDigits.setStatus('current')
dstTEL2IPPrefixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPPrefixToAdd.setStatus('current')
dstTEL2IPNumOfDigitsToLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPNumOfDigitsToLeave.setStatus('current')
dstTEL2IPNumberPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 9, 255))).clone(namedValues=NamedValues(("unknown", 0), ("e164Public", 1), ("private", 9), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPNumberPlan.setStatus('current')
dstTEL2IPNumberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 255))).clone(namedValues=NamedValues(("unknown", 0), ("international-Level2Regional", 1), ("national-Level1Regional", 2), ("networkSpecific-NetworkPISN", 3), ("subscriber-Level0Regional", 4), ("abbreviated", 6), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPNumberType.setStatus('current')
dstTEL2IPSourcePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPSourcePrefix.setStatus('current')
dstTEL2IPNumOfDigitsToRemFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPNumOfDigitsToRemFromRight.setStatus('current')
dstTEL2IPSuffix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPSuffix2Add.setStatus('current')
dstTEL2IPIsPresentationRestricted = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPIsPresentationRestricted.setStatus('current')
dstTEL2IPSourceIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPSourceIPAddress.setStatus('current')
dstTEL2IPSourceTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPSourceTrunkGroupID.setStatus('current')
dstTEL2IPSourceIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 22, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dstTEL2IPSourceIPGroupID.setStatus('current')
srcIP2TELTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23), )
if mibBuilder.loadTexts: srcIP2TELTable.setStatus('current')
srcIP2TELEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1), ).setIndexNames((0, "AcGateway", "srcIP2TELIndex"))
if mibBuilder.loadTexts: srcIP2TELEntry.setStatus('current')
srcIP2TELIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 19)))
if mibBuilder.loadTexts: srcIP2TELIndex.setStatus('current')
srcIP2TELRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELRowStatus.setStatus('current')
srcIP2TELAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srcIP2TELAction.setStatus('current')
srcIP2TELActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srcIP2TELActionResult.setStatus('current')
srcIP2TELPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELPrefix.setStatus('current')
srcIP2TELNumOfStrippedDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELNumOfStrippedDigits.setStatus('current')
srcIP2TELPrefixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELPrefixToAdd.setStatus('current')
srcIP2TELNumOfDigitsToLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELNumOfDigitsToLeave.setStatus('current')
srcIP2TELNumberPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 9, 255))).clone(namedValues=NamedValues(("unknown", 0), ("e164Public", 1), ("private", 9), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELNumberPlan.setStatus('current')
srcIP2TELNumberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 255))).clone(namedValues=NamedValues(("unknown", 0), ("international-Level2Regional", 1), ("national-Level1Regional", 2), ("networkSpecific-NetworkPISN", 3), ("subscriber-Level0Regional", 4), ("abbreviated", 6), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELNumberType.setStatus('current')
srcIP2TELDestPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELDestPrefix.setStatus('current')
srcIP2TELPresentation = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("notBlocked", 0), ("blocked", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELPresentation.setStatus('current')
srcIP2TELNumOfDigitsToRemFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELNumOfDigitsToRemFromRight.setStatus('current')
srcIP2TELSuffix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELSuffix2Add.setStatus('current')
srcIP2TELSourceIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 23, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcIP2TELSourceIPAddress.setStatus('current')
srcTEL2IPTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24), )
if mibBuilder.loadTexts: srcTEL2IPTable.setStatus('current')
srcTEL2IPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1), ).setIndexNames((0, "AcGateway", "srcTEL2IPIndex"))
if mibBuilder.loadTexts: srcTEL2IPEntry.setStatus('current')
srcTEL2IPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 119)))
if mibBuilder.loadTexts: srcTEL2IPIndex.setStatus('current')
srcTEL2IPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPRowStatus.setStatus('current')
srcTEL2IPAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srcTEL2IPAction.setStatus('current')
srcTEL2IPActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srcTEL2IPActionResult.setStatus('current')
srcTEL2IPPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPPrefix.setStatus('current')
srcTEL2IPNumOfStrippedDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPNumOfStrippedDigits.setStatus('current')
srcTEL2IPPrefixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPPrefixToAdd.setStatus('current')
srcTEL2IPNumOfDigitsToLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPNumOfDigitsToLeave.setStatus('current')
srcTEL2IPNumberPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 9, 255))).clone(namedValues=NamedValues(("unknown", 0), ("e164Public", 1), ("private", 9), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPNumberPlan.setStatus('current')
srcTEL2IPNumberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 255))).clone(namedValues=NamedValues(("unknown", 0), ("international-Level2Regional", 1), ("national-Level1Regional", 2), ("networkSpecific-NetworkPISN", 3), ("subscriber-Level0Regional", 4), ("abbreviated", 6), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPNumberType.setStatus('current')
srcTEL2IPDestPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPDestPrefix.setStatus('current')
srcTEL2IPPresentation = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("notBlocked", 0), ("blocked", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPPresentation.setStatus('current')
srcTEL2IPNumOfDigitsToRemFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPNumOfDigitsToRemFromRight.setStatus('current')
srcTEL2IPSuffix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPSuffix2Add.setStatus('current')
srcTEL2IPSourceIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPSourceIPAddress.setStatus('current')
srcTEL2IPSourceTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPSourceTrunkGroupID.setStatus('current')
srcTEL2IPSourceIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 24, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srcTEL2IPSourceIPGroupID.setStatus('current')
phoneContextTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25), )
if mibBuilder.loadTexts: phoneContextTable.setStatus('current')
phoneContextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1), ).setIndexNames((0, "AcGateway", "phoneContextIndex"))
if mibBuilder.loadTexts: phoneContextEntry.setStatus('current')
phoneContextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 19)))
if mibBuilder.loadTexts: phoneContextIndex.setStatus('current')
phoneContextRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: phoneContextRowStatus.setStatus('current')
phoneContextAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phoneContextAction.setStatus('current')
phoneContextActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phoneContextActionResult.setStatus('current')
phoneContextNPI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 9))).clone(namedValues=NamedValues(("notConfigured", -1), ("unknown", 0), ("e164Public", 1), ("private", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: phoneContextNPI.setStatus('current')
phoneContextTON = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("notConfigured", -1), ("unknown", 0), ("international-Level2Regional", 1), ("national-Level1Regional", 2), ("networkSpecific-NetworkPISN", 3), ("subscriber-Level0Regional", 4), ("abbreviated", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: phoneContextTON.setStatus('current')
phoneContextPhoneContext = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 25, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: phoneContextPhoneContext.setStatus('current')
redirectNumberMapIp2TelTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26), )
if mibBuilder.loadTexts: redirectNumberMapIp2TelTable.setStatus('current')
redirectNumberMapIp2TelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1), ).setIndexNames((0, "AcGateway", "redirectNumberMapIp2TelIndex"))
if mibBuilder.loadTexts: redirectNumberMapIp2TelEntry.setStatus('current')
redirectNumberMapIp2TelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 19)))
if mibBuilder.loadTexts: redirectNumberMapIp2TelIndex.setStatus('current')
redirectNumberMapIp2TelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelRowStatus.setStatus('current')
redirectNumberMapIp2TelAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectNumberMapIp2TelAction.setStatus('current')
redirectNumberMapIp2TelActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectNumberMapIp2TelActionResult.setStatus('current')
redirectNumberMapIp2TelDestinationPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelDestinationPrefix.setStatus('current')
redirectNumberMapIp2TelRedirectPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelRedirectPrefix.setStatus('current')
redirectNumberMapIp2TelSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelSourceAddress.setStatus('current')
redirectNumberMapIp2TelNumberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("notConfigured", 255), ("unknown", 0), ("international", 1), ("national", 2), ("networkSpecific", 3), ("subscriber", 4), ("abbreviated", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelNumberType.setStatus('current')
redirectNumberMapIp2TelNumberPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 9))).clone(namedValues=NamedValues(("notConfigured", 255), ("unknown", 0), ("e164Public", 1), ("private", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelNumberPlan.setStatus('current')
redirectNumberMapIp2TelRemoveFromLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelRemoveFromLeft.setStatus('current')
redirectNumberMapIp2TelRemoveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelRemoveFromRight.setStatus('current')
redirectNumberMapIp2TelLeaveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelLeaveFromRight.setStatus('current')
redirectNumberMapIp2TelPrefixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelPrefixToAdd.setStatus('current')
redirectNumberMapIp2TelSuffixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelSuffixToAdd.setStatus('current')
redirectNumberMapIp2TelIsPresentationRestricted = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1))).clone(namedValues=NamedValues(("notConfigured", 255), ("allowed", 0), ("restricted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelIsPresentationRestricted.setStatus('current')
redirectNumberMapIp2TelSrcTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelSrcTrunkGroupID.setStatus('current')
redirectNumberMapIp2TelSrcIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 26, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapIp2TelSrcIPGroupID.setStatus('current')
redirectNumberMapTel2IpTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27), )
if mibBuilder.loadTexts: redirectNumberMapTel2IpTable.setStatus('current')
redirectNumberMapTel2IpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1), ).setIndexNames((0, "AcGateway", "redirectNumberMapTel2IpIndex"))
if mibBuilder.loadTexts: redirectNumberMapTel2IpEntry.setStatus('current')
redirectNumberMapTel2IpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 19)))
if mibBuilder.loadTexts: redirectNumberMapTel2IpIndex.setStatus('current')
redirectNumberMapTel2IpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpRowStatus.setStatus('current')
redirectNumberMapTel2IpAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectNumberMapTel2IpAction.setStatus('current')
redirectNumberMapTel2IpActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectNumberMapTel2IpActionResult.setStatus('current')
redirectNumberMapTel2IpDestinationPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpDestinationPrefix.setStatus('current')
redirectNumberMapTel2IpRedirectPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpRedirectPrefix.setStatus('current')
redirectNumberMapTel2IpSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpSourceAddress.setStatus('current')
redirectNumberMapTel2IpNumberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpNumberType.setStatus('current')
redirectNumberMapTel2IpNumberPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpNumberPlan.setStatus('current')
redirectNumberMapTel2IpRemoveFromLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpRemoveFromLeft.setStatus('current')
redirectNumberMapTel2IpRemoveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 211))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpRemoveFromRight.setStatus('current')
redirectNumberMapTel2IpLeaveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpLeaveFromRight.setStatus('current')
redirectNumberMapTel2IpPrefixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpPrefixToAdd.setStatus('current')
redirectNumberMapTel2IpSuffixToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpSuffixToAdd.setStatus('current')
redirectNumberMapTel2IpIsPresentationRestricted = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1))).clone(namedValues=NamedValues(("notConfigured", 255), ("allowed", 0), ("restricted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpIsPresentationRestricted.setStatus('current')
redirectNumberMapTel2IpSrcTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpSrcTrunkGroupID.setStatus('current')
redirectNumberMapTel2IpSrcIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 21, 27, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: redirectNumberMapTel2IpSrcIPGroupID.setStatus('current')
connectivityQos = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 22))
connectivityQosMaxAllowedPL = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 22, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectivityQosMaxAllowedPL.setStatus('current')
connectivityQosMaxAllowedDelay = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 22, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectivityQosMaxAllowedDelay.setStatus('current')
connectivityQosEffectivePeriod = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 22, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectivityQosEffectivePeriod.setStatus('current')
connectivityQosSamplesToAvarage = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 2, 22, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectivityQosSamplesToAvarage.setStatus('current')
digitalGW = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3))
digitalGWBChannelNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("any", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWBChannelNegotiation.setStatus('current')
digitalGWSwapRedirectNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWSwapRedirectNumber.setStatus('current')
digitalGWEnableTransferCap = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWEnableTransferCap.setStatus('current')
digitalGWR2Category = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWR2Category.setStatus('current')
digitalGWISDNRxOverlap = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWISDNRxOverlap.setStatus('obsolete')
digitalGWCASSendHookFlash = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWCASSendHookFlash.setStatus('current')
digitalGWISDNTransferCapability = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("doNotOverwrite", -1), ("modem", 0), ("voice", 1), ("data", 2), ("audio", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWISDNTransferCapability.setStatus('obsolete')
digitalGWEnableTDMOverIp = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWEnableTDMOverIp.setStatus('current')
digitalGWTransparentCoderOnDataCall = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWTransparentCoderOnDataCall.setStatus('current')
digitalGWSupportRedirectInFacility = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWSupportRedirectInFacility.setStatus('current')
digitalGWPIForDisconnectMsg = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWPIForDisconnectMsg.setStatus('obsolete')
digitalGWConnectOnProgressInd = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWConnectOnProgressInd.setStatus('current')
digitalGWLocalISDNRBSource = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pbx", 0), ("gateway", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWLocalISDNRBSource.setStatus('obsolete')
digitalGWEnableUuiTel2Ip = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWEnableUuiTel2Ip.setStatus('current')
digitalGWEnableUuiIp2Tel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWEnableUuiIp2Tel.setStatus('current')
digitalGWSendISDNTransferOnConnect = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWSendISDNTransferOnConnect.setStatus('current')
digitalGWEnableISDNTunnelingTel2Ip = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("usingHeader", 1), ("usingBody", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWEnableISDNTunnelingTel2Ip.setStatus('current')
digitalGWEnableISDNTunnelingIp2Tel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("usingHeader", 1), ("usingBody", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWEnableISDNTunnelingIp2Tel.setStatus('current')
digitalGWEnableCallingPartyCategory = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWEnableCallingPartyCategory.setStatus('current')
digitalGWPlayRBTOnISDNTransfer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWPlayRBTOnISDNTransfer.setStatus('current')
iSDNRxOverlapTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 21), )
if mibBuilder.loadTexts: iSDNRxOverlapTable.setStatus('current')
iSDNRxOverlapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 21, 1), ).setIndexNames((0, "AcGateway", "iSDNRxOverlapIndex"))
if mibBuilder.loadTexts: iSDNRxOverlapEntry.setStatus('current')
iSDNRxOverlapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: iSDNRxOverlapIndex.setStatus('current')
iSDNRxOverlapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("localReceiving", 1), ("throughSIP", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iSDNRxOverlapEnable.setStatus('current')
trunkTransferTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 22), )
if mibBuilder.loadTexts: trunkTransferTable.setStatus('current')
trunkTransferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 22, 1), ).setIndexNames((0, "AcGateway", "trunkTransferIndex"))
if mibBuilder.loadTexts: trunkTransferEntry.setStatus('current')
trunkTransferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: trunkTransferIndex.setStatus('current')
trunkTransferMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("casNFA", 1), ("iSDN", 2), ("casNormal", 3), ("qSIGSingleStep", 4), ("qSIGPathReplacement", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trunkTransferMode.setStatus('current')
progressIndicatorToISDNTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 23), )
if mibBuilder.loadTexts: progressIndicatorToISDNTable.setStatus('current')
progressIndicatorToISDNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 23, 1), ).setIndexNames((0, "AcGateway", "progressIndicatorToISDNIndex"))
if mibBuilder.loadTexts: progressIndicatorToISDNEntry.setStatus('current')
progressIndicatorToISDNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 23, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: progressIndicatorToISDNIndex.setStatus('current')
progressIndicatorToISDNValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 8))).clone(namedValues=NamedValues(("notSet", -1), ("localRB", 0), ("remoteRB1", 1), ("remoteRB8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: progressIndicatorToISDNValue.setStatus('current')
playRBToneToTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 24), )
if mibBuilder.loadTexts: playRBToneToTrunkTable.setStatus('current')
playRBToneToTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 24, 1), ).setIndexNames((0, "AcGateway", "playRBToneToTrunkIndex"))
if mibBuilder.loadTexts: playRBToneToTrunkEntry.setStatus('current')
playRBToneToTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 24, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: playRBToneToTrunkIndex.setStatus('current')
playRBToneToTrunkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", -1), ("doNotPlay", 0), ("playOnLocal", 1), ("preferIp", 2), ("playLocalUntilRemoteMediaArrives", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: playRBToneToTrunkValue.setStatus('current')
iSDNTransferCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 25), )
if mibBuilder.loadTexts: iSDNTransferCapabilityTable.setStatus('current')
iSDNTransferCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 25, 1), ).setIndexNames((0, "AcGateway", "iSDNTransferCapabilityIndex"))
if mibBuilder.loadTexts: iSDNTransferCapabilityEntry.setStatus('current')
iSDNTransferCapabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 25, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: iSDNTransferCapabilityIndex.setStatus('current')
iSDNTransferCapabilityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("doNotOverwrite", -1), ("modem", 0), ("voice", 1), ("data", 2), ("audio", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iSDNTransferCapabilityValue.setStatus('current')
localISDNRBSourceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 26), )
if mibBuilder.loadTexts: localISDNRBSourceTable.setStatus('current')
localISDNRBSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 26, 1), ).setIndexNames((0, "AcGateway", "localISDNRBSourceIndex"))
if mibBuilder.loadTexts: localISDNRBSourceEntry.setStatus('current')
localISDNRBSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 26, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: localISDNRBSourceIndex.setStatus('current')
localISDNRBSourceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pbx", 0), ("gateway", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localISDNRBSourceValue.setStatus('current')
pIForDisconnectMsgTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 27), )
if mibBuilder.loadTexts: pIForDisconnectMsgTable.setStatus('current')
pIForDisconnectMsgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 27, 1), ).setIndexNames((0, "AcGateway", "pIForDisconnectMsgIndex"))
if mibBuilder.loadTexts: pIForDisconnectMsgEntry.setStatus('current')
pIForDisconnectMsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 27, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: pIForDisconnectMsgIndex.setStatus('current')
pIForDisconnectMsgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pIForDisconnectMsgValue.setStatus('current')
pSTNAlertTimeoutTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 28), )
if mibBuilder.loadTexts: pSTNAlertTimeoutTable.setStatus('current')
pSTNAlertTimeoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 28, 1), ).setIndexNames((0, "AcGateway", "pSTNAlertTimeoutIndex"))
if mibBuilder.loadTexts: pSTNAlertTimeoutEntry.setStatus('current')
pSTNAlertTimeoutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 28, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: pSTNAlertTimeoutIndex.setStatus('current')
pSTNAlertTimeoutValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 28, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pSTNAlertTimeoutValue.setStatus('current')
iE = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 20))
iEAddIEInSetup = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 20, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iEAddIEInSetup.setStatus('current')
iESendIEOnTG = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 20, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iESendIEOnTG.setStatus('current')
mlpp = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29))
mlppCallPriorityMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("mLPP", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppCallPriorityMode.setStatus('current')
mlppDefaultNamespace = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dSN", 1), ("dOD", 2), ("dRSN", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppDefaultNamespace.setStatus('current')
mlppDefaultCallPriority = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppDefaultCallPriority.setStatus('current')
mlppDiffServ = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppDiffServ.setStatus('current')
mlppPreemptionToneDuration = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppPreemptionToneDuration.setStatus('current')
mlppDefaultServiceDomain = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppDefaultServiceDomain.setStatus('current')
mlppNormalizedServiceDomain = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppNormalizedServiceDomain.setStatus('current')
mlppRoutineRTPDSCP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppRoutineRTPDSCP.setStatus('current')
mlppPriorityRTPDSCP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppPriorityRTPDSCP.setStatus('current')
mlppImmediateRTPDSCP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppImmediateRTPDSCP.setStatus('current')
mlppFlashRTPDSCP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppFlashRTPDSCP.setStatus('current')
mlppFlashOverRTPDSCP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppFlashOverRTPDSCP.setStatus('current')
mlppFlashOverOverRTPDSCP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppFlashOverOverRTPDSCP.setStatus('current')
mlppE911Behavior = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 3, 29, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standardMode", 0), ("routineMode", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlppE911Behavior.setStatus('current')
analogGW = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4))
analogGWEnableReversalPolarity = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogGWEnableReversalPolarity.setStatus('current')
analogGWEnableCurrentDisconnect = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogGWEnableCurrentDisconnect.setStatus('current')
analogGWRegretTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogGWRegretTime.setStatus('current')
analogGWHotLineToneDuration = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogGWHotLineToneDuration.setStatus('current')
enableCallWaitingPerPortTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21), )
if mibBuilder.loadTexts: enableCallWaitingPerPortTable.setStatus('current')
enableCallWaitingPerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1), ).setIndexNames((0, "AcGateway", "enableCallWaitingPerPortIndex"))
if mibBuilder.loadTexts: enableCallWaitingPerPortEntry.setStatus('current')
enableCallWaitingPerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableCallWaitingPerPortIndex.setStatus('current')
enableCallWaitingPerPortIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableCallWaitingPerPortIsUsed.setStatus('current')
enableCallWaitingPerPortModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableCallWaitingPerPortModule.setStatus('current')
enableCallWaitingPerPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableCallWaitingPerPortPort.setStatus('current')
enableCallWaitingPerPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableCallWaitingPerPortAction.setStatus('current')
enableCallWaitingPerPortActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableCallWaitingPerPortActionResult.setStatus('current')
enableCallWaitingPerPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("valueNotSet", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableCallWaitingPerPortEnable.setStatus('current')
fxs = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10))
fxsCutThrough = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxsCutThrough.setStatus('current')
fxsMeteringMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("routingTable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxsMeteringMode.setStatus('current')
fxsFXSOOSBehavior = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4))).clone(namedValues=NamedValues(("none", 0), ("reorderTone", 1), ("polarityReversal", 2), ("currentDisconnect", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxsFXSOOSBehavior.setStatus('current')
fxsSetOOSOnRegistrationFail = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxsSetOOSOnRegistrationFail.setStatus('current')
chargeCodesTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21), )
if mibBuilder.loadTexts: chargeCodesTable.setStatus('current')
chargeCodesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1), ).setIndexNames((0, "AcGateway", "chargeCodesIndex"))
if mibBuilder.loadTexts: chargeCodesEntry.setStatus('current')
chargeCodesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 24)))
if mibBuilder.loadTexts: chargeCodesIndex.setStatus('current')
chargeCodesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesRowStatus.setStatus('current')
chargeCodesAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chargeCodesAction.setStatus('current')
chargeCodesActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chargeCodesActionResult.setStatus('current')
chargeCodesPeriod1EndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod1EndTime.setStatus('current')
chargeCodesPeriod1PulseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod1PulseInterval.setStatus('current')
chargeCodesPeriod1PulsesOnAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod1PulsesOnAnswer.setStatus('current')
chargeCodesPeriod2EndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod2EndTime.setStatus('current')
chargeCodesPeriod2PulseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod2PulseInterval.setStatus('current')
chargeCodesPeriod2PulsesOnAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod2PulsesOnAnswer.setStatus('current')
chargeCodesPeriod3EndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod3EndTime.setStatus('current')
chargeCodesPeriod3PulseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod3PulseInterval.setStatus('current')
chargeCodesPeriod3PulsesOnAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod3PulsesOnAnswer.setStatus('current')
chargeCodesPeriod4EndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod4EndTime.setStatus('current')
chargeCodesPeriod4PulseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod4PulseInterval.setStatus('current')
chargeCodesPeriod4PulsesOnAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 21, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: chargeCodesPeriod4PulsesOnAnswer.setStatus('current')
toneIndexTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22), )
if mibBuilder.loadTexts: toneIndexTable.setStatus('current')
toneIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1), ).setIndexNames((0, "AcGateway", "toneIndexIndex"))
if mibBuilder.loadTexts: toneIndexEntry.setStatus('current')
toneIndexIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23)))
if mibBuilder.loadTexts: toneIndexIndex.setStatus('current')
toneIndexRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: toneIndexRowStatus.setStatus('current')
toneIndexAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: toneIndexAction.setStatus('current')
toneIndexActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: toneIndexActionResult.setStatus('current')
toneIndexFXSPortFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: toneIndexFXSPortFirst.setStatus('current')
toneIndexFXSPortLast = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: toneIndexFXSPortLast.setStatus('current')
toneIndexSourcePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: toneIndexSourcePrefix.setStatus('current')
toneIndexPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 10, 22, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: toneIndexPriorityIndex.setStatus('current')
fxo = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11))
fxoIsTwoStageDial = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oneStage", 0), ("twoStages", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoIsTwoStageDial.setStatus('current')
fxoWaitForDialTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoWaitForDialTone.setStatus('current')
fxoWaitForDialTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoWaitForDialTime.setStatus('current')
fxoBetweenRingTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoBetweenRingTime.setStatus('current')
fxoEnableVoiceDetection = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoEnableVoiceDetection.setStatus('current')
fxoRingsBeforeCallerID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoRingsBeforeCallerID.setStatus('current')
fxoGuardTimeBetweenCalls = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoGuardTimeBetweenCalls.setStatus('current')
fxoAutoDialPlayBusyTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 11, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fxoAutoDialPlayBusyTone.setStatus('current')
dialing = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12))
dialingMaxDigits = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialingMaxDigits.setStatus('current')
dialingTimeBetweenDigits = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialingTimeBetweenDigits.setStatus('current')
dialingIsSpecialDigits = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialingIsSpecialDigits.setStatus('current')
dialingDigitMapping = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 152))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialingDigitMapping.setStatus('current')
dialingEnableDigitDelivery = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialingEnableDigitDelivery.setStatus('current')
dialingDialPlanIndex = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialingDialPlanIndex.setStatus('current')
autoDialTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21), )
if mibBuilder.loadTexts: autoDialTable.setStatus('current')
autoDialEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1), ).setIndexNames((0, "AcGateway", "autoDialIndex"))
if mibBuilder.loadTexts: autoDialEntry.setStatus('current')
autoDialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoDialIndex.setStatus('current')
autoDialIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoDialIsUsed.setStatus('current')
autoDialAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoDialAction.setStatus('current')
autoDialActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoDialActionResult.setStatus('current')
autoDialDestPhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoDialDestPhoneNumber.setStatus('current')
autoDialType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("autoDial", 1), ("delayHotLine", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoDialType.setStatus('current')
autoDialModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoDialModule.setStatus('current')
autoDialPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 12, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoDialPort.setStatus('current')
callerID = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13))
callerIDEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callerIDEnable.setStatus('current')
callerDisplayTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21), )
if mibBuilder.loadTexts: callerDisplayTable.setStatus('current')
callerDisplayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1), ).setIndexNames((0, "AcGateway", "callerDisplayIndex"))
if mibBuilder.loadTexts: callerDisplayEntry.setStatus('current')
callerDisplayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerDisplayIndex.setStatus('current')
callerDisplayIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callerDisplayIsUsed.setStatus('current')
callerDisplayAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerDisplayAction.setStatus('current')
callerDisplayActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerDisplayActionResult.setStatus('current')
callerDisplayCallerDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callerDisplayCallerDisplay.setStatus('current')
callerDisplayRestriction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notBlocked", 0), ("blocked", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callerDisplayRestriction.setStatus('current')
callerDisplayModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerDisplayModule.setStatus('current')
callerDisplayPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerDisplayPort.setStatus('current')
callerIDperPortTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22), )
if mibBuilder.loadTexts: callerIDperPortTable.setStatus('current')
callerIDperPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1), ).setIndexNames((0, "AcGateway", "callerIDperPortIndex"))
if mibBuilder.loadTexts: callerIDperPortEntry.setStatus('current')
callerIDperPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerIDperPortIndex.setStatus('current')
callerIDperPortIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callerIDperPortIsUsed.setStatus('current')
callerIDperPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerIDperPortAction.setStatus('current')
callerIDperPortActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerIDperPortActionResult.setStatus('current')
callerIDperPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("valueNotSet", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callerIDperPortEnable.setStatus('current')
callerIDperPortModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerIDperPortModule.setStatus('current')
callerIDperPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 13, 22, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: callerIDperPortPort.setStatus('current')
keypadFeatures = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14))
keypadFeaturesCFUncond = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCFUncond.setStatus('current')
keypadFeaturesCFDeact = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCFDeact.setStatus('current')
keypadFeaturesCFNoAnswer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCFNoAnswer.setStatus('current')
keypadFeaturesCFBusy = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCFBusy.setStatus('current')
keypadFeaturesCLIR = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCLIR.setStatus('current')
keypadFeaturesCLIRDeact = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCLIRDeact.setStatus('current')
keypadFeaturesHotLine = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesHotLine.setStatus('current')
keypadFeaturesHotLineDeact = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesHotLineDeact.setStatus('current')
keypadFeaturesCFBusyOrNoAnswer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCFBusyOrNoAnswer.setStatus('current')
keypadFeaturesCFDoNotDisturb = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesCFDoNotDisturb.setStatus('current')
keypadFeaturesBlindTransfer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesBlindTransfer.setStatus('current')
keypadFeaturesKeypadFeaturesCW = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesKeypadFeaturesCW.setStatus('current')
keypadFeaturesKeypadFeaturesCWDeact = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesKeypadFeaturesCWDeact.setStatus('current')
keypadFeaturesRejectAnonymousCall = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesRejectAnonymousCall.setStatus('current')
keypadFeaturesRejectAnonymousCallDeact = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 14, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keypadFeaturesRejectAnonymousCallDeact.setStatus('current')
portName = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15))
namesTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21), )
if mibBuilder.loadTexts: namesTable.setStatus('current')
namesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1), ).setIndexNames((0, "AcGateway", "namesIndex"))
if mibBuilder.loadTexts: namesEntry.setStatus('current')
namesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: namesIndex.setStatus('current')
namesIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: namesIsUsed.setStatus('current')
namesAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: namesAction.setStatus('current')
namesActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: namesActionResult.setStatus('current')
namesPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: namesPortName.setStatus('current')
namesModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: namesModule.setStatus('current')
namesPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 15, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: namesPort.setStatus('current')
dID = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16))
dIDEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dIDEnable.setStatus('current')
dIDEnableWink = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dIDEnableWink.setStatus('current')
dIDDelayBeforeDidWink = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dIDDelayBeforeDidWink.setStatus('current')
enableDidPortTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21), )
if mibBuilder.loadTexts: enableDidPortTable.setStatus('current')
enableDidPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1), ).setIndexNames((0, "AcGateway", "enableDidPortIndex"))
if mibBuilder.loadTexts: enableDidPortEntry.setStatus('current')
enableDidPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableDidPortIndex.setStatus('current')
enableDidPortIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableDidPortIsUsed.setStatus('current')
enableDidPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableDidPortAction.setStatus('current')
enableDidPortActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableDidPortActionResult.setStatus('current')
enableDidPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableDidPortEnable.setStatus('current')
enableDidPortModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableDidPortModule.setStatus('current')
enableDidPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 4, 16, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enableDidPortPort.setStatus('current')
mediaGW = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5))
mediaGWMediaChannels = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2016))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGWMediaChannels.setStatus('current')
conference = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10))
conferenceID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conferenceID.setStatus('current')
conferenceBipOnConference = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conferenceBipOnConference.setStatus('current')
conferenceEnableDTMFReporting = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conferenceEnableDTMFReporting.setStatus('current')
conferenceEnableDTMFClamping = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conferenceEnableDTMFClamping.setStatus('current')
conference3WayMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("audioCodesMediaServer", 0), ("noneAudioCodesMediaServer", 1), ("onBoard", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conference3WayMode.setStatus('current')
conferenceMaxInBoardCalls = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conferenceMaxInBoardCalls.setStatus('current')
acTWCnonAllocateablePortsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 21), )
if mibBuilder.loadTexts: acTWCnonAllocateablePortsTable.setStatus('current')
acTWCnonAllocateablePortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 21, 1), ).setIndexNames((0, "AcGateway", "acTWCnonAllocateablePortsIndex"))
if mibBuilder.loadTexts: acTWCnonAllocateablePortsEntry.setStatus('current')
acTWCnonAllocateablePortsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: acTWCnonAllocateablePortsIndex.setStatus('current')
acTWCnonAllocateablePortsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 10, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acTWCnonAllocateablePortsNumber.setStatus('current')
announcement = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11))
announcementID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: announcementID.setStatus('current')
announcementNumOfEndPoints = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: announcementNumOfEndPoints.setStatus('current')
announcementToneID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: announcementToneID.setStatus('current')
streaming = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10))
streamingID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingID.setStatus('current')
streamingNumOfEndPoints = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingNumOfEndPoints.setStatus('current')
streamingRecordScriptPath = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingRecordScriptPath.setStatus('obsolete')
streamingMediaID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingMediaID.setStatus('current')
streamingStopRecordingOnNoSpeachTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 10000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingStopRecordingOnNoSpeachTimeout.setStatus('current')
streamingPlayFromID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingPlayFromID.setStatus('current')
streamingRecordToID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingRecordToID.setStatus('current')
streamingNetAnnAnncID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingNetAnnAnncID.setStatus('current')
streamingMscmlID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingMscmlID.setStatus('current')
streamingMonitorID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 11, 10, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamingMonitorID.setStatus('current')
vxml = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 12))
vxmlID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 12, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxmlID.setStatus('current')
vxmlNumOfEndPoints = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 12, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxmlNumOfEndPoints.setStatus('current')
calea = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 13))
caleaInterceptionDirection = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("outgoing", 0), ("incoming", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: caleaInterceptionDirection.setStatus('current')
transcoding = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 14))
transcodingID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 5, 14, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: transcodingID.setStatus('current')
coders = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6))
codersTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1), )
if mibBuilder.loadTexts: codersTable.setStatus('current')
codersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1), ).setIndexNames((0, "AcGateway", "codersIndex"))
if mibBuilder.loadTexts: codersEntry.setStatus('current')
codersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 24)))
if mibBuilder.loadTexts: codersIndex.setStatus('deprecated')
codersRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersRowStatus.setStatus('deprecated')
codersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codersAction.setStatus('deprecated')
codersActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codersActionResult.setStatus('deprecated')
codersName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 99))).clone(namedValues=NamedValues(("g7231", 0), ("g711Alaw64k", 1), ("g711Ulaw64k", 2), ("g729", 3), ("g726", 5), ("g726r16", 6), ("g726r24", 7), ("g726r32", 8), ("g726r40", 9), ("netCoder8", 10), ("netCoder6-4", 11), ("netCoder7-2", 12), ("netCoder8-8", 13), ("gWTransparent", 14), ("g729AnnexB", 17), ("eVRC", 22), ("amr", 23), ("gsm-fr", 24), ("gsm-ms", 25), ("gsmEfr", 26), ("iLBC", 27), ("qCELP", 28), ("t38", 29), ("g711Alaw64k-VBD", 30), ("g711Ulaw64k-VBD", 31), ("eVRC-B", 32), ("g722", 33), ("aMR-WB", 34), ("eg711Alaw", 35), ("eg711Ulaw", 36), ("g7291", 37), ("v1501mr", 38), ("ms-rta-nb", 39), ("invalideCoder", 99)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersName.setStatus('deprecated')
codersInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersInterval.setStatus('deprecated')
codersRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersRate.setStatus('deprecated')
codersPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersPayloadType.setStatus('deprecated')
codersSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("enableAdaptations", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersSilenceSuppression.setStatus('deprecated')
codersGroup0Table = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2), )
if mibBuilder.loadTexts: codersGroup0Table.setStatus('current')
codersGroup0Entry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1), ).setIndexNames((0, "AcGateway", "codersGroup0Index"))
if mibBuilder.loadTexts: codersGroup0Entry.setStatus('current')
codersGroup0Index = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: codersGroup0Index.setStatus('current')
codersGroup0RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup0RowStatus.setStatus('current')
codersGroup0Action = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup0Action.setStatus('current')
codersGroup0ActionRes = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("succeeded", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codersGroup0ActionRes.setStatus('current')
codersGroup0Name = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 99))).clone(namedValues=NamedValues(("g7231", 0), ("g711Alaw64k", 1), ("g711Ulaw64k", 2), ("g729", 3), ("g726", 5), ("g726r16", 6), ("g726r24", 7), ("g726r32", 8), ("g726r40", 9), ("netCoder8", 10), ("netCoder6-4", 11), ("netCoder7-2", 12), ("netCoder8-8", 13), ("gWTransparent", 14), ("g729AnnexB", 17), ("eVRC", 22), ("amr", 23), ("gsm-fr", 24), ("gsm-ms", 25), ("gsmEfr", 26), ("iLBC", 27), ("qCELP", 28), ("t38", 29), ("g711Alaw64k-VBD", 30), ("g711Ulaw64k-VBD", 31), ("eVRC-B", 32), ("g722", 33), ("aMR-WB", 34), ("eg711Alaw", 35), ("eg711Ulaw", 36), ("g7291", 37), ("v1501mr", 38), ("ms-rta-nb", 39), ("invalideCoder", 99)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup0Name.setStatus('current')
codersGroup0PacketizationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup0PacketizationTime.setStatus('current')
codersGroup0Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup0Rate.setStatus('current')
codersGroup0PayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup0PayloadType.setStatus('current')
codersGroup0SilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("enableAdaptations", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup0SilenceSuppression.setStatus('current')
codersGroup1Table = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3), )
if mibBuilder.loadTexts: codersGroup1Table.setStatus('current')
codersGroup1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1), ).setIndexNames((0, "AcGateway", "codersGroup1Index"))
if mibBuilder.loadTexts: codersGroup1Entry.setStatus('current')
codersGroup1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: codersGroup1Index.setStatus('current')
codersGroup1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup1RowStatus.setStatus('current')
codersGroup1Action = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup1Action.setStatus('current')
codersGroup1ActionRes = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("succeeded", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codersGroup1ActionRes.setStatus('current')
codersGroup1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 99))).clone(namedValues=NamedValues(("g7231", 0), ("g711Alaw64k", 1), ("g711Ulaw64k", 2), ("g729", 3), ("g726", 5), ("g726r16", 6), ("g726r24", 7), ("g726r32", 8), ("g726r40", 9), ("netCoder8", 10), ("netCoder6-4", 11), ("netCoder7-2", 12), ("netCoder8-8", 13), ("gWTransparent", 14), ("g729AnnexB", 17), ("eVRC", 22), ("amr", 23), ("gsm-fr", 24), ("gsm-ms", 25), ("gsmEfr", 26), ("iLBC", 27), ("qCELP", 28), ("t38", 29), ("g711Alaw64k-VBD", 30), ("g711Ulaw64k-VBD", 31), ("eVRC-B", 32), ("g722", 33), ("aMR-WB", 34), ("eg711Alaw", 35), ("eg711Ulaw", 36), ("g7291", 37), ("v1501mr", 38), ("ms-rta-nb", 39), ("invalideCoder", 99)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup1Name.setStatus('current')
codersGroup1PacketizationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup1PacketizationTime.setStatus('current')
codersGroup1Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup1Rate.setStatus('current')
codersGroup1PayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup1PayloadType.setStatus('current')
codersGroup1SilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("enableAdaptations", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup1SilenceSuppression.setStatus('current')
codersGroup2Table = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4), )
if mibBuilder.loadTexts: codersGroup2Table.setStatus('current')
codersGroup2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1), ).setIndexNames((0, "AcGateway", "codersGroup2Index"))
if mibBuilder.loadTexts: codersGroup2Entry.setStatus('current')
codersGroup2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: codersGroup2Index.setStatus('current')
codersGroup2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup2RowStatus.setStatus('current')
codersGroup2Action = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup2Action.setStatus('current')
codersGroup2ActionRes = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("succeeded", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codersGroup2ActionRes.setStatus('current')
codersGroup2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 99))).clone(namedValues=NamedValues(("g7231", 0), ("g711Alaw64k", 1), ("g711Ulaw64k", 2), ("g729", 3), ("g726", 5), ("g726r16", 6), ("g726r24", 7), ("g726r32", 8), ("g726r40", 9), ("netCoder8", 10), ("netCoder6-4", 11), ("netCoder7-2", 12), ("netCoder8-8", 13), ("gWTransparent", 14), ("g729AnnexB", 17), ("eVRC", 22), ("amr", 23), ("gsm-fr", 24), ("gsm-ms", 25), ("gsmEfr", 26), ("iLBC", 27), ("qCELP", 28), ("t38", 29), ("g711Alaw64k-VBD", 30), ("g711Ulaw64k-VBD", 31), ("eVRC-B", 32), ("g722", 33), ("aMR-WB", 34), ("eg711Alaw", 35), ("eg711Ulaw", 36), ("g7291", 37), ("v1501mr", 38), ("ms-rta-nb", 39), ("invalideCoder", 99)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup2Name.setStatus('current')
codersGroup2PacketizationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup2PacketizationTime.setStatus('current')
codersGroup2Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup2Rate.setStatus('current')
codersGroup2PayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup2PayloadType.setStatus('current')
codersGroup2SilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("enableAdaptations", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup2SilenceSuppression.setStatus('current')
codersGroup3Table = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5), )
if mibBuilder.loadTexts: codersGroup3Table.setStatus('current')
codersGroup3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1), ).setIndexNames((0, "AcGateway", "codersGroup3Index"))
if mibBuilder.loadTexts: codersGroup3Entry.setStatus('current')
codersGroup3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: codersGroup3Index.setStatus('current')
codersGroup3RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup3RowStatus.setStatus('current')
codersGroup3Action = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup3Action.setStatus('current')
codersGroup3ActionRes = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("succeeded", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codersGroup3ActionRes.setStatus('current')
codersGroup3Name = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 99))).clone(namedValues=NamedValues(("g7231", 0), ("g711Alaw64k", 1), ("g711Ulaw64k", 2), ("g729", 3), ("g726", 5), ("g726r16", 6), ("g726r24", 7), ("g726r32", 8), ("g726r40", 9), ("netCoder8", 10), ("netCoder6-4", 11), ("netCoder7-2", 12), ("netCoder8-8", 13), ("gWTransparent", 14), ("g729AnnexB", 17), ("eVRC", 22), ("amr", 23), ("gsm-fr", 24), ("gsm-ms", 25), ("gsmEfr", 26), ("iLBC", 27), ("qCELP", 28), ("t38", 29), ("g711Alaw64k-VBD", 30), ("g711Ulaw64k-VBD", 31), ("eVRC-B", 32), ("g722", 33), ("aMR-WB", 34), ("eg711Alaw", 35), ("eg711Ulaw", 36), ("g7291", 37), ("v1501mr", 38), ("ms-rta-nb", 39), ("invalideCoder", 99)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup3Name.setStatus('current')
codersGroup3PacketizationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup3PacketizationTime.setStatus('current')
codersGroup3Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup3Rate.setStatus('current')
codersGroup3PayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup3PayloadType.setStatus('current')
codersGroup3SilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("enableAdaptations", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup3SilenceSuppression.setStatus('current')
codersGroup4Table = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6), )
if mibBuilder.loadTexts: codersGroup4Table.setStatus('current')
codersGroup4Entry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1), ).setIndexNames((0, "AcGateway", "codersGroup4Index"))
if mibBuilder.loadTexts: codersGroup4Entry.setStatus('current')
codersGroup4Index = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: codersGroup4Index.setStatus('current')
codersGroup4RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup4RowStatus.setStatus('current')
codersGroup4Action = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup4Action.setStatus('current')
codersGroup4ActionRes = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("succeeded", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codersGroup4ActionRes.setStatus('current')
codersGroup4Name = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 99))).clone(namedValues=NamedValues(("g7231", 0), ("g711Alaw64k", 1), ("g711Ulaw64k", 2), ("g729", 3), ("g726", 5), ("g726r16", 6), ("g726r24", 7), ("g726r32", 8), ("g726r40", 9), ("netCoder8", 10), ("netCoder6-4", 11), ("netCoder7-2", 12), ("netCoder8-8", 13), ("gWTransparent", 14), ("g729AnnexB", 17), ("eVRC", 22), ("amr", 23), ("gsm-fr", 24), ("gsm-ms", 25), ("gsmEfr", 26), ("iLBC", 27), ("qCELP", 28), ("t38", 29), ("g711Alaw64k-VBD", 30), ("g711Ulaw64k-VBD", 31), ("eVRC-B", 32), ("g722", 33), ("aMR-WB", 34), ("eg711Alaw", 35), ("eg711Ulaw", 36), ("g7291", 37), ("v1501mr", 38), ("ms-rta-nb", 39), ("invalideCoder", 99)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup4Name.setStatus('current')
codersGroup4PacketizationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup4PacketizationTime.setStatus('current')
codersGroup4Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup4Rate.setStatus('current')
codersGroup4PayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup4PayloadType.setStatus('current')
codersGroup4SilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 6, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("enableAdaptations", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: codersGroup4SilenceSuppression.setStatus('current')
supServices = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7))
supServicesEnableHold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesEnableHold.setStatus('current')
supServicesNameID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesNameID.setStatus('current')
supServicesHoldFormat = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("connectionIP", 0), ("sDPattributesSendonly", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesHoldFormat.setStatus('current')
supServicesSendMeteringMessageToIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesSendMeteringMessageToIP.setStatus('current')
supServicesHeldTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesHeldTimeout.setStatus('current')
supServicesHookFlashCode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesHookFlashCode.setStatus('current')
supServicesCHRRTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesCHRRTimeout.setStatus('current')
supServicesEnableHold2ISDN = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesEnableHold2ISDN.setStatus('current')
supServicesEnableMOH = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesEnableMOH.setStatus('current')
supServicesBlindTransferDisconnectTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesBlindTransferDisconnectTimeout.setStatus('current')
transfer = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 10))
transferEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: transferEnable.setStatus('current')
transferXferPrefix = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 10, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: transferXferPrefix.setStatus('current')
callWaiting = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 11))
callWaitingEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callWaitingEnable.setStatus('current')
callWaitingNumberOfIndications = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 11, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callWaitingNumberOfIndications.setStatus('current')
callWaitingTimeBetweenIndications = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 11, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callWaitingTimeBetweenIndications.setStatus('current')
callWaitingWaitingBeepDuration = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 11, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callWaitingWaitingBeepDuration.setStatus('current')
callWaitingTimeBeforeWaitingIndications = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 11, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callWaitingTimeBeforeWaitingIndications.setStatus('current')
forwardSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12))
forwardSettingsEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forwardSettingsEnable.setStatus('current')
forwardTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21), )
if mibBuilder.loadTexts: forwardTable.setStatus('current')
forwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1), ).setIndexNames((0, "AcGateway", "forwardIndex"))
if mibBuilder.loadTexts: forwardEntry.setStatus('current')
forwardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: forwardIndex.setStatus('current')
forwardIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forwardIsUsed.setStatus('current')
forwardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: forwardAction.setStatus('current')
forwardActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: forwardActionResult.setStatus('current')
forwardForwardType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("busy", 1), ("immediate", 2), ("noAnswer", 3), ("busyOrNoAnswer", 4), ("dontDisturb", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forwardForwardType.setStatus('current')
forwardForwardedToNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forwardForwardedToNumber.setStatus('current')
forwardTimeForNoReply = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forwardTimeForNoReply.setStatus('current')
forwardModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: forwardModule.setStatus('current')
forwardPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 12, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: forwardPort.setStatus('current')
mWI = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 13))
mWIEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mWIEnable.setStatus('current')
mWIAnalogLamp = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mWIAnalogLamp.setStatus('current')
mWIDisplay = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mWIDisplay.setStatus('current')
mWIServerIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 13, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mWIServerIP.setStatus('current')
mWIExpirationTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 13, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mWIExpirationTime.setStatus('current')
mWIServerTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("uDP", 0), ("tCP", 1), ("tLS", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mWIServerTransportType.setStatus('current')
supServicesConference = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 14))
supServicesConferenceEnable3Way = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesConferenceEnable3Way.setStatus('current')
supServicesConferenceEstablishCode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 7, 14, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supServicesConferenceEstablishCode.setStatus('current')
tones = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8))
tonesTimeForReorderTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesTimeForReorderTone.setStatus('current')
tonesTimeForDialTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesTimeForDialTone.setStatus('current')
tonesPlayRBTone2Ip = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesPlayRBTone2Ip.setStatus('current')
tonesPlayRBTone2Tel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("doNotPlay", 0), ("playOnLocal", 1), ("preferIp", 2), ("playLocalUntilRemoteMediaArrives", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesPlayRBTone2Tel.setStatus('current')
tonesStutterToneDuration = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesStutterToneDuration.setStatus('current')
tonesPlayRBToneXferSuccess = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesPlayRBToneXferSuccess.setStatus('current')
tonesFirstCallRBTId = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesFirstCallRBTId.setStatus('current')
tonesPrecedenceRingingType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesPrecedenceRingingType.setStatus('current')
tonesFirstCallWaitingToneID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesFirstCallWaitingToneID.setStatus('current')
tonesEnableComfortTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tonesEnableComfortTone.setStatus('current')
logger = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 9))
loggerGwAppCdrReportLevel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("no", 0), ("endCall", 1), ("startAndEndCall", 2), ("connectAndEndCall", 3), ("startConnectAndEndCall", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loggerGwAppCdrReportLevel.setStatus('current')
loggerGwDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 100, 200))).clone(namedValues=NamedValues(("logLevel0", 0), ("logLevel1", 1), ("logLevel2", 2), ("logLevel3", 3), ("logLevel4", 4), ("logLevel5", 5), ("logLevel100", 100), ("logLevel200", 200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loggerGwDebugLevel.setStatus('current')
loggerCDRSyslogServerIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 9, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loggerCDRSyslogServerIP.setStatus('current')
progressIndicators = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 10))
progressIndicators2ISDN = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 8))).clone(namedValues=NamedValues(("notSet", -1), ("localRB", 0), ("remoteRB1", 1), ("remoteRB8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: progressIndicators2ISDN.setStatus('obsolete')
progressIndicators2IP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 8))).clone(namedValues=NamedValues(("notSet", -1), ("localRB", 0), ("remoteRB1", 1), ("remoteRB8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: progressIndicators2IP.setStatus('current')
screeningIndicators = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 10, 20))
screeningIndicators2Ip = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 10, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("notOverwrited", -1), ("userProvided", 0), ("userPassed", 1), ("userFailed", 2), ("networkProvided", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: screeningIndicators2Ip.setStatus('current')
screeningIndicators2ISDN = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 10, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("notOverwrited", -1), ("userProvided", 0), ("userPassed", 1), ("userFailed", 2), ("networkProvided", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: screeningIndicators2ISDN.setStatus('current')
misc = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11))
miscDisconnectOnBusyTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscDisconnectOnBusyTone.setStatus('current')
miscDisconnectOnSilence = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscDisconnectOnSilence.setStatus('current')
miscEnableBusyOut = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableBusyOut.setStatus('current')
miscSecureCallsFromIp = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscSecureCallsFromIp.setStatus('current')
miscStaticNATIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscStaticNATIP.setStatus('current')
miscSilenceDisconnectTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 28800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscSilenceDisconnectTimeout.setStatus('current')
miscIsFaxUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noFax", 0), ("t38", 1), ("g711", 2), ("fallBack", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscIsFaxUsed.setStatus('current')
miscDelayTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscDelayTime.setStatus('current')
miscDetFaxOnAnswerTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscDetFaxOnAnswerTone.setStatus('current')
miscDefaultReleaseCause = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscDefaultReleaseCause.setStatus('current')
miscT38UseRTPPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscT38UseRTPPort.setStatus('current')
miscRFC2833PayloadType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(96, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscRFC2833PayloadType.setStatus('current')
miscIsCiscoSceMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscIsCiscoSceMode.setStatus('current')
miscDisconnectOnDialTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscDisconnectOnDialTone.setStatus('current')
miscEnableSemiAttendedTransfer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableSemiAttendedTransfer.setStatus('obsolete')
miscHookFlashCodeIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscHookFlashCodeIP.setStatus('current')
miscEnableFaxRerouting = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableFaxRerouting.setStatus('current')
miscT38MaxDatagramSize = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(122, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscT38MaxDatagramSize.setStatus('current')
miscIsdnDisconnectOnBusyTone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscIsdnDisconnectOnBusyTone.setStatus('current')
miscFaxCNGMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscFaxCNGMode.setStatus('current')
miscGracefulBusyOutTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscGracefulBusyOutTimeout.setStatus('current')
miscT38FaxMaxBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscT38FaxMaxBufferSize.setStatus('current')
miscReliableConnectionPersistentMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscReliableConnectionPersistentMode.setStatus('current')
miscWANIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 24), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscWANIPAddress.setStatus('current')
miscEnableDelayedOffer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableDelayedOffer.setStatus('current')
miscEnableNRTSubscription = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableNRTSubscription.setStatus('current')
miscASSubscribeIPGroupID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65525))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscASSubscribeIPGroupID.setStatus('current')
miscNRTSubscriptionRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscNRTSubscriptionRetryTime.setStatus('current')
miscCallForwardRingToneID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65525))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscCallForwardRingToneID.setStatus('current')
miscKeyCallPickup = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 30), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscKeyCallPickup.setStatus('current')
miscEnableRFC4117Transcoding = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableRFC4117Transcoding.setStatus('current')
miscEnableSingleDSPTranscoding = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableSingleDSPTranscoding.setStatus('current')
miscEnableNetworkISDNTransfer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscEnableNetworkISDNTransfer.setStatus('current')
miscLDAPocsNumberAttributeName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 34), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscLDAPocsNumberAttributeName.setStatus('current')
miscLDAPpbxNumberAttributeName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 35), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscLDAPpbxNumberAttributeName.setStatus('current')
miscLDAPMobileNumberAttributeName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 11, 36), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: miscLDAPMobileNumberAttributeName.setStatus('current')
resourceManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 12))
resourceManagementMaxActiveCalls = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 12, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2016))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resourceManagementMaxActiveCalls.setStatus('current')
resourceManagementIsSelfCheckAuditUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resourceManagementIsSelfCheckAuditUsed.setStatus('current')
resourceManagementRejectCallsOnOverload = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resourceManagementRejectCallsOnOverload.setStatus('obsolete')
resourceManagementDisconnectOnBrokenConnection = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resourceManagementDisconnectOnBrokenConnection.setStatus('current')
resourceManagementMaxCallDuration = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 12, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 35791))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resourceManagementMaxCallDuration.setStatus('current')
resourceManagementOverloadSensitivityLevel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("never", 0), ("highUtil", 1), ("medUtil", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resourceManagementOverloadSensitivityLevel.setStatus('current')
aMD = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 13))
aMDTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 13, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aMDTimeOut.setStatus('current')
aaa = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 14))
aaaIndications = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("authorizeAndAuthenticate", 1), ("fullReport", 2), ("accountingOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaIndications.setStatus('current')
aaaRadiusAccountingType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("release", 0), ("connectAndRelease", 1), ("setupAndRelease", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusAccountingType.setStatus('current')
profile = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15))
iPProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21), )
if mibBuilder.loadTexts: iPProfileTable.setStatus('current')
iPProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1), ).setIndexNames((0, "AcGateway", "iPProfileIndex"))
if mibBuilder.loadTexts: iPProfileEntry.setStatus('current')
iPProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: iPProfileIndex.setStatus('current')
iPProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileRowStatus.setStatus('current')
iPProfileAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPProfileAction.setStatus('current')
iPProfileActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPProfileActionResult.setStatus('current')
iPProfilePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfilePreference.setStatus('current')
iPProfileProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileProfileName.setStatus('current')
iPProfileCodersGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileCodersGroupID.setStatus('current')
iPProfileFaxTransportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iPProfileFaxTransportMode.setStatus('obsolete')
iPProfileIsFaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("noFax", 0), ("t38", 1), ("g711", 2), ("fallBack", 3), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileIsFaxUsed.setStatus('current')
iPProfileDJBufMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileDJBufMinDelay.setStatus('current')
iPProfileDJBufOptFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileDJBufOptFactor.setStatus('current')
iPProfileIPDiffServ = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileIPDiffServ.setStatus('current')
iPProfileSigIPDiffServ = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileSigIPDiffServ.setStatus('current')
iPProfileSCE = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("enableWithoutAdaptation", 2), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileSCE.setStatus('current')
iPProfileRTPRedundancyDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileRTPRedundancyDepth.setStatus('current')
iPProfileRemoteBaseUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileRemoteBaseUDPPort.setStatus('current')
iPProfileCngDetectorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("disable", 0), ("relay", 1), ("eventsOnly", 2), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileCngDetectorMode.setStatus('current')
iPProfileVxxModemTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("disable", 0), ("enableRelay", 1), ("enableBypass", 2), ("eventsOnly", 3), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileVxxModemTransportType.setStatus('current')
iPProfileNSEMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileNSEMode.setStatus('current')
iPProfilePlayRingbackToneToIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("notPlay", 0), ("play", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfilePlayRingbackToneToIP.setStatus('current')
iPProfileEnableEarlyMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileEnableEarlyMedia.setStatus('current')
iPProfileProgressIndicatorToIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 8, 255))).clone(namedValues=NamedValues(("noPI", 0), ("pI1", 1), ("pI8", 8), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileProgressIndicatorToIP.setStatus('current')
iPProfileECE = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileECE.setStatus('current')
iPProfileMediaSecurityBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("preferable", 0), ("mandatory", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileMediaSecurityBehavior.setStatus('current')
iPProfileCallLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 200000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileCallLimit.setStatus('current')
iPProfileDisconnectOnBrokenConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileDisconnectOnBrokenConnection.setStatus('current')
iPProfileCopyDest2RedirectNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("afterManipulation", 1), ("beforeManipulation", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileCopyDest2RedirectNumber.setStatus('current')
iPProfileAddIEInSetup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 28), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 98))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileAddIEInSetup.setStatus('current')
iPProfileRxDTMFOption = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("notDeclared", 0), ("declareRFC2833InSDP", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileRxDTMFOption.setStatus('current')
iPProfileFirstTxDtmfOption = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notConfigured", -1), ("notSupported", 0), ("infoNortel", 1), ("notify", 2), ("infoCisco", 3), ("rFC2833", 4), ("infoKorea", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileFirstTxDtmfOption.setStatus('current')
iPProfileSecondTxDtmfOption = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notConfigured", -1), ("notSupported", 0), ("infoNortel", 1), ("notify", 2), ("infoCisco", 3), ("rFC2833", 4), ("infoKorea", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileSecondTxDtmfOption.setStatus('current')
iPProfileMediaIPVersionPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", -1), ("onlyIPv4", 0), ("onlyIPv6", 1), ("preferIPv4", 2), ("preferIPv6", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileMediaIPVersionPreference.setStatus('current')
iPProfileSBCAllowedCodersGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notConfigured", -1), ("codersGroup0", 0), ("codersGroup1", 1), ("codersGroup2", 2), ("codersGroup3", 3), ("codersGroup4", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileSBCAllowedCodersGroupID.setStatus('current')
iPProfileSBCAllowedCodersMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("restriction", 0), ("preference", 1), ("restictionAndPreference", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileSBCAllowedCodersMode.setStatus('current')
iPProfileSBCMediaSecurityBehaviour = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 21, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("asIs", 0), ("srtp", 1), ("rtp", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iPProfileSBCMediaSecurityBehaviour.setStatus('current')
telProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22), )
if mibBuilder.loadTexts: telProfileTable.setStatus('current')
telProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1), ).setIndexNames((0, "AcGateway", "telProfileIndex"))
if mibBuilder.loadTexts: telProfileEntry.setStatus('current')
telProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: telProfileIndex.setStatus('current')
telProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileRowStatus.setStatus('current')
telProfileAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telProfileAction.setStatus('current')
telProfileActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telProfileActionResult.setStatus('current')
telProfilePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfilePreference.setStatus('current')
telProfileProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileProfileName.setStatus('current')
telProfileCodersGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileCodersGroupID.setStatus('current')
telProfileFaxTransportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telProfileFaxTransportMode.setStatus('obsolete')
telProfileIsFaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("noFax", 0), ("t38", 1), ("g711", 2), ("fallBack", 3), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileIsFaxUsed.setStatus('current')
telProfileDJBufMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileDJBufMinDelay.setStatus('current')
telProfileDJBufOptFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileDJBufOptFactor.setStatus('current')
telProfileIPDiffServ = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileIPDiffServ.setStatus('current')
telProfileSigIPDiffServ = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileSigIPDiffServ.setStatus('current')
telProfileVoiceVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileVoiceVolume.setStatus('current')
telProfileDTMFVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-31, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileDTMFVolume.setStatus('current')
telProfileInputGain = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileInputGain.setStatus('current')
telProfileEnableReversalPolarity = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnableReversalPolarity.setStatus('current')
telProfileEnableCurrentDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnableCurrentDisconnect.setStatus('current')
telProfileEnableDigitDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnableDigitDelivery.setStatus('current')
telProfileECE = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileECE.setStatus('current')
telProfileMWIanalogLamp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileMWIanalogLamp.setStatus('current')
telProfileMWIDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileMWIDisplay.setStatus('current')
telProfileMaxFlashHookDetectionPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileMaxFlashHookDetectionPeriod.setStatus('current')
telProfileEnableEarlyMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnableEarlyMedia.setStatus('current')
telProfileProgressIndicatorToIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 8, 255))).clone(namedValues=NamedValues(("noPI", 0), ("pI1", 1), ("pI8", 8), ("notConfigured", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileProgressIndicatorToIP.setStatus('current')
telProfileTimeForReorderTone = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileTimeForReorderTone.setStatus('current')
telProfileEnableDIDWink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnableDIDWink.setStatus('current')
telProfileIsTwoStageDial = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileIsTwoStageDial.setStatus('current')
telProfileDisconnectOnBusyTone = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileDisconnectOnBusyTone.setStatus('current')
telProfileEnableVoiceMailDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnableVoiceMailDelay.setStatus('current')
telProfileDialPlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileDialPlanIndex.setStatus('current')
telProfileEnable911PSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnable911PSAP.setStatus('current')
telProfileSwapTelToIpPhoneNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileSwapTelToIpPhoneNumbers.setStatus('current')
telProfileEnableAGC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileEnableAGC.setStatus('current')
telProfileECNlpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 15, 22, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("adaptiveNLP", 0), ("disabledNLP", 1), ("silenceOutputNLP", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: telProfileECNlpMode.setStatus('current')
voiceMail = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16))
voiceMailLineTransferMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ip", 0), ("pbxblindtransfer", 1), ("pbxsemisupervised", 2), ("pbxsupervisedtransfer", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceMailLineTransferMode.setStatus('current')
voiceMailInterface = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("dtmf", 1), ("smdi", 2), ("qsig", 3), ("isdnsetup", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceMailInterface.setStatus('current')
digitalGWext = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17))
digitalGWextEnableQSIGTunneling = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextEnableQSIGTunneling.setStatus('current')
digitalGWextRemoveCLIWhenRestricted = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextRemoveCLIWhenRestricted.setStatus('current')
digitalGWextDefaultCauseMapISDN2IP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextDefaultCauseMapISDN2IP.setStatus('current')
digitalGWextISDNSubaddressFormat = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ascii", 0), ("bcd", 1), ("userSpecified", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextISDNSubaddressFormat.setStatus('current')
digitalGWextEnableAoC = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextEnableAoC.setStatus('current')
digitalGWextRemoveCallingName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextRemoveCallingName.setStatus('current')
digitalGWextCopyDest2RedirectNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("afterManipulation", 1), ("beforeManipulation", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextCopyDest2RedirectNumber.setStatus('current')
digitalGWextTDMOverIPMinCallsForTrunkActivation = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitalGWextTDMOverIPMinCallsForTrunkActivation.setStatus('current')
rtpOnlyModeForTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 21), )
if mibBuilder.loadTexts: rtpOnlyModeForTrunkTable.setStatus('current')
rtpOnlyModeForTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 21, 1), ).setIndexNames((0, "AcGateway", "rtpOnlyModeForTrunkIndex"))
if mibBuilder.loadTexts: rtpOnlyModeForTrunkEntry.setStatus('current')
rtpOnlyModeForTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 84)))
if mibBuilder.loadTexts: rtpOnlyModeForTrunkIndex.setStatus('current')
rtpOnlyModeForTrunkRtpOnlyModeForTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("transmitReceive", 1), ("transmitOnly", 2), ("receiveOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtpOnlyModeForTrunkRtpOnlyModeForTrunk.setStatus('current')
acBChannelNegotiationForTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 22), )
if mibBuilder.loadTexts: acBChannelNegotiationForTrunkTable.setStatus('current')
acBChannelNegotiationForTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 22, 1), ).setIndexNames((0, "AcGateway", "acBChannelNegotiationForTrunkIndex"))
if mibBuilder.loadTexts: acBChannelNegotiationForTrunkEntry.setStatus('current')
acBChannelNegotiationForTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acBChannelNegotiationForTrunkIndex.setStatus('current')
acBChannelNegotiationForTrunkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("preferred", 0), ("exclusive", 1), ("any", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acBChannelNegotiationForTrunkMode.setStatus('current')
acDigitalOOSBehaviorForTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 23), )
if mibBuilder.loadTexts: acDigitalOOSBehaviorForTrunkTable.setStatus('current')
acDigitalOOSBehaviorForTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 23, 1), ).setIndexNames((0, "AcGateway", "acDigitalOOSBehaviorForTrunkIndex"))
if mibBuilder.loadTexts: acDigitalOOSBehaviorForTrunkEntry.setStatus('current')
acDigitalOOSBehaviorForTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 23, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acDigitalOOSBehaviorForTrunkIndex.setStatus('current')
acDigitalOOSBehaviorForTrunkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notConfigured", -1), ("default", 0), ("service", 1), ("dChannel", 2), ("alarm", 3), ("block", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acDigitalOOSBehaviorForTrunkValue.setStatus('current')
acRemoveCallingNameForTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 24), )
if mibBuilder.loadTexts: acRemoveCallingNameForTrunkTable.setStatus('current')
acRemoveCallingNameForTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 24, 1), ).setIndexNames((0, "AcGateway", "acRemoveCallingNameForTrunkIndex"))
if mibBuilder.loadTexts: acRemoveCallingNameForTrunkEntry.setStatus('current')
acRemoveCallingNameForTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 24, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acRemoveCallingNameForTrunkIndex.setStatus('current')
acRemoveCallingNameForTrunkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 17, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acRemoveCallingNameForTrunkMode.setStatus('current')
gwSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18))
gwSecurityMediaSecurityBehavior = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("mandatory", 1), ("preferable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwSecurityMediaSecurityBehavior.setStatus('current')
gwSecuritySIPSRequireClientCertificate = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwSecuritySIPSRequireClientCertificate.setStatus('current')
gwSecurityTLSReHandshakeInterval = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwSecurityTLSReHandshakeInterval.setStatus('current')
gwSecurityPeerHostNameVerificationMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("serverOnly", 1), ("serverAndClient", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwSecurityPeerHostNameVerificationMode.setStatus('current')
gwSecurityVerifyServerCertificate = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwSecurityVerifyServerCertificate.setStatus('current')
gwSecurityTLSRemoteSubjectName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwSecurityTLSRemoteSubjectName.setStatus('current')
gwSecuritySRTPofferedSuites = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 18, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("all", 0), ("aesCm128HmacShaOne80", 1), ("aesCm128HmacShaOne32", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwSecuritySRTPofferedSuites.setStatus('current')
acGWRtcpXr = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 19))
acGWRtcpXrEscIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 19, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acGWRtcpXrEscIP.setStatus('current')
acGWRtcpXrReportMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("endCall", 1), ("endCallPeriodic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acGWRtcpXrReportMode.setStatus('current')
acGWRtcpXrEscTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 19, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("uDP", 0), ("tCP", 1), ("tLS", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acGWRtcpXrEscTransportType.setStatus('current')
acTimers = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 20))
acTimersIPAlertTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 20, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acTimersIPAlertTimeout.setStatus('current')
acTimersPSTNAlertTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 20, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acTimersPSTNAlertTimeout.setStatus('current')
acEmergency = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 21))
acEmergencyRegretTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 21, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acEmergencyRegretTimeout.setStatus('current')
acEmergencyNumbersTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 21, 21), )
if mibBuilder.loadTexts: acEmergencyNumbersTable.setStatus('current')
acEmergencyNumbersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 21, 21, 1), ).setIndexNames((0, "AcGateway", "acEmergencyNumbersIndex"))
if mibBuilder.loadTexts: acEmergencyNumbersEntry.setStatus('current')
acEmergencyNumbersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 21, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: acEmergencyNumbersIndex.setStatus('current')
acEmergencyNumbersNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 21, 21, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acEmergencyNumbersNumbers.setStatus('current')
vmDigitPattern = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20))
vmDigitPatternNoReason = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternNoReason.setStatus('current')
vmDigitPatternOnBusy = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternOnBusy.setStatus('current')
vmDigitPatternOnNoAnswer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternOnNoAnswer.setStatus('current')
vmDigitPatternOnDND = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternOnDND.setStatus('current')
vmDigitPatternInternalCall = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternInternalCall.setStatus('current')
vmDigitPatternExternalCall = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternExternalCall.setStatus('current')
vmDigitPatternDisconnectCode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternDisconnectCode.setStatus('current')
vmDigitPatternConnectCode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternConnectCode.setStatus('current')
vmDigitPatternVmDigitPatternOnBusyExternal = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternVmDigitPatternOnBusyExternal.setStatus('current')
vmDigitPatternVmDigitPatternOnNoAnswerExternal = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternVmDigitPatternOnNoAnswerExternal.setStatus('current')
vmDigitPatternVmDigitPatternOnDNDExternal = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternVmDigitPatternOnDNDExternal.setStatus('current')
vmDigitPatternVmDigitPatternNoReasonExternal = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternVmDigitPatternNoReasonExternal.setStatus('current')
vmDigitPatternDigitToIgnore = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 20, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmDigitPatternDigitToIgnore.setStatus('current')
vmMWI = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 21))
vmMWIOnCode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 21, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmMWIOnCode.setStatus('current')
vmMWIOffCode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 21, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmMWIOffCode.setStatus('current')
vmMWISuffixCode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 21, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmMWISuffixCode.setStatus('current')
vmMWISourceNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 21, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmMWISourceNumber.setStatus('current')
vmSMDI = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 22))
vmSMDIEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmSMDIEnable.setStatus('current')
vmSMDITimeOut = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 16, 22, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 120000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmSMDITimeOut.setStatus('current')
accounts = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22))
accountTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21), )
if mibBuilder.loadTexts: accountTable.setStatus('current')
accountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1), ).setIndexNames((0, "AcGateway", "accountIndex"))
if mibBuilder.loadTexts: accountEntry.setStatus('current')
accountIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accountIndex.setStatus('current')
accountRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountRowStatus.setStatus('current')
accountAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accountAction.setStatus('current')
accountActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accountActionResult.setStatus('current')
accountServedTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountServedTrunkGroup.setStatus('current')
accountServedIPGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountServedIPGroup.setStatus('current')
accountServingIPGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountServingIPGroup.setStatus('current')
accountUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountUsername.setStatus('current')
accountPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountPassword.setStatus('current')
accountHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountHostName.setStatus('current')
accountRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountRegister.setStatus('current')
accountContactUser = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 22, 21, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: accountContactUser.setStatus('current')
ipGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23))
ipGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21), )
if mibBuilder.loadTexts: ipGroupTable.setStatus('current')
ipGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1), ).setIndexNames((0, "AcGateway", "ipGroupIndex"))
if mibBuilder.loadTexts: ipGroupEntry.setStatus('current')
ipGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipGroupIndex.setStatus('current')
ipGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupRowStatus.setStatus('current')
ipGroupAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipGroupAction.setStatus('current')
ipGroupActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipGroupActionResult.setStatus('current')
ipGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("server", 0), ("user", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupType.setStatus('current')
ipGroupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupDescription.setStatus('current')
ipGroupProxySetId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupProxySetId.setStatus('current')
ipGroupSIPGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupSIPGroupName.setStatus('current')
ipGroupContactUser = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupContactUser.setStatus('current')
ipGroupEnableSurvivability = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enableIfNecessary", 1), ("alwaysEnable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupEnableSurvivability.setStatus('current')
ipGroupServingIPGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupServingIPGroup.setStatus('current')
ipGroupSipReRoutingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("standard", 0), ("proxy", 1), ("routingTable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupSipReRoutingMode.setStatus('current')
ipGroupAlwaysUseRouteTable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupAlwaysUseRouteTable.setStatus('current')
ipGroupRoutingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("useRoutingTable", 0), ("sendToServingIPGroup", 1), ("routeToRequestURI", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupRoutingMode.setStatus('current')
ipGroupProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupProfileId.setStatus('current')
ipGroupMediaRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupMediaRealm.setStatus('current')
ipGroupMaxNumOfRegUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 23, 21, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 3000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipGroupMaxNumOfRegUsers.setStatus('current')
sbc = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24))
sbcEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbcEnable.setStatus('deprecated')
sbcRegistrationTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbcRegistrationTime.setStatus('current')
sbcEnableISBCApplication = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbcEnableISBCApplication.setStatus('current')
sbcEnableIIP2IPApplication = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sbcEnableIIP2IPApplication.setStatus('current')
sbcClassificationTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21), )
if mibBuilder.loadTexts: sbcClassificationTable.setStatus('current')
sbcClassificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1), ).setIndexNames((0, "AcGateway", "sbcClassificationIndex"))
if mibBuilder.loadTexts: sbcClassificationEntry.setStatus('current')
sbcClassificationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcClassificationIndex.setStatus('current')
sbcClassificationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationRowStatus.setStatus('current')
sbcClassificationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcClassificationAction.setStatus('current')
sbcClassificationActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcClassificationActionResult.setStatus('current')
sbcClassificationSrcIPGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationSrcIPGroupId.setStatus('current')
sbcClassificationSrcSRDId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationSrcSRDId.setStatus('current')
sbcClassificationSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationSrcAddress.setStatus('current')
sbcClassificationSrcUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationSrcUsernamePrefix.setStatus('current')
sbcClassificationSrcHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationSrcHost.setStatus('current')
sbcClassificationDestUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationDestUsernamePrefix.setStatus('current')
sbcClassificationDestHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 21, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcClassificationDestHost.setStatus('current')
sbcRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22), )
if mibBuilder.loadTexts: sbcRoutingTable.setStatus('current')
sbcRoutingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1), ).setIndexNames((0, "AcGateway", "sbcRoutingIndex"))
if mibBuilder.loadTexts: sbcRoutingEntry.setStatus('current')
sbcRoutingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 119))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcRoutingIndex.setStatus('current')
sbcRoutingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingRowStatus.setStatus('current')
sbcRoutingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcRoutingAction.setStatus('current')
sbcRoutingActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcRoutingActionResult.setStatus('current')
sbcRoutingSrcIPGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingSrcIPGroupId.setStatus('current')
sbcRoutingSrcUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingSrcUsernamePrefix.setStatus('current')
sbcRoutingSrcHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingSrcHost.setStatus('current')
sbcRoutingDestUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestUsernamePrefix.setStatus('current')
sbcRoutingDestHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestHost.setStatus('current')
sbcRoutingDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ipGroup", 0), ("dest", 1), ("requestURI", 2), ("enumTranslate", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestType.setStatus('current')
sbcRoutingDestIPGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestIPGroupId.setStatus('current')
sbcRoutingDestSRDId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestSRDId.setStatus('current')
sbcRoutingDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestAddress.setStatus('current')
sbcRoutingDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestPort.setStatus('current')
sbcRoutingDestTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("udp", 0), ("tcp", 1), ("tls", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingDestTransportType.setStatus('current')
sbcRoutingAltRouteOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("routeRow", 0), ("ignoreInputs", 1), ("considerInputs", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingAltRouteOptions.setStatus('current')
sbcRoutingRequestType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 22, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 0), ("invite", 1), ("register", 2), ("subscribe", 3), ("inviteAndRegister", 4), ("inviteAndSubscribe", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcRoutingRequestType.setStatus('current')
sbcIP2IPInboundManipulationTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23), )
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationTable.setStatus('current')
sbcIP2IPInboundManipulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1), ).setIndexNames((0, "AcGateway", "sbcIP2IPInboundManipulationIndex"))
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationEntry.setStatus('current')
sbcIP2IPInboundManipulationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationIndex.setStatus('current')
sbcIP2IPInboundManipulationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationRowStatus.setStatus('current')
sbcIP2IPInboundManipulationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationAction.setStatus('current')
sbcIP2IPInboundManipulationActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationActionResult.setStatus('current')
sbcIP2IPInboundManipulationIsAdditionalManipulation = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationIsAdditionalManipulation.setStatus('current')
sbcIP2IPInboundManipulationManipulatedURI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationManipulatedURI.setStatus('current')
sbcIP2IPInboundManipulationSrcIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationSrcIPGroupID.setStatus('current')
sbcIP2IPInboundManipulationSrcUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationSrcUsernamePrefix.setStatus('current')
sbcIP2IPInboundManipulationSrcHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationSrcHost.setStatus('current')
sbcIP2IPInboundManipulationDestUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationDestUsernamePrefix.setStatus('current')
sbcIP2IPInboundManipulationDestHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationDestHost.setStatus('current')
sbcIP2IPInboundManipulationRemoveFromLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationRemoveFromLeft.setStatus('current')
sbcIP2IPInboundManipulationRemoveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationRemoveFromRight.setStatus('current')
sbcIP2IPInboundManipulationLeaveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationLeaveFromRight.setStatus('current')
sbcIP2IPInboundManipulationPrefix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationPrefix2Add.setStatus('current')
sbcIP2IPInboundManipulationSuffix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationSuffix2Add.setStatus('current')
sbcIP2IPInboundManipulationRequestType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 23, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 0), ("invite", 1), ("register", 2), ("subscribe", 3), ("inviteAndRegister", 4), ("inviteAndSubscribe", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPInboundManipulationRequestType.setStatus('current')
sbcIP2IPOutboundManipulationTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24), )
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationTable.setStatus('current')
sbcIP2IPOutboundManipulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1), ).setIndexNames((0, "AcGateway", "sbcIP2IPOutboundManipulationIndex"))
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationEntry.setStatus('current')
sbcIP2IPOutboundManipulationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationIndex.setStatus('current')
sbcIP2IPOutboundManipulationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationRowStatus.setStatus('current')
sbcIP2IPOutboundManipulationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationAction.setStatus('current')
sbcIP2IPOutboundManipulationActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationActionResult.setStatus('current')
sbcIP2IPOutboundManipulationIsAdditionalManipulation = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationIsAdditionalManipulation.setStatus('current')
sbcIP2IPOutboundManipulationManipulatedURI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationManipulatedURI.setStatus('current')
sbcIP2IPOutboundManipulationSrcIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationSrcIPGroupID.setStatus('current')
sbcIP2IPOutboundManipulationDestIPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationDestIPGroupID.setStatus('current')
sbcIP2IPOutboundManipulationSrcUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationSrcUsernamePrefix.setStatus('current')
sbcIP2IPOutboundManipulationSrcHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationSrcHost.setStatus('current')
sbcIP2IPOutboundManipulationDestUsernamePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationDestUsernamePrefix.setStatus('current')
sbcIP2IPOutboundManipulationDestHost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationDestHost.setStatus('current')
sbcIP2IPOutboundManipulationRemoveFromLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationRemoveFromLeft.setStatus('current')
sbcIP2IPOutboundManipulationRemoveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationRemoveFromRight.setStatus('current')
sbcIP2IPOutboundManipulationLeaveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationLeaveFromRight.setStatus('current')
sbcIP2IPOutboundManipulationPrefix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationPrefix2Add.setStatus('current')
sbcIP2IPOutboundManipulationSuffix2Add = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationSuffix2Add.setStatus('current')
sbcIP2IPOutboundManipulationRequestType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 24, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 0), ("invite", 1), ("register", 2), ("subscribe", 3), ("inviteAndRegister", 4), ("inviteAndSubscribe", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcIP2IPOutboundManipulationRequestType.setStatus('current')
sbcAdmissionControlTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25), )
if mibBuilder.loadTexts: sbcAdmissionControlTable.setStatus('current')
sbcAdmissionControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1), ).setIndexNames((0, "AcGateway", "sbcAdmissionControlIndex"))
if mibBuilder.loadTexts: sbcAdmissionControlEntry.setStatus('current')
sbcAdmissionControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcAdmissionControlIndex.setStatus('current')
sbcAdmissionControlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlRowStatus.setStatus('current')
sbcAdmissionControlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcAdmissionControlAction.setStatus('current')
sbcAdmissionControlActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcAdmissionControlActionResult.setStatus('current')
sbcAdmissionControlLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ipGroup", 0), ("sRD", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlLimitType.setStatus('current')
sbcAdmissionControlIpGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlIpGroupID.setStatus('current')
sbcAdmissionControlSrdID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlSrdID.setStatus('current')
sbcAdmissionControlRequestType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("all", 0), ("invite", 1), ("subscribe", 2), ("other", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlRequestType.setStatus('current')
sbcAdmissionControlRequestDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("both", 0), ("in", 1), ("out", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlRequestDirection.setStatus('current')
sbcAdmissionControlLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlLimit.setStatus('current')
sbcAdmissionControlLimitPerUser = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 25, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAdmissionControlLimitPerUser.setStatus('current')
sbcMessageManipulationsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26), )
if mibBuilder.loadTexts: sbcMessageManipulationsTable.setStatus('current')
sbcMessageManipulationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1), ).setIndexNames((0, "AcGateway", "sbcMessageManipulationsIndex"))
if mibBuilder.loadTexts: sbcMessageManipulationsEntry.setStatus('current')
sbcMessageManipulationsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcMessageManipulationsIndex.setStatus('current')
sbcMessageManipulationsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsRowStatus.setStatus('current')
sbcMessageManipulationsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcMessageManipulationsAction.setStatus('current')
sbcMessageManipulationsActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcMessageManipulationsActionResult.setStatus('current')
sbcMessageManipulationsManipulationSetID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsManipulationSetID.setStatus('current')
sbcMessageManipulationsMessageType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsMessageType.setStatus('current')
sbcMessageManipulationsCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 199))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsCondition.setStatus('current')
sbcMessageManipulationsActionSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsActionSubject.setStatus('current')
sbcMessageManipulationsActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("add", 0), ("remove", 1), ("modify", 2), ("addPrefix", 3), ("addSuffix", 4), ("removeSuffix", 5), ("removePrefix", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsActionType.setStatus('current')
sbcMessageManipulationsActionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 199))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsActionValue.setStatus('current')
sbcMessageManipulationsRowRole = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 26, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("matchAndAction", 0), ("actionOnly", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcMessageManipulationsRowRole.setStatus('current')
sbcAlternativeRoutingReasonsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 27), )
if mibBuilder.loadTexts: sbcAlternativeRoutingReasonsTable.setStatus('current')
sbcAlternativeRoutingReasonsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 27, 1), ).setIndexNames((0, "AcGateway", "sbcAlternativeRoutingReasonsIndex"))
if mibBuilder.loadTexts: sbcAlternativeRoutingReasonsEntry.setStatus('current')
sbcAlternativeRoutingReasonsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 27, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcAlternativeRoutingReasonsIndex.setStatus('current')
sbcAlternativeRoutingReasonsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 27, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAlternativeRoutingReasonsRowStatus.setStatus('current')
sbcAlternativeRoutingReasonsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcAlternativeRoutingReasonsAction.setStatus('current')
sbcAlternativeRoutingReasonsActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sbcAlternativeRoutingReasonsActionResult.setStatus('current')
sbcAlternativeRoutingReasonsReleaseCause = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 24, 27, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 700))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sbcAlternativeRoutingReasonsReleaseCause.setStatus('current')
gwIPv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 25))
gwIPv6GwAppDualIPStackSDPMethod = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nONE", 0), ("aNAT", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwIPv6GwAppDualIPStackSDPMethod.setStatus('current')
gwIPv6GwAppPrimaryMediaInterface = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 25, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwIPv6GwAppPrimaryMediaInterface.setStatus('current')
gwIPv6GwAppSecondaryMediaInterface = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 25, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwIPv6GwAppSecondaryMediaInterface.setStatus('current')
gwIPv6MediaIPVersionPreference = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 25, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("onlyIPv4", 0), ("onlyIPv6", 1), ("preferIPv4", 2), ("preferIPv6", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwIPv6MediaIPVersionPreference.setStatus('current')
srdSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26))
srdTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21), )
if mibBuilder.loadTexts: srdTable.setStatus('current')
srdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1), ).setIndexNames((0, "AcGateway", "srdIndex"))
if mibBuilder.loadTexts: srdEntry.setStatus('current')
srdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srdIndex.setStatus('current')
srdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srdRowStatus.setStatus('current')
srdAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srdAction.setStatus('current')
srdActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srdActionResult.setStatus('current')
srdName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srdName.setStatus('current')
srdMediaRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srdMediaRealm.setStatus('current')
srdIntraSRDMediaAnchoring = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("anchorMedia", 0), ("dontAnchorMedia", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srdIntraSRDMediaAnchoring.setStatus('current')
srdBlockUnRegUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srdBlockUnRegUsers.setStatus('current')
srdMaxNumOfRegUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 26, 21, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 3000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: srdMaxNumOfRegUsers.setStatus('current')
sipInterfaceSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27))
sipInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21), )
if mibBuilder.loadTexts: sipInterfaceTable.setStatus('current')
sipInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1), ).setIndexNames((0, "AcGateway", "sipInterfaceIndex"))
if mibBuilder.loadTexts: sipInterfaceEntry.setStatus('current')
sipInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipInterfaceIndex.setStatus('current')
sipInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipInterfaceRowStatus.setStatus('current')
sipInterfaceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipInterfaceAction.setStatus('current')
sipInterfaceActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipInterfaceActionResult.setStatus('current')
sipInterfaceNetworkInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipInterfaceNetworkInterface.setStatus('current')
sipInterfaceApplicationType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("gwIP2IP", 0), ("sas", 1), ("sbc", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipInterfaceApplicationType.setStatus('current')
sipInterfaceUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipInterfaceUDPPort.setStatus('current')
sipInterfaceTCPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipInterfaceTCPPort.setStatus('current')
sipInterfaceTLSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipInterfaceTLSPort.setStatus('current')
sipInterfaceSRD = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 1, 27, 21, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipInterfaceSRD.setStatus('current')
sip = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2))
sipProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1))
sipProxyUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyUsed.setStatus('current')
sipProxyEnableKeepAlive = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("usingOptions", 1), ("usingRegister", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyEnableKeepAlive.setStatus('current')
sipProxyName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyName.setStatus('current')
sipProxyIsHotSwap = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyIsHotSwap.setStatus('current')
sipProxyHotSwapRtx = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyHotSwapRtx.setStatus('current')
sipProxyRedundancyMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("parking", 0), ("homing", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyRedundancyMode.setStatus('current')
sipProxyAlwaysUseRouteTable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyAlwaysUseRouteTable.setStatus('current')
sipProxyAlwaysSendToProxy = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyAlwaysSendToProxy.setStatus('current')
sipProxyKeepAliveTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyKeepAliveTime.setStatus('current')
sipProxyIsFallbackUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyIsFallbackUsed.setStatus('current')
sipProxySendInviteToProxy = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxySendInviteToProxy.setStatus('current')
sipProxyIsTrustedProxy = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyIsTrustedProxy.setStatus('current')
sipProxyUseGatewayNameForOptions = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyUseGatewayNameForOptions.setStatus('current')
sipProxyEnableSRVQuery = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyEnableSRVQuery.setStatus('obsolete')
sipProxyDNSQueryType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("aRecord", 0), ("sRV", 1), ("nAPTR", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyDNSQueryType.setStatus('current')
sipProxyLoadBalancingMethod = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("roundRobin", 1), ("randomWeights", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyLoadBalancingMethod.setStatus('current')
sipProxyIPListRefreshTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyIPListRefreshTime.setStatus('current')
proxyIPTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 21), )
if mibBuilder.loadTexts: proxyIPTable.setStatus('current')
proxyIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 21, 1), ).setIndexNames((0, "AcGateway", "proxyIPIndex"))
if mibBuilder.loadTexts: proxyIPEntry.setStatus('current')
proxyIPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: proxyIPIndex.setStatus('current')
proxyIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: proxyIPRowStatus.setStatus('current')
proxyIPAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyIPAction.setStatus('current')
proxyIPActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proxyIPActionResult.setStatus('current')
proxyIPProxyIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: proxyIPProxyIP.setStatus('current')
sipProxySetTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22), )
if mibBuilder.loadTexts: sipProxySetTable.setStatus('current')
sipProxySetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1), ).setIndexNames((0, "AcGateway", "sipProxySetIndex"))
if mibBuilder.loadTexts: sipProxySetEntry.setStatus('current')
sipProxySetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: sipProxySetIndex.setStatus('current')
sipProxySetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipProxySetRowStatus.setStatus('current')
sipProxySetAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipProxySetAction.setStatus('current')
sipProxySetActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipProxySetActionResult.setStatus('current')
sipProxySetEnableProxyKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("usingOptions", 1), ("usingRegister", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipProxySetEnableProxyKeepAlive.setStatus('current')
sipProxySetProxyKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 2000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipProxySetProxyKeepAliveTime.setStatus('current')
sipProxySetProxyLoadBalancingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("roundRobin", 1), ("randomWeights", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipProxySetProxyLoadBalancingMethod.setStatus('current')
sipProxySetIsProxyHotSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 1, 22, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipProxySetIsProxyHotSwap.setStatus('current')
sipDTMF = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2))
sipDTMFIsHookFlashUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFIsHookFlashUsed.setStatus('obsolete')
sipDTMFIsDTMFUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFIsDTMFUsed.setStatus('obsolete')
sipDTMFOutOfBandDtmfFormat = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("info-Nortel", 1), ("info-Cisco", 2), ("notify", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFOutOfBandDtmfFormat.setStatus('obsolete')
sipDTMFDisableAutoMute = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFDisableAutoMute.setStatus('current')
sipDTMFRxDTMFOption = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("noSupportRFC2833inSDP", 0), ("supportRFC2833inSDP", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFRxDTMFOption.setStatus('current')
sipDTMFHookFlashOption = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 4, 5))).clone(namedValues=NamedValues(("notSupported", 0), ("iNFO", 1), ("rFC2833", 4), ("infoLucent", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFHookFlashOption.setStatus('current')
sipDTMFUseDigitForSpecialDTMF = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("special", 0), ("numeric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFUseDigitForSpecialDTMF.setStatus('current')
sipDTMFMinRoutingOverlapDigits = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFMinRoutingOverlapDigits.setStatus('current')
sipDTMFISDNOverlapIPtoTelDialing = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDTMFISDNOverlapIPtoTelDialing.setStatus('current')
sipTxDTMFOptionTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 21), )
if mibBuilder.loadTexts: sipTxDTMFOptionTable.setStatus('current')
sipTxDTMFOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 21, 1), ).setIndexNames((0, "AcGateway", "sipTxDTMFOptionIndex"))
if mibBuilder.loadTexts: sipTxDTMFOptionEntry.setStatus('current')
sipTxDTMFOptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: sipTxDTMFOptionIndex.setStatus('current')
sipTxDTMFOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipTxDTMFOptionRowStatus.setStatus('current')
sipTxDTMFOptionAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTxDTMFOptionAction.setStatus('current')
sipTxDTMFOptionActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTxDTMFOptionActionResult.setStatus('current')
sipTxDTMFOptionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 0), ("nortelINFO", 1), ("nOTIFY", 2), ("ciscoINFO", 3), ("rFC2833", 4), ("koreaTelecomINFO", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipTxDTMFOptionValue.setStatus('current')
sipPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 3))
sipPortsDestinationPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipPortsDestinationPort.setStatus('current')
sipPortsLocalSipPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 3, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipPortsLocalSipPort.setStatus('current')
sipPortsTCPLocalSipPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 3, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipPortsTCPLocalSipPort.setStatus('current')
sipPortsTLSLocalSipPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipPortsTLSLocalSipPort.setStatus('current')
sipAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4))
sipAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("perEP", 0), ("perGW", 1), ("perFXSOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipAuthMode.setStatus('current')
sipAuthUserName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipAuthUserName.setStatus('current')
sipAuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipAuthPassword.setStatus('current')
sipAuthCnonce = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipAuthCnonce.setStatus('current')
sipAuthMutualAuthenticationMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("optional", 0), ("mandatory", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipAuthMutualAuthenticationMode.setStatus('current')
sipAuthChallengeCachingMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noCaching", 0), ("inviteOnly", 1), ("fullCaching", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipAuthChallengeCachingMode.setStatus('current')
authTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21), )
if mibBuilder.loadTexts: authTable.setStatus('current')
authEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1), ).setIndexNames((0, "AcGateway", "authIndex"))
if mibBuilder.loadTexts: authEntry.setStatus('current')
authIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: authIndex.setStatus('current')
authIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authIsUsed.setStatus('current')
authAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: authAction.setStatus('current')
authActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: authActionResult.setStatus('current')
authUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authUserID.setStatus('current')
authUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authUserPassword.setStatus('current')
authModule = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: authModule.setStatus('current')
authPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 4, 21, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: authPort.setStatus('current')
sipRetransmission = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5))
sipRetransmissionT1Rtx = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRetransmissionT1Rtx.setStatus('current')
sipRetransmissionT2Rtx = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRetransmissionT2Rtx.setStatus('current')
sipRetransmissionSipMaxRtx = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRetransmissionSipMaxRtx.setStatus('current')
sipRetransmissionIsRtxEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRetransmissionIsRtxEnable.setStatus('current')
sipRetransmissionEnablePTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRetransmissionEnablePTime.setStatus('current')
sipRetransmissionTCPTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRetransmissionTCPTimeout.setStatus('current')
sipRetransmissionRetryAfterTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 5, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRetransmissionRetryAfterTime.setStatus('current')
sipRegistration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6))
sipRegistrationIsNeeded = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationIsNeeded.setStatus('current')
sipRegistrationIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationIP.setStatus('current')
sipRegistrationTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationTime.setStatus('current')
sipRegistrationRegistrationRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationRegistrationRetryTime.setStatus('current')
sipRegistrationRegistrarName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationRegistrarName.setStatus('current')
sipRegistrationTimeDivider = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationTimeDivider.setStatus('current')
sipRegistrationName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationName.setStatus('current')
sipRegistrationRegisterOnInviteFailure = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationRegisterOnInviteFailure.setStatus('current')
sipRegistrationTimeThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationTimeThreshold.setStatus('current')
sipRegistrationRegistrarTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", -1), ("uDP", 0), ("tCP", 1), ("tLS", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationRegistrarTransportType.setStatus('current')
sipRegistrationReRegisterOnConnectionFailure = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 6, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegistrationReRegisterOnConnectionFailure.setStatus('current')
sipMisc = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7))
sipMiscEnableEarlyMedia = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableEarlyMedia.setStatus('current')
sipMiscSipSessionExpires = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSipSessionExpires.setStatus('current')
sipMiscIsUserPhone = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscIsUserPhone.setStatus('current')
sipMiscGatewayName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscGatewayName.setStatus('current')
sipMiscPrackMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("supported", 1), ("required", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscPrackMode.setStatus('current')
sipMiscEnableRpiHeader = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableRpiHeader.setStatus('current')
sipMiscXChannelHeader = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscXChannelHeader.setStatus('current')
sipMiscAssertedIDMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noHeaderAdded", 0), ("pAssertedIdRFC3325", 1), ("pPreferreddIdRFC3325", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscAssertedIDMode.setStatus('current')
sipMiscIsUserPhoneInFrom = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscIsUserPhoneInFrom.setStatus('current')
sipMiscAddTon2Rpi = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscAddTon2Rpi.setStatus('current')
sipMiscEnableCIC = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableCIC.setStatus('current')
sipMiscTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("udp", 0), ("tcp", 1), ("tls", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscTransportType.setStatus('current')
sipMiscISubNumberOfDigits = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 36))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscISubNumberOfDigits.setStatus('current')
sipMiscSIP183Behaviour = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSIP183Behaviour.setStatus('current')
sipMiscUseToHeaderAsCalledNum = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscUseToHeaderAsCalledNum.setStatus('current')
sipMiscEnableSIPS = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableSIPS.setStatus('current')
sipMiscEnableSRVQuery = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableSRVQuery.setStatus('obsolete')
sipMiscSubject = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 18), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSubject.setStatus('current')
sipMiscUseSIPTgrp = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("sendOnly", 1), ("sendAndReceive", 2), ("nortelHotline", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscUseSIPTgrp.setStatus('current')
sipMiscSend180ForCallWaiting = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSend180ForCallWaiting.setStatus('current')
sipMiscUserAgentDisplayInfo = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscUserAgentDisplayInfo.setStatus('current')
sipMiscSessionExpiresMethod = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invite", 0), ("update", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSessionExpiresMethod.setStatus('current')
sipMiscEnableGRUU = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableGRUU.setStatus('current')
sipMiscDNSQueryType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("aRecord", 0), ("sRV", 1), ("nAPTR", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscDNSQueryType.setStatus('current')
sipMiscEnableHistoryInfo = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableHistoryInfo.setStatus('current')
sipMiscEnableTCPConnectionReuse = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableTCPConnectionReuse.setStatus('current')
sipMiscComfortNoiseNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscComfortNoiseNegotiation.setStatus('current')
sipMiscMultiPtimeFormat = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("packetCable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscMultiPtimeFormat.setStatus('current')
sipMiscRTPOnlyMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("transmitNReceive", 1), ("transmitOnly", 2), ("receiveOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscRTPOnlyMode.setStatus('current')
sipMiscEnableReasonHeader = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableReasonHeader.setStatus('current')
sipMisc3xxBehavior = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("forward", 0), ("redirect", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMisc3xxBehavior.setStatus('current')
sipMiscEnableSemiAttendedTransfer = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableSemiAttendedTransfer.setStatus('current')
sipMiscUseSIPURIForDiversionHeader = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("tel", 0), ("sip", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscUseSIPURIForDiversionHeader.setStatus('current')
sipMiscEnableVMURI = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableVMURI.setStatus('current')
sipMiscEnablePChargingVector = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnablePChargingVector.setStatus('current')
sipMiscPAssertedUserName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 36), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscPAssertedUserName.setStatus('current')
sipMiscSDPSessionOwner = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 37), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSDPSessionOwner.setStatus('current')
sipMiscResetOnINIFileDownload = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscResetOnINIFileDownload.setStatus('obsolete')
sipMiscSetDefaultOnIniFileProcess = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 39), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSetDefaultOnIniFileProcess.setStatus('current')
sipMiscEnableContactRestriction = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnableContactRestriction.setStatus('current')
sipMiscEnablePAssociatedURIHeader = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscEnablePAssociatedURIHeader.setStatus('current')
sipMiscMinSE = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 42), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscMinSE.setStatus('current')
sipMiscApplicationProfile = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscApplicationProfile.setStatus('current')
sipMiscOPTIONSUserPart = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 44), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscOPTIONSUserPart.setStatus('current')
sipMiscUseAORInReferToHeader = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscUseAORInReferToHeader.setStatus('current')
sipMiscForkingHandlingMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sequential", 0), ("parallel", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscForkingHandlingMode.setStatus('current')
sipMiscOfferUnencryptedSRTCP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscOfferUnencryptedSRTCP.setStatus('obsolete')
sipMiscSourceNumberPreference = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 7, 48), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMiscSourceNumberPreference.setStatus('current')
sipSubscribe = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 8))
sipSubscribeEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSubscribeEnable.setStatus('current')
sipSubscribeRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 8, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSubscribeRetryTime.setStatus('current')
sipSubscribeEnableMWISubscription = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSubscribeEnableMWISubscription.setStatus('current')
sipSubscribeSubscriptionMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("perEndpoint", 0), ("perGateway", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSubscribeSubscriptionMode.setStatus('current')
sipDigitalGW = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9))
causeMapSIP2ISDNTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21), )
if mibBuilder.loadTexts: causeMapSIP2ISDNTable.setStatus('current')
causeMapSIP2ISDNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21, 1), ).setIndexNames((0, "AcGateway", "causeMapSIP2ISDNIndex"))
if mibBuilder.loadTexts: causeMapSIP2ISDNEntry.setStatus('current')
causeMapSIP2ISDNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: causeMapSIP2ISDNIndex.setStatus('current')
causeMapSIP2ISDNRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: causeMapSIP2ISDNRowStatus.setStatus('current')
causeMapSIP2ISDNAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: causeMapSIP2ISDNAction.setStatus('current')
causeMapSIP2ISDNActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: causeMapSIP2ISDNActionResult.setStatus('current')
causeMapSIP2ISDNSIPResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: causeMapSIP2ISDNSIPResponse.setStatus('current')
causeMapSIP2ISDNQ850Cause = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 21, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: causeMapSIP2ISDNQ850Cause.setStatus('current')
causeMapISDN2SIPTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22), )
if mibBuilder.loadTexts: causeMapISDN2SIPTable.setStatus('current')
causeMapISDN2SIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22, 1), ).setIndexNames((0, "AcGateway", "causeMapISDN2SIPIndex"))
if mibBuilder.loadTexts: causeMapISDN2SIPEntry.setStatus('current')
causeMapISDN2SIPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: causeMapISDN2SIPIndex.setStatus('current')
causeMapISDN2SIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: causeMapISDN2SIPRowStatus.setStatus('current')
causeMapISDN2SIPAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: causeMapISDN2SIPAction.setStatus('current')
causeMapISDN2SIPActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: causeMapISDN2SIPActionResult.setStatus('current')
causeMapISDN2SIPQ850Cause = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: causeMapISDN2SIPQ850Cause.setStatus('current')
causeMapISDN2SIPSIPResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 9, 22, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: causeMapISDN2SIPSIPResponse.setStatus('current')
sipSAS = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10))
sipSASEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASEnable.setStatus('current')
sipSASLocalSIPUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASLocalSIPUdpPort.setStatus('current')
sipSASDefaultGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASDefaultGatewayIP.setStatus('current')
sipSASLocalSIPTlsPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASLocalSIPTlsPort.setStatus('current')
sipSASRegistrationTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASRegistrationTime.setStatus('current')
sipSASShortNumberLength = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASShortNumberLength.setStatus('deprecated')
sipSASLocalSIPTcpPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASLocalSIPTcpPort.setStatus('current')
sipSASProxySet = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASProxySet.setStatus('current')
sipSASRedundantProxySet = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASRedundantProxySet.setStatus('current')
sipSASBindingMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("uRI", 0), ("userPartOnly", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASBindingMode.setStatus('current')
sipSASSurvivabilityMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("standard", 0), ("alwaysEmergency", 1), ("ignoreRegister", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASSurvivabilityMode.setStatus('current')
sipSASEnableENUM = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASEnableENUM.setStatus('current')
sipSASEnableRecordRoute = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipSASEnableRecordRoute.setStatus('current')
sasRegistrationManipulationTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21), )
if mibBuilder.loadTexts: sasRegistrationManipulationTable.setStatus('current')
sasRegistrationManipulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21, 1), ).setIndexNames((0, "AcGateway", "sasRegistrationManipulationIndex"))
if mibBuilder.loadTexts: sasRegistrationManipulationEntry.setStatus('current')
sasRegistrationManipulationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: sasRegistrationManipulationIndex.setStatus('current')
sasRegistrationManipulationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sasRegistrationManipulationRowStatus.setStatus('current')
sasRegistrationManipulationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sasRegistrationManipulationAction.setStatus('current')
sasRegistrationManipulationActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sasRegistrationManipulationActionResult.setStatus('current')
sasRegistrationManipulationRemoveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sasRegistrationManipulationRemoveFromRight.setStatus('current')
sasRegistrationManipulationLeaveFromRight = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 2, 10, 21, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sasRegistrationManipulationLeaveFromRight.setStatus('current')
h323 = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3))
h323SourceEncodType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e164", 0), ("h323-Id", 1), ("h323-IdAndE164", 2), ("nPIAndTON", 3), ("nPIAndTONAndH323-Id", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323SourceEncodType.setStatus('obsolete')
h323DestEncodType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e164", 0), ("h323-Id", 1), ("h323-IdAndE164", 2), ("nPIAndTON", 3), ("nPIAndTONAndH323-Id", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323DestEncodType.setStatus('obsolete')
h323H323IDString = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323H323IDString.setStatus('obsolete')
h323ConnectionModes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 10))
h323ConnectionModesIsTunnelingUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323ConnectionModesIsTunnelingUsed.setStatus('obsolete')
fastStart = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 10, 5))
fastStartIsFastConnectUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 10, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastStartIsFastConnectUsed.setStatus('obsolete')
fastStartOpenH245OnFS = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 10, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastStartOpenH245OnFS.setStatus('obsolete')
fastStartIsFSMediaInfoSendOnConnect = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 10, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastStartIsFSMediaInfoSendOnConnect.setStatus('obsolete')
fastStartIsFSOpenMediaOnConnect = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 10, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastStartIsFSOpenMediaOnConnect.setStatus('obsolete')
h323GK = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11))
h323GKIsGateKeeperUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKIsGateKeeperUsed.setStatus('obsolete')
h323GKGwRegistrType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e164", 0), ("h323-Id", 1), ("h323-IdAndE164", 2), ("nPIAndTON", 3), ("nPIAndTONAndH323-Id", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKGwRegistrType.setStatus('obsolete')
h323GKIsGkFallbackUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKIsGkFallbackUsed.setStatus('obsolete')
h323GKCanMapAliases = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKCanMapAliases.setStatus('obsolete')
h323GKResponseTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKResponseTimeout.setStatus('obsolete')
h323GKMaxRetries = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKMaxRetries.setStatus('obsolete')
h323GKRegistrationTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKRegistrationTime.setStatus('obsolete')
h323GKIsTerminal = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKIsTerminal.setStatus('obsolete')
h323GKGatekeeperID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKGatekeeperID.setStatus('obsolete')
h323GKEnablePregrantARQ = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKEnablePregrantARQ.setStatus('obsolete')
h323GKRegister = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKRegister.setStatus('current')
h323GKAlternativeGKUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKAlternativeGKUsed.setStatus('obsolete')
h323GKUseRedundantGKOnRRJ = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKUseRedundantGKOnRRJ.setStatus('obsolete')
h323GKEnableGKAutoDiscovery = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKEnableGKAutoDiscovery.setStatus('obsolete')
h323GKGKAutoDiscoveryIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323GKGKAutoDiscoveryIP.setStatus('obsolete')
gkIPTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21), )
if mibBuilder.loadTexts: gkIPTable.setStatus('obsolete')
gkIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21, 1), ).setIndexNames((0, "AcGateway", "gkIPIndex"))
if mibBuilder.loadTexts: gkIPEntry.setStatus('obsolete')
gkIPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: gkIPIndex.setStatus('obsolete')
gkIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gkIPRowStatus.setStatus('obsolete')
gkIPAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gkIPAction.setStatus('obsolete')
gkIPActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gkIPActionResult.setStatus('obsolete')
gkIPGatekeeperIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gkIPGatekeeperIP.setStatus('obsolete')
gkIPGateleeperID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 21, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gkIPGateleeperID.setStatus('obsolete')
registerPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22), )
if mibBuilder.loadTexts: registerPrefixTable.setStatus('obsolete')
registerPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1), ).setIndexNames((0, "AcGateway", "registerPrefixIndex"))
if mibBuilder.loadTexts: registerPrefixEntry.setStatus('obsolete')
registerPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: registerPrefixIndex.setStatus('obsolete')
registerPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: registerPrefixRowStatus.setStatus('obsolete')
registerPrefixAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: registerPrefixAction.setStatus('obsolete')
registerPrefixActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: registerPrefixActionResult.setStatus('obsolete')
registerPrefixPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: registerPrefixPrefix.setStatus('obsolete')
registerPrefixNumberPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 9))).clone(namedValues=NamedValues(("unknown", 0), ("e164Public", 1), ("private", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: registerPrefixNumberPlan.setStatus('obsolete')
registerPrefixNumberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 22, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("unknown", 0), ("international-Level2Regional", 1), ("national-Level1Regional", 2), ("networkSpecific-NetworkPISN", 3), ("subscriber-Level0Regional", 4), ("abbreviated", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: registerPrefixNumberType.setStatus('obsolete')
gkRedundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 30))
gkRedundancyUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gkRedundancyUsed.setStatus('obsolete')
gkRedundancyTimeBetweenGKsLoops = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 30, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gkRedundancyTimeBetweenGKsLoops.setStatus('obsolete')
gkRAI = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 31))
gkRAIEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gkRAIEnable.setStatus('obsolete')
gkRAIHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 31, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gkRAIHighThreshold.setStatus('obsolete')
gkRAILowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 31, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gkRAILowThreshold.setStatus('obsolete')
gkRAILoopTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 11, 31, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gkRAILoopTime.setStatus('obsolete')
h323DTMF = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12))
h323DTMFHookFlashOption = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("h245UserInput", 1), ("h245Signal", 2), ("q931UserInfo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323DTMFHookFlashOption.setStatus('obsolete')
h323DTMFRxDtmfOption = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("h245UserInput", 1), ("h245Signal", 2), ("rFC2833", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323DTMFRxDtmfOption.setStatus('obsolete')
dTMFOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 21), )
if mibBuilder.loadTexts: dTMFOptionsTable.setStatus('obsolete')
dTMFOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 21, 1), ).setIndexNames((0, "AcGateway", "dTMFOptionsIndex"))
if mibBuilder.loadTexts: dTMFOptionsEntry.setStatus('obsolete')
dTMFOptionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: dTMFOptionsIndex.setStatus('obsolete')
dTMFOptionsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dTMFOptionsRowStatus.setStatus('obsolete')
dTMFOptionsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dTMFOptionsAction.setStatus('obsolete')
dTMFOptionsActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("developmentImpending", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dTMFOptionsActionResult.setStatus('obsolete')
dTMFOptionsTxDTMFOption = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 12, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("h245UserInput", 1), ("h245Signal", 2), ("q931UserInfo", 3), ("rFC2833", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dTMFOptionsTxDTMFOption.setStatus('obsolete')
h323Ports = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 13))
h323PortsH225ListenPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 13, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323PortsH225ListenPort.setStatus('obsolete')
h323PortsH225DialPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 13, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323PortsH225DialPort.setStatus('obsolete')
h323PortsH323BasePort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 13, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323PortsH323BasePort.setStatus('obsolete')
h323PortsRasSourcePort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 13, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323PortsRasSourcePort.setStatus('obsolete')
h323PortsRasDestPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 13, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323PortsRasDestPort.setStatus('obsolete')
h323Auth = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 14))
h323AuthEnableH235Security = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323AuthEnableH235Security.setStatus('obsolete')
h323AuthUserName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 14, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323AuthUserName.setStatus('obsolete')
h323AuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 14, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323AuthPassword.setStatus('obsolete')
h323Misc = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15))
h323MiscIsSetupIncludeNum = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscIsSetupIncludeNum.setStatus('obsolete')
h323MiscIsSetupAckUsed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscIsSetupAckUsed.setStatus('obsolete')
h323MiscH245InitTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscH245InitTimeOut.setStatus('obsolete')
h323MiscEnableQ931Cause = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscEnableQ931Cause.setStatus('obsolete')
h323MiscEnableQ931Multiplexing = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscEnableQ931Multiplexing.setStatus('obsolete')
h323MiscSendChannelNonStandard = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscSendChannelNonStandard.setStatus('obsolete')
h323MiscH245RoundTripTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscH245RoundTripTime.setStatus('obsolete')
h323MiscProgressBehavior = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 3, 1, 3, 15, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("alert", 0), ("progress", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323MiscProgressBehavior.setStatus('obsolete')
mibBuilder.exportSymbols("AcGateway", telProfileActionResult=telProfileActionResult, sasRegistrationManipulationLeaveFromRight=sasRegistrationManipulationLeaveFromRight, telProfileTimeForReorderTone=telProfileTimeForReorderTone, sipMiscEnableTCPConnectionReuse=sipMiscEnableTCPConnectionReuse, mlppRoutineRTPDSCP=mlppRoutineRTPDSCP, sipProxySetEntry=sipProxySetEntry, sipInterfaceApplicationType=sipInterfaceApplicationType, sbcIP2IPInboundManipulationDestHost=sbcIP2IPInboundManipulationDestHost, accountServedIPGroup=accountServedIPGroup, h323PortsH225DialPort=h323PortsH225DialPort, dstIP2TELEntry=dstIP2TELEntry, fxoIsTwoStageDial=fxoIsTwoStageDial, srcTEL2IPNumOfStrippedDigits=srcTEL2IPNumOfStrippedDigits, manipulationSourceMode=manipulationSourceMode, codersGroup2PacketizationTime=codersGroup2PacketizationTime, manipulationAndRoutingModeIp2Tel=manipulationAndRoutingModeIp2Tel, codersGroup1SilenceSuppression=codersGroup1SilenceSuppression, redirectNumberMapIp2TelLeaveFromRight=redirectNumberMapIp2TelLeaveFromRight, tel2IPRoutingPrefix=tel2IPRoutingPrefix, channelsIndex=channelsIndex, sipDTMFHookFlashOption=sipDTMFHookFlashOption, codersGroup4ActionRes=codersGroup4ActionRes, proxyIPTable=proxyIPTable, codersGroup2Action=codersGroup2Action, sbcIP2IPInboundManipulationSuffix2Add=sbcIP2IPInboundManipulationSuffix2Add, codersInterval=codersInterval, enableCallWaitingPerPortPort=enableCallWaitingPerPortPort, forwardIsUsed=forwardIsUsed, manipulationUseDisplayNameAsSourceNumber=manipulationUseDisplayNameAsSourceNumber, manipulationAndRoutingModeTel2Ip=manipulationAndRoutingModeTel2Ip, pSTNAlertTimeoutIndex=pSTNAlertTimeoutIndex, sipSASSurvivabilityMode=sipSASSurvivabilityMode, trunkGroupSettingsTrunkGroupID=trunkGroupSettingsTrunkGroupID, forwardIndex=forwardIndex, srcTEL2IPSourceIPAddress=srcTEL2IPSourceIPAddress, digitalGWBChannelNegotiation=digitalGWBChannelNegotiation, gwSecuritySIPSRequireClientCertificate=gwSecuritySIPSRequireClientCertificate, chargeCodesPeriod2EndTime=chargeCodesPeriod2EndTime, phoneContextTON=phoneContextTON, manipulationAndRoutingSIPReRoutingMode=manipulationAndRoutingSIPReRoutingMode, sipMiscApplicationProfile=sipMiscApplicationProfile, enableCallWaitingPerPortModule=enableCallWaitingPerPortModule, sipRetransmissionSipMaxRtx=sipRetransmissionSipMaxRtx, sbcIP2IPOutboundManipulationIsAdditionalManipulation=sbcIP2IPOutboundManipulationIsAdditionalManipulation, codersGroup1PacketizationTime=codersGroup1PacketizationTime, supServicesCHRRTimeout=supServicesCHRRTimeout, gwIPv6MediaIPVersionPreference=gwIPv6MediaIPVersionPreference, sipTxDTMFOptionActionResult=sipTxDTMFOptionActionResult, h323DTMF=h323DTMF, phoneContextEntry=phoneContextEntry, telProfileMWIDisplay=telProfileMWIDisplay, codersGroup0SilenceSuppression=codersGroup0SilenceSuppression, sipProxyIPListRefreshTime=sipProxyIPListRefreshTime, callWaitingTimeBetweenIndications=callWaitingTimeBetweenIndications, trunkTransferMode=trunkTransferMode, manipulationRemovePrefix=manipulationRemovePrefix, rtpOnlyModeForTrunkRtpOnlyModeForTrunk=rtpOnlyModeForTrunkRtpOnlyModeForTrunk, manipulationAndRoutingAltRoutingTel2IpMode=manipulationAndRoutingAltRoutingTel2IpMode, codersGroup0PacketizationTime=codersGroup0PacketizationTime, conferenceID=conferenceID, dstIP2TELIndex=dstIP2TELIndex, sasRegistrationManipulationRowStatus=sasRegistrationManipulationRowStatus, sbcAdmissionControlRequestType=sbcAdmissionControlRequestType, sipInterfaceRowStatus=sipInterfaceRowStatus, redirectNumberMapTel2IpNumberType=redirectNumberMapTel2IpNumberType, h323MiscProgressBehavior=h323MiscProgressBehavior, trunkGroupSettingsIndex=trunkGroupSettingsIndex, digitalGWEnableTransferCap=digitalGWEnableTransferCap, iSDNTransferCapabilityValue=iSDNTransferCapabilityValue, channelsModule=channelsModule, sipRegistrationReRegisterOnConnectionFailure=sipRegistrationReRegisterOnConnectionFailure, proxyIPIndex=proxyIPIndex, causeMapSIP2ISDNAction=causeMapSIP2ISDNAction, trunkGroupSettingsRegistrationMode=trunkGroupSettingsRegistrationMode, srcTEL2IPActionResult=srcTEL2IPActionResult, callerDisplayActionResult=callerDisplayActionResult, acTimers=acTimers, calea=calea, sbcClassificationDestHost=sbcClassificationDestHost, pIForDisconnectMsgTable=pIForDisconnectMsgTable, iPProfileRemoteBaseUDPPort=iPProfileRemoteBaseUDPPort, sbcClassificationSrcSRDId=sbcClassificationSrcSRDId, callWaiting=callWaiting, vmDigitPatternOnDND=vmDigitPatternOnDND, telProfileAction=telProfileAction, registerPrefixTable=registerPrefixTable, sbcIP2IPOutboundManipulationIndex=sbcIP2IPOutboundManipulationIndex, enableDidPortEnable=enableDidPortEnable, dstIP2TELNumberType=dstIP2TELNumberType, sipMiscSipSessionExpires=sipMiscSipSessionExpires, mlppCallPriorityMode=mlppCallPriorityMode, codersGroup2ActionRes=codersGroup2ActionRes, sbcMessageManipulationsActionSubject=sbcMessageManipulationsActionSubject, mlppFlashRTPDSCP=mlppFlashRTPDSCP, telProfileEnableCurrentDisconnect=telProfileEnableCurrentDisconnect, sipMiscEnablePAssociatedURIHeader=sipMiscEnablePAssociatedURIHeader, keypadFeaturesRejectAnonymousCallDeact=keypadFeaturesRejectAnonymousCallDeact, codersGroup3RowStatus=codersGroup3RowStatus, enableDidPortActionResult=enableDidPortActionResult, chargeCodesActionResult=chargeCodesActionResult, conferenceEnableDTMFClamping=conferenceEnableDTMFClamping, sbcRoutingSrcUsernamePrefix=sbcRoutingSrcUsernamePrefix, sipProxyIsHotSwap=sipProxyIsHotSwap, sipProxyEnableSRVQuery=sipProxyEnableSRVQuery, localISDNRBSourceEntry=localISDNRBSourceEntry, pIForDisconnectMsgIndex=pIForDisconnectMsgIndex, sbcIP2IPOutboundManipulationRemoveFromRight=sbcIP2IPOutboundManipulationRemoveFromRight, tonesPlayRBToneXferSuccess=tonesPlayRBToneXferSuccess, miscSecureCallsFromIp=miscSecureCallsFromIp, sipProxy=sipProxy, chargeCodesPeriod1EndTime=chargeCodesPeriod1EndTime, acDigitalOOSBehaviorForTrunkValue=acDigitalOOSBehaviorForTrunkValue, srcTEL2IPEntry=srcTEL2IPEntry, redirectNumberMapTel2IpIndex=redirectNumberMapTel2IpIndex, sbcIP2IPOutboundManipulationPrefix2Add=sbcIP2IPOutboundManipulationPrefix2Add, sbcIP2IPOutboundManipulationRequestType=sbcIP2IPOutboundManipulationRequestType, autoDialPort=autoDialPort, manipulationAndRoutingAltRoutingTel2IpConnMethod=manipulationAndRoutingAltRoutingTel2IpConnMethod, enableCallWaitingPerPortIsUsed=enableCallWaitingPerPortIsUsed, acBChannelNegotiationForTrunkEntry=acBChannelNegotiationForTrunkEntry, streamingMediaID=streamingMediaID, supServicesHookFlashCode=supServicesHookFlashCode, srdMediaRealm=srdMediaRealm, sipRegistrationIsNeeded=sipRegistrationIsNeeded, enableDidPortPort=enableDidPortPort, sbcMessageManipulationsIndex=sbcMessageManipulationsIndex, dstIP2TELAction=dstIP2TELAction, fxoRingsBeforeCallerID=fxoRingsBeforeCallerID, digitalGWSendISDNTransferOnConnect=digitalGWSendISDNTransferOnConnect, iPProfileVxxModemTransportType=iPProfileVxxModemTransportType, namesIsUsed=namesIsUsed, gwConfiguration=gwConfiguration, sbcMessageManipulationsRowRole=sbcMessageManipulationsRowRole, sip=sip, h323GKResponseTimeout=h323GKResponseTimeout, tel2IPRoutingProfileID=tel2IPRoutingProfileID, dialingMaxDigits=dialingMaxDigits, accountServedTrunkGroup=accountServedTrunkGroup, sipMiscSIP183Behaviour=sipMiscSIP183Behaviour, progressIndicators=progressIndicators, progressIndicators2IP=progressIndicators2IP, keypadFeaturesBlindTransfer=keypadFeaturesBlindTransfer, acGWRtcpXr=acGWRtcpXr, vmMWI=vmMWI, sipRegistrationRegisterOnInviteFailure=sipRegistrationRegisterOnInviteFailure, redirectNumberMapIp2TelAction=redirectNumberMapIp2TelAction, streamingPlayFromID=streamingPlayFromID, srvInfoInternalDomainName=srvInfoInternalDomainName, channelsSetting=channelsSetting, tel2IPRoutingAction=tel2IPRoutingAction, dstIP2TELIsPresentationRestricted=dstIP2TELIsPresentationRestricted, telProfileMaxFlashHookDetectionPeriod=telProfileMaxFlashHookDetectionPeriod, causeMapISDN2SIPQ850Cause=causeMapISDN2SIPQ850Cause, sbcRegistrationTime=sbcRegistrationTime, gkIPAction=gkIPAction, enableDidPortEntry=enableDidPortEntry, vmSMDIEnable=vmSMDIEnable, voiceMailInterface=voiceMailInterface, forwardOnBusyTrunkDestActionResult=forwardOnBusyTrunkDestActionResult, toneIndexEntry=toneIndexEntry, ipGroupMediaRealm=ipGroupMediaRealm, channelsAction=channelsAction, dstTEL2IPNumberPlan=dstTEL2IPNumberPlan, acEmergencyNumbersEntry=acEmergencyNumbersEntry, sbcIP2IPInboundManipulationPrefix2Add=sbcIP2IPInboundManipulationPrefix2Add, iP2TelRoutingSourceHostPrefix=iP2TelRoutingSourceHostPrefix, manipulationAddNPIandTON2CallingNumber=manipulationAddNPIandTON2CallingNumber, iSDNTransferCapabilityIndex=iSDNTransferCapabilityIndex, keypadFeatures=keypadFeatures, authTable=authTable, supServicesEnableHold2ISDN=supServicesEnableHold2ISDN, sipSubscribeEnable=sipSubscribeEnable, gkRAI=gkRAI, fxoGuardTimeBetweenCalls=fxoGuardTimeBetweenCalls, keypadFeaturesHotLine=keypadFeaturesHotLine, acRemoveCallingNameForTrunkTable=acRemoveCallingNameForTrunkTable, toneIndexFXSPortFirst=toneIndexFXSPortFirst, callerIDperPortEntry=callerIDperPortEntry, iP2TelRoutingActionResult=iP2TelRoutingActionResult, acTWCnonAllocateablePortsNumber=acTWCnonAllocateablePortsNumber, localISDNRBSourceValue=localISDNRBSourceValue, sipProxyHotSwapRtx=sipProxyHotSwapRtx, rtpOnlyModeForTrunkIndex=rtpOnlyModeForTrunkIndex, sipMiscUseAORInReferToHeader=sipMiscUseAORInReferToHeader, tonesTimeForDialTone=tonesTimeForDialTone, miscEnableSemiAttendedTransfer=miscEnableSemiAttendedTransfer, aaaIndications=aaaIndications, codersGroup0Entry=codersGroup0Entry, connectivityQosEffectivePeriod=connectivityQosEffectivePeriod, telProfileEnableReversalPolarity=telProfileEnableReversalPolarity, causeMapSIP2ISDNRowStatus=causeMapSIP2ISDNRowStatus, manipulationBlindTransferAddPrefix=manipulationBlindTransferAddPrefix, tonesPlayRBTone2Ip=tonesPlayRBTone2Ip, sbcIP2IPInboundManipulationRowStatus=sbcIP2IPInboundManipulationRowStatus, sbcMessageManipulationsActionValue=sbcMessageManipulationsActionValue, iPProfileTable=iPProfileTable, iPProfileAddIEInSetup=iPProfileAddIEInSetup, codersSilenceSuppression=codersSilenceSuppression, sbcIP2IPOutboundManipulationSrcUsernamePrefix=sbcIP2IPOutboundManipulationSrcUsernamePrefix, digitalGWEnableTDMOverIp=digitalGWEnableTDMOverIp, iPProfileSBCAllowedCodersGroupID=iPProfileSBCAllowedCodersGroupID, sbcRoutingActionResult=sbcRoutingActionResult, sipMiscEnableCIC=sipMiscEnableCIC, digitalGWSwapRedirectNumber=digitalGWSwapRedirectNumber, sbcClassificationTable=sbcClassificationTable, redirectNumberMapIp2TelRowStatus=redirectNumberMapIp2TelRowStatus, dTMFOptionsIndex=dTMFOptionsIndex, sipProxySetAction=sipProxySetAction, h323GKIsTerminal=h323GKIsTerminal, miscHookFlashCodeIP=miscHookFlashCodeIP, srcTEL2IPSourceTrunkGroupID=srcTEL2IPSourceTrunkGroupID, redirectNumberMapTel2IpEntry=redirectNumberMapTel2IpEntry, mlppDefaultServiceDomain=mlppDefaultServiceDomain, srvInfoDNSName2=srvInfoDNSName2, srcTEL2IPRowStatus=srcTEL2IPRowStatus, srcTEL2IPNumOfDigitsToRemFromRight=srcTEL2IPNumOfDigitsToRemFromRight, sipMiscForkingHandlingMode=sipMiscForkingHandlingMode, conferenceBipOnConference=conferenceBipOnConference, iPProfileECE=iPProfileECE, tonesEnableComfortTone=tonesEnableComfortTone, proxyIPEntry=proxyIPEntry, dnsInfoFirstIPAddress=dnsInfoFirstIPAddress, sbcClassificationActionResult=sbcClassificationActionResult, channelsStartingCh=channelsStartingCh, manipulationAndRoutingRedundantRoutingMode=manipulationAndRoutingRedundantRoutingMode, iPProfileIPDiffServ=iPProfileIPDiffServ, codersGroup0RowStatus=codersGroup0RowStatus, acBChannelNegotiationForTrunkIndex=acBChannelNegotiationForTrunkIndex, sipInterfaceSettings=sipInterfaceSettings, codersGroup3SilenceSuppression=codersGroup3SilenceSuppression, ipGroupSIPGroupName=ipGroupSIPGroupName, sbcAdmissionControlLimit=sbcAdmissionControlLimit, caleaInterceptionDirection=caleaInterceptionDirection, autoDialActionResult=autoDialActionResult, miscDisconnectOnDialTone=miscDisconnectOnDialTone, codersGroup4Action=codersGroup4Action, h323ConnectionModesIsTunnelingUsed=h323ConnectionModesIsTunnelingUsed, chargeCodesPeriod4PulsesOnAnswer=chargeCodesPeriod4PulsesOnAnswer, tel2IPRoutingAddress=tel2IPRoutingAddress, codersGroup4Rate=codersGroup4Rate, h323GKRegister=h323GKRegister, forwardOnBusyTrunkDestForwardDestination=forwardOnBusyTrunkDestForwardDestination, codersAction=codersAction, authModule=authModule, digitalGWEnableCallingPartyCategory=digitalGWEnableCallingPartyCategory, enableDidPortTable=enableDidPortTable, vmDigitPatternDisconnectCode=vmDigitPatternDisconnectCode, digitalGWEnableUuiTel2Ip=digitalGWEnableUuiTel2Ip, supServicesConference=supServicesConference, iPProfileFirstTxDtmfOption=iPProfileFirstTxDtmfOption, sbcIP2IPOutboundManipulationSuffix2Add=sbcIP2IPOutboundManipulationSuffix2Add, streamingMonitorID=streamingMonitorID, manipulationAndRoutingAltRoutingTel2IpEnable=manipulationAndRoutingAltRoutingTel2IpEnable, miscLDAPMobileNumberAttributeName=miscLDAPMobileNumberAttributeName)
mibBuilder.exportSymbols("AcGateway", iPProfileNSEMode=iPProfileNSEMode, gkIPActionResult=gkIPActionResult, sipAuthPassword=sipAuthPassword, sbcRoutingAltRouteOptions=sbcRoutingAltRouteOptions, redirectNumberMapIp2TelNumberPlan=redirectNumberMapIp2TelNumberPlan, redirectNumberMapTel2IpRemoveFromRight=redirectNumberMapTel2IpRemoveFromRight, fastStartIsFastConnectUsed=fastStartIsFastConnectUsed, accountRegister=accountRegister, sbcIP2IPOutboundManipulationSrcIPGroupID=sbcIP2IPOutboundManipulationSrcIPGroupID, registerPrefixRowStatus=registerPrefixRowStatus, streamingRecordToID=streamingRecordToID, accountPassword=accountPassword, digitalGW=digitalGW, gkRedundancyTimeBetweenGKsLoops=gkRedundancyTimeBetweenGKsLoops, mlppDiffServ=mlppDiffServ, dstTEL2IPTable=dstTEL2IPTable, telProfileDJBufMinDelay=telProfileDJBufMinDelay, iPProfileSigIPDiffServ=iPProfileSigIPDiffServ, sbcRoutingDestTransportType=sbcRoutingDestTransportType, sbcClassificationAction=sbcClassificationAction, manipulationAddNPIandTON2CalledNumber=manipulationAddNPIandTON2CalledNumber, vmDigitPatternVmDigitPatternOnBusyExternal=vmDigitPatternVmDigitPatternOnBusyExternal, dstTEL2IPIndex=dstTEL2IPIndex, toneIndexTable=toneIndexTable, srdSettings=srdSettings, tel2IPRoutingDestHostPrefix=tel2IPRoutingDestHostPrefix, ipGroupIndex=ipGroupIndex, srcTEL2IPSuffix2Add=srcTEL2IPSuffix2Add, sbcRoutingAction=sbcRoutingAction, h323PortsRasDestPort=h323PortsRasDestPort, callerIDperPortModule=callerIDperPortModule, autoDialIndex=autoDialIndex, iPProfileEnableEarlyMedia=iPProfileEnableEarlyMedia, sbcMessageManipulationsManipulationSetID=sbcMessageManipulationsManipulationSetID, telProfileECE=telProfileECE, codersEntry=codersEntry, trunkGroupSettingsEntry=trunkGroupSettingsEntry, srcTEL2IPPrefix=srcTEL2IPPrefix, sipMiscSessionExpiresMethod=sipMiscSessionExpiresMethod, sbcMessageManipulationsActionResult=sbcMessageManipulationsActionResult, codersGroup0Name=codersGroup0Name, altRouteCauseTEL2IPReleaseCause=altRouteCauseTEL2IPReleaseCause, gkIPIndex=gkIPIndex, codersGroup0Index=codersGroup0Index, redirectNumberMapIp2TelDestinationPrefix=redirectNumberMapIp2TelDestinationPrefix, iSDNRxOverlapTable=iSDNRxOverlapTable, h323AuthPassword=h323AuthPassword, sipMiscDNSQueryType=sipMiscDNSQueryType, loggerCDRSyslogServerIP=loggerCDRSyslogServerIP, sbcMessageManipulationsRowStatus=sbcMessageManipulationsRowStatus, gwIPv6GwAppPrimaryMediaInterface=gwIPv6GwAppPrimaryMediaInterface, vmDigitPatternDigitToIgnore=vmDigitPatternDigitToIgnore, srcIP2TELSourceIPAddress=srcIP2TELSourceIPAddress, iP2TelRoutingAction=iP2TelRoutingAction, iP2TelRoutingEntry=iP2TelRoutingEntry, sipRegistration=sipRegistration, telProfileCodersGroupID=telProfileCodersGroupID, codersGroup4Index=codersGroup4Index, h323MiscH245RoundTripTime=h323MiscH245RoundTripTime, iP2TelRoutingProfileID=iP2TelRoutingProfileID, sbcAlternativeRoutingReasonsEntry=sbcAlternativeRoutingReasonsEntry, chargeCodesPeriod3EndTime=chargeCodesPeriod3EndTime, ipGroupMaxNumOfRegUsers=ipGroupMaxNumOfRegUsers, srcTEL2IPDestPrefix=srcTEL2IPDestPrefix, sipTxDTMFOptionAction=sipTxDTMFOptionAction, miscLDAPocsNumberAttributeName=miscLDAPocsNumberAttributeName, proxyIPProxyIP=proxyIPProxyIP, vmMWISourceNumber=vmMWISourceNumber, gwIPv6GwAppDualIPStackSDPMethod=gwIPv6GwAppDualIPStackSDPMethod, tonesTimeForReorderTone=tonesTimeForReorderTone, altRouteCauseIP2TELEntry=altRouteCauseIP2TELEntry, conferenceEnableDTMFReporting=conferenceEnableDTMFReporting, codersName=codersName, sbcIP2IPOutboundManipulationActionResult=sbcIP2IPOutboundManipulationActionResult, sipMiscEnableSIPS=sipMiscEnableSIPS, codersTable=codersTable, dstIP2TELNumOfDigitsToLeave=dstIP2TELNumOfDigitsToLeave, iPProfileProfileName=iPProfileProfileName, streamingID=streamingID, fastStartOpenH245OnFS=fastStartOpenH245OnFS, redirectNumberMapTel2IpAction=redirectNumberMapTel2IpAction, localISDNRBSourceTable=localISDNRBSourceTable, srdName=srdName, chargeCodesTable=chargeCodesTable, iP2TelRoutingRowStatus=iP2TelRoutingRowStatus, transferEnable=transferEnable, acDigitalOOSBehaviorForTrunkIndex=acDigitalOOSBehaviorForTrunkIndex, forwardOnBusyTrunkDestTrunkGroupId=forwardOnBusyTrunkDestTrunkGroupId, miscEnableRFC4117Transcoding=miscEnableRFC4117Transcoding, authEntry=authEntry, altRouteCauseIP2TELIndex=altRouteCauseIP2TELIndex, srcTEL2IPNumberType=srcTEL2IPNumberType, loggerGwAppCdrReportLevel=loggerGwAppCdrReportLevel, telProfileEnable911PSAP=telProfileEnable911PSAP, sbcRoutingDestAddress=sbcRoutingDestAddress, connectivityQosMaxAllowedPL=connectivityQosMaxAllowedPL, iPProfilePlayRingbackToneToIP=iPProfilePlayRingbackToneToIP, manipulationAndRouting=manipulationAndRouting, dstTEL2IPSourceIPAddress=dstTEL2IPSourceIPAddress, codersGroup3Table=codersGroup3Table, causeMapISDN2SIPTable=causeMapISDN2SIPTable, sipRetransmissionTCPTimeout=sipRetransmissionTCPTimeout, routing=routing, autoDialTable=autoDialTable, sipProxySetEnableProxyKeepAlive=sipProxySetEnableProxyKeepAlive, sbcIP2IPInboundManipulationLeaveFromRight=sbcIP2IPInboundManipulationLeaveFromRight, trunkGroupSettingsActionResult=trunkGroupSettingsActionResult, iP2TelRoutingPrefix=iP2TelRoutingPrefix, h323AuthEnableH235Security=h323AuthEnableH235Security, gkRedundancyUsed=gkRedundancyUsed, sipDTMFMinRoutingOverlapDigits=sipDTMFMinRoutingOverlapDigits, sipSASBindingMode=sipSASBindingMode, codersIndex=codersIndex, proxyIPActionResult=proxyIPActionResult, dstTEL2IPSuffix2Add=dstTEL2IPSuffix2Add, dTMFOptionsTxDTMFOption=dTMFOptionsTxDTMFOption, sbcClassificationSrcIPGroupId=sbcClassificationSrcIPGroupId, sbcIP2IPInboundManipulationTable=sbcIP2IPInboundManipulationTable, sbcRoutingDestPort=sbcRoutingDestPort, transferXferPrefix=transferXferPrefix, srdAction=srdAction, sipProxyRedundancyMode=sipProxyRedundancyMode, toneIndexActionResult=toneIndexActionResult, keypadFeaturesRejectAnonymousCall=keypadFeaturesRejectAnonymousCall, acGWRtcpXrEscIP=acGWRtcpXrEscIP, sbcAlternativeRoutingReasonsActionResult=sbcAlternativeRoutingReasonsActionResult, sipMiscSetDefaultOnIniFileProcess=sipMiscSetDefaultOnIniFileProcess, streaming=streaming, dstIP2TELSourceIP=dstIP2TELSourceIP, sbcAdmissionControlIpGroupID=sbcAdmissionControlIpGroupID, codersGroup1Rate=codersGroup1Rate, h323MiscIsSetupAckUsed=h323MiscIsSetupAckUsed, h323GKGatekeeperID=h323GKGatekeeperID, sipProxyKeepAliveTime=sipProxyKeepAliveTime, acTWCnonAllocateablePortsEntry=acTWCnonAllocateablePortsEntry, sipProxyIsTrustedProxy=sipProxyIsTrustedProxy, redirectNumberMapIp2TelNumberType=redirectNumberMapIp2TelNumberType, sbcAlternativeRoutingReasonsAction=sbcAlternativeRoutingReasonsAction, callerDisplayModule=callerDisplayModule, iPProfileSBCMediaSecurityBehaviour=iPProfileSBCMediaSecurityBehaviour, dTMFOptionsEntry=dTMFOptionsEntry, keypadFeaturesCFUncond=keypadFeaturesCFUncond, miscIsFaxUsed=miscIsFaxUsed, sipMiscGatewayName=sipMiscGatewayName, dnsInfoThirdIPAddress=dnsInfoThirdIPAddress, srcIP2TELDestPrefix=srcIP2TELDestPrefix, h323Auth=h323Auth, digitalGWLocalISDNRBSource=digitalGWLocalISDNRBSource, sipRetransmissionT2Rtx=sipRetransmissionT2Rtx, playRBToneToTrunkIndex=playRBToneToTrunkIndex, vmDigitPatternOnBusy=vmDigitPatternOnBusy, sipMiscEnableVMURI=sipMiscEnableVMURI, sbcRoutingTable=sbcRoutingTable, codersGroup1Index=codersGroup1Index, codersGroup1Action=codersGroup1Action, codersGroup3PacketizationTime=codersGroup3PacketizationTime, channelsTable=channelsTable, accountServingIPGroup=accountServingIPGroup, connectivityQosMaxAllowedDelay=connectivityQosMaxAllowedDelay, dnsInfoEntry=dnsInfoEntry, h323GKEnablePregrantARQ=h323GKEnablePregrantARQ, trunkGroupSettingsChannelSelectMode=trunkGroupSettingsChannelSelectMode, namesEntry=namesEntry, telProfileEnableDigitDelivery=telProfileEnableDigitDelivery, accountActionResult=accountActionResult, dstTEL2IPAction=dstTEL2IPAction, sbcIP2IPOutboundManipulationRowStatus=sbcIP2IPOutboundManipulationRowStatus, callWaitingWaitingBeepDuration=callWaitingWaitingBeepDuration, miscDefaultReleaseCause=miscDefaultReleaseCause, sbcRoutingRequestType=sbcRoutingRequestType, ipGroupAlwaysUseRouteTable=ipGroupAlwaysUseRouteTable, sbcAlternativeRoutingReasonsReleaseCause=sbcAlternativeRoutingReasonsReleaseCause, authActionResult=authActionResult, telProfileEntry=telProfileEntry, codersGroup0Table=codersGroup0Table, sipAuthCnonce=sipAuthCnonce, ipGroupEntry=ipGroupEntry, iPProfileRowStatus=iPProfileRowStatus, toneIndexFXSPortLast=toneIndexFXSPortLast, resourceManagementIsSelfCheckAuditUsed=resourceManagementIsSelfCheckAuditUsed, digitalGWCASSendHookFlash=digitalGWCASSendHookFlash, srcIP2TELNumOfDigitsToRemFromRight=srcIP2TELNumOfDigitsToRemFromRight, fxo=fxo, redirectNumberMapTel2IpSuffixToAdd=redirectNumberMapTel2IpSuffixToAdd, enableCallWaitingPerPortActionResult=enableCallWaitingPerPortActionResult, dstIP2TELRowStatus=dstIP2TELRowStatus, codersGroup2Index=codersGroup2Index, sipAuthChallengeCachingMode=sipAuthChallengeCachingMode, aaaRadiusAccountingType=aaaRadiusAccountingType, accountRowStatus=accountRowStatus, gkIPTable=gkIPTable, sipRetransmissionIsRtxEnable=sipRetransmissionIsRtxEnable, altRouteCauseIP2TELAction=altRouteCauseIP2TELAction, srvInfoRecordNum=srvInfoRecordNum, sipRegistrationIP=sipRegistrationIP, chargeCodesPeriod4EndTime=chargeCodesPeriod4EndTime, forwardSettingsEnable=forwardSettingsEnable, sipSASShortNumberLength=sipSASShortNumberLength, sbcIP2IPInboundManipulationManipulatedURI=sbcIP2IPInboundManipulationManipulatedURI, causeMapISDN2SIPEntry=causeMapISDN2SIPEntry, sipSubscribeEnableMWISubscription=sipSubscribeEnableMWISubscription, sipMiscEnableSRVQuery=sipMiscEnableSRVQuery, h323MiscEnableQ931Multiplexing=h323MiscEnableQ931Multiplexing, acTimersPSTNAlertTimeout=acTimersPSTNAlertTimeout, sipRetransmission=sipRetransmission, digitalGWextISDNSubaddressFormat=digitalGWextISDNSubaddressFormat, sipMiscSDPSessionOwner=sipMiscSDPSessionOwner, srcIP2TELActionResult=srcIP2TELActionResult, dID=dID, sipProxyUsed=sipProxyUsed, sbcIP2IPOutboundManipulationDestIPGroupID=sbcIP2IPOutboundManipulationDestIPGroupID, vmDigitPatternNoReason=vmDigitPatternNoReason, accountTable=accountTable, srdIndex=srdIndex, codersGroup4Entry=codersGroup4Entry, sbcIP2IPInboundManipulationIsAdditionalManipulation=sbcIP2IPInboundManipulationIsAdditionalManipulation, acBChannelNegotiationForTrunkTable=acBChannelNegotiationForTrunkTable, sasRegistrationManipulationRemoveFromRight=sasRegistrationManipulationRemoveFromRight, mediaGWMediaChannels=mediaGWMediaChannels, forwardPort=forwardPort, sipMiscIsUserPhoneInFrom=sipMiscIsUserPhoneInFrom, mlppFlashOverRTPDSCP=mlppFlashOverRTPDSCP, autoDialEntry=autoDialEntry, iSDNRxOverlapEnable=iSDNRxOverlapEnable, redirectNumberMapTel2IpTable=redirectNumberMapTel2IpTable, tel2IPRoutingTransportType=tel2IPRoutingTransportType, iP2TelRoutingTable=iP2TelRoutingTable, analogGWEnableReversalPolarity=analogGWEnableReversalPolarity, sbcMessageManipulationsCondition=sbcMessageManipulationsCondition, codersGroup0Action=codersGroup0Action, trunkTransferTable=trunkTransferTable, sipProxyAlwaysSendToProxy=sipProxyAlwaysSendToProxy, ipGroupSipReRoutingMode=ipGroupSipReRoutingMode, redirectNumberMapIp2TelRedirectPrefix=redirectNumberMapIp2TelRedirectPrefix, digitalGWR2Category=digitalGWR2Category, dstTEL2IPRowStatus=dstTEL2IPRowStatus, vmMWIOnCode=vmMWIOnCode, altRouteCause=altRouteCause, sbcClassificationSrcUsernamePrefix=sbcClassificationSrcUsernamePrefix, sbcClassificationEntry=sbcClassificationEntry, sipInterfaceEntry=sipInterfaceEntry, keypadFeaturesCFNoAnswer=keypadFeaturesCFNoAnswer, iP2TelRoutingAddress=iP2TelRoutingAddress, sbcAdmissionControlRowStatus=sbcAdmissionControlRowStatus, autoDialType=autoDialType, manipulationReplaceEmptyDstWithPortNumber=manipulationReplaceEmptyDstWithPortNumber, iSDNTransferCapabilityTable=iSDNTransferCapabilityTable, sbcAdmissionControlAction=sbcAdmissionControlAction, ipGroupProxySetId=ipGroupProxySetId, sbcAdmissionControlEntry=sbcAdmissionControlEntry, sipPortsLocalSipPort=sipPortsLocalSipPort, altRouteCauseTEL2IPEntry=altRouteCauseTEL2IPEntry, h323MiscEnableQ931Cause=h323MiscEnableQ931Cause, chargeCodesPeriod1PulseInterval=chargeCodesPeriod1PulseInterval)
mibBuilder.exportSymbols("AcGateway", enableDidPortIsUsed=enableDidPortIsUsed, phoneContextActionResult=phoneContextActionResult, acEmergencyNumbersIndex=acEmergencyNumbersIndex, sipDTMFUseDigitForSpecialDTMF=sipDTMFUseDigitForSpecialDTMF, codersGroup2PayloadType=codersGroup2PayloadType, accountContactUser=accountContactUser, redirectNumberMapTel2IpSrcTrunkGroupID=redirectNumberMapTel2IpSrcTrunkGroupID, sipProxyName=sipProxyName, sipDTMFRxDTMFOption=sipDTMFRxDTMFOption, forwardForwardedToNumber=forwardForwardedToNumber, sipRetransmissionEnablePTime=sipRetransmissionEnablePTime, resourceManagement=resourceManagement, callerIDperPortPort=callerIDperPortPort, h323AuthUserName=h323AuthUserName, authIsUsed=authIsUsed, accountIndex=accountIndex, keypadFeaturesCFBusyOrNoAnswer=keypadFeaturesCFBusyOrNoAnswer, miscT38MaxDatagramSize=miscT38MaxDatagramSize, callerIDperPortEnable=callerIDperPortEnable, miscEnableDelayedOffer=miscEnableDelayedOffer, sipMiscEnableRpiHeader=sipMiscEnableRpiHeader, autoDialIsUsed=autoDialIsUsed, toneIndexRowStatus=toneIndexRowStatus, accountUsername=accountUsername, sipMiscMinSE=sipMiscMinSE, sipTxDTMFOptionRowStatus=sipTxDTMFOptionRowStatus, sipDTMFOutOfBandDtmfFormat=sipDTMFOutOfBandDtmfFormat, tel2IPRoutingActionResult=tel2IPRoutingActionResult, dstTEL2IPActionResult=dstTEL2IPActionResult, redirectNumberMapTel2IpRemoveFromLeft=redirectNumberMapTel2IpRemoveFromLeft, callerIDEnable=callerIDEnable, ipGroupType=ipGroupType, pSTNAlertTimeoutTable=pSTNAlertTimeoutTable, sipInterfaceSRD=sipInterfaceSRD, enableCallWaitingPerPortEntry=enableCallWaitingPerPortEntry, sipAuthUserName=sipAuthUserName, vmDigitPatternConnectCode=vmDigitPatternConnectCode, srdBlockUnRegUsers=srdBlockUnRegUsers, sipSASLocalSIPTlsPort=sipSASLocalSIPTlsPort, gkIPGateleeperID=gkIPGateleeperID, dstTEL2IPSourcePrefix=dstTEL2IPSourcePrefix, causeMapSIP2ISDNSIPResponse=causeMapSIP2ISDNSIPResponse, dIDEnableWink=dIDEnableWink, screeningIndicators2ISDN=screeningIndicators2ISDN, sbcRoutingSrcHost=sbcRoutingSrcHost, enableDidPortIndex=enableDidPortIndex, srcTEL2IPAction=srcTEL2IPAction, connectivityQosSamplesToAvarage=connectivityQosSamplesToAvarage, streamingStopRecordingOnNoSpeachTimeout=streamingStopRecordingOnNoSpeachTimeout, sbcIP2IPInboundManipulationSrcUsernamePrefix=sbcIP2IPInboundManipulationSrcUsernamePrefix, sbcRoutingDestHost=sbcRoutingDestHost, dstIP2TELNumOfStrippedDigits=dstIP2TELNumOfStrippedDigits, iP2TelRoutingSourceIPGroupID=iP2TelRoutingSourceIPGroupID, channelsProfileID=channelsProfileID, miscStaticNATIP=miscStaticNATIP, sbcClassificationSrcHost=sbcClassificationSrcHost, sbcAlternativeRoutingReasonsIndex=sbcAlternativeRoutingReasonsIndex, miscT38UseRTPPort=miscT38UseRTPPort, manipulationSetIp2TelRedirectReason=manipulationSetIp2TelRedirectReason, codersGroup2Name=codersGroup2Name, codersGroup4PayloadType=codersGroup4PayloadType, mlpp=mlpp, srcIP2TELPrefix=srcIP2TELPrefix, sipProxySetProxyLoadBalancingMethod=sipProxySetProxyLoadBalancingMethod, trunkGroupSettingsMwiInterrogationType=trunkGroupSettingsMwiInterrogationType, altRouteCauseIP2TELReleaseCause=altRouteCauseIP2TELReleaseCause, srvInfoRowStatus=srvInfoRowStatus, iP2TelRoutingSrcPrefix=iP2TelRoutingSrcPrefix, miscEnableNRTSubscription=miscEnableNRTSubscription, dialingDialPlanIndex=dialingDialPlanIndex, srvInfoWeight=srvInfoWeight, telProfileFaxTransportMode=telProfileFaxTransportMode, miscDetFaxOnAnswerTone=miscDetFaxOnAnswerTone, chargeCodesPeriod3PulsesOnAnswer=chargeCodesPeriod3PulsesOnAnswer, manipulationUseSourceNumberAsDisplayName=manipulationUseSourceNumberAsDisplayName, phoneContextRowStatus=phoneContextRowStatus, forwardEntry=forwardEntry, sipProxyIsFallbackUsed=sipProxyIsFallbackUsed, sbcIP2IPOutboundManipulationDestUsernamePrefix=sbcIP2IPOutboundManipulationDestUsernamePrefix, sipMiscPAssertedUserName=sipMiscPAssertedUserName, dTMFOptionsTable=dTMFOptionsTable, gkRAIHighThreshold=gkRAIHighThreshold, iPProfilePreference=iPProfilePreference, redirectNumberMapTel2IpDestinationPrefix=redirectNumberMapTel2IpDestinationPrefix, progressIndicatorToISDNValue=progressIndicatorToISDNValue, dialingEnableDigitDelivery=dialingEnableDigitDelivery, h323GKIsGkFallbackUsed=h323GKIsGkFallbackUsed, sipProxySetProxyKeepAliveTime=sipProxySetProxyKeepAliveTime, rtpOnlyModeForTrunkTable=rtpOnlyModeForTrunkTable, fxoWaitForDialTone=fxoWaitForDialTone, acDigitalOOSBehaviorForTrunkTable=acDigitalOOSBehaviorForTrunkTable, sipRegistrationRegistrarName=sipRegistrationRegistrarName, telProfileMWIanalogLamp=telProfileMWIanalogLamp, dnsInfoFourthIPAddress=dnsInfoFourthIPAddress, digitalGWPIForDisconnectMsg=digitalGWPIForDisconnectMsg, miscReliableConnectionPersistentMode=miscReliableConnectionPersistentMode, common=common, supServicesHoldFormat=supServicesHoldFormat, phoneContextNPI=phoneContextNPI, portName=portName, forwardOnBusyTrunkDestRowStatus=forwardOnBusyTrunkDestRowStatus, miscDisconnectOnSilence=miscDisconnectOnSilence, sipTxDTMFOptionTable=sipTxDTMFOptionTable, sbcIP2IPInboundManipulationRemoveFromLeft=sbcIP2IPInboundManipulationRemoveFromLeft, altRouteCauseIP2TELRowStatus=altRouteCauseIP2TELRowStatus, gkIPGatekeeperIP=gkIPGatekeeperIP, srcTEL2IPTable=srcTEL2IPTable, manipulationSetIp2TelRedirectScreeningIndicator=manipulationSetIp2TelRedirectScreeningIndicator, dIDEnable=dIDEnable, iPProfileProgressIndicatorToIP=iPProfileProgressIndicatorToIP, acEmergencyNumbersNumbers=acEmergencyNumbersNumbers, h323DTMFHookFlashOption=h323DTMFHookFlashOption, iPProfileSBCAllowedCodersMode=iPProfileSBCAllowedCodersMode, h323GK=h323GK, digitalGWEnableUuiIp2Tel=digitalGWEnableUuiIp2Tel, supServicesEnableMOH=supServicesEnableMOH, namesActionResult=namesActionResult, gkRedundancy=gkRedundancy, ipGroups=ipGroups, tonesStutterToneDuration=tonesStutterToneDuration, dstTEL2IPPrefixToAdd=dstTEL2IPPrefixToAdd, sipInterfaceActionResult=sipInterfaceActionResult, callerIDperPortIsUsed=callerIDperPortIsUsed, iSDNRxOverlapIndex=iSDNRxOverlapIndex, h323GKRegistrationTime=h323GKRegistrationTime, vxml=vxml, redirectNumberMapIp2TelSourceAddress=redirectNumberMapIp2TelSourceAddress, miscNRTSubscriptionRetryTime=miscNRTSubscriptionRetryTime, sbcClassificationRowStatus=sbcClassificationRowStatus, sbcClassificationDestUsernamePrefix=sbcClassificationDestUsernamePrefix, tonesFirstCallRBTId=tonesFirstCallRBTId, sipMiscRTPOnlyMode=sipMiscRTPOnlyMode, manipulationAddPortAsPrefix=manipulationAddPortAsPrefix, sipMiscXChannelHeader=sipMiscXChannelHeader, callerID=callerID, srvInfoWeight3=srvInfoWeight3, telProfileEnableVoiceMailDelay=telProfileEnableVoiceMailDelay, registerPrefixIndex=registerPrefixIndex, callWaitingNumberOfIndications=callWaitingNumberOfIndications, sipMisc3xxBehavior=sipMisc3xxBehavior, announcementID=announcementID, vmDigitPatternVmDigitPatternOnDNDExternal=vmDigitPatternVmDigitPatternOnDNDExternal, telProfileProgressIndicatorToIP=telProfileProgressIndicatorToIP, chargeCodesPeriod3PulseInterval=chargeCodesPeriod3PulseInterval, callWaitingEnable=callWaitingEnable, aaa=aaa, trunkGroupSettingsAction=trunkGroupSettingsAction, ipGroupProfileId=ipGroupProfileId, sipRegistrationName=sipRegistrationName, mlppDefaultNamespace=mlppDefaultNamespace, dstIP2TELPrefix=dstIP2TELPrefix, dnsInfoDomainName=dnsInfoDomainName, sbcAdmissionControlLimitType=sbcAdmissionControlLimitType, ipGroupRowStatus=ipGroupRowStatus, redirectNumberMapTel2IpNumberPlan=redirectNumberMapTel2IpNumberPlan, srcIP2TELNumOfDigitsToLeave=srcIP2TELNumOfDigitsToLeave, routingEnableDigitDelivery2IP=routingEnableDigitDelivery2IP, registerPrefixNumberPlan=registerPrefixNumberPlan, resourceManagementMaxActiveCalls=resourceManagementMaxActiveCalls, h323ConnectionModes=h323ConnectionModes, sipProxyLoadBalancingMethod=sipProxyLoadBalancingMethod, logger=logger, acEmergency=acEmergency, gkRAILoopTime=gkRAILoopTime, resourceManagementMaxCallDuration=resourceManagementMaxCallDuration, sbcIP2IPInboundManipulationSrcIPGroupID=sbcIP2IPInboundManipulationSrcIPGroupID, miscDelayTime=miscDelayTime, callerIDperPortTable=callerIDperPortTable, acGWRtcpXrEscTransportType=acGWRtcpXrEscTransportType, sipMiscEnablePChargingVector=sipMiscEnablePChargingVector, dnsInfoActionResult=dnsInfoActionResult, keypadFeaturesCLIR=keypadFeaturesCLIR, dnsInfoTable=dnsInfoTable, playRBToneToTrunkTable=playRBToneToTrunkTable, callerIDperPortActionResult=callerIDperPortActionResult, ipGroupActionResult=ipGroupActionResult, telProfileEnableAGC=telProfileEnableAGC, sipMisc=sipMisc, digitalGWEnableISDNTunnelingTel2Ip=digitalGWEnableISDNTunnelingTel2Ip, sbcAlternativeRoutingReasonsRowStatus=sbcAlternativeRoutingReasonsRowStatus, dTMFOptionsActionResult=dTMFOptionsActionResult, srcIP2TELEntry=srcIP2TELEntry, dstIP2TELActionResult=dstIP2TELActionResult, dstIP2TELTable=dstIP2TELTable, progressIndicatorToISDNTable=progressIndicatorToISDNTable, acTWCnonAllocateablePortsIndex=acTWCnonAllocateablePortsIndex, transfer=transfer, proxyIPRowStatus=proxyIPRowStatus, redirectNumberMapTel2IpSrcIPGroupID=redirectNumberMapTel2IpSrcIPGroupID, codersGroup2SilenceSuppression=codersGroup2SilenceSuppression, miscCallForwardRingToneID=miscCallForwardRingToneID, miscKeyCallPickup=miscKeyCallPickup, mlppE911Behavior=mlppE911Behavior, sipInterfaceTCPPort=sipInterfaceTCPPort, h323GKGKAutoDiscoveryIP=h323GKGKAutoDiscoveryIP, sipAuthMode=sipAuthMode, iEAddIEInSetup=iEAddIEInSetup, srcIP2TELSuffix2Add=srcIP2TELSuffix2Add, sipSASEnable=sipSASEnable, keypadFeaturesCFDoNotDisturb=keypadFeaturesCFDoNotDisturb, causeMapISDN2SIPAction=causeMapISDN2SIPAction, manipulationAndRoutingAltRoutingTel2IpKeepAliveTime=manipulationAndRoutingAltRoutingTel2IpKeepAliveTime, sipMiscUseSIPTgrp=sipMiscUseSIPTgrp, manipulationAddPhoneContextAsPrefix=manipulationAddPhoneContextAsPrefix, iPProfileIndex=iPProfileIndex, dnsInfoSecondIPAddress=dnsInfoSecondIPAddress, sbcIP2IPOutboundManipulationManipulatedURI=sbcIP2IPOutboundManipulationManipulatedURI, forwardAction=forwardAction, sipPorts=sipPorts, codersGroup3PayloadType=codersGroup3PayloadType, vmSMDI=vmSMDI, telProfileEnableEarlyMedia=telProfileEnableEarlyMedia, trunkGroupSettingsTable=trunkGroupSettingsTable, sbcEnable=sbcEnable, srcIP2TELAction=srcIP2TELAction, namesModule=namesModule, telProfilePreference=telProfilePreference, telProfileEnableDIDWink=telProfileEnableDIDWink, sasRegistrationManipulationAction=sasRegistrationManipulationAction, sbcIP2IPOutboundManipulationSrcHost=sbcIP2IPOutboundManipulationSrcHost, sipMiscAddTon2Rpi=sipMiscAddTon2Rpi, accountEntry=accountEntry, redirectNumberMapTel2IpIsPresentationRestricted=redirectNumberMapTel2IpIsPresentationRestricted, miscFaxCNGMode=miscFaxCNGMode, transcodingID=transcodingID, h323MiscSendChannelNonStandard=h323MiscSendChannelNonStandard, causeMapSIP2ISDNTable=causeMapSIP2ISDNTable, dialingTimeBetweenDigits=dialingTimeBetweenDigits, redirectNumberMapIp2TelIndex=redirectNumberMapIp2TelIndex, manipulation=manipulation, sbcRoutingDestUsernamePrefix=sbcRoutingDestUsernamePrefix, dialingIsSpecialDigits=dialingIsSpecialDigits, announcementToneID=announcementToneID, srvInfoDNSName3=srvInfoDNSName3, fxoAutoDialPlayBusyTone=fxoAutoDialPlayBusyTone, causeMapISDN2SIPRowStatus=causeMapISDN2SIPRowStatus, h323DTMFRxDtmfOption=h323DTMFRxDtmfOption, sipMiscOPTIONSUserPart=sipMiscOPTIONSUserPart, digitalGWSupportRedirectInFacility=digitalGWSupportRedirectInFacility, announcementNumOfEndPoints=announcementNumOfEndPoints, sbcRoutingIndex=sbcRoutingIndex, sipMiscMultiPtimeFormat=sipMiscMultiPtimeFormat, iPProfileFaxTransportMode=iPProfileFaxTransportMode, srcIP2TELNumOfStrippedDigits=srcIP2TELNumOfStrippedDigits, sbcIP2IPOutboundManipulationEntry=sbcIP2IPOutboundManipulationEntry, codersGroup4PacketizationTime=codersGroup4PacketizationTime, streamingMscmlID=streamingMscmlID, codersGroup1RowStatus=codersGroup1RowStatus, sipRetransmissionT1Rtx=sipRetransmissionT1Rtx, codersGroup2RowStatus=codersGroup2RowStatus, coders=coders, sipSubscribeRetryTime=sipSubscribeRetryTime, sipProxyEnableKeepAlive=sipProxyEnableKeepAlive, causeMapSIP2ISDNEntry=causeMapSIP2ISDNEntry)
mibBuilder.exportSymbols("AcGateway", acGWRtcpXrReportMode=acGWRtcpXrReportMode, srcIP2TELNumberType=srcIP2TELNumberType, keypadFeaturesKeypadFeaturesCWDeact=keypadFeaturesKeypadFeaturesCWDeact, fxoWaitForDialTime=fxoWaitForDialTime, phoneContextPhoneContext=phoneContextPhoneContext, sipAuthMutualAuthenticationMode=sipAuthMutualAuthenticationMode, telProfileDisconnectOnBusyTone=telProfileDisconnectOnBusyTone, ipGroupContactUser=ipGroupContactUser, forwardOnBusyTrunkDestIndex=forwardOnBusyTrunkDestIndex, codersGroup4Name=codersGroup4Name, sipSASEnableENUM=sipSASEnableENUM, channelsEntry=channelsEntry, dnsInfoIndex=dnsInfoIndex, altRouteCauseTEL2IPRowStatus=altRouteCauseTEL2IPRowStatus, mWIServerIP=mWIServerIP, fxsFXSOOSBehavior=fxsFXSOOSBehavior, codersGroup0ActionRes=codersGroup0ActionRes, pIForDisconnectMsgValue=pIForDisconnectMsgValue, sipSASLocalSIPUdpPort=sipSASLocalSIPUdpPort, sbcRoutingDestType=sbcRoutingDestType, digitalGWextCopyDest2RedirectNumber=digitalGWextCopyDest2RedirectNumber, tones=tones, srvInfoActionResult=srvInfoActionResult, registerPrefixNumberType=registerPrefixNumberType, iPProfileDisconnectOnBrokenConnection=iPProfileDisconnectOnBrokenConnection, srcIP2TELTable=srcIP2TELTable, tel2IPRoutingEntry=tel2IPRoutingEntry, trunkGroupSettingsServingIPGroup=trunkGroupSettingsServingIPGroup, enableDidPortAction=enableDidPortAction, chargeCodesAction=chargeCodesAction, srcIP2TELPrefixToAdd=srcIP2TELPrefixToAdd, sipInterfaceTLSPort=sipInterfaceTLSPort, vmSMDITimeOut=vmSMDITimeOut, callerDisplayTable=callerDisplayTable, gwSecurityPeerHostNameVerificationMode=gwSecurityPeerHostNameVerificationMode, PYSNMP_MODULE_ID=acGateway, causeMapSIP2ISDNActionResult=causeMapSIP2ISDNActionResult, iPProfileDJBufOptFactor=iPProfileDJBufOptFactor, sipProxyDNSQueryType=sipProxyDNSQueryType, acRemoveCallingNameForTrunkMode=acRemoveCallingNameForTrunkMode, sipProxySetTable=sipProxySetTable, registerPrefixActionResult=registerPrefixActionResult, redirectNumberMapIp2TelSuffixToAdd=redirectNumberMapIp2TelSuffixToAdd, iE=iE, codersGroup4RowStatus=codersGroup4RowStatus, pIForDisconnectMsgEntry=pIForDisconnectMsgEntry, tel2IPRoutingDestPort=tel2IPRoutingDestPort, h323MiscH245InitTimeOut=h323MiscH245InitTimeOut, h323MiscIsSetupIncludeNum=h323MiscIsSetupIncludeNum, telProfileDialPlanIndex=telProfileDialPlanIndex, autoDialAction=autoDialAction, digitalGWextRemoveCLIWhenRestricted=digitalGWextRemoveCLIWhenRestricted, iPProfileCopyDest2RedirectNumber=iPProfileCopyDest2RedirectNumber, enableCallWaitingPerPortTable=enableCallWaitingPerPortTable, registerPrefixEntry=registerPrefixEntry, sipSASRegistrationTime=sipSASRegistrationTime, sipProxySendInviteToProxy=sipProxySendInviteToProxy, supServicesHeldTimeout=supServicesHeldTimeout, forwardForwardType=forwardForwardType, sbcEnableISBCApplication=sbcEnableISBCApplication, causeMapSIP2ISDNIndex=causeMapSIP2ISDNIndex, iPProfileEntry=iPProfileEntry, registerPrefixAction=registerPrefixAction, sasRegistrationManipulationIndex=sasRegistrationManipulationIndex, dstIP2TELSuffix2Add=dstIP2TELSuffix2Add, manipulationAddPrefixToRedirectNumber=manipulationAddPrefixToRedirectNumber, sipDTMF=sipDTMF, miscDisconnectOnBusyTone=miscDisconnectOnBusyTone, h323SourceEncodType=h323SourceEncodType, srdMaxNumOfRegUsers=srdMaxNumOfRegUsers, chargeCodesPeriod2PulseInterval=chargeCodesPeriod2PulseInterval, codersGroup3Index=codersGroup3Index, tel2IPRoutingTable=tel2IPRoutingTable, forwardActionResult=forwardActionResult, digitalGWEnableISDNTunnelingIp2Tel=digitalGWEnableISDNTunnelingIp2Tel, voiceMail=voiceMail, miscSilenceDisconnectTimeout=miscSilenceDisconnectTimeout, sipInterfaceIndex=sipInterfaceIndex, gwSecuritySRTPofferedSuites=gwSecuritySRTPofferedSuites, srdEntry=srdEntry, namesPortName=namesPortName, supServicesNameID=supServicesNameID, sipInterfaceNetworkInterface=sipInterfaceNetworkInterface, h323GKGwRegistrType=h323GKGwRegistrType, iPProfileCodersGroupID=iPProfileCodersGroupID, fxoBetweenRingTime=fxoBetweenRingTime, trunkGroupSettingsRowStatus=trunkGroupSettingsRowStatus, mlppDefaultCallPriority=mlppDefaultCallPriority, chargeCodesPeriod2PulsesOnAnswer=chargeCodesPeriod2PulsesOnAnswer, h323GKAlternativeGKUsed=h323GKAlternativeGKUsed, dTMFOptionsRowStatus=dTMFOptionsRowStatus, sbcMessageManipulationsTable=sbcMessageManipulationsTable, sasRegistrationManipulationActionResult=sasRegistrationManipulationActionResult, enableDidPortModule=enableDidPortModule, loggerGwDebugLevel=loggerGwDebugLevel, acRemoveCallingNameForTrunkIndex=acRemoveCallingNameForTrunkIndex, supServicesBlindTransferDisconnectTimeout=supServicesBlindTransferDisconnectTimeout, namesPort=namesPort, sipMiscSourceNumberPreference=sipMiscSourceNumberPreference, channelsSettingSelectMode=channelsSettingSelectMode, dnsInfoAction=dnsInfoAction, iP2TelRoutingTrunkGroupID=iP2TelRoutingTrunkGroupID, srcTEL2IPNumberPlan=srcTEL2IPNumberPlan, supServicesSendMeteringMessageToIP=supServicesSendMeteringMessageToIP, sbcMessageManipulationsActionType=sbcMessageManipulationsActionType, forwardTable=forwardTable, dTMFOptionsAction=dTMFOptionsAction, sipMiscSend180ForCallWaiting=sipMiscSend180ForCallWaiting, authAction=authAction, sbcRoutingEntry=sbcRoutingEntry, sipMiscEnableGRUU=sipMiscEnableGRUU, forwardOnBusyTrunkDestAction=forwardOnBusyTrunkDestAction, tel2IPRoutingRowStatus=tel2IPRoutingRowStatus, iSDNRxOverlapEntry=iSDNRxOverlapEntry, sipMiscEnableReasonHeader=sipMiscEnableReasonHeader, gkIPRowStatus=gkIPRowStatus, codersGroup2Entry=codersGroup2Entry, miscT38FaxMaxBufferSize=miscT38FaxMaxBufferSize, iPProfileRTPRedundancyDepth=iPProfileRTPRedundancyDepth, tonesPrecedenceRingingType=tonesPrecedenceRingingType, iPProfileActionResult=iPProfileActionResult, sipRegistrationRegistrationRetryTime=sipRegistrationRegistrationRetryTime, iPProfileSCE=iPProfileSCE, sbcIP2IPOutboundManipulationAction=sbcIP2IPOutboundManipulationAction, sipSASEnableRecordRoute=sipSASEnableRecordRoute, sipRegistrationTimeDivider=sipRegistrationTimeDivider, sbcClassificationSrcAddress=sbcClassificationSrcAddress, analogGWRegretTime=analogGWRegretTime, dstTEL2IPNumOfDigitsToLeave=dstTEL2IPNumOfDigitsToLeave, dstTEL2IPEntry=dstTEL2IPEntry, manipulationAndRoutingPreferRouteTable=manipulationAndRoutingPreferRouteTable, iPProfileAction=iPProfileAction, srcTEL2IPIndex=srcTEL2IPIndex, redirectNumberMapIp2TelPrefixToAdd=redirectNumberMapIp2TelPrefixToAdd, supServicesConferenceEnable3Way=supServicesConferenceEnable3Way, iPProfileDJBufMinDelay=iPProfileDJBufMinDelay, vxmlID=vxmlID, sipMiscAssertedIDMode=sipMiscAssertedIDMode, sipMiscIsUserPhone=sipMiscIsUserPhone, accounts=accounts, digitalGWext=digitalGWext, codersGroup4Table=codersGroup4Table, sbcAlternativeRoutingReasonsTable=sbcAlternativeRoutingReasonsTable, srcTEL2IPPresentation=srcTEL2IPPresentation, sbcAdmissionControlActionResult=sbcAdmissionControlActionResult, sipMiscSubject=sipMiscSubject, iP2TelRoutingIndex=iP2TelRoutingIndex, sipDTMFIsHookFlashUsed=sipDTMFIsHookFlashUsed, sbcMessageManipulationsEntry=sbcMessageManipulationsEntry, progressIndicatorToISDNEntry=progressIndicatorToISDNEntry, callerIDperPortAction=callerIDperPortAction, dstTEL2IPSourceIPGroupID=dstTEL2IPSourceIPGroupID, sbcAdmissionControlLimitPerUser=sbcAdmissionControlLimitPerUser, sipSAS=sipSAS, sipMiscUseSIPURIForDiversionHeader=sipMiscUseSIPURIForDiversionHeader, sbcIP2IPOutboundManipulationRemoveFromLeft=sbcIP2IPOutboundManipulationRemoveFromLeft, srvInfoEntry=srvInfoEntry, manipulationAddTrunkGroupAsPrefixToSource=manipulationAddTrunkGroupAsPrefixToSource, namesAction=namesAction, telProfileIsTwoStageDial=telProfileIsTwoStageDial, analogGW=analogGW, trunkGroupSettingsContactUser=trunkGroupSettingsContactUser, digitalGWextEnableQSIGTunneling=digitalGWextEnableQSIGTunneling, ipGroupAction=ipGroupAction, channelsStartingPhoneNum=channelsStartingPhoneNum, digitalGWConnectOnProgressInd=digitalGWConnectOnProgressInd, autoDialModule=autoDialModule, acTimersIPAlertTimeout=acTimersIPAlertTimeout, sipProxySetIndex=sipProxySetIndex, codersGroup1Name=codersGroup1Name, telProfileIsFaxUsed=telProfileIsFaxUsed, registerPrefixPrefix=registerPrefixPrefix, sbcIP2IPInboundManipulationRequestType=sbcIP2IPInboundManipulationRequestType, codersGroup1Table=codersGroup1Table, ipGroupRoutingMode=ipGroupRoutingMode, codersGroup3Entry=codersGroup3Entry, iPProfileMediaIPVersionPreference=iPProfileMediaIPVersionPreference, mlppPriorityRTPDSCP=mlppPriorityRTPDSCP, sbcAdmissionControlRequestDirection=sbcAdmissionControlRequestDirection, mWIExpirationTime=mWIExpirationTime, sbcRoutingDestIPGroupId=sbcRoutingDestIPGroupId, h323Misc=h323Misc, connectivityQos=connectivityQos, forwardTimeForNoReply=forwardTimeForNoReply, sipDTMFIsDTMFUsed=sipDTMFIsDTMFUsed, h323GKCanMapAliases=h323GKCanMapAliases, miscIsCiscoSceMode=miscIsCiscoSceMode, progressIndicatorToISDNIndex=progressIndicatorToISDNIndex, vmDigitPattern=vmDigitPattern, accountHostName=accountHostName, gkIPEntry=gkIPEntry, altRouteCauseTEL2IPActionResult=altRouteCauseTEL2IPActionResult, vmDigitPatternVmDigitPatternOnNoAnswerExternal=vmDigitPatternVmDigitPatternOnNoAnswerExternal, proxyIPAction=proxyIPAction, channelsLastTrunkID=channelsLastTrunkID, telProfileDTMFVolume=telProfileDTMFVolume, rtpOnlyModeForTrunkEntry=rtpOnlyModeForTrunkEntry, gwIPv6GwAppSecondaryMediaInterface=gwIPv6GwAppSecondaryMediaInterface, sipProxySetIsProxyHotSwap=sipProxySetIsProxyHotSwap, dialingDigitMapping=dialingDigitMapping, srvInfoPriority3=srvInfoPriority3, sipMiscPrackMode=sipMiscPrackMode, callerDisplayRestriction=callerDisplayRestriction, manipulationAndRoutingAltRoutingTel2IpQosAllowTheNCall=manipulationAndRoutingAltRoutingTel2IpQosAllowTheNCall, sbcIP2IPInboundManipulationRemoveFromRight=sbcIP2IPInboundManipulationRemoveFromRight, tel2IPRoutingDestIPGroupID=tel2IPRoutingDestIPGroupID, dstTEL2IPPrefix=dstTEL2IPPrefix, codersGroup1PayloadType=codersGroup1PayloadType, codersActionResult=codersActionResult, srvInfoDNSName=srvInfoDNSName, codersGroup1Entry=codersGroup1Entry, supServicesEnableHold=supServicesEnableHold, srcTEL2IPSourceIPGroupID=srcTEL2IPSourceIPGroupID, telProfileVoiceVolume=telProfileVoiceVolume, srvInfoWeight2=srvInfoWeight2, srvInfoPriority=srvInfoPriority, codersGroup2Rate=codersGroup2Rate, redirectNumberMapTel2IpSourceAddress=redirectNumberMapTel2IpSourceAddress, sasRegistrationManipulationEntry=sasRegistrationManipulationEntry, tel2IPRoutingChargeCode=tel2IPRoutingChargeCode, redirectNumberMapTel2IpActionResult=redirectNumberMapTel2IpActionResult, supServicesConferenceEstablishCode=supServicesConferenceEstablishCode, chargeCodesPeriod1PulsesOnAnswer=chargeCodesPeriod1PulsesOnAnswer, srvInfoIndex=srvInfoIndex, vmMWIOffCode=vmMWIOffCode, pSTNAlertTimeoutEntry=pSTNAlertTimeoutEntry, sipInterfaceUDPPort=sipInterfaceUDPPort, authPort=authPort, resourceManagementDisconnectOnBrokenConnection=resourceManagementDisconnectOnBrokenConnection, phoneContextTable=phoneContextTable, forwardOnBusyTrunkDestEntry=forwardOnBusyTrunkDestEntry, altRouteCauseTEL2IPAction=altRouteCauseTEL2IPAction, trunkGroupSettingsGatewayName=trunkGroupSettingsGatewayName, dstTEL2IPNumberType=dstTEL2IPNumberType, resourceManagementOverloadSensitivityLevel=resourceManagementOverloadSensitivityLevel, vmDigitPatternOnNoAnswer=vmDigitPatternOnNoAnswer, authIndex=authIndex, tel2IPRoutingSourceTrunkGroupID=tel2IPRoutingSourceTrunkGroupID, sipMiscEnableContactRestriction=sipMiscEnableContactRestriction, srcIP2TELIndex=srcIP2TELIndex, sipDTMFDisableAutoMute=sipDTMFDisableAutoMute, enableCallWaitingPerPortEnable=enableCallWaitingPerPortEnable, sbcRoutingRowStatus=sbcRoutingRowStatus, transcoding=transcoding, fxsSetOOSOnRegistrationFail=fxsSetOOSOnRegistrationFail, channelsActionResult=channelsActionResult, channelsRowStatus=channelsRowStatus, redirectNumberMapTel2IpRedirectPrefix=redirectNumberMapTel2IpRedirectPrefix, sipProxySetRowStatus=sipProxySetRowStatus, callerDisplayCallerDisplay=callerDisplayCallerDisplay, acGateway=acGateway, screeningIndicators2Ip=screeningIndicators2Ip, gwSecurityTLSRemoteSubjectName=gwSecurityTLSRemoteSubjectName, dstTEL2IPNumOfDigitsToRemFromRight=dstTEL2IPNumOfDigitsToRemFromRight)
mibBuilder.exportSymbols("AcGateway", sipMiscOfferUnencryptedSRTCP=sipMiscOfferUnencryptedSRTCP, codersGroup4SilenceSuppression=codersGroup4SilenceSuppression, sipProxySetActionResult=sipProxySetActionResult, progressIndicators2ISDN=progressIndicators2ISDN, sipPortsDestinationPort=sipPortsDestinationPort, sbcIP2IPInboundManipulationDestUsernamePrefix=sbcIP2IPInboundManipulationDestUsernamePrefix, h323Ports=h323Ports, forwardModule=forwardModule, sipSASProxySet=sipSASProxySet, h323H323IDString=h323H323IDString, iPProfileCngDetectorMode=iPProfileCngDetectorMode, srvInfoTransportType=srvInfoTransportType, fxs=fxs, acEmergencyNumbersTable=acEmergencyNumbersTable, sipSASLocalSIPTcpPort=sipSASLocalSIPTcpPort, sipRegistrationTimeThreshold=sipRegistrationTimeThreshold, chargeCodesRowStatus=chargeCodesRowStatus, telProfileSwapTelToIpPhoneNumbers=telProfileSwapTelToIpPhoneNumbers, redirectNumberMapTel2IpRowStatus=redirectNumberMapTel2IpRowStatus, manipulationAddTrunkGroupAsPrefix=manipulationAddTrunkGroupAsPrefix, codersGroup3Action=codersGroup3Action, dstTEL2IPSourceTrunkGroupID=dstTEL2IPSourceTrunkGroupID, misc=misc, sipTxDTMFOptionEntry=sipTxDTMFOptionEntry, sbcIP2IPInboundManipulationAction=sbcIP2IPInboundManipulationAction, vmMWISuffixCode=vmMWISuffixCode, sbcIP2IPInboundManipulationIndex=sbcIP2IPInboundManipulationIndex, acRemoveCallingNameForTrunkEntry=acRemoveCallingNameForTrunkEntry, srdTable=srdTable, ipGroupTable=ipGroupTable, fxsCutThrough=fxsCutThrough, mediaGW=mediaGW, dstIP2TELNumberPlan=dstIP2TELNumberPlan, sipPortsTLSLocalSipPort=sipPortsTLSLocalSipPort, sbcRoutingDestSRDId=sbcRoutingDestSRDId, playRBToneToTrunkValue=playRBToneToTrunkValue, h323GKUseRedundantGKOnRRJ=h323GKUseRedundantGKOnRRJ, dstIP2TELNumOfDigitsToRemFromRight=dstIP2TELNumOfDigitsToRemFromRight, redirectNumberMapIp2TelRemoveFromLeft=redirectNumberMapIp2TelRemoveFromLeft, altRouteCauseIP2TELTable=altRouteCauseIP2TELTable, sipMiscEnableHistoryInfo=sipMiscEnableHistoryInfo, aMDTimeOut=aMDTimeOut, codersGroup3ActionRes=codersGroup3ActionRes, mWI=mWI, mlppPreemptionToneDuration=mlppPreemptionToneDuration, ipGroupDescription=ipGroupDescription, localISDNRBSourceIndex=localISDNRBSourceIndex, srvInfoAction=srvInfoAction, conference=conference, srvInfoPort3=srvInfoPort3, sbcAdmissionControlSrdID=sbcAdmissionControlSrdID, keypadFeaturesCFDeact=keypadFeaturesCFDeact, mWIServerTransportType=mWIServerTransportType, gkRAIEnable=gkRAIEnable, srvInfoPort2=srvInfoPort2, sbcMessageManipulationsMessageType=sbcMessageManipulationsMessageType, sipMiscEnableEarlyMedia=sipMiscEnableEarlyMedia, codersGroup0PayloadType=codersGroup0PayloadType, aMD=aMD, manipulationCIDNotification=manipulationCIDNotification, profile=profile, miscEnableNetworkISDNTransfer=miscEnableNetworkISDNTransfer, trunkTransferEntry=trunkTransferEntry, vmDigitPatternExternalCall=vmDigitPatternExternalCall, channelsTrunkID=channelsTrunkID, codersGroup1ActionRes=codersGroup1ActionRes, codersGroup3Rate=codersGroup3Rate, h323PortsH323BasePort=h323PortsH323BasePort, iSDNTransferCapabilityEntry=iSDNTransferCapabilityEntry, channelsLastCh=channelsLastCh, namesIndex=namesIndex, digitalGWISDNTransferCapability=digitalGWISDNTransferCapability, digitalGWISDNRxOverlap=digitalGWISDNRxOverlap, sbcIP2IPInboundManipulationActionResult=sbcIP2IPInboundManipulationActionResult, sipSubscribeSubscriptionMode=sipSubscribeSubscriptionMode, codersGroup0Rate=codersGroup0Rate, vmDigitPatternInternalCall=vmDigitPatternInternalCall, telProfileTable=telProfileTable, h323GKEnableGKAutoDiscovery=h323GKEnableGKAutoDiscovery, mlppNormalizedServiceDomain=mlppNormalizedServiceDomain, sipMiscUserAgentDisplayInfo=sipMiscUserAgentDisplayInfo, accountAction=accountAction, miscRFC2833PayloadType=miscRFC2833PayloadType, dstIP2TELPrefixToAdd=dstIP2TELPrefixToAdd, ipGroupEnableSurvivability=ipGroupEnableSurvivability, sipProxyUseGatewayNameForOptions=sipProxyUseGatewayNameForOptions, callerDisplayEntry=callerDisplayEntry, sbcIP2IPOutboundManipulationDestHost=sbcIP2IPOutboundManipulationDestHost, sipMiscISubNumberOfDigits=sipMiscISubNumberOfDigits, miscGracefulBusyOutTimeout=miscGracefulBusyOutTimeout, sipSASDefaultGatewayIP=sipSASDefaultGatewayIP, phoneContextIndex=phoneContextIndex, codersRate=codersRate, redirectNumberMapIp2TelTable=redirectNumberMapIp2TelTable, srcIP2TELRowStatus=srcIP2TELRowStatus, causeMapSIP2ISDNQ850Cause=causeMapSIP2ISDNQ850Cause, sbcIP2IPInboundManipulationSrcHost=sbcIP2IPInboundManipulationSrcHost, tel2IPRoutingSrcPrefix=tel2IPRoutingSrcPrefix, keypadFeaturesCLIRDeact=keypadFeaturesCLIRDeact, sbcIP2IPOutboundManipulationTable=sbcIP2IPOutboundManipulationTable, redirectNumberMapIp2TelSrcTrunkGroupID=redirectNumberMapIp2TelSrcTrunkGroupID, channelsTrunkGroupID=channelsTrunkGroupID, miscLDAPpbxNumberAttributeName=miscLDAPpbxNumberAttributeName, conference3WayMode=conference3WayMode, h323PortsRasSourcePort=h323PortsRasSourcePort, sipInterfaceTable=sipInterfaceTable, telProfileInputGain=telProfileInputGain, chargeCodesIndex=chargeCodesIndex, redirectNumberMapIp2TelEntry=redirectNumberMapIp2TelEntry, manipulationAndRoutingAltRoutingToneDuration=manipulationAndRoutingAltRoutingToneDuration, miscWANIPAddress=miscWANIPAddress, miscASSubscribeIPGroupID=miscASSubscribeIPGroupID, pSTNAlertTimeoutValue=pSTNAlertTimeoutValue, dstTEL2IPIsPresentationRestricted=dstTEL2IPIsPresentationRestricted, vxmlNumOfEndPoints=vxmlNumOfEndPoints, tel2IPRoutingIndex=tel2IPRoutingIndex, iPProfileMediaSecurityBehavior=iPProfileMediaSecurityBehavior, namesTable=namesTable, callerDisplayIndex=callerDisplayIndex, keypadFeaturesCFBusy=keypadFeaturesCFBusy, analogGWHotLineToneDuration=analogGWHotLineToneDuration, telProfileDJBufOptFactor=telProfileDJBufOptFactor, h323GKIsGateKeeperUsed=h323GKIsGateKeeperUsed, telProfileIndex=telProfileIndex, redirectNumberMapTel2IpLeaveFromRight=redirectNumberMapTel2IpLeaveFromRight, sbcRoutingSrcIPGroupId=sbcRoutingSrcIPGroupId, gwSecurityVerifyServerCertificate=gwSecurityVerifyServerCertificate, announcement=announcement, sipTxDTMFOptionValue=sipTxDTMFOptionValue, altRouteCauseTEL2IPIndex=altRouteCauseTEL2IPIndex, sipDTMFISDNOverlapIPtoTelDialing=sipDTMFISDNOverlapIPtoTelDialing, authUserPassword=authUserPassword, sbcMessageManipulationsAction=sbcMessageManipulationsAction, causeMapISDN2SIPSIPResponse=causeMapISDN2SIPSIPResponse, keypadFeaturesHotLineDeact=keypadFeaturesHotLineDeact, digitalGWextRemoveCallingName=digitalGWextRemoveCallingName, playRBToneToTrunkEntry=playRBToneToTrunkEntry, toneIndexPriorityIndex=toneIndexPriorityIndex, forwardSettings=forwardSettings, sbcAdmissionControlTable=sbcAdmissionControlTable, digitalGWTransparentCoderOnDataCall=digitalGWTransparentCoderOnDataCall, gwSecurity=gwSecurity, h323GKMaxRetries=h323GKMaxRetries, miscEnableFaxRerouting=miscEnableFaxRerouting, srvInfoTable=srvInfoTable, sipPortsTCPLocalSipPort=sipPortsTCPLocalSipPort, causeMapISDN2SIPIndex=causeMapISDN2SIPIndex, acBChannelNegotiationForTrunkMode=acBChannelNegotiationForTrunkMode, mWIAnalogLamp=mWIAnalogLamp, srvInfoPriority2=srvInfoPriority2, dIDDelayBeforeDidWink=dIDDelayBeforeDidWink, telProfileSigIPDiffServ=telProfileSigIPDiffServ, redirectNumberMapIp2TelIsPresentationRestricted=redirectNumberMapIp2TelIsPresentationRestricted, srdIntraSRDMediaAnchoring=srdIntraSRDMediaAnchoring, miscEnableSingleDSPTranscoding=miscEnableSingleDSPTranscoding, srdActionResult=srdActionResult, miscEnableBusyOut=miscEnableBusyOut, mlppFlashOverOverRTPDSCP=mlppFlashOverOverRTPDSCP, conferenceMaxInBoardCalls=conferenceMaxInBoardCalls, voiceMailLineTransferMode=voiceMailLineTransferMode, fastStart=fastStart, callerDisplayPort=callerDisplayPort, srvInfoPort=srvInfoPort, sipMiscUseToHeaderAsCalledNum=sipMiscUseToHeaderAsCalledNum, streamingNumOfEndPoints=streamingNumOfEndPoints, supServices=supServices, sipTxDTMFOptionIndex=sipTxDTMFOptionIndex, codersGroup3Name=codersGroup3Name, codersGroup2Table=codersGroup2Table, callWaitingTimeBeforeWaitingIndications=callWaitingTimeBeforeWaitingIndications, srcTEL2IPNumOfDigitsToLeave=srcTEL2IPNumOfDigitsToLeave, redirectNumberMapTel2IpPrefixToAdd=redirectNumberMapTel2IpPrefixToAdd, acTWCnonAllocateablePortsTable=acTWCnonAllocateablePortsTable, toneIndexSourcePrefix=toneIndexSourcePrefix, phoneContextAction=phoneContextAction, telProfileECNlpMode=telProfileECNlpMode, manipulationSetTel2IpRedirectReason=manipulationSetTel2IpRedirectReason, altRouteCauseIP2TELActionResult=altRouteCauseIP2TELActionResult, chargeCodesEntry=chargeCodesEntry, miscIsdnDisconnectOnBusyTone=miscIsdnDisconnectOnBusyTone, forwardOnBusyTrunkDestTable=forwardOnBusyTrunkDestTable, dialing=dialing, sipDigitalGW=sipDigitalGW, tonesPlayRBTone2Tel=tonesPlayRBTone2Tel, sbcClassificationIndex=sbcClassificationIndex, dstIP2TELSourcePrefix=dstIP2TELSourcePrefix, resourceManagementRejectCallsOnOverload=resourceManagementRejectCallsOnOverload, callerIDperPortIndex=callerIDperPortIndex, causeMapISDN2SIPActionResult=causeMapISDN2SIPActionResult, acDigitalOOSBehaviorForTrunkEntry=acDigitalOOSBehaviorForTrunkEntry, sbcIP2IPInboundManipulationEntry=sbcIP2IPInboundManipulationEntry, trunkTransferIndex=trunkTransferIndex, screeningIndicators=screeningIndicators, autoDialDestPhoneNumber=autoDialDestPhoneNumber, streamingRecordScriptPath=streamingRecordScriptPath, streamingNetAnnAnncID=streamingNetAnnAnncID, srdRowStatus=srdRowStatus, sipRetransmissionRetryAfterTime=sipRetransmissionRetryAfterTime, fxsMeteringMode=fxsMeteringMode, iESendIEOnTG=iESendIEOnTG, telProfileProfileName=telProfileProfileName, sipMiscEnableSemiAttendedTransfer=sipMiscEnableSemiAttendedTransfer, redirectNumberMapIp2TelRemoveFromRight=redirectNumberMapIp2TelRemoveFromRight, tel2IPRoutingSourceHostPrefix=tel2IPRoutingSourceHostPrefix, ipGroupServingIPGroup=ipGroupServingIPGroup, sipAuth=sipAuth, telProfileRowStatus=telProfileRowStatus, srcIP2TELPresentation=srcIP2TELPresentation, digitalGWextEnableAoC=digitalGWextEnableAoC, routingSourceIPAddressInput=routingSourceIPAddressInput, telProfileIPDiffServ=telProfileIPDiffServ, iPProfileCallLimit=iPProfileCallLimit, sipSASRedundantProxySet=sipSASRedundantProxySet, enableCallWaitingPerPortIndex=enableCallWaitingPerPortIndex, iPProfileIsFaxUsed=iPProfileIsFaxUsed, fxoEnableVoiceDetection=fxoEnableVoiceDetection, tonesFirstCallWaitingToneID=tonesFirstCallWaitingToneID, callerDisplayAction=callerDisplayAction, sbcIP2IPOutboundManipulationLeaveFromRight=sbcIP2IPOutboundManipulationLeaveFromRight, h323=h323, codersRowStatus=codersRowStatus, redirectNumberMapIp2TelSrcIPGroupID=redirectNumberMapIp2TelSrcIPGroupID, dstTEL2IPNumOfStrippedDigits=dstTEL2IPNumOfStrippedDigits, acEmergencyRegretTimeout=acEmergencyRegretTimeout, redirectNumberMapIp2TelActionResult=redirectNumberMapIp2TelActionResult, digitalGWPlayRBTOnISDNTransfer=digitalGWPlayRBTOnISDNTransfer, sipInterfaceAction=sipInterfaceAction, h323DestEncodType=h323DestEncodType, srcIP2TELNumberPlan=srcIP2TELNumberPlan, iPProfileSecondTxDtmfOption=iPProfileSecondTxDtmfOption, digitalGWextDefaultCauseMapISDN2IP=digitalGWextDefaultCauseMapISDN2IP, mWIEnable=mWIEnable, manipulationAndRoutingFilterCalls2Ip=manipulationAndRoutingFilterCalls2Ip, chargeCodesPeriod4PulseInterval=chargeCodesPeriod4PulseInterval, altRouteCauseTEL2IPTable=altRouteCauseTEL2IPTable, fastStartIsFSOpenMediaOnConnect=fastStartIsFSOpenMediaOnConnect, sbcEnableIIP2IPApplication=sbcEnableIIP2IPApplication, gwSecurityTLSReHandshakeInterval=gwSecurityTLSReHandshakeInterval, toneIndexAction=toneIndexAction, gwSecurityMediaSecurityBehavior=gwSecurityMediaSecurityBehavior, sipMiscResetOnINIFileDownload=sipMiscResetOnINIFileDownload, gkRAILowThreshold=gkRAILowThreshold, h323PortsH225ListenPort=h323PortsH225ListenPort, sipProxyAlwaysUseRouteTable=sipProxyAlwaysUseRouteTable, iP2TelRoutingDestHostPrefix=iP2TelRoutingDestHostPrefix, analogGWEnableCurrentDisconnect=analogGWEnableCurrentDisconnect, srcTEL2IPPrefixToAdd=srcTEL2IPPrefixToAdd, authUserID=authUserID, sipMiscComfortNoiseNegotiation=sipMiscComfortNoiseNegotiation, keypadFeaturesKeypadFeaturesCW=keypadFeaturesKeypadFeaturesCW, dnsInfoRowStatus=dnsInfoRowStatus, tel2IPRoutingSourceIPGroupID=tel2IPRoutingSourceIPGroupID, gwIPv6=gwIPv6, sasRegistrationManipulationTable=sasRegistrationManipulationTable)
mibBuilder.exportSymbols("AcGateway", sipRegistrationTime=sipRegistrationTime, digitalGWextTDMOverIPMinCallsForTrunkActivation=digitalGWextTDMOverIPMinCallsForTrunkActivation, toneIndexIndex=toneIndexIndex, enableCallWaitingPerPortAction=enableCallWaitingPerPortAction, sbc=sbc, sipRegistrationRegistrarTransportType=sipRegistrationRegistrarTransportType, sbcAdmissionControlIndex=sbcAdmissionControlIndex, codersPayloadType=codersPayloadType, sipSubscribe=sipSubscribe, mlppImmediateRTPDSCP=mlppImmediateRTPDSCP, mWIDisplay=mWIDisplay, iPProfileRxDTMFOption=iPProfileRxDTMFOption, fastStartIsFSMediaInfoSendOnConnect=fastStartIsFSMediaInfoSendOnConnect, sipMiscTransportType=sipMiscTransportType, callerDisplayIsUsed=callerDisplayIsUsed, vmDigitPatternVmDigitPatternNoReasonExternal=vmDigitPatternVmDigitPatternNoReasonExternal)
