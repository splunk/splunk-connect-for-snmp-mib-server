#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-FrameRelayDteMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-FrameRelayDteMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
Counter32, Unsigned32, StorageType, InterfaceIndex, DisplayString, Gauge32, Integer32, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Counter32", "Unsigned32", "StorageType", "InterfaceIndex", "DisplayString", "Gauge32", "Integer32", "RowStatus")
EnterpriseDateAndTime, PassportCounter64, HexString, Link, DashedHexString, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "EnterpriseDateAndTime", "PassportCounter64", "HexString", "Link", "DashedHexString", "NonReplicated")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, ObjectIdentity, IpAddress, Counter32, iso, ModuleIdentity, Unsigned32, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "IpAddress", "Counter32", "iso", "ModuleIdentity", "Unsigned32", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "Counter64", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayDteMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32))
mscFrDte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101))
mscFrDteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 1), )
if mibBuilder.loadTexts: mscFrDteRowStatusTable.setStatus('mandatory')
mscFrDteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteRowStatusEntry.setStatus('mandatory')
mscFrDteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRowStatus.setStatus('mandatory')
mscFrDteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteComponentName.setStatus('mandatory')
mscFrDteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStorageType.setStatus('mandatory')
mscFrDteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscFrDteIndex.setStatus('mandatory')
mscFrDteCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 20), )
if mibBuilder.loadTexts: mscFrDteCidDataTable.setStatus('mandatory')
mscFrDteCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteCidDataEntry.setStatus('mandatory')
mscFrDteCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteCustomerIdentifier.setStatus('mandatory')
mscFrDteIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 21), )
if mibBuilder.loadTexts: mscFrDteIfEntryTable.setStatus('mandatory')
mscFrDteIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 21, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteIfEntryEntry.setStatus('mandatory')
mscFrDteIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteIfAdminStatus.setStatus('mandatory')
mscFrDteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 21, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteIfIndex.setStatus('mandatory')
mscFrDteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 22), )
if mibBuilder.loadTexts: mscFrDteProvTable.setStatus('mandatory')
mscFrDteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 22, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteProvEntry.setStatus('mandatory')
mscFrDteAcceptUndefinedDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteAcceptUndefinedDlci.setStatus('mandatory')
mscFrDteStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 23), )
if mibBuilder.loadTexts: mscFrDteStateTable.setStatus('mandatory')
mscFrDteStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 23, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteStateEntry.setStatus('mandatory')
mscFrDteAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteAdminState.setStatus('mandatory')
mscFrDteOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteOperationalState.setStatus('mandatory')
mscFrDteUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteUsageState.setStatus('mandatory')
mscFrDteOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 24), )
if mibBuilder.loadTexts: mscFrDteOperStatusTable.setStatus('mandatory')
mscFrDteOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 24, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteOperStatusEntry.setStatus('mandatory')
mscFrDteSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteSnmpOperStatus.setStatus('mandatory')
mscFrDteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 25), )
if mibBuilder.loadTexts: mscFrDteOperTable.setStatus('mandatory')
mscFrDteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 25, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteOperEntry.setStatus('mandatory')
mscFrDteLinkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("down", 2), ("polling", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLinkOperState.setStatus('mandatory')
mscFrDteErrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26), )
if mibBuilder.loadTexts: mscFrDteErrTable.setStatus('mandatory')
mscFrDteErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteErrEntry.setStatus('mandatory')
mscFrDteErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknownError", 1), ("receiveShort", 2), ("receiveLong", 3), ("illegalDlci", 4), ("dlcmiProtoErr", 5), ("dlcmiUnknownIe", 6), ("dlcmiSequenceErr", 7), ("dlcmiUnknownRpt", 8), ("noErrorSinceReset", 9))).clone('noErrorSinceReset')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteErrType.setStatus('mandatory')
mscFrDteErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteErrData.setStatus('mandatory')
mscFrDteErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26, 1, 4), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteErrTime.setStatus('mandatory')
mscFrDteErrDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteErrDiscards.setStatus('mandatory')
mscFrDteErrFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteErrFaults.setStatus('mandatory')
mscFrDteErrFaultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 26, 1, 8), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteErrFaultTime.setStatus('mandatory')
mscFrDteErrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27), )
if mibBuilder.loadTexts: mscFrDteErrStatsTable.setStatus('mandatory')
mscFrDteErrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"))
if mibBuilder.loadTexts: mscFrDteErrStatsEntry.setStatus('mandatory')
mscFrDteXmitDiscardPvcDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteXmitDiscardPvcDown.setStatus('mandatory')
mscFrDteXmitDiscardLmiInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteXmitDiscardLmiInactive.setStatus('mandatory')
mscFrDteXmitDiscardFramerDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteXmitDiscardFramerDown.setStatus('mandatory')
mscFrDteXmitDiscardPvcInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteXmitDiscardPvcInactive.setStatus('mandatory')
mscFrDteXmitDiscardCirExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteXmitDiscardCirExceeded.setStatus('mandatory')
mscFrDteRecvDiscardPvcDown = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRecvDiscardPvcDown.setStatus('mandatory')
mscFrDteRecvDiscardLmiInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRecvDiscardLmiInactive.setStatus('mandatory')
mscFrDteRecvDiscardPvcInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRecvDiscardPvcInactive.setStatus('mandatory')
mscFrDteBadFc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteBadFc.setStatus('mandatory')
mscFrDteUlpUnknownProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteUlpUnknownProtocol.setStatus('mandatory')
mscFrDteDefragSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDefragSequenceErrors.setStatus('mandatory')
mscFrDteReceiveShort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteReceiveShort.setStatus('mandatory')
mscFrDteIllegalDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteIllegalDlci.setStatus('mandatory')
mscFrDteDlcmiProtoErr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlcmiProtoErr.setStatus('mandatory')
mscFrDteDlcmiUnknownIe = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlcmiUnknownIe.setStatus('mandatory')
mscFrDteDlcmiSequenceErr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlcmiSequenceErr.setStatus('mandatory')
mscFrDteDlcmiUnknownRpt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 27, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlcmiUnknownRpt.setStatus('mandatory')
mscFrDteFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2))
mscFrDteFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 1), )
if mibBuilder.loadTexts: mscFrDteFramerRowStatusTable.setStatus('mandatory')
mscFrDteFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteFramerIndex"))
if mibBuilder.loadTexts: mscFrDteFramerRowStatusEntry.setStatus('mandatory')
mscFrDteFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteFramerRowStatus.setStatus('mandatory')
mscFrDteFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerComponentName.setStatus('mandatory')
mscFrDteFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerStorageType.setStatus('mandatory')
mscFrDteFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrDteFramerIndex.setStatus('mandatory')
mscFrDteFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 10), )
if mibBuilder.loadTexts: mscFrDteFramerProvTable.setStatus('mandatory')
mscFrDteFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteFramerIndex"))
if mibBuilder.loadTexts: mscFrDteFramerProvEntry.setStatus('mandatory')
mscFrDteFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteFramerInterfaceName.setStatus('mandatory')
mscFrDteFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 12), )
if mibBuilder.loadTexts: mscFrDteFramerStateTable.setStatus('mandatory')
mscFrDteFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteFramerIndex"))
if mibBuilder.loadTexts: mscFrDteFramerStateEntry.setStatus('mandatory')
mscFrDteFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerAdminState.setStatus('mandatory')
mscFrDteFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerOperationalState.setStatus('mandatory')
mscFrDteFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerUsageState.setStatus('mandatory')
mscFrDteFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13), )
if mibBuilder.loadTexts: mscFrDteFramerStatsTable.setStatus('mandatory')
mscFrDteFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteFramerIndex"))
if mibBuilder.loadTexts: mscFrDteFramerStatsEntry.setStatus('mandatory')
mscFrDteFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerFrmToIf.setStatus('mandatory')
mscFrDteFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerFrmFromIf.setStatus('mandatory')
mscFrDteFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerAborts.setStatus('mandatory')
mscFrDteFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerCrcErrors.setStatus('mandatory')
mscFrDteFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerLrcErrors.setStatus('mandatory')
mscFrDteFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerNonOctetErrors.setStatus('mandatory')
mscFrDteFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerOverruns.setStatus('mandatory')
mscFrDteFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerUnderruns.setStatus('mandatory')
mscFrDteFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerLargeFrmErrors.setStatus('mandatory')
mscFrDteFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 14), )
if mibBuilder.loadTexts: mscFrDteFramerUtilTable.setStatus('mandatory')
mscFrDteFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteFramerIndex"))
if mibBuilder.loadTexts: mscFrDteFramerUtilEntry.setStatus('mandatory')
mscFrDteFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerNormPrioLinkUtilToIf.setStatus('mandatory')
mscFrDteFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
mscFrDteLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3))
mscFrDteLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 1), )
if mibBuilder.loadTexts: mscFrDteLmiRowStatusTable.setStatus('mandatory')
mscFrDteLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLmiIndex"))
if mibBuilder.loadTexts: mscFrDteLmiRowStatusEntry.setStatus('mandatory')
mscFrDteLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLmiRowStatus.setStatus('mandatory')
mscFrDteLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLmiComponentName.setStatus('mandatory')
mscFrDteLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLmiStorageType.setStatus('mandatory')
mscFrDteLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrDteLmiIndex.setStatus('mandatory')
mscFrDteLmiProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 10), )
if mibBuilder.loadTexts: mscFrDteLmiProvTable.setStatus('mandatory')
mscFrDteLmiProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLmiIndex"))
if mibBuilder.loadTexts: mscFrDteLmiProvEntry.setStatus('mandatory')
mscFrDteLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("none", 1), ("vendorForum", 2), ("ansi", 3), ("ccitt", 5))).clone('ccitt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLmiProcedures.setStatus('mandatory')
mscFrDteLmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLmiPollingInterval.setStatus('mandatory')
mscFrDteLmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLmiFullEnquiryInterval.setStatus('mandatory')
mscFrDteLmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLmiErrorThreshold.setStatus('mandatory')
mscFrDteLmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLmiMonitoredEvents.setStatus('mandatory')
mscFrDteLmiOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 11), )
if mibBuilder.loadTexts: mscFrDteLmiOperTable.setStatus('mandatory')
mscFrDteLmiOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLmiIndex"))
if mibBuilder.loadTexts: mscFrDteLmiOperEntry.setStatus('mandatory')
mscFrDteLmiLmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("initializing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLmiLmiStatus.setStatus('mandatory')
mscFrDteRg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4))
mscFrDteRgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 1), )
if mibBuilder.loadTexts: mscFrDteRgRowStatusTable.setStatus('mandatory')
mscFrDteRgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"))
if mibBuilder.loadTexts: mscFrDteRgRowStatusEntry.setStatus('mandatory')
mscFrDteRgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgRowStatus.setStatus('mandatory')
mscFrDteRgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgComponentName.setStatus('mandatory')
mscFrDteRgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgStorageType.setStatus('mandatory')
mscFrDteRgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: mscFrDteRgIndex.setStatus('mandatory')
mscFrDteRgIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 10), )
if mibBuilder.loadTexts: mscFrDteRgIfEntryTable.setStatus('mandatory')
mscFrDteRgIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"))
if mibBuilder.loadTexts: mscFrDteRgIfEntryEntry.setStatus('mandatory')
mscFrDteRgIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgIfAdminStatus.setStatus('mandatory')
mscFrDteRgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 10, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgIfIndex.setStatus('mandatory')
mscFrDteRgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 11), )
if mibBuilder.loadTexts: mscFrDteRgProvTable.setStatus('mandatory')
mscFrDteRgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"))
if mibBuilder.loadTexts: mscFrDteRgProvEntry.setStatus('mandatory')
mscFrDteRgMaxTransmissionUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(262, 9190)).clone(1604)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgMaxTransmissionUnit.setStatus('mandatory')
mscFrDteRgMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 12), )
if mibBuilder.loadTexts: mscFrDteRgMpTable.setStatus('mandatory')
mscFrDteRgMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"))
if mibBuilder.loadTexts: mscFrDteRgMpEntry.setStatus('mandatory')
mscFrDteRgLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 12, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgLinkToProtocolPort.setStatus('mandatory')
mscFrDteRgStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 13), )
if mibBuilder.loadTexts: mscFrDteRgStateTable.setStatus('mandatory')
mscFrDteRgStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"))
if mibBuilder.loadTexts: mscFrDteRgStateEntry.setStatus('mandatory')
mscFrDteRgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgAdminState.setStatus('mandatory')
mscFrDteRgOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgOperationalState.setStatus('mandatory')
mscFrDteRgUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgUsageState.setStatus('mandatory')
mscFrDteRgOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 14), )
if mibBuilder.loadTexts: mscFrDteRgOperStatusTable.setStatus('mandatory')
mscFrDteRgOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"))
if mibBuilder.loadTexts: mscFrDteRgOperStatusEntry.setStatus('mandatory')
mscFrDteRgSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgSnmpOperStatus.setStatus('mandatory')
mscFrDteRgLtDlciTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 219), )
if mibBuilder.loadTexts: mscFrDteRgLtDlciTable.setStatus('mandatory')
mscFrDteRgLtDlciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 219, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgLtDlciValue"))
if mibBuilder.loadTexts: mscFrDteRgLtDlciEntry.setStatus('mandatory')
mscFrDteRgLtDlciValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 219, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgLtDlciValue.setStatus('mandatory')
mscFrDteRgLtDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 219, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscFrDteRgLtDlciRowStatus.setStatus('mandatory')
mscFrDteRgBfr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15))
mscFrDteRgBfrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 1), )
if mibBuilder.loadTexts: mscFrDteRgBfrRowStatusTable.setStatus('mandatory')
mscFrDteRgBfrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgBfrIndex"))
if mibBuilder.loadTexts: mscFrDteRgBfrRowStatusEntry.setStatus('mandatory')
mscFrDteRgBfrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgBfrRowStatus.setStatus('mandatory')
mscFrDteRgBfrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgBfrComponentName.setStatus('mandatory')
mscFrDteRgBfrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgBfrStorageType.setStatus('mandatory')
mscFrDteRgBfrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrDteRgBfrIndex.setStatus('mandatory')
mscFrDteRgBfrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 10), )
if mibBuilder.loadTexts: mscFrDteRgBfrProvTable.setStatus('mandatory')
mscFrDteRgBfrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgBfrIndex"))
if mibBuilder.loadTexts: mscFrDteRgBfrProvEntry.setStatus('mandatory')
mscFrDteRgBfrMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fddi", 0), ("enet", 1), ("tokenRing", 2))).clone('enet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgBfrMacType.setStatus('mandatory')
mscFrDteRgBfrBfrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteRgBfrBfrIndex.setStatus('mandatory')
mscFrDteRgBfrOprTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 11), )
if mibBuilder.loadTexts: mscFrDteRgBfrOprTable.setStatus('mandatory')
mscFrDteRgBfrOprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteRgBfrIndex"))
if mibBuilder.loadTexts: mscFrDteRgBfrOprEntry.setStatus('mandatory')
mscFrDteRgBfrMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 4, 15, 11, 1, 1), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteRgBfrMacAddr.setStatus('mandatory')
mscFrDteDynDlciDefs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5))
mscFrDteDynDlciDefsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 1), )
if mibBuilder.loadTexts: mscFrDteDynDlciDefsRowStatusTable.setStatus('mandatory')
mscFrDteDynDlciDefsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteDynDlciDefsIndex"))
if mibBuilder.loadTexts: mscFrDteDynDlciDefsRowStatusEntry.setStatus('mandatory')
mscFrDteDynDlciDefsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsRowStatus.setStatus('mandatory')
mscFrDteDynDlciDefsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsComponentName.setStatus('mandatory')
mscFrDteDynDlciDefsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsStorageType.setStatus('mandatory')
mscFrDteDynDlciDefsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrDteDynDlciDefsIndex.setStatus('mandatory')
mscFrDteDynDlciDefsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10), )
if mibBuilder.loadTexts: mscFrDteDynDlciDefsProvTable.setStatus('mandatory')
mscFrDteDynDlciDefsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteDynDlciDefsIndex"))
if mibBuilder.loadTexts: mscFrDteDynDlciDefsProvEntry.setStatus('mandatory')
mscFrDteDynDlciDefsStdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsStdRowStatus.setStatus('mandatory')
mscFrDteDynDlciDefsRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsRateEnforcement.setStatus('mandatory')
mscFrDteDynDlciDefsCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsCommittedInformationRate.setStatus('mandatory')
mscFrDteDynDlciDefsCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsCommittedBurst.setStatus('mandatory')
mscFrDteDynDlciDefsExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsExcessBurst.setStatus('mandatory')
mscFrDteDynDlciDefsExcessBurstAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("setDeBit", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsExcessBurstAction.setStatus('mandatory')
mscFrDteDynDlciDefsIpCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDynDlciDefsIpCos.setStatus('mandatory')
mscFrDteStDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6))
mscFrDteStDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 1), )
if mibBuilder.loadTexts: mscFrDteStDlciRowStatusTable.setStatus('mandatory')
mscFrDteStDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciRowStatusEntry.setStatus('mandatory')
mscFrDteStDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciRowStatus.setStatus('mandatory')
mscFrDteStDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciComponentName.setStatus('mandatory')
mscFrDteStDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciStorageType.setStatus('mandatory')
mscFrDteStDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: mscFrDteStDlciIndex.setStatus('mandatory')
mscFrDteStDlciProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10), )
if mibBuilder.loadTexts: mscFrDteStDlciProvTable.setStatus('mandatory')
mscFrDteStDlciProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciProvEntry.setStatus('mandatory')
mscFrDteStDlciStdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciStdRowStatus.setStatus('mandatory')
mscFrDteStDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciRateEnforcement.setStatus('mandatory')
mscFrDteStDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 48000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciCommittedInformationRate.setStatus('mandatory')
mscFrDteStDlciCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciCommittedBurst.setStatus('mandatory')
mscFrDteStDlciExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciExcessBurst.setStatus('mandatory')
mscFrDteStDlciExcessBurstAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("setDeBit", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciExcessBurstAction.setStatus('mandatory')
mscFrDteStDlciIpCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciIpCos.setStatus('mandatory')
mscFrDteStDlciRgLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 11), )
if mibBuilder.loadTexts: mscFrDteStDlciRgLinkTable.setStatus('mandatory')
mscFrDteStDlciRgLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciRgLinkEntry.setStatus('mandatory')
mscFrDteStDlciLinkToRemoteGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciLinkToRemoteGroup.setStatus('mandatory')
mscFrDteStDlciHq = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2))
mscFrDteStDlciHqRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 1), )
if mibBuilder.loadTexts: mscFrDteStDlciHqRowStatusTable.setStatus('mandatory')
mscFrDteStDlciHqRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciHqIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciHqRowStatusEntry.setStatus('mandatory')
mscFrDteStDlciHqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciHqRowStatus.setStatus('mandatory')
mscFrDteStDlciHqComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqComponentName.setStatus('mandatory')
mscFrDteStDlciHqStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqStorageType.setStatus('mandatory')
mscFrDteStDlciHqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrDteStDlciHqIndex.setStatus('mandatory')
mscFrDteStDlciHqProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 10), )
if mibBuilder.loadTexts: mscFrDteStDlciHqProvTable.setStatus('mandatory')
mscFrDteStDlciHqProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciHqIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciHqProvEntry.setStatus('mandatory')
mscFrDteStDlciHqMaxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciHqMaxPackets.setStatus('mandatory')
mscFrDteStDlciHqMaxMsecData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciHqMaxMsecData.setStatus('mandatory')
mscFrDteStDlciHqMaxPercentMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciHqMaxPercentMulticast.setStatus('mandatory')
mscFrDteStDlciHqTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteStDlciHqTimeToLive.setStatus('mandatory')
mscFrDteStDlciHqStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 11), )
if mibBuilder.loadTexts: mscFrDteStDlciHqStatsTable.setStatus('mandatory')
mscFrDteStDlciHqStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciHqIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciHqStatsEntry.setStatus('mandatory')
mscFrDteStDlciHqTimedOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqTimedOutPkt.setStatus('mandatory')
mscFrDteStDlciHqQueuePurgeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqQueuePurgeDiscards.setStatus('mandatory')
mscFrDteStDlciHqTStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 12), )
if mibBuilder.loadTexts: mscFrDteStDlciHqTStatsTable.setStatus('mandatory')
mscFrDteStDlciHqTStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciHqIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciHqTStatsEntry.setStatus('mandatory')
mscFrDteStDlciHqTotalPktHandled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqTotalPktHandled.setStatus('mandatory')
mscFrDteStDlciHqTotalPktForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqTotalPktForwarded.setStatus('mandatory')
mscFrDteStDlciHqTotalPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqTotalPktQueued.setStatus('mandatory')
mscFrDteStDlciHqTotalMulticastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqTotalMulticastPkt.setStatus('mandatory')
mscFrDteStDlciHqTotalPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqTotalPktDiscards.setStatus('mandatory')
mscFrDteStDlciHqCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 13), )
if mibBuilder.loadTexts: mscFrDteStDlciHqCStatsTable.setStatus('mandatory')
mscFrDteStDlciHqCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciHqIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciHqCStatsEntry.setStatus('mandatory')
mscFrDteStDlciHqCurrentPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 13, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqCurrentPktQueued.setStatus('mandatory')
mscFrDteStDlciHqCurrentBytesQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqCurrentBytesQueued.setStatus('mandatory')
mscFrDteStDlciHqCurrentMulticastQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 13, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqCurrentMulticastQueued.setStatus('mandatory')
mscFrDteStDlciHqThrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14), )
if mibBuilder.loadTexts: mscFrDteStDlciHqThrStatsTable.setStatus('mandatory')
mscFrDteStDlciHqThrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteStDlciHqIndex"))
if mibBuilder.loadTexts: mscFrDteStDlciHqThrStatsEntry.setStatus('mandatory')
mscFrDteStDlciHqQueuePktThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqQueuePktThreshold.setStatus('mandatory')
mscFrDteStDlciHqPktThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqPktThresholdExceeded.setStatus('mandatory')
mscFrDteStDlciHqQueueByteThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqQueueByteThreshold.setStatus('mandatory')
mscFrDteStDlciHqByteThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqByteThresholdExceeded.setStatus('mandatory')
mscFrDteStDlciHqQueueMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqQueueMulticastThreshold.setStatus('mandatory')
mscFrDteStDlciHqMulThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqMulThresholdExceeded.setStatus('mandatory')
mscFrDteStDlciHqMemThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 6, 2, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteStDlciHqMemThresholdExceeded.setStatus('mandatory')
mscFrDteLeq = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7))
mscFrDteLeqRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 1), )
if mibBuilder.loadTexts: mscFrDteLeqRowStatusTable.setStatus('mandatory')
mscFrDteLeqRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLeqIndex"))
if mibBuilder.loadTexts: mscFrDteLeqRowStatusEntry.setStatus('mandatory')
mscFrDteLeqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLeqRowStatus.setStatus('mandatory')
mscFrDteLeqComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqComponentName.setStatus('mandatory')
mscFrDteLeqStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqStorageType.setStatus('mandatory')
mscFrDteLeqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrDteLeqIndex.setStatus('mandatory')
mscFrDteLeqProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 10), )
if mibBuilder.loadTexts: mscFrDteLeqProvTable.setStatus('mandatory')
mscFrDteLeqProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLeqIndex"))
if mibBuilder.loadTexts: mscFrDteLeqProvEntry.setStatus('mandatory')
mscFrDteLeqMaxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLeqMaxPackets.setStatus('mandatory')
mscFrDteLeqMaxMsecData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLeqMaxMsecData.setStatus('mandatory')
mscFrDteLeqMaxPercentMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLeqMaxPercentMulticast.setStatus('mandatory')
mscFrDteLeqTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteLeqTimeToLive.setStatus('mandatory')
mscFrDteLeqStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 11), )
if mibBuilder.loadTexts: mscFrDteLeqStatsTable.setStatus('mandatory')
mscFrDteLeqStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLeqIndex"))
if mibBuilder.loadTexts: mscFrDteLeqStatsEntry.setStatus('mandatory')
mscFrDteLeqTimedOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqTimedOutPkt.setStatus('mandatory')
mscFrDteLeqHardwareForcedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqHardwareForcedPkt.setStatus('mandatory')
mscFrDteLeqForcedPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqForcedPktDiscards.setStatus('mandatory')
mscFrDteLeqQueuePurgeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqQueuePurgeDiscards.setStatus('mandatory')
mscFrDteLeqTStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 12), )
if mibBuilder.loadTexts: mscFrDteLeqTStatsTable.setStatus('mandatory')
mscFrDteLeqTStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLeqIndex"))
if mibBuilder.loadTexts: mscFrDteLeqTStatsEntry.setStatus('mandatory')
mscFrDteLeqTotalPktHandled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqTotalPktHandled.setStatus('mandatory')
mscFrDteLeqTotalPktForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqTotalPktForwarded.setStatus('mandatory')
mscFrDteLeqTotalPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqTotalPktQueued.setStatus('mandatory')
mscFrDteLeqTotalMulticastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqTotalMulticastPkt.setStatus('mandatory')
mscFrDteLeqTotalPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqTotalPktDiscards.setStatus('mandatory')
mscFrDteLeqCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 13), )
if mibBuilder.loadTexts: mscFrDteLeqCStatsTable.setStatus('mandatory')
mscFrDteLeqCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLeqIndex"))
if mibBuilder.loadTexts: mscFrDteLeqCStatsEntry.setStatus('mandatory')
mscFrDteLeqCurrentPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 13, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqCurrentPktQueued.setStatus('mandatory')
mscFrDteLeqCurrentBytesQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqCurrentBytesQueued.setStatus('mandatory')
mscFrDteLeqCurrentMulticastQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 13, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqCurrentMulticastQueued.setStatus('mandatory')
mscFrDteLeqThrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14), )
if mibBuilder.loadTexts: mscFrDteLeqThrStatsTable.setStatus('mandatory')
mscFrDteLeqThrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteLeqIndex"))
if mibBuilder.loadTexts: mscFrDteLeqThrStatsEntry.setStatus('mandatory')
mscFrDteLeqQueuePktThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqQueuePktThreshold.setStatus('mandatory')
mscFrDteLeqPktThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqPktThresholdExceeded.setStatus('mandatory')
mscFrDteLeqQueueByteThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqQueueByteThreshold.setStatus('mandatory')
mscFrDteLeqByteThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqByteThresholdExceeded.setStatus('mandatory')
mscFrDteLeqQueueMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqQueueMulticastThreshold.setStatus('mandatory')
mscFrDteLeqMulThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqMulThresholdExceeded.setStatus('mandatory')
mscFrDteLeqMemThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 7, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteLeqMemThresholdExceeded.setStatus('mandatory')
mscFrDteDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8))
mscFrDteDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 1), )
if mibBuilder.loadTexts: mscFrDteDlciRowStatusTable.setStatus('mandatory')
mscFrDteDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteDlciIndex"))
if mibBuilder.loadTexts: mscFrDteDlciRowStatusEntry.setStatus('mandatory')
mscFrDteDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciRowStatus.setStatus('mandatory')
mscFrDteDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciComponentName.setStatus('mandatory')
mscFrDteDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciStorageType.setStatus('mandatory')
mscFrDteDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: mscFrDteDlciIndex.setStatus('mandatory')
mscFrDteDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 10), )
if mibBuilder.loadTexts: mscFrDteDlciStateTable.setStatus('mandatory')
mscFrDteDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteDlciIndex"))
if mibBuilder.loadTexts: mscFrDteDlciStateEntry.setStatus('mandatory')
mscFrDteDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciAdminState.setStatus('mandatory')
mscFrDteDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciOperationalState.setStatus('mandatory')
mscFrDteDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciUsageState.setStatus('mandatory')
mscFrDteDlciOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11), )
if mibBuilder.loadTexts: mscFrDteDlciOperTable.setStatus('mandatory')
mscFrDteDlciOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteDlciIndex"))
if mibBuilder.loadTexts: mscFrDteDlciOperEntry.setStatus('mandatory')
mscFrDteDlciDlciState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciDlciState.setStatus('mandatory')
mscFrDteDlciLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciLastTimeChange.setStatus('mandatory')
mscFrDteDlciSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciSentFrames.setStatus('mandatory')
mscFrDteDlciSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciSentOctets.setStatus('mandatory')
mscFrDteDlciReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciReceivedFrames.setStatus('mandatory')
mscFrDteDlciReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciReceivedOctets.setStatus('mandatory')
mscFrDteDlciReceivedFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciReceivedFECNs.setStatus('mandatory')
mscFrDteDlciReceivedBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciReceivedBECNs.setStatus('mandatory')
mscFrDteDlciDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciDiscardedFrames.setStatus('mandatory')
mscFrDteDlciCreationType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciCreationType.setStatus('mandatory')
mscFrDteDlciCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 15), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteDlciCreationTime.setStatus('mandatory')
mscFrDteDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDlciRateEnforcement.setStatus('mandatory')
mscFrDteDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 18), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 48000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDlciCommittedInformationRate.setStatus('mandatory')
mscFrDteDlciCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDlciCommittedBurst.setStatus('mandatory')
mscFrDteDlciExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDlciExcessBurst.setStatus('mandatory')
mscFrDteDlciExcessBurstAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 8, 11, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("setDeBit", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteDlciExcessBurstAction.setStatus('mandatory')
mscFrDteVFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9))
mscFrDteVFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 1), )
if mibBuilder.loadTexts: mscFrDteVFramerRowStatusTable.setStatus('mandatory')
mscFrDteVFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteVFramerIndex"))
if mibBuilder.loadTexts: mscFrDteVFramerRowStatusEntry.setStatus('mandatory')
mscFrDteVFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteVFramerRowStatus.setStatus('mandatory')
mscFrDteVFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerComponentName.setStatus('mandatory')
mscFrDteVFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerStorageType.setStatus('mandatory')
mscFrDteVFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrDteVFramerIndex.setStatus('mandatory')
mscFrDteVFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 10), )
if mibBuilder.loadTexts: mscFrDteVFramerProvTable.setStatus('mandatory')
mscFrDteVFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteVFramerIndex"))
if mibBuilder.loadTexts: mscFrDteVFramerProvEntry.setStatus('mandatory')
mscFrDteVFramerOtherVirtualFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteVFramerOtherVirtualFramer.setStatus('mandatory')
mscFrDteVFramerLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrDteVFramerLogicalProcessor.setStatus('mandatory')
mscFrDteVFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 11), )
if mibBuilder.loadTexts: mscFrDteVFramerStateTable.setStatus('mandatory')
mscFrDteVFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteVFramerIndex"))
if mibBuilder.loadTexts: mscFrDteVFramerStateEntry.setStatus('mandatory')
mscFrDteVFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerAdminState.setStatus('mandatory')
mscFrDteVFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerOperationalState.setStatus('mandatory')
mscFrDteVFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerUsageState.setStatus('mandatory')
mscFrDteVFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 12), )
if mibBuilder.loadTexts: mscFrDteVFramerStatsTable.setStatus('mandatory')
mscFrDteVFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", "mscFrDteVFramerIndex"))
if mibBuilder.loadTexts: mscFrDteVFramerStatsEntry.setStatus('mandatory')
mscFrDteVFramerFrmToOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 12, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerFrmToOtherVFramer.setStatus('mandatory')
mscFrDteVFramerFrmFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 12, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerFrmFromOtherVFramer.setStatus('mandatory')
mscFrDteVFramerOctetFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 101, 9, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrDteVFramerOctetFromOtherVFramer.setStatus('mandatory')
frameRelayDteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 1))
frameRelayDteGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 1, 1))
frameRelayDteGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 1, 1, 3))
frameRelayDteGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 1, 1, 3, 2))
frameRelayDteCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 3))
frameRelayDteCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 3, 1))
frameRelayDteCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 3, 1, 3))
frameRelayDteCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 32, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", mscFrDteLmiOperTable=mscFrDteLmiOperTable, mscFrDteFramerUsageState=mscFrDteFramerUsageState, mscFrDteStDlciProvTable=mscFrDteStDlciProvTable, mscFrDteVFramerUsageState=mscFrDteVFramerUsageState, frameRelayDteCapabilitiesCA02A=frameRelayDteCapabilitiesCA02A, mscFrDteFramerUtilEntry=mscFrDteFramerUtilEntry, mscFrDteStDlciHq=mscFrDteStDlciHq, mscFrDteRecvDiscardPvcInactive=mscFrDteRecvDiscardPvcInactive, mscFrDteFramerNonOctetErrors=mscFrDteFramerNonOctetErrors, mscFrDteStDlciHqMemThresholdExceeded=mscFrDteStDlciHqMemThresholdExceeded, mscFrDteErrStatsTable=mscFrDteErrStatsTable, mscFrDteVFramerRowStatusTable=mscFrDteVFramerRowStatusTable, mscFrDteStDlciHqRowStatusEntry=mscFrDteStDlciHqRowStatusEntry, mscFrDteStDlciHqQueueByteThreshold=mscFrDteStDlciHqQueueByteThreshold, mscFrDteFramerProvTable=mscFrDteFramerProvTable, mscFrDteLeqPktThresholdExceeded=mscFrDteLeqPktThresholdExceeded, mscFrDteLeqRowStatus=mscFrDteLeqRowStatus, mscFrDteFramer=mscFrDteFramer, mscFrDteLmiErrorThreshold=mscFrDteLmiErrorThreshold, mscFrDteLeqMemThresholdExceeded=mscFrDteLeqMemThresholdExceeded, mscFrDteStDlciHqRowStatusTable=mscFrDteStDlciHqRowStatusTable, mscFrDteVFramerComponentName=mscFrDteVFramerComponentName, mscFrDteFramerOperationalState=mscFrDteFramerOperationalState, mscFrDteLeqTimedOutPkt=mscFrDteLeqTimedOutPkt, mscFrDteRowStatusEntry=mscFrDteRowStatusEntry, mscFrDteDynDlciDefsIpCos=mscFrDteDynDlciDefsIpCos, mscFrDteLeqCStatsEntry=mscFrDteLeqCStatsEntry, mscFrDteStorageType=mscFrDteStorageType, mscFrDteDynDlciDefsComponentName=mscFrDteDynDlciDefsComponentName, mscFrDteLeqTotalPktHandled=mscFrDteLeqTotalPktHandled, mscFrDteDlciStorageType=mscFrDteDlciStorageType, mscFrDteLeqThrStatsTable=mscFrDteLeqThrStatsTable, mscFrDteIndex=mscFrDteIndex, mscFrDteVFramerProvTable=mscFrDteVFramerProvTable, mscFrDteRgRowStatusTable=mscFrDteRgRowStatusTable, mscFrDteRgAdminState=mscFrDteRgAdminState, mscFrDteDlciDlciState=mscFrDteDlciDlciState, mscFrDteLeqCStatsTable=mscFrDteLeqCStatsTable, mscFrDteLmiProcedures=mscFrDteLmiProcedures, mscFrDteStDlciExcessBurst=mscFrDteStDlciExcessBurst, mscFrDteDlcmiUnknownIe=mscFrDteDlcmiUnknownIe, mscFrDteStDlciHqTotalPktQueued=mscFrDteStDlciHqTotalPktQueued, mscFrDteRgIfEntryTable=mscFrDteRgIfEntryTable, mscFrDteLmiOperEntry=mscFrDteLmiOperEntry, mscFrDteStDlciHqQueueMulticastThreshold=mscFrDteStDlciHqQueueMulticastThreshold, mscFrDteDynDlciDefsStdRowStatus=mscFrDteDynDlciDefsStdRowStatus, mscFrDteLeqProvEntry=mscFrDteLeqProvEntry, mscFrDteRgIfIndex=mscFrDteRgIfIndex, mscFrDteProvEntry=mscFrDteProvEntry, mscFrDteDlciExcessBurst=mscFrDteDlciExcessBurst, mscFrDteXmitDiscardLmiInactive=mscFrDteXmitDiscardLmiInactive, mscFrDteStDlciHqMaxPackets=mscFrDteStDlciHqMaxPackets, mscFrDteFramerRowStatus=mscFrDteFramerRowStatus, mscFrDteRgUsageState=mscFrDteRgUsageState, mscFrDteRgProvTable=mscFrDteRgProvTable, mscFrDteLeqIndex=mscFrDteLeqIndex, mscFrDteVFramerIndex=mscFrDteVFramerIndex, mscFrDteRgRowStatus=mscFrDteRgRowStatus, mscFrDteLeqQueuePktThreshold=mscFrDteLeqQueuePktThreshold, mscFrDteVFramerLogicalProcessor=mscFrDteVFramerLogicalProcessor, mscFrDteVFramerStateTable=mscFrDteVFramerStateTable, mscFrDteRgBfrRowStatus=mscFrDteRgBfrRowStatus, mscFrDteLmi=mscFrDteLmi, mscFrDteRgBfrMacAddr=mscFrDteRgBfrMacAddr, mscFrDteLeqProvTable=mscFrDteLeqProvTable, mscFrDteDlciRowStatus=mscFrDteDlciRowStatus, mscFrDteRgStateTable=mscFrDteRgStateTable, mscFrDteStDlciRgLinkTable=mscFrDteStDlciRgLinkTable, mscFrDteDlciCommittedInformationRate=mscFrDteDlciCommittedInformationRate, mscFrDteStateEntry=mscFrDteStateEntry, mscFrDteFramerInterfaceName=mscFrDteFramerInterfaceName, mscFrDteRgIfAdminStatus=mscFrDteRgIfAdminStatus, mscFrDteRgBfrOprEntry=mscFrDteRgBfrOprEntry, mscFrDteStDlciHqQueuePurgeDiscards=mscFrDteStDlciHqQueuePurgeDiscards, mscFrDteLmiStorageType=mscFrDteLmiStorageType, mscFrDteRgOperStatusEntry=mscFrDteRgOperStatusEntry, mscFrDteErrDiscards=mscFrDteErrDiscards, mscFrDteRgComponentName=mscFrDteRgComponentName, mscFrDteLeqQueueMulticastThreshold=mscFrDteLeqQueueMulticastThreshold, mscFrDteRgIndex=mscFrDteRgIndex, mscFrDteDynDlciDefsCommittedInformationRate=mscFrDteDynDlciDefsCommittedInformationRate, mscFrDteStDlciHqStorageType=mscFrDteStDlciHqStorageType, mscFrDteRgOperStatusTable=mscFrDteRgOperStatusTable, mscFrDteLeqRowStatusTable=mscFrDteLeqRowStatusTable, mscFrDteDynDlciDefs=mscFrDteDynDlciDefs, mscFrDteRgLtDlciValue=mscFrDteRgLtDlciValue, mscFrDteFramerProvEntry=mscFrDteFramerProvEntry, mscFrDteLmiRowStatusEntry=mscFrDteLmiRowStatusEntry, mscFrDteStDlciHqCurrentBytesQueued=mscFrDteStDlciHqCurrentBytesQueued, mscFrDteLmiRowStatusTable=mscFrDteLmiRowStatusTable, mscFrDteRecvDiscardPvcDown=mscFrDteRecvDiscardPvcDown, mscFrDteLmiIndex=mscFrDteLmiIndex, mscFrDteRgLtDlciEntry=mscFrDteRgLtDlciEntry, mscFrDteStDlciHqThrStatsEntry=mscFrDteStDlciHqThrStatsEntry, mscFrDteLeqCurrentBytesQueued=mscFrDteLeqCurrentBytesQueued, mscFrDteFramerStatsEntry=mscFrDteFramerStatsEntry, mscFrDteFramerRowStatusEntry=mscFrDteFramerRowStatusEntry, mscFrDteDynDlciDefsCommittedBurst=mscFrDteDynDlciDefsCommittedBurst, mscFrDteRowStatus=mscFrDteRowStatus, mscFrDteDlciExcessBurstAction=mscFrDteDlciExcessBurstAction, mscFrDteBadFc=mscFrDteBadFc, mscFrDteFramerNormPrioLinkUtilToIf=mscFrDteFramerNormPrioLinkUtilToIf, mscFrDteDlciSentOctets=mscFrDteDlciSentOctets, mscFrDteOperTable=mscFrDteOperTable, mscFrDteDlciRowStatusEntry=mscFrDteDlciRowStatusEntry, mscFrDteErrTime=mscFrDteErrTime, mscFrDteDefragSequenceErrors=mscFrDteDefragSequenceErrors, mscFrDteStDlciRowStatusEntry=mscFrDteStDlciRowStatusEntry, mscFrDteStDlciHqMaxMsecData=mscFrDteStDlciHqMaxMsecData, mscFrDteIfEntryTable=mscFrDteIfEntryTable, mscFrDteXmitDiscardFramerDown=mscFrDteXmitDiscardFramerDown, mscFrDteLmiLmiStatus=mscFrDteLmiLmiStatus, mscFrDteVFramerOctetFromOtherVFramer=mscFrDteVFramerOctetFromOtherVFramer, mscFrDteOperStatusEntry=mscFrDteOperStatusEntry, mscFrDteStDlciRateEnforcement=mscFrDteStDlciRateEnforcement, frameRelayDteCapabilitiesCA=frameRelayDteCapabilitiesCA, mscFrDteStDlciHqComponentName=mscFrDteStDlciHqComponentName, mscFrDteLeqStorageType=mscFrDteLeqStorageType, mscFrDteDlciDiscardedFrames=mscFrDteDlciDiscardedFrames, mscFrDteStDlciLinkToRemoteGroup=mscFrDteStDlciLinkToRemoteGroup, frameRelayDteGroup=frameRelayDteGroup, mscFrDteDlciCreationType=mscFrDteDlciCreationType, mscFrDteRowStatusTable=mscFrDteRowStatusTable, mscFrDteDynDlciDefsProvTable=mscFrDteDynDlciDefsProvTable, mscFrDteStDlciRgLinkEntry=mscFrDteStDlciRgLinkEntry, mscFrDteDlci=mscFrDteDlci, mscFrDteLmiMonitoredEvents=mscFrDteLmiMonitoredEvents, mscFrDteStDlciHqStatsEntry=mscFrDteStDlciHqStatsEntry, mscFrDteFramerNormPrioLinkUtilFromIf=mscFrDteFramerNormPrioLinkUtilFromIf, mscFrDteLinkOperState=mscFrDteLinkOperState, mscFrDteStDlciRowStatusTable=mscFrDteStDlciRowStatusTable, mscFrDteLmiComponentName=mscFrDteLmiComponentName, mscFrDteRgRowStatusEntry=mscFrDteRgRowStatusEntry, mscFrDteStDlciHqCurrentMulticastQueued=mscFrDteStDlciHqCurrentMulticastQueued, mscFrDteLmiProvEntry=mscFrDteLmiProvEntry, mscFrDteDynDlciDefsRowStatusTable=mscFrDteDynDlciDefsRowStatusTable, mscFrDteLeqCurrentPktQueued=mscFrDteLeqCurrentPktQueued, mscFrDteLeqMulThresholdExceeded=mscFrDteLeqMulThresholdExceeded, mscFrDteFramerIndex=mscFrDteFramerIndex, mscFrDteIfEntryEntry=mscFrDteIfEntryEntry, mscFrDteStDlciHqTotalPktDiscards=mscFrDteStDlciHqTotalPktDiscards, mscFrDteVFramerProvEntry=mscFrDteVFramerProvEntry, mscFrDteDynDlciDefsRowStatus=mscFrDteDynDlciDefsRowStatus, mscFrDteDlciCreationTime=mscFrDteDlciCreationTime, mscFrDteStDlciComponentName=mscFrDteStDlciComponentName, mscFrDteFramerOverruns=mscFrDteFramerOverruns, mscFrDteStDlciHqTotalPktHandled=mscFrDteStDlciHqTotalPktHandled, mscFrDteFramerRowStatusTable=mscFrDteFramerRowStatusTable, mscFrDteComponentName=mscFrDteComponentName, mscFrDteRg=mscFrDteRg, mscFrDteRgSnmpOperStatus=mscFrDteRgSnmpOperStatus, mscFrDteStDlciHqCStatsEntry=mscFrDteStDlciHqCStatsEntry, mscFrDteDlciStateTable=mscFrDteDlciStateTable, mscFrDteLeqTotalMulticastPkt=mscFrDteLeqTotalMulticastPkt, mscFrDteDynDlciDefsProvEntry=mscFrDteDynDlciDefsProvEntry, mscFrDteUsageState=mscFrDteUsageState, mscFrDteDlciSentFrames=mscFrDteDlciSentFrames, mscFrDteLmiProvTable=mscFrDteLmiProvTable, mscFrDteLeqByteThresholdExceeded=mscFrDteLeqByteThresholdExceeded, mscFrDteVFramer=mscFrDteVFramer, mscFrDteCustomerIdentifier=mscFrDteCustomerIdentifier, frameRelayDteGroupCA=frameRelayDteGroupCA, mscFrDteXmitDiscardPvcInactive=mscFrDteXmitDiscardPvcInactive, mscFrDteRgMpEntry=mscFrDteRgMpEntry, mscFrDteStDlciIpCos=mscFrDteStDlciIpCos, mscFrDteOperStatusTable=mscFrDteOperStatusTable, mscFrDteStDlciHqMulThresholdExceeded=mscFrDteStDlciHqMulThresholdExceeded, mscFrDteFramerUnderruns=mscFrDteFramerUnderruns, mscFrDteStDlciProvEntry=mscFrDteStDlciProvEntry, mscFrDteRgBfrProvEntry=mscFrDteRgBfrProvEntry, mscFrDteDlciComponentName=mscFrDteDlciComponentName, mscFrDteLeqQueuePurgeDiscards=mscFrDteLeqQueuePurgeDiscards, mscFrDteVFramerStorageType=mscFrDteVFramerStorageType, mscFrDteRgBfr=mscFrDteRgBfr, mscFrDteErrStatsEntry=mscFrDteErrStatsEntry, mscFrDteStDlciHqProvEntry=mscFrDteStDlciHqProvEntry, mscFrDteDlciLastTimeChange=mscFrDteDlciLastTimeChange, mscFrDteRgBfrIndex=mscFrDteRgBfrIndex, mscFrDteLmiPollingInterval=mscFrDteLmiPollingInterval, mscFrDteOperationalState=mscFrDteOperationalState, mscFrDteStDlciHqTimedOutPkt=mscFrDteStDlciHqTimedOutPkt, mscFrDteVFramerStatsEntry=mscFrDteVFramerStatsEntry, mscFrDteFramerUtilTable=mscFrDteFramerUtilTable, mscFrDteFramerStateEntry=mscFrDteFramerStateEntry, mscFrDteStDlciHqTimeToLive=mscFrDteStDlciHqTimeToLive, mscFrDteLeqThrStatsEntry=mscFrDteLeqThrStatsEntry, mscFrDteRgLinkToProtocolPort=mscFrDteRgLinkToProtocolPort, mscFrDteRgBfrRowStatusEntry=mscFrDteRgBfrRowStatusEntry, mscFrDteDynDlciDefsIndex=mscFrDteDynDlciDefsIndex, mscFrDteVFramerAdminState=mscFrDteVFramerAdminState, mscFrDteCidDataTable=mscFrDteCidDataTable, mscFrDteAcceptUndefinedDlci=mscFrDteAcceptUndefinedDlci, mscFrDteStDlciHqThrStatsTable=mscFrDteStDlciHqThrStatsTable, mscFrDteStDlciHqPktThresholdExceeded=mscFrDteStDlciHqPktThresholdExceeded, mscFrDteStDlciCommittedInformationRate=mscFrDteStDlciCommittedInformationRate, mscFrDteErrTable=mscFrDteErrTable, mscFrDteRgLtDlciTable=mscFrDteRgLtDlciTable, mscFrDteRgLtDlciRowStatus=mscFrDteRgLtDlciRowStatus, mscFrDteStDlciExcessBurstAction=mscFrDteStDlciExcessBurstAction, mscFrDte=mscFrDte, mscFrDteFramerLrcErrors=mscFrDteFramerLrcErrors, mscFrDteRgBfrProvTable=mscFrDteRgBfrProvTable, mscFrDteLeqStatsEntry=mscFrDteLeqStatsEntry, mscFrDteVFramerRowStatus=mscFrDteVFramerRowStatus, mscFrDteDlciIndex=mscFrDteDlciIndex, mscFrDteRgBfrComponentName=mscFrDteRgBfrComponentName, mscFrDteRecvDiscardLmiInactive=mscFrDteRecvDiscardLmiInactive, mscFrDteStDlciStorageType=mscFrDteStDlciStorageType, mscFrDteVFramerOperationalState=mscFrDteVFramerOperationalState, mscFrDteDlcmiUnknownRpt=mscFrDteDlcmiUnknownRpt, frameRelayDteMIB=frameRelayDteMIB, mscFrDteFramerLargeFrmErrors=mscFrDteFramerLargeFrmErrors, mscFrDteIllegalDlci=mscFrDteIllegalDlci, mscFrDteLeqTotalPktForwarded=mscFrDteLeqTotalPktForwarded, mscFrDteStDlciRowStatus=mscFrDteStDlciRowStatus, mscFrDteIfAdminStatus=mscFrDteIfAdminStatus, mscFrDteLeqQueueByteThreshold=mscFrDteLeqQueueByteThreshold, mscFrDteLeqTStatsTable=mscFrDteLeqTStatsTable, mscFrDteLeqTStatsEntry=mscFrDteLeqTStatsEntry, mscFrDteRgBfrRowStatusTable=mscFrDteRgBfrRowStatusTable, mscFrDteDlciUsageState=mscFrDteDlciUsageState, mscFrDteFramerFrmFromIf=mscFrDteFramerFrmFromIf, mscFrDteLeqMaxPercentMulticast=mscFrDteLeqMaxPercentMulticast, mscFrDteVFramerOtherVirtualFramer=mscFrDteVFramerOtherVirtualFramer, mscFrDteUlpUnknownProtocol=mscFrDteUlpUnknownProtocol, mscFrDteFramerComponentName=mscFrDteFramerComponentName, mscFrDteStDlciHqMaxPercentMulticast=mscFrDteStDlciHqMaxPercentMulticast, mscFrDteStDlciHqCurrentPktQueued=mscFrDteStDlciHqCurrentPktQueued, mscFrDteVFramerStatsTable=mscFrDteVFramerStatsTable, mscFrDteStDlciHqTStatsTable=mscFrDteStDlciHqTStatsTable, mscFrDteStDlci=mscFrDteStDlci, mscFrDteLeqMaxPackets=mscFrDteLeqMaxPackets, mscFrDteDlciReceivedFrames=mscFrDteDlciReceivedFrames, mscFrDteStDlciHqTotalPktForwarded=mscFrDteStDlciHqTotalPktForwarded, mscFrDteDlciStateEntry=mscFrDteDlciStateEntry, mscFrDteRgBfrOprTable=mscFrDteRgBfrOprTable, mscFrDteLmiFullEnquiryInterval=mscFrDteLmiFullEnquiryInterval, mscFrDteStDlciHqProvTable=mscFrDteStDlciHqProvTable, mscFrDteDynDlciDefsStorageType=mscFrDteDynDlciDefsStorageType, mscFrDteDynDlciDefsRowStatusEntry=mscFrDteDynDlciDefsRowStatusEntry, frameRelayDteGroupCA02=frameRelayDteGroupCA02, mscFrDteCidDataEntry=mscFrDteCidDataEntry, mscFrDteVFramerStateEntry=mscFrDteVFramerStateEntry, mscFrDteErrType=mscFrDteErrType, mscFrDteStDlciCommittedBurst=mscFrDteStDlciCommittedBurst, mscFrDteStDlciHqCStatsTable=mscFrDteStDlciHqCStatsTable, mscFrDteLeqTimeToLive=mscFrDteLeqTimeToLive, mscFrDteStDlciHqStatsTable=mscFrDteStDlciHqStatsTable, mscFrDteRgMaxTransmissionUnit=mscFrDteRgMaxTransmissionUnit, mscFrDteDlciRateEnforcement=mscFrDteDlciRateEnforcement, mscFrDteLeqComponentName=mscFrDteLeqComponentName, mscFrDteFramerAdminState=mscFrDteFramerAdminState, mscFrDteFramerCrcErrors=mscFrDteFramerCrcErrors, mscFrDteLeqTotalPktQueued=mscFrDteLeqTotalPktQueued)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayDteMIB", mscFrDteDlcmiSequenceErr=mscFrDteDlcmiSequenceErr, mscFrDteStDlciHqIndex=mscFrDteStDlciHqIndex, mscFrDteLeqRowStatusEntry=mscFrDteLeqRowStatusEntry, mscFrDteLeqStatsTable=mscFrDteLeqStatsTable, mscFrDteDynDlciDefsExcessBurst=mscFrDteDynDlciDefsExcessBurst, mscFrDteErrData=mscFrDteErrData, mscFrDteFramerStatsTable=mscFrDteFramerStatsTable, mscFrDteDlciReceivedFECNs=mscFrDteDlciReceivedFECNs, mscFrDteRgStateEntry=mscFrDteRgStateEntry, mscFrDteDlciReceivedOctets=mscFrDteDlciReceivedOctets, mscFrDteRgIfEntryEntry=mscFrDteRgIfEntryEntry, mscFrDteLeq=mscFrDteLeq, mscFrDteReceiveShort=mscFrDteReceiveShort, mscFrDteRgProvEntry=mscFrDteRgProvEntry, mscFrDteStDlciHqTStatsEntry=mscFrDteStDlciHqTStatsEntry, mscFrDteFramerStateTable=mscFrDteFramerStateTable, mscFrDteDlciOperTable=mscFrDteDlciOperTable, mscFrDteErrEntry=mscFrDteErrEntry, frameRelayDteCapabilities=frameRelayDteCapabilities, mscFrDteVFramerFrmToOtherVFramer=mscFrDteVFramerFrmToOtherVFramer, mscFrDteRgMpTable=mscFrDteRgMpTable, mscFrDteLeqHardwareForcedPkt=mscFrDteLeqHardwareForcedPkt, mscFrDteDlciOperationalState=mscFrDteDlciOperationalState, mscFrDteStDlciIndex=mscFrDteStDlciIndex, mscFrDteLeqTotalPktDiscards=mscFrDteLeqTotalPktDiscards, mscFrDteSnmpOperStatus=mscFrDteSnmpOperStatus, frameRelayDteGroupCA02A=frameRelayDteGroupCA02A, mscFrDteIfIndex=mscFrDteIfIndex, mscFrDteOperEntry=mscFrDteOperEntry, mscFrDteStDlciHqRowStatus=mscFrDteStDlciHqRowStatus, mscFrDteStDlciHqTotalMulticastPkt=mscFrDteStDlciHqTotalMulticastPkt, mscFrDteXmitDiscardPvcDown=mscFrDteXmitDiscardPvcDown, mscFrDteDlciRowStatusTable=mscFrDteDlciRowStatusTable, mscFrDteXmitDiscardCirExceeded=mscFrDteXmitDiscardCirExceeded, mscFrDteErrFaults=mscFrDteErrFaults, mscFrDteVFramerRowStatusEntry=mscFrDteVFramerRowStatusEntry, mscFrDteRgBfrStorageType=mscFrDteRgBfrStorageType, mscFrDteFramerFrmToIf=mscFrDteFramerFrmToIf, mscFrDteRgBfrMacType=mscFrDteRgBfrMacType, mscFrDteRgBfrBfrIndex=mscFrDteRgBfrBfrIndex, mscFrDteLeqForcedPktDiscards=mscFrDteLeqForcedPktDiscards, mscFrDteDlciOperEntry=mscFrDteDlciOperEntry, mscFrDteStDlciStdRowStatus=mscFrDteStDlciStdRowStatus, mscFrDteErrFaultTime=mscFrDteErrFaultTime, mscFrDteStDlciHqQueuePktThreshold=mscFrDteStDlciHqQueuePktThreshold, mscFrDteLeqMaxMsecData=mscFrDteLeqMaxMsecData, mscFrDteDlcmiProtoErr=mscFrDteDlcmiProtoErr, mscFrDteRgOperationalState=mscFrDteRgOperationalState, mscFrDteFramerAborts=mscFrDteFramerAborts, mscFrDteDlciReceivedBECNs=mscFrDteDlciReceivedBECNs, mscFrDteLmiRowStatus=mscFrDteLmiRowStatus, mscFrDteDlciAdminState=mscFrDteDlciAdminState, mscFrDteDlciCommittedBurst=mscFrDteDlciCommittedBurst, frameRelayDteCapabilitiesCA02=frameRelayDteCapabilitiesCA02, mscFrDteStateTable=mscFrDteStateTable, mscFrDteLeqCurrentMulticastQueued=mscFrDteLeqCurrentMulticastQueued, mscFrDteDynDlciDefsRateEnforcement=mscFrDteDynDlciDefsRateEnforcement, mscFrDteVFramerFrmFromOtherVFramer=mscFrDteVFramerFrmFromOtherVFramer, mscFrDteRgStorageType=mscFrDteRgStorageType, mscFrDteProvTable=mscFrDteProvTable, mscFrDteStDlciHqByteThresholdExceeded=mscFrDteStDlciHqByteThresholdExceeded, mscFrDteDynDlciDefsExcessBurstAction=mscFrDteDynDlciDefsExcessBurstAction, mscFrDteFramerStorageType=mscFrDteFramerStorageType, mscFrDteAdminState=mscFrDteAdminState)
