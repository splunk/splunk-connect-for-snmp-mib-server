#
# PySNMP MIB module INVENTORY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INVENTORY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:44:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
switch, = mibBuilder.importSymbols("QUANTA-SWITCH-MIB", "switch")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, TimeTicks, Counter64, ModuleIdentity, Bits, iso, ObjectIdentity, NotificationType, MibIdentifier, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "Counter64", "ModuleIdentity", "Bits", "iso", "ObjectIdentity", "NotificationType", "MibIdentifier", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
inventory = ModuleIdentity((1, 3, 6, 1, 4, 1, 7244, 2, 13))
if mibBuilder.loadTexts: inventory.setLastUpdated('201108310000Z')
if mibBuilder.loadTexts: inventory.setOrganization('Quanta Computer Inc.')
class AgentInventoryUnitPreference(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("disabled", 0), ("unsassigned", 1), ("assigned", 2))

class AgentInventoryUnitType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'x'

class AgentInventoryCardType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'x'

agentInventoryStackGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1))
agentInventoryStackReplicateSTK = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryStackReplicateSTK.setStatus('current')
agentInventoryStackReload = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryStackReload.setStatus('current')
agentInventoryStackMaxUnitNumber = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackMaxUnitNumber.setStatus('current')
agentInventoryStackReplicateSTKStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inProgress", 1), ("notInProgress", 2), ("finishedWithSuccess", 3), ("finishedWithError", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackReplicateSTKStatus.setStatus('current')
agentInventoryStackSTKname = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unconfigured", 1), ("image1", 2), ("image2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryStackSTKname.setStatus('current')
agentInventoryStackActivateSTK = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryStackActivateSTK.setStatus('current')
agentInventoryStackDeleteSTK = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryStackDeleteSTK.setStatus('current')
agentInventoryUnitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2))
agentInventorySupportedUnitTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 1), )
if mibBuilder.loadTexts: agentInventorySupportedUnitTable.setStatus('current')
agentInventorySupportedUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 1, 1), ).setIndexNames((0, "INVENTORY-MIB", "agentInventorySupportedUnitIndex"))
if mibBuilder.loadTexts: agentInventorySupportedUnitEntry.setStatus('current')
agentInventorySupportedUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: agentInventorySupportedUnitIndex.setStatus('current')
agentInventorySupportedUnitModelIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySupportedUnitModelIdentifier.setStatus('current')
agentInventorySupportedUnitDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySupportedUnitDescription.setStatus('current')
agentInventorySupportedUnitExpectedCodeVer = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySupportedUnitExpectedCodeVer.setStatus('current')
agentInventoryUnitTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2), )
if mibBuilder.loadTexts: agentInventoryUnitTable.setStatus('current')
agentInventoryUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1), ).setIndexNames((0, "INVENTORY-MIB", "agentInventoryUnitNumber"))
if mibBuilder.loadTexts: agentInventoryUnitEntry.setStatus('current')
agentInventoryUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentInventoryUnitNumber.setStatus('current')
agentInventoryUnitAssignNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentInventoryUnitAssignNumber.setStatus('current')
agentInventoryUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 3), AgentInventoryUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitType.setStatus('current')
agentInventoryUnitSupportedUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentInventoryUnitSupportedUnitIndex.setStatus('current')
agentInventoryUnitMgmtAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mgmtUnit", 1), ("stackUnit", 2), ("mgmtUnassigned", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentInventoryUnitMgmtAdmin.setStatus('current')
agentInventoryUnitHWMgmtPref = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 7), AgentInventoryUnitPreference()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitHWMgmtPref.setStatus('obsolete')
agentInventoryUnitHWMgmtPrefValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 15), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitHWMgmtPrefValue.setStatus('obsolete')
agentInventoryUnitAdminMgmtPref = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 9), AgentInventoryUnitPreference()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentInventoryUnitAdminMgmtPref.setStatus('obsolete')
agentInventoryUnitAdminMgmtPrefValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 15), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentInventoryUnitAdminMgmtPrefValue.setStatus('obsolete')
agentInventoryUnitStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("unsupported", 2), ("codeMismatch", 3), ("configMismatch", 4), ("sdmMismatch", 5), ("notPresent", 6), ("codeUpdate", 7), ("present", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitStatus.setStatus('current')
agentInventoryUnitDetectedCodeVer = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitDetectedCodeVer.setStatus('current')
agentInventoryUnitDetectedCodeInFlashVer = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitDetectedCodeInFlashVer.setStatus('current')
agentInventoryUnitUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitUpTime.setStatus('current')
agentInventoryUnitDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitDescription.setStatus('current')
agentInventoryUnitReplicateSTK = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryUnitReplicateSTK.setStatus('current')
agentInventoryUnitReload = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryUnitReload.setStatus('current')
agentInventoryUnitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentInventoryUnitRowStatus.setStatus('current')
agentInventoryUnitSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitSerialNumber.setStatus('current')
agentInventoryUnitImage1Version = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitImage1Version.setStatus('current')
agentInventoryUnitImage2Version = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitImage2Version.setStatus('current')
agentInventoryUnitSTKname = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("image1", 2), ("image2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryUnitSTKname.setStatus('current')
agentInventoryUnitActivateSTK = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryUnitActivateSTK.setStatus('current')
agentInventoryUnitDeleteSTK = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryUnitDeleteSTK.setStatus('current')
agentInventoryUnitReplicateSTKStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inProgress", 1), ("notInProgress", 2), ("finishedWithSuccess", 3), ("finishedWithError", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitReplicateSTKStatus.setStatus('current')
agentInventoryUnitStandby = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unassigned", 1), ("standby-opr", 2), ("standby-cfg", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryUnitStandby.setStatus('current')
agentInventoryUnitSFSTransferStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("inProgress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitSFSTransferStatus.setStatus('current')
agentInventoryUnitSFSLastAttemptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("failure", 3), ("min-bootcode-version-not-present", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryUnitSFSLastAttemptStatus.setStatus('current')
agentInventorySlotGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3))
agentInventorySlotTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1), )
if mibBuilder.loadTexts: agentInventorySlotTable.setStatus('current')
agentInventorySlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1), ).setIndexNames((0, "INVENTORY-MIB", "agentInventoryUnitNumber"), (0, "INVENTORY-MIB", "agentInventorySlotNumber"))
if mibBuilder.loadTexts: agentInventorySlotEntry.setStatus('current')
agentInventorySlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentInventorySlotNumber.setStatus('current')
agentInventorySlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("empty", 1), ("full", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySlotStatus.setStatus('current')
agentInventorySlotPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventorySlotPowerMode.setStatus('current')
agentInventorySlotAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventorySlotAdminMode.setStatus('current')
agentInventorySlotInsertedCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1, 6), AgentInventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySlotInsertedCardType.setStatus('current')
agentInventorySlotConfiguredCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1, 7), AgentInventoryCardType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventorySlotConfiguredCardType.setStatus('current')
agentInventorySlotCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 3, 1, 1, 8), Bits().clone(namedValues=NamedValues(("pluggable", 0), ("power-down", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySlotCapabilities.setStatus('current')
agentInventoryCardGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 4))
agentInventoryCardTypeTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 13, 4, 1), )
if mibBuilder.loadTexts: agentInventoryCardTypeTable.setStatus('current')
agentInventoryCardTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 13, 4, 1, 1), ).setIndexNames((0, "INVENTORY-MIB", "agentInventoryCardIndex"))
if mibBuilder.loadTexts: agentInventoryCardTypeEntry.setStatus('current')
agentInventoryCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentInventoryCardIndex.setStatus('current')
agentInventoryCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 4, 1, 1, 2), AgentInventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryCardType.setStatus('current')
agentInventoryCardModelIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryCardModelIdentifier.setStatus('current')
agentInventoryCardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryCardDescription.setStatus('current')
agentInventoryComponentGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 5))
agentInventoryComponentTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 13, 5, 1), )
if mibBuilder.loadTexts: agentInventoryComponentTable.setStatus('current')
agentInventoryComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 13, 5, 1, 1), ).setIndexNames((0, "INVENTORY-MIB", "agentInventoryComponentIndex"))
if mibBuilder.loadTexts: agentInventoryComponentEntry.setStatus('current')
agentInventoryComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentInventoryComponentIndex.setStatus('current')
agentInventoryComponentMnemonic = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryComponentMnemonic.setStatus('current')
agentInventoryComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryComponentName.setStatus('current')
agentInventoryStackPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7))
agentInventoryStackPortIpTelephonyQOSSupport = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryStackPortIpTelephonyQOSSupport.setStatus('current')
agentInventorySFSGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 8))
agentInventoryStackUnitNumber = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 8, 1), Unsigned32())
if mibBuilder.loadTexts: agentInventoryStackUnitNumber.setStatus('current')
agentInventorySFS = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventorySFS.setStatus('current')
agentInventorySFSAllowDowngrade = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventorySFSAllowDowngrade.setStatus('current')
agentInventorySFSTrap = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 13, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventorySFSTrap.setStatus('current')
agentInventoryStackPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2), )
if mibBuilder.loadTexts: agentInventoryStackPortTable.setStatus('current')
agentInventoryStackPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1), ).setIndexNames((0, "INVENTORY-MIB", "agentInventoryStackPortIndex"))
if mibBuilder.loadTexts: agentInventoryStackPortEntry.setStatus('current')
agentInventoryStackPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentInventoryStackPortIndex.setStatus('current')
agentInventoryStackPortUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortUnit.setStatus('current')
agentInventoryStackPortTag = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortTag.setStatus('current')
agentInventoryStackPortConfiguredStackMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stack", 1), ("ethernet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentInventoryStackPortConfiguredStackMode.setStatus('current')
agentInventoryStackPortRunningStackMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stack", 1), ("ethernet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortRunningStackMode.setStatus('current')
agentInventoryStackPortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortLinkStatus.setStatus('current')
agentInventoryStackPortLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortLinkSpeed.setStatus('current')
agentInventoryStackPortDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortDataRate.setStatus('current')
agentInventoryStackPortErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortErrorRate.setStatus('current')
agentInventoryStackPortTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 13, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryStackPortTotalErrors.setStatus('current')
agentInventoryTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0))
agentInventoryCardMismatch = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0, 1)).setObjects(("INVENTORY-MIB", "agentInventoryUnitNumber"), ("INVENTORY-MIB", "agentInventorySlotNumber"), ("INVENTORY-MIB", "agentInventorySlotInsertedCardType"), ("INVENTORY-MIB", "agentInventorySlotConfiguredCardType"))
if mibBuilder.loadTexts: agentInventoryCardMismatch.setStatus('current')
agentInventoryCardUnsupported = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0, 2)).setObjects(("INVENTORY-MIB", "agentInventoryUnitNumber"), ("INVENTORY-MIB", "agentInventorySlotNumber"), ("INVENTORY-MIB", "agentInventorySlotInsertedCardType"))
if mibBuilder.loadTexts: agentInventoryCardUnsupported.setStatus('current')
agentInventoryStackPortLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0, 3)).setObjects(("INVENTORY-MIB", "agentInventoryStackPortUnit"), ("INVENTORY-MIB", "agentInventoryStackPortTag"))
if mibBuilder.loadTexts: agentInventoryStackPortLinkUp.setStatus('current')
agentInventoryStackPortLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0, 4)).setObjects(("INVENTORY-MIB", "agentInventoryStackPortUnit"), ("INVENTORY-MIB", "agentInventoryStackPortTag"))
if mibBuilder.loadTexts: agentInventoryStackPortLinkDown.setStatus('current')
agentInventorySFSStart = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0, 5)).setObjects(("INVENTORY-MIB", "agentInventoryStackUnitNumber"))
if mibBuilder.loadTexts: agentInventorySFSStart.setStatus('current')
agentInventorySFSComplete = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0, 6)).setObjects(("INVENTORY-MIB", "agentInventoryStackUnitNumber"))
if mibBuilder.loadTexts: agentInventorySFSComplete.setStatus('current')
agentInventorySFSFail = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 13, 0, 7)).setObjects(("INVENTORY-MIB", "agentInventoryStackUnitNumber"))
if mibBuilder.loadTexts: agentInventorySFSFail.setStatus('current')
inventoryConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6))
inventoryCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 1))
inventoryGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 2))
inventoryCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 1, 1)).setObjects(("INVENTORY-MIB", "inventorySlotGroup"), ("INVENTORY-MIB", "inventoryCardGroup"), ("INVENTORY-MIB", "inventoryCardGroup"), ("INVENTORY-MIB", "inventoryUnitGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inventoryCompliance = inventoryCompliance.setStatus('obsolete')
inventoryCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 1, 2)).setObjects(("INVENTORY-MIB", "inventorySlotGroup"), ("INVENTORY-MIB", "inventoryCardGroup"), ("INVENTORY-MIB", "inventoryCardGroup"), ("INVENTORY-MIB", "inventoryUnitGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inventoryCompliance2 = inventoryCompliance2.setStatus('current')
inventorySupportedUnitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 2, 1)).setObjects(("INVENTORY-MIB", "agentInventorySupportedUnitIndex"), ("INVENTORY-MIB", "agentInventorySupportedUnitModelIdentifier"), ("INVENTORY-MIB", "agentInventorySupportedUnitDescription"), ("INVENTORY-MIB", "agentInventorySupportedUnitExpectedCodeVer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inventorySupportedUnitGroup = inventorySupportedUnitGroup.setStatus('current')
inventoryUnitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 2, 2)).setObjects(("INVENTORY-MIB", "agentInventoryUnitNumber"), ("INVENTORY-MIB", "agentInventoryUnitAssignNumber"), ("INVENTORY-MIB", "agentInventoryUnitType"), ("INVENTORY-MIB", "agentInventoryUnitMgmtAdmin"), ("INVENTORY-MIB", "agentInventoryUnitHWMgmtPref"), ("INVENTORY-MIB", "agentInventoryUnitAdminMgmtPref"), ("INVENTORY-MIB", "agentInventoryUnitStatus"), ("INVENTORY-MIB", "agentInventoryUnitDetectedCodeVer"), ("INVENTORY-MIB", "agentInventoryUnitDetectedCodeInFlashVer"), ("INVENTORY-MIB", "agentInventoryUnitUpTime"), ("INVENTORY-MIB", "agentInventoryUnitDescription"), ("INVENTORY-MIB", "agentInventoryUnitReplicateSTK"), ("INVENTORY-MIB", "agentInventoryUnitRowStatus"), ("INVENTORY-MIB", "agentInventoryUnitImage1Version"), ("INVENTORY-MIB", "agentInventoryUnitImage2Version"), ("INVENTORY-MIB", "agentInventoryUnitSTKname"), ("INVENTORY-MIB", "agentInventoryUnitActivateSTK"), ("INVENTORY-MIB", "agentInventoryUnitDeleteSTK"), ("INVENTORY-MIB", "agentInventoryUnitSTKname"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inventoryUnitGroup = inventoryUnitGroup.setStatus('current')
inventorySlotGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 2, 3)).setObjects(("INVENTORY-MIB", "agentInventorySlotNumber"), ("INVENTORY-MIB", "agentInventorySlotStatus"), ("INVENTORY-MIB", "agentInventorySlotPowerMode"), ("INVENTORY-MIB", "agentInventorySlotAdminMode"), ("INVENTORY-MIB", "agentInventorySlotInsertedCardType"), ("INVENTORY-MIB", "agentInventorySlotConfiguredCardType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inventorySlotGroup = inventorySlotGroup.setStatus('current')
inventoryCardGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 2, 4)).setObjects(("INVENTORY-MIB", "agentInventoryCardIndex"), ("INVENTORY-MIB", "agentInventoryCardType"), ("INVENTORY-MIB", "agentInventoryCardModelIdentifier"), ("INVENTORY-MIB", "agentInventoryCardDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inventoryCardGroup = inventoryCardGroup.setStatus('current')
inventoryNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 7244, 2, 13, 6, 2, 5)).setObjects(("INVENTORY-MIB", "agentInventoryCardMismatch"), ("INVENTORY-MIB", "agentInventoryCardUnsupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inventoryNotificationsGroup = inventoryNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("INVENTORY-MIB", inventoryCompliances=inventoryCompliances, agentInventoryUnitDetectedCodeInFlashVer=agentInventoryUnitDetectedCodeInFlashVer, agentInventoryStackPortTag=agentInventoryStackPortTag, agentInventoryCardMismatch=agentInventoryCardMismatch, agentInventoryStackPortLinkUp=agentInventoryStackPortLinkUp, agentInventoryUnitImage2Version=agentInventoryUnitImage2Version, agentInventorySFSAllowDowngrade=agentInventorySFSAllowDowngrade, agentInventoryStackPortGroup=agentInventoryStackPortGroup, agentInventoryComponentTable=agentInventoryComponentTable, agentInventorySupportedUnitDescription=agentInventorySupportedUnitDescription, inventoryCompliance=inventoryCompliance, agentInventoryStackUnitNumber=agentInventoryStackUnitNumber, agentInventoryUnitAdminMgmtPrefValue=agentInventoryUnitAdminMgmtPrefValue, agentInventorySlotNumber=agentInventorySlotNumber, agentInventorySFSComplete=agentInventorySFSComplete, agentInventoryUnitTable=agentInventoryUnitTable, agentInventorySFSGroup=agentInventorySFSGroup, agentInventoryUnitReload=agentInventoryUnitReload, agentInventoryStackPortTotalErrors=agentInventoryStackPortTotalErrors, agentInventoryCardTypeEntry=agentInventoryCardTypeEntry, inventoryGroups=inventoryGroups, agentInventorySupportedUnitTable=agentInventorySupportedUnitTable, agentInventoryCardType=agentInventoryCardType, agentInventoryUnitDetectedCodeVer=agentInventoryUnitDetectedCodeVer, agentInventoryStackReplicateSTKStatus=agentInventoryStackReplicateSTKStatus, PYSNMP_MODULE_ID=inventory, agentInventoryStackPortLinkSpeed=agentInventoryStackPortLinkSpeed, agentInventoryUnitUpTime=agentInventoryUnitUpTime, agentInventoryUnitSFSTransferStatus=agentInventoryUnitSFSTransferStatus, agentInventoryStackDeleteSTK=agentInventoryStackDeleteSTK, agentInventoryUnitMgmtAdmin=agentInventoryUnitMgmtAdmin, agentInventoryComponentName=agentInventoryComponentName, AgentInventoryUnitPreference=AgentInventoryUnitPreference, agentInventoryUnitAssignNumber=agentInventoryUnitAssignNumber, inventory=inventory, agentInventoryCardGroup=agentInventoryCardGroup, agentInventoryCardIndex=agentInventoryCardIndex, agentInventoryUnitEntry=agentInventoryUnitEntry, inventoryNotificationsGroup=inventoryNotificationsGroup, agentInventorySlotGroup=agentInventorySlotGroup, inventorySlotGroup=inventorySlotGroup, AgentInventoryUnitType=AgentInventoryUnitType, agentInventorySlotPowerMode=agentInventorySlotPowerMode, agentInventoryTraps=agentInventoryTraps, agentInventoryUnitStatus=agentInventoryUnitStatus, AgentInventoryCardType=AgentInventoryCardType, inventoryCompliance2=inventoryCompliance2, agentInventoryStackPortUnit=agentInventoryStackPortUnit, agentInventorySFSTrap=agentInventorySFSTrap, agentInventoryCardDescription=agentInventoryCardDescription, agentInventoryComponentIndex=agentInventoryComponentIndex, agentInventoryUnitNumber=agentInventoryUnitNumber, agentInventorySlotInsertedCardType=agentInventorySlotInsertedCardType, agentInventoryStackActivateSTK=agentInventoryStackActivateSTK, agentInventorySlotAdminMode=agentInventorySlotAdminMode, agentInventorySupportedUnitIndex=agentInventorySupportedUnitIndex, agentInventoryStackReload=agentInventoryStackReload, agentInventoryStackPortRunningStackMode=agentInventoryStackPortRunningStackMode, agentInventoryStackGroup=agentInventoryStackGroup, agentInventorySFSStart=agentInventorySFSStart, agentInventoryStackPortLinkStatus=agentInventoryStackPortLinkStatus, agentInventoryComponentGroup=agentInventoryComponentGroup, agentInventoryStackPortLinkDown=agentInventoryStackPortLinkDown, agentInventoryUnitType=agentInventoryUnitType, agentInventoryUnitImage1Version=agentInventoryUnitImage1Version, agentInventoryComponentEntry=agentInventoryComponentEntry, agentInventorySupportedUnitExpectedCodeVer=agentInventorySupportedUnitExpectedCodeVer, agentInventoryStackPortDataRate=agentInventoryStackPortDataRate, agentInventoryStackPortErrorRate=agentInventoryStackPortErrorRate, agentInventoryUnitGroup=agentInventoryUnitGroup, inventoryConformance=inventoryConformance, agentInventoryUnitHWMgmtPrefValue=agentInventoryUnitHWMgmtPrefValue, agentInventoryStackPortTable=agentInventoryStackPortTable, agentInventoryCardModelIdentifier=agentInventoryCardModelIdentifier, agentInventorySFSFail=agentInventorySFSFail, agentInventorySupportedUnitEntry=agentInventorySupportedUnitEntry, inventorySupportedUnitGroup=inventorySupportedUnitGroup, agentInventoryStackPortConfiguredStackMode=agentInventoryStackPortConfiguredStackMode, agentInventoryStackPortEntry=agentInventoryStackPortEntry, agentInventoryStackPortIndex=agentInventoryStackPortIndex, agentInventorySlotTable=agentInventorySlotTable, agentInventoryStackMaxUnitNumber=agentInventoryStackMaxUnitNumber, agentInventoryUnitSFSLastAttemptStatus=agentInventoryUnitSFSLastAttemptStatus, agentInventoryComponentMnemonic=agentInventoryComponentMnemonic, agentInventoryUnitReplicateSTK=agentInventoryUnitReplicateSTK, agentInventoryUnitStandby=agentInventoryUnitStandby, agentInventoryStackReplicateSTK=agentInventoryStackReplicateSTK, agentInventoryUnitActivateSTK=agentInventoryUnitActivateSTK, agentInventorySlotEntry=agentInventorySlotEntry, agentInventoryStackSTKname=agentInventoryStackSTKname, agentInventoryUnitSerialNumber=agentInventoryUnitSerialNumber, agentInventorySlotConfiguredCardType=agentInventorySlotConfiguredCardType, agentInventorySlotCapabilities=agentInventorySlotCapabilities, agentInventorySupportedUnitModelIdentifier=agentInventorySupportedUnitModelIdentifier, agentInventoryUnitSTKname=agentInventoryUnitSTKname, agentInventoryUnitReplicateSTKStatus=agentInventoryUnitReplicateSTKStatus, agentInventoryUnitAdminMgmtPref=agentInventoryUnitAdminMgmtPref, agentInventoryUnitDescription=agentInventoryUnitDescription, agentInventorySFS=agentInventorySFS, agentInventoryStackPortIpTelephonyQOSSupport=agentInventoryStackPortIpTelephonyQOSSupport, inventoryCardGroup=inventoryCardGroup, agentInventoryCardUnsupported=agentInventoryCardUnsupported, agentInventorySlotStatus=agentInventorySlotStatus, agentInventoryUnitRowStatus=agentInventoryUnitRowStatus, inventoryUnitGroup=inventoryUnitGroup, agentInventoryUnitSupportedUnitIndex=agentInventoryUnitSupportedUnitIndex, agentInventoryCardTypeTable=agentInventoryCardTypeTable, agentInventoryUnitDeleteSTK=agentInventoryUnitDeleteSTK, agentInventoryUnitHWMgmtPref=agentInventoryUnitHWMgmtPref)
