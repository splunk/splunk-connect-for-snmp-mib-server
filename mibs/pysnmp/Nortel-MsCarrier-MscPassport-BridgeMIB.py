#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-BridgeMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-BridgeMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
StorageType, Unsigned32, Counter32, DisplayString, Gauge32, BridgeId, InterfaceIndex, RowStatus, MacAddress, Integer32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "StorageType", "Unsigned32", "Counter32", "DisplayString", "Gauge32", "BridgeId", "InterfaceIndex", "RowStatus", "MacAddress", "Integer32")
AsciiStringIndex, HexString, AsciiString, Hex, Link, DashedHexString, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiStringIndex", "HexString", "AsciiString", "Hex", "Link", "DashedHexString", "NonReplicated")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
mscVrIndex, mscVrPpIndex, mscVrPp, mscVr = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex", "mscVrPpIndex", "mscVrPp", "mscVr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Counter32, Gauge32, iso, ModuleIdentity, TimeTicks, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Counter32", "Gauge32", "iso", "ModuleIdentity", "TimeTicks", "Integer32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bridgeMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25))
mscVrPpTbcl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2))
mscVrPpTbclRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 1), )
if mibBuilder.loadTexts: mscVrPpTbclRowStatusTable.setStatus('mandatory')
mscVrPpTbclRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclRowStatusEntry.setStatus('mandatory')
mscVrPpTbclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclRowStatus.setStatus('mandatory')
mscVrPpTbclComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclComponentName.setStatus('mandatory')
mscVrPpTbclStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclStorageType.setStatus('mandatory')
mscVrPpTbclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpTbclIndex.setStatus('mandatory')
mscVrPpTbclProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 10), )
if mibBuilder.loadTexts: mscVrPpTbclProvTable.setStatus('mandatory')
mscVrPpTbclProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclProvEntry.setStatus('mandatory')
mscVrPpTbclTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclTranslateIpx.setStatus('mandatory')
mscVrPpTbclFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclFragmentIp.setStatus('mandatory')
mscVrPpTbclServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclServiceClass.setStatus('mandatory')
mscVrPpTbclConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclConvertArpMacAddress.setStatus('mandatory')
mscVrPpTbclPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclPortNum.setStatus('mandatory')
mscVrPpTbclTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 11), )
if mibBuilder.loadTexts: mscVrPpTbclTbProvTable.setStatus('mandatory')
mscVrPpTbclTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclTbProvEntry.setStatus('mandatory')
mscVrPpTbclSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclSecureOption.setStatus('mandatory')
mscVrPpTbclStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12), )
if mibBuilder.loadTexts: mscVrPpTbclStpProvTable.setStatus('mandatory')
mscVrPpTbclStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclStpProvEntry.setStatus('mandatory')
mscVrPpTbclAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclAdminStatus.setStatus('mandatory')
mscVrPpTbclPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclPortStateStpControl.setStatus('mandatory')
mscVrPpTbclStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclStpTypeProv.setStatus('mandatory')
mscVrPpTbclPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclPortPriority.setStatus('mandatory')
mscVrPpTbclPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclPathCost.setStatus('mandatory')
mscVrPpTbclPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclPathCostMethod.setStatus('mandatory')
mscVrPpTbclDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 13), )
if mibBuilder.loadTexts: mscVrPpTbclDIProvTable.setStatus('mandatory')
mscVrPpTbclDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclDIProvEntry.setStatus('mandatory')
mscVrPpTbclDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclDomainNum.setStatus('mandatory')
mscVrPpTbclPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclPreserveDomain.setStatus('mandatory')
mscVrPpTbclStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 14), )
if mibBuilder.loadTexts: mscVrPpTbclStateTable.setStatus('mandatory')
mscVrPpTbclStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclStateEntry.setStatus('mandatory')
mscVrPpTbclAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclAdminState.setStatus('mandatory')
mscVrPpTbclOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclOperationalState.setStatus('mandatory')
mscVrPpTbclUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclUsageState.setStatus('mandatory')
mscVrPpTbclOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 15), )
if mibBuilder.loadTexts: mscVrPpTbclOperStatusTable.setStatus('mandatory')
mscVrPpTbclOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclOperStatusEntry.setStatus('mandatory')
mscVrPpTbclSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclSnmpOperStatus.setStatus('mandatory')
mscVrPpTbclOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16), )
if mibBuilder.loadTexts: mscVrPpTbclOperTable.setStatus('mandatory')
mscVrPpTbclOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclOperEntry.setStatus('mandatory')
mscVrPpTbclPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclPortName.setStatus('mandatory')
mscVrPpTbclUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclUpTime.setStatus('mandatory')
mscVrPpTbclDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclDownTime.setStatus('mandatory')
mscVrPpTbclBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclBridgingMode.setStatus('mandatory')
mscVrPpTbclBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclBridgePortConfig.setStatus('mandatory')
mscVrPpTbclBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclBridgePortType.setStatus('mandatory')
mscVrPpTbclIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclIfIndex.setStatus('mandatory')
mscVrPpTbclDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclDelayExceededDiscards.setStatus('mandatory')
mscVrPpTbclMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclMtuExceededDiscards.setStatus('mandatory')
mscVrPpTbclTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17), )
if mibBuilder.loadTexts: mscVrPpTbclTbOperTable.setStatus('mandatory')
mscVrPpTbclTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclTbOperEntry.setStatus('mandatory')
mscVrPpTbclMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclMaxInfo.setStatus('mandatory')
mscVrPpTbclBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclBadVerifyDiscards.setStatus('mandatory')
mscVrPpTbclUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclUnicastNoMatches.setStatus('mandatory')
mscVrPpTbclStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclStaticEntryDiscards.setStatus('mandatory')
mscVrPpTbclDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclDynamicEntryDiscards.setStatus('mandatory')
mscVrPpTbclLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclLearningDiscards.setStatus('mandatory')
mscVrPpTbclInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclInDiscards.setStatus('mandatory')
mscVrPpTbclInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclInFrames.setStatus('mandatory')
mscVrPpTbclOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclOutFrames.setStatus('mandatory')
mscVrPpTbclStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18), )
if mibBuilder.loadTexts: mscVrPpTbclStpOperTable.setStatus('mandatory')
mscVrPpTbclStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclStpOperEntry.setStatus('mandatory')
mscVrPpTbclStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclStpPortState.setStatus('mandatory')
mscVrPpTbclStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclStpTypeOper.setStatus('mandatory')
mscVrPpTbclDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclDesignatedCost.setStatus('mandatory')
mscVrPpTbclPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclPathCostOper.setStatus('mandatory')
mscVrPpTbclDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclDesignatedBridge.setStatus('mandatory')
mscVrPpTbclDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclDesignatedPort.setStatus('mandatory')
mscVrPpTbclForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclForwardTransitions.setStatus('mandatory')
mscVrPpTbclBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclBlockingDiscards.setStatus('mandatory')
mscVrPpTbclDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclDesignatedRoot.setStatus('mandatory')
mscVrPpTbclStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 19), )
if mibBuilder.loadTexts: mscVrPpTbclStatsTable.setStatus('mandatory')
mscVrPpTbclStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"))
if mibBuilder.loadTexts: mscVrPpTbclStatsEntry.setStatus('mandatory')
mscVrPpTbclBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclBadAbstractDiscards.setStatus('mandatory')
mscVrPpTbclTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclTinygramFramesIn.setStatus('mandatory')
mscVrPpTbclTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclTinygramFramesOut.setStatus('mandatory')
mscVrPpTbclInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclInFilterDiscards.setStatus('mandatory')
mscVrPpTbclOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclOutFilterDiscards.setStatus('mandatory')
mscVrPpTbclNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2))
mscVrPpTbclNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrPpTbclNsRowStatusTable.setStatus('mandatory')
mscVrPpTbclNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclNsIndex"))
if mibBuilder.loadTexts: mscVrPpTbclNsRowStatusEntry.setStatus('mandatory')
mscVrPpTbclNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclNsRowStatus.setStatus('mandatory')
mscVrPpTbclNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclNsComponentName.setStatus('mandatory')
mscVrPpTbclNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbclNsStorageType.setStatus('mandatory')
mscVrPpTbclNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpTbclNsIndex.setStatus('mandatory')
mscVrPpTbclNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 10), )
if mibBuilder.loadTexts: mscVrPpTbclNsProvTable.setStatus('mandatory')
mscVrPpTbclNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbclNsIndex"))
if mibBuilder.loadTexts: mscVrPpTbclNsProvEntry.setStatus('mandatory')
mscVrPpTbclNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclNsIncomingFilter.setStatus('mandatory')
mscVrPpTbclNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 2, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbclNsOutgoingFilter.setStatus('mandatory')
mscVrPpFddiETB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3))
mscVrPpFddiETBRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 1), )
if mibBuilder.loadTexts: mscVrPpFddiETBRowStatusTable.setStatus('mandatory')
mscVrPpFddiETBRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBRowStatusEntry.setStatus('mandatory')
mscVrPpFddiETBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBRowStatus.setStatus('mandatory')
mscVrPpFddiETBComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBComponentName.setStatus('mandatory')
mscVrPpFddiETBStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBStorageType.setStatus('mandatory')
mscVrPpFddiETBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpFddiETBIndex.setStatus('mandatory')
mscVrPpFddiETBProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 10), )
if mibBuilder.loadTexts: mscVrPpFddiETBProvTable.setStatus('mandatory')
mscVrPpFddiETBProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBProvEntry.setStatus('mandatory')
mscVrPpFddiETBTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBTranslateIpx.setStatus('mandatory')
mscVrPpFddiETBFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBFragmentIp.setStatus('mandatory')
mscVrPpFddiETBServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBServiceClass.setStatus('mandatory')
mscVrPpFddiETBConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBConvertArpMacAddress.setStatus('mandatory')
mscVrPpFddiETBPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBPortNum.setStatus('mandatory')
mscVrPpFddiETBTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 11), )
if mibBuilder.loadTexts: mscVrPpFddiETBTbProvTable.setStatus('mandatory')
mscVrPpFddiETBTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBTbProvEntry.setStatus('mandatory')
mscVrPpFddiETBSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBSecureOption.setStatus('mandatory')
mscVrPpFddiETBStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12), )
if mibBuilder.loadTexts: mscVrPpFddiETBStpProvTable.setStatus('mandatory')
mscVrPpFddiETBStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBStpProvEntry.setStatus('mandatory')
mscVrPpFddiETBAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBAdminStatus.setStatus('mandatory')
mscVrPpFddiETBPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBPortStateStpControl.setStatus('mandatory')
mscVrPpFddiETBStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBStpTypeProv.setStatus('mandatory')
mscVrPpFddiETBPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBPortPriority.setStatus('mandatory')
mscVrPpFddiETBPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBPathCost.setStatus('mandatory')
mscVrPpFddiETBPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBPathCostMethod.setStatus('mandatory')
mscVrPpFddiETBDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 13), )
if mibBuilder.loadTexts: mscVrPpFddiETBDIProvTable.setStatus('mandatory')
mscVrPpFddiETBDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBDIProvEntry.setStatus('mandatory')
mscVrPpFddiETBDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBDomainNum.setStatus('mandatory')
mscVrPpFddiETBPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBPreserveDomain.setStatus('mandatory')
mscVrPpFddiETBStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 14), )
if mibBuilder.loadTexts: mscVrPpFddiETBStateTable.setStatus('mandatory')
mscVrPpFddiETBStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBStateEntry.setStatus('mandatory')
mscVrPpFddiETBAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBAdminState.setStatus('mandatory')
mscVrPpFddiETBOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBOperationalState.setStatus('mandatory')
mscVrPpFddiETBUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBUsageState.setStatus('mandatory')
mscVrPpFddiETBOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 15), )
if mibBuilder.loadTexts: mscVrPpFddiETBOperStatusTable.setStatus('mandatory')
mscVrPpFddiETBOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBOperStatusEntry.setStatus('mandatory')
mscVrPpFddiETBSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBSnmpOperStatus.setStatus('mandatory')
mscVrPpFddiETBOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16), )
if mibBuilder.loadTexts: mscVrPpFddiETBOperTable.setStatus('mandatory')
mscVrPpFddiETBOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBOperEntry.setStatus('mandatory')
mscVrPpFddiETBPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBPortName.setStatus('mandatory')
mscVrPpFddiETBUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBUpTime.setStatus('mandatory')
mscVrPpFddiETBDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBDownTime.setStatus('mandatory')
mscVrPpFddiETBBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBBridgingMode.setStatus('mandatory')
mscVrPpFddiETBBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBBridgePortConfig.setStatus('mandatory')
mscVrPpFddiETBBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBBridgePortType.setStatus('mandatory')
mscVrPpFddiETBIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBIfIndex.setStatus('mandatory')
mscVrPpFddiETBDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBDelayExceededDiscards.setStatus('mandatory')
mscVrPpFddiETBMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBMtuExceededDiscards.setStatus('mandatory')
mscVrPpFddiETBTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17), )
if mibBuilder.loadTexts: mscVrPpFddiETBTbOperTable.setStatus('mandatory')
mscVrPpFddiETBTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBTbOperEntry.setStatus('mandatory')
mscVrPpFddiETBMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBMaxInfo.setStatus('mandatory')
mscVrPpFddiETBBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBBadVerifyDiscards.setStatus('mandatory')
mscVrPpFddiETBUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBUnicastNoMatches.setStatus('mandatory')
mscVrPpFddiETBStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBStaticEntryDiscards.setStatus('mandatory')
mscVrPpFddiETBDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBDynamicEntryDiscards.setStatus('mandatory')
mscVrPpFddiETBLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBLearningDiscards.setStatus('mandatory')
mscVrPpFddiETBInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBInDiscards.setStatus('mandatory')
mscVrPpFddiETBInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBInFrames.setStatus('mandatory')
mscVrPpFddiETBOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBOutFrames.setStatus('mandatory')
mscVrPpFddiETBStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18), )
if mibBuilder.loadTexts: mscVrPpFddiETBStpOperTable.setStatus('mandatory')
mscVrPpFddiETBStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBStpOperEntry.setStatus('mandatory')
mscVrPpFddiETBStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBStpPortState.setStatus('mandatory')
mscVrPpFddiETBStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBStpTypeOper.setStatus('mandatory')
mscVrPpFddiETBDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBDesignatedCost.setStatus('mandatory')
mscVrPpFddiETBPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBPathCostOper.setStatus('mandatory')
mscVrPpFddiETBDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBDesignatedBridge.setStatus('mandatory')
mscVrPpFddiETBDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBDesignatedPort.setStatus('mandatory')
mscVrPpFddiETBForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBForwardTransitions.setStatus('mandatory')
mscVrPpFddiETBBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBBlockingDiscards.setStatus('mandatory')
mscVrPpFddiETBDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBDesignatedRoot.setStatus('mandatory')
mscVrPpFddiETBStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 19), )
if mibBuilder.loadTexts: mscVrPpFddiETBStatsTable.setStatus('mandatory')
mscVrPpFddiETBStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBStatsEntry.setStatus('mandatory')
mscVrPpFddiETBBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBBadAbstractDiscards.setStatus('mandatory')
mscVrPpFddiETBTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBTinygramFramesIn.setStatus('mandatory')
mscVrPpFddiETBTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBTinygramFramesOut.setStatus('mandatory')
mscVrPpFddiETBInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBInFilterDiscards.setStatus('mandatory')
mscVrPpFddiETBOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBOutFilterDiscards.setStatus('mandatory')
mscVrPpFddiETBNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2))
mscVrPpFddiETBNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 1), )
if mibBuilder.loadTexts: mscVrPpFddiETBNsRowStatusTable.setStatus('mandatory')
mscVrPpFddiETBNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBNsIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBNsRowStatusEntry.setStatus('mandatory')
mscVrPpFddiETBNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBNsRowStatus.setStatus('mandatory')
mscVrPpFddiETBNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBNsComponentName.setStatus('mandatory')
mscVrPpFddiETBNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpFddiETBNsStorageType.setStatus('mandatory')
mscVrPpFddiETBNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpFddiETBNsIndex.setStatus('mandatory')
mscVrPpFddiETBNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 10), )
if mibBuilder.loadTexts: mscVrPpFddiETBNsProvTable.setStatus('mandatory')
mscVrPpFddiETBNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpFddiETBNsIndex"))
if mibBuilder.loadTexts: mscVrPpFddiETBNsProvEntry.setStatus('mandatory')
mscVrPpFddiETBNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBNsIncomingFilter.setStatus('mandatory')
mscVrPpFddiETBNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 3, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpFddiETBNsOutgoingFilter.setStatus('mandatory')
mscVrPpTbp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4))
mscVrPpTbpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 1), )
if mibBuilder.loadTexts: mscVrPpTbpRowStatusTable.setStatus('mandatory')
mscVrPpTbpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpRowStatusEntry.setStatus('mandatory')
mscVrPpTbpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpRowStatus.setStatus('mandatory')
mscVrPpTbpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpComponentName.setStatus('mandatory')
mscVrPpTbpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpStorageType.setStatus('mandatory')
mscVrPpTbpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpTbpIndex.setStatus('mandatory')
mscVrPpTbpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 10), )
if mibBuilder.loadTexts: mscVrPpTbpProvTable.setStatus('mandatory')
mscVrPpTbpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpProvEntry.setStatus('mandatory')
mscVrPpTbpTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpTranslateIpx.setStatus('mandatory')
mscVrPpTbpFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpFragmentIp.setStatus('mandatory')
mscVrPpTbpServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpServiceClass.setStatus('mandatory')
mscVrPpTbpConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpConvertArpMacAddress.setStatus('mandatory')
mscVrPpTbpPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpPortNum.setStatus('mandatory')
mscVrPpTbpTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 11), )
if mibBuilder.loadTexts: mscVrPpTbpTbProvTable.setStatus('mandatory')
mscVrPpTbpTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpTbProvEntry.setStatus('mandatory')
mscVrPpTbpSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpSecureOption.setStatus('mandatory')
mscVrPpTbpStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12), )
if mibBuilder.loadTexts: mscVrPpTbpStpProvTable.setStatus('mandatory')
mscVrPpTbpStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpStpProvEntry.setStatus('mandatory')
mscVrPpTbpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpAdminStatus.setStatus('mandatory')
mscVrPpTbpPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpPortStateStpControl.setStatus('mandatory')
mscVrPpTbpStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpStpTypeProv.setStatus('mandatory')
mscVrPpTbpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpPortPriority.setStatus('mandatory')
mscVrPpTbpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpPathCost.setStatus('mandatory')
mscVrPpTbpPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpPathCostMethod.setStatus('mandatory')
mscVrPpTbpDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 13), )
if mibBuilder.loadTexts: mscVrPpTbpDIProvTable.setStatus('mandatory')
mscVrPpTbpDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpDIProvEntry.setStatus('mandatory')
mscVrPpTbpDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpDomainNum.setStatus('mandatory')
mscVrPpTbpPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpPreserveDomain.setStatus('mandatory')
mscVrPpTbpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 14), )
if mibBuilder.loadTexts: mscVrPpTbpStateTable.setStatus('mandatory')
mscVrPpTbpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpStateEntry.setStatus('mandatory')
mscVrPpTbpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpAdminState.setStatus('mandatory')
mscVrPpTbpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpOperationalState.setStatus('mandatory')
mscVrPpTbpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpUsageState.setStatus('mandatory')
mscVrPpTbpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 15), )
if mibBuilder.loadTexts: mscVrPpTbpOperStatusTable.setStatus('mandatory')
mscVrPpTbpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpOperStatusEntry.setStatus('mandatory')
mscVrPpTbpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpSnmpOperStatus.setStatus('mandatory')
mscVrPpTbpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16), )
if mibBuilder.loadTexts: mscVrPpTbpOperTable.setStatus('mandatory')
mscVrPpTbpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpOperEntry.setStatus('mandatory')
mscVrPpTbpPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpPortName.setStatus('mandatory')
mscVrPpTbpUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpUpTime.setStatus('mandatory')
mscVrPpTbpDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpDownTime.setStatus('mandatory')
mscVrPpTbpBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpBridgingMode.setStatus('mandatory')
mscVrPpTbpBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpBridgePortConfig.setStatus('mandatory')
mscVrPpTbpBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpBridgePortType.setStatus('mandatory')
mscVrPpTbpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpIfIndex.setStatus('mandatory')
mscVrPpTbpDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpDelayExceededDiscards.setStatus('mandatory')
mscVrPpTbpMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpMtuExceededDiscards.setStatus('mandatory')
mscVrPpTbpTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17), )
if mibBuilder.loadTexts: mscVrPpTbpTbOperTable.setStatus('mandatory')
mscVrPpTbpTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpTbOperEntry.setStatus('mandatory')
mscVrPpTbpMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpMaxInfo.setStatus('mandatory')
mscVrPpTbpBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpBadVerifyDiscards.setStatus('mandatory')
mscVrPpTbpUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpUnicastNoMatches.setStatus('mandatory')
mscVrPpTbpStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpStaticEntryDiscards.setStatus('mandatory')
mscVrPpTbpDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpDynamicEntryDiscards.setStatus('mandatory')
mscVrPpTbpLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpLearningDiscards.setStatus('mandatory')
mscVrPpTbpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpInDiscards.setStatus('mandatory')
mscVrPpTbpInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpInFrames.setStatus('mandatory')
mscVrPpTbpOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpOutFrames.setStatus('mandatory')
mscVrPpTbpStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18), )
if mibBuilder.loadTexts: mscVrPpTbpStpOperTable.setStatus('mandatory')
mscVrPpTbpStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpStpOperEntry.setStatus('mandatory')
mscVrPpTbpStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpStpPortState.setStatus('mandatory')
mscVrPpTbpStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpStpTypeOper.setStatus('mandatory')
mscVrPpTbpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpDesignatedCost.setStatus('mandatory')
mscVrPpTbpPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpPathCostOper.setStatus('mandatory')
mscVrPpTbpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpDesignatedBridge.setStatus('mandatory')
mscVrPpTbpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpDesignatedPort.setStatus('mandatory')
mscVrPpTbpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpForwardTransitions.setStatus('mandatory')
mscVrPpTbpBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpBlockingDiscards.setStatus('mandatory')
mscVrPpTbpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpDesignatedRoot.setStatus('mandatory')
mscVrPpTbpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 19), )
if mibBuilder.loadTexts: mscVrPpTbpStatsTable.setStatus('mandatory')
mscVrPpTbpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"))
if mibBuilder.loadTexts: mscVrPpTbpStatsEntry.setStatus('mandatory')
mscVrPpTbpBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpBadAbstractDiscards.setStatus('mandatory')
mscVrPpTbpTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpTinygramFramesIn.setStatus('mandatory')
mscVrPpTbpTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpTinygramFramesOut.setStatus('mandatory')
mscVrPpTbpInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpInFilterDiscards.setStatus('mandatory')
mscVrPpTbpOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpOutFilterDiscards.setStatus('mandatory')
mscVrPpTbpNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2))
mscVrPpTbpNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 1), )
if mibBuilder.loadTexts: mscVrPpTbpNsRowStatusTable.setStatus('mandatory')
mscVrPpTbpNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpNsIndex"))
if mibBuilder.loadTexts: mscVrPpTbpNsRowStatusEntry.setStatus('mandatory')
mscVrPpTbpNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpNsRowStatus.setStatus('mandatory')
mscVrPpTbpNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpNsComponentName.setStatus('mandatory')
mscVrPpTbpNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbpNsStorageType.setStatus('mandatory')
mscVrPpTbpNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpTbpNsIndex.setStatus('mandatory')
mscVrPpTbpNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 10), )
if mibBuilder.loadTexts: mscVrPpTbpNsProvTable.setStatus('mandatory')
mscVrPpTbpNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbpNsIndex"))
if mibBuilder.loadTexts: mscVrPpTbpNsProvEntry.setStatus('mandatory')
mscVrPpTbpNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpNsIncomingFilter.setStatus('mandatory')
mscVrPpTbpNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 4, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbpNsOutgoingFilter.setStatus('mandatory')
mscVrPpSrBp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8))
mscVrPpSrBpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 1), )
if mibBuilder.loadTexts: mscVrPpSrBpRowStatusTable.setStatus('mandatory')
mscVrPpSrBpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpRowStatusEntry.setStatus('mandatory')
mscVrPpSrBpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpRowStatus.setStatus('mandatory')
mscVrPpSrBpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpComponentName.setStatus('mandatory')
mscVrPpSrBpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpStorageType.setStatus('mandatory')
mscVrPpSrBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrBpIndex.setStatus('mandatory')
mscVrPpSrBpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 10), )
if mibBuilder.loadTexts: mscVrPpSrBpProvTable.setStatus('mandatory')
mscVrPpSrBpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpProvEntry.setStatus('mandatory')
mscVrPpSrBpTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpTranslateIpx.setStatus('mandatory')
mscVrPpSrBpFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpFragmentIp.setStatus('mandatory')
mscVrPpSrBpServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpServiceClass.setStatus('mandatory')
mscVrPpSrBpConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpConvertArpMacAddress.setStatus('mandatory')
mscVrPpSrBpPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpPortNum.setStatus('mandatory')
mscVrPpSrBpStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12), )
if mibBuilder.loadTexts: mscVrPpSrBpStpProvTable.setStatus('mandatory')
mscVrPpSrBpStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpStpProvEntry.setStatus('mandatory')
mscVrPpSrBpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpAdminStatus.setStatus('mandatory')
mscVrPpSrBpPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpPortStateStpControl.setStatus('mandatory')
mscVrPpSrBpStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpStpTypeProv.setStatus('mandatory')
mscVrPpSrBpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpPortPriority.setStatus('mandatory')
mscVrPpSrBpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpPathCost.setStatus('mandatory')
mscVrPpSrBpPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpPathCostMethod.setStatus('mandatory')
mscVrPpSrBpDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 13), )
if mibBuilder.loadTexts: mscVrPpSrBpDIProvTable.setStatus('mandatory')
mscVrPpSrBpDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpDIProvEntry.setStatus('mandatory')
mscVrPpSrBpDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpDomainNum.setStatus('mandatory')
mscVrPpSrBpPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpPreserveDomain.setStatus('mandatory')
mscVrPpSrBpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 14), )
if mibBuilder.loadTexts: mscVrPpSrBpStateTable.setStatus('mandatory')
mscVrPpSrBpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpStateEntry.setStatus('mandatory')
mscVrPpSrBpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpAdminState.setStatus('mandatory')
mscVrPpSrBpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpOperationalState.setStatus('mandatory')
mscVrPpSrBpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpUsageState.setStatus('mandatory')
mscVrPpSrBpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 15), )
if mibBuilder.loadTexts: mscVrPpSrBpOperStatusTable.setStatus('mandatory')
mscVrPpSrBpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpOperStatusEntry.setStatus('mandatory')
mscVrPpSrBpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpSnmpOperStatus.setStatus('mandatory')
mscVrPpSrBpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16), )
if mibBuilder.loadTexts: mscVrPpSrBpOperTable.setStatus('mandatory')
mscVrPpSrBpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpOperEntry.setStatus('mandatory')
mscVrPpSrBpPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpPortName.setStatus('mandatory')
mscVrPpSrBpUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpUpTime.setStatus('mandatory')
mscVrPpSrBpDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDownTime.setStatus('mandatory')
mscVrPpSrBpBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpBridgingMode.setStatus('mandatory')
mscVrPpSrBpBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpBridgePortConfig.setStatus('mandatory')
mscVrPpSrBpBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpBridgePortType.setStatus('mandatory')
mscVrPpSrBpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpIfIndex.setStatus('mandatory')
mscVrPpSrBpDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDelayExceededDiscards.setStatus('mandatory')
mscVrPpSrBpMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpMtuExceededDiscards.setStatus('mandatory')
mscVrPpSrBpStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18), )
if mibBuilder.loadTexts: mscVrPpSrBpStpOperTable.setStatus('mandatory')
mscVrPpSrBpStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpStpOperEntry.setStatus('mandatory')
mscVrPpSrBpStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpStpPortState.setStatus('mandatory')
mscVrPpSrBpStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpStpTypeOper.setStatus('mandatory')
mscVrPpSrBpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDesignatedCost.setStatus('mandatory')
mscVrPpSrBpPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpPathCostOper.setStatus('mandatory')
mscVrPpSrBpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDesignatedBridge.setStatus('mandatory')
mscVrPpSrBpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDesignatedPort.setStatus('mandatory')
mscVrPpSrBpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpForwardTransitions.setStatus('mandatory')
mscVrPpSrBpBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpBlockingDiscards.setStatus('mandatory')
mscVrPpSrBpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDesignatedRoot.setStatus('mandatory')
mscVrPpSrBpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 19), )
if mibBuilder.loadTexts: mscVrPpSrBpStatsTable.setStatus('mandatory')
mscVrPpSrBpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpStatsEntry.setStatus('mandatory')
mscVrPpSrBpBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpBadAbstractDiscards.setStatus('mandatory')
mscVrPpSrBpTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpTinygramFramesIn.setStatus('mandatory')
mscVrPpSrBpTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpTinygramFramesOut.setStatus('mandatory')
mscVrPpSrBpInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpInFilterDiscards.setStatus('mandatory')
mscVrPpSrBpOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpOutFilterDiscards.setStatus('mandatory')
mscVrPpSrBpSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20), )
if mibBuilder.loadTexts: mscVrPpSrBpSrProvTable.setStatus('mandatory')
mscVrPpSrBpSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpSrProvEntry.setStatus('mandatory')
mscVrPpSrBpHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpHopCount.setStatus('mandatory')
mscVrPpSrBpExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpExploreFrameTreatment.setStatus('mandatory')
mscVrPpSrBpLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpLanId.setStatus('mandatory')
mscVrPpSrBpInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpInternalLanId.setStatus('mandatory')
mscVrPpSrBpBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpBridgeNum.setStatus('mandatory')
mscVrPpSrBpLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpLargestFrame.setStatus('mandatory')
mscVrPpSrBpSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpSteSpanMode.setStatus('mandatory')
mscVrPpSrBpAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpAreRdLimit.setStatus('mandatory')
mscVrPpSrBpSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpSteRdLimit.setStatus('mandatory')
mscVrPpSrBpSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21), )
if mibBuilder.loadTexts: mscVrPpSrBpSrStatsTable.setStatus('mandatory')
mscVrPpSrBpSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpSrStatsEntry.setStatus('mandatory')
mscVrPpSrBpSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpSpecInFrames.setStatus('mandatory')
mscVrPpSrBpSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpSpecOutFrames.setStatus('mandatory')
mscVrPpSrBpApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpApeInFrames.setStatus('mandatory')
mscVrPpSrBpApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpApeOutFrames.setStatus('mandatory')
mscVrPpSrBpSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpSteInFrames.setStatus('mandatory')
mscVrPpSrBpSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpSteOutFrames.setStatus('mandatory')
mscVrPpSrBpSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpSegmentMismatchDiscards.setStatus('mandatory')
mscVrPpSrBpDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDupSegmentDiscards.setStatus('mandatory')
mscVrPpSrBpHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpHopCountExceededDiscards.setStatus('mandatory')
mscVrPpSrBpDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDupLanIdOrTreeErrors.setStatus('mandatory')
mscVrPpSrBpLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpLanIdMismatches.setStatus('mandatory')
mscVrPpSrBpStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpStaticDiscards.setStatus('mandatory')
mscVrPpSrBpDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpDynamicDiscards.setStatus('mandatory')
mscVrPpSrBpNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2))
mscVrPpSrBpNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 1), )
if mibBuilder.loadTexts: mscVrPpSrBpNsRowStatusTable.setStatus('mandatory')
mscVrPpSrBpNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpNsIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpNsRowStatusEntry.setStatus('mandatory')
mscVrPpSrBpNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpNsRowStatus.setStatus('mandatory')
mscVrPpSrBpNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpNsComponentName.setStatus('mandatory')
mscVrPpSrBpNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrBpNsStorageType.setStatus('mandatory')
mscVrPpSrBpNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrBpNsIndex.setStatus('mandatory')
mscVrPpSrBpNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 10), )
if mibBuilder.loadTexts: mscVrPpSrBpNsProvTable.setStatus('mandatory')
mscVrPpSrBpNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrBpNsIndex"))
if mibBuilder.loadTexts: mscVrPpSrBpNsProvEntry.setStatus('mandatory')
mscVrPpSrBpNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpNsIncomingFilter.setStatus('mandatory')
mscVrPpSrBpNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 8, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrBpNsOutgoingFilter.setStatus('mandatory')
mscVrPpSrtBp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9))
mscVrPpSrtBpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 1), )
if mibBuilder.loadTexts: mscVrPpSrtBpRowStatusTable.setStatus('mandatory')
mscVrPpSrtBpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpRowStatusEntry.setStatus('mandatory')
mscVrPpSrtBpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpRowStatus.setStatus('mandatory')
mscVrPpSrtBpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpComponentName.setStatus('mandatory')
mscVrPpSrtBpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpStorageType.setStatus('mandatory')
mscVrPpSrtBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrtBpIndex.setStatus('mandatory')
mscVrPpSrtBpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 10), )
if mibBuilder.loadTexts: mscVrPpSrtBpProvTable.setStatus('mandatory')
mscVrPpSrtBpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpProvEntry.setStatus('mandatory')
mscVrPpSrtBpTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpTranslateIpx.setStatus('mandatory')
mscVrPpSrtBpFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpFragmentIp.setStatus('mandatory')
mscVrPpSrtBpServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpServiceClass.setStatus('mandatory')
mscVrPpSrtBpConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpConvertArpMacAddress.setStatus('mandatory')
mscVrPpSrtBpPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpPortNum.setStatus('mandatory')
mscVrPpSrtBpTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 11), )
if mibBuilder.loadTexts: mscVrPpSrtBpTbProvTable.setStatus('mandatory')
mscVrPpSrtBpTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpTbProvEntry.setStatus('mandatory')
mscVrPpSrtBpSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpSecureOption.setStatus('mandatory')
mscVrPpSrtBpStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12), )
if mibBuilder.loadTexts: mscVrPpSrtBpStpProvTable.setStatus('mandatory')
mscVrPpSrtBpStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpStpProvEntry.setStatus('mandatory')
mscVrPpSrtBpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpAdminStatus.setStatus('mandatory')
mscVrPpSrtBpPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpPortStateStpControl.setStatus('mandatory')
mscVrPpSrtBpStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpStpTypeProv.setStatus('mandatory')
mscVrPpSrtBpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpPortPriority.setStatus('mandatory')
mscVrPpSrtBpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpPathCost.setStatus('mandatory')
mscVrPpSrtBpPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpPathCostMethod.setStatus('mandatory')
mscVrPpSrtBpDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 13), )
if mibBuilder.loadTexts: mscVrPpSrtBpDIProvTable.setStatus('mandatory')
mscVrPpSrtBpDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpDIProvEntry.setStatus('mandatory')
mscVrPpSrtBpDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpDomainNum.setStatus('mandatory')
mscVrPpSrtBpPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpPreserveDomain.setStatus('mandatory')
mscVrPpSrtBpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 14), )
if mibBuilder.loadTexts: mscVrPpSrtBpStateTable.setStatus('mandatory')
mscVrPpSrtBpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpStateEntry.setStatus('mandatory')
mscVrPpSrtBpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpAdminState.setStatus('mandatory')
mscVrPpSrtBpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpOperationalState.setStatus('mandatory')
mscVrPpSrtBpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpUsageState.setStatus('mandatory')
mscVrPpSrtBpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 15), )
if mibBuilder.loadTexts: mscVrPpSrtBpOperStatusTable.setStatus('mandatory')
mscVrPpSrtBpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpOperStatusEntry.setStatus('mandatory')
mscVrPpSrtBpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpSnmpOperStatus.setStatus('mandatory')
mscVrPpSrtBpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16), )
if mibBuilder.loadTexts: mscVrPpSrtBpOperTable.setStatus('mandatory')
mscVrPpSrtBpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpOperEntry.setStatus('mandatory')
mscVrPpSrtBpPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpPortName.setStatus('mandatory')
mscVrPpSrtBpUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpUpTime.setStatus('mandatory')
mscVrPpSrtBpDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDownTime.setStatus('mandatory')
mscVrPpSrtBpBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpBridgingMode.setStatus('mandatory')
mscVrPpSrtBpBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpBridgePortConfig.setStatus('mandatory')
mscVrPpSrtBpBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpBridgePortType.setStatus('mandatory')
mscVrPpSrtBpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpIfIndex.setStatus('mandatory')
mscVrPpSrtBpDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDelayExceededDiscards.setStatus('mandatory')
mscVrPpSrtBpMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpMtuExceededDiscards.setStatus('mandatory')
mscVrPpSrtBpTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17), )
if mibBuilder.loadTexts: mscVrPpSrtBpTbOperTable.setStatus('mandatory')
mscVrPpSrtBpTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpTbOperEntry.setStatus('mandatory')
mscVrPpSrtBpMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpMaxInfo.setStatus('mandatory')
mscVrPpSrtBpBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpBadVerifyDiscards.setStatus('mandatory')
mscVrPpSrtBpUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpUnicastNoMatches.setStatus('mandatory')
mscVrPpSrtBpStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpStaticEntryDiscards.setStatus('mandatory')
mscVrPpSrtBpDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDynamicEntryDiscards.setStatus('mandatory')
mscVrPpSrtBpLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpLearningDiscards.setStatus('mandatory')
mscVrPpSrtBpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpInDiscards.setStatus('mandatory')
mscVrPpSrtBpInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpInFrames.setStatus('mandatory')
mscVrPpSrtBpOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpOutFrames.setStatus('mandatory')
mscVrPpSrtBpStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18), )
if mibBuilder.loadTexts: mscVrPpSrtBpStpOperTable.setStatus('mandatory')
mscVrPpSrtBpStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpStpOperEntry.setStatus('mandatory')
mscVrPpSrtBpStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpStpPortState.setStatus('mandatory')
mscVrPpSrtBpStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpStpTypeOper.setStatus('mandatory')
mscVrPpSrtBpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDesignatedCost.setStatus('mandatory')
mscVrPpSrtBpPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpPathCostOper.setStatus('mandatory')
mscVrPpSrtBpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDesignatedBridge.setStatus('mandatory')
mscVrPpSrtBpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDesignatedPort.setStatus('mandatory')
mscVrPpSrtBpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpForwardTransitions.setStatus('mandatory')
mscVrPpSrtBpBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpBlockingDiscards.setStatus('mandatory')
mscVrPpSrtBpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDesignatedRoot.setStatus('mandatory')
mscVrPpSrtBpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 19), )
if mibBuilder.loadTexts: mscVrPpSrtBpStatsTable.setStatus('mandatory')
mscVrPpSrtBpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpStatsEntry.setStatus('mandatory')
mscVrPpSrtBpBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpBadAbstractDiscards.setStatus('mandatory')
mscVrPpSrtBpTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpTinygramFramesIn.setStatus('mandatory')
mscVrPpSrtBpTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpTinygramFramesOut.setStatus('mandatory')
mscVrPpSrtBpInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpInFilterDiscards.setStatus('mandatory')
mscVrPpSrtBpOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpOutFilterDiscards.setStatus('mandatory')
mscVrPpSrtBpSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20), )
if mibBuilder.loadTexts: mscVrPpSrtBpSrProvTable.setStatus('mandatory')
mscVrPpSrtBpSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpSrProvEntry.setStatus('mandatory')
mscVrPpSrtBpHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpHopCount.setStatus('mandatory')
mscVrPpSrtBpExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpExploreFrameTreatment.setStatus('mandatory')
mscVrPpSrtBpLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpLanId.setStatus('mandatory')
mscVrPpSrtBpInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpInternalLanId.setStatus('mandatory')
mscVrPpSrtBpBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpBridgeNum.setStatus('mandatory')
mscVrPpSrtBpLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpLargestFrame.setStatus('mandatory')
mscVrPpSrtBpSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpSteSpanMode.setStatus('mandatory')
mscVrPpSrtBpAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpAreRdLimit.setStatus('mandatory')
mscVrPpSrtBpSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpSteRdLimit.setStatus('mandatory')
mscVrPpSrtBpSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21), )
if mibBuilder.loadTexts: mscVrPpSrtBpSrStatsTable.setStatus('mandatory')
mscVrPpSrtBpSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpSrStatsEntry.setStatus('mandatory')
mscVrPpSrtBpSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpSpecInFrames.setStatus('mandatory')
mscVrPpSrtBpSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpSpecOutFrames.setStatus('mandatory')
mscVrPpSrtBpApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpApeInFrames.setStatus('mandatory')
mscVrPpSrtBpApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpApeOutFrames.setStatus('mandatory')
mscVrPpSrtBpSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpSteInFrames.setStatus('mandatory')
mscVrPpSrtBpSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpSteOutFrames.setStatus('mandatory')
mscVrPpSrtBpSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpSegmentMismatchDiscards.setStatus('mandatory')
mscVrPpSrtBpDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDupSegmentDiscards.setStatus('mandatory')
mscVrPpSrtBpHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpHopCountExceededDiscards.setStatus('mandatory')
mscVrPpSrtBpDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDupLanIdOrTreeErrors.setStatus('mandatory')
mscVrPpSrtBpLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpLanIdMismatches.setStatus('mandatory')
mscVrPpSrtBpStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpStaticDiscards.setStatus('mandatory')
mscVrPpSrtBpDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpDynamicDiscards.setStatus('mandatory')
mscVrPpSrtBpNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2))
mscVrPpSrtBpNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 1), )
if mibBuilder.loadTexts: mscVrPpSrtBpNsRowStatusTable.setStatus('mandatory')
mscVrPpSrtBpNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpNsIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpNsRowStatusEntry.setStatus('mandatory')
mscVrPpSrtBpNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpNsRowStatus.setStatus('mandatory')
mscVrPpSrtBpNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpNsComponentName.setStatus('mandatory')
mscVrPpSrtBpNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrtBpNsStorageType.setStatus('mandatory')
mscVrPpSrtBpNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrtBpNsIndex.setStatus('mandatory')
mscVrPpSrtBpNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 10), )
if mibBuilder.loadTexts: mscVrPpSrtBpNsProvTable.setStatus('mandatory')
mscVrPpSrtBpNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrtBpNsIndex"))
if mibBuilder.loadTexts: mscVrPpSrtBpNsProvEntry.setStatus('mandatory')
mscVrPpSrtBpNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpNsIncomingFilter.setStatus('mandatory')
mscVrPpSrtBpNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 9, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrtBpNsOutgoingFilter.setStatus('mandatory')
mscVrPpSrse = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10))
mscVrPpSrseRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 1), )
if mibBuilder.loadTexts: mscVrPpSrseRowStatusTable.setStatus('mandatory')
mscVrPpSrseRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseRowStatusEntry.setStatus('mandatory')
mscVrPpSrseRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseRowStatus.setStatus('mandatory')
mscVrPpSrseComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseComponentName.setStatus('mandatory')
mscVrPpSrseStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseStorageType.setStatus('mandatory')
mscVrPpSrseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrseIndex.setStatus('mandatory')
mscVrPpSrseProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 10), )
if mibBuilder.loadTexts: mscVrPpSrseProvTable.setStatus('mandatory')
mscVrPpSrseProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseProvEntry.setStatus('mandatory')
mscVrPpSrseTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseTranslateIpx.setStatus('mandatory')
mscVrPpSrseFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseFragmentIp.setStatus('mandatory')
mscVrPpSrseServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseServiceClass.setStatus('mandatory')
mscVrPpSrseConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseConvertArpMacAddress.setStatus('mandatory')
mscVrPpSrsePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsePortNum.setStatus('mandatory')
mscVrPpSrseStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12), )
if mibBuilder.loadTexts: mscVrPpSrseStpProvTable.setStatus('mandatory')
mscVrPpSrseStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseStpProvEntry.setStatus('mandatory')
mscVrPpSrseAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseAdminStatus.setStatus('mandatory')
mscVrPpSrsePortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsePortStateStpControl.setStatus('mandatory')
mscVrPpSrseStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseStpTypeProv.setStatus('mandatory')
mscVrPpSrsePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsePortPriority.setStatus('mandatory')
mscVrPpSrsePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsePathCost.setStatus('mandatory')
mscVrPpSrsePathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsePathCostMethod.setStatus('mandatory')
mscVrPpSrseDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 13), )
if mibBuilder.loadTexts: mscVrPpSrseDIProvTable.setStatus('mandatory')
mscVrPpSrseDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseDIProvEntry.setStatus('mandatory')
mscVrPpSrseDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseDomainNum.setStatus('mandatory')
mscVrPpSrsePreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsePreserveDomain.setStatus('mandatory')
mscVrPpSrseStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 14), )
if mibBuilder.loadTexts: mscVrPpSrseStateTable.setStatus('mandatory')
mscVrPpSrseStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseStateEntry.setStatus('mandatory')
mscVrPpSrseAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseAdminState.setStatus('mandatory')
mscVrPpSrseOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseOperationalState.setStatus('mandatory')
mscVrPpSrseUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseUsageState.setStatus('mandatory')
mscVrPpSrseOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 15), )
if mibBuilder.loadTexts: mscVrPpSrseOperStatusTable.setStatus('mandatory')
mscVrPpSrseOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseOperStatusEntry.setStatus('mandatory')
mscVrPpSrseSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseSnmpOperStatus.setStatus('mandatory')
mscVrPpSrseOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16), )
if mibBuilder.loadTexts: mscVrPpSrseOperTable.setStatus('mandatory')
mscVrPpSrseOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseOperEntry.setStatus('mandatory')
mscVrPpSrsePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsePortName.setStatus('mandatory')
mscVrPpSrseUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseUpTime.setStatus('mandatory')
mscVrPpSrseDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDownTime.setStatus('mandatory')
mscVrPpSrseBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseBridgingMode.setStatus('mandatory')
mscVrPpSrseBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseBridgePortConfig.setStatus('mandatory')
mscVrPpSrseBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseBridgePortType.setStatus('mandatory')
mscVrPpSrseIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseIfIndex.setStatus('mandatory')
mscVrPpSrseDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDelayExceededDiscards.setStatus('mandatory')
mscVrPpSrseMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseMtuExceededDiscards.setStatus('mandatory')
mscVrPpSrseStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18), )
if mibBuilder.loadTexts: mscVrPpSrseStpOperTable.setStatus('mandatory')
mscVrPpSrseStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseStpOperEntry.setStatus('mandatory')
mscVrPpSrseStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseStpPortState.setStatus('mandatory')
mscVrPpSrseStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseStpTypeOper.setStatus('mandatory')
mscVrPpSrseDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDesignatedCost.setStatus('mandatory')
mscVrPpSrsePathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsePathCostOper.setStatus('mandatory')
mscVrPpSrseDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDesignatedBridge.setStatus('mandatory')
mscVrPpSrseDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDesignatedPort.setStatus('mandatory')
mscVrPpSrseForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseForwardTransitions.setStatus('mandatory')
mscVrPpSrseBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseBlockingDiscards.setStatus('mandatory')
mscVrPpSrseDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDesignatedRoot.setStatus('mandatory')
mscVrPpSrseStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 19), )
if mibBuilder.loadTexts: mscVrPpSrseStatsTable.setStatus('mandatory')
mscVrPpSrseStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseStatsEntry.setStatus('mandatory')
mscVrPpSrseBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseBadAbstractDiscards.setStatus('mandatory')
mscVrPpSrseTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseTinygramFramesIn.setStatus('mandatory')
mscVrPpSrseTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseTinygramFramesOut.setStatus('mandatory')
mscVrPpSrseInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseInFilterDiscards.setStatus('mandatory')
mscVrPpSrseOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseOutFilterDiscards.setStatus('mandatory')
mscVrPpSrseSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20), )
if mibBuilder.loadTexts: mscVrPpSrseSrProvTable.setStatus('mandatory')
mscVrPpSrseSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseSrProvEntry.setStatus('mandatory')
mscVrPpSrseHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseHopCount.setStatus('mandatory')
mscVrPpSrseExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseExploreFrameTreatment.setStatus('mandatory')
mscVrPpSrseLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseLanId.setStatus('mandatory')
mscVrPpSrseInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseInternalLanId.setStatus('mandatory')
mscVrPpSrseBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseBridgeNum.setStatus('mandatory')
mscVrPpSrseLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseLargestFrame.setStatus('mandatory')
mscVrPpSrseSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseSteSpanMode.setStatus('mandatory')
mscVrPpSrseAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseAreRdLimit.setStatus('mandatory')
mscVrPpSrseSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrseSteRdLimit.setStatus('mandatory')
mscVrPpSrseSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21), )
if mibBuilder.loadTexts: mscVrPpSrseSrStatsTable.setStatus('mandatory')
mscVrPpSrseSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrseIndex"))
if mibBuilder.loadTexts: mscVrPpSrseSrStatsEntry.setStatus('mandatory')
mscVrPpSrseSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseSpecInFrames.setStatus('mandatory')
mscVrPpSrseSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseSpecOutFrames.setStatus('mandatory')
mscVrPpSrseApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseApeInFrames.setStatus('mandatory')
mscVrPpSrseApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseApeOutFrames.setStatus('mandatory')
mscVrPpSrseSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseSteInFrames.setStatus('mandatory')
mscVrPpSrseSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseSteOutFrames.setStatus('mandatory')
mscVrPpSrseSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseSegmentMismatchDiscards.setStatus('mandatory')
mscVrPpSrseDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDupSegmentDiscards.setStatus('mandatory')
mscVrPpSrseHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseHopCountExceededDiscards.setStatus('mandatory')
mscVrPpSrseDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDupLanIdOrTreeErrors.setStatus('mandatory')
mscVrPpSrseLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseLanIdMismatches.setStatus('mandatory')
mscVrPpSrseStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseStaticDiscards.setStatus('mandatory')
mscVrPpSrseDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 10, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrseDynamicDiscards.setStatus('mandatory')
mscVrPpTbse = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11))
mscVrPpTbseRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 1), )
if mibBuilder.loadTexts: mscVrPpTbseRowStatusTable.setStatus('mandatory')
mscVrPpTbseRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseRowStatusEntry.setStatus('mandatory')
mscVrPpTbseRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseRowStatus.setStatus('mandatory')
mscVrPpTbseComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseComponentName.setStatus('mandatory')
mscVrPpTbseStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseStorageType.setStatus('mandatory')
mscVrPpTbseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpTbseIndex.setStatus('mandatory')
mscVrPpTbseProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 10), )
if mibBuilder.loadTexts: mscVrPpTbseProvTable.setStatus('mandatory')
mscVrPpTbseProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseProvEntry.setStatus('mandatory')
mscVrPpTbseTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseTranslateIpx.setStatus('mandatory')
mscVrPpTbseFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseFragmentIp.setStatus('mandatory')
mscVrPpTbseServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseServiceClass.setStatus('mandatory')
mscVrPpTbseConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseConvertArpMacAddress.setStatus('mandatory')
mscVrPpTbsePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsePortNum.setStatus('mandatory')
mscVrPpTbseTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 11), )
if mibBuilder.loadTexts: mscVrPpTbseTbProvTable.setStatus('mandatory')
mscVrPpTbseTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseTbProvEntry.setStatus('mandatory')
mscVrPpTbseSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseSecureOption.setStatus('mandatory')
mscVrPpTbseStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12), )
if mibBuilder.loadTexts: mscVrPpTbseStpProvTable.setStatus('mandatory')
mscVrPpTbseStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseStpProvEntry.setStatus('mandatory')
mscVrPpTbseAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseAdminStatus.setStatus('mandatory')
mscVrPpTbsePortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsePortStateStpControl.setStatus('mandatory')
mscVrPpTbseStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseStpTypeProv.setStatus('mandatory')
mscVrPpTbsePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsePortPriority.setStatus('mandatory')
mscVrPpTbsePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsePathCost.setStatus('mandatory')
mscVrPpTbsePathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsePathCostMethod.setStatus('mandatory')
mscVrPpTbseDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 13), )
if mibBuilder.loadTexts: mscVrPpTbseDIProvTable.setStatus('mandatory')
mscVrPpTbseDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseDIProvEntry.setStatus('mandatory')
mscVrPpTbseDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbseDomainNum.setStatus('mandatory')
mscVrPpTbsePreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsePreserveDomain.setStatus('mandatory')
mscVrPpTbseStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 14), )
if mibBuilder.loadTexts: mscVrPpTbseStateTable.setStatus('mandatory')
mscVrPpTbseStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseStateEntry.setStatus('mandatory')
mscVrPpTbseAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseAdminState.setStatus('mandatory')
mscVrPpTbseOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseOperationalState.setStatus('mandatory')
mscVrPpTbseUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseUsageState.setStatus('mandatory')
mscVrPpTbseOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 15), )
if mibBuilder.loadTexts: mscVrPpTbseOperStatusTable.setStatus('mandatory')
mscVrPpTbseOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseOperStatusEntry.setStatus('mandatory')
mscVrPpTbseSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseSnmpOperStatus.setStatus('mandatory')
mscVrPpTbseOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16), )
if mibBuilder.loadTexts: mscVrPpTbseOperTable.setStatus('mandatory')
mscVrPpTbseOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseOperEntry.setStatus('mandatory')
mscVrPpTbsePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsePortName.setStatus('mandatory')
mscVrPpTbseUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseUpTime.setStatus('mandatory')
mscVrPpTbseDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseDownTime.setStatus('mandatory')
mscVrPpTbseBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseBridgingMode.setStatus('mandatory')
mscVrPpTbseBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseBridgePortConfig.setStatus('mandatory')
mscVrPpTbseBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseBridgePortType.setStatus('mandatory')
mscVrPpTbseIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseIfIndex.setStatus('mandatory')
mscVrPpTbseDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseDelayExceededDiscards.setStatus('mandatory')
mscVrPpTbseMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseMtuExceededDiscards.setStatus('mandatory')
mscVrPpTbseTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17), )
if mibBuilder.loadTexts: mscVrPpTbseTbOperTable.setStatus('mandatory')
mscVrPpTbseTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseTbOperEntry.setStatus('mandatory')
mscVrPpTbseMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseMaxInfo.setStatus('mandatory')
mscVrPpTbseBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseBadVerifyDiscards.setStatus('mandatory')
mscVrPpTbseUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseUnicastNoMatches.setStatus('mandatory')
mscVrPpTbseStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseStaticEntryDiscards.setStatus('mandatory')
mscVrPpTbseDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseDynamicEntryDiscards.setStatus('mandatory')
mscVrPpTbseLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseLearningDiscards.setStatus('mandatory')
mscVrPpTbseInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseInDiscards.setStatus('mandatory')
mscVrPpTbseInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseInFrames.setStatus('mandatory')
mscVrPpTbseOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseOutFrames.setStatus('mandatory')
mscVrPpTbseStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18), )
if mibBuilder.loadTexts: mscVrPpTbseStpOperTable.setStatus('mandatory')
mscVrPpTbseStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseStpOperEntry.setStatus('mandatory')
mscVrPpTbseStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseStpPortState.setStatus('mandatory')
mscVrPpTbseStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseStpTypeOper.setStatus('mandatory')
mscVrPpTbseDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseDesignatedCost.setStatus('mandatory')
mscVrPpTbsePathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsePathCostOper.setStatus('mandatory')
mscVrPpTbseDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseDesignatedBridge.setStatus('mandatory')
mscVrPpTbseDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseDesignatedPort.setStatus('mandatory')
mscVrPpTbseForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseForwardTransitions.setStatus('mandatory')
mscVrPpTbseBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseBlockingDiscards.setStatus('mandatory')
mscVrPpTbseDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseDesignatedRoot.setStatus('mandatory')
mscVrPpTbseStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 19), )
if mibBuilder.loadTexts: mscVrPpTbseStatsTable.setStatus('mandatory')
mscVrPpTbseStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbseIndex"))
if mibBuilder.loadTexts: mscVrPpTbseStatsEntry.setStatus('mandatory')
mscVrPpTbseBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseBadAbstractDiscards.setStatus('mandatory')
mscVrPpTbseTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseTinygramFramesIn.setStatus('mandatory')
mscVrPpTbseTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseTinygramFramesOut.setStatus('mandatory')
mscVrPpTbseInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseInFilterDiscards.setStatus('mandatory')
mscVrPpTbseOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 11, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbseOutFilterDiscards.setStatus('mandatory')
mscVrPpSrsg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12))
mscVrPpSrsgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 1), )
if mibBuilder.loadTexts: mscVrPpSrsgRowStatusTable.setStatus('mandatory')
mscVrPpSrsgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgRowStatusEntry.setStatus('mandatory')
mscVrPpSrsgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgRowStatus.setStatus('mandatory')
mscVrPpSrsgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgComponentName.setStatus('mandatory')
mscVrPpSrsgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgStorageType.setStatus('mandatory')
mscVrPpSrsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrsgIndex.setStatus('mandatory')
mscVrPpSrsgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 10), )
if mibBuilder.loadTexts: mscVrPpSrsgProvTable.setStatus('mandatory')
mscVrPpSrsgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgProvEntry.setStatus('mandatory')
mscVrPpSrsgTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgTranslateIpx.setStatus('mandatory')
mscVrPpSrsgFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgFragmentIp.setStatus('mandatory')
mscVrPpSrsgServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgServiceClass.setStatus('mandatory')
mscVrPpSrsgConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgConvertArpMacAddress.setStatus('mandatory')
mscVrPpSrsgPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgPortNum.setStatus('mandatory')
mscVrPpSrsgStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12), )
if mibBuilder.loadTexts: mscVrPpSrsgStpProvTable.setStatus('mandatory')
mscVrPpSrsgStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgStpProvEntry.setStatus('mandatory')
mscVrPpSrsgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgAdminStatus.setStatus('mandatory')
mscVrPpSrsgPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgPortStateStpControl.setStatus('mandatory')
mscVrPpSrsgStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgStpTypeProv.setStatus('mandatory')
mscVrPpSrsgPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgPortPriority.setStatus('mandatory')
mscVrPpSrsgPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgPathCost.setStatus('mandatory')
mscVrPpSrsgPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgPathCostMethod.setStatus('mandatory')
mscVrPpSrsgDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 13), )
if mibBuilder.loadTexts: mscVrPpSrsgDIProvTable.setStatus('mandatory')
mscVrPpSrsgDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgDIProvEntry.setStatus('mandatory')
mscVrPpSrsgDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgDomainNum.setStatus('mandatory')
mscVrPpSrsgPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgPreserveDomain.setStatus('mandatory')
mscVrPpSrsgStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 14), )
if mibBuilder.loadTexts: mscVrPpSrsgStateTable.setStatus('mandatory')
mscVrPpSrsgStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgStateEntry.setStatus('mandatory')
mscVrPpSrsgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgAdminState.setStatus('mandatory')
mscVrPpSrsgOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgOperationalState.setStatus('mandatory')
mscVrPpSrsgUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgUsageState.setStatus('mandatory')
mscVrPpSrsgOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 15), )
if mibBuilder.loadTexts: mscVrPpSrsgOperStatusTable.setStatus('mandatory')
mscVrPpSrsgOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgOperStatusEntry.setStatus('mandatory')
mscVrPpSrsgSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgSnmpOperStatus.setStatus('mandatory')
mscVrPpSrsgOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16), )
if mibBuilder.loadTexts: mscVrPpSrsgOperTable.setStatus('mandatory')
mscVrPpSrsgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgOperEntry.setStatus('mandatory')
mscVrPpSrsgPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgPortName.setStatus('mandatory')
mscVrPpSrsgUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgUpTime.setStatus('mandatory')
mscVrPpSrsgDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDownTime.setStatus('mandatory')
mscVrPpSrsgBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgBridgingMode.setStatus('mandatory')
mscVrPpSrsgBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgBridgePortConfig.setStatus('mandatory')
mscVrPpSrsgBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgBridgePortType.setStatus('mandatory')
mscVrPpSrsgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgIfIndex.setStatus('mandatory')
mscVrPpSrsgDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDelayExceededDiscards.setStatus('mandatory')
mscVrPpSrsgMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgMtuExceededDiscards.setStatus('mandatory')
mscVrPpSrsgStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18), )
if mibBuilder.loadTexts: mscVrPpSrsgStpOperTable.setStatus('mandatory')
mscVrPpSrsgStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgStpOperEntry.setStatus('mandatory')
mscVrPpSrsgStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgStpPortState.setStatus('mandatory')
mscVrPpSrsgStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgStpTypeOper.setStatus('mandatory')
mscVrPpSrsgDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDesignatedCost.setStatus('mandatory')
mscVrPpSrsgPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgPathCostOper.setStatus('mandatory')
mscVrPpSrsgDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDesignatedBridge.setStatus('mandatory')
mscVrPpSrsgDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDesignatedPort.setStatus('mandatory')
mscVrPpSrsgForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgForwardTransitions.setStatus('mandatory')
mscVrPpSrsgBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgBlockingDiscards.setStatus('mandatory')
mscVrPpSrsgDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDesignatedRoot.setStatus('mandatory')
mscVrPpSrsgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 19), )
if mibBuilder.loadTexts: mscVrPpSrsgStatsTable.setStatus('mandatory')
mscVrPpSrsgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgStatsEntry.setStatus('mandatory')
mscVrPpSrsgBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgBadAbstractDiscards.setStatus('mandatory')
mscVrPpSrsgTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgTinygramFramesIn.setStatus('mandatory')
mscVrPpSrsgTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgTinygramFramesOut.setStatus('mandatory')
mscVrPpSrsgInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgInFilterDiscards.setStatus('mandatory')
mscVrPpSrsgOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgOutFilterDiscards.setStatus('mandatory')
mscVrPpSrsgSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20), )
if mibBuilder.loadTexts: mscVrPpSrsgSrProvTable.setStatus('mandatory')
mscVrPpSrsgSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgSrProvEntry.setStatus('mandatory')
mscVrPpSrsgHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgHopCount.setStatus('mandatory')
mscVrPpSrsgExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgExploreFrameTreatment.setStatus('mandatory')
mscVrPpSrsgLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgLanId.setStatus('mandatory')
mscVrPpSrsgInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgInternalLanId.setStatus('mandatory')
mscVrPpSrsgBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgBridgeNum.setStatus('mandatory')
mscVrPpSrsgLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgLargestFrame.setStatus('mandatory')
mscVrPpSrsgSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgSteSpanMode.setStatus('mandatory')
mscVrPpSrsgAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgAreRdLimit.setStatus('mandatory')
mscVrPpSrsgSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrsgSteRdLimit.setStatus('mandatory')
mscVrPpSrsgSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21), )
if mibBuilder.loadTexts: mscVrPpSrsgSrStatsTable.setStatus('mandatory')
mscVrPpSrsgSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrsgIndex"))
if mibBuilder.loadTexts: mscVrPpSrsgSrStatsEntry.setStatus('mandatory')
mscVrPpSrsgSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgSpecInFrames.setStatus('mandatory')
mscVrPpSrsgSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgSpecOutFrames.setStatus('mandatory')
mscVrPpSrsgApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgApeInFrames.setStatus('mandatory')
mscVrPpSrsgApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgApeOutFrames.setStatus('mandatory')
mscVrPpSrsgSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgSteInFrames.setStatus('mandatory')
mscVrPpSrsgSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgSteOutFrames.setStatus('mandatory')
mscVrPpSrsgSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgSegmentMismatchDiscards.setStatus('mandatory')
mscVrPpSrsgDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDupSegmentDiscards.setStatus('mandatory')
mscVrPpSrsgHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgHopCountExceededDiscards.setStatus('mandatory')
mscVrPpSrsgDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDupLanIdOrTreeErrors.setStatus('mandatory')
mscVrPpSrsgLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgLanIdMismatches.setStatus('mandatory')
mscVrPpSrsgStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgStaticDiscards.setStatus('mandatory')
mscVrPpSrsgDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 12, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrsgDynamicDiscards.setStatus('mandatory')
mscVrPpTbsg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13))
mscVrPpTbsgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 1), )
if mibBuilder.loadTexts: mscVrPpTbsgRowStatusTable.setStatus('mandatory')
mscVrPpTbsgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgRowStatusEntry.setStatus('mandatory')
mscVrPpTbsgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgRowStatus.setStatus('mandatory')
mscVrPpTbsgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgComponentName.setStatus('mandatory')
mscVrPpTbsgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgStorageType.setStatus('mandatory')
mscVrPpTbsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpTbsgIndex.setStatus('mandatory')
mscVrPpTbsgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 10), )
if mibBuilder.loadTexts: mscVrPpTbsgProvTable.setStatus('mandatory')
mscVrPpTbsgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgProvEntry.setStatus('mandatory')
mscVrPpTbsgTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgTranslateIpx.setStatus('mandatory')
mscVrPpTbsgFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgFragmentIp.setStatus('mandatory')
mscVrPpTbsgServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgServiceClass.setStatus('mandatory')
mscVrPpTbsgConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgConvertArpMacAddress.setStatus('mandatory')
mscVrPpTbsgPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgPortNum.setStatus('mandatory')
mscVrPpTbsgTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 11), )
if mibBuilder.loadTexts: mscVrPpTbsgTbProvTable.setStatus('mandatory')
mscVrPpTbsgTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgTbProvEntry.setStatus('mandatory')
mscVrPpTbsgSecureOption = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgSecureOption.setStatus('mandatory')
mscVrPpTbsgStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12), )
if mibBuilder.loadTexts: mscVrPpTbsgStpProvTable.setStatus('mandatory')
mscVrPpTbsgStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgStpProvEntry.setStatus('mandatory')
mscVrPpTbsgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgAdminStatus.setStatus('mandatory')
mscVrPpTbsgPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgPortStateStpControl.setStatus('mandatory')
mscVrPpTbsgStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgStpTypeProv.setStatus('mandatory')
mscVrPpTbsgPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgPortPriority.setStatus('mandatory')
mscVrPpTbsgPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgPathCost.setStatus('mandatory')
mscVrPpTbsgPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgPathCostMethod.setStatus('mandatory')
mscVrPpTbsgDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 13), )
if mibBuilder.loadTexts: mscVrPpTbsgDIProvTable.setStatus('mandatory')
mscVrPpTbsgDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgDIProvEntry.setStatus('mandatory')
mscVrPpTbsgDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgDomainNum.setStatus('mandatory')
mscVrPpTbsgPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpTbsgPreserveDomain.setStatus('mandatory')
mscVrPpTbsgStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 14), )
if mibBuilder.loadTexts: mscVrPpTbsgStateTable.setStatus('mandatory')
mscVrPpTbsgStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgStateEntry.setStatus('mandatory')
mscVrPpTbsgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgAdminState.setStatus('mandatory')
mscVrPpTbsgOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgOperationalState.setStatus('mandatory')
mscVrPpTbsgUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgUsageState.setStatus('mandatory')
mscVrPpTbsgOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 15), )
if mibBuilder.loadTexts: mscVrPpTbsgOperStatusTable.setStatus('mandatory')
mscVrPpTbsgOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgOperStatusEntry.setStatus('mandatory')
mscVrPpTbsgSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgSnmpOperStatus.setStatus('mandatory')
mscVrPpTbsgOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16), )
if mibBuilder.loadTexts: mscVrPpTbsgOperTable.setStatus('mandatory')
mscVrPpTbsgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgOperEntry.setStatus('mandatory')
mscVrPpTbsgPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgPortName.setStatus('mandatory')
mscVrPpTbsgUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgUpTime.setStatus('mandatory')
mscVrPpTbsgDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgDownTime.setStatus('mandatory')
mscVrPpTbsgBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgBridgingMode.setStatus('mandatory')
mscVrPpTbsgBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgBridgePortConfig.setStatus('mandatory')
mscVrPpTbsgBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgBridgePortType.setStatus('mandatory')
mscVrPpTbsgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgIfIndex.setStatus('mandatory')
mscVrPpTbsgDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgDelayExceededDiscards.setStatus('mandatory')
mscVrPpTbsgMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgMtuExceededDiscards.setStatus('mandatory')
mscVrPpTbsgTbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17), )
if mibBuilder.loadTexts: mscVrPpTbsgTbOperTable.setStatus('mandatory')
mscVrPpTbsgTbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgTbOperEntry.setStatus('mandatory')
mscVrPpTbsgMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgMaxInfo.setStatus('mandatory')
mscVrPpTbsgBadVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgBadVerifyDiscards.setStatus('mandatory')
mscVrPpTbsgUnicastNoMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgUnicastNoMatches.setStatus('mandatory')
mscVrPpTbsgStaticEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgStaticEntryDiscards.setStatus('mandatory')
mscVrPpTbsgDynamicEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgDynamicEntryDiscards.setStatus('mandatory')
mscVrPpTbsgLearningDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgLearningDiscards.setStatus('mandatory')
mscVrPpTbsgInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgInDiscards.setStatus('mandatory')
mscVrPpTbsgInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgInFrames.setStatus('mandatory')
mscVrPpTbsgOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgOutFrames.setStatus('mandatory')
mscVrPpTbsgStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18), )
if mibBuilder.loadTexts: mscVrPpTbsgStpOperTable.setStatus('mandatory')
mscVrPpTbsgStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgStpOperEntry.setStatus('mandatory')
mscVrPpTbsgStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgStpPortState.setStatus('mandatory')
mscVrPpTbsgStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgStpTypeOper.setStatus('mandatory')
mscVrPpTbsgDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgDesignatedCost.setStatus('mandatory')
mscVrPpTbsgPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgPathCostOper.setStatus('mandatory')
mscVrPpTbsgDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgDesignatedBridge.setStatus('mandatory')
mscVrPpTbsgDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgDesignatedPort.setStatus('mandatory')
mscVrPpTbsgForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgForwardTransitions.setStatus('mandatory')
mscVrPpTbsgBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgBlockingDiscards.setStatus('mandatory')
mscVrPpTbsgDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgDesignatedRoot.setStatus('mandatory')
mscVrPpTbsgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 19), )
if mibBuilder.loadTexts: mscVrPpTbsgStatsTable.setStatus('mandatory')
mscVrPpTbsgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpTbsgIndex"))
if mibBuilder.loadTexts: mscVrPpTbsgStatsEntry.setStatus('mandatory')
mscVrPpTbsgBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgBadAbstractDiscards.setStatus('mandatory')
mscVrPpTbsgTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgTinygramFramesIn.setStatus('mandatory')
mscVrPpTbsgTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgTinygramFramesOut.setStatus('mandatory')
mscVrPpTbsgInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgInFilterDiscards.setStatus('mandatory')
mscVrPpTbsgOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 13, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpTbsgOutFilterDiscards.setStatus('mandatory')
mscVrPpSrcl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14))
mscVrPpSrclRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 1), )
if mibBuilder.loadTexts: mscVrPpSrclRowStatusTable.setStatus('mandatory')
mscVrPpSrclRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclRowStatusEntry.setStatus('mandatory')
mscVrPpSrclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclRowStatus.setStatus('mandatory')
mscVrPpSrclComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclComponentName.setStatus('mandatory')
mscVrPpSrclStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclStorageType.setStatus('mandatory')
mscVrPpSrclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrclIndex.setStatus('mandatory')
mscVrPpSrclProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 10), )
if mibBuilder.loadTexts: mscVrPpSrclProvTable.setStatus('mandatory')
mscVrPpSrclProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclProvEntry.setStatus('mandatory')
mscVrPpSrclTranslateIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("ieee8023", 1), ("ethernet", 2), ("snap", 3), ("sap", 4))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclTranslateIpx.setStatus('mandatory')
mscVrPpSrclFragmentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclFragmentIp.setStatus('mandatory')
mscVrPpSrclServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ordered", 0), ("notOrdered", 1))).clone('notOrdered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclServiceClass.setStatus('mandatory')
mscVrPpSrclConvertArpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclConvertArpMacAddress.setStatus('mandatory')
mscVrPpSrclPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclPortNum.setStatus('mandatory')
mscVrPpSrclStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12), )
if mibBuilder.loadTexts: mscVrPpSrclStpProvTable.setStatus('mandatory')
mscVrPpSrclStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclStpProvEntry.setStatus('mandatory')
mscVrPpSrclAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclAdminStatus.setStatus('mandatory')
mscVrPpSrclPortStateStpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclPortStateStpControl.setStatus('mandatory')
mscVrPpSrclStpTypeProv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclStpTypeProv.setStatus('mandatory')
mscVrPpSrclPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclPortPriority.setStatus('mandatory')
mscVrPpSrclPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclPathCost.setStatus('mandatory')
mscVrPpSrclPathCostMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclPathCostMethod.setStatus('mandatory')
mscVrPpSrclDIProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 13), )
if mibBuilder.loadTexts: mscVrPpSrclDIProvTable.setStatus('mandatory')
mscVrPpSrclDIProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclDIProvEntry.setStatus('mandatory')
mscVrPpSrclDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967293)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclDomainNum.setStatus('mandatory')
mscVrPpSrclPreserveDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclPreserveDomain.setStatus('mandatory')
mscVrPpSrclStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 14), )
if mibBuilder.loadTexts: mscVrPpSrclStateTable.setStatus('mandatory')
mscVrPpSrclStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclStateEntry.setStatus('mandatory')
mscVrPpSrclAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclAdminState.setStatus('mandatory')
mscVrPpSrclOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclOperationalState.setStatus('mandatory')
mscVrPpSrclUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclUsageState.setStatus('mandatory')
mscVrPpSrclOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 15), )
if mibBuilder.loadTexts: mscVrPpSrclOperStatusTable.setStatus('mandatory')
mscVrPpSrclOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclOperStatusEntry.setStatus('mandatory')
mscVrPpSrclSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclSnmpOperStatus.setStatus('mandatory')
mscVrPpSrclOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16), )
if mibBuilder.loadTexts: mscVrPpSrclOperTable.setStatus('mandatory')
mscVrPpSrclOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclOperEntry.setStatus('mandatory')
mscVrPpSrclPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclPortName.setStatus('mandatory')
mscVrPpSrclUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclUpTime.setStatus('mandatory')
mscVrPpSrclDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDownTime.setStatus('mandatory')
mscVrPpSrclBridgingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tb", 2), ("sr", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclBridgingMode.setStatus('mandatory')
mscVrPpSrclBridgePortConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclBridgePortConfig.setStatus('mandatory')
mscVrPpSrclBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernetBridgePort", 0), ("tokenRingBridgePort", 1), ("fddiBridgePort", 2), ("tokenBusBridgePort", 3), ("fddiEncapsulatingBridgePort", 4), ("vnsBridgePort", 5), ("frameRelayBridgePort", 6), ("pppBridgePort", 7), ("smdsBridgePort", 8), ("vcpBridgePort", 9), ("x25BridgePort", 10), ("srEncapSrBridgePort", 11), ("srEncapTbBridgePort", 12), ("sourceGateSrBridgePort", 13), ("sourceGateTbBridgePort", 14), ("srtbBridgePort", 15), ("tbsrBridgePort", 16), ("clusterSrBridgePort", 17), ("clusterTbBridgePort", 18), ("unknown", 19), ("atmMpeBridgePort", 20), ("snaDlrBridgePort", 21), ("lanEmulationClientEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclBridgePortType.setStatus('mandatory')
mscVrPpSrclIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 8), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclIfIndex.setStatus('mandatory')
mscVrPpSrclDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDelayExceededDiscards.setStatus('mandatory')
mscVrPpSrclMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclMtuExceededDiscards.setStatus('mandatory')
mscVrPpSrclStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18), )
if mibBuilder.loadTexts: mscVrPpSrclStpOperTable.setStatus('mandatory')
mscVrPpSrclStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclStpOperEntry.setStatus('mandatory')
mscVrPpSrclStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclStpPortState.setStatus('mandatory')
mscVrPpSrclStpTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclStpTypeOper.setStatus('mandatory')
mscVrPpSrclDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDesignatedCost.setStatus('mandatory')
mscVrPpSrclPathCostOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclPathCostOper.setStatus('mandatory')
mscVrPpSrclDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDesignatedBridge.setStatus('mandatory')
mscVrPpSrclDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 7), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDesignatedPort.setStatus('mandatory')
mscVrPpSrclForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclForwardTransitions.setStatus('mandatory')
mscVrPpSrclBlockingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclBlockingDiscards.setStatus('mandatory')
mscVrPpSrclDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 18, 1, 10), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDesignatedRoot.setStatus('mandatory')
mscVrPpSrclStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 19), )
if mibBuilder.loadTexts: mscVrPpSrclStatsTable.setStatus('mandatory')
mscVrPpSrclStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclStatsEntry.setStatus('mandatory')
mscVrPpSrclBadAbstractDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclBadAbstractDiscards.setStatus('mandatory')
mscVrPpSrclTinygramFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclTinygramFramesIn.setStatus('mandatory')
mscVrPpSrclTinygramFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclTinygramFramesOut.setStatus('mandatory')
mscVrPpSrclInFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclInFilterDiscards.setStatus('mandatory')
mscVrPpSrclOutFilterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclOutFilterDiscards.setStatus('mandatory')
mscVrPpSrclSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20), )
if mibBuilder.loadTexts: mscVrPpSrclSrProvTable.setStatus('mandatory')
mscVrPpSrclSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclSrProvEntry.setStatus('mandatory')
mscVrPpSrclHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclHopCount.setStatus('mandatory')
mscVrPpSrclExploreFrameTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("encap", 0), ("xlate", 1))).clone('encap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclExploreFrameTreatment.setStatus('mandatory')
mscVrPpSrclLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclLanId.setStatus('mandatory')
mscVrPpSrclInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclInternalLanId.setStatus('mandatory')
mscVrPpSrclBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclBridgeNum.setStatus('mandatory')
mscVrPpSrclLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(4399, 4399), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(17749, 17749), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclLargestFrame.setStatus('mandatory')
mscVrPpSrclSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoSpan", 1), ("disabled", 2), ("forced", 3))).clone('autoSpan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclSteSpanMode.setStatus('mandatory')
mscVrPpSrclAreRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclAreRdLimit.setStatus('mandatory')
mscVrPpSrclSteRdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 20, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclSteRdLimit.setStatus('mandatory')
mscVrPpSrclSrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21), )
if mibBuilder.loadTexts: mscVrPpSrclSrStatsTable.setStatus('mandatory')
mscVrPpSrclSrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"))
if mibBuilder.loadTexts: mscVrPpSrclSrStatsEntry.setStatus('mandatory')
mscVrPpSrclSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclSpecInFrames.setStatus('mandatory')
mscVrPpSrclSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclSpecOutFrames.setStatus('mandatory')
mscVrPpSrclApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclApeInFrames.setStatus('mandatory')
mscVrPpSrclApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclApeOutFrames.setStatus('mandatory')
mscVrPpSrclSteInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclSteInFrames.setStatus('mandatory')
mscVrPpSrclSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclSteOutFrames.setStatus('mandatory')
mscVrPpSrclSegmentMismatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclSegmentMismatchDiscards.setStatus('mandatory')
mscVrPpSrclDupSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDupSegmentDiscards.setStatus('mandatory')
mscVrPpSrclHopCountExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclHopCountExceededDiscards.setStatus('mandatory')
mscVrPpSrclDupLanIdOrTreeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDupLanIdOrTreeErrors.setStatus('mandatory')
mscVrPpSrclLanIdMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclLanIdMismatches.setStatus('mandatory')
mscVrPpSrclStaticDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclStaticDiscards.setStatus('mandatory')
mscVrPpSrclDynamicDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 21, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclDynamicDiscards.setStatus('mandatory')
mscVrPpSrclNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2))
mscVrPpSrclNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 1), )
if mibBuilder.loadTexts: mscVrPpSrclNsRowStatusTable.setStatus('mandatory')
mscVrPpSrclNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclNsIndex"))
if mibBuilder.loadTexts: mscVrPpSrclNsRowStatusEntry.setStatus('mandatory')
mscVrPpSrclNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclNsRowStatus.setStatus('mandatory')
mscVrPpSrclNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclNsComponentName.setStatus('mandatory')
mscVrPpSrclNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSrclNsStorageType.setStatus('mandatory')
mscVrPpSrclNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSrclNsIndex.setStatus('mandatory')
mscVrPpSrclNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 10), )
if mibBuilder.loadTexts: mscVrPpSrclNsProvTable.setStatus('mandatory')
mscVrPpSrclNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrPpSrclNsIndex"))
if mibBuilder.loadTexts: mscVrPpSrclNsProvEntry.setStatus('mandatory')
mscVrPpSrclNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclNsIncomingFilter.setStatus('mandatory')
mscVrPpSrclNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 14, 2, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSrclNsOutgoingFilter.setStatus('mandatory')
mscVrBr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5))
mscVrBrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 1), )
if mibBuilder.loadTexts: mscVrBrRowStatusTable.setStatus('mandatory')
mscVrBrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"))
if mibBuilder.loadTexts: mscVrBrRowStatusEntry.setStatus('mandatory')
mscVrBrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrRowStatus.setStatus('mandatory')
mscVrBrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrComponentName.setStatus('mandatory')
mscVrBrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrStorageType.setStatus('mandatory')
mscVrBrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrBrIndex.setStatus('mandatory')
mscVrBrAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 10), )
if mibBuilder.loadTexts: mscVrBrAdminControlTable.setStatus('mandatory')
mscVrBrAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"))
if mibBuilder.loadTexts: mscVrBrAdminControlEntry.setStatus('mandatory')
mscVrBrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrAdminStatus.setStatus('mandatory')
mscVrBrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 12), )
if mibBuilder.loadTexts: mscVrBrStateTable.setStatus('mandatory')
mscVrBrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"))
if mibBuilder.loadTexts: mscVrBrStateEntry.setStatus('mandatory')
mscVrBrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrAdminState.setStatus('mandatory')
mscVrBrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrOperationalState.setStatus('mandatory')
mscVrBrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrUsageState.setStatus('mandatory')
mscVrBrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 13), )
if mibBuilder.loadTexts: mscVrBrOperStatusTable.setStatus('mandatory')
mscVrBrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"))
if mibBuilder.loadTexts: mscVrBrOperStatusEntry.setStatus('mandatory')
mscVrBrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSnmpOperStatus.setStatus('mandatory')
mscVrBrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 14), )
if mibBuilder.loadTexts: mscVrBrOperTable.setStatus('mandatory')
mscVrBrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"))
if mibBuilder.loadTexts: mscVrBrOperEntry.setStatus('mandatory')
mscVrBrBridgeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 14, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrBridgeAddress.setStatus('mandatory')
mscVrBrNumPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 14, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrNumPorts.setStatus('mandatory')
mscVrBrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("transparentOnly", 2), ("sourceRouteOnly", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrType.setStatus('mandatory')
mscVrBrPte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2))
mscVrBrPteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1), )
if mibBuilder.loadTexts: mscVrBrPteRowStatusTable.setStatus('mandatory')
mscVrBrPteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPteDomainNumIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPtePortNameIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPteModeIndex"))
if mibBuilder.loadTexts: mscVrBrPteRowStatusEntry.setStatus('mandatory')
mscVrBrPteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteRowStatus.setStatus('mandatory')
mscVrBrPteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteComponentName.setStatus('mandatory')
mscVrBrPteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteStorageType.setStatus('mandatory')
mscVrBrPteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: mscVrBrPteDomainNumIndex.setStatus('mandatory')
mscVrBrPtePortNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1, 1, 11), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(0, 29)))
if mibBuilder.loadTexts: mscVrBrPtePortNameIndex.setStatus('mandatory')
mscVrBrPteModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("tb", 2), ("sr", 3), ("srt", 4))))
if mibBuilder.loadTexts: mscVrBrPteModeIndex.setStatus('mandatory')
mscVrBrPteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 10), )
if mibBuilder.loadTexts: mscVrBrPteOperTable.setStatus('mandatory')
mscVrBrPteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPteDomainNumIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPtePortNameIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPteModeIndex"))
if mibBuilder.loadTexts: mscVrBrPteOperEntry.setStatus('mandatory')
mscVrBrPteMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("ethernet", 0), ("tokenRing", 1), ("fddiBridgePort", 2), ("tokenBus", 3), ("fddiEncapsulating", 4), ("vns", 5), ("frameRelay", 6), ("ppp", 7), ("smds", 8), ("vcp", 9), ("x25", 10), ("srEncapSr", 11), ("srEncapTb", 12), ("sourceGateSr", 13), ("sourceGateTb", 14), ("srtb", 15), ("tbsr", 16), ("clusterSr", 17), ("clusterTb", 18), ("unknown", 19), ("atmMpe", 20), ("snaDlr", 21), ("lecEthernet", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteMacType.setStatus('mandatory')
mscVrBrPteStpState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteStpState.setStatus('mandatory')
mscVrBrPteStpType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("dec", 2), ("ieee8021", 3))).clone('ieee8021')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteStpType.setStatus('mandatory')
mscVrBrPteFilterPoints = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("in", 1), ("out", 2), ("inOut", 3), ("none", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteFilterPoints.setStatus('mandatory')
mscVrBrPtePortPointsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("rootBridge", 2), ("designatedBridge", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPtePortPointsTo.setStatus('mandatory')
mscVrBrPteSpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 11), )
if mibBuilder.loadTexts: mscVrBrPteSpOperTable.setStatus('mandatory')
mscVrBrPteSpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPteDomainNumIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPtePortNameIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrPteModeIndex"))
if mibBuilder.loadTexts: mscVrBrPteSpOperEntry.setStatus('mandatory')
mscVrBrPteLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteLanId.setStatus('mandatory')
mscVrBrPteInternalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteInternalLanId.setStatus('mandatory')
mscVrBrPteBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrPteBridgeNum.setStatus('mandatory')
mscVrBrNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3))
mscVrBrNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 1), )
if mibBuilder.loadTexts: mscVrBrNsRowStatusTable.setStatus('mandatory')
mscVrBrNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrNsIndex"))
if mibBuilder.loadTexts: mscVrBrNsRowStatusEntry.setStatus('mandatory')
mscVrBrNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsRowStatus.setStatus('mandatory')
mscVrBrNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrNsComponentName.setStatus('mandatory')
mscVrBrNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrNsStorageType.setStatus('mandatory')
mscVrBrNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrBrNsIndex.setStatus('mandatory')
mscVrBrNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 10), )
if mibBuilder.loadTexts: mscVrBrNsProvTable.setStatus('mandatory')
mscVrBrNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrNsIndex"))
if mibBuilder.loadTexts: mscVrBrNsProvEntry.setStatus('mandatory')
mscVrBrNsFirstFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsFirstFilter.setStatus('mandatory')
mscVrBrNsLastFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsLastFilter.setStatus('mandatory')
mscVrBrNsAte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2))
mscVrBrNsAteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 1), )
if mibBuilder.loadTexts: mscVrBrNsAteRowStatusTable.setStatus('mandatory')
mscVrBrNsAteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrNsIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrNsAteEntryNumberIndex"))
if mibBuilder.loadTexts: mscVrBrNsAteRowStatusEntry.setStatus('mandatory')
mscVrBrNsAteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteRowStatus.setStatus('mandatory')
mscVrBrNsAteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrNsAteComponentName.setStatus('mandatory')
mscVrBrNsAteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrNsAteStorageType.setStatus('mandatory')
mscVrBrNsAteEntryNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: mscVrBrNsAteEntryNumberIndex.setStatus('mandatory')
mscVrBrNsAteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10), )
if mibBuilder.loadTexts: mscVrBrNsAteProvTable.setStatus('mandatory')
mscVrBrNsAteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrNsIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrNsAteEntryNumberIndex"))
if mibBuilder.loadTexts: mscVrBrNsAteProvEntry.setStatus('mandatory')
mscVrBrNsAteDomainNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967293))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteDomainNum.setStatus('mandatory')
mscVrBrNsAteFirstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteFirstMacAddress.setStatus('mandatory')
mscVrBrNsAteFirstMacAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1, 3), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="ffffffffffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteFirstMacAddressMask.setStatus('mandatory')
mscVrBrNsAteSecondMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteSecondMacAddress.setStatus('mandatory')
mscVrBrNsAteSecondMacAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1, 5), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="ffffffffffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteSecondMacAddressMask.setStatus('mandatory')
mscVrBrNsAteDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("to", 0), ("from", 1), ("toFrom", 2))).clone('toFrom')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteDirection.setStatus('mandatory')
mscVrBrNsAteFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 3, 2, 10, 1, 7), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrNsAteFilterName.setStatus('mandatory')
mscVrBrTb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4))
mscVrBrTbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 1), )
if mibBuilder.loadTexts: mscVrBrTbRowStatusTable.setStatus('mandatory')
mscVrBrTbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"))
if mibBuilder.loadTexts: mscVrBrTbRowStatusEntry.setStatus('mandatory')
mscVrBrTbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbRowStatus.setStatus('mandatory')
mscVrBrTbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbComponentName.setStatus('mandatory')
mscVrBrTbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStorageType.setStatus('mandatory')
mscVrBrTbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrBrTbIndex.setStatus('mandatory')
mscVrBrTbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 10), )
if mibBuilder.loadTexts: mscVrBrTbProvTable.setStatus('mandatory')
mscVrBrTbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"))
if mibBuilder.loadTexts: mscVrBrTbProvEntry.setStatus('mandatory')
mscVrBrTbFwdTableNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbFwdTableNumEntries.setStatus('mandatory')
mscVrBrTbAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbAgingTime.setStatus('mandatory')
mscVrBrTbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 11), )
if mibBuilder.loadTexts: mscVrBrTbStatsTable.setStatus('mandatory')
mscVrBrTbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"))
if mibBuilder.loadTexts: mscVrBrTbStatsEntry.setStatus('mandatory')
mscVrBrTbLearnedEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbLearnedEntryDiscards.setStatus('mandatory')
mscVrBrTbTotalForwardingTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbTotalForwardingTableEntries.setStatus('mandatory')
mscVrBrTbNumFtEntriesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNumFtEntriesFree.setStatus('mandatory')
mscVrBrTbNumFtEntriesDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNumFtEntriesDenied.setStatus('mandatory')
mscVrBrTbStp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2))
mscVrBrTbStpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 1), )
if mibBuilder.loadTexts: mscVrBrTbStpRowStatusTable.setStatus('mandatory')
mscVrBrTbStpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbStpIndex"))
if mibBuilder.loadTexts: mscVrBrTbStpRowStatusEntry.setStatus('mandatory')
mscVrBrTbStpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbStpRowStatus.setStatus('mandatory')
mscVrBrTbStpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpComponentName.setStatus('mandatory')
mscVrBrTbStpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpStorageType.setStatus('mandatory')
mscVrBrTbStpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: mscVrBrTbStpIndex.setStatus('mandatory')
mscVrBrTbStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10), )
if mibBuilder.loadTexts: mscVrBrTbStpProvTable.setStatus('mandatory')
mscVrBrTbStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbStpIndex"))
if mibBuilder.loadTexts: mscVrBrTbStpProvEntry.setStatus('mandatory')
mscVrBrTbStpStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2))).clone('access')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbStpStpMode.setStatus('mandatory')
mscVrBrTbStpProtocolSpec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("dec", 2), ("ieee8021d", 3))).clone('ieee8021d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbStpProtocolSpec.setStatus('mandatory')
mscVrBrTbStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbStpPriority.setStatus('mandatory')
mscVrBrTbStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbStpBridgeMaxAge.setStatus('mandatory')
mscVrBrTbStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbStpBridgeHelloTime.setStatus('mandatory')
mscVrBrTbStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbStpBridgeForwardDelay.setStatus('mandatory')
mscVrBrTbStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11), )
if mibBuilder.loadTexts: mscVrBrTbStpOperTable.setStatus('mandatory')
mscVrBrTbStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbStpIndex"))
if mibBuilder.loadTexts: mscVrBrTbStpOperEntry.setStatus('mandatory')
mscVrBrTbStpBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 1), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpBridgeId.setStatus('mandatory')
mscVrBrTbStpRootPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpRootPortName.setStatus('mandatory')
mscVrBrTbStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpTimeSinceTopologyChange.setStatus('mandatory')
mscVrBrTbStpTopologyChangeDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpTopologyChangeDetect.setStatus('mandatory')
mscVrBrTbStpTopologyChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpTopologyChanges.setStatus('mandatory')
mscVrBrTbStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpDesignatedRoot.setStatus('mandatory')
mscVrBrTbStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpRootCost.setStatus('mandatory')
mscVrBrTbStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpMaxAge.setStatus('mandatory')
mscVrBrTbStpAgingTimeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpAgingTimeOper.setStatus('mandatory')
mscVrBrTbStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpHelloTime.setStatus('mandatory')
mscVrBrTbStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 100)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpHoldTime.setStatus('mandatory')
mscVrBrTbStpFwdDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 2, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbStpFwdDelay.setStatus('mandatory')
mscVrBrTbSte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3))
mscVrBrTbSteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 1), )
if mibBuilder.loadTexts: mscVrBrTbSteRowStatusTable.setStatus('mandatory')
mscVrBrTbSteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbSteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbSteReceivePortIndex"))
if mibBuilder.loadTexts: mscVrBrTbSteRowStatusEntry.setStatus('mandatory')
mscVrBrTbSteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbSteRowStatus.setStatus('mandatory')
mscVrBrTbSteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbSteComponentName.setStatus('mandatory')
mscVrBrTbSteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbSteStorageType.setStatus('mandatory')
mscVrBrTbSteAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: mscVrBrTbSteAddressIndex.setStatus('mandatory')
mscVrBrTbSteReceivePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 1, 1, 11), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 29)))
if mibBuilder.loadTexts: mscVrBrTbSteReceivePortIndex.setStatus('mandatory')
mscVrBrTbSteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 10), )
if mibBuilder.loadTexts: mscVrBrTbSteProvTable.setStatus('mandatory')
mscVrBrTbSteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbSteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbSteReceivePortIndex"))
if mibBuilder.loadTexts: mscVrBrTbSteProvEntry.setStatus('mandatory')
mscVrBrTbSteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("permanent", 3))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbSteStatus.setStatus('mandatory')
mscVrBrTbSteAtgtTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 271), )
if mibBuilder.loadTexts: mscVrBrTbSteAtgtTable.setStatus('mandatory')
mscVrBrTbSteAtgtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 271, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbSteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbSteReceivePortIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbSteAtgtValue"))
if mibBuilder.loadTexts: mscVrBrTbSteAtgtEntry.setStatus('mandatory')
mscVrBrTbSteAtgtValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 271, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrTbSteAtgtValue.setStatus('mandatory')
mscVrBrTbSteAtgtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 3, 271, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrBrTbSteAtgtRowStatus.setStatus('mandatory')
mscVrBrTbFte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4))
mscVrBrTbFteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 1), )
if mibBuilder.loadTexts: mscVrBrTbFteRowStatusTable.setStatus('mandatory')
mscVrBrTbFteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbFteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbFteDomainNumIndex"))
if mibBuilder.loadTexts: mscVrBrTbFteRowStatusEntry.setStatus('mandatory')
mscVrBrTbFteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbFteRowStatus.setStatus('mandatory')
mscVrBrTbFteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbFteComponentName.setStatus('mandatory')
mscVrBrTbFteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbFteStorageType.setStatus('mandatory')
mscVrBrTbFteAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: mscVrBrTbFteAddressIndex.setStatus('mandatory')
mscVrBrTbFteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: mscVrBrTbFteDomainNumIndex.setStatus('mandatory')
mscVrBrTbFteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 10), )
if mibBuilder.loadTexts: mscVrBrTbFteOperTable.setStatus('mandatory')
mscVrBrTbFteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbFteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbFteDomainNumIndex"))
if mibBuilder.loadTexts: mscVrBrTbFteOperEntry.setStatus('mandatory')
mscVrBrTbFtePort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbFtePort.setStatus('mandatory')
mscVrBrTbFteAgeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 10, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbFteAgeOfEntry.setStatus('mandatory')
mscVrBrTbFtePeerAddressInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 10, 1, 5), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbFtePeerAddressInfo.setStatus('mandatory')
mscVrBrTbFteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbFteStatus.setStatus('mandatory')
mscVrBrTbNcFte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5))
mscVrBrTbNcFteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 1), )
if mibBuilder.loadTexts: mscVrBrTbNcFteRowStatusTable.setStatus('mandatory')
mscVrBrTbNcFteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbNcFteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbNcFteDomainNumIndex"))
if mibBuilder.loadTexts: mscVrBrTbNcFteRowStatusEntry.setStatus('mandatory')
mscVrBrTbNcFteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNcFteRowStatus.setStatus('mandatory')
mscVrBrTbNcFteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNcFteComponentName.setStatus('mandatory')
mscVrBrTbNcFteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNcFteStorageType.setStatus('mandatory')
mscVrBrTbNcFteAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: mscVrBrTbNcFteAddressIndex.setStatus('mandatory')
mscVrBrTbNcFteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: mscVrBrTbNcFteDomainNumIndex.setStatus('mandatory')
mscVrBrTbNcFteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 10), )
if mibBuilder.loadTexts: mscVrBrTbNcFteOperTable.setStatus('mandatory')
mscVrBrTbNcFteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbNcFteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrTbNcFteDomainNumIndex"))
if mibBuilder.loadTexts: mscVrBrTbNcFteOperEntry.setStatus('mandatory')
mscVrBrTbNcFtePort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNcFtePort.setStatus('mandatory')
mscVrBrTbNcFteAgeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 10, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNcFteAgeOfEntry.setStatus('mandatory')
mscVrBrTbNcFtePeerAddressInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 10, 1, 5), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNcFtePeerAddressInfo.setStatus('mandatory')
mscVrBrTbNcFteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 4, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrTbNcFteStatus.setStatus('mandatory')
mscVrBrSrb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5))
mscVrBrSrbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 1), )
if mibBuilder.loadTexts: mscVrBrSrbRowStatusTable.setStatus('mandatory')
mscVrBrSrbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"))
if mibBuilder.loadTexts: mscVrBrSrbRowStatusEntry.setStatus('mandatory')
mscVrBrSrbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbRowStatus.setStatus('mandatory')
mscVrBrSrbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbComponentName.setStatus('mandatory')
mscVrBrSrbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStorageType.setStatus('mandatory')
mscVrBrSrbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrBrSrbIndex.setStatus('mandatory')
mscVrBrSrbProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 10), )
if mibBuilder.loadTexts: mscVrBrSrbProvTable.setStatus('mandatory')
mscVrBrSrbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"))
if mibBuilder.loadTexts: mscVrBrSrbProvEntry.setStatus('mandatory')
mscVrBrSrbLanIdTableNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 65535)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbLanIdTableNumEntries.setStatus('mandatory')
mscVrBrSrbAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbAgingTime.setStatus('mandatory')
mscVrBrSrbBridgeLfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mode3", 1), ("mode6", 2))).clone('mode3')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbBridgeLfMode.setStatus('mandatory')
mscVrBrSrbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 11), )
if mibBuilder.loadTexts: mscVrBrSrbStatsTable.setStatus('mandatory')
mscVrBrSrbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"))
if mibBuilder.loadTexts: mscVrBrSrbStatsEntry.setStatus('mandatory')
mscVrBrSrbTotalLanIdTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbTotalLanIdTableEntries.setStatus('mandatory')
mscVrBrSrbNumLanIdtEntriesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbNumLanIdtEntriesFree.setStatus('mandatory')
mscVrBrSrbNumLanIdtEntriesDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbNumLanIdtEntriesDenied.setStatus('mandatory')
mscVrBrSrbStp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2))
mscVrBrSrbStpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 1), )
if mibBuilder.loadTexts: mscVrBrSrbStpRowStatusTable.setStatus('mandatory')
mscVrBrSrbStpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbStpIndex"))
if mibBuilder.loadTexts: mscVrBrSrbStpRowStatusEntry.setStatus('mandatory')
mscVrBrSrbStpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbStpRowStatus.setStatus('mandatory')
mscVrBrSrbStpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpComponentName.setStatus('mandatory')
mscVrBrSrbStpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpStorageType.setStatus('mandatory')
mscVrBrSrbStpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: mscVrBrSrbStpIndex.setStatus('mandatory')
mscVrBrSrbStpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10), )
if mibBuilder.loadTexts: mscVrBrSrbStpProvTable.setStatus('mandatory')
mscVrBrSrbStpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbStpIndex"))
if mibBuilder.loadTexts: mscVrBrSrbStpProvEntry.setStatus('mandatory')
mscVrBrSrbStpStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("backbone", 2))).clone('access')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbStpStpMode.setStatus('mandatory')
mscVrBrSrbStpProtocolSpec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("dec", 2), ("ieee8021d", 3))).clone('ieee8021d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbStpProtocolSpec.setStatus('mandatory')
mscVrBrSrbStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbStpPriority.setStatus('mandatory')
mscVrBrSrbStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbStpBridgeMaxAge.setStatus('mandatory')
mscVrBrSrbStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbStpBridgeHelloTime.setStatus('mandatory')
mscVrBrSrbStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrBrSrbStpBridgeForwardDelay.setStatus('mandatory')
mscVrBrSrbStpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11), )
if mibBuilder.loadTexts: mscVrBrSrbStpOperTable.setStatus('mandatory')
mscVrBrSrbStpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbStpIndex"))
if mibBuilder.loadTexts: mscVrBrSrbStpOperEntry.setStatus('mandatory')
mscVrBrSrbStpBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 1), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpBridgeId.setStatus('mandatory')
mscVrBrSrbStpRootPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpRootPortName.setStatus('mandatory')
mscVrBrSrbStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpTimeSinceTopologyChange.setStatus('mandatory')
mscVrBrSrbStpTopologyChangeDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpTopologyChangeDetect.setStatus('mandatory')
mscVrBrSrbStpTopologyChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpTopologyChanges.setStatus('mandatory')
mscVrBrSrbStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 6), BridgeId().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpDesignatedRoot.setStatus('mandatory')
mscVrBrSrbStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpRootCost.setStatus('mandatory')
mscVrBrSrbStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpMaxAge.setStatus('mandatory')
mscVrBrSrbStpAgingTimeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpAgingTimeOper.setStatus('mandatory')
mscVrBrSrbStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpHelloTime.setStatus('mandatory')
mscVrBrSrbStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 100)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpHoldTime.setStatus('mandatory')
mscVrBrSrbStpFwdDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 2, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbStpFwdDelay.setStatus('mandatory')
mscVrBrSrbLte = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3))
mscVrBrSrbLteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 1), )
if mibBuilder.loadTexts: mscVrBrSrbLteRowStatusTable.setStatus('mandatory')
mscVrBrSrbLteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbLteLanIdIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbLteDomainNumIndex"))
if mibBuilder.loadTexts: mscVrBrSrbLteRowStatusEntry.setStatus('mandatory')
mscVrBrSrbLteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbLteRowStatus.setStatus('mandatory')
mscVrBrSrbLteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbLteComponentName.setStatus('mandatory')
mscVrBrSrbLteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbLteStorageType.setStatus('mandatory')
mscVrBrSrbLteLanIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), )))
if mibBuilder.loadTexts: mscVrBrSrbLteLanIdIndex.setStatus('mandatory')
mscVrBrSrbLteDomainNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 268435455)))
if mibBuilder.loadTexts: mscVrBrSrbLteDomainNumIndex.setStatus('mandatory')
mscVrBrSrbLteOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 10), )
if mibBuilder.loadTexts: mscVrBrSrbLteOperTable.setStatus('mandatory')
mscVrBrSrbLteOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbLteLanIdIndex"), (0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscVrBrSrbLteDomainNumIndex"))
if mibBuilder.loadTexts: mscVrBrSrbLteOperEntry.setStatus('mandatory')
mscVrBrSrbLtePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(4, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbLtePortName.setStatus('mandatory')
mscVrBrSrbLteAgeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbLteAgeOfEntry.setStatus('mandatory')
mscVrBrSrbLtePeerMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 10, 1, 3), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbLtePeerMACAddress.setStatus('mandatory')
mscVrBrSrbLteTypeOfEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 5, 5, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("static", 0), ("dynamic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrBrSrbLteTypeOfEntry.setStatus('mandatory')
mscCB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103))
mscCBRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 1), )
if mibBuilder.loadTexts: mscCBRowStatusTable.setStatus('mandatory')
mscCBRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscCBIndex"))
if mibBuilder.loadTexts: mscCBRowStatusEntry.setStatus('mandatory')
mscCBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscCBRowStatus.setStatus('mandatory')
mscCBComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBComponentName.setStatus('mandatory')
mscCBStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBStorageType.setStatus('mandatory')
mscCBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscCBIndex.setStatus('mandatory')
mscCBAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 10), )
if mibBuilder.loadTexts: mscCBAdminControlTable.setStatus('mandatory')
mscCBAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscCBIndex"))
if mibBuilder.loadTexts: mscCBAdminControlEntry.setStatus('mandatory')
mscCBSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscCBSnmpAdminStatus.setStatus('obsolete')
mscCBIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 11), )
if mibBuilder.loadTexts: mscCBIfEntryTable.setStatus('mandatory')
mscCBIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscCBIndex"))
if mibBuilder.loadTexts: mscCBIfEntryEntry.setStatus('mandatory')
mscCBIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscCBIfAdminStatus.setStatus('mandatory')
mscCBIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBIfIndex.setStatus('mandatory')
mscCBMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 12), )
if mibBuilder.loadTexts: mscCBMpTable.setStatus('mandatory')
mscCBMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscCBIndex"))
if mibBuilder.loadTexts: mscCBMpEntry.setStatus('mandatory')
mscCBLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 12, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscCBLinkToProtocolPort.setStatus('mandatory')
mscCBOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 13), )
if mibBuilder.loadTexts: mscCBOperTable.setStatus('mandatory')
mscCBOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscCBIndex"))
if mibBuilder.loadTexts: mscCBOperEntry.setStatus('mandatory')
mscCBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 13, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBMacAddress.setStatus('mandatory')
mscCBStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 14), )
if mibBuilder.loadTexts: mscCBStateTable.setStatus('mandatory')
mscCBStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscCBIndex"))
if mibBuilder.loadTexts: mscCBStateEntry.setStatus('mandatory')
mscCBAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBAdminState.setStatus('mandatory')
mscCBOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBOperationalState.setStatus('mandatory')
mscCBUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBUsageState.setStatus('mandatory')
mscCBOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 15), )
if mibBuilder.loadTexts: mscCBOperStatusTable.setStatus('mandatory')
mscCBOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscCBIndex"))
if mibBuilder.loadTexts: mscCBOperStatusEntry.setStatus('mandatory')
mscCBSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 103, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscCBSnmpOperStatus.setStatus('mandatory')
mscPB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104))
mscPBRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 1), )
if mibBuilder.loadTexts: mscPBRowStatusTable.setStatus('mandatory')
mscPBRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscPBIndex"))
if mibBuilder.loadTexts: mscPBRowStatusEntry.setStatus('mandatory')
mscPBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPBRowStatus.setStatus('mandatory')
mscPBComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBComponentName.setStatus('mandatory')
mscPBStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBStorageType.setStatus('mandatory')
mscPBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscPBIndex.setStatus('mandatory')
mscPBAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 10), )
if mibBuilder.loadTexts: mscPBAdminControlTable.setStatus('mandatory')
mscPBAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscPBIndex"))
if mibBuilder.loadTexts: mscPBAdminControlEntry.setStatus('mandatory')
mscPBSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPBSnmpAdminStatus.setStatus('obsolete')
mscPBIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 11), )
if mibBuilder.loadTexts: mscPBIfEntryTable.setStatus('mandatory')
mscPBIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscPBIndex"))
if mibBuilder.loadTexts: mscPBIfEntryEntry.setStatus('mandatory')
mscPBIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPBIfAdminStatus.setStatus('mandatory')
mscPBIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBIfIndex.setStatus('mandatory')
mscPBMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 12), )
if mibBuilder.loadTexts: mscPBMpTable.setStatus('mandatory')
mscPBMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscPBIndex"))
if mibBuilder.loadTexts: mscPBMpEntry.setStatus('mandatory')
mscPBLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 12, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPBLinkToProtocolPort.setStatus('mandatory')
mscPBOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 13), )
if mibBuilder.loadTexts: mscPBOperTable.setStatus('mandatory')
mscPBOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscPBIndex"))
if mibBuilder.loadTexts: mscPBOperEntry.setStatus('mandatory')
mscPBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 13, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBMacAddress.setStatus('mandatory')
mscPBStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 14), )
if mibBuilder.loadTexts: mscPBStateTable.setStatus('mandatory')
mscPBStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscPBIndex"))
if mibBuilder.loadTexts: mscPBStateEntry.setStatus('mandatory')
mscPBAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBAdminState.setStatus('mandatory')
mscPBOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBOperationalState.setStatus('mandatory')
mscPBUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBUsageState.setStatus('mandatory')
mscPBOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 15), )
if mibBuilder.loadTexts: mscPBOperStatusTable.setStatus('mandatory')
mscPBOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BridgeMIB", "mscPBIndex"))
if mibBuilder.loadTexts: mscPBOperStatusEntry.setStatus('mandatory')
mscPBSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 104, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPBSnmpOperStatus.setStatus('mandatory')
bridgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 1))
bridgeGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 1, 1))
bridgeGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 1, 1, 3))
bridgeGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 1, 1, 3, 2))
bridgeCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 3))
bridgeCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 3, 1))
bridgeCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 3, 1, 3))
bridgeCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 25, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BridgeMIB", mscVrPpTbclTbOperTable=mscVrPpTbclTbOperTable, mscVrPpTbsgDesignatedBridge=mscVrPpTbsgDesignatedBridge, mscVrPpFddiETBOperTable=mscVrPpFddiETBOperTable, mscVrPpTbseDesignatedPort=mscVrPpTbseDesignatedPort, mscVrPpTbsgTinygramFramesIn=mscVrPpTbsgTinygramFramesIn, mscVrPpTbpBlockingDiscards=mscVrPpTbpBlockingDiscards, mscVrPpSrBpPathCostMethod=mscVrPpSrBpPathCostMethod, mscVrPpSrseStpOperTable=mscVrPpSrseStpOperTable, mscVrPpSrseSrProvEntry=mscVrPpSrseSrProvEntry, mscVrPpSrclPreserveDomain=mscVrPpSrclPreserveDomain, mscVrPpSrclSegmentMismatchDiscards=mscVrPpSrclSegmentMismatchDiscards, mscVrBrTbNcFteComponentName=mscVrBrTbNcFteComponentName, mscVrPpFddiETBNsStorageType=mscVrPpFddiETBNsStorageType, mscVrPpTbpNs=mscVrPpTbpNs, mscVrPpSrseSteSpanMode=mscVrPpSrseSteSpanMode, mscVrPpSrtBpDynamicDiscards=mscVrPpSrtBpDynamicDiscards, mscVrPpSrclAreRdLimit=mscVrPpSrclAreRdLimit, mscVrBrTbStpBridgeMaxAge=mscVrBrTbStpBridgeMaxAge, mscVrBrTbNcFteOperTable=mscVrBrTbNcFteOperTable, mscVrPpTbclStpOperEntry=mscVrPpTbclStpOperEntry, mscVrBrTbStpRootPortName=mscVrBrTbStpRootPortName, mscVrPpSrclAdminStatus=mscVrPpSrclAdminStatus, mscVrBrTbNcFteOperEntry=mscVrBrTbNcFteOperEntry, mscVrPpTbpForwardTransitions=mscVrPpTbpForwardTransitions, mscVrPpSrtBpTbOperTable=mscVrPpSrtBpTbOperTable, mscVrPpTbsgDesignatedCost=mscVrPpTbsgDesignatedCost, mscVrPpFddiETBStpTypeOper=mscVrPpFddiETBStpTypeOper, mscVrPpSrtBpNsIndex=mscVrPpSrtBpNsIndex, mscVrBrOperStatusEntry=mscVrBrOperStatusEntry, mscCBLinkToProtocolPort=mscCBLinkToProtocolPort, mscCBSnmpAdminStatus=mscCBSnmpAdminStatus, mscVrPpSrclBlockingDiscards=mscVrPpSrclBlockingDiscards, mscCB=mscCB, mscVrPpSrBpStpTypeOper=mscVrPpSrBpStpTypeOper, mscVrPpSrsePortName=mscVrPpSrsePortName, mscVrPpSrclExploreFrameTreatment=mscVrPpSrclExploreFrameTreatment, mscVrPpSrsgPortNum=mscVrPpSrsgPortNum, mscVrBrPteBridgeNum=mscVrBrPteBridgeNum, mscVrPpTbsgBridgePortConfig=mscVrPpTbsgBridgePortConfig, mscVrPpFddiETBStpOperTable=mscVrPpFddiETBStpOperTable, mscVrPpSrtBpOperTable=mscVrPpSrtBpOperTable, mscVrPpTbseStateEntry=mscVrPpTbseStateEntry, mscVrBrTbStpBridgeId=mscVrBrTbStpBridgeId, mscVrPpSrBpComponentName=mscVrPpSrBpComponentName, mscVrBrPteInternalLanId=mscVrBrPteInternalLanId, mscVrPpSrBpSteOutFrames=mscVrPpSrBpSteOutFrames, mscVrPpSrtBpPathCostMethod=mscVrPpSrtBpPathCostMethod, mscVrPpTbseDesignatedRoot=mscVrPpTbseDesignatedRoot, mscVrPpSrseServiceClass=mscVrPpSrseServiceClass, mscVrPpFddiETBTinygramFramesIn=mscVrPpFddiETBTinygramFramesIn, mscVrPpSrsePortStateStpControl=mscVrPpSrsePortStateStpControl, mscVrPpSrclStatsEntry=mscVrPpSrclStatsEntry, mscCBStateEntry=mscCBStateEntry, mscVrPpFddiETBConvertArpMacAddress=mscVrPpFddiETBConvertArpMacAddress, mscVrPpTbclStpTypeProv=mscVrPpTbclStpTypeProv, mscVrPpTbsgProvEntry=mscVrPpTbsgProvEntry, mscVrPpSrsgStpOperEntry=mscVrPpSrsgStpOperEntry, mscVrPpSrseDupLanIdOrTreeErrors=mscVrPpSrseDupLanIdOrTreeErrors, mscVrPpSrclApeInFrames=mscVrPpSrclApeInFrames, mscVrBrPteOperEntry=mscVrBrPteOperEntry, mscVrPpTbpNsRowStatusEntry=mscVrPpTbpNsRowStatusEntry, mscVrPpTbseOperationalState=mscVrPpTbseOperationalState, mscVrPpTbpNsComponentName=mscVrPpTbpNsComponentName, mscVrPpTbsgMtuExceededDiscards=mscVrPpTbsgMtuExceededDiscards, mscVrPpSrclStpTypeProv=mscVrPpSrclStpTypeProv, mscVrBrNsIndex=mscVrBrNsIndex, mscVrPpSrseSnmpOperStatus=mscVrPpSrseSnmpOperStatus, mscVrBrSrbStatsEntry=mscVrBrSrbStatsEntry, bridgeCapabilitiesCA02=bridgeCapabilitiesCA02, mscVrPpTbpBridgePortConfig=mscVrPpTbpBridgePortConfig, mscVrPpSrtBpStaticEntryDiscards=mscVrPpSrtBpStaticEntryDiscards, mscVrPpSrBpStpOperTable=mscVrPpSrBpStpOperTable, mscVrPpSrseConvertArpMacAddress=mscVrPpSrseConvertArpMacAddress, mscVrPpSrclDesignatedRoot=mscVrPpSrclDesignatedRoot, mscVrBrNsAteEntryNumberIndex=mscVrBrNsAteEntryNumberIndex, mscVrPpTbclTbOperEntry=mscVrPpTbclTbOperEntry, mscVrPpSrBpDIProvTable=mscVrPpSrBpDIProvTable, mscVrPpTbseTbOperTable=mscVrPpTbseTbOperTable, mscVrPpSrclFragmentIp=mscVrPpSrclFragmentIp, mscVrPpSrseDesignatedBridge=mscVrPpSrseDesignatedBridge, mscVrBrPteStorageType=mscVrBrPteStorageType, mscVrBrSrbStpProvEntry=mscVrBrSrbStpProvEntry, mscCBIndex=mscCBIndex, mscVrPpTbsgTbOperEntry=mscVrPpTbsgTbOperEntry, mscVrPpSrBpAreRdLimit=mscVrPpSrBpAreRdLimit, mscVrPpTbpTinygramFramesOut=mscVrPpTbpTinygramFramesOut, mscVrPpSrclOperStatusEntry=mscVrPpSrclOperStatusEntry, mscVrBrTbNcFteRowStatusTable=mscVrBrTbNcFteRowStatusTable, mscVrPpSrBpNs=mscVrPpSrBpNs, mscVrPpTbclDelayExceededDiscards=mscVrPpTbclDelayExceededDiscards, mscVrPpTbpOperStatusTable=mscVrPpTbpOperStatusTable, mscVrPpTbpNsRowStatus=mscVrPpTbpNsRowStatus, mscVrPpFddiETB=mscVrPpFddiETB, mscVrPpTbpStateTable=mscVrPpTbpStateTable, mscVrPpSrtBpTbProvTable=mscVrPpSrtBpTbProvTable, mscVrPpTbseMtuExceededDiscards=mscVrPpTbseMtuExceededDiscards, mscVrPpTbseBadAbstractDiscards=mscVrPpTbseBadAbstractDiscards, mscVrPpSrsgInFilterDiscards=mscVrPpSrsgInFilterDiscards, mscVrPpSrclDomainNum=mscVrPpSrclDomainNum, mscVrPpFddiETBNsRowStatus=mscVrPpFddiETBNsRowStatus, mscVrPpFddiETBPathCostOper=mscVrPpFddiETBPathCostOper, mscVrBrTbNcFtePort=mscVrBrTbNcFtePort, mscVrBrSrbStpBridgeForwardDelay=mscVrBrSrbStpBridgeForwardDelay, mscCBIfAdminStatus=mscCBIfAdminStatus, mscVrPpSrtBpMtuExceededDiscards=mscVrPpSrtBpMtuExceededDiscards, mscVrBrSrbStpDesignatedRoot=mscVrBrSrbStpDesignatedRoot, mscVrPpTbseAdminState=mscVrPpTbseAdminState, mscVrPpTbclSecureOption=mscVrPpTbclSecureOption, mscVrPpTbsgPreserveDomain=mscVrPpTbsgPreserveDomain, mscVrBrPteStpState=mscVrBrPteStpState, mscVrBrTbFtePeerAddressInfo=mscVrBrTbFtePeerAddressInfo, mscVrPpTbsgStpTypeProv=mscVrPpTbsgStpTypeProv, mscVrBrSrbStpTopologyChangeDetect=mscVrBrSrbStpTopologyChangeDetect, mscVrPpSrsgTinygramFramesOut=mscVrPpSrsgTinygramFramesOut, mscVrPpTbclNsProvEntry=mscVrPpTbclNsProvEntry, mscVrBrNsAteFirstMacAddressMask=mscVrBrNsAteFirstMacAddressMask, mscVrBrTbStpOperEntry=mscVrBrTbStpOperEntry, mscVrPpSrseBridgePortConfig=mscVrPpSrseBridgePortConfig, mscVrBrTbAgingTime=mscVrBrTbAgingTime, mscVrBrTbStpPriority=mscVrBrTbStpPriority, mscVrBrSrbLteTypeOfEntry=mscVrBrSrbLteTypeOfEntry, mscVrPpFddiETBSecureOption=mscVrPpFddiETBSecureOption, mscVrPpTbpPortStateStpControl=mscVrPpTbpPortStateStpControl, mscVrPpSrseLanId=mscVrPpSrseLanId, mscVrPpSrtBpSegmentMismatchDiscards=mscVrPpSrtBpSegmentMismatchDiscards, mscVrPpSrseApeInFrames=mscVrPpSrseApeInFrames, mscVrBrTbStpRowStatusTable=mscVrBrTbStpRowStatusTable, mscVrPpSrtBpTinygramFramesIn=mscVrPpSrtBpTinygramFramesIn, mscVrBrSrbComponentName=mscVrBrSrbComponentName, mscVrBrSrbTotalLanIdTableEntries=mscVrBrSrbTotalLanIdTableEntries, mscVrBrSrbLteRowStatusTable=mscVrBrSrbLteRowStatusTable, mscVrPpTbpOperStatusEntry=mscVrPpTbpOperStatusEntry, mscVrPpSrtBp=mscVrPpSrtBp, mscVrPpFddiETBProvTable=mscVrPpFddiETBProvTable, mscVrBrPtePortPointsTo=mscVrBrPtePortPointsTo, mscPBIfAdminStatus=mscPBIfAdminStatus, mscVrPpSrtBpNsRowStatus=mscVrPpSrtBpNsRowStatus, mscVrPpSrtBpOutFilterDiscards=mscVrPpSrtBpOutFilterDiscards, mscVrPpSrtBpDelayExceededDiscards=mscVrPpSrtBpDelayExceededDiscards, mscVrBrTbNumFtEntriesFree=mscVrBrTbNumFtEntriesFree, mscVrPpFddiETBStateTable=mscVrPpFddiETBStateTable, mscVrPpSrclDupSegmentDiscards=mscVrPpSrclDupSegmentDiscards, mscVrPpTbseTbProvTable=mscVrPpTbseTbProvTable, mscVrPpTbclForwardTransitions=mscVrPpTbclForwardTransitions, mscVrPpFddiETBUsageState=mscVrPpFddiETBUsageState, mscVrPpTbpStpTypeProv=mscVrPpTbpStpTypeProv, mscVrPpTbclBridgePortType=mscVrPpTbclBridgePortType, mscVrPpSrtBpDesignatedBridge=mscVrPpSrtBpDesignatedBridge, mscVrBrTbStpFwdDelay=mscVrBrTbStpFwdDelay, mscVrPpTbsgDomainNum=mscVrPpTbsgDomainNum, mscVrPpSrclConvertArpMacAddress=mscVrPpSrclConvertArpMacAddress, mscVrBrAdminControlTable=mscVrBrAdminControlTable, mscPBLinkToProtocolPort=mscPBLinkToProtocolPort, mscVrPpSrseAdminState=mscVrPpSrseAdminState, mscVrPpTbsgConvertArpMacAddress=mscVrPpTbsgConvertArpMacAddress, mscVrPpSrBpNsRowStatusTable=mscVrPpSrBpNsRowStatusTable, mscVrBrTbStpIndex=mscVrBrTbStpIndex, mscVrBrSrbStpTopologyChanges=mscVrBrSrbStpTopologyChanges, mscVrPpSrBpDomainNum=mscVrPpSrBpDomainNum, mscVrPpTbsgComponentName=mscVrPpTbsgComponentName, mscVrBrTbNcFteStatus=mscVrBrTbNcFteStatus, mscVrPpFddiETBDIProvEntry=mscVrPpFddiETBDIProvEntry, mscVrBrTbSteRowStatusEntry=mscVrBrTbSteRowStatusEntry, mscVrPpSrsgPortPriority=mscVrPpSrsgPortPriority, mscVrPpFddiETBDesignatedBridge=mscVrPpFddiETBDesignatedBridge, mscVrPpSrsePathCost=mscVrPpSrsePathCost, mscVrPpSrsgHopCount=mscVrPpSrsgHopCount, mscVrPpSrBpBridgePortConfig=mscVrPpSrBpBridgePortConfig, mscPBStorageType=mscPBStorageType, mscVrPpSrtBpNsProvEntry=mscVrPpSrtBpNsProvEntry, mscVrPpSrBpTranslateIpx=mscVrPpSrBpTranslateIpx, mscVrPpTbclStatsEntry=mscVrPpTbclStatsEntry, mscVrPpSrtBpPortStateStpControl=mscVrPpSrtBpPortStateStpControl, mscVrPpTbsgInDiscards=mscVrPpTbsgInDiscards, mscPBRowStatus=mscPBRowStatus, mscVrPpSrBpDupLanIdOrTreeErrors=mscVrPpSrBpDupLanIdOrTreeErrors, mscVrPpSrsgRowStatusEntry=mscVrPpSrsgRowStatusEntry, mscVrBrNsAteFirstMacAddress=mscVrBrNsAteFirstMacAddress, mscVrPpTbsgAdminStatus=mscVrPpTbsgAdminStatus, mscVrBrTbStpTimeSinceTopologyChange=mscVrBrTbStpTimeSinceTopologyChange, mscVrPpSrclPortNum=mscVrPpSrclPortNum, mscVrPpSrtBpStpPortState=mscVrPpSrtBpStpPortState, mscVrPpSrseHopCountExceededDiscards=mscVrPpSrseHopCountExceededDiscards, mscVrPpTbpProvTable=mscVrPpTbpProvTable, mscVrPpSrclStorageType=mscVrPpSrclStorageType, mscVrBrTbStatsTable=mscVrBrTbStatsTable, mscVrPpTbclComponentName=mscVrPpTbclComponentName, mscVrPpTbclMaxInfo=mscVrPpTbclMaxInfo, mscVrPpSrseInternalLanId=mscVrPpSrseInternalLanId, mscVrPpSrseApeOutFrames=mscVrPpSrseApeOutFrames, mscVrPpTbseStpProvTable=mscVrPpTbseStpProvTable, mscVrPpSrsgSpecOutFrames=mscVrPpSrsgSpecOutFrames, mscVrPpTbclNsIncomingFilter=mscVrPpTbclNsIncomingFilter, mscVrPpSrsgBridgeNum=mscVrPpSrsgBridgeNum, mscVrPpTbpStaticEntryDiscards=mscVrPpTbpStaticEntryDiscards, mscVrPpTbseUnicastNoMatches=mscVrPpTbseUnicastNoMatches, mscVrPpSrclHopCount=mscVrPpSrclHopCount, mscVrPpSrtBpConvertArpMacAddress=mscVrPpSrtBpConvertArpMacAddress, mscVrPpSrclApeOutFrames=mscVrPpSrclApeOutFrames, mscVrPpSrBpNsIncomingFilter=mscVrPpSrBpNsIncomingFilter, mscVrPpTbseOutFrames=mscVrPpTbseOutFrames, mscVrPpSrsgStpTypeProv=mscVrPpSrsgStpTypeProv, mscVrPpSrsgIfIndex=mscVrPpSrsgIfIndex, mscVrPpTbsgUpTime=mscVrPpTbsgUpTime, mscVrPpSrsgDesignatedRoot=mscVrPpSrsgDesignatedRoot, mscVrPpSrBpBridgePortType=mscVrPpSrBpBridgePortType, mscVrPpSrclNsProvEntry=mscVrPpSrclNsProvEntry, mscVrBrTbStp=mscVrBrTbStp, mscVrPpTbseOperStatusEntry=mscVrPpTbseOperStatusEntry, mscVrPpSrtBpSteSpanMode=mscVrPpSrtBpSteSpanMode, mscVrBrNsAteFilterName=mscVrBrNsAteFilterName, mscVrBrTbStpHoldTime=mscVrBrTbStpHoldTime, mscVrBrPtePortNameIndex=mscVrBrPtePortNameIndex, mscVrPpSrclPortStateStpControl=mscVrPpSrclPortStateStpControl, mscVrBrTbFteRowStatusTable=mscVrBrTbFteRowStatusTable, mscVrPpTbpPathCostOper=mscVrPpTbpPathCostOper, mscVrPpTbpMtuExceededDiscards=mscVrPpTbpMtuExceededDiscards, mscVrPpTbpNsProvTable=mscVrPpTbpNsProvTable, mscVrPpSrclDownTime=mscVrPpSrclDownTime, mscVrBrTbSteAddressIndex=mscVrBrTbSteAddressIndex, mscVrBrSrbLteAgeOfEntry=mscVrBrSrbLteAgeOfEntry, mscVrPpSrsgSrStatsTable=mscVrPpSrsgSrStatsTable, mscVrPpSrseAreRdLimit=mscVrPpSrseAreRdLimit, mscVrPpSrclHopCountExceededDiscards=mscVrPpSrclHopCountExceededDiscards, mscVrPpTbclNsIndex=mscVrPpTbclNsIndex, mscVrBrTbFtePort=mscVrBrTbFtePort, mscVrPpSrBpPathCost=mscVrPpSrBpPathCost, mscVrPpSrclStpPortState=mscVrPpSrclStpPortState, mscVrPpSrBpUsageState=mscVrPpSrBpUsageState, mscVrBrNsStorageType=mscVrBrNsStorageType, mscVrPpTbclStpOperTable=mscVrPpTbclStpOperTable, mscVrBrNumPorts=mscVrBrNumPorts, mscVrBrComponentName=mscVrBrComponentName, mscVrPpFddiETBBridgePortConfig=mscVrPpFddiETBBridgePortConfig, mscVrPpTbpSnmpOperStatus=mscVrPpTbpSnmpOperStatus, mscVrPpTbseTinygramFramesIn=mscVrPpTbseTinygramFramesIn, mscVrPpTbsgOperTable=mscVrPpTbsgOperTable, mscVrPpTbsePreserveDomain=mscVrPpTbsePreserveDomain, mscVrBrNsRowStatusTable=mscVrBrNsRowStatusTable, mscVrPpFddiETBOperStatusEntry=mscVrPpFddiETBOperStatusEntry, mscVrBrStorageType=mscVrBrStorageType, mscVrBrSrbStpBridgeId=mscVrBrSrbStpBridgeId, mscVrPpTbsgDIProvEntry=mscVrPpTbsgDIProvEntry, mscVrPpTbclPortStateStpControl=mscVrPpTbclPortStateStpControl, mscVrPpSrsgPathCost=mscVrPpSrsgPathCost, mscVrPpSrBpNsRowStatus=mscVrPpSrBpNsRowStatus, mscVrBrPteSpOperEntry=mscVrBrPteSpOperEntry, mscVrBrSrbStpMaxAge=mscVrBrSrbStpMaxAge, mscVrPpSrsgStaticDiscards=mscVrPpSrsgStaticDiscards, mscVrPpTbpSecureOption=mscVrPpTbpSecureOption, mscCBAdminControlEntry=mscCBAdminControlEntry, mscVrPpSrtBpOperEntry=mscVrPpSrtBpOperEntry, mscVrPpTbpTbOperEntry=mscVrPpTbpTbOperEntry, mscVrPpTbpStpProvEntry=mscVrPpTbpStpProvEntry)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BridgeMIB", mscVrPpTbpDynamicEntryDiscards=mscVrPpTbpDynamicEntryDiscards, mscVrPpTbseMaxInfo=mscVrPpTbseMaxInfo, mscVrPpSrBpFragmentIp=mscVrPpSrBpFragmentIp, mscVrPpTbpPathCostMethod=mscVrPpTbpPathCostMethod, mscVrPpSrseDIProvEntry=mscVrPpSrseDIProvEntry, mscVrPpSrtBpComponentName=mscVrPpSrtBpComponentName, mscVrPpTbpRowStatus=mscVrPpTbpRowStatus, mscVrPpTbpTbOperTable=mscVrPpTbpTbOperTable, mscVrPpTbclUpTime=mscVrPpTbclUpTime, mscVrBrTbStpRowStatusEntry=mscVrBrTbStpRowStatusEntry, mscVrBrTbNcFteAgeOfEntry=mscVrBrTbNcFteAgeOfEntry, mscVrPpSrtBpUsageState=mscVrPpSrtBpUsageState, mscVrPpSrBpSrStatsEntry=mscVrPpSrBpSrStatsEntry, mscVrBrTbStpComponentName=mscVrBrTbStpComponentName, mscVrPpTbclNsComponentName=mscVrPpTbclNsComponentName, mscVrPpFddiETBInFilterDiscards=mscVrPpFddiETBInFilterDiscards, mscVrPpFddiETBBadAbstractDiscards=mscVrPpFddiETBBadAbstractDiscards, mscVrPpSrBpSpecInFrames=mscVrPpSrBpSpecInFrames, mscVrBrSrbStpBridgeMaxAge=mscVrBrSrbStpBridgeMaxAge, mscVrPpSrseStpOperEntry=mscVrPpSrseStpOperEntry, mscVrPpFddiETBBridgingMode=mscVrPpFddiETBBridgingMode, mscVrBrTbSteStatus=mscVrBrTbSteStatus, mscVrPpTbpUnicastNoMatches=mscVrPpTbpUnicastNoMatches, mscVrPpSrseFragmentIp=mscVrPpSrseFragmentIp, mscVrPpSrsePortPriority=mscVrPpSrsePortPriority, mscVrPpSrtBpApeInFrames=mscVrPpSrtBpApeInFrames, mscVrPpTbsgForwardTransitions=mscVrPpTbsgForwardTransitions, mscCBOperEntry=mscCBOperEntry, mscPBIfEntryEntry=mscPBIfEntryEntry, mscVrBrNsProvTable=mscVrBrNsProvTable, mscVrPpSrclComponentName=mscVrPpSrclComponentName, mscVrPpFddiETBStatsTable=mscVrPpFddiETBStatsTable, mscVrPpFddiETBPortNum=mscVrPpFddiETBPortNum, mscPBStateEntry=mscPBStateEntry, mscVrPpSrtBpTbProvEntry=mscVrPpSrtBpTbProvEntry, mscVrPpSrtBpLargestFrame=mscVrPpSrtBpLargestFrame, mscVrPpSrtBpStaticDiscards=mscVrPpSrtBpStaticDiscards, mscVrPpTbseDIProvEntry=mscVrPpTbseDIProvEntry, mscVrPpTbsgIndex=mscVrPpTbsgIndex, mscVrPpSrclStaticDiscards=mscVrPpSrclStaticDiscards, mscCBRowStatusEntry=mscCBRowStatusEntry, mscVrPpTbsgPortName=mscVrPpTbsgPortName, mscVrBrTbLearnedEntryDiscards=mscVrBrTbLearnedEntryDiscards, mscVrPpSrsgUpTime=mscVrPpSrsgUpTime, mscVrPpSrclStpTypeOper=mscVrPpSrclStpTypeOper, mscCBIfIndex=mscCBIfIndex, mscVrBrPteRowStatusTable=mscVrBrPteRowStatusTable, mscVrPpTbp=mscVrPpTbp, mscVrPpSrsePreserveDomain=mscVrPpSrsePreserveDomain, mscVrBrTbFteOperTable=mscVrBrTbFteOperTable, mscVrPpSrsgDesignatedPort=mscVrPpSrsgDesignatedPort, mscVrPpTbseDynamicEntryDiscards=mscVrPpTbseDynamicEntryDiscards, mscVrBrTbStpTopologyChangeDetect=mscVrBrTbStpTopologyChangeDetect, mscVrPpFddiETBBadVerifyDiscards=mscVrPpFddiETBBadVerifyDiscards, mscVrPpTbclOutFilterDiscards=mscVrPpTbclOutFilterDiscards, mscVrPpSrclOperStatusTable=mscVrPpSrclOperStatusTable, mscVrPpTbpBadVerifyDiscards=mscVrPpTbpBadVerifyDiscards, mscVrPpSrsgDupLanIdOrTreeErrors=mscVrPpSrsgDupLanIdOrTreeErrors, mscVrPpSrclBridgePortType=mscVrPpSrclBridgePortType, mscVrPpSrtBpFragmentIp=mscVrPpSrtBpFragmentIp, mscVrBrStateEntry=mscVrBrStateEntry, mscVrPpSrtBpTbOperEntry=mscVrPpSrtBpTbOperEntry, mscVrPpTbpDelayExceededDiscards=mscVrPpTbpDelayExceededDiscards, mscVrBr=mscVrBr, mscVrPpSrclSrProvEntry=mscVrPpSrclSrProvEntry, mscVrBrTbRowStatusTable=mscVrBrTbRowStatusTable, mscPBAdminControlTable=mscPBAdminControlTable, mscPBRowStatusEntry=mscPBRowStatusEntry, bridgeGroup=bridgeGroup, mscVrPpFddiETBOutFrames=mscVrPpFddiETBOutFrames, mscVrBrTb=mscVrBrTb, mscVrPpTbclNsRowStatusTable=mscVrPpTbclNsRowStatusTable, mscVrBrPteRowStatus=mscVrBrPteRowStatus, mscVrPpSrseDownTime=mscVrPpSrseDownTime, mscVrPpSrseAdminStatus=mscVrPpSrseAdminStatus, mscVrBrTbFte=mscVrBrTbFte, mscVrPpTbpTranslateIpx=mscVrPpTbpTranslateIpx, mscVrPpTbsgRowStatus=mscVrPpTbsgRowStatus, mscVrPpSrtBpSpecInFrames=mscVrPpSrtBpSpecInFrames, mscVrPpSrseRowStatus=mscVrPpSrseRowStatus, mscVrBrPteFilterPoints=mscVrBrPteFilterPoints, mscVrPpTbclDesignatedRoot=mscVrPpTbclDesignatedRoot, mscVrPpSrBpBridgeNum=mscVrPpSrBpBridgeNum, mscVrPpSrtBpStpOperEntry=mscVrPpSrtBpStpOperEntry, mscVrPpTbclNsProvTable=mscVrPpTbclNsProvTable, mscVrPpSrsgSrProvEntry=mscVrPpSrsgSrProvEntry, mscCBOperStatusEntry=mscCBOperStatusEntry, mscVrPpSrclSrStatsEntry=mscVrPpSrclSrStatsEntry, mscVrBrPteComponentName=mscVrBrPteComponentName, mscVrPpTbsgDesignatedPort=mscVrPpTbsgDesignatedPort, mscVrPpTbclInFilterDiscards=mscVrPpTbclInFilterDiscards, mscVrPpSrseDynamicDiscards=mscVrPpSrseDynamicDiscards, mscVrPpTbsgInFilterDiscards=mscVrPpTbsgInFilterDiscards, mscVrPpTbclOperEntry=mscVrPpTbclOperEntry, mscVrPpTbpStpOperTable=mscVrPpTbpStpOperTable, mscVrPpSrBpBlockingDiscards=mscVrPpSrBpBlockingDiscards, mscVrPpFddiETBDesignatedPort=mscVrPpFddiETBDesignatedPort, mscVrPpTbpStpProvTable=mscVrPpTbpStpProvTable, mscVrPpSrsgOperStatusEntry=mscVrPpSrsgOperStatusEntry, mscVrPpSrclForwardTransitions=mscVrPpSrclForwardTransitions, mscVrPpSrclDynamicDiscards=mscVrPpSrclDynamicDiscards, mscVrPpSrseSpecOutFrames=mscVrPpSrseSpecOutFrames, mscVrPpTbseDomainNum=mscVrPpTbseDomainNum, mscVrPpFddiETBTranslateIpx=mscVrPpFddiETBTranslateIpx, mscVrPpTbsgLearningDiscards=mscVrPpTbsgLearningDiscards, mscVrPpSrseProvEntry=mscVrPpSrseProvEntry, mscVrBrNsAteProvTable=mscVrBrNsAteProvTable, mscVrBrSrbLanIdTableNumEntries=mscVrBrSrbLanIdTableNumEntries, mscVrPpTbclInDiscards=mscVrPpTbclInDiscards, mscPBOperationalState=mscPBOperationalState, mscVrPpSrsgPathCostMethod=mscVrPpSrsgPathCostMethod, mscVrBrAdminControlEntry=mscVrBrAdminControlEntry, mscVrPpFddiETBPortName=mscVrPpFddiETBPortName, mscVrPpTbclTranslateIpx=mscVrPpTbclTranslateIpx, mscVrPpSrclSteOutFrames=mscVrPpSrclSteOutFrames, mscVrPpFddiETBPathCostMethod=mscVrPpFddiETBPathCostMethod, mscVrPpSrtBpLanId=mscVrPpSrtBpLanId, mscVrPpSrclDesignatedPort=mscVrPpSrclDesignatedPort, mscVrPpTbsgSnmpOperStatus=mscVrPpTbsgSnmpOperStatus, mscVrPpTbclTinygramFramesOut=mscVrPpTbclTinygramFramesOut, mscVrPpSrclRowStatusTable=mscVrPpSrclRowStatusTable, mscVrPpSrBpInternalLanId=mscVrPpSrBpInternalLanId, mscPBIfIndex=mscPBIfIndex, mscVrPpTbpAdminState=mscVrPpTbpAdminState, mscVrPpTbpNsProvEntry=mscVrPpTbpNsProvEntry, mscVrBrSrbRowStatus=mscVrBrSrbRowStatus, mscVrPpTbclBadVerifyDiscards=mscVrPpTbclBadVerifyDiscards, mscVrPpFddiETBNsProvTable=mscVrPpFddiETBNsProvTable, mscVrPpTbclRowStatusTable=mscVrPpTbclRowStatusTable, mscVrPpTbclMtuExceededDiscards=mscVrPpTbclMtuExceededDiscards, mscVrPpTbsgStateTable=mscVrPpTbsgStateTable, mscVrPpSrsgStateTable=mscVrPpSrsgStateTable, mscVrBrTbStpOperTable=mscVrBrTbStpOperTable, mscVrBrSrbAgingTime=mscVrBrSrbAgingTime, mscVrPpTbclTinygramFramesIn=mscVrPpTbclTinygramFramesIn, mscVrPpSrtBpBridgeNum=mscVrPpSrtBpBridgeNum, mscVrPpTbseOperTable=mscVrPpTbseOperTable, mscVrPpTbclBridgePortConfig=mscVrPpTbclBridgePortConfig, mscVrPpSrtBpAdminState=mscVrPpSrtBpAdminState, mscVrPpSrclOperTable=mscVrPpSrclOperTable, mscVrPpSrclNsRowStatusTable=mscVrPpSrclNsRowStatusTable, bridgeCapabilitiesCA=bridgeCapabilitiesCA, mscVrPpSrseSteOutFrames=mscVrPpSrseSteOutFrames, mscVrBrPteOperTable=mscVrBrPteOperTable, mscVrPpTbpProvEntry=mscVrPpTbpProvEntry, mscVrBrSrbStpFwdDelay=mscVrBrSrbStpFwdDelay, mscVrPpSrseTinygramFramesIn=mscVrPpSrseTinygramFramesIn, mscVrBrAdminState=mscVrBrAdminState, mscVrPpTbsgUsageState=mscVrPpTbsgUsageState, mscVrPpTbseRowStatusEntry=mscVrPpTbseRowStatusEntry, mscVrPpTbpDownTime=mscVrPpTbpDownTime, mscVrPpTbsgOperEntry=mscVrPpTbsgOperEntry, mscVrPpTbsgInFrames=mscVrPpTbsgInFrames, mscVrPpSrclMtuExceededDiscards=mscVrPpSrclMtuExceededDiscards, mscVrPpTbseTinygramFramesOut=mscVrPpTbseTinygramFramesOut, mscCBIfEntryTable=mscCBIfEntryTable, mscVrPpSrsePathCostOper=mscVrPpSrsePathCostOper, mscVrPpTbseBridgePortConfig=mscVrPpTbseBridgePortConfig, mscVrPpSrsgUsageState=mscVrPpSrsgUsageState, mscVrBrNsAteDirection=mscVrBrNsAteDirection, mscVrBrTbStpAgingTimeOper=mscVrBrTbStpAgingTimeOper, mscVrBrTbNcFte=mscVrBrTbNcFte, mscCBComponentName=mscCBComponentName, mscVrPpSrtBpIfIndex=mscVrPpSrtBpIfIndex, mscVrPpTbsgStatsEntry=mscVrPpTbsgStatsEntry, mscVrPpSrseStatsEntry=mscVrPpSrseStatsEntry, mscVrPpSrclNsStorageType=mscVrPpSrclNsStorageType, mscVrPpTbclStpPortState=mscVrPpTbclStpPortState, mscVrPpSrBpSrStatsTable=mscVrPpSrBpSrStatsTable, mscVrPpSrBpInFilterDiscards=mscVrPpSrBpInFilterDiscards, mscVrPpSrtBpSpecOutFrames=mscVrPpSrtBpSpecOutFrames, mscVrPpTbsgPortStateStpControl=mscVrPpTbsgPortStateStpControl, mscVrBrPteMacType=mscVrBrPteMacType, mscVrPpTbclPortPriority=mscVrPpTbclPortPriority, mscVrBrTbNcFteDomainNumIndex=mscVrBrTbNcFteDomainNumIndex, mscVrPpTbclPathCost=mscVrPpTbclPathCost, mscVrPpTbpStpPortState=mscVrPpTbpStpPortState, mscVrPpSrBpStateEntry=mscVrPpSrBpStateEntry, mscVrPpSrtBpDIProvEntry=mscVrPpSrtBpDIProvEntry, mscVrPpSrseOperEntry=mscVrPpSrseOperEntry, mscVrBrSrbLteStorageType=mscVrBrSrbLteStorageType, mscVrPpTbpPortPriority=mscVrPpTbpPortPriority, mscVrPpSrseStatsTable=mscVrPpSrseStatsTable, mscVrPpFddiETBAdminStatus=mscVrPpFddiETBAdminStatus, mscVrPpSrtBpNsProvTable=mscVrPpSrtBpNsProvTable, mscVrBrTbRowStatus=mscVrBrTbRowStatus, mscVrBrTbIndex=mscVrBrTbIndex, mscCBStorageType=mscCBStorageType, mscVrPpTbclUnicastNoMatches=mscVrPpTbclUnicastNoMatches, mscPBStateTable=mscPBStateTable, mscVrPpTbpOperTable=mscVrPpTbpOperTable, mscVrBrTbNumFtEntriesDenied=mscVrBrTbNumFtEntriesDenied, mscVrBrTbStpMaxAge=mscVrBrTbStpMaxAge, mscVrPpSrseDomainNum=mscVrPpSrseDomainNum, mscVrPpTbseStpPortState=mscVrPpTbseStpPortState, mscVrPpSrtBpInFrames=mscVrPpSrtBpInFrames, mscCBMpTable=mscCBMpTable, mscVrPpSrBpStpProvTable=mscVrPpSrBpStpProvTable, mscVrPpFddiETBStpPortState=mscVrPpFddiETBStpPortState, mscVrPpSrtBpStorageType=mscVrPpSrtBpStorageType, mscVrPpTbsgStatsTable=mscVrPpTbsgStatsTable, mscVrBrTbSteStorageType=mscVrBrTbSteStorageType, mscVrPpSrBpOperTable=mscVrPpSrBpOperTable, mscVrPpSrseIndex=mscVrPpSrseIndex, mscVrPpTbpBridgePortType=mscVrPpTbpBridgePortType, mscVrPpSrBpApeInFrames=mscVrPpSrBpApeInFrames, mscVrPpFddiETBDomainNum=mscVrPpFddiETBDomainNum, mscVrPpSrBpNsProvEntry=mscVrPpSrBpNsProvEntry, mscVrPpSrsgApeOutFrames=mscVrPpSrsgApeOutFrames, mscVrPpTbclStpProvTable=mscVrPpTbclStpProvTable, mscVrPpTbpStpOperEntry=mscVrPpTbpStpOperEntry, mscVrPpTbclTbProvEntry=mscVrPpTbclTbProvEntry, mscVrPpSrtBpStpTypeProv=mscVrPpSrtBpStpTypeProv, mscVrPpSrtBpInternalLanId=mscVrPpSrtBpInternalLanId, mscVrPpTbpMaxInfo=mscVrPpTbpMaxInfo, mscVrPpSrsgTranslateIpx=mscVrPpSrsgTranslateIpx, mscVrPpTbseBadVerifyDiscards=mscVrPpTbseBadVerifyDiscards, mscVrPpSrtBpBadAbstractDiscards=mscVrPpSrtBpBadAbstractDiscards, mscVrPpTbsgTinygramFramesOut=mscVrPpTbsgTinygramFramesOut, mscPBIndex=mscPBIndex, mscCBStateTable=mscCBStateTable, mscVrPpSrsgDesignatedCost=mscVrPpSrsgDesignatedCost, mscVrPpSrtBpSrStatsEntry=mscVrPpSrtBpSrStatsEntry, mscVrBrSrbStpPriority=mscVrBrSrbStpPriority, mscVrBrOperStatusTable=mscVrBrOperStatusTable, mscVrBrSrbLtePortName=mscVrBrSrbLtePortName, mscCBRowStatus=mscCBRowStatus, mscVrPpSrseSpecInFrames=mscVrPpSrseSpecInFrames, mscVrPpSrsgPortName=mscVrPpSrsgPortName, mscVrPpSrclSrStatsTable=mscVrPpSrclSrStatsTable, mscVrBrTbSteAtgtTable=mscVrBrTbSteAtgtTable, mscVrPpTbclStpProvEntry=mscVrPpTbclStpProvEntry, mscVrPpSrclProvTable=mscVrPpSrclProvTable, mscVrPpFddiETBStorageType=mscVrPpFddiETBStorageType, mscVrPpFddiETBPathCost=mscVrPpFddiETBPathCost, mscVrPpSrseStateEntry=mscVrPpSrseStateEntry, mscVrPpSrseOutFilterDiscards=mscVrPpSrseOutFilterDiscards, mscVrPpSrclLanId=mscVrPpSrclLanId, mscVrPpTbclUsageState=mscVrPpTbclUsageState, mscVrPpSrtBpSnmpOperStatus=mscVrPpSrtBpSnmpOperStatus, mscVrPpSrseBlockingDiscards=mscVrPpSrseBlockingDiscards, mscVrPpFddiETBNsIncomingFilter=mscVrPpFddiETBNsIncomingFilter, mscVrPpTbseSnmpOperStatus=mscVrPpTbseSnmpOperStatus, mscVrPpSrBpNsOutgoingFilter=mscVrPpSrBpNsOutgoingFilter, mscVrPpTbpRowStatusEntry=mscVrPpTbpRowStatusEntry, mscVrPpSrtBpUpTime=mscVrPpSrtBpUpTime, mscVrPpTbseBlockingDiscards=mscVrPpTbseBlockingDiscards, mscVrBrTbStatsEntry=mscVrBrTbStatsEntry, mscVrPpTbsgBlockingDiscards=mscVrPpTbsgBlockingDiscards, mscVrPpSrBpStatsEntry=mscVrPpSrBpStatsEntry, mscVrPpSrclNsOutgoingFilter=mscVrPpSrclNsOutgoingFilter, mscVrPpTbclDesignatedCost=mscVrPpTbclDesignatedCost, mscVrPpTbseRowStatusTable=mscVrPpTbseRowStatusTable, mscVrPpTbclAdminStatus=mscVrPpTbclAdminStatus)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BridgeMIB", mscVrPpSrtBpPathCostOper=mscVrPpSrtBpPathCostOper, mscVrPpSrclUpTime=mscVrPpSrclUpTime, mscVrPpTbclPortName=mscVrPpTbclPortName, mscVrPpTbseBridgePortType=mscVrPpTbseBridgePortType, mscVrBrSrbLteOperEntry=mscVrBrSrbLteOperEntry, mscVrPpSrtBpBridgePortType=mscVrPpSrtBpBridgePortType, mscVrPpSrseStorageType=mscVrPpSrseStorageType, mscVrPpTbcl=mscVrPpTbcl, mscVrPpTbsgDelayExceededDiscards=mscVrPpTbsgDelayExceededDiscards, mscVrPpFddiETBDynamicEntryDiscards=mscVrPpFddiETBDynamicEntryDiscards, mscVrPpTbclNsOutgoingFilter=mscVrPpTbclNsOutgoingFilter, mscPBMpEntry=mscPBMpEntry, mscVrPpFddiETBMaxInfo=mscVrPpFddiETBMaxInfo, mscVrPpTbpDIProvEntry=mscVrPpTbpDIProvEntry, mscVrPpSrBpSteSpanMode=mscVrPpSrBpSteSpanMode, mscVrPpFddiETBOperEntry=mscVrPpFddiETBOperEntry, mscVrPpSrBpSpecOutFrames=mscVrPpSrBpSpecOutFrames, mscVrPpTbseStatsEntry=mscVrPpTbseStatsEntry, mscVrBrTbNcFteRowStatusEntry=mscVrBrTbNcFteRowStatusEntry, mscVrPpTbsePathCost=mscVrPpTbsePathCost, mscVrPpSrclDIProvEntry=mscVrPpSrclDIProvEntry, mscVrPpSrsgDesignatedBridge=mscVrPpSrsgDesignatedBridge, mscVrPpTbsgOperStatusTable=mscVrPpTbsgOperStatusTable, mscVrBrPteModeIndex=mscVrBrPteModeIndex, mscVrPpTbsgTbProvEntry=mscVrPpTbsgTbProvEntry, mscVrPpFddiETBPortPriority=mscVrPpFddiETBPortPriority, mscVrPpTbpFragmentIp=mscVrPpTbpFragmentIp, mscVrPpSrsg=mscVrPpSrsg, mscVrPpTbclPathCostOper=mscVrPpTbclPathCostOper, mscVrPpTbpTbProvTable=mscVrPpTbpTbProvTable, mscVrPpTbpDesignatedPort=mscVrPpTbpDesignatedPort, mscVrPpSrBpIfIndex=mscVrPpSrBpIfIndex, mscVrPpTbseDesignatedBridge=mscVrPpTbseDesignatedBridge, mscVrBrNsAteRowStatusTable=mscVrBrNsAteRowStatusTable, mscVrBrSrbStpBridgeHelloTime=mscVrBrSrbStpBridgeHelloTime, mscVrPpTbseAdminStatus=mscVrPpTbseAdminStatus, mscVrPpSrtBpRowStatusTable=mscVrPpSrtBpRowStatusTable, mscVrPpTbsgRowStatusEntry=mscVrPpTbsgRowStatusEntry, mscPB=mscPB, mscVrPpSrsgLanIdMismatches=mscVrPpSrsgLanIdMismatches, bridgeCapabilitiesCA02A=bridgeCapabilitiesCA02A, mscVrBrSrbStpHelloTime=mscVrBrSrbStpHelloTime, mscVrBrSnmpOperStatus=mscVrBrSnmpOperStatus, mscVrPpTbsgStpTypeOper=mscVrPpTbsgStpTypeOper, mscVrBrSrbStpAgingTimeOper=mscVrBrSrbStpAgingTimeOper, mscVrBrTbStpRowStatus=mscVrBrTbStpRowStatus, mscVrPpSrclSteSpanMode=mscVrPpSrclSteSpanMode, mscVrPpSrtBpAdminStatus=mscVrPpSrtBpAdminStatus, mscVrBrRowStatus=mscVrBrRowStatus, mscVrPpSrBpStpPortState=mscVrPpSrBpStpPortState, mscVrPpSrsgDIProvTable=mscVrPpSrsgDIProvTable, mscVrPpTbclProvTable=mscVrPpTbclProvTable, mscVrPpFddiETBInFrames=mscVrPpFddiETBInFrames, mscVrPpSrclNsComponentName=mscVrPpSrclNsComponentName, mscVrPpTbpIfIndex=mscVrPpTbpIfIndex, mscVrBrSrbProvTable=mscVrBrSrbProvTable, bridgeCapabilities=bridgeCapabilities, mscVrPpTbseTbOperEntry=mscVrPpTbseTbOperEntry, mscVrBrSrbProvEntry=mscVrBrSrbProvEntry, mscVrPpSrclSrProvTable=mscVrPpSrclSrProvTable, mscVrBrNsAteComponentName=mscVrBrNsAteComponentName, mscVrPpSrBpLargestFrame=mscVrPpSrBpLargestFrame, mscVrBrTbSteAtgtValue=mscVrBrTbSteAtgtValue, mscVrPpTbseProvEntry=mscVrPpTbseProvEntry, mscVrPpTbpDomainNum=mscVrPpTbpDomainNum, mscVrBrSrbLtePeerMACAddress=mscVrBrSrbLtePeerMACAddress, mscVrPpSrsgProvTable=mscVrPpSrsgProvTable, mscVrPpTbclPathCostMethod=mscVrPpTbclPathCostMethod, mscVrPpTbpComponentName=mscVrPpTbpComponentName, mscVrPpSrBpTinygramFramesOut=mscVrPpSrBpTinygramFramesOut, mscVrPpTbsePortStateStpControl=mscVrPpTbsePortStateStpControl, mscVrPpSrtBpBlockingDiscards=mscVrPpSrtBpBlockingDiscards, mscVrPpSrclBridgeNum=mscVrPpSrclBridgeNum, mscVrBrTbStpProvEntry=mscVrBrTbStpProvEntry, mscVrBrTbFteOperEntry=mscVrBrTbFteOperEntry, mscVrPpTbclStateEntry=mscVrPpTbclStateEntry, mscVrPpSrBpRowStatus=mscVrPpSrBpRowStatus, mscVrPpSrsgPathCostOper=mscVrPpSrsgPathCostOper, mscVrPpSrBpSteInFrames=mscVrPpSrBpSteInFrames, mscVrPpSrtBpSteRdLimit=mscVrPpSrtBpSteRdLimit, mscVrPpSrBpSrProvEntry=mscVrPpSrBpSrProvEntry, mscVrBrTbSteRowStatus=mscVrBrTbSteRowStatus, mscVrPpTbclDownTime=mscVrPpTbclDownTime, mscVrPpSrtBpStpProvEntry=mscVrPpSrtBpStpProvEntry, mscVrPpFddiETBNsProvEntry=mscVrPpFddiETBNsProvEntry, mscVrPpTbclDesignatedPort=mscVrPpTbclDesignatedPort, mscVrPpSrsgApeInFrames=mscVrPpSrsgApeInFrames, mscVrPpSrtBpTranslateIpx=mscVrPpSrtBpTranslateIpx, mscVrPpSrBpDIProvEntry=mscVrPpSrBpDIProvEntry, mscVrBrTbFteRowStatusEntry=mscVrBrTbFteRowStatusEntry, mscVrBrTbFteRowStatus=mscVrBrTbFteRowStatus, mscVrPpSrtBpDesignatedCost=mscVrPpSrtBpDesignatedCost, mscVrPpSrtBpNsComponentName=mscVrPpSrtBpNsComponentName, mscVrPpSrseMtuExceededDiscards=mscVrPpSrseMtuExceededDiscards, mscVrBrTbFteStatus=mscVrBrTbFteStatus, mscVrPpTbsgBadAbstractDiscards=mscVrPpTbsgBadAbstractDiscards, mscVrPpTbclStateTable=mscVrPpTbclStateTable, mscVrPpSrtBpPortNum=mscVrPpSrtBpPortNum, mscVrPpSrclPathCost=mscVrPpSrclPathCost, mscVrPpTbpStatsEntry=mscVrPpTbpStatsEntry, mscVrPpSrBpDupSegmentDiscards=mscVrPpSrBpDupSegmentDiscards, mscVrPpSrsgBridgePortType=mscVrPpSrsgBridgePortType, mscVrPpSrtBpPortName=mscVrPpSrtBpPortName, mscVrPpTbseIndex=mscVrPpTbseIndex, mscVrPpSrtBpOutFrames=mscVrPpSrtBpOutFrames, mscVrPpSrtBpStpOperTable=mscVrPpSrtBpStpOperTable, mscVrBrSrbStpRootCost=mscVrBrSrbStpRootCost, mscVrPpSrtBpSecureOption=mscVrPpSrtBpSecureOption, mscVrPpTbsePortNum=mscVrPpTbsePortNum, mscVrPpSrsgDIProvEntry=mscVrPpSrsgDIProvEntry, mscVrBrOperTable=mscVrBrOperTable, mscVrPpSrtBpPathCost=mscVrPpSrtBpPathCost, mscVrBrNsAteProvEntry=mscVrBrNsAteProvEntry, mscVrPpSrsgBridgingMode=mscVrPpSrsgBridgingMode, mscVrBrSrbLteOperTable=mscVrBrSrbLteOperTable, mscVrPpFddiETBNs=mscVrPpFddiETBNs, mscVrPpTbseUsageState=mscVrPpTbseUsageState, mscVrPpSrseInFilterDiscards=mscVrPpSrseInFilterDiscards, mscVrPpFddiETBStpOperEntry=mscVrPpFddiETBStpOperEntry, mscVrPpFddiETBNsOutgoingFilter=mscVrPpFddiETBNsOutgoingFilter, mscVrPpSrtBpMaxInfo=mscVrPpSrtBpMaxInfo, mscVrPpSrseSteRdLimit=mscVrPpSrseSteRdLimit, mscVrPpSrsgForwardTransitions=mscVrPpSrsgForwardTransitions, mscVrPpTbsgStateEntry=mscVrPpTbsgStateEntry, mscVrPpSrclDelayExceededDiscards=mscVrPpSrclDelayExceededDiscards, mscVrPpSrclStpOperTable=mscVrPpSrclStpOperTable, mscVrPpFddiETBForwardTransitions=mscVrPpFddiETBForwardTransitions, mscVrPpSrsgDupSegmentDiscards=mscVrPpSrsgDupSegmentDiscards, mscVrPpTbsgDownTime=mscVrPpTbsgDownTime, mscVrPpFddiETBComponentName=mscVrPpFddiETBComponentName, mscVrBrRowStatusTable=mscVrBrRowStatusTable, mscVrBrNsProvEntry=mscVrBrNsProvEntry, mscVrPpTbseDownTime=mscVrPpTbseDownTime, mscVrPpSrBpPortPriority=mscVrPpSrBpPortPriority, mscVrPpSrsgInternalLanId=mscVrPpSrsgInternalLanId, mscVrPpSrseRowStatusTable=mscVrPpSrseRowStatusTable, mscVrPpTbpAdminStatus=mscVrPpTbpAdminStatus, mscVrPpTbpPortName=mscVrPpTbpPortName, mscCBAdminState=mscCBAdminState, mscVrPpSrseLargestFrame=mscVrPpSrseLargestFrame, mscVrBrTbNcFteAddressIndex=mscVrBrTbNcFteAddressIndex, mscVrPpSrclNsRowStatus=mscVrPpSrclNsRowStatus, mscVrPpTbclProvEntry=mscVrPpTbclProvEntry, mscVrPpTbseStpProvEntry=mscVrPpTbseStpProvEntry, mscVrPpSrBpStpOperEntry=mscVrPpSrBpStpOperEntry, mscVrPpSrclUsageState=mscVrPpSrclUsageState, mscVrPpSrtBpDynamicEntryDiscards=mscVrPpSrtBpDynamicEntryDiscards, mscVrPpSrsgOperEntry=mscVrPpSrsgOperEntry, mscVrPpSrclSnmpOperStatus=mscVrPpSrclSnmpOperStatus, mscVrBrNsRowStatusEntry=mscVrBrNsRowStatusEntry, mscVrPpSrseBridgeNum=mscVrPpSrseBridgeNum, mscVrPpSrtBpDIProvTable=mscVrPpSrtBpDIProvTable, mscVrPpSrsgConvertArpMacAddress=mscVrPpSrsgConvertArpMacAddress, mscVrPpTbsgMaxInfo=mscVrPpTbsgMaxInfo, mscVrPpSrclRowStatus=mscVrPpSrclRowStatus, mscVrPpSrseComponentName=mscVrPpSrseComponentName, mscVrPpTbpPathCost=mscVrPpTbpPathCost, mscVrPpTbclBadAbstractDiscards=mscVrPpTbclBadAbstractDiscards, mscVrPpSrclPathCostMethod=mscVrPpSrclPathCostMethod, mscVrBrTbProvTable=mscVrBrTbProvTable, mscVrPpTbsgStpOperEntry=mscVrPpTbsgStpOperEntry, mscVrPpSrsgHopCountExceededDiscards=mscVrPpSrsgHopCountExceededDiscards, mscVrBrSrbStatsTable=mscVrBrSrbStatsTable, mscVrBrTbFteAddressIndex=mscVrBrTbFteAddressIndex, mscVrBrTbNcFtePeerAddressInfo=mscVrBrTbNcFtePeerAddressInfo, mscPBRowStatusTable=mscPBRowStatusTable, mscVrPpSrtBpServiceClass=mscVrPpSrtBpServiceClass, mscVrPpSrtBpStpTypeOper=mscVrPpSrtBpStpTypeOper, mscVrPpSrtBpTinygramFramesOut=mscVrPpSrtBpTinygramFramesOut, mscVrBrAdminStatus=mscVrBrAdminStatus, mscVrBrOperEntry=mscVrBrOperEntry, mscVrPpSrclProvEntry=mscVrPpSrclProvEntry, mscVrPpTbclPreserveDomain=mscVrPpTbclPreserveDomain, mscVrPpSrBpAdminStatus=mscVrPpSrBpAdminStatus, mscCBIfEntryEntry=mscCBIfEntryEntry, mscVrPpFddiETBStatsEntry=mscVrPpFddiETBStatsEntry, mscVrPpSrtBpSteOutFrames=mscVrPpSrtBpSteOutFrames, mscVrPpFddiETBIfIndex=mscVrPpFddiETBIfIndex, mscPBUsageState=mscPBUsageState, mscVrPpSrtBpProvEntry=mscVrPpSrtBpProvEntry, mscVrPpSrseForwardTransitions=mscVrPpSrseForwardTransitions, mscVrPpTbpNsStorageType=mscVrPpTbpNsStorageType, mscVrPpFddiETBAdminState=mscVrPpFddiETBAdminState, mscVrPpSrseStpProvTable=mscVrPpSrseStpProvTable, mscVrPpSrseDesignatedPort=mscVrPpSrseDesignatedPort, mscVrPpTbclTbProvTable=mscVrPpTbclTbProvTable, mscVrPpFddiETBUnicastNoMatches=mscVrPpFddiETBUnicastNoMatches, mscVrPpTbseStpOperEntry=mscVrPpTbseStpOperEntry, mscVrPpSrsgComponentName=mscVrPpSrsgComponentName, mscVrPpSrsgStpProvTable=mscVrPpSrsgStpProvTable, mscVrBrOperationalState=mscVrBrOperationalState, mscVrBrSrbLteRowStatusEntry=mscVrBrSrbLteRowStatusEntry, mscPBOperTable=mscPBOperTable, mscVrBrSrbLteRowStatus=mscVrBrSrbLteRowStatus, mscVrPpTbsgDynamicEntryDiscards=mscVrPpTbsgDynamicEntryDiscards, mscVrPpTbseSecureOption=mscVrPpTbseSecureOption, mscVrBrPteRowStatusEntry=mscVrBrPteRowStatusEntry, mscVrPpSrseSteInFrames=mscVrPpSrseSteInFrames, mscPBIfEntryTable=mscPBIfEntryTable, mscVrBrTbNcFteRowStatus=mscVrBrTbNcFteRowStatus, mscVrPpTbclPortNum=mscVrPpTbclPortNum, mscVrPpSrtBpPreserveDomain=mscVrPpSrtBpPreserveDomain, mscVrBrSrbStpComponentName=mscVrBrSrbStpComponentName, mscVrBrTbStpHelloTime=mscVrBrTbStpHelloTime, mscVrPpTbpStpTypeOper=mscVrPpTbpStpTypeOper, mscVrPpSrseTranslateIpx=mscVrPpSrseTranslateIpx, mscVrPpSrtBpStateTable=mscVrPpSrtBpStateTable, mscVrPpSrBpOperationalState=mscVrPpSrBpOperationalState, mscVrPpSrseBridgingMode=mscVrPpSrseBridgingMode, mscVrPpTbsgOutFilterDiscards=mscVrPpTbsgOutFilterDiscards, mscVrPpSrseIfIndex=mscVrPpSrseIfIndex, mscVrPpSrBpNsComponentName=mscVrPpSrBpNsComponentName, mscVrPpTbsgOutFrames=mscVrPpTbsgOutFrames, mscVrPpTbclDIProvEntry=mscVrPpTbclDIProvEntry, mscVrPpTbpTinygramFramesIn=mscVrPpTbpTinygramFramesIn, mscVrPpSrsgOperTable=mscVrPpSrsgOperTable, mscVrPpTbclDIProvTable=mscVrPpTbclDIProvTable, mscVrBrTbSteRowStatusTable=mscVrBrTbSteRowStatusTable, mscVrPpSrtBpNsIncomingFilter=mscVrPpSrtBpNsIncomingFilter, mscVrBrTbStorageType=mscVrBrTbStorageType, mscVrPpSrseLanIdMismatches=mscVrPpSrseLanIdMismatches, mscVrPpTbclOperStatusEntry=mscVrPpTbclOperStatusEntry, mscVrPpFddiETBServiceClass=mscVrPpFddiETBServiceClass, mscVrPpFddiETBOperationalState=mscVrPpFddiETBOperationalState, mscVrPpSrtBpStateEntry=mscVrPpSrtBpStateEntry, mscVrPpSrBpStorageType=mscVrPpSrBpStorageType, mscVrPpTbpInDiscards=mscVrPpTbpInDiscards, mscVrPpSrtBpNsStorageType=mscVrPpSrtBpNsStorageType, mscVrPpFddiETBNsRowStatusEntry=mscVrPpFddiETBNsRowStatusEntry, mscVrBrSrbStpRowStatusEntry=mscVrBrSrbStpRowStatusEntry, mscVrPpSrclStateEntry=mscVrPpSrclStateEntry, mscVrPpTbseDIProvTable=mscVrPpTbseDIProvTable, mscVrPpTbclAdminState=mscVrPpTbclAdminState, mscVrPpSrtBpNs=mscVrPpSrtBpNs, mscVrPpTbsePathCostMethod=mscVrPpTbsePathCostMethod, mscVrPpSrsgDomainNum=mscVrPpSrsgDomainNum, mscVrPpTbclIndex=mscVrPpTbclIndex, mscVrPpSrBpServiceClass=mscVrPpSrBpServiceClass, mscVrPpTbclStatsTable=mscVrPpTbclStatsTable, mscVrPpTbclDomainNum=mscVrPpTbclDomainNum, mscVrPpTbpStateEntry=mscVrPpTbpStateEntry, mscVrPpSrtBpDomainNum=mscVrPpSrtBpDomainNum, mscVrPpTbsgTranslateIpx=mscVrPpTbsgTranslateIpx, mscVrBrSrbLteComponentName=mscVrBrSrbLteComponentName, mscVrPpTbseForwardTransitions=mscVrPpTbseForwardTransitions, mscVrPpSrclNsRowStatusEntry=mscVrPpSrclNsRowStatusEntry, mscVrPpSrsgDynamicDiscards=mscVrPpSrsgDynamicDiscards, mscVrPpFddiETBStpTypeProv=mscVrPpFddiETBStpTypeProv, mscVrPpTbsgPathCost=mscVrPpTbsgPathCost, mscVrPpTbse=mscVrPpTbse, mscVrPpFddiETBOperStatusTable=mscVrPpFddiETBOperStatusTable, mscVrPpTbpNsIncomingFilter=mscVrPpTbpNsIncomingFilter, mscVrPpSrBpLanId=mscVrPpSrBpLanId, mscVrPpTbseOperStatusTable=mscVrPpTbseOperStatusTable)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BridgeMIB", mscVrBrStateTable=mscVrBrStateTable, mscVrBrType=mscVrBrType, mscVrPpSrclStatsTable=mscVrPpSrclStatsTable, mscVrPpSrsgSegmentMismatchDiscards=mscVrPpSrsgSegmentMismatchDiscards, mscVrPpTbpDIProvTable=mscVrPpTbpDIProvTable, mscVrPpSrBpHopCountExceededDiscards=mscVrPpSrBpHopCountExceededDiscards, mscVrPpSrsgBridgePortConfig=mscVrPpSrsgBridgePortConfig, mscCBOperStatusTable=mscCBOperStatusTable, mscVrPpSrseStateTable=mscVrPpSrseStateTable, mscVrPpFddiETBNsComponentName=mscVrPpFddiETBNsComponentName, mscVrPpSrse=mscVrPpSrse, mscVrPpTbsgIfIndex=mscVrPpTbsgIfIndex, mscVrBrTbStpBridgeForwardDelay=mscVrBrTbStpBridgeForwardDelay, mscVrBrTbSteProvEntry=mscVrBrTbSteProvEntry, mscVrPpSrclRowStatusEntry=mscVrPpSrclRowStatusEntry, mscVrBrSrbIndex=mscVrBrSrbIndex, mscVrPpTbclFragmentIp=mscVrPpTbclFragmentIp, mscVrPpSrsePortNum=mscVrPpSrsePortNum, mscVrPpSrtBpStatsTable=mscVrPpSrtBpStatsTable, mscVrBrSrb=mscVrBrSrb, mscVrPpFddiETBDownTime=mscVrPpFddiETBDownTime, mscVrBrSrbLteLanIdIndex=mscVrBrSrbLteLanIdIndex, mscVrPpSrseSrStatsTable=mscVrPpSrseSrStatsTable, mscVrBrSrbStpHoldTime=mscVrBrSrbStpHoldTime, mscVrPpTbsg=mscVrPpTbsg, mscVrPpTbclDesignatedBridge=mscVrPpTbclDesignatedBridge, mscVrPpSrsgSnmpOperStatus=mscVrPpSrsgSnmpOperStatus, mscVrPpFddiETBBridgePortType=mscVrPpFddiETBBridgePortType, mscVrPpFddiETBOutFilterDiscards=mscVrPpFddiETBOutFilterDiscards, mscVrPpSrclNsProvTable=mscVrPpSrclNsProvTable, mscVrPpTbsgStaticEntryDiscards=mscVrPpTbsgStaticEntryDiscards, mscVrPpSrseDesignatedRoot=mscVrPpSrseDesignatedRoot, mscVrPpTbseComponentName=mscVrPpTbseComponentName, mscVrBrPteLanId=mscVrBrPteLanId, mscVrPpTbclOperationalState=mscVrPpTbclOperationalState, mscVrPpSrclDupLanIdOrTreeErrors=mscVrPpSrclDupLanIdOrTreeErrors, mscVrPpSrBpAdminState=mscVrPpSrBpAdminState, mscVrBrSrbLte=mscVrBrSrbLte, mscVrPpSrtBpDupSegmentDiscards=mscVrPpSrtBpDupSegmentDiscards, mscVrPpTbseStpTypeOper=mscVrPpTbseStpTypeOper, mscVrPpSrclPortPriority=mscVrPpSrclPortPriority, mscPBAdminState=mscPBAdminState, mscVrPpSrsgStateEntry=mscVrPpSrsgStateEntry, mscVrPpSrtBpOperationalState=mscVrPpSrtBpOperationalState, mscVrPpSrBpPathCostOper=mscVrPpSrBpPathCostOper, mscVrPpTbclIfIndex=mscVrPpTbclIfIndex, mscVrPpSrtBpSrProvTable=mscVrPpSrtBpSrProvTable, mscVrBrBridgeAddress=mscVrBrBridgeAddress, mscVrBrRowStatusEntry=mscVrBrRowStatusEntry, mscVrPpSrBpStpProvEntry=mscVrPpSrBpStpProvEntry, mscVrPpSrtBpStatsEntry=mscVrPpSrtBpStatsEntry, mscCBAdminControlTable=mscCBAdminControlTable, mscVrPpTbsgTbOperTable=mscVrPpTbsgTbOperTable, mscVrPpTbseServiceClass=mscVrPpTbseServiceClass, mscVrPpSrseStpProvEntry=mscVrPpSrseStpProvEntry, mscVrPpSrsgOperationalState=mscVrPpSrsgOperationalState, mscPBSnmpOperStatus=mscPBSnmpOperStatus, mscVrPpSrBpDownTime=mscVrPpSrBpDownTime, mscVrPpSrBpSegmentMismatchDiscards=mscVrPpSrBpSegmentMismatchDiscards, mscVrPpSrBpProvEntry=mscVrPpSrBpProvEntry, mscVrPpTbpBridgingMode=mscVrPpTbpBridgingMode, mscVrPpSrBpExploreFrameTreatment=mscVrPpSrBpExploreFrameTreatment, mscVrPpTbsgStpProvEntry=mscVrPpTbsgStpProvEntry, mscVrPpTbpServiceClass=mscVrPpTbpServiceClass, mscPBOperEntry=mscPBOperEntry, mscVrPpFddiETBFragmentIp=mscVrPpFddiETBFragmentIp, mscVrPpSrseHopCount=mscVrPpSrseHopCount, mscVrPpSrsgDelayExceededDiscards=mscVrPpSrsgDelayExceededDiscards, mscVrPpSrtBpForwardTransitions=mscVrPpSrtBpForwardTransitions, mscVrPpFddiETBStpProvTable=mscVrPpFddiETBStpProvTable, mscVrPpSrBpPreserveDomain=mscVrPpSrBpPreserveDomain, mscVrPpSrBpOutFilterDiscards=mscVrPpSrBpOutFilterDiscards, mscVrPpTbsgPathCostMethod=mscVrPpTbsgPathCostMethod, mscVrPpSrclNs=mscVrPpSrclNs, mscVrBrTbProvEntry=mscVrBrTbProvEntry, mscVrBrTbStpStpMode=mscVrBrTbStpStpMode, mscVrPpSrBpHopCount=mscVrPpSrBpHopCount, mscVrBrTbStpDesignatedRoot=mscVrBrTbStpDesignatedRoot, mscVrPpSrsgBadAbstractDiscards=mscVrPpSrsgBadAbstractDiscards, mscVrPpTbsgStpPortState=mscVrPpTbsgStpPortState, mscVrPpSrclSpecOutFrames=mscVrPpSrclSpecOutFrames, mscVrPpTbpPortNum=mscVrPpTbpPortNum, mscVrPpSrsgTinygramFramesIn=mscVrPpSrsgTinygramFramesIn, mscCBOperTable=mscCBOperTable, mscVrPpSrBpRowStatusTable=mscVrPpSrBpRowStatusTable, mscCBMpEntry=mscCBMpEntry, mscVrPpTbseLearningDiscards=mscVrPpTbseLearningDiscards, mscVrPpSrcl=mscVrPpSrcl, mscVrPpSrBpSrProvTable=mscVrPpSrBpSrProvTable, mscVrPpSrtBpRowStatus=mscVrPpSrtBpRowStatus, mscVrPpSrtBpOperStatusTable=mscVrPpSrtBpOperStatusTable, mscCBRowStatusTable=mscCBRowStatusTable, mscVrBrSrbStpTimeSinceTopologyChange=mscVrBrSrbStpTimeSinceTopologyChange, mscVrPpSrclOperEntry=mscVrPpSrclOperEntry, mscVrPpSrclTranslateIpx=mscVrPpSrclTranslateIpx, mscVrPpFddiETBDesignatedRoot=mscVrPpFddiETBDesignatedRoot, mscVrPpSrtBpHopCountExceededDiscards=mscVrPpSrtBpHopCountExceededDiscards, mscVrPpSrseDIProvTable=mscVrPpSrseDIProvTable, mscVrPpSrBpDesignatedRoot=mscVrPpSrBpDesignatedRoot, mscVrPpTbsgDesignatedRoot=mscVrPpTbsgDesignatedRoot, mscVrBrSrbStpRowStatus=mscVrBrSrbStpRowStatus, mscVrPpSrBpNsStorageType=mscVrPpSrBpNsStorageType, mscVrPpSrseDelayExceededDiscards=mscVrPpSrseDelayExceededDiscards, mscVrBrSrbStorageType=mscVrBrSrbStorageType, mscVrBrTbFteComponentName=mscVrBrTbFteComponentName, mscVrPpSrclServiceClass=mscVrPpSrclServiceClass, mscVrPpSrBpSnmpOperStatus=mscVrPpSrBpSnmpOperStatus, mscVrPpSrBp=mscVrPpSrBp, mscVrPpSrsgSrProvTable=mscVrPpSrsgSrProvTable, mscVrPpSrclStpOperEntry=mscVrPpSrclStpOperEntry, mscVrPpSrtBpInFilterDiscards=mscVrPpSrtBpInFilterDiscards, mscVrPpSrclOutFilterDiscards=mscVrPpSrclOutFilterDiscards, mscVrPpSrsgMtuExceededDiscards=mscVrPpSrsgMtuExceededDiscards, mscVrBrPteSpOperTable=mscVrBrPteSpOperTable, mscVrPpTbpNsRowStatusTable=mscVrPpTbpNsRowStatusTable, mscVrBrTbStpTopologyChanges=mscVrBrTbStpTopologyChanges, mscVrPpSrsgStatsEntry=mscVrPpSrsgStatsEntry, mscVrPpSrtBpDupLanIdOrTreeErrors=mscVrPpSrtBpDupLanIdOrTreeErrors, mscVrBrTbTotalForwardingTableEntries=mscVrBrTbTotalForwardingTableEntries, mscVrPpTbclSnmpOperStatus=mscVrPpTbclSnmpOperStatus, mscVrPpSrseBridgePortType=mscVrPpSrseBridgePortType, mscVrPpTbsgPortNum=mscVrPpTbsgPortNum, mscVrPpSrclBridgePortConfig=mscVrPpSrclBridgePortConfig, mscVrPpTbpBadAbstractDiscards=mscVrPpTbpBadAbstractDiscards, mscVrBrTbFteAgeOfEntry=mscVrBrTbFteAgeOfEntry, mscVrPpTbpDesignatedBridge=mscVrPpTbpDesignatedBridge, mscVrPpTbseRowStatus=mscVrPpTbseRowStatus, mscVrPpSrsgSteInFrames=mscVrPpSrsgSteInFrames, mscVrPpTbseOperEntry=mscVrPpTbseOperEntry, mscVrPpSrsgAdminState=mscVrPpSrsgAdminState, mscVrPpTbclNsRowStatusEntry=mscVrPpTbclNsRowStatusEntry, mscVrPpSrseStpPortState=mscVrPpSrseStpPortState, mscVrPpSrBpPortNum=mscVrPpSrBpPortNum, mscVrPpSrBpSteRdLimit=mscVrPpSrBpSteRdLimit, mscVrPpSrtBpSteInFrames=mscVrPpSrtBpSteInFrames, mscVrPpTbseInDiscards=mscVrPpTbseInDiscards, mscVrBrTbSteAtgtRowStatus=mscVrBrTbSteAtgtRowStatus, mscVrPpSrtBpStpProvTable=mscVrPpSrtBpStpProvTable, mscVrPpSrsgLanId=mscVrPpSrsgLanId, mscVrBrTbSte=mscVrBrTbSte, mscVrPpTbpNsIndex=mscVrPpTbpNsIndex, mscVrPpSrtBpApeOutFrames=mscVrPpSrtBpApeOutFrames, mscVrPpSrclStpProvTable=mscVrPpSrclStpProvTable, mscVrPpFddiETBDesignatedCost=mscVrPpFddiETBDesignatedCost, mscVrPpSrclTinygramFramesIn=mscVrPpSrclTinygramFramesIn, mscVrPpSrseDesignatedCost=mscVrPpSrseDesignatedCost, mscVrPpSrtBpDesignatedRoot=mscVrPpSrtBpDesignatedRoot, mscVrPpFddiETBRowStatus=mscVrPpFddiETBRowStatus, mscVrBrTbStpProvTable=mscVrBrTbStpProvTable, mscVrPpSrtBpBadVerifyDiscards=mscVrPpSrtBpBadVerifyDiscards, bridgeGroupCA02=bridgeGroupCA02, mscVrPpSrsgPortStateStpControl=mscVrPpSrsgPortStateStpControl, mscVrPpFddiETBTbOperEntry=mscVrPpFddiETBTbOperEntry, mscVrPpTbpOutFilterDiscards=mscVrPpTbpOutFilterDiscards, mscVrPpTbseConvertArpMacAddress=mscVrPpTbseConvertArpMacAddress, mscVrBrNsAteStorageType=mscVrBrNsAteStorageType, mscVrPpSrsgLargestFrame=mscVrPpSrsgLargestFrame, mscVrPpSrclInFilterDiscards=mscVrPpSrclInFilterDiscards, mscVrPpSrclIfIndex=mscVrPpSrclIfIndex, mscVrPpFddiETBDIProvTable=mscVrPpFddiETBDIProvTable, mscVrPpFddiETBNsRowStatusTable=mscVrPpFddiETBNsRowStatusTable, mscVrPpSrBpProvTable=mscVrPpSrBpProvTable, mscVrPpSrsgDownTime=mscVrPpSrsgDownTime, mscVrPpSrBpDelayExceededDiscards=mscVrPpSrBpDelayExceededDiscards, mscVrPpTbseProvTable=mscVrPpTbseProvTable, mscVrPpTbpRowStatusTable=mscVrPpTbpRowStatusTable, mscVrPpTbclInFrames=mscVrPpTbclInFrames, mscVrPpFddiETBDelayExceededDiscards=mscVrPpFddiETBDelayExceededDiscards, mscPBSnmpAdminStatus=mscPBSnmpAdminStatus, mscVrPpFddiETBTbProvTable=mscVrPpFddiETBTbProvTable, mscVrPpSrsgStpProvEntry=mscVrPpSrsgStpProvEntry, mscVrPpSrclSteInFrames=mscVrPpSrclSteInFrames, mscVrPpSrseSegmentMismatchDiscards=mscVrPpSrseSegmentMismatchDiscards, mscVrPpSrtBpSrStatsTable=mscVrPpSrtBpSrStatsTable, mscVrPpTbclStpTypeOper=mscVrPpTbclStpTypeOper, mscVrPpSrBpNsRowStatusEntry=mscVrPpSrBpNsRowStatusEntry, mscVrPpTbpIndex=mscVrPpTbpIndex, mscPBMpTable=mscPBMpTable, mscVrPpTbseOutFilterDiscards=mscVrPpTbseOutFilterDiscards, mscVrPpSrseExploreFrameTreatment=mscVrPpSrseExploreFrameTreatment, mscVrBrNsAteSecondMacAddress=mscVrBrNsAteSecondMacAddress, mscVrPpTbclBlockingDiscards=mscVrPpTbclBlockingDiscards, mscVrPpSrBpNsIndex=mscVrPpSrBpNsIndex, mscVrPpTbseDelayExceededDiscards=mscVrPpTbseDelayExceededDiscards, mscVrPpSrsgBlockingDiscards=mscVrPpSrsgBlockingDiscards, mscVrPpTbsgStorageType=mscVrPpTbsgStorageType, mscCBOperationalState=mscCBOperationalState, mscVrPpFddiETBBlockingDiscards=mscVrPpFddiETBBlockingDiscards, bridgeMIB=bridgeMIB, mscVrPpTbclConvertArpMacAddress=mscVrPpTbclConvertArpMacAddress, mscVrPpSrseBadAbstractDiscards=mscVrPpSrseBadAbstractDiscards, mscVrPpSrseUsageState=mscVrPpSrseUsageState, mscVrPpFddiETBSnmpOperStatus=mscVrPpFddiETBSnmpOperStatus, mscVrPpSrBpBadAbstractDiscards=mscVrPpSrBpBadAbstractDiscards, mscVrPpTbseDesignatedCost=mscVrPpTbseDesignatedCost, mscVrPpTbseUpTime=mscVrPpTbseUpTime, mscVrPpSrclDIProvTable=mscVrPpSrclDIProvTable, mscVrBrNsAteSecondMacAddressMask=mscVrBrNsAteSecondMacAddressMask, mscVrPpSrclNsIncomingFilter=mscVrPpSrclNsIncomingFilter, mscVrBrTbSteAtgtEntry=mscVrBrTbSteAtgtEntry, mscVrBrSrbStpOperTable=mscVrBrSrbStpOperTable, mscVrPpSrBpPortName=mscVrPpSrBpPortName, mscVrPpSrBpForwardTransitions=mscVrPpSrBpForwardTransitions, mscVrPpSrBpOperStatusEntry=mscVrPpSrBpOperStatusEntry, mscVrPpSrseStpTypeProv=mscVrPpSrseStpTypeProv, mscVrPpSrseProvTable=mscVrPpSrseProvTable, mscVrPpSrtBpProvTable=mscVrPpSrtBpProvTable, mscVrPpTbsgUnicastNoMatches=mscVrPpTbsgUnicastNoMatches, mscVrPpSrBpNsProvTable=mscVrPpSrBpNsProvTable, mscVrPpFddiETBRowStatusTable=mscVrPpFddiETBRowStatusTable, mscVrPpSrsgRowStatus=mscVrPpSrsgRowStatus, mscVrBrNs=mscVrBrNs, mscVrPpSrBpOperStatusTable=mscVrPpSrBpOperStatusTable, mscVrBrNsComponentName=mscVrBrNsComponentName, mscVrPpTbclStaticEntryDiscards=mscVrPpTbclStaticEntryDiscards, mscVrPpTbpConvertArpMacAddress=mscVrPpTbpConvertArpMacAddress, mscVrPpTbclServiceClass=mscVrPpTbclServiceClass, mscVrPpSrBpConvertArpMacAddress=mscVrPpSrBpConvertArpMacAddress, mscVrPpSrtBpNsOutgoingFilter=mscVrPpSrtBpNsOutgoingFilter, mscVrPpTbsgDIProvTable=mscVrPpTbsgDIProvTable, mscVrPpSrsgSpecInFrames=mscVrPpSrsgSpecInFrames, mscVrBrPteDomainNumIndex=mscVrBrPteDomainNumIndex, mscVrPpSrBpBridgingMode=mscVrPpSrBpBridgingMode, mscVrBrTbRowStatusEntry=mscVrBrTbRowStatusEntry, mscPBOperStatusEntry=mscPBOperStatusEntry, mscVrPpSrtBpUnicastNoMatches=mscVrPpSrtBpUnicastNoMatches, mscVrPpSrsgSrStatsEntry=mscVrPpSrsgSrStatsEntry, mscVrPpFddiETBTbOperTable=mscVrPpFddiETBTbOperTable, mscVrPpSrBpUpTime=mscVrPpSrBpUpTime, mscVrPpSrBpDesignatedPort=mscVrPpSrBpDesignatedPort, mscVrBrUsageState=mscVrBrUsageState, mscVrPpFddiETBPreserveDomain=mscVrPpFddiETBPreserveDomain, mscVrPpSrsgSteSpanMode=mscVrPpSrsgSteSpanMode, mscVrPpTbsgStpProvTable=mscVrPpTbsgStpProvTable, mscVrBrSrbStpStpMode=mscVrBrSrbStpStpMode, mscVrPpSrclLanIdMismatches=mscVrPpSrclLanIdMismatches, mscVrBrSrbLteDomainNumIndex=mscVrBrSrbLteDomainNumIndex, mscVrPpTbpUsageState=mscVrPpTbpUsageState, mscVrBrNsAteDomainNum=mscVrBrNsAteDomainNum, mscVrPpSrBpStpTypeProv=mscVrPpSrBpStpTypeProv, mscVrPpSrclSteRdLimit=mscVrPpSrclSteRdLimit, mscVrPpSrseOperStatusTable=mscVrPpSrseOperStatusTable, mscVrPpSrtBpHopCount=mscVrPpSrtBpHopCount, mscVrPpSrsgStatsTable=mscVrPpSrsgStatsTable, mscVrPpFddiETBPortStateStpControl=mscVrPpFddiETBPortStateStpControl, mscVrPpSrsgSteRdLimit=mscVrPpSrsgSteRdLimit, mscVrPpSrclNsIndex=mscVrPpSrclNsIndex, mscVrPpSrsgStpPortState=mscVrPpSrsgStpPortState, mscVrPpSrsgStpTypeOper=mscVrPpSrsgStpTypeOper, mscVrPpTbpNsOutgoingFilter=mscVrPpTbpNsOutgoingFilter, mscVrPpSrBpPortStateStpControl=mscVrPpSrBpPortStateStpControl, mscVrPpSrclPathCostOper=mscVrPpSrclPathCostOper, mscVrPpTbsgOperationalState=mscVrPpTbsgOperationalState, mscVrPpSrtBpBridgingMode=mscVrPpSrtBpBridgingMode)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BridgeMIB", mscVrPpSrsePathCostMethod=mscVrPpSrsePathCostMethod, mscVrPpSrseSrProvTable=mscVrPpSrseSrProvTable, mscVrPpTbseIfIndex=mscVrPpTbseIfIndex, mscVrPpSrtBpOperStatusEntry=mscVrPpSrtBpOperStatusEntry, mscVrPpSrseRowStatusEntry=mscVrPpSrseRowStatusEntry, mscVrPpSrseStaticDiscards=mscVrPpSrseStaticDiscards, mscVrPpTbseStpTypeProv=mscVrPpTbseStpTypeProv, mscVrPpTbseStateTable=mscVrPpTbseStateTable, mscVrPpTbsgProvTable=mscVrPpTbsgProvTable, mscVrPpTbsgOperStatusEntry=mscVrPpTbsgOperStatusEntry, mscVrBrPte=mscVrBrPte, mscVrBrSrbStpStorageType=mscVrBrSrbStpStorageType, mscVrPpSrBpLanIdMismatches=mscVrPpSrBpLanIdMismatches, mscVrPpFddiETBUpTime=mscVrPpFddiETBUpTime, mscPBMacAddress=mscPBMacAddress, mscVrPpFddiETBNsIndex=mscVrPpFddiETBNsIndex, mscVrPpTbpTbProvEntry=mscVrPpTbpTbProvEntry, mscCBMacAddress=mscCBMacAddress, mscVrPpTbclStorageType=mscVrPpTbclStorageType, mscVrPpSrclStateTable=mscVrPpSrclStateTable, mscVrPpSrclBridgingMode=mscVrPpSrclBridgingMode, mscVrPpSrseUpTime=mscVrPpSrseUpTime, mscVrPpTbpStorageType=mscVrPpTbpStorageType, mscVrPpSrtBpAreRdLimit=mscVrPpSrtBpAreRdLimit, mscVrPpSrseOperStatusEntry=mscVrPpSrseOperStatusEntry, mscVrPpTbsgBridgePortType=mscVrPpTbsgBridgePortType, mscVrBrSrbStpRootPortName=mscVrBrSrbStpRootPortName, mscVrPpTbclOperStatusTable=mscVrPpTbclOperStatusTable, mscVrPpSrtBpBridgePortConfig=mscVrPpSrtBpBridgePortConfig, mscVrPpSrsgIndex=mscVrPpSrsgIndex, mscVrBrTbStpProtocolSpec=mscVrBrTbStpProtocolSpec, mscVrPpFddiETBInDiscards=mscVrPpFddiETBInDiscards, mscVrPpSrtBpIndex=mscVrPpSrtBpIndex, mscVrBrNsFirstFilter=mscVrBrNsFirstFilter, mscVrPpSrclPortName=mscVrPpSrclPortName, mscVrBrTbFwdTableNumEntries=mscVrBrTbFwdTableNumEntries, mscVrBrTbSteComponentName=mscVrBrTbSteComponentName, mscCBUsageState=mscCBUsageState, mscVrPpFddiETBRowStatusEntry=mscVrPpFddiETBRowStatusEntry, mscVrPpSrBpApeOutFrames=mscVrPpSrBpApeOutFrames, mscVrPpFddiETBLearningDiscards=mscVrPpFddiETBLearningDiscards, mscVrPpSrclIndex=mscVrPpSrclIndex, mscVrBrTbComponentName=mscVrBrTbComponentName, mscVrPpSrsgStorageType=mscVrPpSrsgStorageType, mscVrBrSrbRowStatusEntry=mscVrBrSrbRowStatusEntry, mscVrPpTbsgAdminState=mscVrPpTbsgAdminState, mscVrBrTbStpBridgeHelloTime=mscVrBrTbStpBridgeHelloTime, mscVrPpSrtBpSrProvEntry=mscVrPpSrtBpSrProvEntry, mscVrPpTbpLearningDiscards=mscVrPpTbpLearningDiscards, mscVrBrNsAte=mscVrBrNsAte, mscVrPpSrclBadAbstractDiscards=mscVrPpSrclBadAbstractDiscards, mscVrBrSrbBridgeLfMode=mscVrBrSrbBridgeLfMode, mscVrBrTbStpRootCost=mscVrBrTbStpRootCost, mscVrBrTbFteDomainNumIndex=mscVrBrTbFteDomainNumIndex, mscVrPpTbsgFragmentIp=mscVrPpTbsgFragmentIp, mscVrBrSrbStpRowStatusTable=mscVrBrSrbStpRowStatusTable, mscVrBrNsRowStatus=mscVrBrNsRowStatus, mscVrPpSrclTinygramFramesOut=mscVrPpSrclTinygramFramesOut, mscVrBrTbNcFteStorageType=mscVrBrTbNcFteStorageType, mscVrBrTbStpStorageType=mscVrBrTbStpStorageType, mscVrPpSrsgExploreFrameTreatment=mscVrPpSrsgExploreFrameTreatment, mscVrPpFddiETBProvEntry=mscVrPpFddiETBProvEntry, mscVrPpSrBpDynamicDiscards=mscVrPpSrBpDynamicDiscards, mscVrPpTbsgPortPriority=mscVrPpTbsgPortPriority, mscVrPpTbsgBadVerifyDiscards=mscVrPpTbsgBadVerifyDiscards, mscVrPpSrclDesignatedBridge=mscVrPpSrclDesignatedBridge, mscVrPpFddiETBTinygramFramesOut=mscVrPpFddiETBTinygramFramesOut, mscVrPpSrsgStpOperTable=mscVrPpSrsgStpOperTable, mscVrBrSrbNumLanIdtEntriesFree=mscVrBrSrbNumLanIdtEntriesFree, mscVrPpTbsgRowStatusTable=mscVrPpTbsgRowStatusTable, mscVrPpFddiETBMtuExceededDiscards=mscVrPpFddiETBMtuExceededDiscards, mscVrPpSrtBpInDiscards=mscVrPpSrtBpInDiscards, mscVrPpSrseSrStatsEntry=mscVrPpSrseSrStatsEntry, mscVrPpTbseFragmentIp=mscVrPpTbseFragmentIp, mscVrPpTbclDynamicEntryDiscards=mscVrPpTbclDynamicEntryDiscards, mscPBComponentName=mscPBComponentName, mscVrPpSrsgOutFilterDiscards=mscVrPpSrsgOutFilterDiscards, mscVrPpSrBpRowStatusEntry=mscVrPpSrBpRowStatusEntry, mscVrPpSrsgPreserveDomain=mscVrPpSrsgPreserveDomain, mscVrPpSrtBpPortPriority=mscVrPpSrtBpPortPriority, mscVrPpTbseStaticEntryDiscards=mscVrPpTbseStaticEntryDiscards, mscVrPpFddiETBStateEntry=mscVrPpFddiETBStateEntry, mscVrPpSrtBpLanIdMismatches=mscVrPpSrtBpLanIdMismatches, mscVrBrSrbNumLanIdtEntriesDenied=mscVrBrSrbNumLanIdtEntriesDenied, mscVrBrSrbStpIndex=mscVrBrSrbStpIndex, mscPBAdminControlEntry=mscPBAdminControlEntry, mscVrPpFddiETBStaticEntryDiscards=mscVrPpFddiETBStaticEntryDiscards, mscVrPpSrBpDesignatedBridge=mscVrPpSrBpDesignatedBridge, mscVrPpTbclNsRowStatus=mscVrPpTbclNsRowStatus, mscVrPpTbsgStpOperTable=mscVrPpTbsgStpOperTable, mscVrPpTbclRowStatusEntry=mscVrPpTbclRowStatusEntry, mscVrBrIndex=mscVrBrIndex, mscVrBrNsAteRowStatusEntry=mscVrBrNsAteRowStatusEntry, mscVrPpSrtBpNsRowStatusEntry=mscVrPpSrtBpNsRowStatusEntry, mscVrPpTbsgServiceClass=mscVrPpTbsgServiceClass, mscVrPpSrclSpecInFrames=mscVrPpSrclSpecInFrames, mscVrPpTbpInFrames=mscVrPpTbpInFrames, mscVrPpSrBpStateTable=mscVrPpSrBpStateTable, mscVrPpSrsgProvEntry=mscVrPpSrsgProvEntry, mscVrPpSrBpIndex=mscVrPpSrBpIndex, mscVrPpSrtBpDownTime=mscVrPpSrtBpDownTime, mscVrBrSrbRowStatusTable=mscVrBrSrbRowStatusTable, mscVrPpSrBpMtuExceededDiscards=mscVrPpSrBpMtuExceededDiscards, mscVrPpSrtBpNsRowStatusTable=mscVrPpSrtBpNsRowStatusTable, mscVrPpSrseTinygramFramesOut=mscVrPpSrseTinygramFramesOut, mscVrPpSrclStpProvEntry=mscVrPpSrclStpProvEntry, mscVrBrTbSteReceivePortIndex=mscVrBrTbSteReceivePortIndex, mscVrBrPteStpType=mscVrBrPteStpType, mscVrPpTbpStatsTable=mscVrPpTbpStatsTable, mscVrPpTbclLearningDiscards=mscVrPpTbclLearningDiscards, mscVrPpSrsgAreRdLimit=mscVrPpSrsgAreRdLimit, mscVrPpTbseTranslateIpx=mscVrPpTbseTranslateIpx, mscVrPpSrsgOperStatusTable=mscVrPpSrsgOperStatusTable, mscVrPpFddiETBStpProvEntry=mscVrPpFddiETBStpProvEntry, mscVrPpSrclLargestFrame=mscVrPpSrclLargestFrame, mscVrPpTbseInFrames=mscVrPpTbseInFrames, mscVrPpSrsgFragmentIp=mscVrPpSrsgFragmentIp, mscVrPpTbsgTbProvTable=mscVrPpTbsgTbProvTable, mscVrPpSrtBpDesignatedPort=mscVrPpSrtBpDesignatedPort, mscVrPpSrBpDesignatedCost=mscVrPpSrBpDesignatedCost, mscVrBrNsAteRowStatus=mscVrBrNsAteRowStatus, mscVrPpSrtBpLearningDiscards=mscVrPpSrtBpLearningDiscards, mscVrPpTbpUpTime=mscVrPpTbpUpTime, mscVrPpSrsgSteOutFrames=mscVrPpSrsgSteOutFrames, mscVrPpSrseOperTable=mscVrPpSrseOperTable, mscVrPpTbpOperationalState=mscVrPpTbpOperationalState, mscVrBrTbFteStorageType=mscVrBrTbFteStorageType, mscVrPpTbpOperEntry=mscVrPpTbpOperEntry, mscVrPpTbpDesignatedRoot=mscVrPpTbpDesignatedRoot, bridgeGroupCA=bridgeGroupCA, mscVrBrSrbStpOperEntry=mscVrBrSrbStpOperEntry, mscVrPpFddiETBTbProvEntry=mscVrPpFddiETBTbProvEntry, mscVrPpSrsgServiceClass=mscVrPpSrsgServiceClass, mscVrPpTbsgSecureOption=mscVrPpTbsgSecureOption, mscVrPpSrBpTinygramFramesIn=mscVrPpSrBpTinygramFramesIn, mscVrPpSrclAdminState=mscVrPpSrclAdminState, mscVrBrSrbStp=mscVrBrSrbStp, mscVrPpTbseTbProvEntry=mscVrPpTbseTbProvEntry, mscVrPpTbsePathCostOper=mscVrPpTbsePathCostOper, mscVrPpTbclNs=mscVrPpTbclNs, mscVrPpTbclBridgingMode=mscVrPpTbclBridgingMode, mscVrPpSrseOperationalState=mscVrPpSrseOperationalState, mscVrPpTbclOutFrames=mscVrPpTbclOutFrames, mscPBOperStatusTable=mscPBOperStatusTable, bridgeGroupCA02A=bridgeGroupCA02A, mscVrPpFddiETBIndex=mscVrPpFddiETBIndex, mscVrPpSrBpStaticDiscards=mscVrPpSrBpStaticDiscards, mscVrPpTbseStatsTable=mscVrPpTbseStatsTable, mscVrPpTbclNsStorageType=mscVrPpTbclNsStorageType, mscVrPpSrclOperationalState=mscVrPpSrclOperationalState, mscVrPpTbseStpOperTable=mscVrPpTbseStpOperTable, mscVrPpTbsgBridgingMode=mscVrPpTbsgBridgingMode, mscVrBrNsLastFilter=mscVrBrNsLastFilter, mscVrPpTbpInFilterDiscards=mscVrPpTbpInFilterDiscards, mscVrPpSrBpStatsTable=mscVrPpSrBpStatsTable, mscVrPpSrsgRowStatusTable=mscVrPpSrsgRowStatusTable, mscVrPpSrclInternalLanId=mscVrPpSrclInternalLanId, mscVrPpTbpOutFrames=mscVrPpTbpOutFrames, mscVrPpTbsgPathCostOper=mscVrPpTbsgPathCostOper, mscVrPpTbclOperTable=mscVrPpTbclOperTable, mscVrPpTbpDesignatedCost=mscVrPpTbpDesignatedCost, mscVrPpSrseStpTypeOper=mscVrPpSrseStpTypeOper, mscVrPpTbseBridgingMode=mscVrPpTbseBridgingMode, mscVrPpTbseStorageType=mscVrPpTbseStorageType, mscVrBrTbSteProvTable=mscVrBrTbSteProvTable, mscVrBrSrbStpProtocolSpec=mscVrBrSrbStpProtocolSpec, mscVrPpSrtBpExploreFrameTreatment=mscVrPpSrtBpExploreFrameTreatment, mscVrPpTbsePortPriority=mscVrPpTbsePortPriority, mscVrBrSrbStpProvTable=mscVrBrSrbStpProvTable, mscVrPpTbclRowStatus=mscVrPpTbclRowStatus, mscVrPpSrclDesignatedCost=mscVrPpSrclDesignatedCost, mscVrPpTbseInFilterDiscards=mscVrPpTbseInFilterDiscards, mscVrPpSrtBpRowStatusEntry=mscVrPpSrtBpRowStatusEntry, mscVrPpTbsePortName=mscVrPpTbsePortName, mscVrPpSrseDupSegmentDiscards=mscVrPpSrseDupSegmentDiscards, mscVrPpTbpPreserveDomain=mscVrPpTbpPreserveDomain, mscVrPpSrsgAdminStatus=mscVrPpSrsgAdminStatus, mscVrPpSrBpOperEntry=mscVrPpSrBpOperEntry, mscCBSnmpOperStatus=mscCBSnmpOperStatus)
