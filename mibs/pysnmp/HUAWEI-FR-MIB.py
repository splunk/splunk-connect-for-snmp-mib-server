#
# PySNMP MIB module HUAWEI-FR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-FR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, iso, Gauge32, Bits, Integer32, Unsigned32, Counter32, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "iso", "Gauge32", "Bits", "Integer32", "Unsigned32", "Counter32", "ModuleIdentity", "IpAddress")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
hwFrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168))
if mibBuilder.loadTexts: hwFrMIB.setLastUpdated('201009102030Z')
if mibBuilder.loadTexts: hwFrMIB.setOrganization('Huawei Technologies Co.,Ltd.')
hwFrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1))
hwFrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1), )
if mibBuilder.loadTexts: hwFrTable.setStatus('current')
hwFrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrIfIndex"))
if mibBuilder.loadTexts: hwFrEntry.setStatus('current')
hwFrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrIfIndex.setStatus('current')
hwFrEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonstandard", 1), ("ietf", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrEncapType.setStatus('current')
hwFrIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2), ("nni", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrIfType.setStatus('current')
hwFrLmiType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notset", 1), ("nonstandard", 2), ("ansi", 3), ("q933a", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiType.setStatus('current')
hwFrLmiN391DteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 255), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiN391DteValue.setStatus('current')
hwFrLmiN392DteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 10), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiN392DteValue.setStatus('current')
hwFrLmiN392DceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 10), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiN392DceValue.setStatus('current')
hwFrLmiN393DteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 10), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiN393DteValue.setStatus('current')
hwFrLmiN393DceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 10), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiN393DceValue.setStatus('current')
hwFrLmiT391DteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 32767), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiT391DteValue.setStatus('current')
hwFrLmiT392DceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 30), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrLmiT392DceValue.setStatus('current')
hwFrIphcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrIphcEnable.setStatus('current')
hwFrIphcNonstandardFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrIphcNonstandardFormat.setStatus('current')
hwFrIphcTcpInclude = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrIphcTcpInclude.setStatus('current')
hwFrInarpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrInarpEnable.setStatus('current')
hwFrIphcTcpConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 255), ValueRangeConstraint(256, 256), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrIphcTcpConnection.setStatus('current')
hwFrIphcRtpConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 255), ValueRangeConstraint(256, 256), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrIphcRtpConnection.setStatus('current')
hwFrPvcTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 2), )
if mibBuilder.loadTexts: hwFrPvcTable.setStatus('current')
hwFrPvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 2, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrPvcIfIndex"), (0, "HUAWEI-FR-MIB", "hwFrPvcDlciNumber"))
if mibBuilder.loadTexts: hwFrPvcEntry.setStatus('current')
hwFrPvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrPvcIfIndex.setStatus('current')
hwFrPvcDlciNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcDlciNumber.setStatus('current')
hwFrPvcState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcState.setStatus('current')
hwFrPvcInarpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcInarpEnable.setStatus('current')
hwFrPvcGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 3), )
if mibBuilder.loadTexts: hwFrPvcGroupTable.setStatus('current')
hwFrPvcGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 3, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrPvcGroupIfIndex"), (0, "HUAWEI-FR-MIB", "hwFrPvcGroupName"))
if mibBuilder.loadTexts: hwFrPvcGroupEntry.setStatus('current')
hwFrPvcGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrPvcGroupIfIndex.setStatus('current')
hwFrPvcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupName.setStatus('current')
hwFrPvcGroupState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupState.setStatus('current')
hwFrPvcGroupTosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("precedence", 2), ("dscp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupTosType.setStatus('current')
hwFrPvcGroupInArpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupInArpEnable.setStatus('current')
hwFrPvcGroupMemTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4), )
if mibBuilder.loadTexts: hwFrPvcGroupMemTable.setStatus('current')
hwFrPvcGroupMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrPvcGroupMemIfIndex"), (0, "HUAWEI-FR-MIB", "hwFrPvcGroupMemPvcGroupName"), (0, "HUAWEI-FR-MIB", "hwFrPvcGroupMemDlciNumber"))
if mibBuilder.loadTexts: hwFrPvcGroupMemEntry.setStatus('current')
hwFrPvcGroupMemIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrPvcGroupMemIfIndex.setStatus('current')
hwFrPvcGroupMemPvcGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMemPvcGroupName.setStatus('current')
hwFrPvcGroupMemDlciNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMemDlciNumber.setStatus('current')
hwFrPvcGroupMemTosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("precedence", 2), ("dscp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMemTosType.setStatus('current')
hwFrPvcGroupMemDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMemDefault.setStatus('current')
hwFrPvcGroupMemMinGrade = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMemMinGrade.setStatus('current')
hwFrPvcGroupMemMaxGrade = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMemMaxGrade.setStatus('current')
hwFrPvcGroupMapIpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5), )
if mibBuilder.loadTexts: hwFrPvcGroupMapIpTable.setStatus('current')
hwFrPvcGroupMapIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrPvcGroupMapIpIfIndex"), (0, "HUAWEI-FR-MIB", "hwFrPvcGroupMapIpName"), (0, "HUAWEI-FR-MIB", "hwFrPvcGroupMapIpIpAddr"))
if mibBuilder.loadTexts: hwFrPvcGroupMapIpEntry.setStatus('current')
hwFrPvcGroupMapIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrPvcGroupMapIpIfIndex.setStatus('current')
hwFrPvcGroupMapIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMapIpName.setStatus('current')
hwFrPvcGroupMapIpIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMapIpIpAddr.setStatus('current')
hwFrPvcGroupMapIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMapIpMask.setStatus('current')
hwFrPvcGroupMapIpEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonstandard", 1), ("ietf", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMapIpEncapType.setStatus('current')
hwFrPvcGroupMapIpBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMapIpBroadcast.setStatus('current')
hwFrPvcGroupMapIpDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcGroupMapIpDefault.setStatus('current')
hwFrMapIpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6), )
if mibBuilder.loadTexts: hwFrMapIpTable.setStatus('current')
hwFrMapIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrMapIpIfIndex"), (0, "HUAWEI-FR-MIB", "hwFrMapIpDlciNumber"), (0, "HUAWEI-FR-MIB", "hwFrMapIpAddress"))
if mibBuilder.loadTexts: hwFrMapIpEntry.setStatus('current')
hwFrMapIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrMapIpIfIndex.setStatus('current')
hwFrMapIpDlciNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpDlciNumber.setStatus('current')
hwFrMapIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpAddress.setStatus('current')
hwFrMapIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpMask.setStatus('current')
hwFrMapIpBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpBroadcast.setStatus('current')
hwFrMapIpEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonstandard", 1), ("ietf", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpEncapType.setStatus('current')
hwFrMapIpDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpDefault.setStatus('current')
hwFrMapIpFrf9Enable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpFrf9Enable.setStatus('current')
hwFrMapIpIphcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpIphcEnable.setStatus('current')
hwFrMapIpRtpConnNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 256), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapIpRtpConnNumber.setStatus('current')
hwFrMapPppTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 7), )
if mibBuilder.loadTexts: hwFrMapPppTable.setStatus('current')
hwFrMapPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 7, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrMapPppIfIndex"), (0, "HUAWEI-FR-MIB", "hwFrMapPppDlciNumber"))
if mibBuilder.loadTexts: hwFrMapPppEntry.setStatus('current')
hwFrMapPppIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrMapPppIfIndex.setStatus('current')
hwFrMapPppDlciNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapPppDlciNumber.setStatus('current')
hwFrMapPppVTIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapPppVTIfIndex.setStatus('current')
hwFrMapPppState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapPppState.setStatus('current')
hwFrMapBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 8), )
if mibBuilder.loadTexts: hwFrMapBridgeTable.setStatus('current')
hwFrMapBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 8, 1), ).setIndexNames((0, "HUAWEI-FR-MIB", "hwFrMapBridgeIfIndex"), (0, "HUAWEI-FR-MIB", "hwFrMapBridgeDlciNumber"))
if mibBuilder.loadTexts: hwFrMapBridgeEntry.setStatus('current')
hwFrMapBridgeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwFrMapBridgeIfIndex.setStatus('current')
hwFrMapBridgeDlciNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapBridgeDlciNumber.setStatus('current')
hwFrMapBridgeState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrMapBridgeState.setStatus('current')
hwFrConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2))
hwFrCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 1))
hwFrCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 1, 1)).setObjects(("HUAWEI-FR-MIB", "hwFrObjectGroup"), ("HUAWEI-FR-MIB", "hwFrPvcObjectGroup"), ("HUAWEI-FR-MIB", "hwFrPvcGroupObjectGroup"), ("HUAWEI-FR-MIB", "hwFrPvcGroupMemObjectGroup"), ("HUAWEI-FR-MIB", "hwFrPvcGroupMapIpObjectGroup"), ("HUAWEI-FR-MIB", "hwFrMapIpObjectGroup"), ("HUAWEI-FR-MIB", "hwFrMapPppObjectGroup"), ("HUAWEI-FR-MIB", "hwFrMapBridgeObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrCompliance = hwFrCompliance.setStatus('current')
hwFrGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2))
hwFrObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 1)).setObjects(("HUAWEI-FR-MIB", "hwFrIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrObjectGroup = hwFrObjectGroup.setStatus('current')
hwFrPvcObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 2)).setObjects(("HUAWEI-FR-MIB", "hwFrPvcIfIndex"), ("HUAWEI-FR-MIB", "hwFrPvcDlciNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrPvcObjectGroup = hwFrPvcObjectGroup.setStatus('current')
hwFrPvcGroupObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 3)).setObjects(("HUAWEI-FR-MIB", "hwFrPvcGroupIfIndex"), ("HUAWEI-FR-MIB", "hwFrPvcGroupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrPvcGroupObjectGroup = hwFrPvcGroupObjectGroup.setStatus('current')
hwFrPvcGroupMemObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 4)).setObjects(("HUAWEI-FR-MIB", "hwFrPvcGroupMemIfIndex"), ("HUAWEI-FR-MIB", "hwFrPvcGroupMemPvcGroupName"), ("HUAWEI-FR-MIB", "hwFrPvcGroupMemDlciNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrPvcGroupMemObjectGroup = hwFrPvcGroupMemObjectGroup.setStatus('current')
hwFrPvcGroupMapIpObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 5)).setObjects(("HUAWEI-FR-MIB", "hwFrPvcGroupMapIpIfIndex"), ("HUAWEI-FR-MIB", "hwFrPvcGroupMapIpName"), ("HUAWEI-FR-MIB", "hwFrPvcGroupMapIpIpAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrPvcGroupMapIpObjectGroup = hwFrPvcGroupMapIpObjectGroup.setStatus('current')
hwFrMapIpObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 6)).setObjects(("HUAWEI-FR-MIB", "hwFrMapIpIfIndex"), ("HUAWEI-FR-MIB", "hwFrMapIpAddress"), ("HUAWEI-FR-MIB", "hwFrMapIpDlciNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrMapIpObjectGroup = hwFrMapIpObjectGroup.setStatus('current')
hwFrMapPppObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 7)).setObjects(("HUAWEI-FR-MIB", "hwFrMapPppIfIndex"), ("HUAWEI-FR-MIB", "hwFrMapPppDlciNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrMapPppObjectGroup = hwFrMapPppObjectGroup.setStatus('current')
hwFrMapBridgeObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 168, 2, 2, 8)).setObjects(("HUAWEI-FR-MIB", "hwFrMapBridgeIfIndex"), ("HUAWEI-FR-MIB", "hwFrMapBridgeDlciNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFrMapBridgeObjectGroup = hwFrMapBridgeObjectGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-FR-MIB", hwFrGroups=hwFrGroups, hwFrMapBridgeTable=hwFrMapBridgeTable, hwFrInarpEnable=hwFrInarpEnable, hwFrPvcGroupMapIpEncapType=hwFrPvcGroupMapIpEncapType, hwFrMapIpDefault=hwFrMapIpDefault, hwFrPvcState=hwFrPvcState, hwFrPvcGroupEntry=hwFrPvcGroupEntry, hwFrEntry=hwFrEntry, hwFrMapIpTable=hwFrMapIpTable, hwFrPvcTable=hwFrPvcTable, hwFrMapBridgeDlciNumber=hwFrMapBridgeDlciNumber, hwFrMapIpDlciNumber=hwFrMapIpDlciNumber, hwFrObjectGroup=hwFrObjectGroup, hwFrPvcGroupMemDlciNumber=hwFrPvcGroupMemDlciNumber, hwFrLmiN392DteValue=hwFrLmiN392DteValue, hwFrLmiN391DteValue=hwFrLmiN391DteValue, hwFrPvcGroupMemIfIndex=hwFrPvcGroupMemIfIndex, hwFrMapBridgeEntry=hwFrMapBridgeEntry, hwFrMapIpRtpConnNumber=hwFrMapIpRtpConnNumber, hwFrMapPppVTIfIndex=hwFrMapPppVTIfIndex, hwFrConformance=hwFrConformance, hwFrPvcGroupName=hwFrPvcGroupName, hwFrMapIpMask=hwFrMapIpMask, hwFrMapBridgeState=hwFrMapBridgeState, hwFrPvcIfIndex=hwFrPvcIfIndex, hwFrPvcGroupMemMinGrade=hwFrPvcGroupMemMinGrade, hwFrMapBridgeObjectGroup=hwFrMapBridgeObjectGroup, hwFrLmiN392DceValue=hwFrLmiN392DceValue, hwFrPvcGroupMemMaxGrade=hwFrPvcGroupMemMaxGrade, hwFrMapIpAddress=hwFrMapIpAddress, hwFrMapIpObjectGroup=hwFrMapIpObjectGroup, hwFrPvcObjectGroup=hwFrPvcObjectGroup, hwFrPvcGroupMapIpIpAddr=hwFrPvcGroupMapIpIpAddr, hwFrMIB=hwFrMIB, PYSNMP_MODULE_ID=hwFrMIB, hwFrMapIpEntry=hwFrMapIpEntry, hwFrMapPppEntry=hwFrMapPppEntry, hwFrMapPppState=hwFrMapPppState, hwFrLmiT392DceValue=hwFrLmiT392DceValue, hwFrPvcGroupMemDefault=hwFrPvcGroupMemDefault, hwFrPvcGroupTosType=hwFrPvcGroupTosType, hwFrPvcGroupTable=hwFrPvcGroupTable, hwFrMapPppObjectGroup=hwFrMapPppObjectGroup, hwFrPvcGroupMapIpObjectGroup=hwFrPvcGroupMapIpObjectGroup, hwFrMapIpIphcEnable=hwFrMapIpIphcEnable, hwFrPvcGroupMapIpMask=hwFrPvcGroupMapIpMask, hwFrCompliances=hwFrCompliances, hwFrIphcTcpConnection=hwFrIphcTcpConnection, hwFrPvcEntry=hwFrPvcEntry, hwFrIphcRtpConnection=hwFrIphcRtpConnection, hwFrPvcGroupMemTable=hwFrPvcGroupMemTable, hwFrPvcGroupInArpEnable=hwFrPvcGroupInArpEnable, hwFrPvcGroupMapIpIfIndex=hwFrPvcGroupMapIpIfIndex, hwFrPvcGroupMemPvcGroupName=hwFrPvcGroupMemPvcGroupName, hwFrMapPppDlciNumber=hwFrMapPppDlciNumber, hwFrPvcGroupMapIpDefault=hwFrPvcGroupMapIpDefault, hwFrMapIpBroadcast=hwFrMapIpBroadcast, hwFrObjects=hwFrObjects, hwFrPvcGroupObjectGroup=hwFrPvcGroupObjectGroup, hwFrPvcGroupMemObjectGroup=hwFrPvcGroupMemObjectGroup, hwFrPvcGroupMapIpEntry=hwFrPvcGroupMapIpEntry, hwFrPvcGroupMapIpBroadcast=hwFrPvcGroupMapIpBroadcast, hwFrPvcGroupState=hwFrPvcGroupState, hwFrPvcGroupMapIpTable=hwFrPvcGroupMapIpTable, hwFrMapIpIfIndex=hwFrMapIpIfIndex, hwFrPvcGroupMapIpName=hwFrPvcGroupMapIpName, hwFrPvcGroupMemTosType=hwFrPvcGroupMemTosType, hwFrLmiN393DteValue=hwFrLmiN393DteValue, hwFrCompliance=hwFrCompliance, hwFrPvcGroupIfIndex=hwFrPvcGroupIfIndex, hwFrMapIpEncapType=hwFrMapIpEncapType, hwFrIphcNonstandardFormat=hwFrIphcNonstandardFormat, hwFrIphcTcpInclude=hwFrIphcTcpInclude, hwFrTable=hwFrTable, hwFrLmiN393DceValue=hwFrLmiN393DceValue, hwFrLmiType=hwFrLmiType, hwFrLmiT391DteValue=hwFrLmiT391DteValue, hwFrMapPppIfIndex=hwFrMapPppIfIndex, hwFrIfType=hwFrIfType, hwFrEncapType=hwFrEncapType, hwFrMapPppTable=hwFrMapPppTable, hwFrPvcGroupMemEntry=hwFrPvcGroupMemEntry, hwFrPvcInarpEnable=hwFrPvcInarpEnable, hwFrIfIndex=hwFrIfIndex, hwFrMapIpFrf9Enable=hwFrMapIpFrf9Enable, hwFrMapBridgeIfIndex=hwFrMapBridgeIfIndex, hwFrPvcDlciNumber=hwFrPvcDlciNumber, hwFrIphcEnable=hwFrIphcEnable)
