#
# PySNMP MIB module G700-MG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/G700-MG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
genAppFileId, genAppFileVersionNumber, genAppFileName, genOpLastFailureIndex, genOpLastWarningDisplay = mibBuilder.importSymbols("LOAD-MIB", "genAppFileId", "genAppFileVersionNumber", "genAppFileName", "genOpLastFailureIndex", "genOpLastWarningDisplay")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, Bits, Counter64, ObjectIdentity, Integer32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, TimeTicks, MibIdentifier, iso, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Bits", "Counter64", "ObjectIdentity", "Integer32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "TimeTicks", "MibIdentifier", "iso", "enterprises")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
avaya = MibIdentifier((1, 3, 6, 1, 4, 1, 6889))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1))
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2))
g700MediaGateway = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 9))
g700MediaGatewayMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9))
class CmgItuPerceivedSeverity(TextualConvention, Integer32):
    reference = "ITU Recommendation M.3100, 'Generic Network Information Model', 1995 ITU Recommendation X.733, 'Information Technology - Open Systems Interconnection - System Management: Alarm Reporting Function', 1992"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("cleared", 1), ("indeterminate", 2), ("critical", 3), ("major", 4), ("minor", 5), ("warning", 6))

cmgmib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1))
cmgmib.setRevisions(('2014-05-08 16:00',))
if mibBuilder.loadTexts: cmgmib.setLastUpdated('201405081600Z')
if mibBuilder.loadTexts: cmgmib.setOrganization('Avaya, Inc.')
class CmgModuleSlot(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 9)

cmgChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1))
cmgProcessor = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2))
cmgControllers = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3))
cmgVoip = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4))
cmgTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5))
cmgContactClosures = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6))
cmgETR = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7))
cmgDynamicCAC = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 8))
cmgSLAMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 9))
cmgHWType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 10, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41))).clone(namedValues=NamedValues(("media-gateway", 1), ("g350", 2), ("avayaG250", 3), ("avayaG250-BRI", 4), ("avayaG250-DS1", 5), ("avayaG250-DCP", 6), ("avayaG450", 7), ("avayaG250-A14", 8), ("avayaTGM550", 10), ("avayaCommunicationManagerBranchEditioni120", 28), ("avayaCommunicationManagerBranchEditioni40-Analog", 29), ("avayaCommunicationManagerBranchEditioni40-BRI", 30), ("avayaCommunicationManagerBranchEditioni40-DS1", 31), ("avayaCommunicationManagerBranchEditioni40-DCP", 32), ("avayaTRM480", 33), ("avayaCommunicationManagerBranchEditioni40-A14", 34), ("avayaCommunicationManagerBranchEditionG450", 35), ("avayaCommunicationManagerBranchEditionG430", 37), ("avayaG430", 41)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgHWType.setStatus('current')
cmgModelNumber = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModelNumber.setStatus('current')
cmgDescription = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDescription.setStatus('current')
cmgSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgSerialNumber.setStatus('current')
cmgHWVintage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgHWVintage.setStatus('current')
cmgHWSuffix = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgHWSuffix.setStatus('current')
cmgStackPosition = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgStackPosition.setStatus('current')
cmgModuleList = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleList.setStatus('current')
cmgReset = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgReset.setStatus('current')
cmgHardware = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10))
cmgCpuTemp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCpuTemp.setStatus('current')
cmgCpuTempWarningThresh = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCpuTempWarningThresh.setStatus('current')
cmgCpuTempShutdownThresh = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCpuTempShutdownThresh.setStatus('current')
cmgDspTemp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDspTemp.setStatus('current')
cmgDspTempWarningThresh = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDspTempWarningThresh.setStatus('current')
cmgDspTempShutdownThresh = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDspTempShutdownThresh.setStatus('current')
cmgPowerMgProcessor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgPowerMgProcessor.setStatus('current')
cmgPowerMediaModules = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgPowerMediaModules.setStatus('current')
cmgPowerVoipComplex = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgPowerVoipComplex.setStatus('current')
cmgPowerDsp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgPowerDsp.setStatus('current')
cmgPower8260 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgPower8260.setStatus('current')
cmgHardwareFaultMask = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgHardwareFaultMask.setStatus('current')
cmgHardwareStatusMask = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgHardwareStatusMask.setStatus('current')
cmgHardwareFanLowSpeedLevel = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 10, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgHardwareFanLowSpeedLevel.setStatus('current')
cmgModules = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11))
cmgModuleTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1), )
if mibBuilder.loadTexts: cmgModuleTable.setStatus('current')
cmgModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgModuleSlot"))
if mibBuilder.loadTexts: cmgModuleEntry.setStatus('current')
cmgModuleSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleSlot.setStatus('current')
cmgModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 23, 22, 25, 26, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 253, 255))).clone(namedValues=NamedValues(("t1e1-voip", 1), ("bri", 2), ("dcp", 3), ("analog", 4), ("t1e1", 5), ("voip", 6), ("icc", 7), ("fxo4fxs4", 9), ("bri2", 10), ("ds1wan", 11), ("uspwan", 12), ("dcp24hd", 13), ("poe24", 14), ("g350intana", 16), ("dcp24", 17), ("fxs24", 18), ("g250-int-analog-2L4T", 19), ("g250-int-analog-2L1T", 20), ("g250-int-BRI", 21), ("g250-int-DS1", 24), ("g250-int-12pDCP", 23), ("poe40", 22), ("poe24cr", 25), ("poe8", 26), ("g250-int-analog-6L8T", 29), ("tgm550-int-analog-2L2T", 30), ("tim514", 31), ("tim510", 32), ("tim521", 33), ("avayaAM110ApplicationModule", 34), ("g450Mainboard", 40), ("tim508", 41), ("tim516", 42), ("tim518", 43), ("i120-intana", 44), ("i40-int-analog-2L4T", 45), ("i40-int-analog-2L1T", 46), ("i40-int-BRI", 47), ("i40-int-DS1", 48), ("i40-A14-int-analog-6L8T", 49), ("avayaCommunicationManagerBranchEditionG450Mainboard", 50), ("g430Mainboard", 51), ("bri8", 52), ("invalid", 253), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleType.setStatus('current')
cmgModuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleDescription.setStatus('current')
cmgModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleName.setStatus('current')
cmgModuleSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleSerialNumber.setStatus('current')
cmgModuleHWVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleHWVintage.setStatus('current')
cmgModuleHWSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleHWSuffix.setStatus('current')
cmgModuleFWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleFWVersion.setStatus('current')
cmgModuleNumberOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleNumberOfPorts.setStatus('current')
cmgModuleFaultMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleFaultMask.setStatus('current')
cmgModuleStatusMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleStatusMask.setStatus('current')
cmgModuleReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgModuleReset.setStatus('current')
cmgModuleNumberOfChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgModuleNumberOfChannels.setStatus('current')
cmgAnalogPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12))
cmgAnalogPortTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1), )
if mibBuilder.loadTexts: cmgAnalogPortTable.setStatus('current')
cmgAnalogPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgAnalogSlot"), (0, "G700-MG-MIB", "cmgAnalogPort"))
if mibBuilder.loadTexts: cmgAnalogPortEntry.setStatus('current')
cmgAnalogSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgAnalogSlot.setStatus('current')
cmgAnalogPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgAnalogPort.setStatus('current')
cmgAnalogEchoCancellerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("off", 2), ("fixedOn", 3), ("notSupported", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgAnalogEchoCancellerControl.setStatus('current')
cmgAnalogEchoCancellerConfig1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgAnalogEchoCancellerConfig1.setStatus('current')
cmgAnalogEchoCancellerConfig2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgAnalogEchoCancellerConfig2.setStatus('current')
cmgAnalogBalance = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgAnalogBalance.setStatus('current')
cmgAnalogReceiveGain = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgAnalogReceiveGain.setStatus('current')
cmgAnalogTransmitGain = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgAnalogTransmitGain.setStatus('current')
cmgExpansionUnits = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13))
cmgExpansionUnitsTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1), )
if mibBuilder.loadTexts: cmgExpansionUnitsTable.setStatus('current')
cmgExpansions = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgExpansionSlot"))
if mibBuilder.loadTexts: cmgExpansions.setStatus('current')
cmgExpansionSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgExpansionSlot.setStatus('current')
cmgExpansionModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgExpansionModelNumber.setStatus('current')
cmgExpansionDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgExpansionDescription.setStatus('current')
cmgExpansionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgExpansionSerialNumber.setStatus('current')
cmgExpansionHWVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgExpansionHWVintage.setStatus('current')
cmgExpansionHWSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgExpansionHWSuffix.setStatus('current')
cmgExpansionDemandTest = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgExpansionDemandTest.setStatus('current')
cmgExpansionDemandTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("fail", 1), ("pass", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgExpansionDemandTestResult.setStatus('current')
cmgTimeslotMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgTimeslotMonitoring.setStatus('current')
cmgTimeslotUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgTimeslotUpperThreshold.setStatus('current')
cmgTimeslotLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgTimeslotLowerThreshold.setStatus('current')
cmgDsu = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2))
cmgDsuConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1), )
if mibBuilder.loadTexts: cmgDsuConfigTable.setStatus('obsolete')
cmgDsuConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgDsuSlot"), (0, "G700-MG-MIB", "cmgDsuPort"))
if mibBuilder.loadTexts: cmgDsuConfigEntry.setStatus('obsolete')
cmgDsuSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuSlot.setStatus('obsolete')
cmgDsuPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuPort.setStatus('obsolete')
cmgDsuPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuPortEnable.setStatus('obsolete')
cmgDsuDataFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rate56Kbps", 1), ("rate64KbpsClear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuDataFormat.setStatus('obsolete')
cmgDsuFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dtr-rts", 1), ("dtr", 2), ("rts", 3), ("disable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuFlowControl.setStatus('obsolete')
cmgDsuYellowAlarmAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("halt", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuYellowAlarmAction.setStatus('obsolete')
cmgDsuReceiveClock = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuReceiveClock.setStatus('obsolete')
cmgDsuInvertTxC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuInvertTxC.setStatus('obsolete')
cmgDsuInvertRxC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuInvertRxC.setStatus('obsolete')
cmgDsuInvertTxD = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuInvertTxD.setStatus('obsolete')
cmgDsuInvertRxD = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuInvertRxD.setStatus('obsolete')
cmgDsuPortInitiatedLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("disallow", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuPortInitiatedLoopback.setStatus('obsolete')
cmgDsuNetworkInitiatedLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("disallow", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuNetworkInitiatedLoopback.setStatus('obsolete')
cmgDsuChannelAssignments = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuChannelAssignments.setStatus('obsolete')
cmgDsuDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuDataRate.setStatus('obsolete')
cmgDsuPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2), )
if mibBuilder.loadTexts: cmgDsuPortStatusTable.setStatus('obsolete')
cmgDsuPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgDsuSlot"), (0, "G700-MG-MIB", "cmgDsuPort"))
if mibBuilder.loadTexts: cmgDsuPortStatusEntry.setStatus('obsolete')
cmgDsuRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuRTS.setStatus('obsolete')
cmgDsuDTR = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuDTR.setStatus('obsolete')
cmgDsuLL = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuLL.setStatus('obsolete')
cmgDsuRL = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuRL.setStatus('obsolete')
cmgDsuRLSD = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuRLSD.setStatus('obsolete')
cmgDsuCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuCTS.setStatus('obsolete')
cmgDsuDSR = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuDSR.setStatus('obsolete')
cmgDsuRing = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuRing.setStatus('obsolete')
cmgDsuTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuTestMode.setStatus('obsolete')
cmgDsuTxD = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mark", 1), ("space", 2), ("cycling", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuTxD.setStatus('obsolete')
cmgDsuRxD = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mark", 1), ("space", 2), ("cycling", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuRxD.setStatus('obsolete')
cmgDsuFaultMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuFaultMask.setStatus('obsolete')
cmgDsuStatusMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuStatusMask.setStatus('obsolete')
cmgDsuTestTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3), )
if mibBuilder.loadTexts: cmgDsuTestTable.setStatus('obsolete')
cmgDsuTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgDsuSlot"), (0, "G700-MG-MIB", "cmgDsuPort"))
if mibBuilder.loadTexts: cmgDsuTestEntry.setStatus('obsolete')
cmgDsuLoopbackPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("allZeroes", 1), ("allOnes", 2), ("oneZeroOne", 3), ("oneIn5", 4), ("oneIn8", 5), ("threeIn24", 6), ("qrs", 7), ("qrs511", 8), ("qrs2047", 9), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuLoopbackPattern.setStatus('obsolete')
cmgDsuLocalDteLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuLocalDteLoopback.setStatus('obsolete')
cmgDsuNearEndDataChannelLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuNearEndDataChannelLoopback.setStatus('obsolete')
cmgDsuFarEndDataChannelLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuFarEndDataChannelLoopback.setStatus('obsolete')
cmgDsuRemoteLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuRemoteLoopback.setStatus('obsolete')
cmgDsuDataTerminalLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDsuDataTerminalLoopback.setStatus('obsolete')
cmgDsuReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 1, 11, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDsuReset.setStatus('obsolete')
cmgProcessorConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1))
cmgProcessorQos = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2))
cmgProcessorClock = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 3))
cmgGatewayNumber = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgGatewayNumber.setStatus('current')
cmgMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgMACAddress.setStatus('current')
cmgFWVersion = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgFWVersion.setStatus('current')
cmgCurrentIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCurrentIpAddress.setStatus('current')
cmgUseDhcpForIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgUseDhcpForIpAddress.setStatus('current')
cmgUseDhcpForVlan = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgUseDhcpForVlan.setStatus('current')
cmgDhcpSson = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDhcpSson.setStatus('current')
cmgStaticIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgStaticIpAddress.setStatus('current')
cmgDnsServerList = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDnsServerList.setStatus('current')
cmgDnsHostname = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDnsHostname.setStatus('current')
cmgMgpFaultMask = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgMgpFaultMask.setStatus('current')
cmgCurrentInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 16), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCurrentInetAddressType.setStatus('current')
cmgCurrentInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 1, 17), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCurrentInetAddress.setStatus('current')
cmgQosControl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgQosControl.setStatus('current')
cmgRemoteSigDscp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgRemoteSigDscp.setStatus('current')
cmgRemoteSig802Priority = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgRemoteSig802Priority.setStatus('current')
cmgLocalSigDscp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgLocalSigDscp.setStatus('current')
cmgLocalSig802Priority = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgLocalSig802Priority.setStatus('current')
cmgStatic802Vlan = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4090))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgStatic802Vlan.setStatus('current')
cmgCurrent802Vlan = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4090))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCurrent802Vlan.setStatus('current')
cmgPrimaryClockSource = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgPrimaryClockSource.setStatus('current')
cmgSecondaryClockSource = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgSecondaryClockSource.setStatus('current')
cmgActiveClockSource = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("local", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgActiveClockSource.setStatus('current')
cmgClockSwitching = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgClockSwitching.setStatus('current')
cmgClockSourceControl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgClockSourceControl.setStatus('current')
cmgRegistrationState = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("registered", 1), ("notRegistered", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgRegistrationState.setStatus('current')
cmgActiveControllerAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgActiveControllerAddress.setStatus('current')
cmgH248LinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgH248LinkStatus.setStatus('current')
cmgH248LinkErrorCode = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgH248LinkErrorCode.setStatus('current')
cmgUseDhcpForMgcList = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgUseDhcpForMgcList.setStatus('current')
cmgStaticControllerHosts = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgStaticControllerHosts.setStatus('current')
cmgDhcpControllerHosts = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDhcpControllerHosts.setStatus('current')
cmgPrimarySearchTime = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgPrimarySearchTime.setStatus('current')
cmgTotalSearchTime = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgTotalSearchTime.setStatus('current')
cmgTransitionPoint = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgTransitionPoint.setStatus('current')
cmgActiveControllerSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgActiveControllerSoftwareVersion.setStatus('current')
cmgActiveControllerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgActiveControllerInetAddressType.setStatus('current')
cmgActiveControllerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 3, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgActiveControllerInetAddress.setStatus('current')
cmgVoipEngineUseDhcp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipEngineUseDhcp.setStatus('current')
cmgVoipQosControl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipQosControl.setStatus('current')
cmgVoipRemoteParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3))
cmgVoipRemoteQosParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 1))
cmgVoipRemoteRtcpParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2))
cmgVoipRemoteRsvpParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 3))
cmgVoipLocalParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4))
cmgVoipLocalQosParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 1))
cmgVoipLocalRtcpParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2))
cmgVoipLocalRsvpParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 3))
cmgVoipRemoteBbeDscp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteBbeDscp.setStatus('current')
cmgVoipRemoteEfDscp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteEfDscp.setStatus('current')
cmgVoipRemote802Priority = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemote802Priority.setStatus('current')
cmgVoipRemoteMinRtpPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65533))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteMinRtpPort.setStatus('current')
cmgVoipRemoteMaxRtpPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteMaxRtpPort.setStatus('current')
cmgVoipRemoteRtcpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRtcpEnabled.setStatus('current')
cmgVoipRemoteRtcpMonitorIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRtcpMonitorIpAddress.setStatus('current')
cmgVoipRemoteRtcpMonitorPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRtcpMonitorPort.setStatus('current')
cmgVoipRemoteRtcpReportPeriod = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRtcpReportPeriod.setStatus('current')
cmgVoipRemoteRtcpMonitorInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRtcpMonitorInetAddressType.setStatus('current')
cmgVoipRemoteRtcpMonitorInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRtcpMonitorInetAddress.setStatus('current')
cmgVoipRemoteRtcpMonitorPortInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRtcpMonitorPortInetAddress.setStatus('current')
cmgVoipRemoteRsvpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRsvpEnabled.setStatus('current')
cmgVoipRemoteRetryOnFailure = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRetryOnFailure.setStatus('current')
cmgVoipRemoteRetryDelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRetryDelay.setStatus('current')
cmgVoipRemoteRsvpProfile = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 3, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("guaranteedService", 1), ("controlledLoadService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipRemoteRsvpProfile.setStatus('current')
cmgVoipLocalBbeDscp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalBbeDscp.setStatus('current')
cmgVoipLocalEfDscp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalEfDscp.setStatus('current')
cmgVoipLocal802Priority = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocal802Priority.setStatus('current')
cmgVoipLocalMinRtpPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65533))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalMinRtpPort.setStatus('current')
cmgVoipLocalMaxRtpPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalMaxRtpPort.setStatus('current')
cmgVoipLocalRtcpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRtcpEnabled.setStatus('current')
cmgVoipLocalRtcpMonitorIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRtcpMonitorIpAddress.setStatus('current')
cmgVoipLocalRtcpMonitorPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRtcpMonitorPort.setStatus('current')
cmgVoipLocalRtcpReportPeriod = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRtcpReportPeriod.setStatus('current')
cmgVoipLocalRtcpMonitorInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipLocalRtcpMonitorInetAddressType.setStatus('current')
cmgVoipLocalRtcpMonitorInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipLocalRtcpMonitorInetAddress.setStatus('current')
cmgVoipLocalRtcpMonitorPortInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRtcpMonitorPortInetAddress.setStatus('current')
cmgVoipLocalRsvpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRsvpEnabled.setStatus('current')
cmgVoipLocalRetryOnFailure = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRetryOnFailure.setStatus('current')
cmgVoipLocalRetryDelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRetryDelay.setStatus('current')
cmgVoipLocalRsvpProfile = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 4, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("guaranteedService", 1), ("controlledLoadService", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipLocalRsvpProfile.setStatus('current')
cmgVoipEngineTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5), )
if mibBuilder.loadTexts: cmgVoipEngineTable.setStatus('current')
cmgVoipEngineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgVoipSlot"))
if mibBuilder.loadTexts: cmgVoipEngineEntry.setStatus('current')
cmgVoipSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipSlot.setStatus('current')
cmgVoipMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipMACAddress.setStatus('current')
cmgVoipStaticIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipStaticIpAddress.setStatus('current')
cmgVoipCurrentIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipCurrentIpAddress.setStatus('current')
cmgVoipJitterBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipJitterBufferSize.setStatus('current')
cmgVoipTotalChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipTotalChannels.setStatus('current')
cmgVoipChannelsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipChannelsInUse.setStatus('current')
cmgVoipAverageOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipAverageOccupancy.setStatus('current')
cmgVoipHyperactivity = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("normal", 1), ("hyperactive", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipHyperactivity.setStatus('current')
cmgVoipAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("busy-out", 1), ("release", 2), ("camp-on", 3), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipAdminState.setStatus('current')
cmgVoipDspFWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipDspFWVersion.setStatus('current')
cmgVoipDspStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("inUse", 2), ("fault", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipDspStatus.setStatus('current')
cmgVoipEngineReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipEngineReset.setStatus('current')
cmgVoipFaultMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipFaultMask.setStatus('current')
cmgVoipStaticInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 15), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipStaticInetAddressType.setStatus('current')
cmgVoipStaticInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 16), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipStaticInetAddress.setStatus('current')
cmgVoipCurrentInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 17), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipCurrentInetAddressType.setStatus('current')
cmgVoipCurrentInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 5, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipCurrentInetAddress.setStatus('current')
cmgVoipDSPCoreTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6), )
if mibBuilder.loadTexts: cmgVoipDSPCoreTable.setStatus('current')
cmgVoipDSPCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgVoipSlot"), (0, "G700-MG-MIB", "cmgDSPCoreCoreId"))
if mibBuilder.loadTexts: cmgVoipDSPCoreEntry.setStatus('current')
cmgDSPCoreCoreId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDSPCoreCoreId.setStatus('current')
cmgDSPCoreTotalChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDSPCoreTotalChannels.setStatus('current')
cmgDSPCoreChannelsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDSPCoreChannelsInUse.setStatus('current')
cmgDSPCoreAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("busy-out", 1), ("release", 2), ("camp-on", 3), ("unknown", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDSPCoreAdminState.setStatus('current')
cmgDSPCoreStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("inUse", 2), ("fault", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDSPCoreStatus.setStatus('current')
cmgDSPCoreDemandTest = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgDSPCoreDemandTest.setStatus('current')
cmgDSPCoreDemandTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("errorCode1", 1), ("errorCode2", 2), ("errorCode3", 3), ("errorCode4", 4), ("errorCode5", 5), ("errorCode6", 6), ("notResponding", 7), ("pass", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDSPCoreDemandTestResult.setStatus('current')
cmgVoipEchoCancellerControl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("off", 2), ("fixedOn", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipEchoCancellerControl.setStatus('current')
cmgVoipEchoCancellerConfig1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipEchoCancellerConfig1.setStatus('current')
cmgVoipEchoCancellerConfig2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgVoipEchoCancellerConfig2.setStatus('current')
cmgVoipTotalChannelsEnforcedByCM = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgVoipTotalChannelsEnforcedByCM.setStatus('current')
cmgTrapManagerTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 1), )
if mibBuilder.loadTexts: cmgTrapManagerTable.setStatus('current')
cmgTrapManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 1, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgTrapManagerAddress"))
if mibBuilder.loadTexts: cmgTrapManagerEntry.setStatus('current')
cmgTrapManagerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 1, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmgTrapManagerAddress.setStatus('current')
cmgTrapManagerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmgTrapManagerControl.setStatus('current')
cmgTrapManagerMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmgTrapManagerMask.setStatus('current')
cmgTrapManagerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmgTrapManagerRowStatus.setStatus('current')
cmgTrapDefinitions = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2))
cmgTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1))
cmgTrapTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2))
cmgTrapLocation = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgTrapLocation.setStatus('current')
cmgTrapOnBoard = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgTrapOnBoard.setStatus('current')
cmgTrapSubsystem = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgTrapSubsystem.setStatus('current')
cmgTrapOnIccMissing = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgTrapOnIccMissing.setStatus('current')
cmgTrapModule = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgTrapModule.setStatus('current')
cmgTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 6), CmgItuPerceivedSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgTrapSeverity.setStatus('current')
cmgProductId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgProductId.setStatus('current')
cmgTrapAvailableTimeslots = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 8), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgTrapAvailableTimeslots.setStatus('current')
cmgTrapInUseTimeslots = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 9), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgTrapInUseTimeslots.setStatus('current')
cmgFipsErrorType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cryptoTestError", 1), ("prngFailure", 2), ("hashIntegrity", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cmgFipsErrorType.setStatus('current')
cmgTrapV3separator = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0))
cmgMultipleFanFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 2)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgMultipleFanFault.setStatus('current')
cmgMultipleFanClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 3)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgMultipleFanClear.setStatus('current')
cmgPsuFanBriefFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 4)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgPsuFanBriefFault.setStatus('current')
cmgPsuFanBriefClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 5)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgPsuFanBriefClear.setStatus('current')
cmgPsuFanProlongedFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 6)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgPsuFanProlongedFault.setStatus('current')
cmgPsuFanProlongedClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 7)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgPsuFanProlongedClear.setStatus('current')
cmgCpuTempWarningFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 10)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgCpuTemp"), ("G700-MG-MIB", "cmgCpuTempWarningThresh"), ("G700-MG-MIB", "cmgCpuTempShutdownThresh"))
if mibBuilder.loadTexts: cmgCpuTempWarningFault.setStatus('current')
cmgCpuTempWarningClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 11)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgCpuTemp"), ("G700-MG-MIB", "cmgCpuTempWarningThresh"), ("G700-MG-MIB", "cmgCpuTempShutdownThresh"))
if mibBuilder.loadTexts: cmgCpuTempWarningClear.setStatus('current')
cmgDspTempWarningFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 12)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgDspTemp"), ("G700-MG-MIB", "cmgDspTempWarningThresh"), ("G700-MG-MIB", "cmgDspTempShutdownThresh"))
if mibBuilder.loadTexts: cmgDspTempWarningFault.setStatus('current')
cmgDspTempWarningClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 13)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgDspTemp"), ("G700-MG-MIB", "cmgDspTempWarningThresh"), ("G700-MG-MIB", "cmgDspTempShutdownThresh"))
if mibBuilder.loadTexts: cmgDspTempWarningClear.setStatus('current')
cmgTempShutdownFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 14)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgCpuTemp"), ("G700-MG-MIB", "cmgCpuTempShutdownThresh"), ("G700-MG-MIB", "cmgDspTemp"), ("G700-MG-MIB", "cmgDspTempShutdownThresh"))
if mibBuilder.loadTexts: cmgTempShutdownFault.setStatus('current')
cmgMgpPowerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 16)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerMgProcessor"))
if mibBuilder.loadTexts: cmgMgpPowerFault.setStatus('current')
cmgMgpPowerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 17)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerMgProcessor"))
if mibBuilder.loadTexts: cmgMgpPowerClear.setStatus('current')
cmgMediaModulePowerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 18)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerMediaModules"))
if mibBuilder.loadTexts: cmgMediaModulePowerFault.setStatus('current')
cmgMediaModulePowerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 19)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerMediaModules"))
if mibBuilder.loadTexts: cmgMediaModulePowerClear.setStatus('current')
cmgVoipPowerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 20)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerVoipComplex"))
if mibBuilder.loadTexts: cmgVoipPowerFault.setStatus('current')
cmgVoipPowerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 21)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerVoipComplex"))
if mibBuilder.loadTexts: cmgVoipPowerClear.setStatus('current')
cmgDspPowerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 22)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerDsp"))
if mibBuilder.loadTexts: cmgDspPowerFault.setStatus('current')
cmgDspPowerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 23)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPowerDsp"))
if mibBuilder.loadTexts: cmgDspPowerClear.setStatus('current')
cmg8260PowerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 24)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPower8260"))
if mibBuilder.loadTexts: cmg8260PowerFault.setStatus('current')
cmg8260PowerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 25)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPower8260"))
if mibBuilder.loadTexts: cmg8260PowerClear.setStatus('current')
cmgAuxPowerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 26)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgAuxPowerFault.setStatus('current')
cmgAuxPowerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 27)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgAuxPowerClear.setStatus('current')
cmgFanPowerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 28)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgFanPowerFault.setStatus('current')
cmgFanPowerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 29)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"))
if mibBuilder.loadTexts: cmgFanPowerClear.setStatus('current')
cmgSyncSignalFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 30)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPrimaryClockSource"), ("G700-MG-MIB", "cmgSecondaryClockSource"), ("G700-MG-MIB", "cmgActiveClockSource"))
if mibBuilder.loadTexts: cmgSyncSignalFault.setStatus('current')
cmgSyncSignalClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 31)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPrimaryClockSource"), ("G700-MG-MIB", "cmgSecondaryClockSource"), ("G700-MG-MIB", "cmgActiveClockSource"))
if mibBuilder.loadTexts: cmgSyncSignalClear.setStatus('current')
cmgVoipHardwareFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 32)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"))
if mibBuilder.loadTexts: cmgVoipHardwareFault.setStatus('current')
cmgVoipHardwareClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 33)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"))
if mibBuilder.loadTexts: cmgVoipHardwareClear.setStatus('current')
cmgSyncSignalWarn = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 34)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPrimaryClockSource"), ("G700-MG-MIB", "cmgSecondaryClockSource"), ("G700-MG-MIB", "cmgActiveClockSource"))
if mibBuilder.loadTexts: cmgSyncSignalWarn.setStatus('current')
cmgSyncWarnClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 35)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPrimaryClockSource"), ("G700-MG-MIB", "cmgSecondaryClockSource"), ("G700-MG-MIB", "cmgActiveClockSource"))
if mibBuilder.loadTexts: cmgSyncWarnClear.setStatus('current')
cmgSyncSignalExcess = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 36)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPrimaryClockSource"), ("G700-MG-MIB", "cmgSecondaryClockSource"), ("G700-MG-MIB", "cmgActiveClockSource"))
if mibBuilder.loadTexts: cmgSyncSignalExcess.setStatus('current')
cmgSyncExcessClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 37)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgHardwareFaultMask"), ("G700-MG-MIB", "cmgPrimaryClockSource"), ("G700-MG-MIB", "cmgSecondaryClockSource"), ("G700-MG-MIB", "cmgActiveClockSource"))
if mibBuilder.loadTexts: cmgSyncExcessClear.setStatus('current')
cmgVoipCoreFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 38)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"))
if mibBuilder.loadTexts: cmgVoipCoreFault.setStatus('current')
cmgVoipCoreClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 39)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"))
if mibBuilder.loadTexts: cmgVoipCoreClear.setStatus('current')
cmgModuleRemove = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 50)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapModule"))
if mibBuilder.loadTexts: cmgModuleRemove.setStatus('current')
cmgModuleInsertFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 52)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleFaultMask"), ("G700-MG-MIB", "cmgTrapModule"))
if mibBuilder.loadTexts: cmgModuleInsertFault.setStatus('current')
cmgModuleInsertSuccess = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 53)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapModule"))
if mibBuilder.loadTexts: cmgModuleInsertSuccess.setStatus('current')
cmgMgBusyout = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 54)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgMgBusyout.setStatus('current')
cmgMgRelease = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 55)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgMgRelease.setStatus('current')
cmgUnsupportedMmEnrolement = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 56)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleSlot"), ("G700-MG-MIB", "cmgModuleType"), ("G700-MG-MIB", "cmgModuleName"))
if mibBuilder.loadTexts: cmgUnsupportedMmEnrolement.setStatus('current')
cmgDataModuleAwohConflict = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 57)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleSlot"), ("G700-MG-MIB", "cmgModuleType"), ("G700-MG-MIB", "cmgModuleName"))
if mibBuilder.loadTexts: cmgDataModuleAwohConflict.setStatus('current')
cmgFirmwareDownloadBegun = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 70)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("LOAD-MIB", "genAppFileId"), ("LOAD-MIB", "genAppFileName"), ("LOAD-MIB", "genAppFileVersionNumber"), ("G700-MG-MIB", "cmgProductId"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgFirmwareDownloadBegun.setStatus('current')
cmgFirmwareDownloadSuccess = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 71)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("LOAD-MIB", "genAppFileId"), ("LOAD-MIB", "genAppFileName"), ("LOAD-MIB", "genAppFileVersionNumber"))
if mibBuilder.loadTexts: cmgFirmwareDownloadSuccess.setStatus('current')
cmgRegistrationSuccess = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 73)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgActiveControllerAddress"))
if mibBuilder.loadTexts: cmgRegistrationSuccess.setStatus('current')
cmgMgManualReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 74)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgMgManualReset.setStatus('current')
cmgModuleManualReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 75)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgModuleManualReset.setStatus('current')
cmgVoipManualReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 76)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgVoipManualReset.setStatus('current')
cmgDsuManualReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 77)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuManualReset.setStatus('obsolete')
cmgConfigUploadBegun = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 78)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgConfigUploadBegun.setStatus('current')
cmgConfigUploadSuccess = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 79)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgConfigUploadSuccess.setStatus('current')
cmgMemoryFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 90)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgMemoryFault.setStatus('current')
cmgMemoryClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 91)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgMemoryClear.setStatus('current')
cmgDhcpRequestFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 92)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgDhcpRequestFault.setStatus('current')
cmgDhcpRequestClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 93)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgDhcpRequestClear.setStatus('current')
cmgFirmwareDownloadFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 94)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("LOAD-MIB", "genAppFileId"), ("LOAD-MIB", "genAppFileName"), ("LOAD-MIB", "genAppFileVersionNumber"), ("LOAD-MIB", "genOpLastFailureIndex"))
if mibBuilder.loadTexts: cmgFirmwareDownloadFault.setStatus('current')
cmgFirmwareDownloadWarning = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 95)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("LOAD-MIB", "genAppFileId"), ("LOAD-MIB", "genAppFileName"), ("LOAD-MIB", "genAppFileVersionNumber"), ("LOAD-MIB", "genOpLastWarningDisplay"))
if mibBuilder.loadTexts: cmgFirmwareDownloadWarning.setStatus('current')
cmgProcessRestart = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 96)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgProcessRestart.setStatus('current')
cmgProcessRestartClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 97)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgProcessRestartClear.setStatus('current')
cmgIccMissingFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 98)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgIccMissingFault.setStatus('current')
cmgIccMissingClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 99)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgIccMissingClear.setStatus('current')
cmgIccAutoReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 100)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgIccAutoReset.setStatus('current')
cmgIccAutoResetClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 101)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgIccAutoResetClear.setStatus('current')
cmgPrimaryControllerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 102)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("G700-MG-MIB", "cmgUseDhcpForMgcList"))
if mibBuilder.loadTexts: cmgPrimaryControllerFault.setStatus('current')
cmgPrimaryControllerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 103)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("G700-MG-MIB", "cmgUseDhcpForMgcList"))
if mibBuilder.loadTexts: cmgPrimaryControllerClear.setStatus('current')
cmgNoControllerFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 104)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("G700-MG-MIB", "cmgUseDhcpForMgcList"))
if mibBuilder.loadTexts: cmgNoControllerFault.setStatus('current')
cmgNoControllerClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 105)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("G700-MG-MIB", "cmgUseDhcpForMgcList"))
if mibBuilder.loadTexts: cmgNoControllerClear.setStatus('current')
cmgRegistrationFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 106)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("G700-MG-MIB", "cmgActiveControllerAddress"))
if mibBuilder.loadTexts: cmgRegistrationFault.setStatus('current')
cmgH248LinkDown = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 108)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgH248LinkDown.setStatus('current')
cmgH248LinkUp = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 109)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgH248LinkUp.setStatus('current')
cmgTestFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 110)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgTestFault.setStatus('current')
cmgTestClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 111)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgTestClear.setStatus('current')
cmgTestThresholdFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 112)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgTestThresholdFault.setStatus('current')
cmgTestThresholdClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 113)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgTestThresholdClear.setStatus('current')
cmgMgAutoReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 114)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"))
if mibBuilder.loadTexts: cmgMgAutoReset.setStatus('current')
cmgModuleAutoReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 116)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleFaultMask"))
if mibBuilder.loadTexts: cmgModuleAutoReset.setStatus('current')
cmgModuleAutoResetClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 117)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleFaultMask"))
if mibBuilder.loadTexts: cmgModuleAutoResetClear.setStatus('current')
cmgModulePostFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 118)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleFaultMask"))
if mibBuilder.loadTexts: cmgModulePostFault.setStatus('current')
cmgModulePostClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 119)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleFaultMask"))
if mibBuilder.loadTexts: cmgModulePostClear.setStatus('current')
cmgModuleParameterFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 120)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleFaultMask"))
if mibBuilder.loadTexts: cmgModuleParameterFault.setStatus('current')
cmgModuleParameterClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 121)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgModuleFaultMask"))
if mibBuilder.loadTexts: cmgModuleParameterClear.setStatus('current')
cmgConfigUploadFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 122)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("LOAD-MIB", "genOpLastFailureIndex"))
if mibBuilder.loadTexts: cmgConfigUploadFault.setStatus('current')
cmgVoipOccFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 124)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"), ("G700-MG-MIB", "cmgVoipChannelsInUse"), ("G700-MG-MIB", "cmgVoipTotalChannels"))
if mibBuilder.loadTexts: cmgVoipOccFault.setStatus('current')
cmgVoipOccClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 125)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"), ("G700-MG-MIB", "cmgVoipChannelsInUse"), ("G700-MG-MIB", "cmgVoipTotalChannels"))
if mibBuilder.loadTexts: cmgVoipOccClear.setStatus('current')
cmgVoipAvgOccFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 126)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"), ("G700-MG-MIB", "cmgVoipAverageOccupancy"))
if mibBuilder.loadTexts: cmgVoipAvgOccFault.setStatus('current')
cmgVoipAvgOccClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 127)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"), ("G700-MG-MIB", "cmgVoipAverageOccupancy"))
if mibBuilder.loadTexts: cmgVoipAvgOccClear.setStatus('current')
cmgVoipAutoReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 128)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"))
if mibBuilder.loadTexts: cmgVoipAutoReset.setStatus('current')
cmgVoipAutoResetClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 129)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"))
if mibBuilder.loadTexts: cmgVoipAutoResetClear.setStatus('current')
cmgDsuFpgaConfigureFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 130)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuFpgaConfigureFault.setStatus('obsolete')
cmgDsuFpgaConfigureClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 131)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuFpgaConfigureClear.setStatus('obsolete')
cmgDsuAutoReset = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 132)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuAutoReset.setStatus('obsolete')
cmgDsuAutoResetClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 133)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuAutoResetClear.setStatus('obsolete')
cmgDsuDteDtrFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 134)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuDteDtrFault.setStatus('obsolete')
cmgDsuDteDtrClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 135)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuDteDtrClear.setStatus('obsolete')
cmgDsuDteRtsFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 136)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuDteRtsFault.setStatus('obsolete')
cmgDsuDteRtsClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 137)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuDteRtsClear.setStatus('obsolete')
cmgDsuTxDFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 138)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuTxDFault.setStatus('obsolete')
cmgDsuTxDClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 139)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuTxDClear.setStatus('obsolete')
cmgDsuRxDFailure = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 140)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuRxDFailure.setStatus('obsolete')
cmgDsuRxDClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 141)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgDsuRxDClear.setStatus('obsolete')
cmgVoipIpConfigFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 142)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"), ("G700-MG-MIB", "cmgVoipCurrentIpAddress"))
if mibBuilder.loadTexts: cmgVoipIpConfigFault.setStatus('current')
cmgVoipIpConfigClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 143)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgVoipFaultMask"), ("G700-MG-MIB", "cmgVoipCurrentIpAddress"))
if mibBuilder.loadTexts: cmgVoipIpConfigClear.setStatus('current')
cmgConfigDownloadFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 144)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("LOAD-MIB", "genOpLastFailureIndex"))
if mibBuilder.loadTexts: cmgConfigDownloadFault.setStatus('current')
cmgConfigDownloadBegun = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 145)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgConfigDownloadBegun.setStatus('current')
cmgConfigDownloadSuccess = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 146)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: cmgConfigDownloadSuccess.setStatus('current')
cmgTimeslotOccupancyFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 147)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapAvailableTimeslots"), ("G700-MG-MIB", "cmgTrapInUseTimeslots"))
if mibBuilder.loadTexts: cmgTimeslotOccupancyFault.setStatus('current')
cmgTimeslotOccupancyClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 148)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapAvailableTimeslots"), ("G700-MG-MIB", "cmgTrapInUseTimeslots"))
if mibBuilder.loadTexts: cmgTimeslotOccupancyClear.setStatus('current')
cmgTimeslotAvailabilityFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 149)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapAvailableTimeslots"), ("G700-MG-MIB", "cmgTrapInUseTimeslots"))
if mibBuilder.loadTexts: cmgTimeslotAvailabilityFault.setStatus('current')
cmgTimeslotAvailabilityClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 150)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapAvailableTimeslots"), ("G700-MG-MIB", "cmgTrapInUseTimeslots"))
if mibBuilder.loadTexts: cmgTimeslotAvailabilityClear.setStatus('current')
cmgRegistrationSuccessInetAddress = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 151)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgActiveControllerInetAddressType"), ("G700-MG-MIB", "cmgActiveControllerInetAddress"), ("G700-MG-MIB", "cmgProductId"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgRegistrationSuccessInetAddress.setStatus('current')
cmgRegistrationFaultInetAddress = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 152)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgMgpFaultMask"), ("G700-MG-MIB", "cmgActiveControllerInetAddressType"), ("G700-MG-MIB", "cmgActiveControllerInetAddress"), ("G700-MG-MIB", "cmgProductId"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgRegistrationFaultInetAddress.setStatus('current')
cmgDs1Layer2Down = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 153)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapModule"))
if mibBuilder.loadTexts: cmgDs1Layer2Down.setStatus('current')
cmgDs1Layer2Up = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 154)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapModule"))
if mibBuilder.loadTexts: cmgDs1Layer2Up.setStatus('current')
cmgFipsErrorMode = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 155)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapModule"), ("G700-MG-MIB", "cmgFipsErrorType"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgFipsErrorMode.setStatus('current')
cmgCertErrorCertRevoked = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 156)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgCertErrorCertRevoked.setStatus('current')
cmgCrlAccessDenied = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 157)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgCrlAccessDenied.setStatus('current')
cmgCrlFileSize = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 158)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgCrlFileSize.setStatus('current')
cmgCertErrorCertExpired = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 159)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgCertErrorCertExpired.setStatus('current')
cmgCertErrorNearExpiry = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 160)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgCertErrorNearExpiry.setStatus('current')
cmgCertErrorIdAuthentication = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 5, 2, 2, 0, 161)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("G700-MG-MIB", "cmgTrapSeverity"))
if mibBuilder.loadTexts: cmgCertErrorIdAuthentication.setStatus('current')
cmgContactClosuresTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1), )
if mibBuilder.loadTexts: cmgContactClosuresTable.setStatus('current')
cmgContactClosuresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgCcModule"), (0, "G700-MG-MIB", "cmgCcPort"), (0, "G700-MG-MIB", "cmgCcRelay"))
if mibBuilder.loadTexts: cmgContactClosuresEntry.setStatus('current')
cmgCcModule = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCcModule.setStatus('current')
cmgCcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCcPort.setStatus('current')
cmgCcRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCcRelay.setStatus('current')
cmgCcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("manualTrigger", 2), ("manualOff", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgCcAdminState.setStatus('current')
cmgCcPulseDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgCcPulseDuration.setStatus('current')
cmgCcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("triggered", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgCcStatus.setStatus('current')
cmgETRTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7, 1), )
if mibBuilder.loadTexts: cmgETRTable.setStatus('current')
cmgETREntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7, 1, 1), ).setIndexNames((0, "G700-MG-MIB", "cmgEtrModule"))
if mibBuilder.loadTexts: cmgETREntry.setStatus('current')
cmgEtrModule = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgEtrModule.setStatus('current')
cmgEtrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("on", 2), ("off", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgEtrAdminState.setStatus('current')
cmgEtrNumberOfPairs = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgEtrNumberOfPairs.setStatus('current')
cmgEtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgEtrStatus.setStatus('current')
cmgEtrCurrentLoopDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 7, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgEtrCurrentLoopDetect.setStatus('current')
cmgDynCacStatus = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("active", 1), ("notConfigured", 2), ("notArmed", 3), ("armedNotConfigured", 4), ("notSupported", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDynCacStatus.setStatus('current')
cmgDynCacRBBL = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDynCacRBBL.setStatus('current')
cmgDynCacLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 8, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgDynCacLastUpdate.setStatus('current')
cmgSLAMonitorState = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgSLAMonitorState.setStatus('current')
cmgSLAMonitorServerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 9, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgSLAMonitorServerInetAddressType.setStatus('current')
cmgSLAMonitorServerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 9, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgSLAMonitorServerInetAddress.setStatus('current')
cmgSLAMonitorServerPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 9, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgSLAMonitorServerPort.setStatus('current')
cmgSLAMonitorPacketCaptureMode = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("withoutPayload", 1), ("all", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmgSLAMonitorPacketCaptureMode.setStatus('current')
cmgSLAMonitorVersion = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 9, 1, 9, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmgSLAMonitorVersion.setStatus('current')
mibBuilder.exportSymbols("G700-MG-MIB", cmgGatewayNumber=cmgGatewayNumber, cmgDsuRxD=cmgDsuRxD, cmgVoipLocalRtcpMonitorPort=cmgVoipLocalRtcpMonitorPort, cmgTimeslotMonitoring=cmgTimeslotMonitoring, cmgVoipRemoteRtcpReportPeriod=cmgVoipRemoteRtcpReportPeriod, cmgDspTempWarningThresh=cmgDspTempWarningThresh, cmgDsuReceiveClock=cmgDsuReceiveClock, cmgSLAMonitorServerPort=cmgSLAMonitorServerPort, cmgCurrentInetAddress=cmgCurrentInetAddress, cmgActiveControllerInetAddressType=cmgActiveControllerInetAddressType, cmgHardwareFaultMask=cmgHardwareFaultMask, cmgDsuTxDFault=cmgDsuTxDFault, cmgLocalSigDscp=cmgLocalSigDscp, cmgTrapSeverity=cmgTrapSeverity, cmgVoipCoreFault=cmgVoipCoreFault, cmgDsuTestEntry=cmgDsuTestEntry, cmgConfigUploadFault=cmgConfigUploadFault, cmgProcessRestartClear=cmgProcessRestartClear, cmgVoipLocalRsvpProfile=cmgVoipLocalRsvpProfile, cmgVoipLocalEfDscp=cmgVoipLocalEfDscp, cmgCertErrorCertRevoked=cmgCertErrorCertRevoked, cmgUnsupportedMmEnrolement=cmgUnsupportedMmEnrolement, cmgDsuRxDClear=cmgDsuRxDClear, cmgDspTempWarningClear=cmgDspTempWarningClear, cmgContactClosuresTable=cmgContactClosuresTable, cmgDsuConfigTable=cmgDsuConfigTable, cmgSLAMonitorServerInetAddress=cmgSLAMonitorServerInetAddress, cmgVoipPowerClear=cmgVoipPowerClear, cmgDhcpRequestFault=cmgDhcpRequestFault, cmgCertErrorCertExpired=cmgCertErrorCertExpired, cmgTrapOnBoard=cmgTrapOnBoard, cmgNoControllerClear=cmgNoControllerClear, cmgModuleAutoReset=cmgModuleAutoReset, cmgVoipJitterBufferSize=cmgVoipJitterBufferSize, cmgEtrCurrentLoopDetect=cmgEtrCurrentLoopDetect, cmgClockSourceControl=cmgClockSourceControl, cmgVoipDSPCoreEntry=cmgVoipDSPCoreEntry, cmgVoipAdminState=cmgVoipAdminState, cmgRegistrationSuccess=cmgRegistrationSuccess, cmgVoipRemoteRetryOnFailure=cmgVoipRemoteRetryOnFailure, cmgPrimarySearchTime=cmgPrimarySearchTime, cmgModuleTable=cmgModuleTable, cmgTrapManagerEntry=cmgTrapManagerEntry, cmgDspPowerFault=cmgDspPowerFault, cmgVoipLocalRetryOnFailure=cmgVoipLocalRetryOnFailure, cmgModuleRemove=cmgModuleRemove, cmgControllers=cmgControllers, cmgDsuFaultMask=cmgDsuFaultMask, cmgDsuLocalDteLoopback=cmgDsuLocalDteLoopback, cmgTrapManagerRowStatus=cmgTrapManagerRowStatus, cmgPsuFanProlongedFault=cmgPsuFanProlongedFault, cmgVoipLocalRtcpReportPeriod=cmgVoipLocalRtcpReportPeriod, cmgVoipDspStatus=cmgVoipDspStatus, cmgModuleStatusMask=cmgModuleStatusMask, cmgDsuRing=cmgDsuRing, cmgCurrentInetAddressType=cmgCurrentInetAddressType, cmgAuxPowerFault=cmgAuxPowerFault, cmgMultipleFanClear=cmgMultipleFanClear, cmgSyncSignalWarn=cmgSyncSignalWarn, cmgTestThresholdFault=cmgTestThresholdFault, cmgTrapAvailableTimeslots=cmgTrapAvailableTimeslots, cmgModuleParameterFault=cmgModuleParameterFault, cmgDsuTxDClear=cmgDsuTxDClear, cmgDsuFarEndDataChannelLoopback=cmgDsuFarEndDataChannelLoopback, cmgMgManualReset=cmgMgManualReset, cmgDsuPort=cmgDsuPort, cmgVoipQosControl=cmgVoipQosControl, cmgTestClear=cmgTestClear, cmgVoipRemoteRtcpEnabled=cmgVoipRemoteRtcpEnabled, cmgAnalogBalance=cmgAnalogBalance, cmgDsuSlot=cmgDsuSlot, cmgVoipCurrentInetAddress=cmgVoipCurrentInetAddress, cmgDynamicCAC=cmgDynamicCAC, cmgETREntry=cmgETREntry, cmgDsuPortStatusEntry=cmgDsuPortStatusEntry, cmgVoipEngineUseDhcp=cmgVoipEngineUseDhcp, cmgTimeslotAvailabilityClear=cmgTimeslotAvailabilityClear, cmgModules=cmgModules, cmgDs1Layer2Down=cmgDs1Layer2Down, cmgVoipStaticInetAddressType=cmgVoipStaticInetAddressType, cmgVoipRemoteMinRtpPort=cmgVoipRemoteMinRtpPort, cmgTrapManagerAddress=cmgTrapManagerAddress, cmgVoipLocalMinRtpPort=cmgVoipLocalMinRtpPort, cmgDsuRxDFailure=cmgDsuRxDFailure, cmgDs1Layer2Up=cmgDs1Layer2Up, cmgDsuRemoteLoopback=cmgDsuRemoteLoopback, cmgDsuDteRtsFault=cmgDsuDteRtsFault, cmgModuleInsertFault=cmgModuleInsertFault, cmgDnsServerList=cmgDnsServerList, cmgVoipLocal802Priority=cmgVoipLocal802Priority, cmgVoipLocalRtcpMonitorInetAddress=cmgVoipLocalRtcpMonitorInetAddress, cmgVoipLocalRtcpParameters=cmgVoipLocalRtcpParameters, cmgMgAutoReset=cmgMgAutoReset, cmgModuleName=cmgModuleName, cmgSLAMonitorVersion=cmgSLAMonitorVersion, cmgVoipPowerFault=cmgVoipPowerFault, cmgDSPCoreCoreId=cmgDSPCoreCoreId, cmgPower8260=cmgPower8260, cmgModulePostFault=cmgModulePostFault, cmgVoipRemoteBbeDscp=cmgVoipRemoteBbeDscp, cmgVoipChannelsInUse=cmgVoipChannelsInUse, cmgDspTempWarningFault=cmgDspTempWarningFault, cmgPowerMgProcessor=cmgPowerMgProcessor, cmgVoipAutoReset=cmgVoipAutoReset, cmgProcessorQos=cmgProcessorQos, cmgIccAutoResetClear=cmgIccAutoResetClear, cmgFirmwareDownloadSuccess=cmgFirmwareDownloadSuccess, cmgDSPCoreStatus=cmgDSPCoreStatus, cmgContactClosuresEntry=cmgContactClosuresEntry, cmgVoipEngineEntry=cmgVoipEngineEntry, cmgCertErrorIdAuthentication=cmgCertErrorIdAuthentication, cmgExpansionDemandTest=cmgExpansionDemandTest, cmgTrapSubsystem=cmgTrapSubsystem, cmgDsuConfigEntry=cmgDsuConfigEntry, cmgVoipLocalRetryDelay=cmgVoipLocalRetryDelay, cmgProcessor=cmgProcessor, cmgVoipLocalMaxRtpPort=cmgVoipLocalMaxRtpPort, cmgExpansionDescription=cmgExpansionDescription, cmgVoipAutoResetClear=cmgVoipAutoResetClear, cmgChassis=cmgChassis, cmgVoipLocalRsvpParameters=cmgVoipLocalRsvpParameters, cmgVoipRemoteRtcpMonitorPort=cmgVoipRemoteRtcpMonitorPort, cmgSecondaryClockSource=cmgSecondaryClockSource, cmgDsuDteRtsClear=cmgDsuDteRtsClear, cmgStaticIpAddress=cmgStaticIpAddress, cmgDynCacStatus=cmgDynCacStatus, CmgModuleSlot=CmgModuleSlot, cmgVoipEchoCancellerConfig2=cmgVoipEchoCancellerConfig2, cmgVoipRemoteParameters=cmgVoipRemoteParameters, cmgVoipRemoteMaxRtpPort=cmgVoipRemoteMaxRtpPort, cmgVoipHardwareFault=cmgVoipHardwareFault, cmgmib=cmgmib, cmgDspTemp=cmgDspTemp, cmgVoipLocalRtcpMonitorIpAddress=cmgVoipLocalRtcpMonitorIpAddress, cmgModuleHWVintage=cmgModuleHWVintage, cmgVoipEchoCancellerConfig1=cmgVoipEchoCancellerConfig1, cmgDsuInvertRxC=cmgDsuInvertRxC, products=products, cmg8260PowerFault=cmg8260PowerFault, cmgCpuTemp=cmgCpuTemp, cmgAnalogEchoCancellerConfig1=cmgAnalogEchoCancellerConfig1, cmgDsuAutoResetClear=cmgDsuAutoResetClear, cmgPrimaryControllerClear=cmgPrimaryControllerClear, cmgFWVersion=cmgFWVersion, cmgModuleInsertSuccess=cmgModuleInsertSuccess, cmgVoipHardwareClear=cmgVoipHardwareClear, cmgRemoteSig802Priority=cmgRemoteSig802Priority, cmgTrapVariables=cmgTrapVariables, cmgHWVintage=cmgHWVintage, cmgTrapManagerMask=cmgTrapManagerMask, cmgDSPCoreTotalChannels=cmgDSPCoreTotalChannels, cmgDsuReset=cmgDsuReset, cmgDSPCoreAdminState=cmgDSPCoreAdminState, cmgCrlAccessDenied=cmgCrlAccessDenied, cmgSLAMonitorServerInetAddressType=cmgSLAMonitorServerInetAddressType, cmgAnalogPorts=cmgAnalogPorts, cmgModelNumber=cmgModelNumber, cmgDsuLoopbackPattern=cmgDsuLoopbackPattern, cmgSerialNumber=cmgSerialNumber, cmgExpansionUnits=cmgExpansionUnits, cmgHWSuffix=cmgHWSuffix, cmgMgRelease=cmgMgRelease, cmgProcessorConfig=cmgProcessorConfig, cmgModuleAutoResetClear=cmgModuleAutoResetClear, cmgDspTempShutdownThresh=cmgDspTempShutdownThresh, cmgAnalogReceiveGain=cmgAnalogReceiveGain, cmgSLAMonitorState=cmgSLAMonitorState, cmgSyncSignalExcess=cmgSyncSignalExcess, cmgModuleReset=cmgModuleReset, cmgDsuCTS=cmgDsuCTS, cmgClockSwitching=cmgClockSwitching, cmgPowerDsp=cmgPowerDsp, cmgSyncSignalFault=cmgSyncSignalFault, cmgConfigDownloadSuccess=cmgConfigDownloadSuccess, cmgVoipSlot=cmgVoipSlot, cmgFirmwareDownloadBegun=cmgFirmwareDownloadBegun, cmgVoipRemoteRetryDelay=cmgVoipRemoteRetryDelay, cmgDSPCoreChannelsInUse=cmgDSPCoreChannelsInUse, cmgDhcpSson=cmgDhcpSson, cmgDsuNetworkInitiatedLoopback=cmgDsuNetworkInitiatedLoopback, cmgProcessorClock=cmgProcessorClock, cmgDsuDataRate=cmgDsuDataRate, cmgCpuTempWarningThresh=cmgCpuTempWarningThresh, cmgMediaModulePowerFault=cmgMediaModulePowerFault, cmgExpansionSerialNumber=cmgExpansionSerialNumber, cmgHardwareStatusMask=cmgHardwareStatusMask, cmgModuleParameterClear=cmgModuleParameterClear, cmgSyncWarnClear=cmgSyncWarnClear, cmgModuleFaultMask=cmgModuleFaultMask, cmgTrapModule=cmgTrapModule, cmgAnalogSlot=cmgAnalogSlot, cmgIccMissingFault=cmgIccMissingFault, cmgModuleManualReset=cmgModuleManualReset, cmgH248LinkErrorCode=cmgH248LinkErrorCode, cmgDsuInvertRxD=cmgDsuInvertRxD, CmgItuPerceivedSeverity=CmgItuPerceivedSeverity, cmgH248LinkDown=cmgH248LinkDown, cmgVoipAvgOccFault=cmgVoipAvgOccFault, g700MediaGatewayMIB=g700MediaGatewayMIB, cmgCpuTempWarningClear=cmgCpuTempWarningClear, PYSNMP_MODULE_ID=cmgmib, cmgMgpFaultMask=cmgMgpFaultMask, cmgModuleType=cmgModuleType, cmgVoipRemoteRtcpMonitorPortInetAddress=cmgVoipRemoteRtcpMonitorPortInetAddress, cmgVoipMACAddress=cmgVoipMACAddress, cmgConfigUploadBegun=cmgConfigUploadBegun, cmgExpansionModelNumber=cmgExpansionModelNumber, cmgVoipTotalChannelsEnforcedByCM=cmgVoipTotalChannelsEnforcedByCM, cmgDsuDteDtrFault=cmgDsuDteDtrFault, cmgDsuInvertTxD=cmgDsuInvertTxD, cmgActiveControllerAddress=cmgActiveControllerAddress, cmgStatic802Vlan=cmgStatic802Vlan, cmgTransitionPoint=cmgTransitionPoint, cmgCpuTempShutdownThresh=cmgCpuTempShutdownThresh, cmgTrapTypes=cmgTrapTypes, cmgDsuDteDtrClear=cmgDsuDteDtrClear, cmgProcessRestart=cmgProcessRestart, cmgVoipCoreClear=cmgVoipCoreClear, cmgDescription=cmgDescription, cmgVoipHyperactivity=cmgVoipHyperactivity, cmgModuleNumberOfChannels=cmgModuleNumberOfChannels, cmgDsuPortStatusTable=cmgDsuPortStatusTable, cmgAnalogPortEntry=cmgAnalogPortEntry, cmgVoipRemoteRtcpParameters=cmgVoipRemoteRtcpParameters, cmgVoipRemoteRtcpMonitorInetAddressType=cmgVoipRemoteRtcpMonitorInetAddressType, cmgDsuDataFormat=cmgDsuDataFormat, cmgCurrentIpAddress=cmgCurrentIpAddress, cmgNoControllerFault=cmgNoControllerFault, cmgVoipIpConfigFault=cmgVoipIpConfigFault, cmgCcPulseDuration=cmgCcPulseDuration, cmgVoipRemote802Priority=cmgVoipRemote802Priority, cmgModuleHWSuffix=cmgModuleHWSuffix, cmgTimeslotUpperThreshold=cmgTimeslotUpperThreshold, cmgVoipAvgOccClear=cmgVoipAvgOccClear, cmg8260PowerClear=cmg8260PowerClear, cmgSyncSignalClear=cmgSyncSignalClear, cmgDsuAutoReset=cmgDsuAutoReset, cmgCcPort=cmgCcPort, cmgVoipRemoteRtcpMonitorIpAddress=cmgVoipRemoteRtcpMonitorIpAddress, cmgVoipDSPCoreTable=cmgVoipDSPCoreTable, cmgContactClosures=cmgContactClosures, cmgTimeslotLowerThreshold=cmgTimeslotLowerThreshold, cmgVoipCurrentInetAddressType=cmgVoipCurrentInetAddressType, g700MediaGateway=g700MediaGateway, cmgTrapManagerTable=cmgTrapManagerTable, cmgModuleFWVersion=cmgModuleFWVersion, cmgVoipOccFault=cmgVoipOccFault, cmgAnalogPort=cmgAnalogPort, cmgUseDhcpForMgcList=cmgUseDhcpForMgcList, cmgAnalogTransmitGain=cmgAnalogTransmitGain, cmgDsuFpgaConfigureClear=cmgDsuFpgaConfigureClear, cmgPrimaryClockSource=cmgPrimaryClockSource, cmgAnalogPortTable=cmgAnalogPortTable, cmgTrapInUseTimeslots=cmgTrapInUseTimeslots)
mibBuilder.exportSymbols("G700-MG-MIB", cmgModulePostClear=cmgModulePostClear, cmgAnalogEchoCancellerControl=cmgAnalogEchoCancellerControl, cmgVoipRemoteEfDscp=cmgVoipRemoteEfDscp, cmgIccAutoReset=cmgIccAutoReset, cmgTrapDefinitions=cmgTrapDefinitions, cmgTimeslotAvailabilityFault=cmgTimeslotAvailabilityFault, cmgTrapOnIccMissing=cmgTrapOnIccMissing, cmgModuleDescription=cmgModuleDescription, cmgHardwareFanLowSpeedLevel=cmgHardwareFanLowSpeedLevel, cmgDSPCoreDemandTest=cmgDSPCoreDemandTest, cmgEtrAdminState=cmgEtrAdminState, cmgDspPowerClear=cmgDspPowerClear, cmgIccMissingClear=cmgIccMissingClear, cmgVoipEchoCancellerControl=cmgVoipEchoCancellerControl, cmgActiveControllerSoftwareVersion=cmgActiveControllerSoftwareVersion, cmgVoipLocalRtcpMonitorPortInetAddress=cmgVoipLocalRtcpMonitorPortInetAddress, cmgMgpPowerClear=cmgMgpPowerClear, cmgActiveControllerInetAddress=cmgActiveControllerInetAddress, cmgCcAdminState=cmgCcAdminState, cmgVoipRemoteRsvpEnabled=cmgVoipRemoteRsvpEnabled, cmgDsuRLSD=cmgDsuRLSD, cmgReset=cmgReset, cmgExpansions=cmgExpansions, cmgConfigUploadSuccess=cmgConfigUploadSuccess, cmgVoipStaticInetAddress=cmgVoipStaticInetAddress, cmgDsuTestMode=cmgDsuTestMode, cmgVoipLocalParameters=cmgVoipLocalParameters, cmgExpansionHWSuffix=cmgExpansionHWSuffix, cmgEtrStatus=cmgEtrStatus, cmgVoipAverageOccupancy=cmgVoipAverageOccupancy, cmgEtrModule=cmgEtrModule, cmgVoipStaticIpAddress=cmgVoipStaticIpAddress, cmgDsuInvertTxC=cmgDsuInvertTxC, cmgDsuTxD=cmgDsuTxD, cmgFipsErrorType=cmgFipsErrorType, cmgExpansionSlot=cmgExpansionSlot, cmgActiveClockSource=cmgActiveClockSource, cmgDynCacLastUpdate=cmgDynCacLastUpdate, cmgPowerMediaModules=cmgPowerMediaModules, cmgVoipLocalBbeDscp=cmgVoipLocalBbeDscp, cmgTrapLocation=cmgTrapLocation, mibs=mibs, cmgVoipIpConfigClear=cmgVoipIpConfigClear, cmgVoipLocalRtcpEnabled=cmgVoipLocalRtcpEnabled, cmgVoipEngineTable=cmgVoipEngineTable, cmgModuleSerialNumber=cmgModuleSerialNumber, cmgDsuPortInitiatedLoopback=cmgDsuPortInitiatedLoopback, cmgVoipFaultMask=cmgVoipFaultMask, cmgMultipleFanFault=cmgMultipleFanFault, cmgRegistrationFaultInetAddress=cmgRegistrationFaultInetAddress, cmgVoipManualReset=cmgVoipManualReset, cmgModuleNumberOfPorts=cmgModuleNumberOfPorts, cmgDsuChannelAssignments=cmgDsuChannelAssignments, avaya=avaya, cmgRegistrationSuccessInetAddress=cmgRegistrationSuccessInetAddress, cmgConfigDownloadFault=cmgConfigDownloadFault, cmgVoipDspFWVersion=cmgVoipDspFWVersion, cmgConfigDownloadBegun=cmgConfigDownloadBegun, cmgModuleEntry=cmgModuleEntry, cmgRegistrationFault=cmgRegistrationFault, cmgDsuDataTerminalLoopback=cmgDsuDataTerminalLoopback, cmgUseDhcpForVlan=cmgUseDhcpForVlan, cmgVoipEngineReset=cmgVoipEngineReset, cmgPrimaryControllerFault=cmgPrimaryControllerFault, cmgDsu=cmgDsu, cmgDsuDTR=cmgDsuDTR, cmgSLAMonitorPacketCaptureMode=cmgSLAMonitorPacketCaptureMode, cmgMemoryClear=cmgMemoryClear, cmgH248LinkUp=cmgH248LinkUp, cmgDsuFlowControl=cmgDsuFlowControl, cmgETRTable=cmgETRTable, cmgTestThresholdClear=cmgTestThresholdClear, cmgDsuLL=cmgDsuLL, cmgVoipRemoteQosParameters=cmgVoipRemoteQosParameters, cmgHWType=cmgHWType, cmgExpansionHWVintage=cmgExpansionHWVintage, cmgFipsErrorMode=cmgFipsErrorMode, cmgDsuTestTable=cmgDsuTestTable, cmgPsuFanProlongedClear=cmgPsuFanProlongedClear, cmgCertErrorNearExpiry=cmgCertErrorNearExpiry, cmgPsuFanBriefClear=cmgPsuFanBriefClear, cmgDsuRL=cmgDsuRL, cmgFirmwareDownloadFault=cmgFirmwareDownloadFault, cmgVoip=cmgVoip, cmgDsuPortEnable=cmgDsuPortEnable, cmgVoipRemoteRsvpProfile=cmgVoipRemoteRsvpProfile, cmgDsuRTS=cmgDsuRTS, cmgExpansionDemandTestResult=cmgExpansionDemandTestResult, cmgTrapManagerControl=cmgTrapManagerControl, cmgDynCacRBBL=cmgDynCacRBBL, cmgDhcpRequestClear=cmgDhcpRequestClear, cmgVoipOccClear=cmgVoipOccClear, cmgHardware=cmgHardware, cmgCcModule=cmgCcModule, cmgH248LinkStatus=cmgH248LinkStatus, cmgVoipLocalRtcpMonitorInetAddressType=cmgVoipLocalRtcpMonitorInetAddressType, cmgModuleSlot=cmgModuleSlot, cmgPsuFanBriefFault=cmgPsuFanBriefFault, cmgCrlFileSize=cmgCrlFileSize, cmgModuleList=cmgModuleList, cmgDSPCoreDemandTestResult=cmgDSPCoreDemandTestResult, cmgTempShutdownFault=cmgTempShutdownFault, cmgCcRelay=cmgCcRelay, cmgDsuDSR=cmgDsuDSR, cmgVoipCurrentIpAddress=cmgVoipCurrentIpAddress, cmgFanPowerFault=cmgFanPowerFault, cmgVoipRemoteRtcpMonitorInetAddress=cmgVoipRemoteRtcpMonitorInetAddress, cmgSyncExcessClear=cmgSyncExcessClear, cmgFanPowerClear=cmgFanPowerClear, cmgDhcpControllerHosts=cmgDhcpControllerHosts, cmgRemoteSigDscp=cmgRemoteSigDscp, cmgAuxPowerClear=cmgAuxPowerClear, cmgMgpPowerFault=cmgMgpPowerFault, cmgETR=cmgETR, cmgStaticControllerHosts=cmgStaticControllerHosts, cmgVoipLocalRsvpEnabled=cmgVoipLocalRsvpEnabled, cmgMACAddress=cmgMACAddress, cmgExpansionUnitsTable=cmgExpansionUnitsTable, cmgMediaModulePowerClear=cmgMediaModulePowerClear, cmgStackPosition=cmgStackPosition, cmgTimeslotOccupancyFault=cmgTimeslotOccupancyFault, cmgDsuStatusMask=cmgDsuStatusMask, cmgTotalSearchTime=cmgTotalSearchTime, cmgSLAMonitor=cmgSLAMonitor, cmgDsuFpgaConfigureFault=cmgDsuFpgaConfigureFault, cmgDsuYellowAlarmAction=cmgDsuYellowAlarmAction, cmgCurrent802Vlan=cmgCurrent802Vlan, cmgDsuManualReset=cmgDsuManualReset, cmgVoipTotalChannels=cmgVoipTotalChannels, cmgProductId=cmgProductId, cmgQosControl=cmgQosControl, cmgCcStatus=cmgCcStatus, cmgCpuTempWarningFault=cmgCpuTempWarningFault, cmgTestFault=cmgTestFault, cmgEtrNumberOfPairs=cmgEtrNumberOfPairs, cmgRegistrationState=cmgRegistrationState, cmgTraps=cmgTraps, cmgMgBusyout=cmgMgBusyout, cmgFirmwareDownloadWarning=cmgFirmwareDownloadWarning, cmgVoipLocalQosParameters=cmgVoipLocalQosParameters, cmgDsuNearEndDataChannelLoopback=cmgDsuNearEndDataChannelLoopback, cmgAnalogEchoCancellerConfig2=cmgAnalogEchoCancellerConfig2, cmgLocalSig802Priority=cmgLocalSig802Priority, cmgUseDhcpForIpAddress=cmgUseDhcpForIpAddress, cmgDataModuleAwohConflict=cmgDataModuleAwohConflict, cmgPowerVoipComplex=cmgPowerVoipComplex, cmgTimeslotOccupancyClear=cmgTimeslotOccupancyClear, cmgDnsHostname=cmgDnsHostname, cmgTrapV3separator=cmgTrapV3separator, cmgMemoryFault=cmgMemoryFault, cmgVoipRemoteRsvpParameters=cmgVoipRemoteRsvpParameters)
