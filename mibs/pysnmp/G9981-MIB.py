#
# PySNMP MIB module G9981-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/G9981-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
HCPerfTimeElapsed, HCPerfInvalidIntervals, HCPerfValidIntervals, HCPerfCurrentCount, HCPerfIntervalCount = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfTimeElapsed", "HCPerfInvalidIntervals", "HCPerfValidIntervals", "HCPerfCurrentCount", "HCPerfIntervalCount")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Unsigned32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, IpAddress, ObjectIdentity, NotificationType, MibIdentifier, Counter64, Counter32, Gauge32, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "IpAddress", "ObjectIdentity", "NotificationType", "MibIdentifier", "Counter64", "Counter32", "Gauge32", "mib-2")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
g9981MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 208))
g9981MIB.setRevisions(('2013-02-20 00:00',))
if mibBuilder.loadTexts: g9981MIB.setLastUpdated('201302200000Z')
if mibBuilder.loadTexts: g9981MIB.setOrganization('IETF ADSL MIB Working Group')
g9981Objects = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1))
g9981Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 2))
g9981Port = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1, 1))
class MilliSeconds(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

g9981PortNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1, 1, 0))
g9981UpDiffDelayToleranceExceeded = NotificationType((1, 3, 6, 1, 2, 1, 208, 1, 1, 0, 1)).setObjects(("G9981-MIB", "g9981PortConfUpDiffDelayTolerance"), ("G9981-MIB", "g9981PortStatMaxUpDiffDelay"))
if mibBuilder.loadTexts: g9981UpDiffDelayToleranceExceeded.setStatus('current')
g9981DnDiffDelayToleranceExceeded = NotificationType((1, 3, 6, 1, 2, 1, 208, 1, 1, 0, 2)).setObjects(("G9981-MIB", "g9981PortConfDnDiffDelayTolerance"), ("G9981-MIB", "g9981PortStatMaxDnDiffDelay"))
if mibBuilder.loadTexts: g9981DnDiffDelayToleranceExceeded.setStatus('current')
g9981PortConfTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 1), )
if mibBuilder.loadTexts: g9981PortConfTable.setStatus('current')
g9981PortConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9981PortConfEntry.setStatus('current')
g9981PortConfUpDiffDelayTolerance = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1, 1), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9981PortConfUpDiffDelayTolerance.setStatus('current')
g9981PortConfDnDiffDelayTolerance = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1, 2), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9981PortConfDnDiffDelayTolerance.setStatus('current')
g9981PortConfDiffDelayToleranceExceededEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9981PortConfDiffDelayToleranceExceededEnable.setStatus('current')
g9981PortStatTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 2), )
if mibBuilder.loadTexts: g9981PortStatTable.setStatus('current')
g9981PortStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9981PortStatEntry.setStatus('current')
g9981PortStatRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 1), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatRxLostCells.setStatus('current')
g9981PortStatTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 2), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatTxLostCells.setStatus('current')
g9981PortStatMaxUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 3), Unsigned32()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatMaxUpDiffDelay.setStatus('current')
g9981PortStatMaxDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 2, 1, 4), Unsigned32()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortStatMaxDnDiffDelay.setStatus('current')
g9981PM = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 1, 1, 3))
g9981PortPmCurTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1), )
if mibBuilder.loadTexts: g9981PortPmCurTable.setStatus('current')
g9981PortPmCurEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9981PortPmCurEntry.setStatus('current')
g9981PortPmCur15MinValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 1), HCPerfValidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinValidIntervals.setStatus('current')
g9981PortPmCur15MinInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 2), HCPerfInvalidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinInvalidIntervals.setStatus('current')
g9981PortPmCur15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 3), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinTimeElapsed.setStatus('current')
g9981PortPmCur15MinRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 4), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinRxLostCells.setStatus('current')
g9981PortPmCur15MinTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 5), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinTxLostCells.setStatus('current')
g9981PortPmCur15MinUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 6), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinUpDiffDelay.setStatus('current')
g9981PortPmCur15MinDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 7), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur15MinDnDiffDelay.setStatus('current')
g9981PortPmCur1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayValidIntervals.setStatus('current')
g9981PortPmCur1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayInvalidIntervals.setStatus('current')
g9981PortPmCur1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 10), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayTimeElapsed.setStatus('current')
g9981PortPmCur1DayRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 11), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayRxLostCells.setStatus('current')
g9981PortPmCur1DayTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 12), HCPerfCurrentCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayTxLostCells.setStatus('current')
g9981PortPmCur1DayUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 13), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayUpDiffDelay.setStatus('current')
g9981PortPmCur1DayDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 1, 1, 14), HCPerfCurrentCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPmCur1DayDnDiffDelay.setStatus('current')
g9981PortPm15MinTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2), )
if mibBuilder.loadTexts: g9981PortPm15MinTable.setStatus('current')
g9981PortPm15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9981-MIB", "g9981PortPm15MinIntervalIndex"))
if mibBuilder.loadTexts: g9981PortPm15MinEntry.setStatus('current')
g9981PortPm15MinIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: g9981PortPm15MinIntervalIndex.setStatus('current')
g9981PortPm15MinIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalMoniTime.setStatus('current')
g9981PortPm15MinIntervalRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 3), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalRxLostCells.setStatus('current')
g9981PortPm15MinIntervalTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 4), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalTxLostCells.setStatus('current')
g9981PortPm15MinIntervalUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 5), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalUpDiffDelay.setStatus('current')
g9981PortPm15MinIntervalDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 6), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalDnDiffDelay.setStatus('current')
g9981PortPm15MinIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm15MinIntervalValid.setStatus('current')
g9981PortPm1DayTable = MibTable((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3), )
if mibBuilder.loadTexts: g9981PortPm1DayTable.setStatus('current')
g9981PortPm1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9981-MIB", "g9981PortPm1DayIntervalIndex"))
if mibBuilder.loadTexts: g9981PortPm1DayEntry.setStatus('current')
g9981PortPm1DayIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: g9981PortPm1DayIntervalIndex.setStatus('current')
g9981PortPm1DayIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalMoniTime.setStatus('current')
g9981PortPm1DayIntervalRxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 3), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalRxLostCells.setStatus('current')
g9981PortPm1DayIntervalTxLostCells = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 4), HCPerfIntervalCount()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalTxLostCells.setStatus('current')
g9981PortPm1DayIntervalUpDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 5), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalUpDiffDelay.setStatus('current')
g9981PortPm1DayIntervalDnDiffDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 6), HCPerfIntervalCount()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalDnDiffDelay.setStatus('current')
g9981PortPm1DayIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 208, 1, 1, 3, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9981PortPm1DayIntervalValid.setStatus('current')
g9981Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 2, 1))
g9981Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 208, 2, 2))
g9981BasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 1)).setObjects(("G9981-MIB", "g9981PortStatRxLostCells"), ("G9981-MIB", "g9981PortStatTxLostCells"), ("G9981-MIB", "g9981PortStatMaxUpDiffDelay"), ("G9981-MIB", "g9981PortStatMaxDnDiffDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981BasicGroup = g9981BasicGroup.setStatus('current')
g9981AlarmConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 2)).setObjects(("G9981-MIB", "g9981PortConfUpDiffDelayTolerance"), ("G9981-MIB", "g9981PortConfDnDiffDelayTolerance"), ("G9981-MIB", "g9981PortConfDiffDelayToleranceExceededEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981AlarmConfGroup = g9981AlarmConfGroup.setStatus('current')
g9981NotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 3)).setObjects(("G9981-MIB", "g9981UpDiffDelayToleranceExceeded"), ("G9981-MIB", "g9981DnDiffDelayToleranceExceeded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981NotificationGroup = g9981NotificationGroup.setStatus('current')
g9981PerfCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 4)).setObjects(("G9981-MIB", "g9981PortPmCur15MinValidIntervals"), ("G9981-MIB", "g9981PortPmCur15MinInvalidIntervals"), ("G9981-MIB", "g9981PortPmCur15MinTimeElapsed"), ("G9981-MIB", "g9981PortPmCur15MinRxLostCells"), ("G9981-MIB", "g9981PortPmCur15MinTxLostCells"), ("G9981-MIB", "g9981PortPmCur15MinUpDiffDelay"), ("G9981-MIB", "g9981PortPmCur15MinDnDiffDelay"), ("G9981-MIB", "g9981PortPmCur1DayValidIntervals"), ("G9981-MIB", "g9981PortPmCur1DayInvalidIntervals"), ("G9981-MIB", "g9981PortPmCur1DayTimeElapsed"), ("G9981-MIB", "g9981PortPmCur1DayRxLostCells"), ("G9981-MIB", "g9981PortPmCur1DayTxLostCells"), ("G9981-MIB", "g9981PortPmCur1DayUpDiffDelay"), ("G9981-MIB", "g9981PortPmCur1DayDnDiffDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981PerfCurrGroup = g9981PerfCurrGroup.setStatus('current')
g9981Perf15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 5)).setObjects(("G9981-MIB", "g9981PortPm15MinIntervalMoniTime"), ("G9981-MIB", "g9981PortPm15MinIntervalRxLostCells"), ("G9981-MIB", "g9981PortPm15MinIntervalTxLostCells"), ("G9981-MIB", "g9981PortPm15MinIntervalUpDiffDelay"), ("G9981-MIB", "g9981PortPm15MinIntervalDnDiffDelay"), ("G9981-MIB", "g9981PortPm15MinIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981Perf15MinGroup = g9981Perf15MinGroup.setStatus('current')
g9981Perf1DayGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 208, 2, 1, 6)).setObjects(("G9981-MIB", "g9981PortPm1DayIntervalMoniTime"), ("G9981-MIB", "g9981PortPm1DayIntervalRxLostCells"), ("G9981-MIB", "g9981PortPm1DayIntervalTxLostCells"), ("G9981-MIB", "g9981PortPm1DayIntervalUpDiffDelay"), ("G9981-MIB", "g9981PortPm1DayIntervalDnDiffDelay"), ("G9981-MIB", "g9981PortPm1DayIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981Perf1DayGroup = g9981Perf1DayGroup.setStatus('current')
g9981Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 208, 2, 2, 1)).setObjects(("G9981-MIB", "g9981BasicGroup"), ("G9981-MIB", "g9981AlarmConfGroup"), ("G9981-MIB", "g9981NotificationGroup"), ("G9981-MIB", "g9981PerfCurrGroup"), ("G9981-MIB", "g9981Perf15MinGroup"), ("G9981-MIB", "g9981Perf1DayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9981Compliance = g9981Compliance.setStatus('current')
mibBuilder.exportSymbols("G9981-MIB", g9981PortPmCur1DayTxLostCells=g9981PortPmCur1DayTxLostCells, g9981PortPm15MinIntervalIndex=g9981PortPm15MinIntervalIndex, g9981AlarmConfGroup=g9981AlarmConfGroup, g9981PortPmCur15MinValidIntervals=g9981PortPmCur15MinValidIntervals, g9981PortPmCur1DayRxLostCells=g9981PortPmCur1DayRxLostCells, g9981PortPm1DayIntervalIndex=g9981PortPm1DayIntervalIndex, g9981DnDiffDelayToleranceExceeded=g9981DnDiffDelayToleranceExceeded, MilliSeconds=MilliSeconds, g9981PortStatTxLostCells=g9981PortStatTxLostCells, g9981PortPm1DayIntervalDnDiffDelay=g9981PortPm1DayIntervalDnDiffDelay, g9981PortStatMaxUpDiffDelay=g9981PortStatMaxUpDiffDelay, g9981PortPm15MinIntervalTxLostCells=g9981PortPm15MinIntervalTxLostCells, g9981PortPm15MinIntervalDnDiffDelay=g9981PortPm15MinIntervalDnDiffDelay, g9981PortPm15MinTable=g9981PortPm15MinTable, g9981NotificationGroup=g9981NotificationGroup, g9981PortPm15MinIntervalUpDiffDelay=g9981PortPm15MinIntervalUpDiffDelay, g9981PortStatTable=g9981PortStatTable, g9981PortConfEntry=g9981PortConfEntry, g9981Objects=g9981Objects, g9981PortConfDiffDelayToleranceExceededEnable=g9981PortConfDiffDelayToleranceExceededEnable, g9981PortPmCur15MinTimeElapsed=g9981PortPmCur15MinTimeElapsed, g9981PortPmCur1DayUpDiffDelay=g9981PortPmCur1DayUpDiffDelay, g9981PortPmCur1DayInvalidIntervals=g9981PortPmCur1DayInvalidIntervals, g9981PortPmCurEntry=g9981PortPmCurEntry, g9981PortPm15MinIntervalValid=g9981PortPm15MinIntervalValid, g9981PortPm1DayIntervalMoniTime=g9981PortPm1DayIntervalMoniTime, g9981PortConfTable=g9981PortConfTable, g9981PortPmCur15MinDnDiffDelay=g9981PortPmCur15MinDnDiffDelay, g9981PortPm1DayIntervalTxLostCells=g9981PortPm1DayIntervalTxLostCells, g9981Compliances=g9981Compliances, g9981Groups=g9981Groups, g9981PortPmCur15MinRxLostCells=g9981PortPmCur15MinRxLostCells, g9981PortPm15MinEntry=g9981PortPm15MinEntry, g9981PM=g9981PM, g9981Port=g9981Port, g9981PortPmCur1DayDnDiffDelay=g9981PortPmCur1DayDnDiffDelay, g9981PortPm15MinIntervalRxLostCells=g9981PortPm15MinIntervalRxLostCells, g9981PortStatEntry=g9981PortStatEntry, g9981PortConfUpDiffDelayTolerance=g9981PortConfUpDiffDelayTolerance, g9981Perf15MinGroup=g9981Perf15MinGroup, g9981PortPmCur15MinTxLostCells=g9981PortPmCur15MinTxLostCells, g9981PortPm1DayIntervalUpDiffDelay=g9981PortPm1DayIntervalUpDiffDelay, g9981PortNotifications=g9981PortNotifications, g9981PortPm1DayIntervalRxLostCells=g9981PortPm1DayIntervalRxLostCells, g9981Perf1DayGroup=g9981Perf1DayGroup, g9981PortPm15MinIntervalMoniTime=g9981PortPm15MinIntervalMoniTime, g9981PerfCurrGroup=g9981PerfCurrGroup, g9981Compliance=g9981Compliance, g9981PortPm1DayIntervalValid=g9981PortPm1DayIntervalValid, g9981PortConfDnDiffDelayTolerance=g9981PortConfDnDiffDelayTolerance, g9981PortPm1DayTable=g9981PortPm1DayTable, g9981UpDiffDelayToleranceExceeded=g9981UpDiffDelayToleranceExceeded, g9981PortPmCur15MinInvalidIntervals=g9981PortPmCur15MinInvalidIntervals, PYSNMP_MODULE_ID=g9981MIB, g9981PortPmCur1DayTimeElapsed=g9981PortPmCur1DayTimeElapsed, g9981PortPm1DayEntry=g9981PortPm1DayEntry, g9981Conformance=g9981Conformance, g9981PortStatMaxDnDiffDelay=g9981PortStatMaxDnDiffDelay, g9981PortPmCur1DayValidIntervals=g9981PortPmCur1DayValidIntervals, g9981BasicGroup=g9981BasicGroup, g9981PortStatRxLostCells=g9981PortStatRxLostCells, g9981PortPmCurTable=g9981PortPmCurTable, g9981MIB=g9981MIB, g9981PortPmCur15MinUpDiffDelay=g9981PortPmCur15MinUpDiffDelay)
