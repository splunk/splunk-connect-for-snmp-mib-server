#
# PySNMP MIB module ADSL-DMT-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADSL-DMT-LINE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:58:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adslLineConfProfileName, adslLCSMib = mibBuilder.importSymbols("ADSL-LINE-MIB", "adslLineConfProfileName", "adslLCSMib")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Counter32, ObjectIdentity, Unsigned32, Counter64, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Gauge32, Bits, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "ObjectIdentity", "Unsigned32", "Counter64", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Gauge32", "Bits", "TimeTicks", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
adslLineDmtMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2))
if mibBuilder.loadTexts: adslLineDmtMIB.setLastUpdated('9809251000Z')
if mibBuilder.loadTexts: adslLineDmtMIB.setOrganization('ADSL Forum')
adslLineDmtMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1))
adslLineDmtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 1), )
if mibBuilder.loadTexts: adslLineDmtTable.setStatus('current')
adslLineDmtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: adslLineDmtEntry.setStatus('current')
adslLineDmtTrellis = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trellisOn", 1), ("trellisOff", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslLineDmtTrellis.setStatus('current')
adslLineDmtEOC = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("transaction", 2), ("streaming", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslLineDmtEOC.setStatus('current')
adslAtucDmtPhysTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 2), )
if mibBuilder.loadTexts: adslAtucDmtPhysTable.setStatus('current')
adslAtucDmtPhysEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: adslAtucDmtPhysEntry.setStatus('current')
adslAtucDmtIssue = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("t1413Issue1", 2), ("t1413Issue2", 3), ("t1413Issue3", 4), ("gdmtIssue1", 5), ("etsiIssue1", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucDmtIssue.setStatus('current')
adslAtucDmtState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("other", 1), ("powerUp", 2), ("configure", 3), ("idle", 4), ("quiet", 5), ("tone", 6), ("activating", 7), ("training", 8), ("analyzing", 9), ("exchange", 10), ("steadyState", 11), ("notResponding", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucDmtState.setStatus('current')
adslAtucDmtInterleavePath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("as0", 2), ("as1", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucDmtInterleavePath.setStatus('current')
adslAtucDmtFastPath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("as0", 2), ("as1", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucDmtFastPath.setStatus('current')
adslAturDmtPhysTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 3), )
if mibBuilder.loadTexts: adslAturDmtPhysTable.setStatus('current')
adslAturDmtPhysEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: adslAturDmtPhysEntry.setStatus('current')
adslAturDmtIssue = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("t1413Issue1", 2), ("t1413Issue2", 3), ("t1413Issue3", 4), ("gdmtIssue1", 5), ("etsiIssue1", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturDmtIssue.setStatus('current')
adslAturDmtState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("activating", 2), ("training", 3), ("analyzing", 4), ("exchange", 5), ("steadyState", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturDmtState.setStatus('current')
adslAturDmtInterleavePath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ls0", 2), ("ls1", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturDmtInterleavePath.setStatus('current')
adslAturDmtFastPath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ls0", 2), ("ls1", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturDmtFastPath.setStatus('current')
adslAtucDmtChanTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 4))
adslAturDmtChanTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 5))
adslAtucDmtPerfDataTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 6))
adslAturDmtPerfDataTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 7))
adslAtucDmtIntervalTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 8))
adslAturDmtIntervalTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 9))
adslAtucDmtChanPerfDataTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 10))
adslAturDmtChanPerfDataTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 11))
adslAtucDmtChanIntervalTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 12))
adslAturDmtChanIntervalTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 13))
adslLineDmtConfProfileIndexNext = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 14))
adslLineDmtConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15), )
if mibBuilder.loadTexts: adslLineDmtConfProfileTable.setStatus('current')
adslLineDmtConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1), ).setIndexNames((1, "ADSL-LINE-MIB", "adslLineConfProfileName"))
if mibBuilder.loadTexts: adslLineDmtConfProfileEntry.setStatus('current')
adslAtucDmtConfFreqBins = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAtucDmtConfFreqBins.setStatus('current')
adslAturDmtConfFreqBins = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32).clone(hexValue="0000000000000000000000000000000000000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAturDmtConfFreqBins.setStatus('current')
adslLineDmtConfMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("echoCancel", 1), ("freqDivMux", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslLineDmtConfMode.setStatus('current')
adslLineDmtConfTrellis = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslLineDmtConfTrellis.setStatus('current')
adslLineDmtConfEOC = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("byte", 1), ("streaming", 2))).clone('byte')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslLineDmtConfEOC.setStatus('current')
adslAtucDmtConfInterleavePath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("as0", 2), ("as1", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAtucDmtConfInterleavePath.setStatus('current')
adslAtucDmtConfFastPath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("as0", 2), ("as1", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAtucDmtConfFastPath.setStatus('current')
adslAturDmtConfInterleavePath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ls0", 2), ("ls1", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAturDmtConfInterleavePath.setStatus('current')
adslAturDmtConfFastPath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ls0", 2), ("ls1", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAturDmtConfFastPath.setStatus('current')
adslLineDmtAlarmConfProfileIndexNext = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 16))
adslLineDmtAlarmConfProfileTable = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 1, 17))
adslDmtLineMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 2))
adslDmtLineMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 2, 0))
adslLineDmtMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3))
adslLineDmtMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 1))
adslLineDmtMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 2))
adslDMTLineMibCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 1, 1)).setObjects(("ADSL-DMT-LINE-MIB", "adslLineDmtGroup"), ("ADSL-DMT-LINE-MIB", "adslAtucDmtPhysGroup"), ("ADSL-DMT-LINE-MIB", "adslAturDmtPhysGroup"), ("ADSL-DMT-LINE-MIB", "adslLineDmtConfProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslDMTLineMibCompliance = adslDMTLineMibCompliance.setStatus('current')
adslLineDmtMIBAturCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 1, 2)).setObjects(("ADSL-DMT-LINE-MIB", "adslLineDmtGroup"), ("ADSL-DMT-LINE-MIB", "adslAturDmtPhysGroup"), ("ADSL-DMT-LINE-MIB", "adslLineDmtConfProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslLineDmtMIBAturCompliance = adslLineDmtMIBAturCompliance.setStatus('current')
adslLineDmtGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 2, 1)).setObjects(("ADSL-DMT-LINE-MIB", "adslLineDmtTrellis"), ("ADSL-DMT-LINE-MIB", "adslLineDmtEOC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslLineDmtGroup = adslLineDmtGroup.setStatus('current')
adslAtucDmtPhysGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 2, 2)).setObjects(("ADSL-DMT-LINE-MIB", "adslAtucDmtIssue"), ("ADSL-DMT-LINE-MIB", "adslAtucDmtState"), ("ADSL-DMT-LINE-MIB", "adslAtucDmtInterleavePath"), ("ADSL-DMT-LINE-MIB", "adslAtucDmtFastPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslAtucDmtPhysGroup = adslAtucDmtPhysGroup.setStatus('current')
adslAturDmtPhysGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 2, 3)).setObjects(("ADSL-DMT-LINE-MIB", "adslAturDmtIssue"), ("ADSL-DMT-LINE-MIB", "adslAturDmtState"), ("ADSL-DMT-LINE-MIB", "adslAturDmtInterleavePath"), ("ADSL-DMT-LINE-MIB", "adslAturDmtFastPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslAturDmtPhysGroup = adslAturDmtPhysGroup.setStatus('current')
adslLineDmtConfProfileGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 1, 1, 16, 2, 3, 2, 4)).setObjects(("ADSL-DMT-LINE-MIB", "adslAtucDmtConfFreqBins"), ("ADSL-DMT-LINE-MIB", "adslAturDmtConfFreqBins"), ("ADSL-DMT-LINE-MIB", "adslLineDmtConfMode"), ("ADSL-DMT-LINE-MIB", "adslLineDmtConfTrellis"), ("ADSL-DMT-LINE-MIB", "adslLineDmtConfEOC"), ("ADSL-DMT-LINE-MIB", "adslAtucDmtConfInterleavePath"), ("ADSL-DMT-LINE-MIB", "adslAtucDmtConfFastPath"), ("ADSL-DMT-LINE-MIB", "adslAturDmtConfInterleavePath"), ("ADSL-DMT-LINE-MIB", "adslAturDmtConfFastPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslLineDmtConfProfileGroup = adslLineDmtConfProfileGroup.setStatus('current')
mibBuilder.exportSymbols("ADSL-DMT-LINE-MIB", adslAtucDmtChanPerfDataTable=adslAtucDmtChanPerfDataTable, adslAtucDmtConfFreqBins=adslAtucDmtConfFreqBins, adslLineDmtMIBCompliances=adslLineDmtMIBCompliances, adslAtucDmtChanTable=adslAtucDmtChanTable, adslLineDmtConfEOC=adslLineDmtConfEOC, adslLineDmtMIB=adslLineDmtMIB, adslAtucDmtInterleavePath=adslAtucDmtInterleavePath, adslAtucDmtPhysTable=adslAtucDmtPhysTable, adslAturDmtIntervalTable=adslAturDmtIntervalTable, adslAturDmtConfInterleavePath=adslAturDmtConfInterleavePath, adslAtucDmtState=adslAtucDmtState, adslDmtLineMIBNotifications=adslDmtLineMIBNotifications, adslDmtLineMIBNotificationsPrefix=adslDmtLineMIBNotificationsPrefix, adslAturDmtChanIntervalTable=adslAturDmtChanIntervalTable, adslLineDmtConfProfileGroup=adslLineDmtConfProfileGroup, adslAturDmtIssue=adslAturDmtIssue, adslAtucDmtChanIntervalTable=adslAtucDmtChanIntervalTable, adslLineDmtMIBGroups=adslLineDmtMIBGroups, adslAturDmtPhysTable=adslAturDmtPhysTable, adslAtucDmtPhysGroup=adslAtucDmtPhysGroup, adslAturDmtPerfDataTable=adslAturDmtPerfDataTable, adslLineDmtEntry=adslLineDmtEntry, adslLineDmtMIBObjects=adslLineDmtMIBObjects, PYSNMP_MODULE_ID=adslLineDmtMIB, adslAturDmtChanPerfDataTable=adslAturDmtChanPerfDataTable, adslLineDmtTable=adslLineDmtTable, adslAturDmtFastPath=adslAturDmtFastPath, adslLineDmtConfMode=adslLineDmtConfMode, adslLineDmtTrellis=adslLineDmtTrellis, adslAtucDmtIntervalTable=adslAtucDmtIntervalTable, adslDMTLineMibCompliance=adslDMTLineMibCompliance, adslLineDmtConfProfileEntry=adslLineDmtConfProfileEntry, adslAtucDmtPhysEntry=adslAtucDmtPhysEntry, adslAtucDmtFastPath=adslAtucDmtFastPath, adslAtucDmtPerfDataTable=adslAtucDmtPerfDataTable, adslAturDmtPhysEntry=adslAturDmtPhysEntry, adslLineDmtConfTrellis=adslLineDmtConfTrellis, adslAtucDmtConfFastPath=adslAtucDmtConfFastPath, adslLineDmtEOC=adslLineDmtEOC, adslLineDmtAlarmConfProfileIndexNext=adslLineDmtAlarmConfProfileIndexNext, adslLineDmtAlarmConfProfileTable=adslLineDmtAlarmConfProfileTable, adslAturDmtPhysGroup=adslAturDmtPhysGroup, adslLineDmtMIBAturCompliance=adslLineDmtMIBAturCompliance, adslLineDmtMIBConformance=adslLineDmtMIBConformance, adslAtucDmtIssue=adslAtucDmtIssue, adslAturDmtConfFreqBins=adslAturDmtConfFreqBins, adslAturDmtConfFastPath=adslAturDmtConfFastPath, adslAturDmtChanTable=adslAturDmtChanTable, adslLineDmtConfProfileIndexNext=adslLineDmtConfProfileIndexNext, adslLineDmtGroup=adslLineDmtGroup, adslAturDmtState=adslAturDmtState, adslAturDmtInterleavePath=adslAturDmtInterleavePath, adslLineDmtConfProfileTable=adslLineDmtConfProfileTable, adslAtucDmtConfInterleavePath=adslAtucDmtConfInterleavePath)
