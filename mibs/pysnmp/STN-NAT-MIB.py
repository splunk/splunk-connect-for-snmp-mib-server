#
# PySNMP MIB module STN-NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, iso, MibIdentifier, Gauge32, IpAddress, Bits, Counter64, Unsigned32, Counter32, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "iso", "MibIdentifier", "Gauge32", "IpAddress", "Bits", "Counter64", "Unsigned32", "Counter32", "Integer32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
stnNotification, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnNotification")
stnRouterNAT, = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnRouterNAT")
stnNat = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1))
if mibBuilder.loadTexts: stnNat.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnNat.setOrganization('Spring Tide Networks, Inc.')
stnNatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1))
stnNatMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 2))
stnNatMibTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 3))
class NatTransMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("pooled", 1), ("static", 2), ("pat", 3))

stnNatL2Table = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1), )
if mibBuilder.loadTexts: stnNatL2Table.setStatus('current')
stnNatL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1), ).setIndexNames((0, "STN-NAT-MIB", "stnNatL2IfIndex"))
if mibBuilder.loadTexts: stnNatL2Entry.setStatus('current')
stnNatL2IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2IfIndex.setStatus('current')
stnNatL2InsidePktMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2InsidePktMisses.setStatus('current')
stnNatL2InsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2InsidePktHits.setStatus('current')
stnNatL2OutsidePktMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2OutsidePktMisses.setStatus('current')
stnNatL2OutsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2OutsidePktHits.setStatus('current')
stnNatL2UntransInsidePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2UntransInsidePkts.setStatus('current')
stnNatL2UntransOutsidePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2UntransOutsidePkts.setStatus('current')
stnNatL2InsideAlgPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2InsideAlgPkts.setStatus('current')
stnNatL2OutsideAlgPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2OutsideAlgPkts.setStatus('current')
stnNatL2FlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatL2FlowId.setStatus('current')
stnNatGroupTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2), )
if mibBuilder.loadTexts: stnNatGroupTable.setStatus('current')
stnNatGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1), ).setIndexNames((0, "STN-NAT-MIB", "stnNatGroupSubnetIfInstance"), (0, "STN-NAT-MIB", "stnNatGroupOutsideBaseAddress"))
if mibBuilder.loadTexts: stnNatGroupEntry.setStatus('current')
stnNatGroupSubnetIfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupSubnetIfInstance.setStatus('current')
stnNatGroupOutsideBaseAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupOutsideBaseAddress.setStatus('current')
stnNatGroupOutsideEndAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupOutsideEndAddress.setStatus('current')
stnNatGroupInsideBaseAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupInsideBaseAddress.setStatus('current')
stnNatGroupInsideEndAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupInsideEndAddress.setStatus('current')
stnNatGroupTransMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 6), NatTransMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupTransMode.setStatus('current')
stnNatGroupAddrIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupAddrIdleTime.setStatus('current')
stnNatGroupAddrTransAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupAddrTransAvailable.setStatus('current')
stnNatGroupMaxFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupMaxFtpSessions.setStatus('current')
stnNatGroupMaxFtpSessionsPerInsideAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupMaxFtpSessionsPerInsideAddr.setStatus('current')
stnNatGroupFtpControlSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupFtpControlSessionIdleTime.setStatus('current')
stnNatGroupCurrentFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupCurrentFtpSessions.setStatus('current')
stnNatGroupTotalFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupTotalFtpSessions.setStatus('current')
stnNatGroupMissedFtpSessionLookups = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupMissedFtpSessionLookups.setStatus('current')
stnNatGroupNoIdleFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupNoIdleFtpSessions.setStatus('current')
stnNatGroupNoIdleOutsideAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupNoIdleOutsideAddrs.setStatus('current')
stnNatGroupFoundIdleOutsideAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupFoundIdleOutsideAddrs.setStatus('current')
stnNatGroupInsidePktMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupInsidePktMisses.setStatus('current')
stnNatGroupInsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupInsidePktHits.setStatus('current')
stnNatGroupOutsidePktMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupOutsidePktMisses.setStatus('current')
stnNatGroupOutsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupOutsidePktHits.setStatus('current')
stnNatGroupInvalidOutsidePktMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupInvalidOutsidePktMisses.setStatus('current')
stnNatGroupInsideFlowOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupInsideFlowOrigin.setStatus('current')
stnNatGroupPortBaseNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupPortBaseNumber.setStatus('current')
stnNatGroupPortEndNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupPortEndNumber.setStatus('current')
stnNatGroupMaxInsideAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupMaxInsideAddrs.setStatus('current')
stnNatGroupMaxPortsPerInsideAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupMaxPortsPerInsideAddr.setStatus('current')
stnNatGroupPortLimitReached = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupPortLimitReached.setStatus('current')
stnNatGroupInsideAddrLimitReached = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatGroupInsideAddrLimitReached.setStatus('current')
stnNatOutTransTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3), )
if mibBuilder.loadTexts: stnNatOutTransTable.setStatus('current')
stnNatOutTransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1), ).setIndexNames((0, "STN-NAT-MIB", "stnNatOutTransSubnetIfInstance"), (0, "STN-NAT-MIB", "stnNatOutTransOutsideBaseAddress"), (0, "STN-NAT-MIB", "stnNatOutTransOutsideAddress"), (0, "STN-NAT-MIB", "stnNatOutTransOutsidePortNumber"))
if mibBuilder.loadTexts: stnNatOutTransEntry.setStatus('current')
stnNatOutTransSubnetIfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransSubnetIfInstance.setStatus('current')
stnNatOutTransOutsideBaseAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransOutsideBaseAddress.setStatus('current')
stnNatOutTransOutsideAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransOutsideAddress.setStatus('current')
stnNatOutTransInsideAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransInsideAddress.setStatus('current')
stnNatOutTransMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 5), NatTransMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransMode.setStatus('current')
stnNatOutTransState = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("leased", 1), ("expired", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransState.setStatus('current')
stnNatOutTransUpTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransUpTimeSec.setStatus('current')
stnNatOutTransSecsSinceLastHit = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransSecsSinceLastHit.setStatus('current')
stnNatOutTransCurrentFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransCurrentFtpSessions.setStatus('current')
stnNatOutTransTotalFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransTotalFtpSessions.setStatus('current')
stnNatOutTransInsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransInsidePktHits.setStatus('current')
stnNatOutTransOutsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransOutsidePktHits.setStatus('current')
stnNatOutTransOutsidePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransOutsidePortNumber.setStatus('current')
stnNatOutTransInsidePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransInsidePortNumber.setStatus('current')
stnNatOutTransOutsidePortsInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransOutsidePortsInuse.setStatus('current')
stnNatOutTransInsidePortsInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransInsidePortsInuse.setStatus('current')
stnNatOutTransInsidePortLimitReached = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatOutTransInsidePortLimitReached.setStatus('current')
stnNatInTransTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4), )
if mibBuilder.loadTexts: stnNatInTransTable.setStatus('current')
stnNatInTransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1), ).setIndexNames((0, "STN-NAT-MIB", "stnNatInTransSubnetIfInstance"), (0, "STN-NAT-MIB", "stnNatInTransOutsideBaseAddress"), (0, "STN-NAT-MIB", "stnNatInTransInsideAddress"), (0, "STN-NAT-MIB", "stnNatInTransInsidePortNumber"))
if mibBuilder.loadTexts: stnNatInTransEntry.setStatus('current')
stnNatInTransSubnetIfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransSubnetIfInstance.setStatus('current')
stnNatInTransOutsideBaseAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransOutsideBaseAddress.setStatus('current')
stnNatInTransOutsideAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransOutsideAddress.setStatus('current')
stnNatInTransInsideAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransInsideAddress.setStatus('current')
stnNatInTransMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 5), NatTransMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransMode.setStatus('current')
stnNatInTransState = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("leased", 1), ("expired", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransState.setStatus('current')
stnNatInTransUpTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransUpTimeSec.setStatus('current')
stnNatInTransSecsSinceLastHit = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransSecsSinceLastHit.setStatus('current')
stnNatInTransCurrentFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransCurrentFtpSessions.setStatus('current')
stnNatInTransTotalFtpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransTotalFtpSessions.setStatus('current')
stnNatInTransInsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransInsidePktHits.setStatus('current')
stnNatInTransOutsidePktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransOutsidePktHits.setStatus('current')
stnNatInTransOutsidePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransOutsidePortNumber.setStatus('current')
stnNatInTransInsidePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransInsidePortNumber.setStatus('current')
stnNatInTransOutsidePortsInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransOutsidePortsInuse.setStatus('current')
stnNatInTransInsidePortsInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransInsidePortsInuse.setStatus('current')
stnNatInTransInsidePortLimitReached = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 5, 1, 1, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNatInTransInsidePortLimitReached.setStatus('current')
mibBuilder.exportSymbols("STN-NAT-MIB", stnNatMibTraps=stnNatMibTraps, stnNatGroupInvalidOutsidePktMisses=stnNatGroupInvalidOutsidePktMisses, stnNatOutTransInsidePktHits=stnNatOutTransInsidePktHits, stnNatGroupEntry=stnNatGroupEntry, stnNatOutTransMode=stnNatOutTransMode, stnNatOutTransEntry=stnNatOutTransEntry, stnNatGroupAddrTransAvailable=stnNatGroupAddrTransAvailable, stnNatOutTransInsidePortNumber=stnNatOutTransInsidePortNumber, stnNatGroupOutsidePktHits=stnNatGroupOutsidePktHits, stnNatInTransUpTimeSec=stnNatInTransUpTimeSec, stnNatOutTransOutsidePktHits=stnNatOutTransOutsidePktHits, stnNatGroupTotalFtpSessions=stnNatGroupTotalFtpSessions, stnNatInTransInsidePortLimitReached=stnNatInTransInsidePortLimitReached, stnNatOutTransOutsidePortsInuse=stnNatOutTransOutsidePortsInuse, stnNatGroupInsideAddrLimitReached=stnNatGroupInsideAddrLimitReached, stnNatGroupInsideBaseAddress=stnNatGroupInsideBaseAddress, stnNatInTransInsidePortsInuse=stnNatInTransInsidePortsInuse, stnNatGroupInsidePktHits=stnNatGroupInsidePktHits, stnNatInTransOutsideAddress=stnNatInTransOutsideAddress, stnNatOutTransCurrentFtpSessions=stnNatOutTransCurrentFtpSessions, stnNatInTransOutsidePktHits=stnNatInTransOutsidePktHits, stnNatGroupMaxFtpSessionsPerInsideAddr=stnNatGroupMaxFtpSessionsPerInsideAddr, stnNatOutTransOutsidePortNumber=stnNatOutTransOutsidePortNumber, stnNatL2FlowId=stnNatL2FlowId, stnNatGroupSubnetIfInstance=stnNatGroupSubnetIfInstance, stnNatGroupInsideEndAddress=stnNatGroupInsideEndAddress, stnNatInTransEntry=stnNatInTransEntry, stnNatOutTransOutsideBaseAddress=stnNatOutTransOutsideBaseAddress, stnNatMibConformance=stnNatMibConformance, stnNatL2UntransOutsidePkts=stnNatL2UntransOutsidePkts, stnNatOutTransUpTimeSec=stnNatOutTransUpTimeSec, stnNatL2IfIndex=stnNatL2IfIndex, stnNatOutTransInsidePortsInuse=stnNatOutTransInsidePortsInuse, stnNat=stnNat, stnNatInTransTotalFtpSessions=stnNatInTransTotalFtpSessions, stnNatGroupOutsideEndAddress=stnNatGroupOutsideEndAddress, stnNatOutTransOutsideAddress=stnNatOutTransOutsideAddress, stnNatL2OutsidePktMisses=stnNatL2OutsidePktMisses, stnNatInTransSubnetIfInstance=stnNatInTransSubnetIfInstance, stnNatOutTransState=stnNatOutTransState, stnNatL2InsidePktMisses=stnNatL2InsidePktMisses, stnNatL2Entry=stnNatL2Entry, stnNatInTransCurrentFtpSessions=stnNatInTransCurrentFtpSessions, stnNatGroupFtpControlSessionIdleTime=stnNatGroupFtpControlSessionIdleTime, stnNatGroupCurrentFtpSessions=stnNatGroupCurrentFtpSessions, NatTransMode=NatTransMode, stnNatL2OutsidePktHits=stnNatL2OutsidePktHits, stnNatOutTransSubnetIfInstance=stnNatOutTransSubnetIfInstance, stnNatL2InsidePktHits=stnNatL2InsidePktHits, stnNatGroupMaxPortsPerInsideAddr=stnNatGroupMaxPortsPerInsideAddr, stnNatGroupMaxFtpSessions=stnNatGroupMaxFtpSessions, stnNatGroupPortEndNumber=stnNatGroupPortEndNumber, stnNatInTransSecsSinceLastHit=stnNatInTransSecsSinceLastHit, stnNatGroupFoundIdleOutsideAddrs=stnNatGroupFoundIdleOutsideAddrs, stnNatGroupInsidePktMisses=stnNatGroupInsidePktMisses, stnNatInTransInsidePktHits=stnNatInTransInsidePktHits, stnNatGroupInsideFlowOrigin=stnNatGroupInsideFlowOrigin, stnNatInTransOutsidePortNumber=stnNatInTransOutsidePortNumber, stnNatGroupTable=stnNatGroupTable, stnNatOutTransSecsSinceLastHit=stnNatOutTransSecsSinceLastHit, stnNatGroupOutsideBaseAddress=stnNatGroupOutsideBaseAddress, stnNatGroupNoIdleFtpSessions=stnNatGroupNoIdleFtpSessions, stnNatOutTransInsideAddress=stnNatOutTransInsideAddress, stnNatGroupNoIdleOutsideAddrs=stnNatGroupNoIdleOutsideAddrs, stnNatInTransInsideAddress=stnNatInTransInsideAddress, stnNatL2UntransInsidePkts=stnNatL2UntransInsidePkts, PYSNMP_MODULE_ID=stnNat, stnNatGroupTransMode=stnNatGroupTransMode, stnNatL2InsideAlgPkts=stnNatL2InsideAlgPkts, stnNatGroupMissedFtpSessionLookups=stnNatGroupMissedFtpSessionLookups, stnNatInTransMode=stnNatInTransMode, stnNatInTransOutsidePortsInuse=stnNatInTransOutsidePortsInuse, stnNatGroupMaxInsideAddrs=stnNatGroupMaxInsideAddrs, stnNatInTransInsidePortNumber=stnNatInTransInsidePortNumber, stnNatObjects=stnNatObjects, stnNatL2Table=stnNatL2Table, stnNatInTransOutsideBaseAddress=stnNatInTransOutsideBaseAddress, stnNatOutTransTable=stnNatOutTransTable, stnNatOutTransInsidePortLimitReached=stnNatOutTransInsidePortLimitReached, stnNatInTransTable=stnNatInTransTable, stnNatOutTransTotalFtpSessions=stnNatOutTransTotalFtpSessions, stnNatL2OutsideAlgPkts=stnNatL2OutsideAlgPkts, stnNatGroupOutsidePktMisses=stnNatGroupOutsidePktMisses, stnNatInTransState=stnNatInTransState, stnNatGroupAddrIdleTime=stnNatGroupAddrIdleTime, stnNatGroupPortBaseNumber=stnNatGroupPortBaseNumber, stnNatGroupPortLimitReached=stnNatGroupPortLimitReached)
