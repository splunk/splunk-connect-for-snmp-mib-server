#
# PySNMP MIB module DSX-TE1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DSX-TE1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:39:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
nndsxT1E1IfGroup, = mibBuilder.importSymbols("DSX-TC-MIB", "nndsxT1E1IfGroup")
ntEnterpriseDataTasmanInterfaces, = mibBuilder.importSymbols("NT-ENTERPRISE-DATA-MIB", "ntEnterpriseDataTasmanInterfaces")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Bits, Gauge32, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, ModuleIdentity, IpAddress, Counter64, Integer32, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "Gauge32", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "ModuleIdentity", "IpAddress", "Counter64", "Integer32", "TimeTicks", "iso")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
nndsxT1E1MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1))
nndsxT1E1MIB.setRevisions(('1999-04-23 00:00',))
if mibBuilder.loadTexts: nndsxT1E1MIB.setLastUpdated('9904230000Z')
if mibBuilder.loadTexts: nndsxT1E1MIB.setOrganization('Nortel Networks')
nndsxT1E1Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2))
nndsxT1E1TrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 1))
nndsxT1E1Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 0))
nndsxT1E1IfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1))
nndsxT1E1IfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2))
nndsxT1E1IfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3))
nndsxT1E1IfConfigLineTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfConfigLineTable.setStatus('current')
nndsxT1E1IfConfigLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"))
if mibBuilder.loadTexts: nndsxT1E1IfConfigLineEntry.setStatus('current')
nndsxT1E1IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT1E1IfIndex.setStatus('current')
nndsxT1E1IfConfigServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigServiceMode.setStatus('current')
nndsxT1E1IfConfigLineMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linemode-csu", 1), ("linemode-dsx", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigLineMode.setStatus('current')
nndsxT1E1IfConfigLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("linetype-esf", 2), ("linetype-d4", 3), ("linetype-e1crcmf", 5), ("linetype-e1mf", 6), ("linetype-e1unframed", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigLineType.setStatus('current')
nndsxT1E1IfConfigLineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 5, 3))).clone(namedValues=NamedValues(("linecode-b8zs", 2), ("linecode-ami", 5), ("linecode-hdb3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigLineCode.setStatus('current')
nndsxT1E1IfConfigLBO = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("lbo-zero-db", 1), ("lbo-75-db", 2), ("lbo-15-db", 3), ("lbo-225-db", 4), ("lbo-12-db", 5), ("lbo-43-db", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigLBO.setStatus('current')
nndsxT1E1IfConfigCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("cable-length-none", 0), ("cable-length-0-133-or-0-110", 1), ("cable-length-133-266-or-110-220", 2), ("cable-length-266-399-or-220-330", 3), ("cable-length-399-533-or-330-440", 4), ("cable-length-533-655-or-440-550", 5), ("cable-length-550-660", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigCableLength.setStatus('current')
nndsxT1E1IfConfigRaiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rai-gen-enable", 1), ("rai-det-enable", 2), ("rai-gen-det-enable", 3), ("rai-disable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigRaiAlarm.setStatus('current')
nndsxT1E1IfConfigTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2), ("timing-backplane", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigTransmitClock.setStatus('current')
nndsxT1E1IfConfigTimeSlotMap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfConfigTimeSlotMap.setStatus('current')
nndsxT1E1IfConfigCableType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cable-type-none", 0), ("cable-type-coax", 1), ("cable-type-twistedpair", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfConfigCableType.setStatus('current')
nndsxT1E1IfCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfCircuitId.setStatus('current')
nndsxT1E1IfContactInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfContactInfo.setStatus('current')
nndsxT1E1IfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 76))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfDescription.setStatus('current')
nndsxT1E1IfConfigJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("jitter-none", 0), ("jitter-disable", 1), ("jitter-enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigJitter.setStatus('current')
nndsxT1E1IfConfigAlarmHierarchy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigAlarmHierarchy.setStatus('current')
nndsxT1E1IfConfigFdlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 2), )
if mibBuilder.loadTexts: nndsxT1E1IfConfigFdlTable.setStatus('current')
nndsxT1E1IfConfigFdlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 2, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfConfigFdlEntry"))
nndsxT1E1IfConfigFdlEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfConfigFdlEntry.setStatus('current')
nndsxT1E1IfConfigFdl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fdl-ansi-only", 1), ("fdl-att-only", 2), ("fdl-ansi-att", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigFdl.setStatus('current')
nndsxT1E1IfConfigFdlCsuDsuType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fdl-csu", 1), ("fdl-dsu", 2), ("fdl-csudsu", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfConfigFdlCsuDsuType.setStatus('current')
nndsxT1E1IfAlarmConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3))
nndsxT1E1IfAlarmThresholdConfigTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigTable.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"), (0, "DSX-TE1-MIB", "nndsxT1E1IfAlarmThresholdConfigIndex"))
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigEntry.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigIndex.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigObject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("te1-object-none", 0), ("te1-object-eev", 1), ("te1-object-es", 2), ("te1-object-uas", 3), ("te1-object-bes", 4), ("te1-object-ses", 5), ("te1-object-lofc", 6), ("te1-object-css", 7), ("te1-object-bpv", 8), ("te1-object-oof", 9), ("te1-object-crc", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigObject.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigSamplingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigSamplingInterval.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sample-absolute", 1), ("sample-delta", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigSampleType.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigRisingThreshold.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigFallingThreshold.setStatus('current')
nndsxT1E1IfAlarmThresholdConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmThresholdConfigEnable.setStatus('current')
nndsxT1E1IfTestConfigTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4), )
if mibBuilder.loadTexts: nndsxT1E1IfTestConfigTable.setStatus('current')
nndsxT1E1IfTestConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfTestConfigEntry"))
nndsxT1E1IfTestConfigEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfTestConfigEntry.setStatus('current')
nndsxT1E1IfTestConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("no-test", 1), ("payload-loopback-test", 2), ("line-loopback-test", 3), ("local-loopback-test", 4), ("line-local-loopback-test", 5), ("inward1-loopback-test", 6), ("inward1-analog-loopback-test", 7), ("inward2-loopback-test", 8), ("pattern-test", 9), ("remote-lpup-test", 10), ("remote-lpdn-test", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfTestConfigType.setStatus('current')
nndsxT1E1IfTestConfigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfTestConfigTime.setStatus('current')
nndsxT1E1IfTestConfigPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("pattern-none", 0), ("pattern-all-ones", 1), ("pattern-all-zeros", 2), ("pattern-alternating", 3), ("pattern-3in24", 4), ("pattern-1in3", 5), ("pattern-1in5", 6), ("pattern-1in7", 7), ("pattern-smartjack-lpup", 8), ("pattern-smartjack-lpdown", 9), ("pattern-user1", 10), ("pattern-user2", 11), ("pattern-29minus1", 12), ("pattern-215minus1", 13), ("pattern-220minus1", 14), ("pattern-qrw", 15), ("pattern-223minus1", 16), ("pattern-std-setcode", 17), ("pattern-std-resetcod", 18), ("pattern-alt-setcode", 19), ("pattern-alt-resetcod", 20), ("pattern-211minus1", 21)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfTestConfigPattern.setStatus('current')
nndsxT1E1IfTestConfigLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-line-standard", 2), ("loopcode-line-alternate", 3), ("loopcode-line-ansiFDL", 4), ("loopcode-payload-ATTFDL", 6), ("loopcode-payload-ansiFDL", 7), ("loopcode-v54", 8), ("loopcode-smartjack", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfTestConfigLoopCode.setStatus('current')
nndsxT1E1IfMonitorPortConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("monitor-none", 1), ("monitor-enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nndsxT1E1IfMonitorPortConfigType.setStatus('current')
nndsxT1E1IfMonitorPortTxInjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inject-none", 1), ("inject-sendtype", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nndsxT1E1IfMonitorPortTxInjectType.setStatus('current')
nndsxT1E1IfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfStatusTable.setStatus('current')
nndsxT1E1IfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 1, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfStatusEntry"))
nndsxT1E1IfStatusEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfStatusEntry.setStatus('current')
nndsxT1E1IfStatusLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("reserved1", 0), ("reserved2", 1), ("rraiStatus", 2), ("traiStatus", 3), ("rlosStatus", 4), ("risStatus", 5), ("rexzStatus", 6), ("reserved3", 7), ("reserved4", 8), ("reserved5", 9), ("lorcStatus", 10), ("tpdeStatus", 11), ("reserved6", 12), ("reserved7", 13), ("sendLineCode", 14), ("sendPayLoadCode", 15), ("sendResetCode", 16), ("sendTE1Code", 17), ("sendPattern", 18), ("reserved8", 19), ("rcvTestCode", 20), ("reserved9", 21), ("reserved10", 22), ("reserved11", 23), ("loopbackStatus", 24), ("reserved12", 25), ("reserved13", 26), ("taisStatus", 27), ("raisStatus", 28), ("reserved14", 29), ("rlofStatus", 30), ("reserved15", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfStatusLineStatus.setStatus('current')
nndsxT1E1IfStatusTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfStatusTransmitClock.setStatus('current')
nndsxT1E1IfAlarmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 2), )
if mibBuilder.loadTexts: nndsxT1E1IfAlarmStatusTable.setStatus('current')
nndsxT1E1IfAlarmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 2, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfAlarmStatusEntry"))
nndsxT1E1IfAlarmStatusEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfAlarmStatusEntry.setStatus('current')
nndsxT1E1IfAlarmStatusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1), Bits().clone(namedValues=NamedValues(("rraiAlarm", 0), ("traiAlarm", 1), ("raisAlarm", 2), ("taisAlarm", 3), ("rlofAlarm", 4), ("rlosAlarm", 5), ("loopbackStateAlarm", 6), ("rcvTestCode", 7), ("risAlarm", 8), ("rexzAlarm", 9), ("rfebeAlarm", 10), ("rpeAlarm", 11), ("rcpeAlarm", 12), ("lorcAlarm", 13), ("tpdeAlarm", 14), ("tfebeAlarm", 15), ("ibTestAlarm", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmStatusAlarmStatus.setStatus('current')
nndsxT1E1IfAlarmStatusThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2), Bits().clone(namedValues=NamedValues(("threshold1", 0), ("threshold2", 1), ("threshold3", 2), ("threshold4", 3), ("threshold5", 4), ("threshold6", 5), ("threshold7", 6), ("threshold8", 7), ("threshold9", 8), ("threshold10", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAlarmStatusThresholdStatus.setStatus('current')
nndsxT1E1IfTestStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3), )
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusTable.setStatus('current')
nndsxT1E1IfTestStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfTestStatusEntry"))
nndsxT1E1IfTestStatusEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusEntry.setStatus('current')
nndsxT1E1IfTestStatusTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("testtype-notest", 1), ("testtype-payload-loopback", 2), ("testtype-line-loopback", 3), ("testtype-local-loopback", 4), ("testtype-line-local-loopback", 5), ("testtype-inward1-loopback", 6), ("testtype-inward1-analog-loopback", 7), ("testtype-inward2-loopback", 8), ("testtype-pattern", 9), ("testtype-remote-lpup", 10), ("testtype-remote-lpdn", 11), ("monitor-inject", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusTestType.setStatus('current')
nndsxT1E1IfTestStatusTestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusTestTime.setStatus('current')
nndsxT1E1IfTestStatusTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("test-state-idle", 1), ("test-state-searching", 2), ("test-state-locked", 3), ("test-state-relocked", 4), ("test-state-inprogress", 5), ("test-state-passed", 6), ("test-state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusTestState.setStatus('current')
nndsxT1E1IfTestStatusTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("pattern-none", 0), ("pattern-all-ones", 1), ("pattern-all-zeros", 2), ("pattern-alternating", 3), ("pattern-3in24", 4), ("pattern-1in3", 5), ("pattern-1in5", 6), ("pattern-1in7", 7), ("pattern-smartjack-lpup", 8), ("pattern-smartjack-lpdown", 9), ("pattern-user1", 10), ("pattern-user2", 11), ("pattern-29minus1", 12), ("pattern-215minus1", 13), ("pattern-220minus1", 14), ("pattern-qrw", 15), ("pattern-223minus1", 16), ("pattern-std-setcode", 17), ("pattern-std-resetcod", 18), ("pattern-alt-setcode", 19), ("pattern-alt-resetcod", 20), ("pattern-211minus1", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusTestPattern.setStatus('current')
nndsxT1E1IfTestStatusLockedSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusLockedSeconds.setStatus('current')
nndsxT1E1IfTestStatusSyncLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusSyncLossCount.setStatus('current')
nndsxT1E1IfTestStatusErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusErrorCount.setStatus('current')
nndsxT1E1IfTestStatusLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-line-standard", 2), ("loopcode-line-alternate", 3), ("loopcode-line-ansiFDL", 4), ("loopcode-payload-ATTFDL", 6), ("loopcode-payload-ansiFDL", 7), ("loopcode-v54", 8), ("loopcode-smartjack", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfTestStatusLoopCode.setStatus('current')
nndsxT1E1IfLastTestResultTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4), )
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultTable.setStatus('current')
nndsxT1E1IfLastTestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfLastTestResultEntry"))
nndsxT1E1IfLastTestResultEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultEntry.setStatus('current')
nndsxT1E1IfLastTestResultTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 9, 10, 11))).clone(namedValues=NamedValues(("testtype-notest", 1), ("testtype-payload-loopback", 2), ("testtype-line-loopback", 3), ("testtype-pattern", 9), ("testtype-remote-lpup", 10), ("testtype-remote-lpdn", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultTestType.setStatus('current')
nndsxT1E1IfLastTestResultTestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultTestTime.setStatus('current')
nndsxT1E1IfLastTestResultTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("test-state-idle", 1), ("test-state-searching", 2), ("test-state-locked", 3), ("test-state-relocked", 4), ("test-state-inprogress", 5), ("test-state-passed", 6), ("test-state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultTestState.setStatus('current')
nndsxT1E1IfLastTestResultTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("pattern-none", 0), ("pattern-all-ones", 1), ("pattern-all-zeros", 2), ("pattern-alternating", 3), ("pattern-3in24", 4), ("pattern-1in3", 5), ("pattern-1in5", 6), ("pattern-1in7", 7), ("pattern-smartjack-lpup", 8), ("pattern-smartjack-lpdown", 9), ("pattern-user1", 10), ("pattern-user2", 11), ("pattern-29minus1", 12), ("pattern-215minus1", 13), ("pattern-220minus1", 14), ("pattern-qrw", 15), ("pattern-223minus1", 16), ("pattern-std-setcode", 17), ("pattern-std-resetcod", 18), ("pattern-alt-setcode", 19), ("pattern-alt-resetcod", 20), ("pattern-211minus1", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultTestPattern.setStatus('current')
nndsxT1E1IfLastTestResultLockedSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultLockedSeconds.setStatus('current')
nndsxT1E1IfLastTestResultSyncLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultSyncLossCount.setStatus('current')
nndsxT1E1IfLastTestResultErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultErrorCount.setStatus('current')
nndsxT1E1IfLastTestResultLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-line-standard", 2), ("loopcode-line-alternate", 3), ("loopcode-line-ansiFDL", 4), ("loopcode-payload-ATTFDL", 6), ("loopcode-payload-ansiFDL", 7), ("loopcode-v54", 8), ("loopcode-smartjack", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfLastTestResultLoopCode.setStatus('current')
nndsxT1E1IfArchiveStatsValidIntervalsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfArchiveStatsValidIntervalsTable.setStatus('current')
nndsxT1E1IfArchiveStatsValidIntervalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfArchiveStatsValidIntervalsEntry"))
nndsxT1E1IfArchiveStatsValidIntervalsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfArchiveStatsValidIntervalsEntry.setStatus('current')
nndsxT1E1IfAnsiArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveStatsValidIntervals.setStatus('current')
nndsxT1E1IfAttArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsValidIntervals.setStatus('current')
nndsxT1E1IfItutArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveStatsValidIntervals.setStatus('current')
nndsxT1E1IfIetfArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsValidIntervals.setStatus('current')
nndsxT1E1IfUserTotalStatsValidDays = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsValidDays.setStatus('current')
nndsxT1E1IfUserArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsValidIntervals.setStatus('current')
nndsxT1E1IfAnsiStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2))
nndsxT1E1IfAttStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3))
nndsxT1E1IfItutStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4))
nndsxT1E1IfIetfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5))
nndsxT1E1IfUserStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6))
nndsxT1E1IfAnsiCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentStatsTable.setStatus('current')
nndsxT1E1IfAnsiCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfAnsiCurrentStatsEntry"))
nndsxT1E1IfAnsiCurrentStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentStatsEntry.setStatus('current')
nndsxT1E1IfAnsiCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentStatsUASState.setStatus('current')
nndsxT1E1IfAnsiCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentStatsTimeInCurrent.setStatus('current')
nndsxT1E1IfAnsiCurrentPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentPathStatsCV.setStatus('current')
nndsxT1E1IfAnsiCurrentPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentPathStatsES.setStatus('current')
nndsxT1E1IfAnsiCurrentPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentPathStatsSES.setStatus('current')
nndsxT1E1IfAnsiCurrentPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentPathStatsSAS.setStatus('current')
nndsxT1E1IfAnsiCurrentPathStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentPathStatsCSS.setStatus('current')
nndsxT1E1IfAnsiCurrentPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentPathStatsUAS.setStatus('current')
nndsxT1E1IfAnsiCurrentLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentLineStatsCV.setStatus('current')
nndsxT1E1IfAnsiCurrentLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentLineStatsES.setStatus('current')
nndsxT1E1IfAnsiCurrentLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiCurrentLineStatsSES.setStatus('current')
nndsxT1E1IfAnsiTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2), )
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalStatsTable.setStatus('current')
nndsxT1E1IfAnsiTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfAnsiTotalStatsEntry"))
nndsxT1E1IfAnsiTotalStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalStatsEntry.setStatus('current')
nndsxT1E1IfAnsiTotalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalPathStatsCV.setStatus('current')
nndsxT1E1IfAnsiTotalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalPathStatsES.setStatus('current')
nndsxT1E1IfAnsiTotalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalPathStatsSES.setStatus('current')
nndsxT1E1IfAnsiTotalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalPathStatsSAS.setStatus('current')
nndsxT1E1IfAnsiTotalPathStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalPathStatsCSS.setStatus('current')
nndsxT1E1IfAnsiTotalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalPathStatsUAS.setStatus('current')
nndsxT1E1IfAnsiTotalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalLineStatsCV.setStatus('current')
nndsxT1E1IfAnsiTotalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalLineStatsES.setStatus('current')
nndsxT1E1IfAnsiTotalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiTotalLineStatsSES.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3), )
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalStatsTable.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"), (0, "DSX-TE1-MIB", "nndsxT1E1IfAnsiArchiveStatsInterval"))
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalStatsEntry.setStatus('current')
nndsxT1E1IfAnsiArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveStatsInterval.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalPathStatsCV.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalPathStatsES.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalPathStatsSES.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalPathStatsSAS.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalPathStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalPathStatsCSS.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalPathStatsUAS.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalLineStatsCV.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalLineStatsES.setStatus('current')
nndsxT1E1IfAnsiArchiveIntervalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 2, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAnsiArchiveIntervalLineStatsSES.setStatus('current')
nndsxT1E1IfAttCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsTable.setStatus('current')
nndsxT1E1IfAttCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfAttCurrentStatsEntry"))
nndsxT1E1IfAttCurrentStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsEntry.setStatus('current')
nndsxT1E1IfAttCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsUASState.setStatus('current')
nndsxT1E1IfAttCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsTimeInCurrent.setStatus('current')
nndsxT1E1IfAttCurrentStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsEEV.setStatus('current')
nndsxT1E1IfAttCurrentStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsES.setStatus('current')
nndsxT1E1IfAttCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsUAS.setStatus('current')
nndsxT1E1IfAttCurrentStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsSES.setStatus('current')
nndsxT1E1IfAttCurrentStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttCurrentStatsCSS.setStatus('current')
nndsxT1E1IfAttTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 2), )
if mibBuilder.loadTexts: nndsxT1E1IfAttTotalStatsTable.setStatus('current')
nndsxT1E1IfAttTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 2, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfAttTotalStatsEntry"))
nndsxT1E1IfAttTotalStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfAttTotalStatsEntry.setStatus('current')
nndsxT1E1IfAttTotalStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttTotalStatsEEV.setStatus('current')
nndsxT1E1IfAttTotalStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttTotalStatsES.setStatus('current')
nndsxT1E1IfAttTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttTotalStatsUAS.setStatus('current')
nndsxT1E1IfAttTotalStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttTotalStatsSES.setStatus('current')
nndsxT1E1IfAttTotalStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttTotalStatsCSS.setStatus('current')
nndsxT1E1IfAttArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3), )
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsTable.setStatus('current')
nndsxT1E1IfAttArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"), (0, "DSX-TE1-MIB", "nndsxT1E1IfAttArchiveInterval"))
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsEntry.setStatus('current')
nndsxT1E1IfAttArchiveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveInterval.setStatus('current')
nndsxT1E1IfAttArchiveStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsEEV.setStatus('current')
nndsxT1E1IfAttArchiveStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsES.setStatus('current')
nndsxT1E1IfAttArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsUAS.setStatus('current')
nndsxT1E1IfAttArchiveStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsSES.setStatus('current')
nndsxT1E1IfAttArchiveStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 3, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfAttArchiveStatsCSS.setStatus('current')
nndsxT1E1IfItutCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsTable.setStatus('current')
nndsxT1E1IfItutCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfItutCurrentStatsEntry"))
nndsxT1E1IfItutCurrentStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsEntry.setStatus('current')
nndsxT1E1IfItutCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsUASState.setStatus('current')
nndsxT1E1IfItutCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsTimeInCurrent.setStatus('current')
nndsxT1E1IfItutCurrentStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsES.setStatus('current')
nndsxT1E1IfItutCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsUAS.setStatus('current')
nndsxT1E1IfItutCurrentStatsBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsBBE.setStatus('current')
nndsxT1E1IfItutCurrentStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutCurrentStatsSES.setStatus('current')
nndsxT1E1IfItutTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 2), )
if mibBuilder.loadTexts: nndsxT1E1IfItutTotalStatsTable.setStatus('current')
nndsxT1E1IfItutTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 2, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfItutTotalStatsEntry"))
nndsxT1E1IfItutTotalStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfItutTotalStatsEntry.setStatus('current')
nndsxT1E1IfItutTotalStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutTotalStatsES.setStatus('current')
nndsxT1E1IfItutTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutTotalStatsUAS.setStatus('current')
nndsxT1E1IfItutTotalStatsBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutTotalStatsBBE.setStatus('current')
nndsxT1E1IfItutTotalStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutTotalStatsSES.setStatus('current')
nndsxT1E1IfItutArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 3), )
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveStatsTable.setStatus('current')
nndsxT1E1IfItutArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 3, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"), (0, "DSX-TE1-MIB", "nndsxT1E1IfItutArchiveInterval"))
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveStatsEntry.setStatus('current')
nndsxT1E1IfItutArchiveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveInterval.setStatus('current')
nndsxT1E1IfItutArchiveStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveStatsES.setStatus('current')
nndsxT1E1IfItutArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveStatsUAS.setStatus('current')
nndsxT1E1IfItutArchiveStatsBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveStatsBBE.setStatus('current')
nndsxT1E1IfItutArchiveStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 4, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfItutArchiveStatsSES.setStatus('current')
nndsxT1E1IfIetfCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsTable.setStatus('current')
nndsxT1E1IfIetfCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfIetfCurrentStatsEntry"))
nndsxT1E1IfIetfCurrentStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsEntry.setStatus('current')
nndsxT1E1IfIetfCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsUASState.setStatus('current')
nndsxT1E1IfIetfCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsTimeInCurrent.setStatus('current')
nndsxT1E1IfIetfCurrentStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsES.setStatus('current')
nndsxT1E1IfIetfCurrentStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsSES.setStatus('current')
nndsxT1E1IfIetfCurrentStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsSEFS.setStatus('current')
nndsxT1E1IfIetfCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsUAS.setStatus('current')
nndsxT1E1IfIetfCurrentStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsCSS.setStatus('current')
nndsxT1E1IfIetfCurrentStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsPCV.setStatus('current')
nndsxT1E1IfIetfCurrentStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsLES.setStatus('current')
nndsxT1E1IfIetfCurrentStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsBES.setStatus('current')
nndsxT1E1IfIetfCurrentStatsDM = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsDM.setStatus('current')
nndsxT1E1IfIetfCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfCurrentStatsLCV.setStatus('current')
nndsxT1E1IfIetfTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2), )
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsTable.setStatus('current')
nndsxT1E1IfIetfTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfIetfTotalStatsEntry"))
nndsxT1E1IfIetfTotalStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsEntry.setStatus('current')
nndsxT1E1IfIetfTotalStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsES.setStatus('current')
nndsxT1E1IfIetfTotalStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsSES.setStatus('current')
nndsxT1E1IfIetfTotalStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsSEFS.setStatus('current')
nndsxT1E1IfIetfTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsUAS.setStatus('current')
nndsxT1E1IfIetfTotalStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsCSS.setStatus('current')
nndsxT1E1IfIetfTotalStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsPCV.setStatus('current')
nndsxT1E1IfIetfTotalStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsLES.setStatus('current')
nndsxT1E1IfIetfTotalStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsBES.setStatus('current')
nndsxT1E1IfIetfTotalStatsDM = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsDM.setStatus('current')
nndsxT1E1IfIetfTotalStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfTotalStatsLCV.setStatus('current')
nndsxT1E1IfIetfArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3), )
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsTable.setStatus('current')
nndsxT1E1IfIetfArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"), (0, "DSX-TE1-MIB", "nndsxT1E1IfIetfArchiveStatsInterval"))
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsEntry.setStatus('current')
nndsxT1E1IfIetfArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsInterval.setStatus('current')
nndsxT1E1IfIetfArchiveStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsES.setStatus('current')
nndsxT1E1IfIetfArchiveStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsSES.setStatus('current')
nndsxT1E1IfIetfArchiveStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsSEFS.setStatus('current')
nndsxT1E1IfIetfArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsUAS.setStatus('current')
nndsxT1E1IfIetfArchiveStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsCSS.setStatus('current')
nndsxT1E1IfIetfArchiveStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsPCV.setStatus('current')
nndsxT1E1IfIetfArchiveStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsLES.setStatus('current')
nndsxT1E1IfIetfArchiveStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsBES.setStatus('current')
nndsxT1E1IfIetfArchiveStatsDM = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsDM.setStatus('current')
nndsxT1E1IfIetfArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 5, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfIetfArchiveStatsLCV.setStatus('current')
nndsxT1E1IfUserCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1), )
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsTable.setStatus('current')
nndsxT1E1IfUserCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfUserCurrentStatsEntry"))
nndsxT1E1IfUserCurrentStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsEntry.setStatus('current')
nndsxT1E1IfUserCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsUASState.setStatus('current')
nndsxT1E1IfUserCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsTimeInCurrent.setStatus('current')
nndsxT1E1IfUserCurrentStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsEEV.setStatus('current')
nndsxT1E1IfUserCurrentStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsES.setStatus('current')
nndsxT1E1IfUserCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsUAS.setStatus('current')
nndsxT1E1IfUserCurrentStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsBES.setStatus('current')
nndsxT1E1IfUserCurrentStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsSES.setStatus('current')
nndsxT1E1IfUserCurrentStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsLOFC.setStatus('current')
nndsxT1E1IfUserCurrentStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsCSS.setStatus('current')
nndsxT1E1IfUserCurrentStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsBPV.setStatus('current')
nndsxT1E1IfUserCurrentStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsOOF.setStatus('current')
nndsxT1E1IfUserCurrentStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserCurrentStatsCRC.setStatus('current')
nndsxT1E1IfUserTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2), )
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsTable.setStatus('current')
nndsxT1E1IfUserTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"), (0, "DSX-TE1-MIB", "nndsxT1E1IfUserTotalStatsDay"))
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsEntry.setStatus('current')
nndsxT1E1IfUserTotalStatsDay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsDay.setStatus('current')
nndsxT1E1IfUserTotalStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsEEV.setStatus('current')
nndsxT1E1IfUserTotalStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsES.setStatus('current')
nndsxT1E1IfUserTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsUAS.setStatus('current')
nndsxT1E1IfUserTotalStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsBES.setStatus('current')
nndsxT1E1IfUserTotalStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsSES.setStatus('current')
nndsxT1E1IfUserTotalStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsLOFC.setStatus('current')
nndsxT1E1IfUserTotalStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsCSS.setStatus('current')
nndsxT1E1IfUserTotalStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsBPV.setStatus('current')
nndsxT1E1IfUserTotalStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsOOF.setStatus('current')
nndsxT1E1IfUserTotalStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserTotalStatsCRC.setStatus('current')
nndsxT1E1IfUserLifetimeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3), )
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsTable.setStatus('current')
nndsxT1E1IfUserLifetimeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1), )
nndsxT1E1IfConfigLineEntry.registerAugmentions(("DSX-TE1-MIB", "nndsxT1E1IfUserLifetimeStatsEntry"))
nndsxT1E1IfUserLifetimeStatsEntry.setIndexNames(*nndsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsEntry.setStatus('current')
nndsxT1E1IfUserLifetimeStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsEEV.setStatus('current')
nndsxT1E1IfUserLifetimeStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsES.setStatus('current')
nndsxT1E1IfUserLifetimeStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsUAS.setStatus('current')
nndsxT1E1IfUserLifetimeStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsBES.setStatus('current')
nndsxT1E1IfUserLifetimeStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsSES.setStatus('current')
nndsxT1E1IfUserLifetimeStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsLOFC.setStatus('current')
nndsxT1E1IfUserLifetimeStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsCSS.setStatus('current')
nndsxT1E1IfUserLifetimeStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsBPV.setStatus('current')
nndsxT1E1IfUserLifetimeStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsOOF.setStatus('current')
nndsxT1E1IfUserLifetimeStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserLifetimeStatsCRC.setStatus('current')
nndsxT1E1IfUserArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4), )
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsTable.setStatus('current')
nndsxT1E1IfUserArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1), ).setIndexNames((0, "DSX-TE1-MIB", "nndsxT1E1IfIndex"), (0, "DSX-TE1-MIB", "nndsxT1E1IfUserArchiveStatsInterval"))
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsEntry.setStatus('current')
nndsxT1E1IfUserArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsInterval.setStatus('current')
nndsxT1E1IfUserArchiveStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsEEV.setStatus('current')
nndsxT1E1IfUserArchiveStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsES.setStatus('current')
nndsxT1E1IfUserArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsUAS.setStatus('current')
nndsxT1E1IfUserArchiveStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsBES.setStatus('current')
nndsxT1E1IfUserArchiveStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsSES.setStatus('current')
nndsxT1E1IfUserArchiveStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsLOFC.setStatus('current')
nndsxT1E1IfUserArchiveStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsCSS.setStatus('current')
nndsxT1E1IfUserArchiveStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsBPV.setStatus('current')
nndsxT1E1IfUserArchiveStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsOOF.setStatus('current')
nndsxT1E1IfUserArchiveStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 1, 3, 6, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT1E1IfUserArchiveStatsCRC.setStatus('current')
nndsxT1E1Number = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT1E1Number.setStatus('current')
nndsxT1E1Type = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("type-t1", 1), ("type-t1-within-ct3", 2), ("type-e1", 3), ("type-e1-within-ce3", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT1E1Type.setStatus('current')
nndsxT1E1T3Number = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT1E1T3Number.setStatus('current')
nndsxT1E1AlarmType = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("te1-alarm-rais", 1), ("te1-alarm-rrai", 2), ("te1-alarm-roof", 3), ("te1-alarm-rlos", 4), ("te1-alarm-rlof", 5), ("te1-alarm-rexz", 6), ("te1-alarm-rfbe", 7), ("te1-alarm-lorc", 8), ("te1-alarm-tpde", 9), ("te1-alarm-tais", 10), ("te1-alarm-tblu", 11), ("te1-alarm-trai", 12), ("te1-alarm-ibtest", 13), ("te1-alarm-threshold1", 14), ("te1-alarm-threshold2", 15), ("te1-alarm-threshold3", 16), ("te1-alarm-threshold4", 17), ("te1-alarm-threshold5", 18), ("te1-alarm-threshold6", 19), ("te1-alarm-threshold7", 20), ("te1-alarm-threshold8", 21), ("te1-alarm-threshold9", 22), ("te1-alarm-threshold10", 23)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT1E1AlarmType.setStatus('current')
nndsxT1E1AlarmOnTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 0, 1)).setObjects(("DSX-TE1-MIB", "nndsxT1E1IfIndex"), ("DSX-TE1-MIB", "nndsxT1E1Number"), ("DSX-TE1-MIB", "nndsxT1E1Type"), ("DSX-TE1-MIB", "nndsxT1E1T3Number"), ("DSX-TE1-MIB", "nndsxT1E1AlarmType"))
if mibBuilder.loadTexts: nndsxT1E1AlarmOnTrap.setStatus('current')
nndsxT1E1AlarmOffTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 2, 0, 2)).setObjects(("DSX-TE1-MIB", "nndsxT1E1IfIndex"), ("DSX-TE1-MIB", "nndsxT1E1Number"), ("DSX-TE1-MIB", "nndsxT1E1Type"), ("DSX-TE1-MIB", "nndsxT1E1T3Number"), ("DSX-TE1-MIB", "nndsxT1E1AlarmType"))
if mibBuilder.loadTexts: nndsxT1E1AlarmOffTrap.setStatus('current')
nndsxT1E1NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 2, 3)).setObjects(("DSX-TE1-MIB", "nndsxT1E1AlarmOnTrap"), ("DSX-TE1-MIB", "nndsxT1E1AlarmOffTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nndsxT1E1NotificationGroup = nndsxT1E1NotificationGroup.setStatus('current')
mibBuilder.exportSymbols("DSX-TE1-MIB", nndsxT1E1IfAnsiArchiveStatsValidIntervals=nndsxT1E1IfAnsiArchiveStatsValidIntervals, nndsxT1E1IfAnsiCurrentPathStatsES=nndsxT1E1IfAnsiCurrentPathStatsES, nndsxT1E1IfItutArchiveStatsES=nndsxT1E1IfItutArchiveStatsES, nndsxT1E1IfUserCurrentStatsOOF=nndsxT1E1IfUserCurrentStatsOOF, nndsxT1E1IfTestConfigEntry=nndsxT1E1IfTestConfigEntry, nndsxT1E1IfItutCurrentStatsUASState=nndsxT1E1IfItutCurrentStatsUASState, nndsxT1E1IfItutCurrentStatsUAS=nndsxT1E1IfItutCurrentStatsUAS, nndsxT1E1IfUserLifetimeStatsLOFC=nndsxT1E1IfUserLifetimeStatsLOFC, nndsxT1E1IfAnsiTotalPathStatsCSS=nndsxT1E1IfAnsiTotalPathStatsCSS, nndsxT1E1IfIetfArchiveStatsValidIntervals=nndsxT1E1IfIetfArchiveStatsValidIntervals, nndsxT1E1IfAnsiCurrentPathStatsCSS=nndsxT1E1IfAnsiCurrentPathStatsCSS, nndsxT1E1IfAttCurrentStatsCSS=nndsxT1E1IfAttCurrentStatsCSS, nndsxT1E1IfIetfArchiveStatsUAS=nndsxT1E1IfIetfArchiveStatsUAS, nndsxT1E1IfAttCurrentStatsSES=nndsxT1E1IfAttCurrentStatsSES, nndsxT1E1IfAttCurrentStatsUAS=nndsxT1E1IfAttCurrentStatsUAS, nndsxT1E1IfUserLifetimeStatsOOF=nndsxT1E1IfUserLifetimeStatsOOF, nndsxT1E1IfMonitorPortConfigType=nndsxT1E1IfMonitorPortConfigType, nndsxT1E1IfAlarmStatusEntry=nndsxT1E1IfAlarmStatusEntry, nndsxT1E1Number=nndsxT1E1Number, nndsxT1E1IfUserTotalStatsDay=nndsxT1E1IfUserTotalStatsDay, nndsxT1E1AlarmOffTrap=nndsxT1E1AlarmOffTrap, nndsxT1E1IfAnsiTotalPathStatsCV=nndsxT1E1IfAnsiTotalPathStatsCV, nndsxT1E1IfAnsiCurrentStatsTimeInCurrent=nndsxT1E1IfAnsiCurrentStatsTimeInCurrent, nndsxT1E1IfConfigLineCode=nndsxT1E1IfConfigLineCode, nndsxT1E1IfAlarmThresholdConfigEntry=nndsxT1E1IfAlarmThresholdConfigEntry, nndsxT1E1IfUserCurrentStatsCRC=nndsxT1E1IfUserCurrentStatsCRC, nndsxT1E1IfIetfArchiveStatsCSS=nndsxT1E1IfIetfArchiveStatsCSS, nndsxT1E1IfIetfArchiveStatsSES=nndsxT1E1IfIetfArchiveStatsSES, nndsxT1E1IfItutCurrentStatsTable=nndsxT1E1IfItutCurrentStatsTable, nndsxT1E1IfItutArchiveStatsTable=nndsxT1E1IfItutArchiveStatsTable, nndsxT1E1IfIetfArchiveStatsES=nndsxT1E1IfIetfArchiveStatsES, nndsxT1E1IfUserCurrentStatsCSS=nndsxT1E1IfUserCurrentStatsCSS, nndsxT1E1IfItutTotalStatsUAS=nndsxT1E1IfItutTotalStatsUAS, nndsxT1E1IfItutArchiveInterval=nndsxT1E1IfItutArchiveInterval, nndsxT1E1IfStatusTransmitClock=nndsxT1E1IfStatusTransmitClock, nndsxT1E1IfItutTotalStatsTable=nndsxT1E1IfItutTotalStatsTable, nndsxT1E1IfTestStatusSyncLossCount=nndsxT1E1IfTestStatusSyncLossCount, nndsxT1E1IfIetfCurrentStatsEntry=nndsxT1E1IfIetfCurrentStatsEntry, nndsxT1E1IfAnsiCurrentPathStatsSAS=nndsxT1E1IfAnsiCurrentPathStatsSAS, nndsxT1E1IfLastTestResultLoopCode=nndsxT1E1IfLastTestResultLoopCode, nndsxT1E1IfAnsiCurrentStatsTable=nndsxT1E1IfAnsiCurrentStatsTable, nndsxT1E1IfConfigFdlEntry=nndsxT1E1IfConfigFdlEntry, nndsxT1E1IfAttTotalStatsTable=nndsxT1E1IfAttTotalStatsTable, nndsxT1E1IfIetfTotalStatsPCV=nndsxT1E1IfIetfTotalStatsPCV, nndsxT1E1IfUserTotalStatsBES=nndsxT1E1IfUserTotalStatsBES, nndsxT1E1IfIetfArchiveStatsLCV=nndsxT1E1IfIetfArchiveStatsLCV, nndsxT1E1IfAlarmConfigGroup=nndsxT1E1IfAlarmConfigGroup, nndsxT1E1IfAlarmStatusAlarmStatus=nndsxT1E1IfAlarmStatusAlarmStatus, nndsxT1E1IfItutCurrentStatsES=nndsxT1E1IfItutCurrentStatsES, nndsxT1E1IfIetfCurrentStatsUAS=nndsxT1E1IfIetfCurrentStatsUAS, PYSNMP_MODULE_ID=nndsxT1E1MIB, nndsxT1E1IfIetfCurrentStatsLCV=nndsxT1E1IfIetfCurrentStatsLCV, nndsxT1E1IfAlarmThresholdConfigSampleType=nndsxT1E1IfAlarmThresholdConfigSampleType, nndsxT1E1IfUserCurrentStatsBPV=nndsxT1E1IfUserCurrentStatsBPV, nndsxT1E1IfUserArchiveStatsInterval=nndsxT1E1IfUserArchiveStatsInterval, nndsxT1E1IfAttTotalStatsEntry=nndsxT1E1IfAttTotalStatsEntry, nndsxT1E1IfUserTotalStatsBPV=nndsxT1E1IfUserTotalStatsBPV, nndsxT1E1IfAnsiTotalPathStatsSAS=nndsxT1E1IfAnsiTotalPathStatsSAS, nndsxT1E1IfUserCurrentStatsEntry=nndsxT1E1IfUserCurrentStatsEntry, nndsxT1E1IfIetfCurrentStatsPCV=nndsxT1E1IfIetfCurrentStatsPCV, nndsxT1E1IfIetfArchiveStatsDM=nndsxT1E1IfIetfArchiveStatsDM, nndsxT1E1IfUserArchiveStatsCSS=nndsxT1E1IfUserArchiveStatsCSS, nndsxT1E1IfIetfArchiveStatsBES=nndsxT1E1IfIetfArchiveStatsBES, nndsxT1E1IfAlarmStatusThresholdStatus=nndsxT1E1IfAlarmStatusThresholdStatus, nndsxT1E1IfItutTotalStatsEntry=nndsxT1E1IfItutTotalStatsEntry, nndsxT1E1IfDescription=nndsxT1E1IfDescription, nndsxT1E1IfIetfArchiveStatsInterval=nndsxT1E1IfIetfArchiveStatsInterval, nndsxT1E1IfUserCurrentStatsSES=nndsxT1E1IfUserCurrentStatsSES, nndsxT1E1IfUserArchiveStatsEntry=nndsxT1E1IfUserArchiveStatsEntry, nndsxT1E1IfAnsiArchiveIntervalPathStatsCV=nndsxT1E1IfAnsiArchiveIntervalPathStatsCV, nndsxT1E1IfItutCurrentStatsSES=nndsxT1E1IfItutCurrentStatsSES, nndsxT1E1IfTestConfigTable=nndsxT1E1IfTestConfigTable, nndsxT1E1IfItutCurrentStatsEntry=nndsxT1E1IfItutCurrentStatsEntry, nndsxT1E1IfAnsiCurrentPathStatsSES=nndsxT1E1IfAnsiCurrentPathStatsSES, nndsxT1E1IfIetfTotalStatsTable=nndsxT1E1IfIetfTotalStatsTable, nndsxT1E1IfTestStatusTestPattern=nndsxT1E1IfTestStatusTestPattern, nndsxT1E1IfConfigTransmitClock=nndsxT1E1IfConfigTransmitClock, nndsxT1E1IfTestStatusLoopCode=nndsxT1E1IfTestStatusLoopCode, nndsxT1E1IfIetfCurrentStatsLES=nndsxT1E1IfIetfCurrentStatsLES, nndsxT1E1IfUserTotalStatsOOF=nndsxT1E1IfUserTotalStatsOOF, nndsxT1E1Notifications=nndsxT1E1Notifications, nndsxT1E1IfTestStatusTestType=nndsxT1E1IfTestStatusTestType, nndsxT1E1IfAnsiArchiveIntervalPathStatsSES=nndsxT1E1IfAnsiArchiveIntervalPathStatsSES, nndsxT1E1IfConfigTimeSlotMap=nndsxT1E1IfConfigTimeSlotMap, nndsxT1E1IfAnsiArchiveIntervalStatsEntry=nndsxT1E1IfAnsiArchiveIntervalStatsEntry, nndsxT1E1IfUserLifetimeStatsSES=nndsxT1E1IfUserLifetimeStatsSES, nndsxT1E1IfAnsiArchiveIntervalPathStatsCSS=nndsxT1E1IfAnsiArchiveIntervalPathStatsCSS, nndsxT1E1IfUserLifetimeStatsEEV=nndsxT1E1IfUserLifetimeStatsEEV, nndsxT1E1IfConfigRaiAlarm=nndsxT1E1IfConfigRaiAlarm, nndsxT1E1IfAlarmThresholdConfigObject=nndsxT1E1IfAlarmThresholdConfigObject, nndsxT1E1IfUserLifetimeStatsEntry=nndsxT1E1IfUserLifetimeStatsEntry, nndsxT1E1IfIetfTotalStatsBES=nndsxT1E1IfIetfTotalStatsBES, nndsxT1E1IfAttTotalStatsUAS=nndsxT1E1IfAttTotalStatsUAS, nndsxT1E1IfConfigJitter=nndsxT1E1IfConfigJitter, nndsxT1E1IfAttArchiveStatsEntry=nndsxT1E1IfAttArchiveStatsEntry, nndsxT1E1IfUserArchiveStatsCRC=nndsxT1E1IfUserArchiveStatsCRC, nndsxT1E1IfLastTestResultLockedSeconds=nndsxT1E1IfLastTestResultLockedSeconds, nndsxT1E1IfUserTotalStatsValidDays=nndsxT1E1IfUserTotalStatsValidDays, nndsxT1E1IfUserTotalStatsTable=nndsxT1E1IfUserTotalStatsTable, nndsxT1E1IfAttCurrentStatsEntry=nndsxT1E1IfAttCurrentStatsEntry, nndsxT1E1IfConfigLineMode=nndsxT1E1IfConfigLineMode, nndsxT1E1IfCircuitId=nndsxT1E1IfCircuitId, nndsxT1E1IfItutArchiveStatsBBE=nndsxT1E1IfItutArchiveStatsBBE, nndsxT1E1IfConfigLBO=nndsxT1E1IfConfigLBO, nndsxT1E1AlarmOnTrap=nndsxT1E1AlarmOnTrap, nndsxT1E1IfUserTotalStatsLOFC=nndsxT1E1IfUserTotalStatsLOFC, nndsxT1E1IfLastTestResultTestTime=nndsxT1E1IfLastTestResultTestTime, nndsxT1E1IfLastTestResultTestState=nndsxT1E1IfLastTestResultTestState, nndsxT1E1IfUserArchiveStatsValidIntervals=nndsxT1E1IfUserArchiveStatsValidIntervals, nndsxT1E1IfItutArchiveStatsEntry=nndsxT1E1IfItutArchiveStatsEntry, nndsxT1E1IfIetfTotalStatsEntry=nndsxT1E1IfIetfTotalStatsEntry, nndsxT1E1IfItutCurrentStatsBBE=nndsxT1E1IfItutCurrentStatsBBE, nndsxT1E1IfIetfArchiveStatsTable=nndsxT1E1IfIetfArchiveStatsTable, nndsxT1E1IfConfigLineType=nndsxT1E1IfConfigLineType, nndsxT1E1IfUserCurrentStatsUASState=nndsxT1E1IfUserCurrentStatsUASState, nndsxT1E1IfAnsiStatsGroup=nndsxT1E1IfAnsiStatsGroup, nndsxT1E1IfIetfCurrentStatsSES=nndsxT1E1IfIetfCurrentStatsSES, nndsxT1E1IfAttCurrentStatsUASState=nndsxT1E1IfAttCurrentStatsUASState, nndsxT1E1IfTestConfigPattern=nndsxT1E1IfTestConfigPattern, nndsxT1E1T3Number=nndsxT1E1T3Number, nndsxT1E1IfUserTotalStatsCSS=nndsxT1E1IfUserTotalStatsCSS, nndsxT1E1IfConfigServiceMode=nndsxT1E1IfConfigServiceMode, nndsxT1E1IfAnsiCurrentPathStatsCV=nndsxT1E1IfAnsiCurrentPathStatsCV, nndsxT1E1IfLastTestResultSyncLossCount=nndsxT1E1IfLastTestResultSyncLossCount, nndsxT1E1IfIndex=nndsxT1E1IfIndex, nndsxT1E1IfIetfTotalStatsLES=nndsxT1E1IfIetfTotalStatsLES, nndsxT1E1IfIetfTotalStatsLCV=nndsxT1E1IfIetfTotalStatsLCV, nndsxT1E1IfUserArchiveStatsTable=nndsxT1E1IfUserArchiveStatsTable, nndsxT1E1IfItutCurrentStatsTimeInCurrent=nndsxT1E1IfItutCurrentStatsTimeInCurrent, nndsxT1E1IfUserStatsGroup=nndsxT1E1IfUserStatsGroup, nndsxT1E1IfConfigLineTable=nndsxT1E1IfConfigLineTable, nndsxT1E1IfConfigLineEntry=nndsxT1E1IfConfigLineEntry, nndsxT1E1IfConfigCableType=nndsxT1E1IfConfigCableType, nndsxT1E1IfIetfArchiveStatsEntry=nndsxT1E1IfIetfArchiveStatsEntry, nndsxT1E1IfIetfTotalStatsCSS=nndsxT1E1IfIetfTotalStatsCSS, nndsxT1E1IfAnsiCurrentLineStatsCV=nndsxT1E1IfAnsiCurrentLineStatsCV, nndsxT1E1IfStatusGroup=nndsxT1E1IfStatusGroup, nndsxT1E1IfMonitorPortTxInjectType=nndsxT1E1IfMonitorPortTxInjectType, nndsxT1E1IfUserCurrentStatsBES=nndsxT1E1IfUserCurrentStatsBES, nndsxT1E1IfAnsiTotalLineStatsSES=nndsxT1E1IfAnsiTotalLineStatsSES, nndsxT1E1IfLastTestResultTestType=nndsxT1E1IfLastTestResultTestType, nndsxT1E1IfUserTotalStatsES=nndsxT1E1IfUserTotalStatsES, nndsxT1E1IfAlarmThresholdConfigIndex=nndsxT1E1IfAlarmThresholdConfigIndex, nndsxT1E1IfArchiveStatsValidIntervalsEntry=nndsxT1E1IfArchiveStatsValidIntervalsEntry, nndsxT1E1IfLastTestResultTestPattern=nndsxT1E1IfLastTestResultTestPattern, nndsxT1E1IfAttArchiveStatsTable=nndsxT1E1IfAttArchiveStatsTable, nndsxT1E1IfAnsiCurrentPathStatsUAS=nndsxT1E1IfAnsiCurrentPathStatsUAS, nndsxT1E1IfTestStatusErrorCount=nndsxT1E1IfTestStatusErrorCount, nndsxT1E1IfIetfCurrentStatsTable=nndsxT1E1IfIetfCurrentStatsTable, nndsxT1E1IfConfigGroup=nndsxT1E1IfConfigGroup, nndsxT1E1IfUserArchiveStatsEEV=nndsxT1E1IfUserArchiveStatsEEV, nndsxT1E1IfUserArchiveStatsBPV=nndsxT1E1IfUserArchiveStatsBPV, nndsxT1E1IfTestStatusTable=nndsxT1E1IfTestStatusTable, nndsxT1E1IfAttArchiveStatsCSS=nndsxT1E1IfAttArchiveStatsCSS, nndsxT1E1IfUserCurrentStatsES=nndsxT1E1IfUserCurrentStatsES, nndsxT1E1IfUserCurrentStatsEEV=nndsxT1E1IfUserCurrentStatsEEV, nndsxT1E1IfLastTestResultTable=nndsxT1E1IfLastTestResultTable, nndsxT1E1IfAttArchiveStatsES=nndsxT1E1IfAttArchiveStatsES, nndsxT1E1IfUserLifetimeStatsES=nndsxT1E1IfUserLifetimeStatsES, nndsxT1E1NotificationGroup=nndsxT1E1NotificationGroup, nndsxT1E1IfAnsiArchiveStatsInterval=nndsxT1E1IfAnsiArchiveStatsInterval, nndsxT1E1IfAttTotalStatsSES=nndsxT1E1IfAttTotalStatsSES, nndsxT1E1IfItutArchiveStatsValidIntervals=nndsxT1E1IfItutArchiveStatsValidIntervals, nndsxT1E1IfTestStatusLockedSeconds=nndsxT1E1IfTestStatusLockedSeconds, nndsxT1E1IfTestConfigType=nndsxT1E1IfTestConfigType, nndsxT1E1IfUserLifetimeStatsUAS=nndsxT1E1IfUserLifetimeStatsUAS, nndsxT1E1IfIetfCurrentStatsSEFS=nndsxT1E1IfIetfCurrentStatsSEFS, nndsxT1E1IfStatusLineStatus=nndsxT1E1IfStatusLineStatus, nndsxT1E1IfAnsiCurrentLineStatsSES=nndsxT1E1IfAnsiCurrentLineStatsSES, nndsxT1E1IfItutTotalStatsBBE=nndsxT1E1IfItutTotalStatsBBE, nndsxT1E1IfConfigFdl=nndsxT1E1IfConfigFdl, nndsxT1E1IfAttArchiveStatsValidIntervals=nndsxT1E1IfAttArchiveStatsValidIntervals, nndsxT1E1IfAnsiCurrentStatsUASState=nndsxT1E1IfAnsiCurrentStatsUASState, nndsxT1E1IfAttTotalStatsEEV=nndsxT1E1IfAttTotalStatsEEV, nndsxT1E1IfAnsiArchiveIntervalLineStatsSES=nndsxT1E1IfAnsiArchiveIntervalLineStatsSES, nndsxT1E1IfUserLifetimeStatsCRC=nndsxT1E1IfUserLifetimeStatsCRC, nndsxT1E1IfAnsiTotalPathStatsES=nndsxT1E1IfAnsiTotalPathStatsES, nndsxT1E1IfAttTotalStatsES=nndsxT1E1IfAttTotalStatsES, nndsxT1E1IfIetfTotalStatsDM=nndsxT1E1IfIetfTotalStatsDM, nndsxT1E1IfIetfArchiveStatsLES=nndsxT1E1IfIetfArchiveStatsLES, nndsxT1E1IfIetfArchiveStatsPCV=nndsxT1E1IfIetfArchiveStatsPCV, nndsxT1E1IfAnsiArchiveIntervalPathStatsES=nndsxT1E1IfAnsiArchiveIntervalPathStatsES, nndsxT1E1IfConfigAlarmHierarchy=nndsxT1E1IfConfigAlarmHierarchy, nndsxT1E1IfUserLifetimeStatsBPV=nndsxT1E1IfUserLifetimeStatsBPV, nndsxT1E1IfAnsiArchiveIntervalPathStatsSAS=nndsxT1E1IfAnsiArchiveIntervalPathStatsSAS, nndsxT1E1IfUserTotalStatsEntry=nndsxT1E1IfUserTotalStatsEntry, nndsxT1E1MIB=nndsxT1E1MIB, nndsxT1E1IfStatsGroup=nndsxT1E1IfStatsGroup, nndsxT1E1IfTestStatusTestTime=nndsxT1E1IfTestStatusTestTime, nndsxT1E1IfAnsiCurrentLineStatsES=nndsxT1E1IfAnsiCurrentLineStatsES, nndsxT1E1IfAnsiArchiveIntervalPathStatsUAS=nndsxT1E1IfAnsiArchiveIntervalPathStatsUAS, nndsxT1E1IfAttCurrentStatsTable=nndsxT1E1IfAttCurrentStatsTable, nndsxT1E1IfAttTotalStatsCSS=nndsxT1E1IfAttTotalStatsCSS, nndsxT1E1IfTestStatusEntry=nndsxT1E1IfTestStatusEntry, nndsxT1E1IfUserCurrentStatsTimeInCurrent=nndsxT1E1IfUserCurrentStatsTimeInCurrent, nndsxT1E1IfArchiveStatsValidIntervalsTable=nndsxT1E1IfArchiveStatsValidIntervalsTable, nndsxT1E1IfAnsiTotalStatsTable=nndsxT1E1IfAnsiTotalStatsTable, nndsxT1E1IfUserArchiveStatsBES=nndsxT1E1IfUserArchiveStatsBES, nndsxT1E1IfAttCurrentStatsTimeInCurrent=nndsxT1E1IfAttCurrentStatsTimeInCurrent, nndsxT1E1IfLastTestResultErrorCount=nndsxT1E1IfLastTestResultErrorCount, nndsxT1E1IfAttArchiveStatsEEV=nndsxT1E1IfAttArchiveStatsEEV, nndsxT1E1IfIetfTotalStatsSEFS=nndsxT1E1IfIetfTotalStatsSEFS, nndsxT1E1IfTestConfigLoopCode=nndsxT1E1IfTestConfigLoopCode, nndsxT1E1IfStatusEntry=nndsxT1E1IfStatusEntry, nndsxT1E1IfIetfCurrentStatsUASState=nndsxT1E1IfIetfCurrentStatsUASState, nndsxT1E1IfItutArchiveStatsUAS=nndsxT1E1IfItutArchiveStatsUAS, nndsxT1E1IfUserLifetimeStatsTable=nndsxT1E1IfUserLifetimeStatsTable, nndsxT1E1IfAlarmThresholdConfigEnable=nndsxT1E1IfAlarmThresholdConfigEnable, nndsxT1E1IfAnsiTotalLineStatsES=nndsxT1E1IfAnsiTotalLineStatsES, nndsxT1E1IfUserCurrentStatsUAS=nndsxT1E1IfUserCurrentStatsUAS, nndsxT1E1IfUserLifetimeStatsBES=nndsxT1E1IfUserLifetimeStatsBES, nndsxT1E1IfAttCurrentStatsEEV=nndsxT1E1IfAttCurrentStatsEEV, nndsxT1E1IfAnsiTotalStatsEntry=nndsxT1E1IfAnsiTotalStatsEntry, nndsxT1E1IfAttArchiveInterval=nndsxT1E1IfAttArchiveInterval, nndsxT1E1IfAnsiTotalPathStatsUAS=nndsxT1E1IfAnsiTotalPathStatsUAS, nndsxT1E1IfIetfTotalStatsUAS=nndsxT1E1IfIetfTotalStatsUAS, nndsxT1E1IfAttStatsGroup=nndsxT1E1IfAttStatsGroup, nndsxT1E1IfUserArchiveStatsSES=nndsxT1E1IfUserArchiveStatsSES, nndsxT1E1IfTestStatusTestState=nndsxT1E1IfTestStatusTestState, nndsxT1E1IfUserTotalStatsEEV=nndsxT1E1IfUserTotalStatsEEV, nndsxT1E1IfIetfArchiveStatsSEFS=nndsxT1E1IfIetfArchiveStatsSEFS, nndsxT1E1IfItutTotalStatsSES=nndsxT1E1IfItutTotalStatsSES, nndsxT1E1IfIetfCurrentStatsCSS=nndsxT1E1IfIetfCurrentStatsCSS, nndsxT1E1TrapVariables=nndsxT1E1TrapVariables, nndsxT1E1IfItutStatsGroup=nndsxT1E1IfItutStatsGroup, nndsxT1E1IfAttCurrentStatsES=nndsxT1E1IfAttCurrentStatsES, nndsxT1E1IfAnsiArchiveIntervalLineStatsES=nndsxT1E1IfAnsiArchiveIntervalLineStatsES, nndsxT1E1IfUserLifetimeStatsCSS=nndsxT1E1IfUserLifetimeStatsCSS, nndsxT1E1IfIetfStatsGroup=nndsxT1E1IfIetfStatsGroup, nndsxT1E1IfAnsiTotalPathStatsSES=nndsxT1E1IfAnsiTotalPathStatsSES, nndsxT1E1IfAnsiTotalLineStatsCV=nndsxT1E1IfAnsiTotalLineStatsCV, nndsxT1E1IfIetfTotalStatsSES=nndsxT1E1IfIetfTotalStatsSES, nndsxT1E1IfUserArchiveStatsUAS=nndsxT1E1IfUserArchiveStatsUAS, nndsxT1E1IfLastTestResultEntry=nndsxT1E1IfLastTestResultEntry, nndsxT1E1IfConfigFdlTable=nndsxT1E1IfConfigFdlTable, nndsxT1E1IfStatusTable=nndsxT1E1IfStatusTable, nndsxT1E1IfAlarmThresholdConfigRisingThreshold=nndsxT1E1IfAlarmThresholdConfigRisingThreshold, nndsxT1E1IfUserTotalStatsUAS=nndsxT1E1IfUserTotalStatsUAS, nndsxT1E1IfAnsiCurrentStatsEntry=nndsxT1E1IfAnsiCurrentStatsEntry, nndsxT1E1IfIetfTotalStatsES=nndsxT1E1IfIetfTotalStatsES, nndsxT1E1IfAlarmThresholdConfigFallingThreshold=nndsxT1E1IfAlarmThresholdConfigFallingThreshold, nndsxT1E1IfItutTotalStatsES=nndsxT1E1IfItutTotalStatsES, nndsxT1E1IfAnsiArchiveIntervalStatsTable=nndsxT1E1IfAnsiArchiveIntervalStatsTable, nndsxT1E1IfAnsiArchiveIntervalLineStatsCV=nndsxT1E1IfAnsiArchiveIntervalLineStatsCV, nndsxT1E1IfTestConfigTime=nndsxT1E1IfTestConfigTime, nndsxT1E1IfAlarmThresholdConfigTable=nndsxT1E1IfAlarmThresholdConfigTable, nndsxT1E1IfAlarmStatusTable=nndsxT1E1IfAlarmStatusTable, nndsxT1E1IfUserCurrentStatsLOFC=nndsxT1E1IfUserCurrentStatsLOFC, nndsxT1E1IfUserArchiveStatsLOFC=nndsxT1E1IfUserArchiveStatsLOFC, nndsxT1E1Type=nndsxT1E1Type, nndsxT1E1IfUserTotalStatsSES=nndsxT1E1IfUserTotalStatsSES, nndsxT1E1IfConfigCableLength=nndsxT1E1IfConfigCableLength, nndsxT1E1AlarmType=nndsxT1E1AlarmType, nndsxT1E1IfContactInfo=nndsxT1E1IfContactInfo)
mibBuilder.exportSymbols("DSX-TE1-MIB", nndsxT1E1IfIetfCurrentStatsES=nndsxT1E1IfIetfCurrentStatsES, nndsxT1E1IfAlarmThresholdConfigSamplingInterval=nndsxT1E1IfAlarmThresholdConfigSamplingInterval, nndsxT1E1IfAttArchiveStatsSES=nndsxT1E1IfAttArchiveStatsSES, nndsxT1E1IfUserArchiveStatsES=nndsxT1E1IfUserArchiveStatsES, nndsxT1E1IfUserTotalStatsCRC=nndsxT1E1IfUserTotalStatsCRC, nndsxT1E1IfItutArchiveStatsSES=nndsxT1E1IfItutArchiveStatsSES, nndsxT1E1IfIetfCurrentStatsDM=nndsxT1E1IfIetfCurrentStatsDM, nndsxT1E1IfUserArchiveStatsOOF=nndsxT1E1IfUserArchiveStatsOOF, nndsxT1E1Traps=nndsxT1E1Traps, nndsxT1E1IfIetfCurrentStatsTimeInCurrent=nndsxT1E1IfIetfCurrentStatsTimeInCurrent, nndsxT1E1IfConfigFdlCsuDsuType=nndsxT1E1IfConfigFdlCsuDsuType, nndsxT1E1IfUserCurrentStatsTable=nndsxT1E1IfUserCurrentStatsTable, nndsxT1E1IfIetfCurrentStatsBES=nndsxT1E1IfIetfCurrentStatsBES, nndsxT1E1IfAttArchiveStatsUAS=nndsxT1E1IfAttArchiveStatsUAS)
