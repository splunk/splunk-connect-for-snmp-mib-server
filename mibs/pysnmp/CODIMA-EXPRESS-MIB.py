#
# PySNMP MIB module CODIMA-EXPRESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CODIMA-EXPRESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
codimaProducts, = mibBuilder.importSymbols("CODIMA-GLOBAL-REG", "codimaProducts")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Bits, Integer32, IpAddress, Counter32, MibIdentifier, NotificationType, ModuleIdentity, TimeTicks, Unsigned32, Counter64, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Integer32", "IpAddress", "Counter32", "MibIdentifier", "NotificationType", "ModuleIdentity", "TimeTicks", "Unsigned32", "Counter64", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
codimaExpressMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2))
codimaExpressMIB.setRevisions(('2003-05-30 09:59',))
if mibBuilder.loadTexts: codimaExpressMIB.setLastUpdated('200305300959Z')
if mibBuilder.loadTexts: codimaExpressMIB.setOrganization('CODIMA Technologies Ltd')
codimaExpressObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1))
if mibBuilder.loadTexts: codimaExpressObjects.setStatus('current')
expHistoryDatabases = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1))
if mibBuilder.loadTexts: expHistoryDatabases.setStatus('current')
dbControl = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1))
if mibBuilder.loadTexts: dbControl.setStatus('current')
ctrlTimeTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1, 1), )
if mibBuilder.loadTexts: ctrlTimeTable.setStatus('current')
ctrlTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ctSampleType"))
if mibBuilder.loadTexts: ctrlTimeEntry.setStatus('current')
ctSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("longTerm", 1), ("shortTerm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctSampleType.setStatus('current')
ctTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctTimeSlots.setStatus('current')
ctLockMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lockUserTime", 1), ("lockRealTime", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctLockMethod.setStatus('current')
ctLockUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctLockUserTime.setStatus('current')
ctLockRealTime = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctLockRealTime.setStatus('current')
dbSegment = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2))
if mibBuilder.loadTexts: dbSegment.setStatus('current')
segLongTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1))
if mibBuilder.loadTexts: segLongTerm.setStatus('current')
slBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: slBaseTable.setStatus('current')
slBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "slbTimeStampIndex"))
if mibBuilder.loadTexts: slBaseEntry.setStatus('current')
slbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbTimeStampIndex.setStatus('current')
slbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbTimeStamp.setStatus('current')
slbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbFrames.setStatus('current')
slbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbBytes.setStatus('current')
slbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 5), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbFrameSize.setStatus('current')
slbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbHardwareErrors.setStatus('current')
slbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSoftwareErrors.setStatus('current')
slbActiveNodes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbActiveNodes.setStatus('current')
slBroadcastTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2), )
if mibBuilder.loadTexts: slBroadcastTable.setStatus('current')
slBroadcastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "slbcTimeStampIndex"))
if mibBuilder.loadTexts: slBroadcastEntry.setStatus('current')
slbcTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbcTimeStampIndex.setStatus('current')
slbcTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbcTimeStamp.setStatus('current')
slbcBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbcBytes.setStatus('current')
slbcPercentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbcPercentBytes.setStatus('current')
slbcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbcFrames.setStatus('current')
slbcPercentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbcPercentFrames.setStatus('current')
slDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 3), )
if mibBuilder.loadTexts: slDerivedTable.setStatus('current')
slDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "sldTimeStampIndex"))
if mibBuilder.loadTexts: slDerivedEntry.setStatus('current')
sldTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sldTimeStampIndex.setStatus('current')
sldTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sldTimeStamp.setStatus('current')
sldUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sldUtilization.setStatus('current')
sldErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sldErrorFrames.setStatus('current')
slEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4), )
if mibBuilder.loadTexts: slEthernetTable.setStatus('current')
slEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "sleTimeStampIndex"))
if mibBuilder.loadTexts: slEthernetEntry.setStatus('current')
sleTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sleTimeStampIndex.setStatus('current')
sleTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sleTimeStamp.setStatus('current')
sleRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sleRunts.setStatus('current')
sleJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sleJabbers.setStatus('current')
sleCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sleCrc.setStatus('current')
sleCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sleCollisions.setStatus('current')
sleLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sleLateCollisions.setStatus('current')
slIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5), )
if mibBuilder.loadTexts: slIcmpTable.setStatus('current')
slIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "sliTimeStampIndex"))
if mibBuilder.loadTexts: slIcmpEntry.setStatus('current')
sliTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliTimeStampIndex.setStatus('current')
sliTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliTimeStamp.setStatus('current')
sliPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliPing.setStatus('current')
sliSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliSrcQuench.setStatus('current')
sliRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliRedirect.setStatus('current')
sliTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliTtlExceeded.setStatus('current')
sliParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliParamProblem.setStatus('current')
sliTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliTimestamp.setStatus('current')
sliFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliFragTimeout.setStatus('current')
sliNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliNetUnreachable.setStatus('current')
sliHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliHostUnreachable.setStatus('current')
sliProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliProtocolUnreachable.setStatus('current')
sliPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliPortUnreachable.setStatus('current')
sliFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliFragRequired.setStatus('current')
sliSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliSrcRouteFail.setStatus('current')
sliDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliDestNetUnknown.setStatus('current')
sliDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliDestHostUnknown.setStatus('current')
sliSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliSrcHostIsolated.setStatus('current')
sliNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliNetProhibited.setStatus('current')
sliHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliHostProhibited.setStatus('current')
sliNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliNetTosUnreachable.setStatus('current')
sliHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliHostTosUnreachable.setStatus('current')
sliPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliPerformance.setStatus('current')
sliNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliNetRouteProblem.setStatus('current')
sliHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliHostRouteProblem.setStatus('current')
sliAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliAppRouteProblem.setStatus('current')
sliRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliRouteChange.setStatus('current')
sliGrpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliGrpErrors.setStatus('current')
sliMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sliMaintenance.setStatus('current')
slPortTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6), )
if mibBuilder.loadTexts: slPortTable.setStatus('current')
slPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "slp1TimeStampIndex"))
if mibBuilder.loadTexts: slPortEntry.setStatus('current')
slp1TimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1TimeStampIndex.setStatus('current')
slp1TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1TimeStamp.setStatus('current')
slp1Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1Frames.setStatus('current')
slp1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1Bytes.setStatus('current')
slp1FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 5), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1FrameSize.setStatus('current')
slp1Utilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1Utilization.setStatus('current')
slp1LineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1LineSpeed.setStatus('current')
slp1SoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1SoftErrors.setStatus('current')
slp1Runts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1Runts.setStatus('current')
slp1Jabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1Jabbers.setStatus('current')
slp1Crc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1Crc.setStatus('current')
slp1Collisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1Collisions.setStatus('current')
slp1LateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1LateCollisions.setStatus('current')
slp1LineNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp1LineNoise.setStatus('current')
slp2Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2Frames.setStatus('current')
slp2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2Bytes.setStatus('current')
slp2FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 17), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2FrameSize.setStatus('current')
slp2Utilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2Utilization.setStatus('current')
slp2LineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 19), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2LineSpeed.setStatus('current')
slp2SoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2SoftErrors.setStatus('current')
slp2Runts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2Runts.setStatus('current')
slp2Jabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2Jabbers.setStatus('current')
slp2Crc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2Crc.setStatus('current')
slp2Collisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2Collisions.setStatus('current')
slp2LateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2LateCollisions.setStatus('current')
slp2LineNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 1, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slp2LineNoise.setStatus('current')
segShortTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2))
if mibBuilder.loadTexts: segShortTerm.setStatus('current')
ssBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: ssBaseTable.setStatus('current')
ssBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ssbTimeStampIndex"))
if mibBuilder.loadTexts: ssBaseEntry.setStatus('current')
ssbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbTimeStampIndex.setStatus('current')
ssbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbTimeStamp.setStatus('current')
ssbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbFrames.setStatus('current')
ssbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbBytes.setStatus('current')
ssbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 5), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbFrameSize.setStatus('current')
ssbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbHardwareErrors.setStatus('current')
ssbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbSoftwareErrors.setStatus('current')
ssbActiveNodes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbActiveNodes.setStatus('current')
ssBroadcastTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2), )
if mibBuilder.loadTexts: ssBroadcastTable.setStatus('current')
ssBroadcastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ssbcTimeStampIndex"))
if mibBuilder.loadTexts: ssBroadcastEntry.setStatus('current')
ssbcTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbcTimeStampIndex.setStatus('current')
ssbcTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbcTimeStamp.setStatus('current')
ssbcBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbcBytes.setStatus('current')
ssbcBytesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbcBytesPercent.setStatus('current')
ssbcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbcFrames.setStatus('current')
ssbcFramesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssbcFramesPercent.setStatus('current')
ssDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 3), )
if mibBuilder.loadTexts: ssDerivedTable.setStatus('current')
ssDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ssdTimeStampIndex"))
if mibBuilder.loadTexts: ssDerivedEntry.setStatus('current')
ssdTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssdTimeStampIndex.setStatus('current')
ssdTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssdTimeStamp.setStatus('current')
ssdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssdUtilization.setStatus('current')
ssdErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssdErrorFrames.setStatus('current')
ssEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4), )
if mibBuilder.loadTexts: ssEthernetTable.setStatus('current')
ssEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "sseTimeStampIndex"))
if mibBuilder.loadTexts: ssEthernetEntry.setStatus('current')
sseTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sseTimeStampIndex.setStatus('current')
sseTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sseTimeStamp.setStatus('current')
sseRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sseRunts.setStatus('current')
sseJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sseJabbers.setStatus('current')
sseCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sseCrc.setStatus('current')
sseCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sseCollisions.setStatus('current')
sseLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sseLateCollisions.setStatus('current')
ssIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5), )
if mibBuilder.loadTexts: ssIcmpTable.setStatus('current')
ssIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ssiTimeStampIndex"))
if mibBuilder.loadTexts: ssIcmpEntry.setStatus('current')
ssiTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiTimeStampIndex.setStatus('current')
ssiTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiTimeStamp.setStatus('current')
ssiPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiPing.setStatus('current')
ssiSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiSrcQuench.setStatus('current')
ssiRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiRedirect.setStatus('current')
ssiTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiTtlExceeded.setStatus('current')
ssiParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiParamProblem.setStatus('current')
ssiTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiTimestamp.setStatus('current')
ssiFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiFragTimeout.setStatus('current')
ssiNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiNetUnreachable.setStatus('current')
ssiHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiHostUnreachable.setStatus('current')
ssiProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiProtocolUnreachable.setStatus('current')
ssiPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiPortUnreachable.setStatus('current')
ssiFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiFragRequired.setStatus('current')
ssiSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiSrcRouteFail.setStatus('current')
ssiDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiDestNetUnknown.setStatus('current')
ssiDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiDestHostUnknown.setStatus('current')
ssiSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiSrcHostIsolated.setStatus('current')
ssiNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiNetProhibited.setStatus('current')
ssiHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiHostProhibited.setStatus('current')
ssiNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiNetTosUnreachable.setStatus('current')
ssiHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiHostTosUnreachable.setStatus('current')
ssiPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiPerformance.setStatus('current')
ssiNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiNetRouteProblem.setStatus('current')
ssiHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiHostRouteProblem.setStatus('current')
ssiAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiAppRouteProblem.setStatus('current')
ssiRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiRouteChange.setStatus('current')
ssiErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiErrors.setStatus('current')
ssiMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssiMaintenance.setStatus('current')
ssPortTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6), )
if mibBuilder.loadTexts: ssPortTable.setStatus('current')
ssPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "sspTimeStampIndex"))
if mibBuilder.loadTexts: ssPortEntry.setStatus('current')
sspTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspTimeStampIndex.setStatus('current')
sspTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspTimeStamp.setStatus('current')
ssp1Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1Frames.setStatus('current')
ssp1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1Bytes.setStatus('current')
ssp1FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 5), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1FrameSize.setStatus('current')
ssp1Utilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1Utilization.setStatus('current')
ssp1LineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1LineSpeed.setStatus('current')
ssp1SoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1SoftErrors.setStatus('current')
ssp1Runts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1Runts.setStatus('current')
ssp1Jabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1Jabbers.setStatus('current')
ssp1Crc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1Crc.setStatus('current')
ssp1Collisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1Collisions.setStatus('current')
ssp1LateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1LateCollisions.setStatus('current')
ssp1LineNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp1LineNoise.setStatus('current')
ssp2Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2Frames.setStatus('current')
ssp2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2Bytes.setStatus('current')
ssp2FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 17), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2FrameSize.setStatus('current')
ssp2Utilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2Utilization.setStatus('current')
ssp2LineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 19), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2LineSpeed.setStatus('current')
ssp2SoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2SoftErrors.setStatus('current')
ssp2Runts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2Runts.setStatus('current')
ssp2Jabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2Jabbers.setStatus('current')
ssp2Crc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2Crc.setStatus('current')
ssp2Collisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2Collisions.setStatus('current')
ssp2LateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2LateCollisions.setStatus('current')
ssp2LineNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 2, 2, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssp2LineNoise.setStatus('current')
dbMac = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3))
if mibBuilder.loadTexts: dbMac.setStatus('current')
macLongTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1))
if mibBuilder.loadTexts: macLongTerm.setStatus('current')
mlBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1), )
if mibBuilder.loadTexts: mlBaseTable.setStatus('current')
mlBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mlbMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mlbTimeStampIndex"))
if mibBuilder.loadTexts: mlBaseEntry.setStatus('current')
mlbMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbMacIndex.setStatus('current')
mlbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbTimeStampIndex.setStatus('current')
mlbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbTimeStamp.setStatus('current')
mlbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbFrames.setStatus('current')
mlbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbBytes.setStatus('current')
mlbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 6), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbFrameSize.setStatus('current')
mlbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbHardwareErrors.setStatus('current')
mlbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlbSoftwareErrors.setStatus('current')
mlDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 2), )
if mibBuilder.loadTexts: mlDerivedTable.setStatus('current')
mlDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mldMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mldTimeStampIndex"))
if mibBuilder.loadTexts: mlDerivedEntry.setStatus('current')
mldMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mldMacIndex.setStatus('current')
mldTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mldTimeStampIndex.setStatus('current')
mldTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mldTimeStamp.setStatus('current')
mldUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mldUtilization.setStatus('current')
mldErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mldErrorFrames.setStatus('current')
mlDuplexTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3), )
if mibBuilder.loadTexts: mlDuplexTable.setStatus('current')
mlDuplexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mlduMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mlduTimeStampIndex"))
if mibBuilder.loadTexts: mlDuplexEntry.setStatus('current')
mlduMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduMacIndex.setStatus('current')
mlduTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduTimeStampIndex.setStatus('current')
mlduTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduTimeStamp.setStatus('current')
mlduTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduTxFrames.setStatus('current')
mlduTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduTxBytes.setStatus('current')
mlduTxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 6), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduTxFrameSize.setStatus('current')
mlduTxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduTxUtilization.setStatus('current')
mlduRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduRxFrames.setStatus('current')
mlduRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduRxBytes.setStatus('current')
mlduRxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 10), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduRxFrameSize.setStatus('current')
mlduRxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlduRxUtilization.setStatus('current')
mlEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4), )
if mibBuilder.loadTexts: mlEthernetTable.setStatus('current')
mlEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mleMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mleTimeStampIndex"))
if mibBuilder.loadTexts: mlEthernetEntry.setStatus('current')
mleMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleMacIndex.setStatus('current')
mleTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleTimeStampIndex.setStatus('current')
mleTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleTimeStamp.setStatus('current')
mleRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleRunts.setStatus('current')
mleJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleJabbers.setStatus('current')
mleCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleCrc.setStatus('current')
mleCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleCollisions.setStatus('current')
mleLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mleLateCollisions.setStatus('current')
mlIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5), )
if mibBuilder.loadTexts: mlIcmpTable.setStatus('current')
mlIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mliMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mliTimeStampIndex"))
if mibBuilder.loadTexts: mlIcmpEntry.setStatus('current')
mliMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliMacIndex.setStatus('current')
mliTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliTimeStampIndex.setStatus('current')
mliTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliTimeStamp.setStatus('current')
mliPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliPing.setStatus('current')
mliSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliSrcQuench.setStatus('current')
mliRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliRedirect.setStatus('current')
mliTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliTtlExceeded.setStatus('current')
mliParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliParamProblem.setStatus('current')
mliTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliTimestamp.setStatus('current')
mliFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliFragTimeout.setStatus('current')
mliNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliNetUnreachable.setStatus('current')
mliHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliHostUnreachable.setStatus('current')
mliProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliProtocolUnreachable.setStatus('current')
mliPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliPortUnreachable.setStatus('current')
mliFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliFragRequired.setStatus('current')
mliSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliSrcRouteFail.setStatus('current')
mliDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliDestNetUnknown.setStatus('current')
mliDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliDestHostUnknown.setStatus('current')
mliSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliSrcHostIsolated.setStatus('current')
mliNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliNetProhibited.setStatus('current')
mliHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliHostProhibited.setStatus('current')
mliNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliNetTosUnreachable.setStatus('current')
mliHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliHostTosUnreachable.setStatus('current')
mliPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliPerformance.setStatus('current')
mliNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliNetRouteProblem.setStatus('current')
mliHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliHostRouteProblem.setStatus('current')
mliAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliAppRouteProblem.setStatus('current')
mliRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliRouteChange.setStatus('current')
mliErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliErrors.setStatus('current')
mliMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mliMaintenance.setStatus('current')
mlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6), )
if mibBuilder.loadTexts: mlProtocolTable.setStatus('current')
mlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mlpMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mlpTimeStampIndex"))
if mibBuilder.loadTexts: mlProtocolEntry.setStatus('current')
mlpMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpMacIndex.setStatus('current')
mlpTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpTimeStampIndex.setStatus('current')
mlpTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpTimeStamp.setStatus('current')
mlpNovell = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpNovell.setStatus('current')
mlpSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpSnmp.setStatus('current')
mlpRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpRouting.setStatus('current')
mlpWww = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpWww.setStatus('current')
mlpIcmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpIcmp.setStatus('current')
mlpIso = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpIso.setStatus('current')
mlpMail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpMail.setStatus('current')
mlpNetbios = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpNetbios.setStatus('current')
mlpDns = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpDns.setStatus('current')
mlpIp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpIp.setStatus('current')
mlpVoip = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpVoip.setStatus('current')
mlpLayer3Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpLayer3Traffic.setStatus('current')
mlpIpData = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpIpData.setStatus('current')
mlpApplications = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpApplications.setStatus('current')
mlpIpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpIpControl.setStatus('current')
mlpManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 1, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mlpManagement.setStatus('current')
macShortTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2))
if mibBuilder.loadTexts: macShortTerm.setStatus('current')
msBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1), )
if mibBuilder.loadTexts: msBaseTable.setStatus('current')
msBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "msbMacIndex"), (0, "CODIMA-EXPRESS-MIB", "msbTimeStampIndex"))
if mibBuilder.loadTexts: msBaseEntry.setStatus('current')
msbMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msbMacIndex.setStatus('current')
msbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msbTimeStampIndex.setStatus('current')
msbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msbTimeStamp.setStatus('current')
msbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msbFrames.setStatus('current')
msbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msbBytes.setStatus('current')
msbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 6), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: msbFrameSize.setStatus('current')
msbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msbHardwareErrors.setStatus('current')
msbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msbSoftwareErrors.setStatus('current')
msDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 2), )
if mibBuilder.loadTexts: msDerivedTable.setStatus('current')
msDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "msdMacIndex"), (0, "CODIMA-EXPRESS-MIB", "msdTimeStampIndex"))
if mibBuilder.loadTexts: msDerivedEntry.setStatus('current')
msdMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdMacIndex.setStatus('current')
msdTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdTimeStampIndex.setStatus('current')
msdTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdTimeStamp.setStatus('current')
msdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdUtilization.setStatus('current')
msdErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdErrorFrames.setStatus('current')
msDuplexTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3), )
if mibBuilder.loadTexts: msDuplexTable.setStatus('current')
msDuplexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "msdpMacIndex"), (0, "CODIMA-EXPRESS-MIB", "msdpTimeStampIndex"))
if mibBuilder.loadTexts: msDuplexEntry.setStatus('current')
msdpMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpMacIndex.setStatus('current')
msdpTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpTimeStampIndex.setStatus('current')
msdpTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpTimeStamp.setStatus('current')
msdpTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpTxFrames.setStatus('current')
msdpTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpTxBytes.setStatus('current')
msdpTxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 6), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpTxFrameSize.setStatus('current')
msdpTxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpTxUtilization.setStatus('current')
msdpRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpRxFrames.setStatus('current')
msdpRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpRxBytes.setStatus('current')
msdpRxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 10), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpRxFrameSize.setStatus('current')
msdpRxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpRxUtilization.setStatus('current')
msEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4), )
if mibBuilder.loadTexts: msEthernetTable.setStatus('current')
msEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mseMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mseTimeStampIndex"))
if mibBuilder.loadTexts: msEthernetEntry.setStatus('current')
mseMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseMacIndex.setStatus('current')
mseTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseTimeStampIndex.setStatus('current')
mseTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseTimeStamp.setStatus('current')
mseRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseRunts.setStatus('current')
mseJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseJabbers.setStatus('current')
mseCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseCrc.setStatus('current')
mseCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseCollisions.setStatus('current')
mseLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mseLateCollisions.setStatus('current')
msIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5), )
if mibBuilder.loadTexts: msIcmpTable.setStatus('current')
msIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "msiMacIndex"), (0, "CODIMA-EXPRESS-MIB", "msiTimeStampIndex"))
if mibBuilder.loadTexts: msIcmpEntry.setStatus('current')
msiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiMacIndex.setStatus('current')
msiTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiTimeStampIndex.setStatus('current')
msiTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiTimeStamp.setStatus('current')
msiPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiPing.setStatus('current')
msiSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiSrcQuench.setStatus('current')
msiRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiRedirect.setStatus('current')
msiTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiTtlExceeded.setStatus('current')
msiParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiParamProblem.setStatus('current')
msiTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiTimestamp.setStatus('current')
msiFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiFragTimeout.setStatus('current')
msiNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiNetUnreachable.setStatus('current')
msiHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiHostUnreachable.setStatus('current')
msiProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiProtocolUnreachable.setStatus('current')
msiPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiPortUnreachable.setStatus('current')
msiFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiFragRequired.setStatus('current')
msiSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiSrcRouteFail.setStatus('current')
msiDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiDestNetUnknown.setStatus('current')
msiDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiDestHostUnknown.setStatus('current')
msiSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiSrcHostIsolated.setStatus('current')
msiNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiNetProhibited.setStatus('current')
msiHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiHostProhibited.setStatus('current')
msiNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiNetTosUnreachable.setStatus('current')
msiHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiHostTosUnreachable.setStatus('current')
msiPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiPerformance.setStatus('current')
msiNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiNetRouteProblem.setStatus('current')
msiHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiHostRouteProblem.setStatus('current')
msiAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiAppRouteProblem.setStatus('current')
msiRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiRouteChange.setStatus('current')
msiErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiErrors.setStatus('current')
msiMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msiMaintenance.setStatus('current')
msProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6), )
if mibBuilder.loadTexts: msProtocolTable.setStatus('current')
msProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mspMacIndex"), (0, "CODIMA-EXPRESS-MIB", "mspTimeStampIndex"))
if mibBuilder.loadTexts: msProtocolEntry.setStatus('current')
mspMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspMacIndex.setStatus('current')
mspTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspTimeStampIndex.setStatus('current')
mspTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspTimeStamp.setStatus('current')
mspNovell = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspNovell.setStatus('current')
mspSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspSnmp.setStatus('current')
mspRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspRouting.setStatus('current')
mspWww = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspWww.setStatus('current')
mspIcmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspIcmp.setStatus('current')
mspIso = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspIso.setStatus('current')
mspMail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspMail.setStatus('current')
mspNetbios = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspNetbios.setStatus('current')
mspDns = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspDns.setStatus('current')
mspIp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspIp.setStatus('current')
mspVoip = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspVoip.setStatus('current')
mspLayer3Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspLayer3Traffic.setStatus('current')
mspIpData = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspIpData.setStatus('current')
mspApplications = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspApplications.setStatus('current')
mspIpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspIpControl.setStatus('current')
mspManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 3, 2, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspManagement.setStatus('current')
dbMacPeer = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4))
if mibBuilder.loadTexts: dbMacPeer.setStatus('current')
macPeerLongTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1))
if mibBuilder.loadTexts: macPeerLongTerm.setStatus('current')
mplBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1), )
if mibBuilder.loadTexts: mplBaseTable.setStatus('current')
mplBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mplbMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mplbMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mplbTimeStampIndex"))
if mibBuilder.loadTexts: mplBaseEntry.setStatus('current')
mplbMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbMac1Index.setStatus('current')
mplbMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbMac2Index.setStatus('current')
mplbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbTimeStampIndex.setStatus('current')
mplbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbTimeStamp.setStatus('current')
mplbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbFrames.setStatus('current')
mplbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbBytes.setStatus('current')
mplbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbFrameSize.setStatus('current')
mplbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbHardwareErrors.setStatus('current')
mplbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplbSoftwareErrors.setStatus('current')
mplDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2), )
if mibBuilder.loadTexts: mplDerivedTable.setStatus('current')
mplDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mpldMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mpldMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mpldTimeStampIndex"))
if mibBuilder.loadTexts: mplDerivedEntry.setStatus('current')
mpldMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpldMac1Index.setStatus('current')
mpldMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpldMac2Index.setStatus('current')
mpldTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpldTimeStampIndex.setStatus('current')
mpldTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpldTimeStamp.setStatus('current')
mpldUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpldUtilization.setStatus('current')
mpldErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpldErrorFrames.setStatus('current')
mplDuplexTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3), )
if mibBuilder.loadTexts: mplDuplexTable.setStatus('current')
mplDuplexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mplduMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mplduMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mplduTimeStampIndex"))
if mibBuilder.loadTexts: mplDuplexEntry.setStatus('current')
mplduMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduMac1Index.setStatus('current')
mplduMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduMac2Index.setStatus('current')
mplduTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduTimeStampIndex.setStatus('current')
mplduTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduTimeStamp.setStatus('current')
mplduTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduTxFrames.setStatus('current')
mplduTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduTxBytes.setStatus('current')
mplduTxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduTxFrameSize.setStatus('current')
mplduTxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduTxUtilization.setStatus('current')
mplduRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduRxFrames.setStatus('current')
mplduRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduRxBytes.setStatus('current')
mplduRxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 11), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduRxFrameSize.setStatus('current')
mplduRxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplduRxUtilization.setStatus('current')
mplProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4), )
if mibBuilder.loadTexts: mplProtocolTable.setStatus('current')
mplProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mplpMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mplpMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mplpTimeStampIndex"))
if mibBuilder.loadTexts: mplProtocolEntry.setStatus('current')
mplpMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpMac1Index.setStatus('current')
mplpMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpMac2Index.setStatus('current')
mplpTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpTimeStampIndex.setStatus('current')
mplpTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpTimeStamp.setStatus('current')
mplpNovell = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpNovell.setStatus('current')
mplpSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpSnmp.setStatus('current')
mplpRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpRouting.setStatus('current')
mplpWww = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpWww.setStatus('current')
mplpIcmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpIcmp.setStatus('current')
mplpIso = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpIso.setStatus('current')
mplpMail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpMail.setStatus('current')
mplpNetbios = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpNetbios.setStatus('current')
mplpDns = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpDns.setStatus('current')
mplpIp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpIp.setStatus('current')
mplpVoip = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpVoip.setStatus('current')
mplpLayer3Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpLayer3Traffic.setStatus('current')
mplpIpData = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpIpData.setStatus('current')
mplpApplications = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpApplications.setStatus('current')
mplpIpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpIpControl.setStatus('current')
mplpManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 1, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplpManagement.setStatus('current')
macPeerShortTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2))
if mibBuilder.loadTexts: macPeerShortTerm.setStatus('current')
mpsBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1), )
if mibBuilder.loadTexts: mpsBaseTable.setStatus('current')
mpsBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mpsbMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mpsbMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mpsbTimeStampIndex"))
if mibBuilder.loadTexts: mpsBaseEntry.setStatus('current')
mpsbMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbMac1Index.setStatus('current')
mpsbMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbMac2Index.setStatus('current')
mpsbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbTimeStampIndex.setStatus('current')
mpsbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbTimeStamp.setStatus('current')
mpsbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbFrames.setStatus('current')
mpsbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbBytes.setStatus('current')
mpsbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbFrameSize.setStatus('current')
mpsbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbHardwareErrors.setStatus('current')
mpsbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsbSoftwareErrors.setStatus('current')
mpsDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2), )
if mibBuilder.loadTexts: mpsDerivedTable.setStatus('current')
mpsDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mpsdMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mpsdMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mpsdTimeStampIndex"))
if mibBuilder.loadTexts: mpsDerivedEntry.setStatus('current')
mpsdMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsdMac1Index.setStatus('current')
mpsdMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsdMac2Index.setStatus('current')
mpsdTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsdTimeStampIndex.setStatus('current')
mpsdTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsdTimeStamp.setStatus('current')
mpsdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsdUtilization.setStatus('current')
mpsdErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsdErrorFrames.setStatus('current')
mpsDuplexTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3), )
if mibBuilder.loadTexts: mpsDuplexTable.setStatus('current')
mpsDuplexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mpsduMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mpsduMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mpsduTimeStampIndex"))
if mibBuilder.loadTexts: mpsDuplexEntry.setStatus('current')
mpsduMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduMac1Index.setStatus('current')
mpsduMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduMac2Index.setStatus('current')
mpsduTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduTimeStampIndex.setStatus('current')
mpsduTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduTimeStamp.setStatus('current')
mpsduTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduTxFrames.setStatus('current')
mpsduTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduTxBytes.setStatus('current')
mpsduTxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduTxFrameSize.setStatus('current')
mpsduTxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduTxUtilization.setStatus('current')
mpsduRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduRxFrames.setStatus('current')
mpsduRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduRxBytes.setStatus('current')
mpsduRxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 11), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduRxFrameSize.setStatus('current')
mpsduRxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpsduRxUtilization.setStatus('current')
mpsProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4), )
if mibBuilder.loadTexts: mpsProtocolTable.setStatus('current')
mpsProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "mpspMac1Index"), (0, "CODIMA-EXPRESS-MIB", "mpspMac2Index"), (0, "CODIMA-EXPRESS-MIB", "mpspTimeStampIndex"))
if mibBuilder.loadTexts: mpsProtocolEntry.setStatus('current')
mpspMac1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspMac1Index.setStatus('current')
mpspMac2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspMac2Index.setStatus('current')
mpspTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspTimeStampIndex.setStatus('current')
mpspTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspTimeStamp.setStatus('current')
mpspNovell = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspNovell.setStatus('current')
mpspSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspSnmp.setStatus('current')
mpspRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspRouting.setStatus('current')
mpspWww = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspWww.setStatus('current')
mpspIcmp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspIcmp.setStatus('current')
mpspIso = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspIso.setStatus('current')
mpspMail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspMail.setStatus('current')
mpspNetbios = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspNetbios.setStatus('current')
mpspDns = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspDns.setStatus('current')
mpspIp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspIp.setStatus('current')
mpspVoip = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspVoip.setStatus('current')
mpspLayer3Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspLayer3Traffic.setStatus('current')
mpspIpData = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspIpData.setStatus('current')
mpspApplications = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspApplications.setStatus('current')
mpspIpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspIpControl.setStatus('current')
mpspManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 4, 2, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpspManagement.setStatus('current')
dbIPv4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5))
if mibBuilder.loadTexts: dbIPv4.setStatus('current')
ipLongTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1))
if mibBuilder.loadTexts: ipLongTerm.setStatus('current')
ilBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1), )
if mibBuilder.loadTexts: ilBaseTable.setStatus('current')
ilBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ilbIpIndex"), (0, "CODIMA-EXPRESS-MIB", "ilbTimeStampIndex"))
if mibBuilder.loadTexts: ilBaseEntry.setStatus('current')
ilbIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbIpIndex.setStatus('current')
ilbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbTimeStampIndex.setStatus('current')
ilbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbTimeStamp.setStatus('current')
ilbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbFrames.setStatus('current')
ilbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbBytes.setStatus('current')
ilbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 6), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbFrameSize.setStatus('current')
ilbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbHardwareErrors.setStatus('current')
ilbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ilbSoftwareErrors.setStatus('current')
ilDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 2), )
if mibBuilder.loadTexts: ilDerivedTable.setStatus('current')
ilDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ildIpIndex"), (0, "CODIMA-EXPRESS-MIB", "ildTimeStampIndex"))
if mibBuilder.loadTexts: ilDerivedEntry.setStatus('current')
ildIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ildIpIndex.setStatus('current')
ildTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ildTimeStampIndex.setStatus('current')
ildTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ildTimeStamp.setStatus('current')
ildUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ildUtilization.setStatus('current')
ildErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ildErrorFrames.setStatus('current')
ilIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3), )
if mibBuilder.loadTexts: ilIcmpTable.setStatus('current')
ilIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "iliTimeStampIndex"))
if mibBuilder.loadTexts: ilIcmpEntry.setStatus('current')
iliIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliIpIndex.setStatus('current')
iliTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliTimeStampIndex.setStatus('current')
iliTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliTimeStamp.setStatus('current')
iliPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliPing.setStatus('current')
iliSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliSrcQuench.setStatus('current')
iliRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliRedirect.setStatus('current')
iliTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliTtlExceeded.setStatus('current')
iliParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliParamProblem.setStatus('current')
iliTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliTimestamp.setStatus('current')
iliFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliFragTimeout.setStatus('current')
iliNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliNetUnreachable.setStatus('current')
iliHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliHostUnreachable.setStatus('current')
iliProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliProtocolUnreachable.setStatus('current')
iliPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliPortUnreachable.setStatus('current')
iliFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliFragRequired.setStatus('current')
iliSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliSrcRouteFail.setStatus('current')
iliDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliDestNetUnknown.setStatus('current')
iliDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliDestHostUnknown.setStatus('current')
iliSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliSrcHostIsolated.setStatus('current')
iliNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliNetProhibited.setStatus('current')
iliHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliHostProhibited.setStatus('current')
iliNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliNetTosUnreachable.setStatus('current')
iliHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliHostTosUnreachable.setStatus('current')
iliPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliPerformance.setStatus('current')
iliNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliNetRouteProblem.setStatus('current')
iliHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliHostRouteProblem.setStatus('current')
iliAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliAppRouteProblem.setStatus('current')
iliRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliRouteChange.setStatus('current')
iliErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliErrors.setStatus('current')
iliMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iliMaintenance.setStatus('current')
ipShortTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2))
if mibBuilder.loadTexts: ipShortTerm.setStatus('current')
isBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1), )
if mibBuilder.loadTexts: isBaseTable.setStatus('current')
isBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "isbIpIndex"), (0, "CODIMA-EXPRESS-MIB", "isbTimeStampIndex"))
if mibBuilder.loadTexts: isBaseEntry.setStatus('current')
isbIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isbIpIndex.setStatus('current')
isbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isbTimeStampIndex.setStatus('current')
isbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isbTimeStamp.setStatus('current')
isbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isbFrames.setStatus('current')
isbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isbBytes.setStatus('current')
isbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 6), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: isbFrameSize.setStatus('current')
isbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isbHardwareErrors.setStatus('current')
isbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isbSoftwareErrors.setStatus('current')
isDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 2), )
if mibBuilder.loadTexts: isDerivedTable.setStatus('current')
isDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "isdIpIndex"), (0, "CODIMA-EXPRESS-MIB", "isdTimeStampIndex"))
if mibBuilder.loadTexts: isDerivedEntry.setStatus('current')
isdIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdIpIndex.setStatus('current')
isdTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdTimeStampIndex.setStatus('current')
isdTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdTimeStamp.setStatus('current')
isdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdUtilization.setStatus('current')
isdErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdErrorFrames.setStatus('current')
isIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3), )
if mibBuilder.loadTexts: isIcmpTable.setStatus('current')
isIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "isiTimeStampIndex"))
if mibBuilder.loadTexts: isIcmpEntry.setStatus('current')
isiIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiIpIndex.setStatus('current')
isiTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiTimeStampIndex.setStatus('current')
isiTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiTimeStamp.setStatus('current')
isiPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiPing.setStatus('current')
isiSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiSrcQuench.setStatus('current')
isiRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiRedirect.setStatus('current')
isiTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiTtlExceeded.setStatus('current')
isiParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiParamProblem.setStatus('current')
isiTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiTimestamp.setStatus('current')
isiFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiFragTimeout.setStatus('current')
isiNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiNetUnreachable.setStatus('current')
isiHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiHostUnreachable.setStatus('current')
isiProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiProtocolUnreachable.setStatus('current')
isiPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiPortUnreachable.setStatus('current')
isiFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiFragRequired.setStatus('current')
isiSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiSrcRouteFail.setStatus('current')
isiDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiDestNetUnknown.setStatus('current')
isiDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiDestHostUnknown.setStatus('current')
isiSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiSrcHostIsolated.setStatus('current')
isiNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiNetProhibited.setStatus('current')
isiHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiHostProhibited.setStatus('current')
isiNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiNetTosUnreachable.setStatus('current')
isiHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiHostTosUnreachable.setStatus('current')
isiPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiPerformance.setStatus('current')
isiNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiNetRouteProblem.setStatus('current')
isiHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiHostRouteProblem.setStatus('current')
isiAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiAppRouteProblem.setStatus('current')
isiRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiRouteChange.setStatus('current')
isiErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiErrors.setStatus('current')
isiMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 5, 2, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isiMaintenance.setStatus('current')
dbIPv4Peer = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6))
if mibBuilder.loadTexts: dbIPv4Peer.setStatus('current')
ipPeerLongTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1))
if mibBuilder.loadTexts: ipPeerLongTerm.setStatus('current')
iplBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1), )
if mibBuilder.loadTexts: iplBaseTable.setStatus('current')
iplBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "iplbIp1Index"), (0, "CODIMA-EXPRESS-MIB", "iplbIp2Index"), (0, "CODIMA-EXPRESS-MIB", "iplbTimeStampIndex"))
if mibBuilder.loadTexts: iplBaseEntry.setStatus('current')
iplbIp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbIp1Index.setStatus('current')
iplbIp2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbIp2Index.setStatus('current')
iplbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbTimeStampIndex.setStatus('current')
iplbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbTimeStamp.setStatus('current')
iplbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbFrames.setStatus('current')
iplbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbBytes.setStatus('current')
iplbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbFrameSize.setStatus('current')
iplbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbHardwareErrors.setStatus('current')
iplbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iplbSoftwareErrors.setStatus('current')
iplDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2), )
if mibBuilder.loadTexts: iplDerivedTable.setStatus('current')
iplDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ipldIp1Index"), (0, "CODIMA-EXPRESS-MIB", "ipldIp2Index"), (0, "CODIMA-EXPRESS-MIB", "ipldTimeStampIndex"))
if mibBuilder.loadTexts: iplDerivedEntry.setStatus('current')
ipldIp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipldIp1Index.setStatus('current')
ipldIp2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipldIp2Index.setStatus('current')
ipldTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipldTimeStampIndex.setStatus('current')
ipldTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipldTimeStamp.setStatus('current')
ipldUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipldUtilization.setStatus('current')
ipldErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipldErrorFrames.setStatus('current')
iplIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3), )
if mibBuilder.loadTexts: iplIcmpTable.setStatus('current')
iplIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ipliIp1Index"), (0, "CODIMA-EXPRESS-MIB", "ipliIp2Index"), (0, "CODIMA-EXPRESS-MIB", "ipliTimeStampIndex"))
if mibBuilder.loadTexts: iplIcmpEntry.setStatus('current')
ipliIp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliIp1Index.setStatus('current')
ipliIp2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliIp2Index.setStatus('current')
ipliTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliTimeStampIndex.setStatus('current')
ipliTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliTimeStamp.setStatus('current')
ipliPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliPing.setStatus('current')
ipliSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliSrcQuench.setStatus('current')
ipliRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliRedirect.setStatus('current')
ipliTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliTtlExceeded.setStatus('current')
ipliParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliParamProblem.setStatus('current')
ipliTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliTimestamp.setStatus('current')
ipliFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliFragTimeout.setStatus('current')
ipliNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliNetUnreachable.setStatus('current')
ipliHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliHostUnreachable.setStatus('current')
ipliProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliProtocolUnreachable.setStatus('current')
ipliPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliPortUnreachable.setStatus('current')
ipliFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliFragRequired.setStatus('current')
ipliSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliSrcRouteFail.setStatus('current')
ipliDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliDestNetUnknown.setStatus('current')
ipliDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliDestHostUnknown.setStatus('current')
ipliSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliSrcHostIsolated.setStatus('current')
ipliNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliNetProhibited.setStatus('current')
ipliHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliHostProhibited.setStatus('current')
ipliNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliNetTosUnreachable.setStatus('current')
ipliHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliHostTosUnreachable.setStatus('current')
ipliPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliPerformance.setStatus('current')
ipliNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliNetRouteProblem.setStatus('current')
ipliHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliHostRouteProblem.setStatus('current')
ipliAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliAppRouteProblem.setStatus('current')
ipliRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliRouteChange.setStatus('current')
ipliErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliErrors.setStatus('current')
ipliMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 1, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipliMaintenance.setStatus('current')
ipPeerShortTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2))
if mibBuilder.loadTexts: ipPeerShortTerm.setStatus('current')
ipsBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1), )
if mibBuilder.loadTexts: ipsBaseTable.setStatus('current')
ipsBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ipsbIp1Index"), (0, "CODIMA-EXPRESS-MIB", "ipsbIp2Index"), (0, "CODIMA-EXPRESS-MIB", "ipsbTimeStampIndex"))
if mibBuilder.loadTexts: ipsBaseEntry.setStatus('current')
ipsbIp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbIp1Index.setStatus('current')
ipsbIp2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbIp2Index.setStatus('current')
ipsbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbTimeStampIndex.setStatus('current')
ipsbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbTimeStamp.setStatus('current')
ipsbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbFrames.setStatus('current')
ipsbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbBytes.setStatus('current')
ipsbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbFrameSize.setStatus('current')
ipsbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbHardwareErrors.setStatus('current')
ipsbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsbSoftwareErrors.setStatus('current')
ipsDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2), )
if mibBuilder.loadTexts: ipsDerivedTable.setStatus('current')
ipsDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ipsdIp1Index"), (0, "CODIMA-EXPRESS-MIB", "ipsdIp2Index"), (0, "CODIMA-EXPRESS-MIB", "ipsdTimeStampIndex"))
if mibBuilder.loadTexts: ipsDerivedEntry.setStatus('current')
ipsdIp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdIp1Index.setStatus('current')
ipsdIp2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdIp2Index.setStatus('current')
ipsdTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdTimeStampIndex.setStatus('current')
ipsdTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdTimeStamp.setStatus('current')
ipsdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdUtilization.setStatus('current')
ipsdErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdErrorFrames.setStatus('current')
ipsIcmpTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3), )
if mibBuilder.loadTexts: ipsIcmpTable.setStatus('current')
ipsIcmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "ipsiIp1Index"), (0, "CODIMA-EXPRESS-MIB", "ipsiIp2Index"), (0, "CODIMA-EXPRESS-MIB", "ipsiTimeStampIndex"))
if mibBuilder.loadTexts: ipsIcmpEntry.setStatus('current')
ipsiIp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiIp1Index.setStatus('current')
ipsiIp2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiIp2Index.setStatus('current')
ipsiTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiTimeStampIndex.setStatus('current')
ipsiTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiTimeStamp.setStatus('current')
ipsiPing = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiPing.setStatus('current')
ipsiSrcQuench = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiSrcQuench.setStatus('current')
ipsiRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiRedirect.setStatus('current')
ipsiTtlExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiTtlExceeded.setStatus('current')
ipsiParamProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiParamProblem.setStatus('current')
ipsiTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiTimestamp.setStatus('current')
ipsiFragTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiFragTimeout.setStatus('current')
ipsiNetUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiNetUnreachable.setStatus('current')
ipsiHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiHostUnreachable.setStatus('current')
ipsiProtocolUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiProtocolUnreachable.setStatus('current')
ipsiPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiPortUnreachable.setStatus('current')
ipsiFragRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiFragRequired.setStatus('current')
ipsiSrcRouteFail = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiSrcRouteFail.setStatus('current')
ipsiDestNetUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiDestNetUnknown.setStatus('current')
ipsiDestHostUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiDestHostUnknown.setStatus('current')
ipsiSrcHostIsolated = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiSrcHostIsolated.setStatus('current')
ipsiNetProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiNetProhibited.setStatus('current')
ipsiHostProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiHostProhibited.setStatus('current')
ipsiNetTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiNetTosUnreachable.setStatus('current')
ipsiHostTosUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiHostTosUnreachable.setStatus('current')
ipsiPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiPerformance.setStatus('current')
ipsiNetRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiNetRouteProblem.setStatus('current')
ipsiHostRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiHostRouteProblem.setStatus('current')
ipsiAppRouteProblem = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiAppRouteProblem.setStatus('current')
ipsiRouteChange = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiRouteChange.setStatus('current')
ipsiErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiErrors.setStatus('current')
ipsiMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 6, 2, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsiMaintenance.setStatus('current')
dbProtocol = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7))
if mibBuilder.loadTexts: dbProtocol.setStatus('current')
protocolLongTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1))
if mibBuilder.loadTexts: protocolLongTerm.setStatus('current')
plBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1), )
if mibBuilder.loadTexts: plBaseTable.setStatus('current')
plBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "plbLayerIndex"), (0, "CODIMA-EXPRESS-MIB", "plbIdIndex"), (0, "CODIMA-EXPRESS-MIB", "plbTimeStampIndex"))
if mibBuilder.loadTexts: plBaseEntry.setStatus('current')
plbLayerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("physical", 1), ("dataLink", 2), ("network", 3), ("transport", 4), ("session", 5), ("presentation", 6), ("application", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbLayerIndex.setStatus('current')
plbIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbIdIndex.setStatus('current')
plbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbTimeStampIndex.setStatus('current')
plbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbTimeStamp.setStatus('current')
plbProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbProtocolName.setStatus('current')
plbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbFrames.setStatus('current')
plbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbBytes.setStatus('current')
plbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 8), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: plbFrameSize.setStatus('current')
plbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbHardwareErrors.setStatus('current')
plbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plbSoftwareErrors.setStatus('current')
plDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2), )
if mibBuilder.loadTexts: plDerivedTable.setStatus('current')
plDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "pldLayerIndex"), (0, "CODIMA-EXPRESS-MIB", "pldIdIndex"), (0, "CODIMA-EXPRESS-MIB", "pldTimeStampIndex"))
if mibBuilder.loadTexts: plDerivedEntry.setStatus('current')
pldLayerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("physical", 1), ("dataLink", 2), ("network", 3), ("transport", 4), ("session", 5), ("presentation", 6), ("application", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldLayerIndex.setStatus('current')
pldIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldIdIndex.setStatus('current')
pldTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldTimeStampIndex.setStatus('current')
pldTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldTimeStamp.setStatus('current')
pldProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldProtocolName.setStatus('current')
pldUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldUtilization.setStatus('current')
pldErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 1, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldErrorFrames.setStatus('current')
protocolShortTerm = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2))
if mibBuilder.loadTexts: protocolShortTerm.setStatus('current')
psBaseTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1), )
if mibBuilder.loadTexts: psBaseTable.setStatus('current')
psBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "psbLayerIndex"), (0, "CODIMA-EXPRESS-MIB", "psbIdIndex"), (0, "CODIMA-EXPRESS-MIB", "psbTimeStampIndex"))
if mibBuilder.loadTexts: psBaseEntry.setStatus('current')
psbLayerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("physical", 1), ("dataLink", 2), ("network", 3), ("transport", 4), ("session", 5), ("presentation", 6), ("application", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbLayerIndex.setStatus('current')
psbIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbIdIndex.setStatus('current')
psbTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbTimeStampIndex.setStatus('current')
psbTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbTimeStamp.setStatus('current')
psbProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbProtocolName.setStatus('current')
psbFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbFrames.setStatus('current')
psbBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbBytes.setStatus('current')
psbFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 8), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: psbFrameSize.setStatus('current')
psbHardwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbHardwareErrors.setStatus('current')
psbSoftwareErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psbSoftwareErrors.setStatus('current')
psDerivedTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2), )
if mibBuilder.loadTexts: psDerivedTable.setStatus('current')
psDerivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "psdLayerIndex"), (0, "CODIMA-EXPRESS-MIB", "psdIdIndex"), (0, "CODIMA-EXPRESS-MIB", "psdTimeStampIndex"))
if mibBuilder.loadTexts: psDerivedEntry.setStatus('current')
psdLayerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("physical", 1), ("dataLink", 2), ("network", 3), ("transport", 4), ("session", 5), ("presentation", 6), ("application", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psdLayerIndex.setStatus('current')
psdIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psdIdIndex.setStatus('current')
psdTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psdTimeStampIndex.setStatus('current')
psdTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psdTimeStamp.setStatus('current')
psdProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psdProtocolName.setStatus('current')
psdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psdUtilization.setStatus('current')
psdErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 7, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psdErrorFrames.setStatus('current')
dbNetChannel = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8))
if mibBuilder.loadTexts: dbNetChannel.setStatus('current')
netChanLongTermTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1), )
if mibBuilder.loadTexts: netChanLongTermTable.setStatus('current')
netChanLongTermEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "nlNameIndex"), (0, "CODIMA-EXPRESS-MIB", "nlTimeStampIndex"), (0, "CODIMA-EXPRESS-MIB", "nlTypeIndex"))
if mibBuilder.loadTexts: netChanLongTermEntry.setStatus('current')
nlTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("netChannel", 1), ("filter", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlTypeIndex.setStatus('current')
nlNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlNameIndex.setStatus('current')
nlTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlTimeStampIndex.setStatus('current')
nlTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlTimeStamp.setStatus('current')
nlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlFrames.setStatus('current')
nlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlBytes.setStatus('current')
nlFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: nlFrameSize.setStatus('current')
nlHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHardErrors.setStatus('current')
nlSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlSoftErrors.setStatus('current')
nlUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlUtilization.setStatus('current')
nlHardErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHardErrorsPercent.setStatus('current')
nlSoftErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlSoftErrorsPercent.setStatus('current')
nlFramesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlFramesPercent.setStatus('current')
nlBytesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlBytesPercent.setStatus('current')
netChanShortTermTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2), )
if mibBuilder.loadTexts: netChanShortTermTable.setStatus('current')
netChanShortTermEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "nsTypeIndex"), (0, "CODIMA-EXPRESS-MIB", "nsNameIndex"), (0, "CODIMA-EXPRESS-MIB", "nsTimeStampIndex"))
if mibBuilder.loadTexts: netChanShortTermEntry.setStatus('current')
nsTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("netChannel", 1), ("filter", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsTypeIndex.setStatus('current')
nsNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNameIndex.setStatus('current')
nsTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsTimeStampIndex.setStatus('current')
nsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsTimeStamp.setStatus('current')
nsFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsFrames.setStatus('current')
nsBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBytes.setStatus('current')
nsFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: nsFrameSize.setStatus('current')
nsHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsHardErrors.setStatus('current')
nsSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSoftErrors.setStatus('current')
nsUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsUtilization.setStatus('current')
nsHardErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsHardErrorsPercent.setStatus('current')
nsSoftErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSoftErrorsPercent.setStatus('current')
nsFramesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsFramesPercent.setStatus('current')
nsBytesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 8, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBytesPercent.setStatus('current')
dbVlan = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9))
if mibBuilder.loadTexts: dbVlan.setStatus('current')
vlanLongTermTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1), )
if mibBuilder.loadTexts: vlanLongTermTable.setStatus('current')
vlanLongTermEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "vlIdIndex"), (0, "CODIMA-EXPRESS-MIB", "vlTimeStampIndex"))
if mibBuilder.loadTexts: vlanLongTermEntry.setStatus('current')
vlIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlIdIndex.setStatus('current')
vlTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlTimeStampIndex.setStatus('current')
vlTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlTimeStamp.setStatus('current')
vlName = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlName.setStatus('current')
vlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlFrames.setStatus('current')
vlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlBytes.setStatus('current')
vlFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vlFrameSize.setStatus('current')
vlHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlHardErrors.setStatus('current')
vlSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlSoftErrors.setStatus('current')
vlUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlUtilization.setStatus('current')
vlHardErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlHardErrorsPercent.setStatus('current')
vlSoftErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlSoftErrorsPercent.setStatus('current')
vlFramesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlFramesPercent.setStatus('current')
vlBytesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlBytesPercent.setStatus('current')
vlanShortTermTable = MibTable((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2), )
if mibBuilder.loadTexts: vlanShortTermTable.setStatus('current')
vlanShortTermEntry = MibTableRow((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1), ).setIndexNames((0, "CODIMA-EXPRESS-MIB", "vsIdIndex"), (0, "CODIMA-EXPRESS-MIB", "vsTimeStampIndex"))
if mibBuilder.loadTexts: vlanShortTermEntry.setStatus('current')
vsIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsIdIndex.setStatus('current')
vsTimeStampIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsTimeStampIndex.setStatus('current')
vsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsTimeStamp.setStatus('current')
vsName = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsName.setStatus('current')
vsFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsFrames.setStatus('current')
vsBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsBytes.setStatus('current')
vsFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 7), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vsFrameSize.setStatus('current')
vsHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsHardErrors.setStatus('current')
vsSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsSoftErrors.setStatus('current')
vsUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsUtilization.setStatus('current')
vsHardErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsHardErrorsPercent.setStatus('current')
vsSoftErrorsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsSoftErrorsPercent.setStatus('current')
vsFramesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsFramesPercent.setStatus('current')
vsBytesPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 1, 9, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsBytesPercent.setStatus('current')
expAlarms = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2))
if mibBuilder.loadTexts: expAlarms.setStatus('current')
alarmMessage = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmMessage.setStatus('current')
alarmLayer = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmLayer.setStatus('current')
alarmTopProtocol = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmTopProtocol.setStatus('current')
alarmBaseProtocol = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmBaseProtocol.setStatus('current')
alarmCode = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmCode.setStatus('current')
alarmFunction = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 6), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmFunction.setStatus('current')
alarmGroup = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmGroup.setStatus('current')
alarmUnitType = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 8), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmUnitType.setStatus('current')
alarmClass = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 9), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmClass.setStatus('current')
alarmTime = MibScalar((1, 3, 6, 1, 4, 1, 226, 3, 2, 1, 2, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alarmTime.setStatus('current')
codimaExpressNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 2))
if mibBuilder.loadTexts: codimaExpressNotifications.setStatus('current')
expressTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 2, 1))
if mibBuilder.loadTexts: expressTraps.setStatus('current')
expressAlarm = NotificationType((1, 3, 6, 1, 4, 1, 226, 3, 2, 2, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "alarmMessage"), ("CODIMA-EXPRESS-MIB", "alarmLayer"), ("CODIMA-EXPRESS-MIB", "alarmTopProtocol"), ("CODIMA-EXPRESS-MIB", "alarmBaseProtocol"), ("CODIMA-EXPRESS-MIB", "alarmCode"), ("CODIMA-EXPRESS-MIB", "alarmFunction"), ("CODIMA-EXPRESS-MIB", "alarmGroup"), ("CODIMA-EXPRESS-MIB", "alarmUnitType"), ("CODIMA-EXPRESS-MIB", "alarmClass"), ("CODIMA-EXPRESS-MIB", "alarmTime"))
if mibBuilder.loadTexts: expressAlarm.setStatus('current')
codimaExpressConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 226, 3, 2, 3))
if mibBuilder.loadTexts: codimaExpressConformance.setStatus('current')
expressObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1))
historyDatabaseGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1))
dbControlGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 1))
ctrlTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "ctSampleType"), ("CODIMA-EXPRESS-MIB", "ctTimeSlots"), ("CODIMA-EXPRESS-MIB", "ctLockMethod"), ("CODIMA-EXPRESS-MIB", "ctLockUserTime"), ("CODIMA-EXPRESS-MIB", "ctLockRealTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctrlTimeGroup = ctrlTimeGroup.setStatus('current')
dbSegmentGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2))
segLongTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 1))
slBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "slbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "slbTimeStamp"), ("CODIMA-EXPRESS-MIB", "slbFrames"), ("CODIMA-EXPRESS-MIB", "slbBytes"), ("CODIMA-EXPRESS-MIB", "slbFrameSize"), ("CODIMA-EXPRESS-MIB", "slbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "slbSoftwareErrors"), ("CODIMA-EXPRESS-MIB", "slbActiveNodes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    slBaseGroup = slBaseGroup.setStatus('current')
slBroadcastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 1, 2)).setObjects(("CODIMA-EXPRESS-MIB", "slbcTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "slbcTimeStamp"), ("CODIMA-EXPRESS-MIB", "slbcBytes"), ("CODIMA-EXPRESS-MIB", "slbcPercentBytes"), ("CODIMA-EXPRESS-MIB", "slbcFrames"), ("CODIMA-EXPRESS-MIB", "slbcPercentFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    slBroadcastGroup = slBroadcastGroup.setStatus('current')
slDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 1, 3)).setObjects(("CODIMA-EXPRESS-MIB", "sldTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "sldTimeStamp"), ("CODIMA-EXPRESS-MIB", "sldUtilization"), ("CODIMA-EXPRESS-MIB", "sldErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    slDerivedGroup = slDerivedGroup.setStatus('current')
slEthernetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 1, 4)).setObjects(("CODIMA-EXPRESS-MIB", "sleTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "sleTimeStamp"), ("CODIMA-EXPRESS-MIB", "sleRunts"), ("CODIMA-EXPRESS-MIB", "sleJabbers"), ("CODIMA-EXPRESS-MIB", "sleCrc"), ("CODIMA-EXPRESS-MIB", "sleCollisions"), ("CODIMA-EXPRESS-MIB", "sleLateCollisions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    slEthernetGroup = slEthernetGroup.setStatus('current')
slIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 1, 5)).setObjects(("CODIMA-EXPRESS-MIB", "sliTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "sliTimeStamp"), ("CODIMA-EXPRESS-MIB", "sliPing"), ("CODIMA-EXPRESS-MIB", "sliSrcQuench"), ("CODIMA-EXPRESS-MIB", "sliRedirect"), ("CODIMA-EXPRESS-MIB", "sliTtlExceeded"), ("CODIMA-EXPRESS-MIB", "sliParamProblem"), ("CODIMA-EXPRESS-MIB", "sliTimestamp"), ("CODIMA-EXPRESS-MIB", "sliFragTimeout"), ("CODIMA-EXPRESS-MIB", "sliNetUnreachable"), ("CODIMA-EXPRESS-MIB", "sliHostUnreachable"), ("CODIMA-EXPRESS-MIB", "sliProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "sliPortUnreachable"), ("CODIMA-EXPRESS-MIB", "sliFragRequired"), ("CODIMA-EXPRESS-MIB", "sliSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "sliDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "sliDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "sliSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "sliNetProhibited"), ("CODIMA-EXPRESS-MIB", "sliHostProhibited"), ("CODIMA-EXPRESS-MIB", "sliNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "sliHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "sliPerformance"), ("CODIMA-EXPRESS-MIB", "sliNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "sliHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "sliAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "sliRouteChange"), ("CODIMA-EXPRESS-MIB", "sliGrpErrors"), ("CODIMA-EXPRESS-MIB", "sliMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    slIcmpGroup = slIcmpGroup.setStatus('current')
slPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 1, 6)).setObjects(("CODIMA-EXPRESS-MIB", "slp1TimeStampIndex"), ("CODIMA-EXPRESS-MIB", "slp1TimeStamp"), ("CODIMA-EXPRESS-MIB", "slp1Frames"), ("CODIMA-EXPRESS-MIB", "slp1Bytes"), ("CODIMA-EXPRESS-MIB", "slp1FrameSize"), ("CODIMA-EXPRESS-MIB", "slp1Utilization"), ("CODIMA-EXPRESS-MIB", "slp1LineSpeed"), ("CODIMA-EXPRESS-MIB", "slp1SoftErrors"), ("CODIMA-EXPRESS-MIB", "slp1Runts"), ("CODIMA-EXPRESS-MIB", "slp1Jabbers"), ("CODIMA-EXPRESS-MIB", "slp1Crc"), ("CODIMA-EXPRESS-MIB", "slp1Collisions"), ("CODIMA-EXPRESS-MIB", "slp1LateCollisions"), ("CODIMA-EXPRESS-MIB", "slp1LineNoise"), ("CODIMA-EXPRESS-MIB", "slp2Frames"), ("CODIMA-EXPRESS-MIB", "slp2Bytes"), ("CODIMA-EXPRESS-MIB", "slp2FrameSize"), ("CODIMA-EXPRESS-MIB", "slp2Utilization"), ("CODIMA-EXPRESS-MIB", "slp2LineSpeed"), ("CODIMA-EXPRESS-MIB", "slp2SoftErrors"), ("CODIMA-EXPRESS-MIB", "slp2Runts"), ("CODIMA-EXPRESS-MIB", "slp2Jabbers"), ("CODIMA-EXPRESS-MIB", "slp2Crc"), ("CODIMA-EXPRESS-MIB", "slp2Collisions"), ("CODIMA-EXPRESS-MIB", "slp2LateCollisions"), ("CODIMA-EXPRESS-MIB", "slp2LineNoise"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    slPortGroup = slPortGroup.setStatus('current')
segShortTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 2))
ssBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 2, 1)).setObjects(("CODIMA-EXPRESS-MIB", "ssbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ssbTimeStamp"), ("CODIMA-EXPRESS-MIB", "ssbFrames"), ("CODIMA-EXPRESS-MIB", "ssbBytes"), ("CODIMA-EXPRESS-MIB", "ssbFrameSize"), ("CODIMA-EXPRESS-MIB", "ssbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "ssbSoftwareErrors"), ("CODIMA-EXPRESS-MIB", "ssbActiveNodes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ssBaseGroup = ssBaseGroup.setStatus('current')
ssBroadcastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 2, 2)).setObjects(("CODIMA-EXPRESS-MIB", "ssbcTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ssbcTimeStamp"), ("CODIMA-EXPRESS-MIB", "ssbcBytes"), ("CODIMA-EXPRESS-MIB", "ssbcBytesPercent"), ("CODIMA-EXPRESS-MIB", "ssbcFrames"), ("CODIMA-EXPRESS-MIB", "ssbcFramesPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ssBroadcastGroup = ssBroadcastGroup.setStatus('current')
ssDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 2, 3)).setObjects(("CODIMA-EXPRESS-MIB", "ssdTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ssdTimeStamp"), ("CODIMA-EXPRESS-MIB", "ssdUtilization"), ("CODIMA-EXPRESS-MIB", "ssdErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ssDerivedGroup = ssDerivedGroup.setStatus('current')
ssEthernetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 2, 4)).setObjects(("CODIMA-EXPRESS-MIB", "sseTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "sseTimeStamp"), ("CODIMA-EXPRESS-MIB", "sseRunts"), ("CODIMA-EXPRESS-MIB", "sseJabbers"), ("CODIMA-EXPRESS-MIB", "sseCrc"), ("CODIMA-EXPRESS-MIB", "sseCollisions"), ("CODIMA-EXPRESS-MIB", "sseLateCollisions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ssEthernetGroup = ssEthernetGroup.setStatus('current')
ssIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 2, 5)).setObjects(("CODIMA-EXPRESS-MIB", "ssiTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ssiTimeStamp"), ("CODIMA-EXPRESS-MIB", "ssiPing"), ("CODIMA-EXPRESS-MIB", "ssiSrcQuench"), ("CODIMA-EXPRESS-MIB", "ssiRedirect"), ("CODIMA-EXPRESS-MIB", "ssiTtlExceeded"), ("CODIMA-EXPRESS-MIB", "ssiParamProblem"), ("CODIMA-EXPRESS-MIB", "ssiTimestamp"), ("CODIMA-EXPRESS-MIB", "ssiFragTimeout"), ("CODIMA-EXPRESS-MIB", "ssiNetUnreachable"), ("CODIMA-EXPRESS-MIB", "ssiHostUnreachable"), ("CODIMA-EXPRESS-MIB", "ssiProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "ssiPortUnreachable"), ("CODIMA-EXPRESS-MIB", "ssiFragRequired"), ("CODIMA-EXPRESS-MIB", "ssiSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "ssiDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "ssiDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "ssiSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "ssiNetProhibited"), ("CODIMA-EXPRESS-MIB", "ssiHostProhibited"), ("CODIMA-EXPRESS-MIB", "ssiNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "ssiHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "ssiPerformance"), ("CODIMA-EXPRESS-MIB", "ssiNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "ssiHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "ssiAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "ssiRouteChange"), ("CODIMA-EXPRESS-MIB", "ssiErrors"), ("CODIMA-EXPRESS-MIB", "ssiMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ssIcmpGroup = ssIcmpGroup.setStatus('current')
ssPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 2, 2, 6)).setObjects(("CODIMA-EXPRESS-MIB", "sspTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "sspTimeStamp"), ("CODIMA-EXPRESS-MIB", "ssp1Frames"), ("CODIMA-EXPRESS-MIB", "ssp1Bytes"), ("CODIMA-EXPRESS-MIB", "ssp1FrameSize"), ("CODIMA-EXPRESS-MIB", "ssp1Utilization"), ("CODIMA-EXPRESS-MIB", "ssp1LineSpeed"), ("CODIMA-EXPRESS-MIB", "ssp1SoftErrors"), ("CODIMA-EXPRESS-MIB", "ssp1Runts"), ("CODIMA-EXPRESS-MIB", "ssp1Jabbers"), ("CODIMA-EXPRESS-MIB", "ssp1Crc"), ("CODIMA-EXPRESS-MIB", "ssp1Collisions"), ("CODIMA-EXPRESS-MIB", "ssp1LateCollisions"), ("CODIMA-EXPRESS-MIB", "ssp1LineNoise"), ("CODIMA-EXPRESS-MIB", "ssp2Frames"), ("CODIMA-EXPRESS-MIB", "ssp2Bytes"), ("CODIMA-EXPRESS-MIB", "ssp2FrameSize"), ("CODIMA-EXPRESS-MIB", "ssp2Utilization"), ("CODIMA-EXPRESS-MIB", "ssp2LineSpeed"), ("CODIMA-EXPRESS-MIB", "ssp2SoftErrors"), ("CODIMA-EXPRESS-MIB", "ssp2Runts"), ("CODIMA-EXPRESS-MIB", "ssp2Jabbers"), ("CODIMA-EXPRESS-MIB", "ssp2Crc"), ("CODIMA-EXPRESS-MIB", "ssp2Collisions"), ("CODIMA-EXPRESS-MIB", "ssp2LateCollisions"), ("CODIMA-EXPRESS-MIB", "ssp2LineNoise"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ssPortGroup = ssPortGroup.setStatus('current')
dbMacGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3))
macLongTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 1))
mlBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "mlbMacIndex"), ("CODIMA-EXPRESS-MIB", "mlbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mlbTimeStamp"), ("CODIMA-EXPRESS-MIB", "mlbFrames"), ("CODIMA-EXPRESS-MIB", "mlbBytes"), ("CODIMA-EXPRESS-MIB", "mlbFrameSize"), ("CODIMA-EXPRESS-MIB", "mlbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "mlbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mlBaseGroup = mlBaseGroup.setStatus('current')
mlDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 1, 2)).setObjects(("CODIMA-EXPRESS-MIB", "mldMacIndex"), ("CODIMA-EXPRESS-MIB", "mldTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mldTimeStamp"), ("CODIMA-EXPRESS-MIB", "mldUtilization"), ("CODIMA-EXPRESS-MIB", "mldErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mlDerivedGroup = mlDerivedGroup.setStatus('current')
mlDuplexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 1, 3)).setObjects(("CODIMA-EXPRESS-MIB", "mlduMacIndex"), ("CODIMA-EXPRESS-MIB", "mlduTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mlduTimeStamp"), ("CODIMA-EXPRESS-MIB", "mlduTxFrames"), ("CODIMA-EXPRESS-MIB", "mlduTxBytes"), ("CODIMA-EXPRESS-MIB", "mlduTxFrameSize"), ("CODIMA-EXPRESS-MIB", "mlduTxUtilization"), ("CODIMA-EXPRESS-MIB", "mlduRxFrames"), ("CODIMA-EXPRESS-MIB", "mlduRxBytes"), ("CODIMA-EXPRESS-MIB", "mlduRxFrameSize"), ("CODIMA-EXPRESS-MIB", "mlduRxUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mlDuplexGroup = mlDuplexGroup.setStatus('current')
mlEthernetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 1, 4)).setObjects(("CODIMA-EXPRESS-MIB", "mleMacIndex"), ("CODIMA-EXPRESS-MIB", "mleTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mleTimeStamp"), ("CODIMA-EXPRESS-MIB", "mleRunts"), ("CODIMA-EXPRESS-MIB", "mleJabbers"), ("CODIMA-EXPRESS-MIB", "mleCrc"), ("CODIMA-EXPRESS-MIB", "mleCollisions"), ("CODIMA-EXPRESS-MIB", "mleLateCollisions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mlEthernetGroup = mlEthernetGroup.setStatus('current')
mlIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 1, 5)).setObjects(("CODIMA-EXPRESS-MIB", "mliMacIndex"), ("CODIMA-EXPRESS-MIB", "mliTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mliTimeStamp"), ("CODIMA-EXPRESS-MIB", "mliPing"), ("CODIMA-EXPRESS-MIB", "mliSrcQuench"), ("CODIMA-EXPRESS-MIB", "mliRedirect"), ("CODIMA-EXPRESS-MIB", "mliTtlExceeded"), ("CODIMA-EXPRESS-MIB", "mliParamProblem"), ("CODIMA-EXPRESS-MIB", "mliTimestamp"), ("CODIMA-EXPRESS-MIB", "mliFragTimeout"), ("CODIMA-EXPRESS-MIB", "mliNetUnreachable"), ("CODIMA-EXPRESS-MIB", "mliHostUnreachable"), ("CODIMA-EXPRESS-MIB", "mliProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "mliPortUnreachable"), ("CODIMA-EXPRESS-MIB", "mliFragRequired"), ("CODIMA-EXPRESS-MIB", "mliSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "mliDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "mliDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "mliSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "mliNetProhibited"), ("CODIMA-EXPRESS-MIB", "mliHostProhibited"), ("CODIMA-EXPRESS-MIB", "mliNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "mliHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "mliPerformance"), ("CODIMA-EXPRESS-MIB", "mliNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "mliHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "mliAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "mliRouteChange"), ("CODIMA-EXPRESS-MIB", "mliErrors"), ("CODIMA-EXPRESS-MIB", "mliMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mlIcmpGroup = mlIcmpGroup.setStatus('current')
mlProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 1, 6)).setObjects(("CODIMA-EXPRESS-MIB", "mlpMacIndex"), ("CODIMA-EXPRESS-MIB", "mlpTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mlpTimeStamp"), ("CODIMA-EXPRESS-MIB", "mlpNovell"), ("CODIMA-EXPRESS-MIB", "mlpSnmp"), ("CODIMA-EXPRESS-MIB", "mlpRouting"), ("CODIMA-EXPRESS-MIB", "mlpWww"), ("CODIMA-EXPRESS-MIB", "mlpIcmp"), ("CODIMA-EXPRESS-MIB", "mlpIso"), ("CODIMA-EXPRESS-MIB", "mlpMail"), ("CODIMA-EXPRESS-MIB", "mlpNetbios"), ("CODIMA-EXPRESS-MIB", "mlpDns"), ("CODIMA-EXPRESS-MIB", "mlpIp"), ("CODIMA-EXPRESS-MIB", "mlpVoip"), ("CODIMA-EXPRESS-MIB", "mlpLayer3Traffic"), ("CODIMA-EXPRESS-MIB", "mlpIpData"), ("CODIMA-EXPRESS-MIB", "mlpApplications"), ("CODIMA-EXPRESS-MIB", "mlpIpControl"), ("CODIMA-EXPRESS-MIB", "mlpManagement"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mlProtocolGroup = mlProtocolGroup.setStatus('current')
macShortTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 2))
msBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 2, 1)).setObjects(("CODIMA-EXPRESS-MIB", "msbMacIndex"), ("CODIMA-EXPRESS-MIB", "msbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "msbTimeStamp"), ("CODIMA-EXPRESS-MIB", "msbFrames"), ("CODIMA-EXPRESS-MIB", "msbBytes"), ("CODIMA-EXPRESS-MIB", "msbFrameSize"), ("CODIMA-EXPRESS-MIB", "msbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "msbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msBaseGroup = msBaseGroup.setStatus('current')
msDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 2, 2)).setObjects(("CODIMA-EXPRESS-MIB", "msdMacIndex"), ("CODIMA-EXPRESS-MIB", "msdTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "msdTimeStamp"), ("CODIMA-EXPRESS-MIB", "msdUtilization"), ("CODIMA-EXPRESS-MIB", "msdErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msDerivedGroup = msDerivedGroup.setStatus('current')
msDuplexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 2, 3)).setObjects(("CODIMA-EXPRESS-MIB", "msdpMacIndex"), ("CODIMA-EXPRESS-MIB", "msdpTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "msdpTimeStamp"), ("CODIMA-EXPRESS-MIB", "msdpTxFrames"), ("CODIMA-EXPRESS-MIB", "msdpTxBytes"), ("CODIMA-EXPRESS-MIB", "msdpTxFrameSize"), ("CODIMA-EXPRESS-MIB", "msdpTxUtilization"), ("CODIMA-EXPRESS-MIB", "msdpRxFrames"), ("CODIMA-EXPRESS-MIB", "msdpRxBytes"), ("CODIMA-EXPRESS-MIB", "msdpRxFrameSize"), ("CODIMA-EXPRESS-MIB", "msdpRxUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msDuplexGroup = msDuplexGroup.setStatus('current')
msEthernetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 2, 4)).setObjects(("CODIMA-EXPRESS-MIB", "mseMacIndex"), ("CODIMA-EXPRESS-MIB", "mseTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mseTimeStamp"), ("CODIMA-EXPRESS-MIB", "mseRunts"), ("CODIMA-EXPRESS-MIB", "mseJabbers"), ("CODIMA-EXPRESS-MIB", "mseCrc"), ("CODIMA-EXPRESS-MIB", "mseCollisions"), ("CODIMA-EXPRESS-MIB", "mseLateCollisions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msEthernetGroup = msEthernetGroup.setStatus('current')
msIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 2, 5)).setObjects(("CODIMA-EXPRESS-MIB", "msiMacIndex"), ("CODIMA-EXPRESS-MIB", "msiTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "msiTimeStamp"), ("CODIMA-EXPRESS-MIB", "msiPing"), ("CODIMA-EXPRESS-MIB", "msiSrcQuench"), ("CODIMA-EXPRESS-MIB", "msiRedirect"), ("CODIMA-EXPRESS-MIB", "msiTtlExceeded"), ("CODIMA-EXPRESS-MIB", "msiParamProblem"), ("CODIMA-EXPRESS-MIB", "msiTimestamp"), ("CODIMA-EXPRESS-MIB", "msiFragTimeout"), ("CODIMA-EXPRESS-MIB", "msiNetUnreachable"), ("CODIMA-EXPRESS-MIB", "msiHostUnreachable"), ("CODIMA-EXPRESS-MIB", "msiProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "msiPortUnreachable"), ("CODIMA-EXPRESS-MIB", "msiFragRequired"), ("CODIMA-EXPRESS-MIB", "msiSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "msiDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "msiDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "msiSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "msiNetProhibited"), ("CODIMA-EXPRESS-MIB", "msiHostProhibited"), ("CODIMA-EXPRESS-MIB", "msiNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "msiHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "msiPerformance"), ("CODIMA-EXPRESS-MIB", "msiNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "msiHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "msiAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "msiRouteChange"), ("CODIMA-EXPRESS-MIB", "msiErrors"), ("CODIMA-EXPRESS-MIB", "msiMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msIcmpGroup = msIcmpGroup.setStatus('current')
msProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 3, 2, 6)).setObjects(("CODIMA-EXPRESS-MIB", "mspMacIndex"), ("CODIMA-EXPRESS-MIB", "mspTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mspTimeStamp"), ("CODIMA-EXPRESS-MIB", "mspNovell"), ("CODIMA-EXPRESS-MIB", "mspSnmp"), ("CODIMA-EXPRESS-MIB", "mspRouting"), ("CODIMA-EXPRESS-MIB", "mspWww"), ("CODIMA-EXPRESS-MIB", "mspIcmp"), ("CODIMA-EXPRESS-MIB", "mspIso"), ("CODIMA-EXPRESS-MIB", "mspMail"), ("CODIMA-EXPRESS-MIB", "mspNetbios"), ("CODIMA-EXPRESS-MIB", "mspDns"), ("CODIMA-EXPRESS-MIB", "mspIp"), ("CODIMA-EXPRESS-MIB", "mspVoip"), ("CODIMA-EXPRESS-MIB", "mspLayer3Traffic"), ("CODIMA-EXPRESS-MIB", "mspIpData"), ("CODIMA-EXPRESS-MIB", "mspApplications"), ("CODIMA-EXPRESS-MIB", "mspIpControl"), ("CODIMA-EXPRESS-MIB", "mspManagement"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msProtocolGroup = msProtocolGroup.setStatus('current')
dbMacPeerGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4))
macPeerLongTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 1))
mplBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "mplbMac1Index"), ("CODIMA-EXPRESS-MIB", "mplbMac2Index"), ("CODIMA-EXPRESS-MIB", "mplbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mplbTimeStamp"), ("CODIMA-EXPRESS-MIB", "mplbFrames"), ("CODIMA-EXPRESS-MIB", "mplbBytes"), ("CODIMA-EXPRESS-MIB", "mplbFrameSize"), ("CODIMA-EXPRESS-MIB", "mplbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "mplbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplBaseGroup = mplBaseGroup.setStatus('current')
mplDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 1, 2)).setObjects(("CODIMA-EXPRESS-MIB", "mpldMac1Index"), ("CODIMA-EXPRESS-MIB", "mpldMac2Index"), ("CODIMA-EXPRESS-MIB", "mpldTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mpldTimeStamp"), ("CODIMA-EXPRESS-MIB", "mpldUtilization"), ("CODIMA-EXPRESS-MIB", "mpldErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplDerivedGroup = mplDerivedGroup.setStatus('current')
mplDuplexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 1, 3)).setObjects(("CODIMA-EXPRESS-MIB", "mplduMac1Index"), ("CODIMA-EXPRESS-MIB", "mplduMac2Index"), ("CODIMA-EXPRESS-MIB", "mplduTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mplduTimeStamp"), ("CODIMA-EXPRESS-MIB", "mplduTxFrames"), ("CODIMA-EXPRESS-MIB", "mplduTxBytes"), ("CODIMA-EXPRESS-MIB", "mplduTxFrameSize"), ("CODIMA-EXPRESS-MIB", "mplduTxUtilization"), ("CODIMA-EXPRESS-MIB", "mplduRxFrames"), ("CODIMA-EXPRESS-MIB", "mplduRxBytes"), ("CODIMA-EXPRESS-MIB", "mplduRxFrameSize"), ("CODIMA-EXPRESS-MIB", "mplduRxUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplDuplexGroup = mplDuplexGroup.setStatus('current')
mplProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 1, 4)).setObjects(("CODIMA-EXPRESS-MIB", "mplpMac1Index"), ("CODIMA-EXPRESS-MIB", "mplpMac2Index"), ("CODIMA-EXPRESS-MIB", "mplpTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mplpTimeStamp"), ("CODIMA-EXPRESS-MIB", "mplpNovell"), ("CODIMA-EXPRESS-MIB", "mplpSnmp"), ("CODIMA-EXPRESS-MIB", "mplpRouting"), ("CODIMA-EXPRESS-MIB", "mplpWww"), ("CODIMA-EXPRESS-MIB", "mplpIcmp"), ("CODIMA-EXPRESS-MIB", "mplpIso"), ("CODIMA-EXPRESS-MIB", "mplpMail"), ("CODIMA-EXPRESS-MIB", "mplpNetbios"), ("CODIMA-EXPRESS-MIB", "mplpDns"), ("CODIMA-EXPRESS-MIB", "mplpIp"), ("CODIMA-EXPRESS-MIB", "mplpVoip"), ("CODIMA-EXPRESS-MIB", "mplpLayer3Traffic"), ("CODIMA-EXPRESS-MIB", "mplpIpData"), ("CODIMA-EXPRESS-MIB", "mplpApplications"), ("CODIMA-EXPRESS-MIB", "mplpIpControl"), ("CODIMA-EXPRESS-MIB", "mplpManagement"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplProtocolGroup = mplProtocolGroup.setStatus('current')
macPeerShortTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 2))
mpsBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 2, 1)).setObjects(("CODIMA-EXPRESS-MIB", "mpsbMac1Index"), ("CODIMA-EXPRESS-MIB", "mpsbMac2Index"), ("CODIMA-EXPRESS-MIB", "mpsbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mpsbTimeStamp"), ("CODIMA-EXPRESS-MIB", "mpsbFrames"), ("CODIMA-EXPRESS-MIB", "mpsbBytes"), ("CODIMA-EXPRESS-MIB", "mpsbFrameSize"), ("CODIMA-EXPRESS-MIB", "mpsbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "mpsbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpsBaseGroup = mpsBaseGroup.setStatus('current')
mpsDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 2, 2)).setObjects(("CODIMA-EXPRESS-MIB", "mpsdMac1Index"), ("CODIMA-EXPRESS-MIB", "mpsdMac2Index"), ("CODIMA-EXPRESS-MIB", "mpsdTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mpsdTimeStamp"), ("CODIMA-EXPRESS-MIB", "mpsdUtilization"), ("CODIMA-EXPRESS-MIB", "mpsdErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpsDerivedGroup = mpsDerivedGroup.setStatus('current')
mpsDuplexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 2, 3)).setObjects(("CODIMA-EXPRESS-MIB", "mpsduMac1Index"), ("CODIMA-EXPRESS-MIB", "mpsduMac2Index"), ("CODIMA-EXPRESS-MIB", "mpsduTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mpsduTimeStamp"), ("CODIMA-EXPRESS-MIB", "mpsduTxFrames"), ("CODIMA-EXPRESS-MIB", "mpsduTxBytes"), ("CODIMA-EXPRESS-MIB", "mpsduTxFrameSize"), ("CODIMA-EXPRESS-MIB", "mpsduTxUtilization"), ("CODIMA-EXPRESS-MIB", "mpsduRxFrames"), ("CODIMA-EXPRESS-MIB", "mpsduRxBytes"), ("CODIMA-EXPRESS-MIB", "mpsduRxFrameSize"), ("CODIMA-EXPRESS-MIB", "mpsduRxUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpsDuplexGroup = mpsDuplexGroup.setStatus('current')
mpsProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 4, 2, 4)).setObjects(("CODIMA-EXPRESS-MIB", "mpspMac1Index"), ("CODIMA-EXPRESS-MIB", "mpspMac2Index"), ("CODIMA-EXPRESS-MIB", "mpspTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "mpspTimeStamp"), ("CODIMA-EXPRESS-MIB", "mpspNovell"), ("CODIMA-EXPRESS-MIB", "mpspSnmp"), ("CODIMA-EXPRESS-MIB", "mpspRouting"), ("CODIMA-EXPRESS-MIB", "mpspWww"), ("CODIMA-EXPRESS-MIB", "mpspIcmp"), ("CODIMA-EXPRESS-MIB", "mpspIso"), ("CODIMA-EXPRESS-MIB", "mpspMail"), ("CODIMA-EXPRESS-MIB", "mpspNetbios"), ("CODIMA-EXPRESS-MIB", "mpspDns"), ("CODIMA-EXPRESS-MIB", "mpspIp"), ("CODIMA-EXPRESS-MIB", "mpspVoip"), ("CODIMA-EXPRESS-MIB", "mpspLayer3Traffic"), ("CODIMA-EXPRESS-MIB", "mpspIpData"), ("CODIMA-EXPRESS-MIB", "mpspApplications"), ("CODIMA-EXPRESS-MIB", "mpspIpControl"), ("CODIMA-EXPRESS-MIB", "mpspManagement"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpsProtocolGroup = mpsProtocolGroup.setStatus('current')
dbIPv4Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5))
ipLongTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 1))
ilBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "ilbIpIndex"), ("CODIMA-EXPRESS-MIB", "ilbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ilbTimeStamp"), ("CODIMA-EXPRESS-MIB", "ilbFrames"), ("CODIMA-EXPRESS-MIB", "ilbBytes"), ("CODIMA-EXPRESS-MIB", "ilbFrameSize"), ("CODIMA-EXPRESS-MIB", "ilbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "ilbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ilBaseGroup = ilBaseGroup.setStatus('current')
ilDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 1, 2)).setObjects(("CODIMA-EXPRESS-MIB", "ildIpIndex"), ("CODIMA-EXPRESS-MIB", "ildTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ildTimeStamp"), ("CODIMA-EXPRESS-MIB", "ildUtilization"), ("CODIMA-EXPRESS-MIB", "ildErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ilDerivedGroup = ilDerivedGroup.setStatus('current')
ilIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 1, 3)).setObjects(("CODIMA-EXPRESS-MIB", "iliIpIndex"), ("CODIMA-EXPRESS-MIB", "iliTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "iliTimeStamp"), ("CODIMA-EXPRESS-MIB", "iliPing"), ("CODIMA-EXPRESS-MIB", "iliSrcQuench"), ("CODIMA-EXPRESS-MIB", "iliRedirect"), ("CODIMA-EXPRESS-MIB", "iliTtlExceeded"), ("CODIMA-EXPRESS-MIB", "iliParamProblem"), ("CODIMA-EXPRESS-MIB", "iliTimestamp"), ("CODIMA-EXPRESS-MIB", "iliFragTimeout"), ("CODIMA-EXPRESS-MIB", "iliNetUnreachable"), ("CODIMA-EXPRESS-MIB", "iliHostUnreachable"), ("CODIMA-EXPRESS-MIB", "iliProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "iliPortUnreachable"), ("CODIMA-EXPRESS-MIB", "iliFragRequired"), ("CODIMA-EXPRESS-MIB", "iliSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "iliDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "iliDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "iliSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "iliNetProhibited"), ("CODIMA-EXPRESS-MIB", "iliHostProhibited"), ("CODIMA-EXPRESS-MIB", "iliNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "iliHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "iliPerformance"), ("CODIMA-EXPRESS-MIB", "iliNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "iliHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "iliAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "iliRouteChange"), ("CODIMA-EXPRESS-MIB", "iliErrors"), ("CODIMA-EXPRESS-MIB", "iliMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ilIcmpGroup = ilIcmpGroup.setStatus('current')
ipShortTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 2))
isBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 2, 1)).setObjects(("CODIMA-EXPRESS-MIB", "isbIpIndex"), ("CODIMA-EXPRESS-MIB", "isbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "isbTimeStamp"), ("CODIMA-EXPRESS-MIB", "isbFrames"), ("CODIMA-EXPRESS-MIB", "isbBytes"), ("CODIMA-EXPRESS-MIB", "isbFrameSize"), ("CODIMA-EXPRESS-MIB", "isbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "isbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isBaseGroup = isBaseGroup.setStatus('current')
isDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 2, 2)).setObjects(("CODIMA-EXPRESS-MIB", "isdIpIndex"), ("CODIMA-EXPRESS-MIB", "isdTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "isdTimeStamp"), ("CODIMA-EXPRESS-MIB", "isdUtilization"), ("CODIMA-EXPRESS-MIB", "isdErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isDerivedGroup = isDerivedGroup.setStatus('current')
isIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 5, 2, 3)).setObjects(("CODIMA-EXPRESS-MIB", "isiIpIndex"), ("CODIMA-EXPRESS-MIB", "isiTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "isiTimeStamp"), ("CODIMA-EXPRESS-MIB", "isiPing"), ("CODIMA-EXPRESS-MIB", "isiSrcQuench"), ("CODIMA-EXPRESS-MIB", "isiRedirect"), ("CODIMA-EXPRESS-MIB", "isiTtlExceeded"), ("CODIMA-EXPRESS-MIB", "isiParamProblem"), ("CODIMA-EXPRESS-MIB", "isiTimestamp"), ("CODIMA-EXPRESS-MIB", "isiFragTimeout"), ("CODIMA-EXPRESS-MIB", "isiNetUnreachable"), ("CODIMA-EXPRESS-MIB", "isiHostUnreachable"), ("CODIMA-EXPRESS-MIB", "isiProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "isiPortUnreachable"), ("CODIMA-EXPRESS-MIB", "isiFragRequired"), ("CODIMA-EXPRESS-MIB", "isiSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "isiDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "isiDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "isiSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "isiNetProhibited"), ("CODIMA-EXPRESS-MIB", "isiHostProhibited"), ("CODIMA-EXPRESS-MIB", "isiNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "isiHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "isiPerformance"), ("CODIMA-EXPRESS-MIB", "isiNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "isiHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "isiAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "isiRouteChange"), ("CODIMA-EXPRESS-MIB", "isiErrors"), ("CODIMA-EXPRESS-MIB", "isiMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isIcmpGroup = isIcmpGroup.setStatus('current')
dpIPv4PeerGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6))
ipPeerLongTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 1))
iplBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "iplbIp1Index"), ("CODIMA-EXPRESS-MIB", "iplbIp2Index"), ("CODIMA-EXPRESS-MIB", "iplbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "iplbTimeStamp"), ("CODIMA-EXPRESS-MIB", "iplbFrames"), ("CODIMA-EXPRESS-MIB", "iplbBytes"), ("CODIMA-EXPRESS-MIB", "iplbFrameSize"), ("CODIMA-EXPRESS-MIB", "iplbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "iplbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    iplBaseGroup = iplBaseGroup.setStatus('current')
iplDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 1, 2)).setObjects(("CODIMA-EXPRESS-MIB", "ipldIp1Index"), ("CODIMA-EXPRESS-MIB", "ipldIp2Index"), ("CODIMA-EXPRESS-MIB", "ipldTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ipldTimeStamp"), ("CODIMA-EXPRESS-MIB", "ipldUtilization"), ("CODIMA-EXPRESS-MIB", "ipldErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    iplDerivedGroup = iplDerivedGroup.setStatus('current')
iplIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 1, 3)).setObjects(("CODIMA-EXPRESS-MIB", "ipliIp1Index"), ("CODIMA-EXPRESS-MIB", "ipliIp2Index"), ("CODIMA-EXPRESS-MIB", "ipliTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ipliTimeStamp"), ("CODIMA-EXPRESS-MIB", "ipliPing"), ("CODIMA-EXPRESS-MIB", "ipliSrcQuench"), ("CODIMA-EXPRESS-MIB", "ipliRedirect"), ("CODIMA-EXPRESS-MIB", "ipliTtlExceeded"), ("CODIMA-EXPRESS-MIB", "ipliParamProblem"), ("CODIMA-EXPRESS-MIB", "ipliTimestamp"), ("CODIMA-EXPRESS-MIB", "ipliFragTimeout"), ("CODIMA-EXPRESS-MIB", "ipliNetUnreachable"), ("CODIMA-EXPRESS-MIB", "ipliHostUnreachable"), ("CODIMA-EXPRESS-MIB", "ipliProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "ipliPortUnreachable"), ("CODIMA-EXPRESS-MIB", "ipliFragRequired"), ("CODIMA-EXPRESS-MIB", "ipliSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "ipliDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "ipliDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "ipliSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "ipliNetProhibited"), ("CODIMA-EXPRESS-MIB", "ipliHostProhibited"), ("CODIMA-EXPRESS-MIB", "ipliNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "ipliHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "ipliPerformance"), ("CODIMA-EXPRESS-MIB", "ipliNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "ipliHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "ipliAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "ipliRouteChange"), ("CODIMA-EXPRESS-MIB", "ipliErrors"), ("CODIMA-EXPRESS-MIB", "ipliMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    iplIcmpGroup = iplIcmpGroup.setStatus('current')
ipPeerShortTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 2))
ipsBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 2, 1)).setObjects(("CODIMA-EXPRESS-MIB", "ipsbIp1Index"), ("CODIMA-EXPRESS-MIB", "ipsbIp2Index"), ("CODIMA-EXPRESS-MIB", "ipsbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ipsbTimeStamp"), ("CODIMA-EXPRESS-MIB", "ipsbFrames"), ("CODIMA-EXPRESS-MIB", "ipsbBytes"), ("CODIMA-EXPRESS-MIB", "ipsbFrameSize"), ("CODIMA-EXPRESS-MIB", "ipsbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "ipsbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsBaseGroup = ipsBaseGroup.setStatus('current')
ipsDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 2, 2)).setObjects(("CODIMA-EXPRESS-MIB", "ipsdIp1Index"), ("CODIMA-EXPRESS-MIB", "ipsdIp2Index"), ("CODIMA-EXPRESS-MIB", "ipsdTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ipsdTimeStamp"), ("CODIMA-EXPRESS-MIB", "ipsdUtilization"), ("CODIMA-EXPRESS-MIB", "ipsdErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsDerivedGroup = ipsDerivedGroup.setStatus('current')
ipsIcmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 6, 2, 3)).setObjects(("CODIMA-EXPRESS-MIB", "ipsiIp1Index"), ("CODIMA-EXPRESS-MIB", "ipsiIp2Index"), ("CODIMA-EXPRESS-MIB", "ipsiTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "ipsiTimeStamp"), ("CODIMA-EXPRESS-MIB", "ipsiPing"), ("CODIMA-EXPRESS-MIB", "ipsiSrcQuench"), ("CODIMA-EXPRESS-MIB", "ipsiRedirect"), ("CODIMA-EXPRESS-MIB", "ipsiTtlExceeded"), ("CODIMA-EXPRESS-MIB", "ipsiParamProblem"), ("CODIMA-EXPRESS-MIB", "ipsiTimestamp"), ("CODIMA-EXPRESS-MIB", "ipsiFragTimeout"), ("CODIMA-EXPRESS-MIB", "ipsiNetUnreachable"), ("CODIMA-EXPRESS-MIB", "ipsiHostUnreachable"), ("CODIMA-EXPRESS-MIB", "ipsiProtocolUnreachable"), ("CODIMA-EXPRESS-MIB", "ipsiPortUnreachable"), ("CODIMA-EXPRESS-MIB", "ipsiFragRequired"), ("CODIMA-EXPRESS-MIB", "ipsiSrcRouteFail"), ("CODIMA-EXPRESS-MIB", "ipsiDestNetUnknown"), ("CODIMA-EXPRESS-MIB", "ipsiDestHostUnknown"), ("CODIMA-EXPRESS-MIB", "ipsiSrcHostIsolated"), ("CODIMA-EXPRESS-MIB", "ipsiNetProhibited"), ("CODIMA-EXPRESS-MIB", "ipsiHostProhibited"), ("CODIMA-EXPRESS-MIB", "ipsiNetTosUnreachable"), ("CODIMA-EXPRESS-MIB", "ipsiHostTosUnreachable"), ("CODIMA-EXPRESS-MIB", "ipsiPerformance"), ("CODIMA-EXPRESS-MIB", "ipsiNetRouteProblem"), ("CODIMA-EXPRESS-MIB", "ipsiHostRouteProblem"), ("CODIMA-EXPRESS-MIB", "ipsiAppRouteProblem"), ("CODIMA-EXPRESS-MIB", "ipsiRouteChange"), ("CODIMA-EXPRESS-MIB", "ipsiErrors"), ("CODIMA-EXPRESS-MIB", "ipsiMaintenance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsIcmpGroup = ipsIcmpGroup.setStatus('current')
dbProtocolGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 7))
protocolLongTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 7, 1))
plBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 7, 1, 1)).setObjects(("CODIMA-EXPRESS-MIB", "plbLayerIndex"), ("CODIMA-EXPRESS-MIB", "plbIdIndex"), ("CODIMA-EXPRESS-MIB", "plbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "plbTimeStamp"), ("CODIMA-EXPRESS-MIB", "plbProtocolName"), ("CODIMA-EXPRESS-MIB", "plbFrames"), ("CODIMA-EXPRESS-MIB", "plbBytes"), ("CODIMA-EXPRESS-MIB", "plbFrameSize"), ("CODIMA-EXPRESS-MIB", "plbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "plbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    plBaseGroup = plBaseGroup.setStatus('current')
plDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 7, 1, 2)).setObjects(("CODIMA-EXPRESS-MIB", "pldLayerIndex"), ("CODIMA-EXPRESS-MIB", "pldIdIndex"), ("CODIMA-EXPRESS-MIB", "pldTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "pldTimeStamp"), ("CODIMA-EXPRESS-MIB", "pldProtocolName"), ("CODIMA-EXPRESS-MIB", "pldUtilization"), ("CODIMA-EXPRESS-MIB", "pldErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    plDerivedGroup = plDerivedGroup.setStatus('current')
protocolShortTermGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 7, 2))
psBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 7, 2, 1)).setObjects(("CODIMA-EXPRESS-MIB", "psbLayerIndex"), ("CODIMA-EXPRESS-MIB", "psbIdIndex"), ("CODIMA-EXPRESS-MIB", "psbTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "psbTimeStamp"), ("CODIMA-EXPRESS-MIB", "psbProtocolName"), ("CODIMA-EXPRESS-MIB", "psbFrames"), ("CODIMA-EXPRESS-MIB", "psbBytes"), ("CODIMA-EXPRESS-MIB", "psbFrameSize"), ("CODIMA-EXPRESS-MIB", "psbHardwareErrors"), ("CODIMA-EXPRESS-MIB", "psbSoftwareErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    psBaseGroup = psBaseGroup.setStatus('current')
psDerivedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 7, 2, 2)).setObjects(("CODIMA-EXPRESS-MIB", "psdLayerIndex"), ("CODIMA-EXPRESS-MIB", "psdIdIndex"), ("CODIMA-EXPRESS-MIB", "psdTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "psdTimeStamp"), ("CODIMA-EXPRESS-MIB", "psdProtocolName"), ("CODIMA-EXPRESS-MIB", "psdUtilization"), ("CODIMA-EXPRESS-MIB", "psdErrorFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    psDerivedGroup = psDerivedGroup.setStatus('current')
dbNetChannelGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 8))
netChannelLongTermGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 8, 1)).setObjects(("CODIMA-EXPRESS-MIB", "nlTypeIndex"), ("CODIMA-EXPRESS-MIB", "nlNameIndex"), ("CODIMA-EXPRESS-MIB", "nlTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "nlTimeStamp"), ("CODIMA-EXPRESS-MIB", "nlFrames"), ("CODIMA-EXPRESS-MIB", "nlBytes"), ("CODIMA-EXPRESS-MIB", "nlFrameSize"), ("CODIMA-EXPRESS-MIB", "nlHardErrors"), ("CODIMA-EXPRESS-MIB", "nlSoftErrors"), ("CODIMA-EXPRESS-MIB", "nlUtilization"), ("CODIMA-EXPRESS-MIB", "nlHardErrorsPercent"), ("CODIMA-EXPRESS-MIB", "nlSoftErrorsPercent"), ("CODIMA-EXPRESS-MIB", "nlFramesPercent"), ("CODIMA-EXPRESS-MIB", "nlBytesPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    netChannelLongTermGroup = netChannelLongTermGroup.setStatus('current')
netChannelShortTermGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 8, 2)).setObjects(("CODIMA-EXPRESS-MIB", "nsTypeIndex"), ("CODIMA-EXPRESS-MIB", "nsNameIndex"), ("CODIMA-EXPRESS-MIB", "nsTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "nsTimeStamp"), ("CODIMA-EXPRESS-MIB", "nsFrames"), ("CODIMA-EXPRESS-MIB", "nsBytes"), ("CODIMA-EXPRESS-MIB", "nsFrameSize"), ("CODIMA-EXPRESS-MIB", "nsHardErrors"), ("CODIMA-EXPRESS-MIB", "nsSoftErrors"), ("CODIMA-EXPRESS-MIB", "nsUtilization"), ("CODIMA-EXPRESS-MIB", "nsHardErrorsPercent"), ("CODIMA-EXPRESS-MIB", "nsSoftErrorsPercent"), ("CODIMA-EXPRESS-MIB", "nsFramesPercent"), ("CODIMA-EXPRESS-MIB", "nsBytesPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    netChannelShortTermGroup = netChannelShortTermGroup.setStatus('current')
dbVlanGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 9))
vlanLongTermGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 9, 1)).setObjects(("CODIMA-EXPRESS-MIB", "vlIdIndex"), ("CODIMA-EXPRESS-MIB", "vlTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "vlTimeStamp"), ("CODIMA-EXPRESS-MIB", "vlName"), ("CODIMA-EXPRESS-MIB", "vlFrames"), ("CODIMA-EXPRESS-MIB", "vlBytes"), ("CODIMA-EXPRESS-MIB", "vlFrameSize"), ("CODIMA-EXPRESS-MIB", "vlHardErrors"), ("CODIMA-EXPRESS-MIB", "vlSoftErrors"), ("CODIMA-EXPRESS-MIB", "vlUtilization"), ("CODIMA-EXPRESS-MIB", "vlHardErrorsPercent"), ("CODIMA-EXPRESS-MIB", "vlSoftErrorsPercent"), ("CODIMA-EXPRESS-MIB", "vlFramesPercent"), ("CODIMA-EXPRESS-MIB", "vlBytesPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vlanLongTermGroup = vlanLongTermGroup.setStatus('current')
vlanShortTermGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 1, 9, 2)).setObjects(("CODIMA-EXPRESS-MIB", "vsIdIndex"), ("CODIMA-EXPRESS-MIB", "vsTimeStampIndex"), ("CODIMA-EXPRESS-MIB", "vsTimeStamp"), ("CODIMA-EXPRESS-MIB", "vsName"), ("CODIMA-EXPRESS-MIB", "vsFrames"), ("CODIMA-EXPRESS-MIB", "vsBytes"), ("CODIMA-EXPRESS-MIB", "vsFrameSize"), ("CODIMA-EXPRESS-MIB", "vsHardErrors"), ("CODIMA-EXPRESS-MIB", "vsSoftErrors"), ("CODIMA-EXPRESS-MIB", "vsUtilization"), ("CODIMA-EXPRESS-MIB", "vsHardErrorsPercent"), ("CODIMA-EXPRESS-MIB", "vsSoftErrorsPercent"), ("CODIMA-EXPRESS-MIB", "vsFramesPercent"), ("CODIMA-EXPRESS-MIB", "vsBytesPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vlanShortTermGroup = vlanShortTermGroup.setStatus('current')
alarmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 1, 2)).setObjects(("CODIMA-EXPRESS-MIB", "alarmMessage"), ("CODIMA-EXPRESS-MIB", "alarmTime"), ("CODIMA-EXPRESS-MIB", "alarmClass"), ("CODIMA-EXPRESS-MIB", "alarmUnitType"), ("CODIMA-EXPRESS-MIB", "alarmGroup"), ("CODIMA-EXPRESS-MIB", "alarmFunction"), ("CODIMA-EXPRESS-MIB", "alarmCode"), ("CODIMA-EXPRESS-MIB", "alarmLayer"), ("CODIMA-EXPRESS-MIB", "alarmBaseProtocol"), ("CODIMA-EXPRESS-MIB", "alarmTopProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alarmObjectGroup = alarmObjectGroup.setStatus('current')
expressNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 2))
alarmNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 226, 3, 2, 3, 2, 1)).setObjects(("CODIMA-EXPRESS-MIB", "expressAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alarmNotifyGroup = alarmNotifyGroup.setStatus('current')
mibBuilder.exportSymbols("CODIMA-EXPRESS-MIB", ssEthernetTable=ssEthernetTable, msdTimeStamp=msdTimeStamp, mliTimestamp=mliTimestamp, mleTimeStampIndex=mleTimeStampIndex, mplduTxBytes=mplduTxBytes, vlTimeStampIndex=vlTimeStampIndex, alarmFunction=alarmFunction, mlpVoip=mlpVoip, mplBaseEntry=mplBaseEntry, mlpMacIndex=mlpMacIndex, mpsduMac2Index=mpsduMac2Index, ipsIcmpGroup=ipsIcmpGroup, ilBaseTable=ilBaseTable, segShortTerm=segShortTerm, vsFramesPercent=vsFramesPercent, msdUtilization=msdUtilization, iplIcmpEntry=iplIcmpEntry, ssp1Crc=ssp1Crc, dbIPv4=dbIPv4, slp2Jabbers=slp2Jabbers, mlIcmpTable=mlIcmpTable, psDerivedEntry=psDerivedEntry, mlProtocolEntry=mlProtocolEntry, mplpTimeStamp=mplpTimeStamp, msdpTimeStamp=msdpTimeStamp, mlDuplexEntry=mlDuplexEntry, mliMacIndex=mliMacIndex, nlBytes=nlBytes, mplpIso=mplpIso, iplbIp2Index=iplbIp2Index, msEthernetGroup=msEthernetGroup, isiAppRouteProblem=isiAppRouteProblem, isiTimestamp=isiTimestamp, ssBaseEntry=ssBaseEntry, ipliRedirect=ipliRedirect, sseTimeStampIndex=sseTimeStampIndex, iliHostUnreachable=iliHostUnreachable, iliPerformance=iliPerformance, psbLayerIndex=psbLayerIndex, slp2Utilization=slp2Utilization, isbBytes=isbBytes, mlduRxUtilization=mlduRxUtilization, mplduTimeStamp=mplduTimeStamp, msiTtlExceeded=msiTtlExceeded, slp1Collisions=slp1Collisions, vsTimeStampIndex=vsTimeStampIndex, plBaseGroup=plBaseGroup, mlpRouting=mlpRouting, iplBaseGroup=iplBaseGroup, slp2Collisions=slp2Collisions, mleTimeStamp=mleTimeStamp, ilbHardwareErrors=ilbHardwareErrors, expressNotificationGroups=expressNotificationGroups, mlpTimeStamp=mlpTimeStamp, mlbTimeStampIndex=mlbTimeStampIndex, sliSrcRouteFail=sliSrcRouteFail, mplDuplexEntry=mplDuplexEntry, ipsiHostProhibited=ipsiHostProhibited, slbcTimeStamp=slbcTimeStamp, mplpIpData=mplpIpData, isiSrcHostIsolated=isiSrcHostIsolated, ipPeerShortTerm=ipPeerShortTerm, psbHardwareErrors=psbHardwareErrors, iplbTimeStampIndex=iplbTimeStampIndex, vlHardErrors=vlHardErrors, mlduRxFrameSize=mlduRxFrameSize, mspWww=mspWww, slbcTimeStampIndex=slbcTimeStampIndex, msDerivedEntry=msDerivedEntry, alarmObjectGroup=alarmObjectGroup, psDerivedTable=psDerivedTable, nlFrames=nlFrames, mliPing=mliPing, vlFrames=vlFrames, ssiTimeStamp=ssiTimeStamp, ssp1Bytes=ssp1Bytes, slBroadcastGroup=slBroadcastGroup, slbTimeStamp=slbTimeStamp, isiTtlExceeded=isiTtlExceeded, iplDerivedEntry=iplDerivedEntry, msbTimeStamp=msbTimeStamp, isBaseTable=isBaseTable, mlduTxBytes=mlduTxBytes, msdpTxBytes=msdpTxBytes, psdIdIndex=psdIdIndex, segLongTerm=segLongTerm, ssp1Collisions=ssp1Collisions, iliTtlExceeded=iliTtlExceeded, mplduRxUtilization=mplduRxUtilization, vlanLongTermTable=vlanLongTermTable, ipsiSrcRouteFail=ipsiSrcRouteFail, nsFrames=nsFrames, ssiNetTosUnreachable=ssiNetTosUnreachable, msiSrcRouteFail=msiSrcRouteFail, vlanShortTermTable=vlanShortTermTable, mspVoip=mspVoip, mlduTxFrameSize=mlduTxFrameSize, mlDuplexTable=mlDuplexTable, vsHardErrorsPercent=vsHardErrorsPercent, mleRunts=mleRunts, mlpIcmp=mlpIcmp, mlDerivedEntry=mlDerivedEntry, ssiSrcRouteFail=ssiSrcRouteFail, ssiErrors=ssiErrors, psDerivedGroup=psDerivedGroup, ssiNetUnreachable=ssiNetUnreachable, sliSrcQuench=sliSrcQuench, msiMacIndex=msiMacIndex, ssDerivedGroup=ssDerivedGroup, ssiPerformance=ssiPerformance, ssp2LineSpeed=ssp2LineSpeed, mlEthernetTable=mlEthernetTable, mlpSnmp=mlpSnmp, isbSoftwareErrors=isbSoftwareErrors, iliHostProhibited=iliHostProhibited, slp1TimeStampIndex=slp1TimeStampIndex, ssiSrcQuench=ssiSrcQuench, vsBytesPercent=vsBytesPercent, slp1Utilization=slp1Utilization, psBaseTable=psBaseTable, expHistoryDatabases=expHistoryDatabases, slp2SoftErrors=slp2SoftErrors, mpsDerivedGroup=mpsDerivedGroup, mplpIcmp=mplpIcmp, msdErrorFrames=msdErrorFrames, mplpWww=mplpWww, iplbFrameSize=iplbFrameSize, msDerivedGroup=msDerivedGroup, nsSoftErrorsPercent=nsSoftErrorsPercent, mliRouteChange=mliRouteChange, vlSoftErrorsPercent=vlSoftErrorsPercent, isiDestNetUnknown=isiDestNetUnknown, mpspTimeStampIndex=mpspTimeStampIndex, mpspMac1Index=mpspMac1Index, codimaExpressMIB=codimaExpressMIB, msbTimeStampIndex=msbTimeStampIndex, nsFramesPercent=nsFramesPercent, vsFrames=vsFrames, msiNetTosUnreachable=msiNetTosUnreachable, mpspIcmp=mpspIcmp, msiFragRequired=msiFragRequired, sliTimeStampIndex=sliTimeStampIndex, ilbFrames=ilbFrames, sliHostRouteProblem=sliHostRouteProblem, nlFrameSize=nlFrameSize, expressAlarm=expressAlarm, slbcPercentBytes=slbcPercentBytes, mpspDns=mpspDns, isiTimeStampIndex=isiTimeStampIndex, vlanLongTermEntry=vlanLongTermEntry, ipsdTimeStampIndex=ipsdTimeStampIndex, netChanLongTermTable=netChanLongTermTable, alarmBaseProtocol=alarmBaseProtocol, dbMacPeerGroups=dbMacPeerGroups, slp2FrameSize=slp2FrameSize, msdMacIndex=msdMacIndex, vsTimeStamp=vsTimeStamp, psdTimeStamp=psdTimeStamp, sleTimeStamp=sleTimeStamp, mlbTimeStamp=mlbTimeStamp, mldErrorFrames=mldErrorFrames, mspNetbios=mspNetbios, ipsiNetProhibited=ipsiNetProhibited, sldUtilization=sldUtilization, isiIpIndex=isiIpIndex, isiNetRouteProblem=isiNetRouteProblem, nlTimeStamp=nlTimeStamp, msBaseGroup=msBaseGroup, mpspSnmp=mpspSnmp, ssiPortUnreachable=ssiPortUnreachable, mldUtilization=mldUtilization, mlpIp=mlpIp, mplduTxFrameSize=mplduTxFrameSize, vlFramesPercent=vlFramesPercent, ctLockMethod=ctLockMethod, ssEthernetEntry=ssEthernetEntry, slp1LateCollisions=slp1LateCollisions, isiRedirect=isiRedirect, slIcmpTable=slIcmpTable, mlduTxUtilization=mlduTxUtilization, mpsProtocolGroup=mpsProtocolGroup, ipldErrorFrames=ipldErrorFrames, slPortEntry=slPortEntry, ssbcBytesPercent=ssbcBytesPercent, mlbFrames=mlbFrames, mpsBaseTable=mpsBaseTable, sliRedirect=sliRedirect, mpsduTxFrames=mpsduTxFrames, ildErrorFrames=ildErrorFrames, msProtocolEntry=msProtocolEntry, mpldMac2Index=mpldMac2Index, msdpMacIndex=msdpMacIndex, msDuplexTable=msDuplexTable, isbFrames=isbFrames, ssp1Utilization=ssp1Utilization, msiErrors=msiErrors, slp1LineSpeed=slp1LineSpeed, dbNetChannelGroups=dbNetChannelGroups, slIcmpEntry=slIcmpEntry, plbFrameSize=plbFrameSize, mplProtocolEntry=mplProtocolEntry, ilbIpIndex=ilbIpIndex, iliPortUnreachable=iliPortUnreachable, plBaseEntry=plBaseEntry, sliRouteChange=sliRouteChange, ilDerivedGroup=ilDerivedGroup, mplpMail=mplpMail, ssiHostProhibited=ssiHostProhibited, msiFragTimeout=msiFragTimeout, ipliHostTosUnreachable=ipliHostTosUnreachable, msiAppRouteProblem=msiAppRouteProblem, mlBaseGroup=mlBaseGroup, mseJabbers=mseJabbers, slp1Runts=slp1Runts, mpsDerivedTable=mpsDerivedTable, mliNetRouteProblem=mliNetRouteProblem, expressTraps=expressTraps, mlpIpData=mlpIpData, slbFrameSize=slbFrameSize, ilIcmpEntry=ilIcmpEntry, slbHardwareErrors=slbHardwareErrors, ipldTimeStampIndex=ipldTimeStampIndex, vsHardErrors=vsHardErrors, mplpManagement=mplpManagement, vlanLongTermGroup=vlanLongTermGroup, slPortTable=slPortTable, nlUtilization=nlUtilization, ipliErrors=ipliErrors, mpsduTxUtilization=mpsduTxUtilization, mliDestNetUnknown=mliDestNetUnknown, ilIcmpGroup=ilIcmpGroup, ipsIcmpEntry=ipsIcmpEntry, sleCrc=sleCrc, ildUtilization=ildUtilization, iliNetUnreachable=iliNetUnreachable, isiSrcQuench=isiSrcQuench, plbProtocolName=plbProtocolName, iliTimeStampIndex=iliTimeStampIndex, mlIcmpGroup=mlIcmpGroup, ssPortTable=ssPortTable, isIcmpGroup=isIcmpGroup, ctSampleType=ctSampleType, ilIcmpTable=ilIcmpTable, isiParamProblem=isiParamProblem, ssp1Jabbers=ssp1Jabbers, mleCollisions=mleCollisions, mliTtlExceeded=mliTtlExceeded, mlpManagement=mlpManagement, ssEthernetGroup=ssEthernetGroup, ipsiTimeStampIndex=ipsiTimeStampIndex, isiErrors=isiErrors, plbFrames=plbFrames, psbTimeStampIndex=psbTimeStampIndex, vlanShortTermGroup=vlanShortTermGroup)
mibBuilder.exportSymbols("CODIMA-EXPRESS-MIB", ilDerivedTable=ilDerivedTable, mplduRxFrames=mplduRxFrames, netChanShortTermTable=netChanShortTermTable, mspMacIndex=mspMacIndex, nsBytesPercent=nsBytesPercent, ipsiPortUnreachable=ipsiPortUnreachable, ssiHostTosUnreachable=ssiHostTosUnreachable, sseTimeStamp=sseTimeStamp, isdTimeStamp=isdTimeStamp, vlBytesPercent=vlBytesPercent, ssiHostUnreachable=ssiHostUnreachable, ipliTimeStampIndex=ipliTimeStampIndex, ssiRedirect=ssiRedirect, ssiAppRouteProblem=ssiAppRouteProblem, ipsiFragTimeout=ipsiFragTimeout, ipliNetUnreachable=ipliNetUnreachable, plbTimeStamp=plbTimeStamp, ssBaseTable=ssBaseTable, iliDestHostUnknown=iliDestHostUnknown, iliHostRouteProblem=iliHostRouteProblem, ipsBaseEntry=ipsBaseEntry, plbHardwareErrors=plbHardwareErrors, ipsiTimeStamp=ipsiTimeStamp, mlIcmpEntry=mlIcmpEntry, sleJabbers=sleJabbers, slp2Runts=slp2Runts, ssbcBytes=ssbcBytes, mpldTimeStamp=mpldTimeStamp, ipliFragRequired=ipliFragRequired, mseTimeStampIndex=mseTimeStampIndex, isdUtilization=isdUtilization, msiNetRouteProblem=msiNetRouteProblem, mplbMac1Index=mplbMac1Index, mplpDns=mplpDns, pldLayerIndex=pldLayerIndex, msdpTxUtilization=msdpTxUtilization, mpsbSoftwareErrors=mpsbSoftwareErrors, ssBroadcastEntry=ssBroadcastEntry, msiDestNetUnknown=msiDestNetUnknown, slDerivedTable=slDerivedTable, mlBaseTable=mlBaseTable, slp1Crc=slp1Crc, ipsdErrorFrames=ipsdErrorFrames, mpspRouting=mpspRouting, msiTimeStampIndex=msiTimeStampIndex, mpsDerivedEntry=mpsDerivedEntry, vsBytes=vsBytes, sspTimeStampIndex=sspTimeStampIndex, slBaseEntry=slBaseEntry, sliNetUnreachable=sliNetUnreachable, codimaExpressObjects=codimaExpressObjects, mplpApplications=mplpApplications, mpsbFrameSize=mpsbFrameSize, mliHostUnreachable=mliHostUnreachable, iliDestNetUnknown=iliDestNetUnknown, sliFragTimeout=sliFragTimeout, ssiSrcHostIsolated=ssiSrcHostIsolated, iliAppRouteProblem=iliAppRouteProblem, msDerivedTable=msDerivedTable, msiPortUnreachable=msiPortUnreachable, mlpNetbios=mlpNetbios, msiSrcHostIsolated=msiSrcHostIsolated, alarmClass=alarmClass, msEthernetEntry=msEthernetEntry, expressObjectGroups=expressObjectGroups, ipliNetRouteProblem=ipliNetRouteProblem, mliErrors=mliErrors, ipsiRouteChange=ipsiRouteChange, mspLayer3Traffic=mspLayer3Traffic, mpsdErrorFrames=mpsdErrorFrames, ipsdIp1Index=ipsdIp1Index, ssiFragRequired=ssiFragRequired, mpsBaseGroup=mpsBaseGroup, iplbFrames=iplbFrames, slp2Crc=slp2Crc, mplduRxBytes=mplduRxBytes, sliHostUnreachable=sliHostUnreachable, isiTimeStamp=isiTimeStamp, ipldUtilization=ipldUtilization, sliNetTosUnreachable=sliNetTosUnreachable, mlbMacIndex=mlbMacIndex, msProtocolGroup=msProtocolGroup, mliTimeStamp=mliTimeStamp, slBaseTable=slBaseTable, slp1Jabbers=slp1Jabbers, msbFrames=msbFrames, ilbFrameSize=ilbFrameSize, mplBaseTable=mplBaseTable, mpsduMac1Index=mpsduMac1Index, macLongTermGroups=macLongTermGroups, mliNetUnreachable=mliNetUnreachable, psbTimeStamp=psbTimeStamp, nlSoftErrorsPercent=nlSoftErrorsPercent, ssbcTimeStamp=ssbcTimeStamp, iplIcmpGroup=iplIcmpGroup, mplduTxFrames=mplduTxFrames, pldUtilization=pldUtilization, mlBaseEntry=mlBaseEntry, slbcPercentFrames=slbcPercentFrames, mleJabbers=mleJabbers, isiHostTosUnreachable=isiHostTosUnreachable, macPeerShortTermGroups=macPeerShortTermGroups, ctrlTimeEntry=ctrlTimeEntry, sliPing=sliPing, dbVlan=dbVlan, mliTimeStampIndex=mliTimeStampIndex, codimaExpressNotifications=codimaExpressNotifications, msbBytes=msbBytes, iliPing=iliPing, slp1TimeStamp=slp1TimeStamp, iliSrcHostIsolated=iliSrcHostIsolated, ssp2Frames=ssp2Frames, isiProtocolUnreachable=isiProtocolUnreachable, ipliHostRouteProblem=ipliHostRouteProblem, ssiDestHostUnknown=ssiDestHostUnknown, mlpNovell=mlpNovell, ipliPerformance=ipliPerformance, mpsdTimeStampIndex=mpsdTimeStampIndex, mliSrcQuench=mliSrcQuench, netChanLongTermEntry=netChanLongTermEntry, mplpVoip=mplpVoip, mpldTimeStampIndex=mpldTimeStampIndex, iliErrors=iliErrors, ipsiIp1Index=ipsiIp1Index, iplbIp1Index=iplbIp1Index, ssiPing=ssiPing, nlBytesPercent=nlBytesPercent, mliDestHostUnknown=mliDestHostUnknown, alarmGroup=alarmGroup, mspApplications=mspApplications, mldMacIndex=mldMacIndex, mplpNovell=mplpNovell, isiMaintenance=isiMaintenance, mspNovell=mspNovell, ssp1Frames=ssp1Frames, ssiNetRouteProblem=ssiNetRouteProblem, ipliParamProblem=ipliParamProblem, msdpTxFrameSize=msdpTxFrameSize, sseJabbers=sseJabbers, isDerivedEntry=isDerivedEntry, sseRunts=sseRunts, vsFrameSize=vsFrameSize, ssbcFrames=ssbcFrames, ssp2SoftErrors=ssp2SoftErrors, ipsiAppRouteProblem=ipsiAppRouteProblem, isIcmpTable=isIcmpTable, mspIpControl=mspIpControl, vsSoftErrorsPercent=vsSoftErrorsPercent, ipsDerivedEntry=ipsDerivedEntry, isdIpIndex=isdIpIndex, mpsbTimeStamp=mpsbTimeStamp, iplIcmpTable=iplIcmpTable, nsFrameSize=nsFrameSize, msiTimestamp=msiTimestamp, slEthernetGroup=slEthernetGroup, ssPortGroup=ssPortGroup, ssIcmpTable=ssIcmpTable, dbMac=dbMac, slp1FrameSize=slp1FrameSize, slp2Frames=slp2Frames, msdTimeStampIndex=msdTimeStampIndex, ipsiErrors=ipsiErrors, plDerivedEntry=plDerivedEntry, mpsdMac1Index=mpsdMac1Index, iplDerivedTable=iplDerivedTable, nsHardErrors=nsHardErrors, mlbSoftwareErrors=mlbSoftwareErrors, mlduTxFrames=mlduTxFrames, ipliDestNetUnknown=ipliDestNetUnknown, mspSnmp=mspSnmp, slEthernetTable=slEthernetTable, mlpLayer3Traffic=mlpLayer3Traffic, nlNameIndex=nlNameIndex, mpspManagement=mpspManagement, plbLayerIndex=plbLayerIndex, ipliNetProhibited=ipliNetProhibited, ctTimeSlots=ctTimeSlots, iliNetRouteProblem=iliNetRouteProblem, mplpRouting=mplpRouting, ipsiFragRequired=ipsiFragRequired, ipsdIp2Index=ipsdIp2Index, pldErrorFrames=pldErrorFrames, sliAppRouteProblem=sliAppRouteProblem, ipliPortUnreachable=ipliPortUnreachable, ipsbFrames=ipsbFrames, mlduTimeStamp=mlduTimeStamp, mliRedirect=mliRedirect, iplbTimeStamp=iplbTimeStamp, mplduTxUtilization=mplduTxUtilization, ssp1Runts=ssp1Runts, ipsiSrcHostIsolated=ipsiSrcHostIsolated, mspDns=mspDns, iliNetProhibited=iliNetProhibited, ssp1LineNoise=ssp1LineNoise, sliHostProhibited=sliHostProhibited, mpsbFrames=mpsbFrames, mspIp=mspIp, mliSrcRouteFail=mliSrcRouteFail, alarmMessage=alarmMessage, sliNetRouteProblem=sliNetRouteProblem, ipsiHostUnreachable=ipsiHostUnreachable, ilDerivedEntry=ilDerivedEntry, alarmUnitType=alarmUnitType, mplbFrames=mplbFrames, ssp2Bytes=ssp2Bytes, sseCrc=sseCrc, mpspIpData=mpspIpData, mplProtocolGroup=mplProtocolGroup, msiRedirect=msiRedirect, ssdUtilization=ssdUtilization, isBaseGroup=isBaseGroup, ipliAppRouteProblem=ipliAppRouteProblem, mlbFrameSize=mlbFrameSize, isdTimeStampIndex=isdTimeStampIndex, mlduRxBytes=mlduRxBytes, mplDerivedEntry=mplDerivedEntry, mpspTimeStamp=mpspTimeStamp, mplDerivedTable=mplDerivedTable, ipLongTermGroups=ipLongTermGroups, ipsiNetUnreachable=ipsiNetUnreachable, mseCrc=mseCrc, mliFragTimeout=mliFragTimeout, ipsiSrcQuench=ipsiSrcQuench, psbFrameSize=psbFrameSize, msiPerformance=msiPerformance, mseRunts=mseRunts, netChannelLongTermGroup=netChannelLongTermGroup, sliSrcHostIsolated=sliSrcHostIsolated, ssp1FrameSize=ssp1FrameSize, protocolShortTerm=protocolShortTerm, mlProtocolTable=mlProtocolTable, ssiNetProhibited=ssiNetProhibited, isiHostUnreachable=isiHostUnreachable, ipsbTimeStamp=ipsbTimeStamp, psbSoftwareErrors=psbSoftwareErrors, mspIso=mspIso, iliProtocolUnreachable=iliProtocolUnreachable, mseTimeStamp=mseTimeStamp, ipliDestHostUnknown=ipliDestHostUnknown, mleCrc=mleCrc, isiPing=isiPing, mplDuplexGroup=mplDuplexGroup, msiTimeStamp=msiTimeStamp, msiPing=msiPing, iliRouteChange=iliRouteChange, psBaseEntry=psBaseEntry, ssbSoftwareErrors=ssbSoftwareErrors, ipsiHostTosUnreachable=ipsiHostTosUnreachable, alarmTopProtocol=alarmTopProtocol, ssIcmpEntry=ssIcmpEntry, ipsiMaintenance=ipsiMaintenance, psdTimeStampIndex=psdTimeStampIndex, ildTimeStampIndex=ildTimeStampIndex, plbTimeStampIndex=plbTimeStampIndex)
mibBuilder.exportSymbols("CODIMA-EXPRESS-MIB", nlTypeIndex=nlTypeIndex, mliMaintenance=mliMaintenance, ipliSrcHostIsolated=ipliSrcHostIsolated, mlProtocolGroup=mlProtocolGroup, mlpDns=mlpDns, ssiDestNetUnknown=ssiDestNetUnknown, mpldErrorFrames=mpldErrorFrames, iplbBytes=iplbBytes, vsUtilization=vsUtilization, nsSoftErrors=nsSoftErrors, sleCollisions=sleCollisions, ssp1SoftErrors=ssp1SoftErrors, sspTimeStamp=sspTimeStamp, ssp1LateCollisions=ssp1LateCollisions, psdProtocolName=psdProtocolName, nlTimeStampIndex=nlTimeStampIndex, sliHostTosUnreachable=sliHostTosUnreachable, iplbHardwareErrors=iplbHardwareErrors, pldProtocolName=pldProtocolName, dbVlanGroups=dbVlanGroups, ssbHardwareErrors=ssbHardwareErrors, mplbBytes=mplbBytes, mpsdTimeStamp=mpsdTimeStamp, vlSoftErrors=vlSoftErrors, ilBaseGroup=ilBaseGroup, ctLockUserTime=ctLockUserTime, slp1SoftErrors=slp1SoftErrors, mspTimeStamp=mspTimeStamp, dbNetChannel=dbNetChannel, ipsiPing=ipsiPing, pldTimeStamp=pldTimeStamp, msdpRxBytes=msdpRxBytes, sleRunts=sleRunts, mlduMacIndex=mlduMacIndex, ipliSrcRouteFail=ipliSrcRouteFail, msBaseTable=msBaseTable, sliMaintenance=sliMaintenance, isiSrcRouteFail=isiSrcRouteFail, segLongTermGroups=segLongTermGroups, isbTimeStampIndex=isbTimeStampIndex, slbTimeStampIndex=slbTimeStampIndex, macLongTerm=macLongTerm, ssiTimeStampIndex=ssiTimeStampIndex, mlpApplications=mlpApplications, ipliNetTosUnreachable=ipliNetTosUnreachable, ssp2LateCollisions=ssp2LateCollisions, protocolLongTermGroups=protocolLongTermGroups, dbSegmentGroups=dbSegmentGroups, ssp2Utilization=ssp2Utilization, macShortTerm=macShortTerm, slp2LateCollisions=slp2LateCollisions, msProtocolTable=msProtocolTable, ipsiIp2Index=ipsiIp2Index, slbSoftwareErrors=slbSoftwareErrors, dbControlGroups=dbControlGroups, mlbBytes=mlbBytes, plBaseTable=plBaseTable, mseCollisions=mseCollisions, mlpTimeStampIndex=mlpTimeStampIndex, sseCollisions=sseCollisions, mlDerivedGroup=mlDerivedGroup, mplduRxFrameSize=mplduRxFrameSize, slDerivedGroup=slDerivedGroup, mliPortUnreachable=mliPortUnreachable, sliTimeStamp=sliTimeStamp, mplpMac2Index=mplpMac2Index, ipliFragTimeout=ipliFragTimeout, mseLateCollisions=mseLateCollisions, ipsiPerformance=ipsiPerformance, mpsduTxFrameSize=mpsduTxFrameSize, iliFragRequired=iliFragRequired, isiFragTimeout=isiFragTimeout, ipliRouteChange=ipliRouteChange, pldTimeStampIndex=pldTimeStampIndex, mpsDuplexEntry=mpsDuplexEntry, nlFramesPercent=nlFramesPercent, ipliTimeStamp=ipliTimeStamp, mlpWww=mlpWww, msBaseEntry=msBaseEntry, mpldUtilization=mpldUtilization, ipLongTerm=ipLongTerm, iliTimeStamp=iliTimeStamp, ipliSrcQuench=ipliSrcQuench, sliDestHostUnknown=sliDestHostUnknown, sliTimestamp=sliTimestamp, slp2Bytes=slp2Bytes, ssbTimeStamp=ssbTimeStamp, psbProtocolName=psbProtocolName, nlHardErrorsPercent=nlHardErrorsPercent, macPeerShortTerm=macPeerShortTerm, mleMacIndex=mleMacIndex, msdpRxFrames=msdpRxFrames, ipsiDestHostUnknown=ipsiDestHostUnknown, msiHostRouteProblem=msiHostRouteProblem, mpsProtocolTable=mpsProtocolTable, psbFrames=psbFrames, netChanShortTermEntry=netChanShortTermEntry, isdErrorFrames=isdErrorFrames, ssiParamProblem=ssiParamProblem, vlIdIndex=vlIdIndex, ipldIp1Index=ipldIp1Index, sliNetProhibited=sliNetProhibited, slbcBytes=slbcBytes, mseMacIndex=mseMacIndex, ipsbFrameSize=ipsbFrameSize, msDuplexEntry=msDuplexEntry, nsBytes=nsBytes, slDerivedEntry=slDerivedEntry, ipliTimestamp=ipliTimestamp, dbControl=dbControl, slbcFrames=slbcFrames, netChannelShortTermGroup=netChannelShortTermGroup, msbFrameSize=msbFrameSize, iplBaseEntry=iplBaseEntry, dbSegment=dbSegment, ildIpIndex=ildIpIndex, slEthernetEntry=slEthernetEntry, isiHostProhibited=isiHostProhibited, nsTimeStamp=nsTimeStamp, sliPerformance=sliPerformance, ssBaseGroup=ssBaseGroup, isbTimeStamp=isbTimeStamp, msIcmpTable=msIcmpTable, ipldTimeStamp=ipldTimeStamp, msIcmpEntry=msIcmpEntry, ipsBaseTable=ipsBaseTable, ipPeerLongTermGroups=ipPeerLongTermGroups, ssiMaintenance=ssiMaintenance, protocolLongTerm=protocolLongTerm, ctrlTimeTable=ctrlTimeTable, mpsduRxFrames=mpsduRxFrames, isiPerformance=isiPerformance, ipsIcmpTable=ipsIcmpTable, mlDerivedTable=mlDerivedTable, mliProtocolUnreachable=mliProtocolUnreachable, mplpNetbios=mplpNetbios, mpspNovell=mpspNovell, ipsbBytes=ipsbBytes, ipsbHardwareErrors=ipsbHardwareErrors, mplDerivedGroup=mplDerivedGroup, nlSoftErrors=nlSoftErrors, slp1LineNoise=slp1LineNoise, ipsiProtocolUnreachable=ipsiProtocolUnreachable, mplbFrameSize=mplbFrameSize, mplpTimeStampIndex=mplpTimeStampIndex, mpsbTimeStampIndex=mpsbTimeStampIndex, ssiFragTimeout=ssiFragTimeout, iplDerivedGroup=iplDerivedGroup, expAlarms=expAlarms, mpsBaseEntry=mpsBaseEntry, isiFragRequired=isiFragRequired, mliHostRouteProblem=mliHostRouteProblem, ipsBaseGroup=ipsBaseGroup, mplDuplexTable=mplDuplexTable, msbHardwareErrors=msbHardwareErrors, ipsiHostRouteProblem=ipsiHostRouteProblem, msdpTxFrames=msdpTxFrames, isiDestHostUnknown=isiDestHostUnknown, mspRouting=mspRouting, ipsbIp1Index=ipsbIp1Index, macPeerLongTerm=macPeerLongTerm, isiNetUnreachable=isiNetUnreachable, msiHostUnreachable=msiHostUnreachable, msiDestHostUnknown=msiDestHostUnknown, ssdErrorFrames=ssdErrorFrames, mplduMac1Index=mplduMac1Index, mlDuplexGroup=mlDuplexGroup, dbProtocol=dbProtocol, mpspNetbios=mpspNetbios, alarmCode=alarmCode, isbFrameSize=isbFrameSize, ssbFrames=ssbFrames, ipsdUtilization=ipsdUtilization, msdpRxFrameSize=msdpRxFrameSize, mpsDuplexTable=mpsDuplexTable, mpsduRxUtilization=mpsduRxUtilization, isiNetProhibited=isiNetProhibited, historyDatabaseGroups=historyDatabaseGroups, slp1Bytes=slp1Bytes, sleLateCollisions=sleLateCollisions, mliNetTosUnreachable=mliNetTosUnreachable, mpspIp=mpspIp, mpspIso=mpspIso, vlFrameSize=vlFrameSize, mpsduTimeStamp=mpsduTimeStamp, mldTimeStampIndex=mldTimeStampIndex, msiRouteChange=msiRouteChange, msdpTimeStampIndex=msdpTimeStampIndex, sliParamProblem=sliParamProblem, ssp2Collisions=ssp2Collisions, ipsbSoftwareErrors=ipsbSoftwareErrors, mplbMac2Index=mplbMac2Index, ipsiNetTosUnreachable=ipsiNetTosUnreachable, sldErrorFrames=sldErrorFrames, mpsbBytes=mpsbBytes, mleLateCollisions=mleLateCollisions, ssiTtlExceeded=ssiTtlExceeded, slp1Frames=slp1Frames, vlanShortTermEntry=vlanShortTermEntry, psdUtilization=psdUtilization, mpsduTxBytes=mpsduTxBytes, nsNameIndex=nsNameIndex, mliPerformance=mliPerformance, dpIPv4PeerGroups=dpIPv4PeerGroups, mspManagement=mspManagement, iplbSoftwareErrors=iplbSoftwareErrors, sldTimeStamp=sldTimeStamp, plbSoftwareErrors=plbSoftwareErrors, psdErrorFrames=psdErrorFrames, dbMacGroups=dbMacGroups, slBroadcastTable=slBroadcastTable, mlpIso=mlpIso, sliProtocolUnreachable=sliProtocolUnreachable, iliMaintenance=iliMaintenance, nsTimeStampIndex=nsTimeStampIndex, isbHardwareErrors=isbHardwareErrors, sseLateCollisions=sseLateCollisions, vlName=vlName, mplpIp=mplpIp, dbIPv4Peer=dbIPv4Peer, vsSoftErrors=vsSoftErrors, msIcmpGroup=msIcmpGroup, mpsProtocolEntry=mpsProtocolEntry, mlEthernetEntry=mlEthernetEntry, mplpLayer3Traffic=mplpLayer3Traffic, ipShortTerm=ipShortTerm, ctrlTimeGroup=ctrlTimeGroup, plDerivedGroup=plDerivedGroup, ssp2FrameSize=ssp2FrameSize, ipliHostUnreachable=ipliHostUnreachable, sliPortUnreachable=sliPortUnreachable, protocolShortTermGroups=protocolShortTermGroups, ssbBytes=ssbBytes, msiHostProhibited=msiHostProhibited, ssdTimeStamp=ssdTimeStamp, mliSrcHostIsolated=mliSrcHostIsolated, plDerivedTable=plDerivedTable, mlEthernetGroup=mlEthernetGroup, vlUtilization=vlUtilization, isDerivedGroup=isDerivedGroup, mlduRxFrames=mlduRxFrames, mpspMac2Index=mpspMac2Index, mpspVoip=mpspVoip, sliDestNetUnknown=sliDestNetUnknown, mlduTimeStampIndex=mlduTimeStampIndex, mpsbMac1Index=mpsbMac1Index, ipsiParamProblem=ipsiParamProblem, vlBytes=vlBytes, isiRouteChange=isiRouteChange, mliFragRequired=mliFragRequired, ilbSoftwareErrors=ilbSoftwareErrors, ipsbTimeStampIndex=ipsbTimeStampIndex, slBroadcastEntry=slBroadcastEntry, ssbcTimeStampIndex=ssbcTimeStampIndex)
mibBuilder.exportSymbols("CODIMA-EXPRESS-MIB", iliHostTosUnreachable=iliHostTosUnreachable, ipShortTermGroups=ipShortTermGroups, codimaExpressConformance=codimaExpressConformance, ipsiRedirect=ipsiRedirect, mlpIpControl=mlpIpControl, ipliIp1Index=ipliIp1Index, alarmLayer=alarmLayer, mpsbHardwareErrors=mpsbHardwareErrors, ipPeerShortTermGroups=ipPeerShortTermGroups, iliSrcQuench=iliSrcQuench, ipsDerivedTable=ipsDerivedTable, ipsdTimeStamp=ipsdTimeStamp, ssiProtocolUnreachable=ssiProtocolUnreachable, sliGrpErrors=sliGrpErrors, mplpIpControl=mplpIpControl, ssiTimestamp=ssiTimestamp, iliTimestamp=iliTimestamp, slPortGroup=slPortGroup, mpspWww=mpspWww, msDuplexGroup=msDuplexGroup, dbMacPeer=dbMacPeer, msiNetProhibited=msiNetProhibited, mpspIpControl=mpspIpControl, mliHostTosUnreachable=mliHostTosUnreachable, mplbTimeStamp=mplbTimeStamp, ipsiTimestamp=ipsiTimestamp, psbBytes=psbBytes, msEthernetTable=msEthernetTable, ssp2LineNoise=ssp2LineNoise, mplbSoftwareErrors=mplbSoftwareErrors, ipliHostProhibited=ipliHostProhibited, ssbActiveNodes=ssbActiveNodes, isIcmpEntry=isIcmpEntry, isiNetTosUnreachable=isiNetTosUnreachable, segShortTermGroups=segShortTermGroups, ssp2Runts=ssp2Runts, mlbHardwareErrors=mlbHardwareErrors, mplpMac1Index=mplpMac1Index, mpsduRxBytes=mpsduRxBytes, vlHardErrorsPercent=vlHardErrorsPercent, ssdTimeStampIndex=ssdTimeStampIndex, iliParamProblem=iliParamProblem, ipPeerLongTerm=ipPeerLongTerm, plbBytes=plbBytes, mlpMail=mlpMail, psdLayerIndex=psdLayerIndex, macPeerLongTermGroups=macPeerLongTermGroups, sliFragRequired=sliFragRequired, psBaseGroup=psBaseGroup, ildTimeStamp=ildTimeStamp, ilbTimeStampIndex=ilbTimeStampIndex, msdpRxUtilization=msdpRxUtilization, ipliProtocolUnreachable=ipliProtocolUnreachable, plbIdIndex=plbIdIndex, ssbcFramesPercent=ssbcFramesPercent, slIcmpGroup=slIcmpGroup, ssbTimeStampIndex=ssbTimeStampIndex, ssbFrameSize=ssbFrameSize, ipsiTtlExceeded=ipsiTtlExceeded, pldIdIndex=pldIdIndex, slp2LineNoise=slp2LineNoise, ssDerivedTable=ssDerivedTable, mpsdMac2Index=mpsdMac2Index, mpsdUtilization=mpsdUtilization, alarmNotifyGroup=alarmNotifyGroup, ssBroadcastGroup=ssBroadcastGroup, vlTimeStamp=vlTimeStamp, mplbHardwareErrors=mplbHardwareErrors, iliSrcRouteFail=iliSrcRouteFail, ssDerivedEntry=ssDerivedEntry, PYSNMP_MODULE_ID=codimaExpressMIB, slbActiveNodes=slbActiveNodes, mliNetProhibited=mliNetProhibited, mliAppRouteProblem=mliAppRouteProblem, slbBytes=slbBytes, ssiHostRouteProblem=ssiHostRouteProblem, msiParamProblem=msiParamProblem, iliRedirect=iliRedirect, ipsbIp2Index=ipsbIp2Index, slp2LineSpeed=slp2LineSpeed, msiProtocolUnreachable=msiProtocolUnreachable, msiNetUnreachable=msiNetUnreachable, vsIdIndex=vsIdIndex, ipsDerivedGroup=ipsDerivedGroup, mpsduRxFrameSize=mpsduRxFrameSize, mspTimeStampIndex=mspTimeStampIndex, ipliPing=ipliPing, msiMaintenance=msiMaintenance, mspMail=mspMail, alarmTime=alarmTime, vsName=vsName, mplBaseGroup=mplBaseGroup, mpspLayer3Traffic=mpspLayer3Traffic, ctLockRealTime=ctLockRealTime, ipliIp2Index=ipliIp2Index, mpspApplications=mpspApplications, psbIdIndex=psbIdIndex, iliFragTimeout=iliFragTimeout, sleTimeStampIndex=sleTimeStampIndex, ilbTimeStamp=ilbTimeStamp, ipsiDestNetUnknown=ipsiDestNetUnknown, ilbBytes=ilbBytes, mplbTimeStampIndex=mplbTimeStampIndex, nsTypeIndex=nsTypeIndex, ssIcmpGroup=ssIcmpGroup, ilBaseEntry=ilBaseEntry, mspIcmp=mspIcmp, ipliMaintenance=ipliMaintenance, nlHardErrors=nlHardErrors, msbMacIndex=msbMacIndex, mplpSnmp=mplpSnmp, sliTtlExceeded=sliTtlExceeded, ssp1LineSpeed=ssp1LineSpeed, dbIPv4Groups=dbIPv4Groups, nsUtilization=nsUtilization, dbProtocolGroups=dbProtocolGroups, iplBaseTable=iplBaseTable, mldTimeStamp=mldTimeStamp, msiSrcQuench=msiSrcQuench, mliHostProhibited=mliHostProhibited, ipliTtlExceeded=ipliTtlExceeded, mspIpData=mspIpData, ssPortEntry=ssPortEntry, iliNetTosUnreachable=iliNetTosUnreachable, mpsbMac2Index=mpsbMac2Index, isBaseEntry=isBaseEntry, ipsiNetRouteProblem=ipsiNetRouteProblem, isiPortUnreachable=isiPortUnreachable, msiHostTosUnreachable=msiHostTosUnreachable, mpspMail=mpspMail, isiHostRouteProblem=isiHostRouteProblem, slBaseGroup=slBaseGroup, mpsduTimeStampIndex=mpsduTimeStampIndex, mplProtocolTable=mplProtocolTable, mplduTimeStampIndex=mplduTimeStampIndex, nsHardErrorsPercent=nsHardErrorsPercent, mpsDuplexGroup=mpsDuplexGroup, mplduMac2Index=mplduMac2Index, ipldIp2Index=ipldIp2Index, slbFrames=slbFrames, mpldMac1Index=mpldMac1Index, ssp2Jabbers=ssp2Jabbers, mliParamProblem=mliParamProblem, iliIpIndex=iliIpIndex, isDerivedTable=isDerivedTable, ssiRouteChange=ssiRouteChange, ssp2Crc=ssp2Crc, macShortTermGroups=macShortTermGroups, isbIpIndex=isbIpIndex, sldTimeStampIndex=sldTimeStampIndex, ssBroadcastTable=ssBroadcastTable, msbSoftwareErrors=msbSoftwareErrors)
