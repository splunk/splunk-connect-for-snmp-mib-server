#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-TdmaIwfMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-TdmaIwfMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
Unsigned32, RowStatus, DisplayString, Integer32, Counter32, Gauge32, StorageType, RowPointer = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Unsigned32", "RowStatus", "DisplayString", "Integer32", "Counter32", "Gauge32", "StorageType", "RowPointer")
Link, FixedPoint2, AsciiString, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "FixedPoint2", "AsciiString", "NonReplicated")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, Integer32, IpAddress, iso, Bits, TimeTicks, Counter32, Gauge32, Counter64, MibIdentifier, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "Integer32", "IpAddress", "iso", "Bits", "TimeTicks", "Counter32", "Gauge32", "Counter64", "MibIdentifier", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tdmaIwfMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140))
mscTdmaCs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135))
mscTdmaCsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 1), )
if mibBuilder.loadTexts: mscTdmaCsRowStatusTable.setStatus('mandatory')
mscTdmaCsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"))
if mibBuilder.loadTexts: mscTdmaCsRowStatusEntry.setStatus('mandatory')
mscTdmaCsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsRowStatus.setStatus('mandatory')
mscTdmaCsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsComponentName.setStatus('mandatory')
mscTdmaCsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsStorageType.setStatus('mandatory')
mscTdmaCsCsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: mscTdmaCsCsIndex.setStatus('mandatory')
mscTdmaCsServProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100), )
if mibBuilder.loadTexts: mscTdmaCsServProvTable.setStatus('mandatory')
mscTdmaCsServProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"))
if mibBuilder.loadTexts: mscTdmaCsServProvEntry.setStatus('mandatory')
mscTdmaCsTIwf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsTIwf1.setStatus('mandatory')
mscTdmaCsTIwf2 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsTIwf2.setStatus('mandatory')
mscTdmaCsT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsT303.setStatus('mandatory')
mscTdmaCsT305 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsT305.setStatus('mandatory')
mscTdmaCsT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsT308.setStatus('mandatory')
mscTdmaCsT313 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsT313.setStatus('mandatory')
mscTdmaCsT999 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsT999.setStatus('mandatory')
mscTdmaCsSupportedTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("tdmaOnly", 0), ("cdmaOnly", 1), ("tdmaAndCdma", 2))).clone('tdmaOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsSupportedTechnology.setStatus('mandatory')
mscTdmaCsSupportedService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 100, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("asyncDataOnly", 0), ("g3FaxOnly", 1), ("analogFaxOnly", 2), ("packetOnly", 3), ("asyncDataAndG3Fax", 4), ("asyncDataAndAnalogFax", 5), ("asyncDataAndPacket", 6), ("asyncDataG3FaxAndPacket", 7), ("asyncDataAFaxAndPacket", 8))).clone('asyncDataOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsSupportedService.setStatus('mandatory')
mscTdmaCsMiscProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 101), )
if mibBuilder.loadTexts: mscTdmaCsMiscProvTable.setStatus('mandatory')
mscTdmaCsMiscProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"))
if mibBuilder.loadTexts: mscTdmaCsMiscProvEntry.setStatus('mandatory')
mscTdmaCsCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 101, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsCommentText.setStatus('mandatory')
mscTdmaCsMscIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 101, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsMscIpAddress.setStatus('mandatory')
mscTdmaCsVirtualRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 101, 1, 3), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsVirtualRouterName.setStatus('mandatory')
mscTdmaCsVoiceLaw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 101, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aLaw", 0), ("muLaw", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsVoiceLaw.setStatus('mandatory')
mscTdmaCsCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 103), )
if mibBuilder.loadTexts: mscTdmaCsCidDataTable.setStatus('mandatory')
mscTdmaCsCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"))
if mibBuilder.loadTexts: mscTdmaCsCidDataEntry.setStatus('mandatory')
mscTdmaCsCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 103, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsCustomerIdentifier.setStatus('mandatory')
mscTdmaCsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 104), )
if mibBuilder.loadTexts: mscTdmaCsStateTable.setStatus('mandatory')
mscTdmaCsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"))
if mibBuilder.loadTexts: mscTdmaCsStateEntry.setStatus('mandatory')
mscTdmaCsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsAdminState.setStatus('mandatory')
mscTdmaCsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsOperationalState.setStatus('mandatory')
mscTdmaCsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 104, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsUsageState.setStatus('mandatory')
mscTdmaCsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121), )
if mibBuilder.loadTexts: mscTdmaCsStatsTable.setStatus('mandatory')
mscTdmaCsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"))
if mibBuilder.loadTexts: mscTdmaCsStatsEntry.setStatus('mandatory')
mscTdmaCsCurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsCurrentCalls.setStatus('mandatory')
mscTdmaCsCallsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsCallsRequested.setStatus('mandatory')
mscTdmaCsCallsSetUp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsCallsSetUp.setStatus('mandatory')
mscTdmaCsCallsReleasedNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsCallsReleasedNormal.setStatus('mandatory')
mscTdmaCsCallsReleasedAbnormal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsCallsReleasedAbnormal.setStatus('mandatory')
mscTdmaCsErroredLFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 121, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsErroredLFrames.setStatus('mandatory')
mscTdmaCsModem = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 2))
mscTdmaCsModemRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 2, 1), )
if mibBuilder.loadTexts: mscTdmaCsModemRowStatusTable.setStatus('mandatory')
mscTdmaCsModemRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsModemIndex"))
if mibBuilder.loadTexts: mscTdmaCsModemRowStatusEntry.setStatus('mandatory')
mscTdmaCsModemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsModemRowStatus.setStatus('mandatory')
mscTdmaCsModemComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsModemComponentName.setStatus('mandatory')
mscTdmaCsModemStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsModemStorageType.setStatus('mandatory')
mscTdmaCsModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaCsModemIndex.setStatus('mandatory')
mscTdmaCsFax = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 3))
mscTdmaCsFaxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 3, 1), )
if mibBuilder.loadTexts: mscTdmaCsFaxRowStatusTable.setStatus('mandatory')
mscTdmaCsFaxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsFaxIndex"))
if mibBuilder.loadTexts: mscTdmaCsFaxRowStatusEntry.setStatus('mandatory')
mscTdmaCsFaxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsFaxRowStatus.setStatus('mandatory')
mscTdmaCsFaxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsFaxComponentName.setStatus('mandatory')
mscTdmaCsFaxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsFaxStorageType.setStatus('mandatory')
mscTdmaCsFaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaCsFaxIndex.setStatus('mandatory')
mscTdmaCsDce = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 4))
mscTdmaCsDceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 4, 1), )
if mibBuilder.loadTexts: mscTdmaCsDceRowStatusTable.setStatus('mandatory')
mscTdmaCsDceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsDceIndex"))
if mibBuilder.loadTexts: mscTdmaCsDceRowStatusEntry.setStatus('mandatory')
mscTdmaCsDceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsDceRowStatus.setStatus('mandatory')
mscTdmaCsDceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsDceComponentName.setStatus('mandatory')
mscTdmaCsDceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsDceStorageType.setStatus('mandatory')
mscTdmaCsDceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaCsDceIndex.setStatus('mandatory')
mscTdmaCsDsc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5))
mscTdmaCsDscRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 1), )
if mibBuilder.loadTexts: mscTdmaCsDscRowStatusTable.setStatus('mandatory')
mscTdmaCsDscRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsDscIndex"))
if mibBuilder.loadTexts: mscTdmaCsDscRowStatusEntry.setStatus('mandatory')
mscTdmaCsDscRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsDscRowStatus.setStatus('mandatory')
mscTdmaCsDscComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsDscComponentName.setStatus('mandatory')
mscTdmaCsDscStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsDscStorageType.setStatus('mandatory')
mscTdmaCsDscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaCsDscIndex.setStatus('mandatory')
mscTdmaCsDscProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10), )
if mibBuilder.loadTexts: mscTdmaCsDscProvTable.setStatus('mandatory')
mscTdmaCsDscProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsDscIndex"))
if mibBuilder.loadTexts: mscTdmaCsDscProvEntry.setStatus('mandatory')
mscTdmaCsDscLl0BufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(80, 65535)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsDscLl0BufferSize.setStatus('obsolete')
mscTdmaCsDscLl1BufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(160, 65535)).clone(160)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsDscLl1BufferSize.setStatus('obsolete')
mscTdmaCsDscK0Ll0WindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsDscK0Ll0WindowSize.setStatus('mandatory')
mscTdmaCsDscK1Ll1WindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsDscK1Ll1WindowSize.setStatus('mandatory')
mscTdmaCsDscP0CompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noCompression", 0), ("compInitrResp", 1), ("compRespInitr", 2), ("compBoth", 3))).clone('noCompression')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsDscP0CompressionDirection.setStatus('obsolete')
mscTdmaCsDscP1CompressionMaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(512, 4096)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsDscP1CompressionMaximumCodewords.setStatus('obsolete')
mscTdmaCsDscP2CompressionMaximumCharacters = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 150)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsDscP2CompressionMaximumCharacters.setStatus('obsolete')
mscTdmaCsRlp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6))
mscTdmaCsRlp1RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 1), )
if mibBuilder.loadTexts: mscTdmaCsRlp1RowStatusTable.setStatus('mandatory')
mscTdmaCsRlp1RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsRlp1Index"))
if mibBuilder.loadTexts: mscTdmaCsRlp1RowStatusEntry.setStatus('mandatory')
mscTdmaCsRlp1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsRlp1RowStatus.setStatus('mandatory')
mscTdmaCsRlp1ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsRlp1ComponentName.setStatus('mandatory')
mscTdmaCsRlp1StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsRlp1StorageType.setStatus('mandatory')
mscTdmaCsRlp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("halfRate", 0), ("fullRate", 1), ("doubleRate", 2), ("tripleRate", 3))))
if mibBuilder.loadTexts: mscTdmaCsRlp1Index.setStatus('mandatory')
mscTdmaCsRlp1ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 10), )
if mibBuilder.loadTexts: mscTdmaCsRlp1ProvTable.setStatus('mandatory')
mscTdmaCsRlp1ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsRlp1Index"))
if mibBuilder.loadTexts: mscTdmaCsRlp1ProvEntry.setStatus('mandatory')
mscTdmaCsRlp1T1ResponseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 20)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsRlp1T1ResponseTimer.setStatus('mandatory')
mscTdmaCsRlp1T2LinkActivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsRlp1T2LinkActivityTimer.setStatus('mandatory')
mscTdmaCsRlp1T3PeerAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 20)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsRlp1T3PeerAckTimer.setStatus('mandatory')
mscTdmaCsV42 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7))
mscTdmaCsV42RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 1), )
if mibBuilder.loadTexts: mscTdmaCsV42RowStatusTable.setStatus('mandatory')
mscTdmaCsV42RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsV42Index"))
if mibBuilder.loadTexts: mscTdmaCsV42RowStatusEntry.setStatus('mandatory')
mscTdmaCsV42RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsV42RowStatus.setStatus('mandatory')
mscTdmaCsV42ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsV42ComponentName.setStatus('mandatory')
mscTdmaCsV42StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsV42StorageType.setStatus('mandatory')
mscTdmaCsV42Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaCsV42Index.setStatus('mandatory')
mscTdmaCsV42ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10), )
if mibBuilder.loadTexts: mscTdmaCsV42ProvTable.setStatus('mandatory')
mscTdmaCsV42ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsV42Index"))
if mibBuilder.loadTexts: mscTdmaCsV42ProvEntry.setStatus('mandatory')
mscTdmaCsV42T400DetectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 1), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(75, 254)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42T400DetectTimer.setStatus('mandatory')
mscTdmaCsV42T401AckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 2), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(50, 900)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42T401AckTimer.setStatus('mandatory')
mscTdmaCsV42T402AckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 3), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(25, 450)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42T402AckDelayTimer.setStatus('mandatory')
mscTdmaCsV42T403IdleProbeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 90)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42T403IdleProbeTimer.setStatus('mandatory')
mscTdmaCsV42TxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42TxN401FrameSize.setStatus('mandatory')
mscTdmaCsV42RxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42RxN401FrameSize.setStatus('mandatory')
mscTdmaCsV42TxKWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42TxKWindowSize.setStatus('mandatory')
mscTdmaCsV42RxKWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42RxKWindowSize.setStatus('mandatory')
mscTdmaCsV42N400RetransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42N400RetransLimit.setStatus('mandatory')
mscTdmaCsV42FcsLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 7, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fcs16", 0), ("fcs32Or16", 1), ("fcs32", 2))).clone('fcs32Or16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42FcsLength.setStatus('mandatory')
mscTdmaCsV42Bis = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8))
mscTdmaCsV42BisRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 1), )
if mibBuilder.loadTexts: mscTdmaCsV42BisRowStatusTable.setStatus('mandatory')
mscTdmaCsV42BisRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsV42BisIndex"))
if mibBuilder.loadTexts: mscTdmaCsV42BisRowStatusEntry.setStatus('mandatory')
mscTdmaCsV42BisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsV42BisRowStatus.setStatus('mandatory')
mscTdmaCsV42BisComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsV42BisComponentName.setStatus('mandatory')
mscTdmaCsV42BisStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsV42BisStorageType.setStatus('mandatory')
mscTdmaCsV42BisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaCsV42BisIndex.setStatus('mandatory')
mscTdmaCsV42BisProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 10), )
if mibBuilder.loadTexts: mscTdmaCsV42BisProvTable.setStatus('mandatory')
mscTdmaCsV42BisProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsV42BisIndex"))
if mibBuilder.loadTexts: mscTdmaCsV42BisProvEntry.setStatus('mandatory')
mscTdmaCsV42BisP0CompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noCompression", 0), ("compInitrResp", 1), ("compRespInitr", 2), ("compBoth", 3))).clone('compBoth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42BisP0CompressionDirection.setStatus('mandatory')
mscTdmaCsV42BisP1MaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(512, 4096)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42BisP1MaximumCodewords.setStatus('mandatory')
mscTdmaCsV42BisP2MaximumStringSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 250)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42BisP2MaximumStringSize.setStatus('mandatory')
mscTdmaCsV42BisActionOnError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 8, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("resetLink", 0), ("takeDownCall", 1))).clone('resetLink')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsV42BisActionOnError.setStatus('mandatory')
mscTdmaCsLp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9))
mscTdmaCsLpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 1), )
if mibBuilder.loadTexts: mscTdmaCsLpRowStatusTable.setStatus('mandatory')
mscTdmaCsLpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsLpIndex"))
if mibBuilder.loadTexts: mscTdmaCsLpRowStatusEntry.setStatus('mandatory')
mscTdmaCsLpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaCsLpRowStatus.setStatus('mandatory')
mscTdmaCsLpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsLpComponentName.setStatus('mandatory')
mscTdmaCsLpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsLpStorageType.setStatus('mandatory')
mscTdmaCsLpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscTdmaCsLpIndex.setStatus('mandatory')
mscTdmaCsLpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 10), )
if mibBuilder.loadTexts: mscTdmaCsLpOperTable.setStatus('mandatory')
mscTdmaCsLpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaCsLpIndex"))
if mibBuilder.loadTexts: mscTdmaCsLpOperEntry.setStatus('mandatory')
mscTdmaCsLpConfiguredBearerChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsLpConfiguredBearerChannels.setStatus('mandatory')
mscTdmaCsLpActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsLpActiveCalls.setStatus('mandatory')
mscTdmaCsLpModemsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 135, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaCsLpModemsSupported.setStatus('mandatory')
mscTdmaBc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136))
mscTdmaBcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 1), )
if mibBuilder.loadTexts: mscTdmaBcRowStatusTable.setStatus('mandatory')
mscTdmaBcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"))
if mibBuilder.loadTexts: mscTdmaBcRowStatusEntry.setStatus('mandatory')
mscTdmaBcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaBcRowStatus.setStatus('mandatory')
mscTdmaBcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcComponentName.setStatus('mandatory')
mscTdmaBcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcStorageType.setStatus('mandatory')
mscTdmaBcCsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: mscTdmaBcCsIndex.setStatus('mandatory')
mscTdmaBcBcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: mscTdmaBcBcIndex.setStatus('mandatory')
mscTdmaBcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 101), )
if mibBuilder.loadTexts: mscTdmaBcOperTable.setStatus('mandatory')
mscTdmaBcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"))
if mibBuilder.loadTexts: mscTdmaBcOperEntry.setStatus('mandatory')
mscTdmaBcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("idle", 0), ("setup", 1), ("active", 2), ("release", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcState.setStatus('mandatory')
mscTdmaBcCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("analogSpeech", 0), ("digitalSpeech", 1), ("analogPrefSpeech", 2), ("digitalPrefSpeech", 3), ("asyncData", 4), ("g3Fax", 5), ("rejected", 6), ("stuIII", 7), ("notUsedYet", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcCallType.setStatus('mandatory')
mscTdmaBcLastResponseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 101, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 16, 17, 18, 19, 28, 31, 41, 44, 47, 49, 63, 79, 81, 82, 95, 96, 97, 98, 102, 111))).clone(namedValues=NamedValues(("noCause", 0), ("unassignedNumber", 1), ("noRouteToDest", 3), ("normalClearing", 16), ("userBusy", 17), ("noResponse", 18), ("userNoAnswer", 19), ("invalidNumberFormat", 28), ("unspecNormal", 31), ("temporaryFailure", 41), ("channelUnavailable", 44), ("resourceUnavailable", 47), ("qosUnavailable", 49), ("serviceUnavailable", 63), ("unimplementedOption", 79), ("invalidCallRefValue", 81), ("invalidChannel", 82), ("unspecInvalidMessage", 95), ("missingMandatoryIe", 96), ("invalidMessageType", 97), ("incompatibleMessage", 98), ("timerRecovery", 102), ("unspecProtocolError", 111)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcLastResponseCode.setStatus('mandatory')
mscTdmaBcMateBearerChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 101, 1, 4), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcMateBearerChannel.setStatus('mandatory')
mscTdmaBcCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 103), )
if mibBuilder.loadTexts: mscTdmaBcCidDataTable.setStatus('mandatory')
mscTdmaBcCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"))
if mibBuilder.loadTexts: mscTdmaBcCidDataEntry.setStatus('mandatory')
mscTdmaBcCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 103, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaBcCustomerIdentifier.setStatus('mandatory')
mscTdmaBcStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 104), )
if mibBuilder.loadTexts: mscTdmaBcStateTable.setStatus('mandatory')
mscTdmaBcStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"))
if mibBuilder.loadTexts: mscTdmaBcStateEntry.setStatus('mandatory')
mscTdmaBcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcAdminState.setStatus('mandatory')
mscTdmaBcOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcOperationalState.setStatus('mandatory')
mscTdmaBcUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 104, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUsageState.setStatus('mandatory')
mscTdmaBcFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2))
mscTdmaBcFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 1), )
if mibBuilder.loadTexts: mscTdmaBcFramerRowStatusTable.setStatus('mandatory')
mscTdmaBcFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFramerIndex"))
if mibBuilder.loadTexts: mscTdmaBcFramerRowStatusEntry.setStatus('mandatory')
mscTdmaBcFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerRowStatus.setStatus('mandatory')
mscTdmaBcFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerComponentName.setStatus('mandatory')
mscTdmaBcFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerStorageType.setStatus('mandatory')
mscTdmaBcFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcFramerIndex.setStatus('mandatory')
mscTdmaBcFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 10), )
if mibBuilder.loadTexts: mscTdmaBcFramerProvTable.setStatus('mandatory')
mscTdmaBcFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFramerIndex"))
if mibBuilder.loadTexts: mscTdmaBcFramerProvEntry.setStatus('mandatory')
mscTdmaBcFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaBcFramerInterfaceName.setStatus('mandatory')
mscTdmaBcFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 11), )
if mibBuilder.loadTexts: mscTdmaBcFramerStatsTable.setStatus('mandatory')
mscTdmaBcFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFramerIndex"))
if mibBuilder.loadTexts: mscTdmaBcFramerStatsEntry.setStatus('mandatory')
mscTdmaBcFramerTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerTxFrames.setStatus('mandatory')
mscTdmaBcFramerRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerRxFrames.setStatus('mandatory')
mscTdmaBcFramerRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerRxBytes.setStatus('mandatory')
mscTdmaBcFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 12), )
if mibBuilder.loadTexts: mscTdmaBcFramerLinkTable.setStatus('mandatory')
mscTdmaBcFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFramerIndex"))
if mibBuilder.loadTexts: mscTdmaBcFramerLinkEntry.setStatus('mandatory')
mscTdmaBcFramerFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 8))).clone(namedValues=NamedValues(("btdsFraming", 2), ("mtxFraming", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTdmaBcFramerFramingType.setStatus('mandatory')
mscTdmaBcFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 13), )
if mibBuilder.loadTexts: mscTdmaBcFramerStateTable.setStatus('mandatory')
mscTdmaBcFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFramerIndex"))
if mibBuilder.loadTexts: mscTdmaBcFramerStateEntry.setStatus('mandatory')
mscTdmaBcFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerAdminState.setStatus('mandatory')
mscTdmaBcFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerOperationalState.setStatus('mandatory')
mscTdmaBcFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFramerUsageState.setStatus('mandatory')
mscTdmaBcModem = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3))
mscTdmaBcModemRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 1), )
if mibBuilder.loadTexts: mscTdmaBcModemRowStatusTable.setStatus('mandatory')
mscTdmaBcModemRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcModemIndex"))
if mibBuilder.loadTexts: mscTdmaBcModemRowStatusEntry.setStatus('mandatory')
mscTdmaBcModemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemRowStatus.setStatus('mandatory')
mscTdmaBcModemComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemComponentName.setStatus('mandatory')
mscTdmaBcModemStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemStorageType.setStatus('mandatory')
mscTdmaBcModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcModemIndex.setStatus('mandatory')
mscTdmaBcModemOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10), )
if mibBuilder.loadTexts: mscTdmaBcModemOperTable.setStatus('mandatory')
mscTdmaBcModemOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcModemIndex"))
if mibBuilder.loadTexts: mscTdmaBcModemOperEntry.setStatus('mandatory')
mscTdmaBcModemVoiceLaw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aLaw", 0), ("muLaw", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemVoiceLaw.setStatus('mandatory')
mscTdmaBcModemRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("n50", 0), ("n300", 1), ("n600", 2), ("n1200", 3), ("n2400", 4), ("n4800", 5), ("n7200", 6), ("n9600", 7), ("n12000", 8), ("n14400", 9), ("n16800", 10), ("n19200", 11), ("n21600", 12), ("n24000", 13), ("n26400", 14), ("n28800", 15), ("n31200", 16), ("n32000", 17), ("n33600", 18), ("n38400", 19), ("n43200", 20), ("n48000", 21), ("n56000", 22), ("n57600", 23), ("n64000", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemRate.setStatus('mandatory')
mscTdmaBcModemModemAlgorithmInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemModemAlgorithmInUse.setStatus('mandatory')
mscTdmaBcModemProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("idle", 0), ("training", 1), ("connected", 2), ("releasing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemProtocolState.setStatus('mandatory')
mscTdmaBcModemMobileSideFlowControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemMobileSideFlowControlState.setStatus('mandatory')
mscTdmaBcModemPstnSideFlowControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemPstnSideFlowControlState.setStatus('mandatory')
mscTdmaBcModemAsyncMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemAsyncMode.setStatus('mandatory')
mscTdmaBcModemOutbandFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemOutbandFlowControl.setStatus('mandatory')
mscTdmaBcModemOutbandBreak = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemOutbandBreak.setStatus('mandatory')
mscTdmaBcModemAutobaud = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemAutobaud.setStatus('mandatory')
mscTdmaBcModemStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 11), )
if mibBuilder.loadTexts: mscTdmaBcModemStatsTable.setStatus('mandatory')
mscTdmaBcModemStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcModemIndex"))
if mibBuilder.loadTexts: mscTdmaBcModemStatsEntry.setStatus('mandatory')
mscTdmaBcModemTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemTxBytes.setStatus('mandatory')
mscTdmaBcModemRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemRxBytes.setStatus('mandatory')
mscTdmaBcModemFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 3, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcModemFramingErrors.setStatus('mandatory')
mscTdmaBcFax = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4))
mscTdmaBcFaxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 1), )
if mibBuilder.loadTexts: mscTdmaBcFaxRowStatusTable.setStatus('mandatory')
mscTdmaBcFaxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFaxIndex"))
if mibBuilder.loadTexts: mscTdmaBcFaxRowStatusEntry.setStatus('mandatory')
mscTdmaBcFaxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxRowStatus.setStatus('mandatory')
mscTdmaBcFaxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxComponentName.setStatus('mandatory')
mscTdmaBcFaxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxStorageType.setStatus('mandatory')
mscTdmaBcFaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcFaxIndex.setStatus('mandatory')
mscTdmaBcFaxOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 10), )
if mibBuilder.loadTexts: mscTdmaBcFaxOperTable.setStatus('mandatory')
mscTdmaBcFaxOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFaxIndex"))
if mibBuilder.loadTexts: mscTdmaBcFaxOperEntry.setStatus('mandatory')
mscTdmaBcFaxActiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("ecm", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxActiveMode.setStatus('mandatory')
mscTdmaBcFaxProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("setup", 0), ("idle", 1), ("bcsRx", 2), ("bcsTx", 3), ("msgRx", 4), ("msgTx", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxProtocolState.setStatus('mandatory')
mscTdmaBcFaxMessageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxMessageRate.setStatus('mandatory')
mscTdmaBcFaxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 11), )
if mibBuilder.loadTexts: mscTdmaBcFaxStatsTable.setStatus('mandatory')
mscTdmaBcFaxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcFaxIndex"))
if mibBuilder.loadTexts: mscTdmaBcFaxStatsEntry.setStatus('mandatory')
mscTdmaBcFaxTxPagesToMobile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxTxPagesToMobile.setStatus('mandatory')
mscTdmaBcFaxRxPagesFromMobile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 4, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcFaxRxPagesFromMobile.setStatus('mandatory')
mscTdmaBcDce = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 5))
mscTdmaBcDceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 5, 1), )
if mibBuilder.loadTexts: mscTdmaBcDceRowStatusTable.setStatus('mandatory')
mscTdmaBcDceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcDceIndex"))
if mibBuilder.loadTexts: mscTdmaBcDceRowStatusEntry.setStatus('mandatory')
mscTdmaBcDceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDceRowStatus.setStatus('mandatory')
mscTdmaBcDceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDceComponentName.setStatus('mandatory')
mscTdmaBcDceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDceStorageType.setStatus('mandatory')
mscTdmaBcDceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcDceIndex.setStatus('mandatory')
mscTdmaBcDsc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6))
mscTdmaBcDscRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 1), )
if mibBuilder.loadTexts: mscTdmaBcDscRowStatusTable.setStatus('mandatory')
mscTdmaBcDscRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcDscIndex"))
if mibBuilder.loadTexts: mscTdmaBcDscRowStatusEntry.setStatus('mandatory')
mscTdmaBcDscRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscRowStatus.setStatus('mandatory')
mscTdmaBcDscComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscComponentName.setStatus('mandatory')
mscTdmaBcDscStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscStorageType.setStatus('mandatory')
mscTdmaBcDscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcDscIndex.setStatus('mandatory')
mscTdmaBcDscOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 10), )
if mibBuilder.loadTexts: mscTdmaBcDscOperTable.setStatus('mandatory')
mscTdmaBcDscOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcDscIndex"))
if mibBuilder.loadTexts: mscTdmaBcDscOperEntry.setStatus('mandatory')
mscTdmaBcDscP0CompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noCompression", 0), ("compInitrResp", 1), ("compRespInitr", 2), ("compBoth", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscP0CompressionDirection.setStatus('mandatory')
mscTdmaBcDscP1CompressionMaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(512, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscP1CompressionMaximumCodewords.setStatus('mandatory')
mscTdmaBcDscP2CompressionMaximumCharacters = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscP2CompressionMaximumCharacters.setStatus('mandatory')
mscTdmaBcDscStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 11), )
if mibBuilder.loadTexts: mscTdmaBcDscStatsTable.setStatus('mandatory')
mscTdmaBcDscStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcDscIndex"))
if mibBuilder.loadTexts: mscTdmaBcDscStatsEntry.setStatus('mandatory')
mscTdmaBcDscTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscTxBytes.setStatus('mandatory')
mscTdmaBcDscRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcDscRxBytes.setStatus('mandatory')
mscTdmaBcRlp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7))
mscTdmaBcRlp1RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 1), )
if mibBuilder.loadTexts: mscTdmaBcRlp1RowStatusTable.setStatus('mandatory')
mscTdmaBcRlp1RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcRlp1Index"))
if mibBuilder.loadTexts: mscTdmaBcRlp1RowStatusEntry.setStatus('mandatory')
mscTdmaBcRlp1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1RowStatus.setStatus('mandatory')
mscTdmaBcRlp1ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1ComponentName.setStatus('mandatory')
mscTdmaBcRlp1StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1StorageType.setStatus('mandatory')
mscTdmaBcRlp1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcRlp1Index.setStatus('mandatory')
mscTdmaBcRlp1OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 10), )
if mibBuilder.loadTexts: mscTdmaBcRlp1OperTable.setStatus('mandatory')
mscTdmaBcRlp1OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcRlp1Index"))
if mibBuilder.loadTexts: mscTdmaBcRlp1OperEntry.setStatus('mandatory')
mscTdmaBcRlp1Layer3L0ReqWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1Layer3L0ReqWinSize.setStatus('mandatory')
mscTdmaBcRlp1Layer3L1ReqWinSize1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1Layer3L1ReqWinSize1.setStatus('mandatory')
mscTdmaBcRlp1T1ResponseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1T1ResponseTimer.setStatus('mandatory')
mscTdmaBcRlp1T2LinkActivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1T2LinkActivityTimer.setStatus('mandatory')
mscTdmaBcRlp1T3PeerAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1T3PeerAckTimer.setStatus('mandatory')
mscTdmaBcRlp1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 11), )
if mibBuilder.loadTexts: mscTdmaBcRlp1StatsTable.setStatus('mandatory')
mscTdmaBcRlp1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcRlp1Index"))
if mibBuilder.loadTexts: mscTdmaBcRlp1StatsEntry.setStatus('mandatory')
mscTdmaBcRlp1TxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1TxFrames.setStatus('mandatory')
mscTdmaBcRlp1RxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1RxFrames.setStatus('mandatory')
mscTdmaBcRlp1BadRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 7, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcRlp1BadRxFrames.setStatus('mandatory')
mscTdmaBcV42 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8))
mscTdmaBcV42RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 1), )
if mibBuilder.loadTexts: mscTdmaBcV42RowStatusTable.setStatus('mandatory')
mscTdmaBcV42RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcV42Index"))
if mibBuilder.loadTexts: mscTdmaBcV42RowStatusEntry.setStatus('mandatory')
mscTdmaBcV42RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42RowStatus.setStatus('mandatory')
mscTdmaBcV42ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42ComponentName.setStatus('mandatory')
mscTdmaBcV42StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42StorageType.setStatus('mandatory')
mscTdmaBcV42Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcV42Index.setStatus('mandatory')
mscTdmaBcV42OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10), )
if mibBuilder.loadTexts: mscTdmaBcV42OperTable.setStatus('mandatory')
mscTdmaBcV42OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcV42Index"))
if mibBuilder.loadTexts: mscTdmaBcV42OperEntry.setStatus('mandatory')
mscTdmaBcV42ProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notActive", 0), ("disconnected", 1), ("linkSetup", 2), ("frameReject", 3), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42ProtocolState.setStatus('mandatory')
mscTdmaBcV42TxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65355))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42TxN401FrameSize.setStatus('mandatory')
mscTdmaBcV42RxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42RxN401FrameSize.setStatus('mandatory')
mscTdmaBcV42TxKWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42TxKWindowSize.setStatus('mandatory')
mscTdmaBcV42RxKWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42RxKWindowSize.setStatus('mandatory')
mscTdmaBcV42V42ActiveInCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notActiveInCall", 0), ("activeInCall", 1))).clone('notActiveInCall')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42V42ActiveInCall.setStatus('mandatory')
mscTdmaBcV42V42BisActiveInCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notActiveInCall", 0), ("activeInCall", 1))).clone('notActiveInCall')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42V42BisActiveInCall.setStatus('mandatory')
mscTdmaBcV42StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11), )
if mibBuilder.loadTexts: mscTdmaBcV42StatsTable.setStatus('mandatory')
mscTdmaBcV42StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcV42Index"))
if mibBuilder.loadTexts: mscTdmaBcV42StatsEntry.setStatus('mandatory')
mscTdmaBcV42RxIBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42RxIBytes.setStatus('mandatory')
mscTdmaBcV42TxIBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42TxIBytes.setStatus('mandatory')
mscTdmaBcV42RxIFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42RxIFrames.setStatus('mandatory')
mscTdmaBcV42TxIFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42TxIFrames.setStatus('mandatory')
mscTdmaBcV42RetransmittedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42RetransmittedFrames.setStatus('mandatory')
mscTdmaBcV42T1AckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42T1AckTimeouts.setStatus('mandatory')
mscTdmaBcV42RemoteBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42RemoteBusyIndications.setStatus('mandatory')
mscTdmaBcV42LocalBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42LocalBusyIndications.setStatus('mandatory')
mscTdmaBcV42BadFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BadFramesRx.setStatus('mandatory')
mscTdmaBcV42CrcErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 8, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42CrcErrorsRx.setStatus('mandatory')
mscTdmaBcV42Bis = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9))
mscTdmaBcV42BisRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 1), )
if mibBuilder.loadTexts: mscTdmaBcV42BisRowStatusTable.setStatus('mandatory')
mscTdmaBcV42BisRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcV42BisIndex"))
if mibBuilder.loadTexts: mscTdmaBcV42BisRowStatusEntry.setStatus('mandatory')
mscTdmaBcV42BisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisRowStatus.setStatus('mandatory')
mscTdmaBcV42BisComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisComponentName.setStatus('mandatory')
mscTdmaBcV42BisStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisStorageType.setStatus('mandatory')
mscTdmaBcV42BisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcV42BisIndex.setStatus('mandatory')
mscTdmaBcV42BisOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10), )
if mibBuilder.loadTexts: mscTdmaBcV42BisOperTable.setStatus('mandatory')
mscTdmaBcV42BisOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcV42BisIndex"))
if mibBuilder.loadTexts: mscTdmaBcV42BisOperEntry.setStatus('mandatory')
mscTdmaBcV42BisProtocolModeEncoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("compressed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisProtocolModeEncoder.setStatus('mandatory')
mscTdmaBcV42BisProtocolModeDecoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("compressed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisProtocolModeDecoder.setStatus('mandatory')
mscTdmaBcV42BisP0CompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noCompression", 0), ("compInitrResp", 1), ("compRespInitr", 2), ("compBoth", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisP0CompressionDirection.setStatus('mandatory')
mscTdmaBcV42BisP1MaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisP1MaximumCodewords.setStatus('mandatory')
mscTdmaBcV42BisP2MaximumStringSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisP2MaximumStringSize.setStatus('mandatory')
mscTdmaBcV42BisLastDecodeError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("badStepup", 1), ("codewordEqC1", 2), ("emptyCodeword", 3), ("rsvdCommand", 4), ("generalError", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisLastDecodeError.setStatus('mandatory')
mscTdmaBcV42BisCompRatioEncoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 7), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisCompRatioEncoder.setStatus('mandatory')
mscTdmaBcV42BisCompRatioDecoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 10, 1, 8), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisCompRatioDecoder.setStatus('mandatory')
mscTdmaBcV42BisStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11), )
if mibBuilder.loadTexts: mscTdmaBcV42BisStatsTable.setStatus('mandatory')
mscTdmaBcV42BisStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcV42BisIndex"))
if mibBuilder.loadTexts: mscTdmaBcV42BisStatsEntry.setStatus('mandatory')
mscTdmaBcV42BisModeChangesEncode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisModeChangesEncode.setStatus('mandatory')
mscTdmaBcV42BisModeChangesDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisModeChangesDecode.setStatus('mandatory')
mscTdmaBcV42BisResetsEncode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisResetsEncode.setStatus('mandatory')
mscTdmaBcV42BisResetsDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisResetsDecode.setStatus('mandatory')
mscTdmaBcV42BisReinitializations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisReinitializations.setStatus('mandatory')
mscTdmaBcV42BisErrorsInDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 9, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcV42BisErrorsInDecode.setStatus('mandatory')
mscTdmaBcUr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10))
mscTdmaBcUrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 1), )
if mibBuilder.loadTexts: mscTdmaBcUrRowStatusTable.setStatus('mandatory')
mscTdmaBcUrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcUrIndex"))
if mibBuilder.loadTexts: mscTdmaBcUrRowStatusEntry.setStatus('mandatory')
mscTdmaBcUrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrRowStatus.setStatus('mandatory')
mscTdmaBcUrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrComponentName.setStatus('mandatory')
mscTdmaBcUrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrStorageType.setStatus('mandatory')
mscTdmaBcUrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTdmaBcUrIndex.setStatus('mandatory')
mscTdmaBcUrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 10), )
if mibBuilder.loadTexts: mscTdmaBcUrOperTable.setStatus('mandatory')
mscTdmaBcUrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcUrIndex"))
if mibBuilder.loadTexts: mscTdmaBcUrOperEntry.setStatus('mandatory')
mscTdmaBcUrRxBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrRxBufferSize.setStatus('mandatory')
mscTdmaBcUrTxFlowControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrTxFlowControlState.setStatus('mandatory')
mscTdmaBcUrRxFlowControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrRxFlowControlState.setStatus('mandatory')
mscTdmaBcUrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 11), )
if mibBuilder.loadTexts: mscTdmaBcUrStatsTable.setStatus('mandatory')
mscTdmaBcUrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcCsIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcBcIndex"), (0, "Nortel-MsCarrier-MscPassport-TdmaIwfMIB", "mscTdmaBcUrIndex"))
if mibBuilder.loadTexts: mscTdmaBcUrStatsEntry.setStatus('mandatory')
mscTdmaBcUrTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrTxFrames.setStatus('mandatory')
mscTdmaBcUrRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrRxFrames.setStatus('mandatory')
mscTdmaBcUrUnacknowledgedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrUnacknowledgedFrames.setStatus('mandatory')
mscTdmaBcUrCumUnacknowledgedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 136, 10, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTdmaBcUrCumUnacknowledgedFrames.setStatus('mandatory')
tdmaIwfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 1))
tdmaIwfGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 1, 1))
tdmaIwfGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 1, 1, 3))
tdmaIwfGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 1, 1, 3, 2))
tdmaIwfCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 3))
tdmaIwfCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 3, 1))
tdmaIwfCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 3, 1, 3))
tdmaIwfCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 140, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-TdmaIwfMIB", mscTdmaBcV42RxIBytes=mscTdmaBcV42RxIBytes, mscTdmaCsModem=mscTdmaCsModem, mscTdmaCsV42RxN401FrameSize=mscTdmaCsV42RxN401FrameSize, mscTdmaBcUrRowStatusEntry=mscTdmaBcUrRowStatusEntry, mscTdmaCsRlp1Index=mscTdmaCsRlp1Index, mscTdmaCsDscProvEntry=mscTdmaCsDscProvEntry, mscTdmaBcV42RetransmittedFrames=mscTdmaBcV42RetransmittedFrames, tdmaIwfGroupCA=tdmaIwfGroupCA, mscTdmaCsDscRowStatusEntry=mscTdmaCsDscRowStatusEntry, mscTdmaBcStorageType=mscTdmaBcStorageType, mscTdmaCsCustomerIdentifier=mscTdmaCsCustomerIdentifier, mscTdmaCsFaxRowStatusEntry=mscTdmaCsFaxRowStatusEntry, mscTdmaCsServProvTable=mscTdmaCsServProvTable, mscTdmaCsV42=mscTdmaCsV42, mscTdmaBcUrStatsEntry=mscTdmaBcUrStatsEntry, mscTdmaBcRlp1TxFrames=mscTdmaBcRlp1TxFrames, mscTdmaCsComponentName=mscTdmaCsComponentName, mscTdmaBcModemAutobaud=mscTdmaBcModemAutobaud, mscTdmaCsT313=mscTdmaCsT313, mscTdmaCsFaxRowStatus=mscTdmaCsFaxRowStatus, mscTdmaBcV42Index=mscTdmaBcV42Index, mscTdmaBcRlp1OperTable=mscTdmaBcRlp1OperTable, mscTdmaCsCurrentCalls=mscTdmaCsCurrentCalls, mscTdmaBcModemComponentName=mscTdmaBcModemComponentName, mscTdmaBcUr=mscTdmaBcUr, mscTdmaBcUrComponentName=mscTdmaBcUrComponentName, mscTdmaCsCallsSetUp=mscTdmaCsCallsSetUp, mscTdmaCsFax=mscTdmaCsFax, mscTdmaBcUrRowStatusTable=mscTdmaBcUrRowStatusTable, mscTdmaBcFramer=mscTdmaBcFramer, mscTdmaBcDscIndex=mscTdmaBcDscIndex, mscTdmaBcFramerRxBytes=mscTdmaBcFramerRxBytes, mscTdmaCsV42BisP2MaximumStringSize=mscTdmaCsV42BisP2MaximumStringSize, mscTdmaBcFramerStorageType=mscTdmaBcFramerStorageType, mscTdmaBcUrCumUnacknowledgedFrames=mscTdmaBcUrCumUnacknowledgedFrames, mscTdmaCsRlp1=mscTdmaCsRlp1, mscTdmaCsV42BisRowStatusTable=mscTdmaCsV42BisRowStatusTable, mscTdmaBcComponentName=mscTdmaBcComponentName, mscTdmaCsStateEntry=mscTdmaCsStateEntry, mscTdmaBcUsageState=mscTdmaBcUsageState, mscTdmaCsRlp1RowStatusEntry=mscTdmaCsRlp1RowStatusEntry, tdmaIwfGroupCA02=tdmaIwfGroupCA02, mscTdmaBcUrRowStatus=mscTdmaBcUrRowStatus, tdmaIwfCapabilitiesCA=tdmaIwfCapabilitiesCA, mscTdmaBcV42TxIBytes=mscTdmaBcV42TxIBytes, mscTdmaCsDceStorageType=mscTdmaCsDceStorageType, mscTdmaBcV42TxKWindowSize=mscTdmaBcV42TxKWindowSize, mscTdmaCsLpRowStatusEntry=mscTdmaCsLpRowStatusEntry, mscTdmaCsLpActiveCalls=mscTdmaCsLpActiveCalls, mscTdmaCsT308=mscTdmaCsT308, mscTdmaBcRlp1StorageType=mscTdmaBcRlp1StorageType, mscTdmaCsLp=mscTdmaCsLp, mscTdmaBcDscRxBytes=mscTdmaBcDscRxBytes, mscTdmaBcUrStorageType=mscTdmaBcUrStorageType, mscTdmaCsRlp1RowStatus=mscTdmaCsRlp1RowStatus, mscTdmaCsDceRowStatusTable=mscTdmaCsDceRowStatusTable, mscTdmaBcV42BisP0CompressionDirection=mscTdmaBcV42BisP0CompressionDirection, mscTdmaBcStateTable=mscTdmaBcStateTable, mscTdmaCsT305=mscTdmaCsT305, mscTdmaBcFaxStorageType=mscTdmaBcFaxStorageType, mscTdmaCsTIwf1=mscTdmaCsTIwf1, mscTdmaBcV42BisCompRatioDecoder=mscTdmaBcV42BisCompRatioDecoder, mscTdmaCsRlp1RowStatusTable=mscTdmaCsRlp1RowStatusTable, mscTdmaCsDscLl1BufferSize=mscTdmaCsDscLl1BufferSize, mscTdmaBcDscRowStatus=mscTdmaBcDscRowStatus, mscTdmaBcRlp1StatsTable=mscTdmaBcRlp1StatsTable, mscTdmaBcV42V42BisActiveInCall=mscTdmaBcV42V42BisActiveInCall, mscTdmaCsModemStorageType=mscTdmaCsModemStorageType, mscTdmaCsV42Bis=mscTdmaCsV42Bis, mscTdmaCsV42BisRowStatus=mscTdmaCsV42BisRowStatus, mscTdmaCsCidDataTable=mscTdmaCsCidDataTable, mscTdmaBcV42StorageType=mscTdmaBcV42StorageType, mscTdmaBcRlp1ComponentName=mscTdmaBcRlp1ComponentName, mscTdmaCsV42T402AckDelayTimer=mscTdmaCsV42T402AckDelayTimer, mscTdmaCsV42TxN401FrameSize=mscTdmaCsV42TxN401FrameSize, mscTdmaBcModemRowStatusTable=mscTdmaBcModemRowStatusTable, mscTdmaBcFramerOperationalState=mscTdmaBcFramerOperationalState, mscTdmaCsLpOperEntry=mscTdmaCsLpOperEntry, mscTdmaBcUrOperEntry=mscTdmaBcUrOperEntry, mscTdmaBcFaxOperEntry=mscTdmaBcFaxOperEntry, mscTdmaBcDscStatsTable=mscTdmaBcDscStatsTable, mscTdmaBcV42RemoteBusyIndications=mscTdmaBcV42RemoteBusyIndications, mscTdmaBcFramerAdminState=mscTdmaBcFramerAdminState, mscTdmaBcDceRowStatusTable=mscTdmaBcDceRowStatusTable, mscTdmaBcV42BisResetsDecode=mscTdmaBcV42BisResetsDecode, mscTdmaBcDceComponentName=mscTdmaBcDceComponentName, mscTdmaBcFramerProvTable=mscTdmaBcFramerProvTable, mscTdmaBcV42BisIndex=mscTdmaBcV42BisIndex, mscTdmaBcOperTable=mscTdmaBcOperTable, mscTdmaCsV42T400DetectTimer=mscTdmaCsV42T400DetectTimer, mscTdmaBcV42BisStatsTable=mscTdmaBcV42BisStatsTable, mscTdmaCsDscP2CompressionMaximumCharacters=mscTdmaCsDscP2CompressionMaximumCharacters, mscTdmaCsV42RowStatus=mscTdmaCsV42RowStatus, mscTdmaBcUrRxBufferSize=mscTdmaBcUrRxBufferSize, mscTdmaBcV42BisOperEntry=mscTdmaBcV42BisOperEntry, mscTdmaCsAdminState=mscTdmaCsAdminState, mscTdmaBcModemOperEntry=mscTdmaBcModemOperEntry, mscTdmaCsUsageState=mscTdmaCsUsageState, mscTdmaBcFramerUsageState=mscTdmaBcFramerUsageState, mscTdmaBcV42RowStatus=mscTdmaBcV42RowStatus, mscTdmaBcV42RxIFrames=mscTdmaBcV42RxIFrames, mscTdmaBcDscP2CompressionMaximumCharacters=mscTdmaBcDscP2CompressionMaximumCharacters, mscTdmaCsV42RxKWindowSize=mscTdmaCsV42RxKWindowSize, mscTdmaBcModemIndex=mscTdmaBcModemIndex, mscTdmaBcFramerIndex=mscTdmaBcFramerIndex, mscTdmaCsRlp1T3PeerAckTimer=mscTdmaCsRlp1T3PeerAckTimer, mscTdmaBcUrTxFlowControlState=mscTdmaBcUrTxFlowControlState, mscTdmaBc=mscTdmaBc, mscTdmaCsV42ProvEntry=mscTdmaCsV42ProvEntry, mscTdmaBcModem=mscTdmaBcModem, mscTdmaBcRlp1T2LinkActivityTimer=mscTdmaBcRlp1T2LinkActivityTimer, mscTdmaBcFaxOperTable=mscTdmaBcFaxOperTable, tdmaIwfGroupCA02A=tdmaIwfGroupCA02A, mscTdmaCsCidDataEntry=mscTdmaCsCidDataEntry, mscTdmaCsV42StorageType=mscTdmaCsV42StorageType, mscTdmaBcDscStorageType=mscTdmaBcDscStorageType, mscTdmaBcOperEntry=mscTdmaBcOperEntry, mscTdmaBcState=mscTdmaBcState, mscTdmaCsDscP1CompressionMaximumCodewords=mscTdmaCsDscP1CompressionMaximumCodewords, mscTdmaBcLastResponseCode=mscTdmaBcLastResponseCode, mscTdmaBcFax=mscTdmaBcFax, mscTdmaCsV42FcsLength=mscTdmaCsV42FcsLength, mscTdmaBcUrStatsTable=mscTdmaBcUrStatsTable, mscTdmaBcV42CrcErrorsRx=mscTdmaBcV42CrcErrorsRx, mscTdmaCsDscIndex=mscTdmaCsDscIndex, mscTdmaBcFaxIndex=mscTdmaBcFaxIndex, mscTdmaBcRlp1RowStatusEntry=mscTdmaBcRlp1RowStatusEntry, mscTdmaCsCallsReleasedAbnormal=mscTdmaCsCallsReleasedAbnormal, mscTdmaCsDce=mscTdmaCsDce, mscTdmaCsDscRowStatusTable=mscTdmaCsDscRowStatusTable, mscTdmaCsFaxIndex=mscTdmaCsFaxIndex, mscTdmaBcCallType=mscTdmaBcCallType, mscTdmaBcRlp1=mscTdmaBcRlp1, mscTdmaBcFramerInterfaceName=mscTdmaBcFramerInterfaceName, mscTdmaCsCallsReleasedNormal=mscTdmaCsCallsReleasedNormal, mscTdmaBcV42BisStatsEntry=mscTdmaBcV42BisStatsEntry, tdmaIwfCapabilitiesCA02A=tdmaIwfCapabilitiesCA02A, mscTdmaBcRlp1BadRxFrames=mscTdmaBcRlp1BadRxFrames, mscTdmaBcFramerStatsTable=mscTdmaBcFramerStatsTable, mscTdmaBcCidDataTable=mscTdmaBcCidDataTable, mscTdmaBcV42BadFramesRx=mscTdmaBcV42BadFramesRx, mscTdmaCsRlp1ProvTable=mscTdmaCsRlp1ProvTable, mscTdmaCsV42BisRowStatusEntry=mscTdmaCsV42BisRowStatusEntry, mscTdmaCsV42BisProvTable=mscTdmaCsV42BisProvTable, mscTdmaCsCallsRequested=mscTdmaCsCallsRequested, mscTdmaBcFaxMessageRate=mscTdmaBcFaxMessageRate, mscTdmaCsLpConfiguredBearerChannels=mscTdmaCsLpConfiguredBearerChannels, mscTdmaBcFaxRowStatusTable=mscTdmaBcFaxRowStatusTable, mscTdmaBcFaxRowStatusEntry=mscTdmaBcFaxRowStatusEntry, mscTdmaBcV42BisComponentName=mscTdmaBcV42BisComponentName, mscTdmaCsDscStorageType=mscTdmaCsDscStorageType, mscTdmaBcV42V42ActiveInCall=mscTdmaBcV42V42ActiveInCall, mscTdmaBcV42OperEntry=mscTdmaBcV42OperEntry, mscTdmaCsV42BisIndex=mscTdmaCsV42BisIndex, mscTdmaCsModemRowStatusTable=mscTdmaCsModemRowStatusTable, mscTdmaBcBcIndex=mscTdmaBcBcIndex, mscTdmaBcModemMobileSideFlowControlState=mscTdmaBcModemMobileSideFlowControlState, mscTdmaBcUrRxFlowControlState=mscTdmaBcUrRxFlowControlState, mscTdmaBcModemRate=mscTdmaBcModemRate, mscTdmaBcV42TxIFrames=mscTdmaBcV42TxIFrames, mscTdmaCsModemComponentName=mscTdmaCsModemComponentName, mscTdmaBcFramerLinkTable=mscTdmaBcFramerLinkTable, mscTdmaBcCustomerIdentifier=mscTdmaBcCustomerIdentifier, mscTdmaBcRlp1T3PeerAckTimer=mscTdmaBcRlp1T3PeerAckTimer, mscTdmaBcUrUnacknowledgedFrames=mscTdmaBcUrUnacknowledgedFrames, mscTdmaBcV42BisOperTable=mscTdmaBcV42BisOperTable, mscTdmaBcOperationalState=mscTdmaBcOperationalState, tdmaIwfGroup=tdmaIwfGroup, mscTdmaCsDscProvTable=mscTdmaCsDscProvTable, mscTdmaCsV42RowStatusTable=mscTdmaCsV42RowStatusTable, mscTdmaBcMateBearerChannel=mscTdmaBcMateBearerChannel, mscTdmaBcRlp1Layer3L0ReqWinSize=mscTdmaBcRlp1Layer3L0ReqWinSize, mscTdmaBcCidDataEntry=mscTdmaBcCidDataEntry, mscTdmaBcDscComponentName=mscTdmaBcDscComponentName, mscTdmaCsStatsTable=mscTdmaCsStatsTable, mscTdmaBcModemRowStatus=mscTdmaBcModemRowStatus, mscTdmaBcFaxActiveMode=mscTdmaBcFaxActiveMode, mscTdmaBcRlp1RxFrames=mscTdmaBcRlp1RxFrames, mscTdmaCsRlp1T2LinkActivityTimer=mscTdmaCsRlp1T2LinkActivityTimer, mscTdmaCsV42BisComponentName=mscTdmaCsV42BisComponentName, mscTdmaBcFaxProtocolState=mscTdmaBcFaxProtocolState, mscTdmaCsMscIpAddress=mscTdmaCsMscIpAddress, mscTdmaBcFramerTxFrames=mscTdmaBcFramerTxFrames, mscTdmaBcV42BisProtocolModeDecoder=mscTdmaBcV42BisProtocolModeDecoder, mscTdmaCsStorageType=mscTdmaCsStorageType, mscTdmaBcFramerComponentName=mscTdmaBcFramerComponentName, mscTdmaBcModemAsyncMode=mscTdmaBcModemAsyncMode, mscTdmaBcV42Bis=mscTdmaBcV42Bis, mscTdmaBcV42BisLastDecodeError=mscTdmaBcV42BisLastDecodeError, mscTdmaBcV42StatsEntry=mscTdmaBcV42StatsEntry, mscTdmaBcUrRxFrames=mscTdmaBcUrRxFrames, mscTdmaCsV42ProvTable=mscTdmaCsV42ProvTable, mscTdmaBcUrIndex=mscTdmaBcUrIndex, mscTdmaCsVoiceLaw=mscTdmaCsVoiceLaw, mscTdmaCsModemRowStatus=mscTdmaCsModemRowStatus, mscTdmaBcDscTxBytes=mscTdmaBcDscTxBytes, mscTdmaCsVirtualRouterName=mscTdmaCsVirtualRouterName, mscTdmaBcModemOutbandFlowControl=mscTdmaBcModemOutbandFlowControl, mscTdmaBcV42RxKWindowSize=mscTdmaBcV42RxKWindowSize, mscTdmaCsV42Index=mscTdmaCsV42Index, mscTdmaCsErroredLFrames=mscTdmaCsErroredLFrames, mscTdmaBcFaxStatsEntry=mscTdmaBcFaxStatsEntry, mscTdmaBcV42BisModeChangesEncode=mscTdmaBcV42BisModeChangesEncode, mscTdmaBcDsc=mscTdmaBcDsc, mscTdmaCsDscLl0BufferSize=mscTdmaCsDscLl0BufferSize, mscTdmaBcV42BisStorageType=mscTdmaBcV42BisStorageType, mscTdmaBcV42BisP2MaximumStringSize=mscTdmaBcV42BisP2MaximumStringSize, mscTdmaBcV42BisRowStatusEntry=mscTdmaBcV42BisRowStatusEntry, mscTdmaCsRlp1T1ResponseTimer=mscTdmaCsRlp1T1ResponseTimer, mscTdmaCsSupportedTechnology=mscTdmaCsSupportedTechnology, mscTdmaCsSupportedService=mscTdmaCsSupportedService, mscTdmaCsCsIndex=mscTdmaCsCsIndex, mscTdmaCsLpComponentName=mscTdmaCsLpComponentName, mscTdmaBcFramerRowStatusEntry=mscTdmaBcFramerRowStatusEntry, mscTdmaCsDceIndex=mscTdmaCsDceIndex, mscTdmaBcV42BisProtocolModeEncoder=mscTdmaBcV42BisProtocolModeEncoder, mscTdmaBcModemRxBytes=mscTdmaBcModemRxBytes, mscTdmaBcDce=mscTdmaBcDce, mscTdmaBcFramerStateTable=mscTdmaBcFramerStateTable, mscTdmaCsLpRowStatusTable=mscTdmaCsLpRowStatusTable, mscTdmaBcFramerStateEntry=mscTdmaBcFramerStateEntry, mscTdmaCsRowStatusTable=mscTdmaCsRowStatusTable, mscTdmaBcFaxStatsTable=mscTdmaBcFaxStatsTable, mscTdmaBcDscRowStatusTable=mscTdmaBcDscRowStatusTable, mscTdmaBcFramerStatsEntry=mscTdmaBcFramerStatsEntry, mscTdmaCsLpStorageType=mscTdmaCsLpStorageType, mscTdmaCsModemRowStatusEntry=mscTdmaCsModemRowStatusEntry, mscTdmaBcFaxRowStatus=mscTdmaBcFaxRowStatus, mscTdmaCsV42T403IdleProbeTimer=mscTdmaCsV42T403IdleProbeTimer, mscTdmaBcFaxTxPagesToMobile=mscTdmaBcFaxTxPagesToMobile, mscTdmaBcDceRowStatusEntry=mscTdmaBcDceRowStatusEntry, mscTdmaCsLpRowStatus=mscTdmaCsLpRowStatus, tdmaIwfMIB=tdmaIwfMIB, mscTdmaBcModemStatsEntry=mscTdmaBcModemStatsEntry, mscTdmaCsFaxRowStatusTable=mscTdmaCsFaxRowStatusTable, mscTdmaCsLpOperTable=mscTdmaCsLpOperTable, mscTdmaCsRlp1ComponentName=mscTdmaCsRlp1ComponentName, mscTdmaBcDscP0CompressionDirection=mscTdmaBcDscP0CompressionDirection, mscTdmaBcFramerFramingType=mscTdmaBcFramerFramingType, mscTdmaBcDceStorageType=mscTdmaBcDceStorageType, mscTdmaCsDsc=mscTdmaCsDsc, mscTdmaBcV42BisResetsEncode=mscTdmaBcV42BisResetsEncode, mscTdmaCs=mscTdmaCs, mscTdmaBcAdminState=mscTdmaBcAdminState, mscTdmaBcFaxComponentName=mscTdmaBcFaxComponentName, mscTdmaBcCsIndex=mscTdmaBcCsIndex, mscTdmaCsDceComponentName=mscTdmaCsDceComponentName, mscTdmaBcDscP1CompressionMaximumCodewords=mscTdmaBcDscP1CompressionMaximumCodewords, mscTdmaBcV42LocalBusyIndications=mscTdmaBcV42LocalBusyIndications, mscTdmaCsT303=mscTdmaCsT303, mscTdmaCsDceRowStatus=mscTdmaCsDceRowStatus, mscTdmaBcV42BisP1MaximumCodewords=mscTdmaBcV42BisP1MaximumCodewords, mscTdmaBcV42RowStatusEntry=mscTdmaBcV42RowStatusEntry, mscTdmaBcModemOperTable=mscTdmaBcModemOperTable)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-TdmaIwfMIB", mscTdmaBcV42ComponentName=mscTdmaBcV42ComponentName, mscTdmaCsV42N400RetransLimit=mscTdmaCsV42N400RetransLimit, mscTdmaBcModemTxBytes=mscTdmaBcModemTxBytes, mscTdmaCsV42ComponentName=mscTdmaCsV42ComponentName, mscTdmaCsMiscProvEntry=mscTdmaCsMiscProvEntry, mscTdmaBcRlp1Layer3L1ReqWinSize1=mscTdmaBcRlp1Layer3L1ReqWinSize1, mscTdmaCsStatsEntry=mscTdmaCsStatsEntry, mscTdmaBcFramerRowStatus=mscTdmaBcFramerRowStatus, mscTdmaBcV42BisModeChangesDecode=mscTdmaBcV42BisModeChangesDecode, mscTdmaBcFramerRowStatusTable=mscTdmaBcFramerRowStatusTable, mscTdmaCsDceRowStatusEntry=mscTdmaCsDceRowStatusEntry, mscTdmaBcV42BisCompRatioEncoder=mscTdmaBcV42BisCompRatioEncoder, mscTdmaBcUrTxFrames=mscTdmaBcUrTxFrames, mscTdmaCsServProvEntry=mscTdmaCsServProvEntry, mscTdmaBcModemStatsTable=mscTdmaBcModemStatsTable, mscTdmaBcModemStorageType=mscTdmaBcModemStorageType, mscTdmaBcV42TxN401FrameSize=mscTdmaBcV42TxN401FrameSize, mscTdmaBcFramerProvEntry=mscTdmaBcFramerProvEntry, mscTdmaCsDscP0CompressionDirection=mscTdmaCsDscP0CompressionDirection, mscTdmaBcStateEntry=mscTdmaBcStateEntry, mscTdmaBcModemVoiceLaw=mscTdmaBcModemVoiceLaw, mscTdmaCsLpModemsSupported=mscTdmaCsLpModemsSupported, mscTdmaBcModemRowStatusEntry=mscTdmaBcModemRowStatusEntry, mscTdmaCsV42BisP1MaximumCodewords=mscTdmaCsV42BisP1MaximumCodewords, mscTdmaCsRowStatusEntry=mscTdmaCsRowStatusEntry, mscTdmaCsV42T401AckTimer=mscTdmaCsV42T401AckTimer, mscTdmaBcV42RowStatusTable=mscTdmaBcV42RowStatusTable, mscTdmaBcRlp1T1ResponseTimer=mscTdmaBcRlp1T1ResponseTimer, mscTdmaBcUrOperTable=mscTdmaBcUrOperTable, mscTdmaCsRowStatus=mscTdmaCsRowStatus, mscTdmaCsV42RowStatusEntry=mscTdmaCsV42RowStatusEntry, mscTdmaBcV42BisErrorsInDecode=mscTdmaBcV42BisErrorsInDecode, mscTdmaCsFaxComponentName=mscTdmaCsFaxComponentName, mscTdmaCsV42BisStorageType=mscTdmaCsV42BisStorageType, mscTdmaCsLpIndex=mscTdmaCsLpIndex, mscTdmaBcRowStatusTable=mscTdmaBcRowStatusTable, mscTdmaBcDscOperTable=mscTdmaBcDscOperTable, mscTdmaCsDscK0Ll0WindowSize=mscTdmaCsDscK0Ll0WindowSize, mscTdmaBcRlp1StatsEntry=mscTdmaBcRlp1StatsEntry, mscTdmaBcV42=mscTdmaBcV42, mscTdmaBcRlp1RowStatus=mscTdmaBcRlp1RowStatus, mscTdmaCsV42BisP0CompressionDirection=mscTdmaCsV42BisP0CompressionDirection, mscTdmaBcRlp1Index=mscTdmaBcRlp1Index, mscTdmaCsT999=mscTdmaCsT999, mscTdmaCsV42TxKWindowSize=mscTdmaCsV42TxKWindowSize, mscTdmaBcModemPstnSideFlowControlState=mscTdmaBcModemPstnSideFlowControlState, mscTdmaBcFramerLinkEntry=mscTdmaBcFramerLinkEntry, mscTdmaBcV42BisRowStatus=mscTdmaBcV42BisRowStatus, mscTdmaCsModemIndex=mscTdmaCsModemIndex, mscTdmaBcModemProtocolState=mscTdmaBcModemProtocolState, mscTdmaCsRlp1StorageType=mscTdmaCsRlp1StorageType, mscTdmaBcDscOperEntry=mscTdmaBcDscOperEntry, mscTdmaCsDscK1Ll1WindowSize=mscTdmaCsDscK1Ll1WindowSize, mscTdmaBcModemOutbandBreak=mscTdmaBcModemOutbandBreak, mscTdmaCsDscComponentName=mscTdmaCsDscComponentName, mscTdmaBcRowStatusEntry=mscTdmaBcRowStatusEntry, mscTdmaCsOperationalState=mscTdmaCsOperationalState, mscTdmaCsMiscProvTable=mscTdmaCsMiscProvTable, mscTdmaBcV42OperTable=mscTdmaBcV42OperTable, mscTdmaBcModemFramingErrors=mscTdmaBcModemFramingErrors, mscTdmaCsRlp1ProvEntry=mscTdmaCsRlp1ProvEntry, mscTdmaBcDceRowStatus=mscTdmaBcDceRowStatus, mscTdmaCsStateTable=mscTdmaCsStateTable, mscTdmaCsDscRowStatus=mscTdmaCsDscRowStatus, mscTdmaBcFaxRxPagesFromMobile=mscTdmaBcFaxRxPagesFromMobile, tdmaIwfCapabilitiesCA02=tdmaIwfCapabilitiesCA02, mscTdmaBcDscRowStatusEntry=mscTdmaBcDscRowStatusEntry, mscTdmaCsV42BisProvEntry=mscTdmaCsV42BisProvEntry, mscTdmaBcFramerRxFrames=mscTdmaBcFramerRxFrames, mscTdmaCsFaxStorageType=mscTdmaCsFaxStorageType, mscTdmaBcV42StatsTable=mscTdmaBcV42StatsTable, mscTdmaCsV42BisActionOnError=mscTdmaCsV42BisActionOnError, mscTdmaBcV42T1AckTimeouts=mscTdmaBcV42T1AckTimeouts, tdmaIwfCapabilities=tdmaIwfCapabilities, mscTdmaBcRlp1OperEntry=mscTdmaBcRlp1OperEntry, mscTdmaBcDceIndex=mscTdmaBcDceIndex, mscTdmaBcV42RxN401FrameSize=mscTdmaBcV42RxN401FrameSize, mscTdmaBcRowStatus=mscTdmaBcRowStatus, mscTdmaBcV42BisRowStatusTable=mscTdmaBcV42BisRowStatusTable, mscTdmaCsTIwf2=mscTdmaCsTIwf2, mscTdmaCsCommentText=mscTdmaCsCommentText, mscTdmaBcRlp1RowStatusTable=mscTdmaBcRlp1RowStatusTable, mscTdmaBcModemModemAlgorithmInUse=mscTdmaBcModemModemAlgorithmInUse, mscTdmaBcDscStatsEntry=mscTdmaBcDscStatsEntry, mscTdmaBcV42BisReinitializations=mscTdmaBcV42BisReinitializations, mscTdmaBcV42ProtocolState=mscTdmaBcV42ProtocolState)
