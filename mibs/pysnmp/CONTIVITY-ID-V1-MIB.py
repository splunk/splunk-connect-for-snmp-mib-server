#
# PySNMP MIB module CONTIVITY-ID-V1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CONTIVITY-ID-V1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:10:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
contivity, = mibBuilder.importSymbols("NEWOAK-MIB", "contivity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, TimeTicks, IpAddress, Bits, iso, Counter32, ObjectIdentity, Integer32, NotificationType, Gauge32, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "TimeTicks", "IpAddress", "Bits", "iso", "Counter32", "ObjectIdentity", "Integer32", "NotificationType", "Gauge32", "MibIdentifier", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
id_ces = ModuleIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16)).setLabel("id-ces")
id_ces.setRevisions(('1901-05-10 23:00',))
if mibBuilder.loadTexts: id_ces.setLastUpdated('0604062230Z')
if mibBuilder.loadTexts: id_ces.setOrganization('Nortel')
id_Software_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1)).setLabel("id-Software-ces")
if mibBuilder.loadTexts: id_Software_ces.setStatus('current')
id_SW_Server_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1)).setLabel("id-SW-Server-ces")
if mibBuilder.loadTexts: id_SW_Server_ces.setStatus('current')
id_SW_Routing_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1)).setLabel("id-SW-Routing-ces")
if mibBuilder.loadTexts: id_SW_Routing_ces.setStatus('current')
id_SW_Routing_RoutingInformationProtocol_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 1)).setLabel("id-SW-Routing-RoutingInformationProtocol-ces")
if mibBuilder.loadTexts: id_SW_Routing_RoutingInformationProtocol_ces.setStatus('current')
id_SW_Routing_AdvancedRouting_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 2)).setLabel("id-SW-Routing-AdvancedRouting-ces")
if mibBuilder.loadTexts: id_SW_Routing_AdvancedRouting_ces.setStatus('current')
id_SW_AdvancedRouting_OpenShortestPathFirst_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 2, 2)).setLabel("id-SW-AdvancedRouting-OpenShortestPathFirst-ces")
if mibBuilder.loadTexts: id_SW_AdvancedRouting_OpenShortestPathFirst_ces.setStatus('current')
id_SW_AdvancedRouting_VirtualRouterRedundancyProtocol_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 2, 3)).setLabel("id-SW-AdvancedRouting-VirtualRouterRedundancyProtocol-ces")
if mibBuilder.loadTexts: id_SW_AdvancedRouting_VirtualRouterRedundancyProtocol_ces.setStatus('current')
id_SW_AdvancedRouting_BandWidthManagement_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 2, 4)).setLabel("id-SW-AdvancedRouting-BandWidthManagement-ces")
if mibBuilder.loadTexts: id_SW_AdvancedRouting_BandWidthManagement_ces.setStatus('current')
id_SW_AdvancedRouting_DiffServ_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 2, 5)).setLabel("id-SW-AdvancedRouting-DiffServ-ces")
if mibBuilder.loadTexts: id_SW_AdvancedRouting_DiffServ_ces.setStatus('current')
id_SW_DataLinkSwitchingFeature_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 3)).setLabel("id-SW-DataLinkSwitchingFeature-ces")
if mibBuilder.loadTexts: id_SW_DataLinkSwitchingFeature_ces.setStatus('current')
id_SW_Routing_BGPRouting_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 4)).setLabel("id-SW-Routing-BGPRouting-ces")
if mibBuilder.loadTexts: id_SW_Routing_BGPRouting_ces.setStatus('current')
id_SW_BorderGatewayProtocol_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 4, 1)).setLabel("id-SW-BorderGatewayProtocol-ces")
if mibBuilder.loadTexts: id_SW_BorderGatewayProtocol_ces.setStatus('current')
id_SW_Routing_Premium_Routing_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 1, 5)).setLabel("id-SW-Routing-Premium-Routing-ces")
if mibBuilder.loadTexts: id_SW_Routing_Premium_Routing_ces.setStatus('current')
id_SW_Security_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 2)).setLabel("id-SW-Security-ces")
if mibBuilder.loadTexts: id_SW_Security_ces.setStatus('current')
id_SW_Security_Firewall_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 2, 1)).setLabel("id-SW-Security-Firewall-ces")
if mibBuilder.loadTexts: id_SW_Security_Firewall_ces.setStatus('current')
id_SW_Firewall_Contivity_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 2, 1, 1)).setLabel("id-SW-Firewall-Contivity-ces")
if mibBuilder.loadTexts: id_SW_Firewall_Contivity_ces.setStatus('current')
id_SW_Contivity_Stateful_Inspection_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 2, 1, 1, 1)).setLabel("id-SW-Contivity-Stateful-Inspection-ces")
if mibBuilder.loadTexts: id_SW_Contivity_Stateful_Inspection_ces.setStatus('current')
id_SW_Contivity_Interface_Filters_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 2, 1, 1, 2)).setLabel("id-SW-Contivity-Interface-Filters-ces")
if mibBuilder.loadTexts: id_SW_Contivity_Interface_Filters_ces.setStatus('current')
id_SW_Firewall_CheckPoint_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 2, 1, 2)).setLabel("id-SW-Firewall-CheckPoint-ces")
if mibBuilder.loadTexts: id_SW_Firewall_CheckPoint_ces.setStatus('current')
id_SW_Security_FIPS_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 2, 2)).setLabel("id-SW-Security-FIPS-ces")
if mibBuilder.loadTexts: id_SW_Security_FIPS_ces.setStatus('current')
id_SW_Tunnel_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 3)).setLabel("id-SW-Tunnel-ces")
if mibBuilder.loadTexts: id_SW_Tunnel_ces.setStatus('current')
id_SW_Tunnel_BaseLevel_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 1, 1, 3, 1)).setLabel("id-SW-Tunnel-BaseLevel-ces")
if mibBuilder.loadTexts: id_SW_Tunnel_BaseLevel_ces.setStatus('current')
id_Hardware_ces = ObjectIdentity((1, 3, 6, 1, 4, 1, 2505, 1, 16, 2)).setLabel("id-Hardware-ces")
if mibBuilder.loadTexts: id_Hardware_ces.setStatus('current')
mibBuilder.exportSymbols("CONTIVITY-ID-V1-MIB", id_SW_Routing_AdvancedRouting_ces=id_SW_Routing_AdvancedRouting_ces, id_SW_AdvancedRouting_DiffServ_ces=id_SW_AdvancedRouting_DiffServ_ces, id_SW_Contivity_Stateful_Inspection_ces=id_SW_Contivity_Stateful_Inspection_ces, id_SW_Security_Firewall_ces=id_SW_Security_Firewall_ces, PYSNMP_MODULE_ID=id_ces, id_ces=id_ces, id_SW_Security_FIPS_ces=id_SW_Security_FIPS_ces, id_SW_Contivity_Interface_Filters_ces=id_SW_Contivity_Interface_Filters_ces, id_SW_Tunnel_ces=id_SW_Tunnel_ces, id_SW_AdvancedRouting_OpenShortestPathFirst_ces=id_SW_AdvancedRouting_OpenShortestPathFirst_ces, id_SW_DataLinkSwitchingFeature_ces=id_SW_DataLinkSwitchingFeature_ces, id_Software_ces=id_Software_ces, id_SW_Tunnel_BaseLevel_ces=id_SW_Tunnel_BaseLevel_ces, id_SW_Firewall_CheckPoint_ces=id_SW_Firewall_CheckPoint_ces, id_Hardware_ces=id_Hardware_ces, id_SW_BorderGatewayProtocol_ces=id_SW_BorderGatewayProtocol_ces, id_SW_Security_ces=id_SW_Security_ces, id_SW_AdvancedRouting_VirtualRouterRedundancyProtocol_ces=id_SW_AdvancedRouting_VirtualRouterRedundancyProtocol_ces, id_SW_AdvancedRouting_BandWidthManagement_ces=id_SW_AdvancedRouting_BandWidthManagement_ces, id_SW_Routing_RoutingInformationProtocol_ces=id_SW_Routing_RoutingInformationProtocol_ces, id_SW_Routing_Premium_Routing_ces=id_SW_Routing_Premium_Routing_ces, id_SW_Routing_BGPRouting_ces=id_SW_Routing_BGPRouting_ces, id_SW_Firewall_Contivity_ces=id_SW_Firewall_Contivity_ces, id_SW_Routing_ces=id_SW_Routing_ces, id_SW_Server_ces=id_SW_Server_ces)
