#
# PySNMP MIB module DLINK-3100-DHCPCL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DLINK-3100-DHCPCL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:33:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
rnd, = mibBuilder.importSymbols("DLINK-3100-MIB", "rnd")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Counter32, NotificationType, ModuleIdentity, TimeTicks, MibIdentifier, ObjectIdentity, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Counter32", "NotificationType", "ModuleIdentity", "TimeTicks", "MibIdentifier", "ObjectIdentity", "IpAddress", "Bits")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
rlDhcpCl = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76))
rlDhcpCl.setRevisions(('2007-01-02 00:00',))
if mibBuilder.loadTexts: rlDhcpCl.setLastUpdated('200701020000Z')
if mibBuilder.loadTexts: rlDhcpCl.setOrganization('Dlink, Inc. Dlink Semiconductor, Inc.')
rlDhcpClActionTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 3), )
if mibBuilder.loadTexts: rlDhcpClActionTable.setStatus('current')
rlDhcpClActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 3, 1), ).setIndexNames((0, "DLINK-3100-DHCPCL-MIB", "rlDhcpClActionIfIndex"))
if mibBuilder.loadTexts: rlDhcpClActionEntry.setStatus('current')
rlDhcpClActionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClActionIfIndex.setStatus('current')
rlDhcpClActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpClActionStatus.setStatus('current')
rlDhcpClActionHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpClActionHostName.setStatus('current')
rlDhcpApprovalEnabled = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalEnabled.setStatus('current')
rlDhcpApprovalWaitingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 5), )
if mibBuilder.loadTexts: rlDhcpApprovalWaitingTable.setStatus('current')
rlDhcpApprovalWaitingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 5, 1), ).setIndexNames((0, "DLINK-3100-DHCPCL-MIB", "rlDhcpApprovalWaitingIfIndex"))
if mibBuilder.loadTexts: rlDhcpApprovalWaitingEntry.setStatus('current')
rlDhcpApprovalWaitingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 5, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingIfIndex.setStatus('current')
rlDhcpApprovalWaitingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingAddress.setStatus('current')
rlDhcpApprovalWaitingMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingMask.setStatus('current')
rlDhcpApprovalWaitingGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingGateway.setStatus('current')
rlDhcpApprovalActionTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 6), )
if mibBuilder.loadTexts: rlDhcpApprovalActionTable.setStatus('current')
rlDhcpApprovalActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 6, 1), ).setIndexNames((0, "DLINK-3100-DHCPCL-MIB", "rlDhcpApprovalActionIfIndex"), (0, "DLINK-3100-DHCPCL-MIB", "rlDhcpApprovalActionAddress"), (0, "DLINK-3100-DHCPCL-MIB", "rlDhcpApprovalActionMask"))
if mibBuilder.loadTexts: rlDhcpApprovalActionEntry.setStatus('current')
rlDhcpApprovalActionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 6, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalActionIfIndex.setStatus('current')
rlDhcpApprovalActionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalActionAddress.setStatus('current')
rlDhcpApprovalActionMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalActionMask.setStatus('current')
rlDhcpApprovalActionApprove = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 6, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpApprovalActionApprove.setStatus('current')
rlDhcpClCommandTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 7), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClCommandTable.setStatus('current')
rlDhcpClCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlDhcpClCommandEntry.setStatus('current')
rlDhcpClCommandAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("renew", 1), ("renewForceAutoconfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClCommandAction.setStatus('current')
rlDhcpClConfigurationFileName = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClConfigurationFileName.setStatus('current')
rlDhcpClOption67Enable = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 76, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClOption67Enable.setStatus('current')
mibBuilder.exportSymbols("DLINK-3100-DHCPCL-MIB", rlDhcpClConfigurationFileName=rlDhcpClConfigurationFileName, rlDhcpApprovalActionAddress=rlDhcpApprovalActionAddress, rlDhcpApprovalActionApprove=rlDhcpApprovalActionApprove, PYSNMP_MODULE_ID=rlDhcpCl, rlDhcpApprovalEnabled=rlDhcpApprovalEnabled, rlDhcpApprovalWaitingTable=rlDhcpApprovalWaitingTable, rlDhcpClActionStatus=rlDhcpClActionStatus, rlDhcpApprovalWaitingMask=rlDhcpApprovalWaitingMask, rlDhcpClCommandEntry=rlDhcpClCommandEntry, rlDhcpApprovalWaitingEntry=rlDhcpApprovalWaitingEntry, rlDhcpApprovalActionTable=rlDhcpApprovalActionTable, rlDhcpApprovalActionIfIndex=rlDhcpApprovalActionIfIndex, rlDhcpClCommandTable=rlDhcpClCommandTable, rlDhcpClActionEntry=rlDhcpClActionEntry, rlDhcpClActionHostName=rlDhcpClActionHostName, rlDhcpApprovalActionEntry=rlDhcpApprovalActionEntry, rlDhcpCl=rlDhcpCl, rlDhcpApprovalWaitingIfIndex=rlDhcpApprovalWaitingIfIndex, rlDhcpClActionTable=rlDhcpClActionTable, rlDhcpClCommandAction=rlDhcpClCommandAction, rlDhcpClOption67Enable=rlDhcpClOption67Enable, rlDhcpApprovalWaitingAddress=rlDhcpApprovalWaitingAddress, rlDhcpApprovalWaitingGateway=rlDhcpApprovalWaitingGateway, rlDhcpApprovalActionMask=rlDhcpApprovalActionMask, rlDhcpClActionIfIndex=rlDhcpClActionIfIndex)
