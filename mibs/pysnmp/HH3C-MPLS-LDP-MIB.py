#
# PySNMP MIB module HH3C-MPLS-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MPLS-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
hh3cMpls, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cMpls")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibIdentifier, Unsigned32, Gauge32, Counter32, Counter64, ModuleIdentity, iso, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Unsigned32", "Gauge32", "Counter32", "Counter64", "ModuleIdentity", "iso", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "IpAddress")
TextualConvention, TimeInterval, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeInterval", "RowStatus", "TruthValue", "DisplayString")
hh3cMplsLdp = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2))
hh3cMplsLdp.setRevisions(('1996-11-08 21:55',))
if mibBuilder.loadTexts: hh3cMplsLdp.setLastUpdated('9906301200Z')
if mibBuilder.loadTexts: hh3cMplsLdp.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class DisplayString(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class PhysAddress(OctetString):
    pass

class BitRate(Integer32):
    pass

class BurstSize(Integer32):
    pass

class MplsLsrIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class MplsLdpGenAddr(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class MplsLdpIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class AtmVpIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 4095)

class AtmVcIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class AddressFamilyNumbers(TextualConvention, Integer32):
    reference = 'RFC 1700 Assigned Numbers, Reynolds and Postel, Oct. 1994'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("other", 0), ("ipv4", 1), ("ipv6", 2), ("nsap", 3), ("hdlc", 4), ("bbn1822", 5), ("ieee802", 6), ("e163", 7), ("e164", 8), ("f69", 9), ("x121", 10), ("ipx", 11), ("appleTalk", 12), ("decnetIV", 13), ("banyanVines", 14), ("e164WithNsap", 15))

class MplsLabel(TextualConvention, Integer32):
    reference = '1. MPLS Label Stack Encoding, Rosen et al, draft- ietf-mpls-label-encaps-04.txt, April 1999. 2. Use of Label Switching on Frame Relay Networks, Conta et al, draft-ietf-mpls-fr-03.txt, Nov. 1998.'
    status = 'current'

class MplsTunnelIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

hh3cMplsLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1))
hh3cMplsLdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2))
hh3cMplsLdpLsrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1))
hh3cMplsLdpEntityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2))
hh3cMplsLdpPeerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3))
hh3cMplsLdpSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4))
hh3cMplsLdpHelloAdjacencyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 5))
hh3cMplsLdpCrlspTnlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6))
hh3cMplsLdpLsrIncarnTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cMplsLdpLsrIncarnTable.setStatus('current')
hh3cMplsLdpLsrIncarnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hh3cMplsLdpLsrIncarnEntry.setStatus('current')
hh3cMplsLdpLsrID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 1), MplsLsrIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrID.setStatus('current')
hh3cMplsLdpLsrLoopDetectionPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpLsrLoopDetectionPresent.setStatus('current')
hh3cMplsLdpLsrLoopDetectionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrLoopDetectionAdminStatus.setStatus('current')
hh3cMplsLdpLsrPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 4), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrPathVectorLimit.setStatus('current')
hh3cMplsLdpLsrHopCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 5), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrHopCountLimit.setStatus('current')
hh3cMplsLdpLsrLoopPreventionPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpLsrLoopPreventionPresent.setStatus('current')
hh3cMplsLdpLsrLoopPreventionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrLoopPreventionAdminStatus.setStatus('current')
hh3cMplsLdpLsrLabelRetentionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("conservative", 1), ("liberal", 2))).clone('conservative')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrLabelRetentionMode.setStatus('current')
hh3cMplsLdpLsrIncarnID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpLsrIncarnID.setStatus('current')
hh3cMplsLdpLsrMaxLdpEntities = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxLdpEntities.setStatus('current')
hh3cMplsLdpLsrMaxLocalPeers = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxLocalPeers.setStatus('current')
hh3cMplsLdpLsrMaxRemotePeers = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxRemotePeers.setStatus('current')
hh3cMplsLdpLsrMaxIfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxIfaces.setStatus('current')
hh3cMplsLdpLsrMaxLsps = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxLsps.setStatus('current')
hh3cMplsLdpLsrMaxCrlspTnls = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxCrlspTnls.setStatus('current')
hh3cMplsLdpLsrMaxErhopPerCrlspTnl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxErhopPerCrlspTnl.setStatus('current')
hh3cMplsLdpLsrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpLsrRowStatus.setStatus('current')
hh3cMplsLdpLsrMaxVcmCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrMaxVcmCapability.setStatus('current')
hh3cMplsLdpLsrVcmPathVecInAllLblMapPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrVcmPathVecInAllLblMapPresent.setStatus('current')
hh3cMplsLdpLsrRequestRetrytimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrRequestRetrytimerValue.setStatus('current')
hh3cMplsLdpLsrNumOfRequestRetryAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 1, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsLdpLsrNumOfRequestRetryAttempts.setStatus('current')
hh3cMplsLdpEntityTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cMplsLdpEntityTable.setStatus('current')
hh3cMplsLdpEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityIfIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpEntityEntry.setStatus('current')
hh3cMplsLdpEntityID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 1), MplsLdpIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMplsLdpEntityID.setStatus('current')
hh3cMplsLdpEntityLabelSpaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("perInterface", 2), ("perPlatform", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityLabelSpaceType.setStatus('current')
hh3cMplsLdpEntityDefVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 3), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityDefVpi.setStatus('current')
hh3cMplsLdpEntityDefVci = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 4), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityDefVci.setStatus('current')
hh3cMplsLdpEntityUnlabTrafVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 5), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityUnlabTrafVpi.setStatus('current')
hh3cMplsLdpEntityUnlabTrafVci = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 6), AtmVcIdentifier().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityUnlabTrafVci.setStatus('current')
hh3cMplsLdpEntityMergeCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noMerge", 0), ("vpMerge", 1), ("vcMerge", 2), ("vpVcMerge", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityMergeCapability.setStatus('current')
hh3cMplsLdpEntityVcDirectionality = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bidirectional", 1), ("unidirectional", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityVcDirectionality.setStatus('current')
hh3cMplsLdpEntityWellKnownDiscoveryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityWellKnownDiscoveryPort.setStatus('current')
hh3cMplsLdpEntityMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityMtu.setStatus('current')
hh3cMplsLdpEntityKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityKeepAliveHoldTimer.setStatus('current')
hh3cMplsLdpEntityFailedInitSessionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityFailedInitSessionThreshold.setStatus('current')
hh3cMplsLdpEntityLabelDistributionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityLabelDistributionMethod.setStatus('current')
hh3cMplsLdpEntityLabelAllocationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ordered", 1), ("independent", 2))).clone('ordered')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityLabelAllocationMethod.setStatus('current')
hh3cMplsLdpEntityHelloHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityHelloHoldTimer.setStatus('current')
hh3cMplsLdpEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityRowStatus.setStatus('current')
hh3cMplsLdpEntityIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cMplsLdpEntityIfTable.setStatus('current')
hh3cMplsLdpEntityIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityIfIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpEntityIfEntry.setStatus('current')
hh3cMplsLdpEntityIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cMplsLdpEntityIfIndex.setStatus('current')
hh3cMplsLdpEntityIfIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityIfIpv4Address.setStatus('current')
hh3cMplsLdpEntityIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityIfRowStatus.setStatus('current')
hh3cMplsLdpEntityConfAtmLabelRangeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cMplsLdpEntityConfAtmLabelRangeTable.setStatus('current')
hh3cMplsLdpEntityConfAtmLabelRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 3, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityIfIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVPI"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVCI"))
if mibBuilder.loadTexts: hh3cMplsLdpEntityConfAtmLabelRangeEntry.setStatus('current')
hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 3, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVPI.setStatus('current')
hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 3, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVCI.setStatus('current')
hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 3, 1, 3), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVPI.setStatus('current')
hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 3, 1, 4), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVCI.setStatus('current')
hh3cMplsLdpEntityConfAtmLabelRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpEntityConfAtmLabelRangeRowStatus.setStatus('current')
hh3cMplsLdpEntityStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 4), )
if mibBuilder.loadTexts: hh3cMplsLdpEntityStatsTable.setStatus('current')
hh3cMplsLdpEntityStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 4, 1), )
hh3cMplsLdpEntityEntry.registerAugmentions(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityStatsEntry"))
hh3cMplsLdpEntityStatsEntry.setIndexNames(*hh3cMplsLdpEntityEntry.getIndexNames())
if mibBuilder.loadTexts: hh3cMplsLdpEntityStatsEntry.setStatus('current')
hh3cMplsLdpAttemptedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpAttemptedSessions.setStatus('current')
hh3cMplsLdpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1), )
if mibBuilder.loadTexts: hh3cMplsLdpPeerTable.setStatus('current')
hh3cMplsLdpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityIfIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpPeerIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpPeerEntry.setStatus('current')
hh3cMplsLdpPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cMplsLdpPeerIndex.setStatus('current')
hh3cMplsLdpPeerID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 2), MplsLdpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerID.setStatus('current')
hh3cMplsLdpPeerInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 3), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerInternetworkAddrType.setStatus('current')
hh3cMplsLdpPeerInternetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 4), MplsLdpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerInternetworkAddr.setStatus('current')
hh3cMplsLdpPeerDefaultMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(9180)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerDefaultMtu.setStatus('current')
hh3cMplsLdpPeerKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerKeepAliveHoldTimer.setStatus('current')
hh3cMplsLdpPeerLabelDistributionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerLabelDistributionMethod.setStatus('current')
hh3cMplsLdpPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerType.setStatus('current')
hh3cMplsLdpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpPeerRowStatus.setStatus('current')
hh3cMplsLdpPeerConfAtmLabelRangeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 2), )
if mibBuilder.loadTexts: hh3cMplsLdpPeerConfAtmLabelRangeTable.setStatus('current')
hh3cMplsLdpPeerConfAtmLabelRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 2, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityIfIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpPeerIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVPI"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVCI"))
if mibBuilder.loadTexts: hh3cMplsLdpPeerConfAtmLabelRangeEntry.setStatus('current')
hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 2, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVPI.setStatus('current')
hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 2, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVCI.setStatus('current')
hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 2, 1, 3), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVPI.setStatus('current')
hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 3, 2, 1, 4), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVCI.setStatus('current')
hh3cMplsLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1), )
if mibBuilder.loadTexts: hh3cMplsLdpSessionTable.setStatus('current')
hh3cMplsLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityIfIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpPeerIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpSessionIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpSessionEntry.setStatus('current')
hh3cMplsLdpSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cMplsLdpSessionIndex.setStatus('current')
hh3cMplsLdpSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 2), MplsLdpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionID.setStatus('current')
hh3cMplsLdpSessionProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionProtocolVersion.setStatus('current')
hh3cMplsLdpSessionKeepAliveHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 4), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionKeepAliveHoldTimeRemaining.setStatus('current')
hh3cMplsLdpSessionRole = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionRole.setStatus('current')
hh3cMplsLdpSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonexistent", 1), ("initialized", 2), ("openrec", 3), ("opensent", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionState.setStatus('current')
hh3cMplsLdpSessionAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 7), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionAtmLabelRangeLowerBoundVPI.setStatus('current')
hh3cMplsLdpSessionAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 8), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionAtmLabelRangeLowerBoundVCI.setStatus('current')
hh3cMplsLdpSessionAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 9), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionAtmLabelRangeUpperBoundVPI.setStatus('current')
hh3cMplsLdpSessionAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 4, 1, 1, 10), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpSessionAtmLabelRangeUpperBoundVCI.setStatus('current')
hh3cMplsLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 5, 1), )
if mibBuilder.loadTexts: hh3cMplsLdpHelloAdjacencyTable.setStatus('current')
hh3cMplsLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 5, 1, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityIfIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpPeerIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpSessionIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpHelloAdjacencyIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpHelloAdjacencyEntry.setStatus('current')
hh3cMplsLdpHelloAdjacencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cMplsLdpHelloAdjacencyIndex.setStatus('current')
hh3cMplsLdpHelloAdjacencyHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 5, 1, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMplsLdpHelloAdjacencyHoldTimeRemaining.setStatus('current')
hh3cMplsLdpCrlspTnlTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1), )
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlTable.setStatus('current')
hh3cMplsLdpCrlspTnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlEntry.setStatus('current')
hh3cMplsLdpCrlspTnlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 1), MplsTunnelIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlIndex.setStatus('current')
hh3cMplsLdpCrlspTnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlName.setStatus('current')
hh3cMplsLdpCrlspTnlDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("in", 1), ("out", 2), ("inOut", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlDirection.setStatus('current')
hh3cMplsLdpCrlspTnlSignallingProto = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ldp", 2), ("rsvp", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlSignallingProto.setStatus('current')
hh3cMplsLdpCrlspTnlSetupPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlSetupPrio.setStatus('current')
hh3cMplsLdpCrlspTnlHoldingPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlHoldingPrio.setStatus('current')
hh3cMplsLdpCrlspTnlPeakDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 7), BitRate()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlPeakDataRate.setStatus('current')
hh3cMplsLdpCrlspTnlPeakBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 8), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlPeakBurstSize.setStatus('current')
hh3cMplsLdpCrlspTnlCommittedDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 9), BitRate()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlCommittedDataRate.setStatus('current')
hh3cMplsLdpCrlspTnlCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 10), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlCommittedBurstSize.setStatus('current')
hh3cMplsLdpCrlspTnlExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 11), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlExcessBurstSize.setStatus('current')
hh3cMplsLdpCrlspTnlIsPinned = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlIsPinned.setStatus('current')
hh3cMplsLdpCrlspTnlFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlFrequency.setStatus('current')
hh3cMplsLdpCrlspTnlWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlWeight.setStatus('current')
hh3cMplsLdpCrlspTnlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTnlRowStatus.setStatus('current')
hh3cMplsLdpCrlspErHopTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2), )
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopTable.setStatus('current')
hh3cMplsLdpCrlspErHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2, 1), ).setIndexNames((0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpCrlspTnlIndex"), (0, "HH3C-MPLS-LDP-MIB", "hh3cMplsLdpCrlspErHopIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopEntry.setStatus('current')
hh3cMplsLdpCrlspErHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopIndex.setStatus('current')
hh3cMplsLdpCrlspErHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ipV4", 1))).clone('ipV4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopAddrType.setStatus('current')
hh3cMplsLdpCrlspErHopIpv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopIpv4Addr.setStatus('current')
hh3cMplsLdpCrlspErHopIpv4PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopIpv4PrefixLen.setStatus('current')
hh3cMplsLdpCrlspErHopStrictOrLoose = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("strict", 1), ("loose", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopStrictOrLoose.setStatus('current')
hh3cMplsLdpCrlspErHopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 1, 6, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsLdpCrlspErHopRowStatus.setStatus('current')
hh3cMplsLdpNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0))
hh3cMplsLdpFailedInitSessionThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 1)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityFailedInitSessionThreshold"))
if mibBuilder.loadTexts: hh3cMplsLdpFailedInitSessionThresholdExceeded.setStatus('current')
hh3cMplsLdpCrlspTunnelUp = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 2)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTunnelUp.setStatus('current')
hh3cMplsLdpCrlspTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 3)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTunnelDown.setStatus('current')
hh3cMplsLdpCrlspTunnelSetupFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 4)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hh3cMplsLdpCrlspTunnelSetupFailure.setStatus('current')
hh3cMplsLdpIncarnUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 11)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hh3cMplsLdpIncarnUpEventFailure.setStatus('current')
hh3cMplsLdpIncarnDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 12)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hh3cMplsLdpIncarnDownEventFailure.setStatus('current')
hh3cMplsLdpEntityUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 13)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityID"))
if mibBuilder.loadTexts: hh3cMplsLdpEntityUpEventFailure.setStatus('current')
hh3cMplsLdpEntityDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 14)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpLsrIncarnID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpEntityID"))
if mibBuilder.loadTexts: hh3cMplsLdpEntityDownEventFailure.setStatus('current')
hh3cMplsLdpSessionUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 15)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpSessionID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpSessionState"))
if mibBuilder.loadTexts: hh3cMplsLdpSessionUpEventFailure.setStatus('current')
hh3cMplsLdpSessionDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 12, 2, 2, 0, 16)).setObjects(("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpSessionID"), ("HH3C-MPLS-LDP-MIB", "hh3cMplsLdpSessionState"))
if mibBuilder.loadTexts: hh3cMplsLdpSessionDownEventFailure.setStatus('current')
mibBuilder.exportSymbols("HH3C-MPLS-LDP-MIB", hh3cMplsLdpPeerInternetworkAddrType=hh3cMplsLdpPeerInternetworkAddrType, hh3cMplsLdpEntityEntry=hh3cMplsLdpEntityEntry, hh3cMplsLdpLsrID=hh3cMplsLdpLsrID, hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVCI=hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVCI, hh3cMplsLdpEntityUpEventFailure=hh3cMplsLdpEntityUpEventFailure, hh3cMplsLdpEntityVcDirectionality=hh3cMplsLdpEntityVcDirectionality, hh3cMplsLdpCrlspTnlDirection=hh3cMplsLdpCrlspTnlDirection, hh3cMplsLdpEntityDefVci=hh3cMplsLdpEntityDefVci, hh3cMplsLdpCrlspTunnelDown=hh3cMplsLdpCrlspTunnelDown, hh3cMplsLdpEntityMergeCapability=hh3cMplsLdpEntityMergeCapability, hh3cMplsLdpEntityWellKnownDiscoveryPort=hh3cMplsLdpEntityWellKnownDiscoveryPort, AtmVcIdentifier=AtmVcIdentifier, hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVPI=hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVPI, hh3cMplsLdpCrlspTnlName=hh3cMplsLdpCrlspTnlName, hh3cMplsLdpCrlspTnlHoldingPrio=hh3cMplsLdpCrlspTnlHoldingPrio, hh3cMplsLdpEntityUnlabTrafVpi=hh3cMplsLdpEntityUnlabTrafVpi, hh3cMplsLdpLsrNumOfRequestRetryAttempts=hh3cMplsLdpLsrNumOfRequestRetryAttempts, hh3cMplsLdpEntityStatsTable=hh3cMplsLdpEntityStatsTable, hh3cMplsLdpCrlspErHopIpv4Addr=hh3cMplsLdpCrlspErHopIpv4Addr, hh3cMplsLdpSessionRole=hh3cMplsLdpSessionRole, hh3cMplsLdpPeerEntry=hh3cMplsLdpPeerEntry, hh3cMplsLdpCrlspTnlIndex=hh3cMplsLdpCrlspTnlIndex, hh3cMplsLdpEntityStatsEntry=hh3cMplsLdpEntityStatsEntry, hh3cMplsLdp=hh3cMplsLdp, hh3cMplsLdpLsrMaxVcmCapability=hh3cMplsLdpLsrMaxVcmCapability, hh3cMplsLdpHelloAdjacencyEntry=hh3cMplsLdpHelloAdjacencyEntry, hh3cMplsLdpPeerIndex=hh3cMplsLdpPeerIndex, hh3cMplsLdpEntityObjects=hh3cMplsLdpEntityObjects, hh3cMplsLdpLsrIncarnID=hh3cMplsLdpLsrIncarnID, hh3cMplsLdpEntityID=hh3cMplsLdpEntityID, hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVPI=hh3cMplsLdpPeerConfAtmLabelRangeLowerBoundVPI, hh3cMplsLdpPeerTable=hh3cMplsLdpPeerTable, hh3cMplsLdpEntityLabelAllocationMethod=hh3cMplsLdpEntityLabelAllocationMethod, hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVCI=hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVCI, hh3cMplsLdpCrlspTnlEntry=hh3cMplsLdpCrlspTnlEntry, hh3cMplsLdpEntityConfAtmLabelRangeTable=hh3cMplsLdpEntityConfAtmLabelRangeTable, hh3cMplsLdpEntityIfIndex=hh3cMplsLdpEntityIfIndex, hh3cMplsLdpCrlspErHopTable=hh3cMplsLdpCrlspErHopTable, PYSNMP_MODULE_ID=hh3cMplsLdp, hh3cMplsLdpLsrLoopPreventionAdminStatus=hh3cMplsLdpLsrLoopPreventionAdminStatus, MplsLdpIdentifier=MplsLdpIdentifier, hh3cMplsLdpIncarnDownEventFailure=hh3cMplsLdpIncarnDownEventFailure, hh3cMplsLdpEntityIfIpv4Address=hh3cMplsLdpEntityIfIpv4Address, MplsLdpGenAddr=MplsLdpGenAddr, hh3cMplsLdpSessionIndex=hh3cMplsLdpSessionIndex, hh3cMplsLdpCrlspTnlCommittedDataRate=hh3cMplsLdpCrlspTnlCommittedDataRate, hh3cMplsLdpSessionAtmLabelRangeLowerBoundVCI=hh3cMplsLdpSessionAtmLabelRangeLowerBoundVCI, hh3cMplsLdpLsrRequestRetrytimerValue=hh3cMplsLdpLsrRequestRetrytimerValue, hh3cMplsLdpCrlspTnlWeight=hh3cMplsLdpCrlspTnlWeight, hh3cMplsLdpCrlspTnlIsPinned=hh3cMplsLdpCrlspTnlIsPinned, hh3cMplsLdpLsrVcmPathVecInAllLblMapPresent=hh3cMplsLdpLsrVcmPathVecInAllLblMapPresent, hh3cMplsLdpNotifications=hh3cMplsLdpNotifications, hh3cMplsLdpLsrRowStatus=hh3cMplsLdpLsrRowStatus, hh3cMplsLdpLsrMaxLdpEntities=hh3cMplsLdpLsrMaxLdpEntities, hh3cMplsLdpNotificationPrefix=hh3cMplsLdpNotificationPrefix, hh3cMplsLdpLsrMaxIfaces=hh3cMplsLdpLsrMaxIfaces, hh3cMplsLdpCrlspErHopAddrType=hh3cMplsLdpCrlspErHopAddrType, BurstSize=BurstSize, hh3cMplsLdpCrlspTnlObjects=hh3cMplsLdpCrlspTnlObjects, hh3cMplsLdpPeerDefaultMtu=hh3cMplsLdpPeerDefaultMtu, AddressFamilyNumbers=AddressFamilyNumbers, hh3cMplsLdpEntityDefVpi=hh3cMplsLdpEntityDefVpi, hh3cMplsLdpEntityDownEventFailure=hh3cMplsLdpEntityDownEventFailure, hh3cMplsLdpFailedInitSessionThresholdExceeded=hh3cMplsLdpFailedInitSessionThresholdExceeded, hh3cMplsLdpLsrIncarnTable=hh3cMplsLdpLsrIncarnTable, hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVCI=hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVCI, hh3cMplsLdpLsrMaxCrlspTnls=hh3cMplsLdpLsrMaxCrlspTnls, hh3cMplsLdpPeerRowStatus=hh3cMplsLdpPeerRowStatus, hh3cMplsLdpAttemptedSessions=hh3cMplsLdpAttemptedSessions, hh3cMplsLdpHelloAdjacencyTable=hh3cMplsLdpHelloAdjacencyTable, hh3cMplsLdpLsrMaxErhopPerCrlspTnl=hh3cMplsLdpLsrMaxErhopPerCrlspTnl, hh3cMplsLdpCrlspTnlRowStatus=hh3cMplsLdpCrlspTnlRowStatus, hh3cMplsLdpCrlspTnlTable=hh3cMplsLdpCrlspTnlTable, BitRate=BitRate, hh3cMplsLdpCrlspTnlSignallingProto=hh3cMplsLdpCrlspTnlSignallingProto, hh3cMplsLdpPeerID=hh3cMplsLdpPeerID, hh3cMplsLdpEntityConfAtmLabelRangeRowStatus=hh3cMplsLdpEntityConfAtmLabelRangeRowStatus, hh3cMplsLdpCrlspErHopEntry=hh3cMplsLdpCrlspErHopEntry, hh3cMplsLdpCrlspTnlPeakDataRate=hh3cMplsLdpCrlspTnlPeakDataRate, hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVPI=hh3cMplsLdpPeerConfAtmLabelRangeUpperBoundVPI, hh3cMplsLdpSessionTable=hh3cMplsLdpSessionTable, hh3cMplsLdpEntityLabelSpaceType=hh3cMplsLdpEntityLabelSpaceType, hh3cMplsLdpEntityRowStatus=hh3cMplsLdpEntityRowStatus, MplsLabel=MplsLabel, hh3cMplsLdpObjects=hh3cMplsLdpObjects, hh3cMplsLdpSessionObjects=hh3cMplsLdpSessionObjects, hh3cMplsLdpCrlspTnlExcessBurstSize=hh3cMplsLdpCrlspTnlExcessBurstSize, AtmVpIdentifier=AtmVpIdentifier, hh3cMplsLdpLsrPathVectorLimit=hh3cMplsLdpLsrPathVectorLimit, hh3cMplsLdpPeerLabelDistributionMethod=hh3cMplsLdpPeerLabelDistributionMethod, PhysAddress=PhysAddress, hh3cMplsLdpLsrMaxRemotePeers=hh3cMplsLdpLsrMaxRemotePeers, hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVPI=hh3cMplsLdpEntityConfAtmLabelRangeUpperBoundVPI, hh3cMplsLdpLsrMaxLsps=hh3cMplsLdpLsrMaxLsps, hh3cMplsLdpLsrMaxLocalPeers=hh3cMplsLdpLsrMaxLocalPeers, hh3cMplsLdpSessionAtmLabelRangeUpperBoundVCI=hh3cMplsLdpSessionAtmLabelRangeUpperBoundVCI, hh3cMplsLdpHelloAdjacencyObjects=hh3cMplsLdpHelloAdjacencyObjects, hh3cMplsLdpLsrLoopPreventionPresent=hh3cMplsLdpLsrLoopPreventionPresent, hh3cMplsLdpIncarnUpEventFailure=hh3cMplsLdpIncarnUpEventFailure, hh3cMplsLdpPeerConfAtmLabelRangeTable=hh3cMplsLdpPeerConfAtmLabelRangeTable, hh3cMplsLdpCrlspTnlFrequency=hh3cMplsLdpCrlspTnlFrequency, hh3cMplsLdpEntityIfTable=hh3cMplsLdpEntityIfTable, hh3cMplsLdpPeerType=hh3cMplsLdpPeerType, hh3cMplsLdpPeerObjects=hh3cMplsLdpPeerObjects, hh3cMplsLdpLsrLoopDetectionAdminStatus=hh3cMplsLdpLsrLoopDetectionAdminStatus, hh3cMplsLdpEntityFailedInitSessionThreshold=hh3cMplsLdpEntityFailedInitSessionThreshold, hh3cMplsLdpPeerInternetworkAddr=hh3cMplsLdpPeerInternetworkAddr, hh3cMplsLdpHelloAdjacencyIndex=hh3cMplsLdpHelloAdjacencyIndex, hh3cMplsLdpSessionAtmLabelRangeLowerBoundVPI=hh3cMplsLdpSessionAtmLabelRangeLowerBoundVPI, MplsLsrIdentifier=MplsLsrIdentifier, hh3cMplsLdpCrlspErHopRowStatus=hh3cMplsLdpCrlspErHopRowStatus, hh3cMplsLdpSessionID=hh3cMplsLdpSessionID, hh3cMplsLdpLsrLoopDetectionPresent=hh3cMplsLdpLsrLoopDetectionPresent, hh3cMplsLdpEntityTable=hh3cMplsLdpEntityTable, hh3cMplsLdpCrlspTnlSetupPrio=hh3cMplsLdpCrlspTnlSetupPrio, hh3cMplsLdpPeerConfAtmLabelRangeEntry=hh3cMplsLdpPeerConfAtmLabelRangeEntry, hh3cMplsLdpCrlspErHopIpv4PrefixLen=hh3cMplsLdpCrlspErHopIpv4PrefixLen, DisplayString=DisplayString, hh3cMplsLdpSessionState=hh3cMplsLdpSessionState, hh3cMplsLdpSessionEntry=hh3cMplsLdpSessionEntry, hh3cMplsLdpLsrLabelRetentionMode=hh3cMplsLdpLsrLabelRetentionMode, hh3cMplsLdpCrlspTunnelSetupFailure=hh3cMplsLdpCrlspTunnelSetupFailure, hh3cMplsLdpSessionUpEventFailure=hh3cMplsLdpSessionUpEventFailure, hh3cMplsLdpEntityLabelDistributionMethod=hh3cMplsLdpEntityLabelDistributionMethod, hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVCI=hh3cMplsLdpEntityConfAtmLabelRangeLowerBoundVCI, hh3cMplsLdpEntityHelloHoldTimer=hh3cMplsLdpEntityHelloHoldTimer, hh3cMplsLdpEntityIfEntry=hh3cMplsLdpEntityIfEntry, hh3cMplsLdpEntityConfAtmLabelRangeEntry=hh3cMplsLdpEntityConfAtmLabelRangeEntry, hh3cMplsLdpCrlspTnlCommittedBurstSize=hh3cMplsLdpCrlspTnlCommittedBurstSize, hh3cMplsLdpPeerKeepAliveHoldTimer=hh3cMplsLdpPeerKeepAliveHoldTimer, hh3cMplsLdpEntityIfRowStatus=hh3cMplsLdpEntityIfRowStatus, hh3cMplsLdpCrlspErHopStrictOrLoose=hh3cMplsLdpCrlspErHopStrictOrLoose, hh3cMplsLdpSessionAtmLabelRangeUpperBoundVPI=hh3cMplsLdpSessionAtmLabelRangeUpperBoundVPI, hh3cMplsLdpEntityKeepAliveHoldTimer=hh3cMplsLdpEntityKeepAliveHoldTimer, hh3cMplsLdpSessionProtocolVersion=hh3cMplsLdpSessionProtocolVersion, hh3cMplsLdpLsrIncarnEntry=hh3cMplsLdpLsrIncarnEntry, hh3cMplsLdpCrlspTunnelUp=hh3cMplsLdpCrlspTunnelUp, hh3cMplsLdpEntityUnlabTrafVci=hh3cMplsLdpEntityUnlabTrafVci, hh3cMplsLdpEntityMtu=hh3cMplsLdpEntityMtu, MplsTunnelIndex=MplsTunnelIndex, hh3cMplsLdpSessionDownEventFailure=hh3cMplsLdpSessionDownEventFailure, hh3cMplsLdpCrlspErHopIndex=hh3cMplsLdpCrlspErHopIndex, hh3cMplsLdpSessionKeepAliveHoldTimeRemaining=hh3cMplsLdpSessionKeepAliveHoldTimeRemaining, hh3cMplsLdpLsrHopCountLimit=hh3cMplsLdpLsrHopCountLimit, hh3cMplsLdpCrlspTnlPeakBurstSize=hh3cMplsLdpCrlspTnlPeakBurstSize, hh3cMplsLdpHelloAdjacencyHoldTimeRemaining=hh3cMplsLdpHelloAdjacencyHoldTimeRemaining, hh3cMplsLdpLsrObjects=hh3cMplsLdpLsrObjects)
