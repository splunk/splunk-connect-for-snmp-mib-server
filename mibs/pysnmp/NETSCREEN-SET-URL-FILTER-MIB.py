#
# PySNMP MIB module NETSCREEN-SET-URL-FILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-SET-URL-FILTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
netscreenSetting, netscreenSettingMibModule = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSetting", "netscreenSettingMibModule")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Integer32, TimeTicks, Bits, MibIdentifier, ModuleIdentity, iso, Unsigned32, Counter32, NotificationType, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "TimeTicks", "Bits", "MibIdentifier", "ModuleIdentity", "iso", "Unsigned32", "Counter32", "NotificationType", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenSetUrlFilterMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 7, 0, 4))
netscreenSetUrlFilterMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-12 00:00', '2001-09-28 00:00', '2001-05-27 00:00',))
if mibBuilder.loadTexts: netscreenSetUrlFilterMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenSetUrlFilterMibModule.setOrganization('Juniper Networks, Inc.')
nsSetURLFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 7, 4))
nsSetUrlFilterViaWebsense = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlFilterViaWebsense.setStatus('current')
nsSetUrlServerName = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlServerName.setStatus('current')
nsSetUrlServerPort = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlServerPort.setStatus('current')
nsSetUrlCommTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlCommTimeout.setStatus('current')
nsSetUrlServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("not-applicable", 0), ("running", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlServerStatus.setStatus('current')
nsSetUrlSerLostHdlWay = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block-all", 0), ("permit-all", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlSerLostHdlWay.setStatus('current')
nsSetUrlBlockMsgType = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("websense", 0), ("netscreen", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlBlockMsgType.setStatus('current')
nsSetUrlNsBlockMsg = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 4, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 220))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetUrlNsBlockMsg.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-SET-URL-FILTER-MIB", nsSetUrlServerPort=nsSetUrlServerPort, nsSetUrlServerStatus=nsSetUrlServerStatus, nsSetUrlBlockMsgType=nsSetUrlBlockMsgType, netscreenSetUrlFilterMibModule=netscreenSetUrlFilterMibModule, nsSetUrlServerName=nsSetUrlServerName, PYSNMP_MODULE_ID=netscreenSetUrlFilterMibModule, nsSetURLFilter=nsSetURLFilter, nsSetUrlFilterViaWebsense=nsSetUrlFilterViaWebsense, nsSetUrlSerLostHdlWay=nsSetUrlSerLostHdlWay, nsSetUrlNsBlockMsg=nsSetUrlNsBlockMsg, nsSetUrlCommTimeout=nsSetUrlCommTimeout)
