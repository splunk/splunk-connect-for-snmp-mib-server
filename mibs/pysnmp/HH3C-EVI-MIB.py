#
# PySNMP MIB module HH3C-EVI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-EVI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
IsisSystemID, = mibBuilder.importSymbols("ISIS-MIB", "IsisSystemID")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, ModuleIdentity, TimeTicks, Unsigned32, Counter32, Integer32, ObjectIdentity, MibIdentifier, Gauge32, Counter64, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ModuleIdentity", "TimeTicks", "Unsigned32", "Counter32", "Integer32", "ObjectIdentity", "MibIdentifier", "Gauge32", "Counter64", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
MacAddress, TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
hh3cEvi = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 132))
hh3cEvi.setRevisions(('2013-04-28 00:00',))
if mibBuilder.loadTexts: hh3cEvi.setLastUpdated('201304280000Z')
if mibBuilder.loadTexts: hh3cEvi.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cEviNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 0))
hh3cEviObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1))
hh3cEviBase = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 1))
hh3cEviIf = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2))
hh3cEviMac = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3))
hh3cEviProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4))
hh3cEviISIS = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5))
hh3cEviEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 6))
hh3cEviNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7))
class Hh3cEviMacType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("dynamic", 2), ("static", 3), ("flood", 4))

class Hh3cEviNeighborStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

hh3cEviDesignatedVlan = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 1, 1), VlanId().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviDesignatedVlan.setStatus('current')
hh3cEviSiteID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviSiteID.setStatus('current')
hh3cEviIfExtendVlanTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cEviIfExtendVlanTable.setStatus('current')
hh3cEviIfExtendVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviIfExtendVlanIndex"))
if mibBuilder.loadTexts: hh3cEviIfExtendVlanEntry.setStatus('current')
hh3cEviIfExtendVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 1, 1, 1), VlanId())
if mibBuilder.loadTexts: hh3cEviIfExtendVlanIndex.setStatus('current')
hh3cEviIfExtendVlanLAV = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviIfExtendVlanLAV.setStatus('current')
hh3cEviIfExtendVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEviIfExtendVlanRowStatus.setStatus('current')
hh3cEviIfVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cEviIfVlanMappingTable.setStatus('current')
hh3cEviIfVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviIfVlanMappingSiteId"), (0, "HH3C-EVI-MIB", "hh3cEviIfVlanMappingSrc"), (0, "HH3C-EVI-MIB", "hh3cEviIfVlanMappingDst"))
if mibBuilder.loadTexts: hh3cEviIfVlanMappingEntry.setStatus('current')
hh3cEviIfVlanMappingSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hh3cEviIfVlanMappingSiteId.setStatus('current')
hh3cEviIfVlanMappingSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 2, 1, 2), VlanId())
if mibBuilder.loadTexts: hh3cEviIfVlanMappingSrc.setStatus('current')
hh3cEviIfVlanMappingDst = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 2, 1, 3), VlanId())
if mibBuilder.loadTexts: hh3cEviIfVlanMappingDst.setStatus('current')
hh3cEviIfVlanMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEviIfVlanMappingRowStatus.setStatus('current')
hh3cEviIfAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cEviIfAttributeTable.setStatus('current')
hh3cEviIfAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cEviIfAttributeEntry.setStatus('current')
hh3cEviIfFloodingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviIfFloodingMode.setStatus('current')
hh3cEviIfARPSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviIfARPSuppression.setStatus('current')
hh3cEviIfFloodingMacTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 4), )
if mibBuilder.loadTexts: hh3cEviIfFloodingMacTable.setStatus('current')
hh3cEviIfFloodingMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviIfFloodingMacAddress"), (0, "HH3C-EVI-MIB", "hh3cEviIfFloodMacVlanIndex"))
if mibBuilder.loadTexts: hh3cEviIfFloodingMacEntry.setStatus('current')
hh3cEviIfFloodingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cEviIfFloodingMacAddress.setStatus('current')
hh3cEviIfFloodMacVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 4, 1, 2), VlanId())
if mibBuilder.loadTexts: hh3cEviIfFloodMacVlanIndex.setStatus('current')
hh3cEviIfFloodingMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEviIfFloodingMacRowStatus.setStatus('current')
hh3cEviMacCountTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 1), )
if mibBuilder.loadTexts: hh3cEviMacCountTable.setStatus('current')
hh3cEviMacCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cEviMacCountEntry.setStatus('current')
hh3cEviMacLocalMacs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacLocalMacs.setStatus('current')
hh3cEviMacLocalConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacLocalConflicts.setStatus('current')
hh3cEviMacRemoteMacs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacRemoteMacs.setStatus('current')
hh3cEviMacRemoteConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacRemoteConflicts.setStatus('current')
hh3cEviMacLocalTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 2), )
if mibBuilder.loadTexts: hh3cEviMacLocalTable.setStatus('current')
hh3cEviMacLocalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviMacLocalVlan"), (0, "HH3C-EVI-MIB", "hh3cEviMacLocalMacAddr"))
if mibBuilder.loadTexts: hh3cEviMacLocalEntry.setStatus('current')
hh3cEviMacLocalVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: hh3cEviMacLocalVlan.setStatus('current')
hh3cEviMacLocalMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cEviMacLocalMacAddr.setStatus('current')
hh3cEviMacLocalMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 2, 1, 3), Hh3cEviMacType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacLocalMacType.setStatus('current')
hh3cEviMacLocalConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacLocalConflict.setStatus('current')
hh3cEviMacLocalFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacLocalFiltered.setStatus('current')
hh3cEviMacRemoteTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 3), )
if mibBuilder.loadTexts: hh3cEviMacRemoteTable.setStatus('current')
hh3cEviMacRemoteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviMacRemoteVlan"), (0, "HH3C-EVI-MIB", "hh3cEviMacRemoteMacAddr"))
if mibBuilder.loadTexts: hh3cEviMacRemoteEntry.setStatus('current')
hh3cEviMacRemoteVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 3, 1, 1), VlanId())
if mibBuilder.loadTexts: hh3cEviMacRemoteVlan.setStatus('current')
hh3cEviMacRemoteMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 3, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cEviMacRemoteMacAddr.setStatus('current')
hh3cEviMacRemoteMacEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacRemoteMacEffect.setStatus('current')
hh3cEviMacRemoteConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 3, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviMacRemoteConflict.setStatus('current')
hh3cEviProcessPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 1), )
if mibBuilder.loadTexts: hh3cEviProcessPolicyTable.setStatus('current')
hh3cEviProcessPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 1, 1), ).setIndexNames((0, "HH3C-EVI-MIB", "hh3cEviProcessId"))
if mibBuilder.loadTexts: hh3cEviProcessPolicyEntry.setStatus('current')
hh3cEviProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cEviProcessId.setStatus('current')
hh3cEviProcessPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviProcessPolicy.setStatus('current')
hh3cEviProcessGrTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 2), )
if mibBuilder.loadTexts: hh3cEviProcessGrTable.setStatus('current')
hh3cEviProcessGrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 2, 1), ).setIndexNames((0, "HH3C-EVI-MIB", "hh3cEviProcessId"))
if mibBuilder.loadTexts: hh3cEviProcessGrEntry.setStatus('current')
hh3cEviProcessGrEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviProcessGrEnable.setStatus('current')
hh3cEviProcessGrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 1800)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviProcessGrInterval.setStatus('current')
hh3cEviProcessVSysTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 3), )
if mibBuilder.loadTexts: hh3cEviProcessVSysTable.setStatus('current')
hh3cEviProcessVSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 3, 1), ).setIndexNames((0, "HH3C-EVI-MIB", "hh3cEviProcessId"), (0, "HH3C-EVI-MIB", "hh3cEviVirtualSysId"))
if mibBuilder.loadTexts: hh3cEviProcessVSysEntry.setStatus('current')
hh3cEviVirtualSysId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 3, 1, 1), IsisSystemID())
if mibBuilder.loadTexts: hh3cEviVirtualSysId.setStatus('current')
hh3cEviVirtualSysRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEviVirtualSysRowStatus.setStatus('current')
hh3cEviISISNbrSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 1), )
if mibBuilder.loadTexts: hh3cEviISISNbrSummaryTable.setStatus('current')
hh3cEviISISNbrSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 1, 1), ).setIndexNames((0, "HH3C-EVI-MIB", "hh3cEviProcessId"))
if mibBuilder.loadTexts: hh3cEviISISNbrSummaryEntry.setStatus('current')
hh3cEviISISNbrMaxMultiHomes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviISISNbrMaxMultiHomes.setStatus('current')
hh3cEviISISNbrSiteNbrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviISISNbrSiteNbrs.setStatus('current')
hh3cEviISISNbrLinkNbrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviISISNbrLinkNbrs.setStatus('current')
hh3cEviISISNbrTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 2), )
if mibBuilder.loadTexts: hh3cEviISISNbrTable.setStatus('current')
hh3cEviISISNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 2, 1), ).setIndexNames((0, "HH3C-EVI-MIB", "hh3cEviProcessId"), (0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviISISNbrSysId"))
if mibBuilder.loadTexts: hh3cEviISISNbrEntry.setStatus('current')
hh3cEviISISNbrSysId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 2, 1, 1), IsisSystemID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cEviISISNbrSysId.setStatus('current')
hh3cEviISISNbrMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviISISNbrMacAddr.setStatus('current')
hh3cEviISISNbrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviISISNbrSiteId.setStatus('current')
hh3cEviISISNbrTransStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 5, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviISISNbrTransStatus.setStatus('current')
hh3cEviEnableTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 6, 1), )
if mibBuilder.loadTexts: hh3cEviEnableTable.setStatus('current')
hh3cEviEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cEviEnableEntry.setStatus('current')
hh3cEviEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 6, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviEnableStatus.setStatus('current')
hh3cEviNbrBaseTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 1), )
if mibBuilder.loadTexts: hh3cEviNbrBaseTable.setStatus('current')
hh3cEviNbrBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cEviNbrBaseEntry.setStatus('current')
hh3cEviNbrSelfServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviNbrSelfServerStatus.setStatus('current')
hh3cEviNbrAuthPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviNbrAuthPassword.setStatus('current')
hh3cEviNbrClientRegisterInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cEviNbrClientRegisterInterval.setStatus('current')
hh3cEviNbrRemoteServerTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 2), )
if mibBuilder.loadTexts: hh3cEviNbrRemoteServerTable.setStatus('current')
hh3cEviNbrRemoteServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviNbrRemoteServerType"), (0, "HH3C-EVI-MIB", "hh3cEviNbrRemoteServer"))
if mibBuilder.loadTexts: hh3cEviNbrRemoteServerEntry.setStatus('current')
hh3cEviNbrRemoteServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hh3cEviNbrRemoteServerType.setStatus('current')
hh3cEviNbrRemoteServer = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: hh3cEviNbrRemoteServer.setStatus('current')
hh3cEviNbrRemoteServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cEviNbrRemoteServerRowStatus.setStatus('current')
hh3cEviNbrTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 3), )
if mibBuilder.loadTexts: hh3cEviNbrTable.setStatus('current')
hh3cEviNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-EVI-MIB", "hh3cEviNbrAddressType"), (0, "HH3C-EVI-MIB", "hh3cEviNbrAddress"))
if mibBuilder.loadTexts: hh3cEviNbrEntry.setStatus('current')
hh3cEviNbrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hh3cEviNbrAddressType.setStatus('current')
hh3cEviNbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: hh3cEviNbrAddress.setStatus('current')
hh3cEviNbrSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviNbrSystemID.setStatus('current')
hh3cEviNbrExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviNbrExpireTime.setStatus('current')
hh3cEviNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 132, 1, 7, 3, 1, 5), Hh3cEviNeighborStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cEviNbrStatus.setStatus('current')
hh3cEviNewDed = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 132, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("HH3C-EVI-MIB", "hh3cEviProcessId"), ("HH3C-EVI-MIB", "hh3cEviISISNbrSysId"))
if mibBuilder.loadTexts: hh3cEviNewDed.setStatus('current')
hh3cEviSiteEDTopoChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 132, 0, 2)).setObjects(("HH3C-EVI-MIB", "hh3cEviProcessId"), ("HH3C-EVI-MIB", "hh3cEviISISNbrSiteNbrs"))
if mibBuilder.loadTexts: hh3cEviSiteEDTopoChange.setStatus('current')
hh3cEviEDLinkDisconnect = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 132, 0, 3)).setObjects(("HH3C-EVI-MIB", "hh3cEviProcessId"))
if mibBuilder.loadTexts: hh3cEviEDLinkDisconnect.setStatus('current')
mibBuilder.exportSymbols("HH3C-EVI-MIB", hh3cEviNbrRemoteServerEntry=hh3cEviNbrRemoteServerEntry, Hh3cEviNeighborStatus=Hh3cEviNeighborStatus, hh3cEviIfExtendVlanLAV=hh3cEviIfExtendVlanLAV, hh3cEviIfExtendVlanTable=hh3cEviIfExtendVlanTable, hh3cEviProcessGrTable=hh3cEviProcessGrTable, hh3cEviNotifications=hh3cEviNotifications, hh3cEviIfFloodingMacEntry=hh3cEviIfFloodingMacEntry, hh3cEviIfExtendVlanIndex=hh3cEviIfExtendVlanIndex, hh3cEviMacCountEntry=hh3cEviMacCountEntry, hh3cEviMac=hh3cEviMac, hh3cEviNbrRemoteServerRowStatus=hh3cEviNbrRemoteServerRowStatus, hh3cEviIfExtendVlanEntry=hh3cEviIfExtendVlanEntry, hh3cEviISISNbrSummaryTable=hh3cEviISISNbrSummaryTable, hh3cEviVirtualSysId=hh3cEviVirtualSysId, hh3cEviIfVlanMappingEntry=hh3cEviIfVlanMappingEntry, hh3cEviEnableEntry=hh3cEviEnableEntry, hh3cEviMacLocalMacAddr=hh3cEviMacLocalMacAddr, hh3cEviMacLocalVlan=hh3cEviMacLocalVlan, hh3cEviDesignatedVlan=hh3cEviDesignatedVlan, hh3cEviNbr=hh3cEviNbr, hh3cEviISISNbrMacAddr=hh3cEviISISNbrMacAddr, hh3cEviMacLocalFiltered=hh3cEviMacLocalFiltered, hh3cEviNewDed=hh3cEviNewDed, hh3cEviISISNbrEntry=hh3cEviISISNbrEntry, hh3cEviNbrAddress=hh3cEviNbrAddress, hh3cEviISISNbrSysId=hh3cEviISISNbrSysId, hh3cEviMacLocalConflict=hh3cEviMacLocalConflict, hh3cEviIfFloodingMacRowStatus=hh3cEviIfFloodingMacRowStatus, hh3cEviMacRemoteMacs=hh3cEviMacRemoteMacs, hh3cEviProcessId=hh3cEviProcessId, hh3cEviMacRemoteConflict=hh3cEviMacRemoteConflict, hh3cEviIfARPSuppression=hh3cEviIfARPSuppression, hh3cEviMacRemoteConflicts=hh3cEviMacRemoteConflicts, hh3cEviIfFloodingMacAddress=hh3cEviIfFloodingMacAddress, hh3cEviISISNbrTransStatus=hh3cEviISISNbrTransStatus, hh3cEviSiteEDTopoChange=hh3cEviSiteEDTopoChange, hh3cEviSiteID=hh3cEviSiteID, hh3cEviNbrAuthPassword=hh3cEviNbrAuthPassword, Hh3cEviMacType=Hh3cEviMacType, hh3cEviNbrRemoteServerTable=hh3cEviNbrRemoteServerTable, hh3cEviIfVlanMappingDst=hh3cEviIfVlanMappingDst, hh3cEviProcessVSysTable=hh3cEviProcessVSysTable, hh3cEviIfAttributeEntry=hh3cEviIfAttributeEntry, hh3cEviISISNbrTable=hh3cEviISISNbrTable, hh3cEviIfAttributeTable=hh3cEviIfAttributeTable, hh3cEviProcessPolicy=hh3cEviProcessPolicy, hh3cEviVirtualSysRowStatus=hh3cEviVirtualSysRowStatus, PYSNMP_MODULE_ID=hh3cEvi, hh3cEviIfFloodingMode=hh3cEviIfFloodingMode, hh3cEviNbrSystemID=hh3cEviNbrSystemID, hh3cEviMacLocalMacs=hh3cEviMacLocalMacs, hh3cEvi=hh3cEvi, hh3cEviMacCountTable=hh3cEviMacCountTable, hh3cEviMacLocalMacType=hh3cEviMacLocalMacType, hh3cEviNbrBaseTable=hh3cEviNbrBaseTable, hh3cEviObjects=hh3cEviObjects, hh3cEviIfVlanMappingSiteId=hh3cEviIfVlanMappingSiteId, hh3cEviIf=hh3cEviIf, hh3cEviIfFloodingMacTable=hh3cEviIfFloodingMacTable, hh3cEviNbrBaseEntry=hh3cEviNbrBaseEntry, hh3cEviNbrStatus=hh3cEviNbrStatus, hh3cEviProcess=hh3cEviProcess, hh3cEviMacRemoteEntry=hh3cEviMacRemoteEntry, hh3cEviISIS=hh3cEviISIS, hh3cEviProcessGrInterval=hh3cEviProcessGrInterval, hh3cEviMacRemoteMacEffect=hh3cEviMacRemoteMacEffect, hh3cEviNbrExpireTime=hh3cEviNbrExpireTime, hh3cEviNbrRemoteServerType=hh3cEviNbrRemoteServerType, hh3cEviProcessPolicyTable=hh3cEviProcessPolicyTable, hh3cEviProcessPolicyEntry=hh3cEviProcessPolicyEntry, hh3cEviEnableTable=hh3cEviEnableTable, hh3cEviNbrClientRegisterInterval=hh3cEviNbrClientRegisterInterval, hh3cEviNbrTable=hh3cEviNbrTable, hh3cEviNbrRemoteServer=hh3cEviNbrRemoteServer, hh3cEviProcessGrEnable=hh3cEviProcessGrEnable, hh3cEviISISNbrSiteId=hh3cEviISISNbrSiteId, hh3cEviIfVlanMappingRowStatus=hh3cEviIfVlanMappingRowStatus, hh3cEviMacRemoteTable=hh3cEviMacRemoteTable, hh3cEviISISNbrSummaryEntry=hh3cEviISISNbrSummaryEntry, hh3cEviMacRemoteVlan=hh3cEviMacRemoteVlan, hh3cEviMacLocalEntry=hh3cEviMacLocalEntry, hh3cEviISISNbrLinkNbrs=hh3cEviISISNbrLinkNbrs, hh3cEviProcessVSysEntry=hh3cEviProcessVSysEntry, hh3cEviISISNbrMaxMultiHomes=hh3cEviISISNbrMaxMultiHomes, hh3cEviIfFloodMacVlanIndex=hh3cEviIfFloodMacVlanIndex, hh3cEviProcessGrEntry=hh3cEviProcessGrEntry, hh3cEviNbrAddressType=hh3cEviNbrAddressType, hh3cEviIfVlanMappingSrc=hh3cEviIfVlanMappingSrc, hh3cEviMacLocalConflicts=hh3cEviMacLocalConflicts, hh3cEviMacRemoteMacAddr=hh3cEviMacRemoteMacAddr, hh3cEviBase=hh3cEviBase, hh3cEviMacLocalTable=hh3cEviMacLocalTable, hh3cEviISISNbrSiteNbrs=hh3cEviISISNbrSiteNbrs, hh3cEviIfExtendVlanRowStatus=hh3cEviIfExtendVlanRowStatus, hh3cEviNbrSelfServerStatus=hh3cEviNbrSelfServerStatus, hh3cEviEDLinkDisconnect=hh3cEviEDLinkDisconnect, hh3cEviIfVlanMappingTable=hh3cEviIfVlanMappingTable, hh3cEviEnable=hh3cEviEnable, hh3cEviNbrEntry=hh3cEviNbrEntry, hh3cEviEnableStatus=hh3cEviEnableStatus)
