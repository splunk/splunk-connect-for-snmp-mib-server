#
# PySNMP MIB module KEEPALIVED-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/KEEPALIVED-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:54:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddress, InetAddressPrefixLength, InetPortNumber, InetScopeType, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetPortNumber", "InetScopeType", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, NotificationType, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Integer32, ModuleIdentity, TimeTicks, enterprises, ObjectIdentity, Counter64, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Integer32", "ModuleIdentity", "TimeTicks", "enterprises", "ObjectIdentity", "Counter64", "IpAddress", "Unsigned32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
keepalived = ModuleIdentity((1, 3, 6, 1, 4, 1, 9586, 100, 5))
keepalived.setRevisions(('2009-04-08 00:00',))
if mibBuilder.loadTexts: keepalived.setLastUpdated('200904080000Z')
if mibBuilder.loadTexts: keepalived.setOrganization('Keepalived')
debian = MibIdentifier((1, 3, 6, 1, 4, 1, 9586))
project = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100))
class VrrpState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("init", 0), ("backup", 1), ("master", 2), ("fault", 3), ("unknown", 4))

pysmi_global = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1)).setLabel("global")
vrrp = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2))
check = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3))
conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4))
version = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('current')
routerId = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routerId.setStatus('current')
mail = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3))
smtpServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpServerAddressType.setStatus('current')
smtpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpServerAddress.setStatus('current')
smtpServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpServerTimeout.setStatus('current')
emailFrom = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: emailFrom.setStatus('current')
emailTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 5), )
if mibBuilder.loadTexts: emailTable.setStatus('current')
emailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 5, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "emailIndex"))
if mibBuilder.loadTexts: emailEntry.setStatus('current')
emailIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: emailIndex.setStatus('current')
emailAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 3, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: emailAddress.setStatus('current')
trapEnable = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEnable.setStatus('current')
linkBeat = MibScalar((1, 3, 6, 1, 4, 1, 9586, 100, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("netlink", 1), ("polling", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBeat.setStatus('current')
vrrpSyncGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1), )
if mibBuilder.loadTexts: vrrpSyncGroupTable.setStatus('current')
vrrpSyncGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpSyncGroupIndex"))
if mibBuilder.loadTexts: vrrpSyncGroupEntry.setStatus('current')
vrrpSyncGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vrrpSyncGroupIndex.setStatus('current')
vrrpSyncGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupName.setStatus('current')
vrrpSyncGroupState = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 3), VrrpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupState.setStatus('current')
vrrpSyncGroupSmtpAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupSmtpAlert.setStatus('current')
vrrpSyncGroupNotifyExec = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupNotifyExec.setStatus('current')
vrrpSyncGroupScriptMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupScriptMaster.setStatus('current')
vrrpSyncGroupScriptBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupScriptBackup.setStatus('current')
vrrpSyncGroupScriptFault = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupScriptFault.setStatus('current')
vrrpSyncGroupScript = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupScript.setStatus('current')
vrrpSyncGroupMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 2), )
if mibBuilder.loadTexts: vrrpSyncGroupMemberTable.setStatus('current')
vrrpSyncGroupMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 2, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpSyncGroupIndex"), (0, "KEEPALIVED-MIB", "vrrpSyncGroupMemberInstanceIndex"))
if mibBuilder.loadTexts: vrrpSyncGroupMemberEntry.setStatus('current')
vrrpSyncGroupMemberInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vrrpSyncGroupMemberInstanceIndex.setStatus('current')
vrrpSyncGroupMemberName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpSyncGroupMemberName.setStatus('current')
vrrpInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3), )
if mibBuilder.loadTexts: vrrpInstanceTable.setStatus('current')
vrrpInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpInstanceIndex"))
if mibBuilder.loadTexts: vrrpInstanceEntry.setStatus('current')
vrrpInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("static", 0))))
if mibBuilder.loadTexts: vrrpInstanceIndex.setStatus('current')
vrrpInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceName.setStatus('current')
vrrpInstanceVirtualRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceVirtualRouterId.setStatus('current')
vrrpInstanceState = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 4), VrrpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceState.setStatus('current')
vrrpInstanceInitialState = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 5), VrrpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceInitialState.setStatus('current')
vrrpInstanceWantedState = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 6), VrrpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceWantedState.setStatus('current')
vrrpInstanceBasePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrrpInstanceBasePriority.setStatus('current')
vrrpInstanceEffectivePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceEffectivePriority.setStatus('current')
vrrpInstanceVipsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allSet", 1), ("notAllSet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceVipsStatus.setStatus('current')
vrrpInstancePrimaryInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstancePrimaryInterface.setStatus('current')
vrrpInstanceTrackPrimaryIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tracked", 1), ("notTracked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceTrackPrimaryIf.setStatus('current')
vrrpInstanceAdvertisementsInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 12), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceAdvertisementsInt.setStatus('current')
vrrpInstancePreempt = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("preempt", 1), ("noPreempt", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrrpInstancePreempt.setStatus('current')
vrrpInstancePreemptDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 14), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstancePreemptDelay.setStatus('current')
vrrpInstanceAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("password", 1), ("ah", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceAuthType.setStatus('current')
vrrpInstanceLvsSyncDaemon = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceLvsSyncDaemon.setStatus('current')
vrrpInstanceLvsSyncInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceLvsSyncInterface.setStatus('current')
vrrpInstanceSyncGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceSyncGroup.setStatus('current')
vrrpInstanceGarpDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 19), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceGarpDelay.setStatus('current')
vrrpInstanceSmtpAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceSmtpAlert.setStatus('current')
vrrpInstanceNotifyExec = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceNotifyExec.setStatus('current')
vrrpInstanceScriptMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceScriptMaster.setStatus('current')
vrrpInstanceScriptBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceScriptBackup.setStatus('current')
vrrpInstanceScriptFault = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceScriptFault.setStatus('current')
vrrpInstanceScriptStop = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceScriptStop.setStatus('current')
vrrpInstanceScript = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 3, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpInstanceScript.setStatus('current')
vrrpTrackedInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 4), )
if mibBuilder.loadTexts: vrrpTrackedInterfaceTable.setStatus('current')
vrrpTrackedInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 4, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpInstanceIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: vrrpTrackedInterfaceEntry.setStatus('current')
vrrpTrackedInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpTrackedInterfaceName.setStatus('current')
vrrpTrackedInterfaceWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpTrackedInterfaceWeight.setStatus('current')
vrrpTrackedScriptTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 5), )
if mibBuilder.loadTexts: vrrpTrackedScriptTable.setStatus('current')
vrrpTrackedScriptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 5, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpInstanceIndex"), (0, "KEEPALIVED-MIB", "vrrpTrackedScriptIndex"))
if mibBuilder.loadTexts: vrrpTrackedScriptEntry.setStatus('current')
vrrpTrackedScriptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vrrpTrackedScriptIndex.setStatus('current')
vrrpTrackedScriptName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpTrackedScriptName.setStatus('current')
vrrpTrackedScriptWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpTrackedScriptWeight.setStatus('current')
vrrpAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6), )
if mibBuilder.loadTexts: vrrpAddressTable.setStatus('current')
vrrpAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpInstanceIndex"), (0, "KEEPALIVED-MIB", "vrrpAddressIndex"))
if mibBuilder.loadTexts: vrrpAddressEntry.setStatus('current')
vrrpAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vrrpAddressIndex.setStatus('current')
vrrpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressType.setStatus('current')
vrrpAddressValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressValue.setStatus('current')
vrrpAddressBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressBroadcast.setStatus('current')
vrrpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 5), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressMask.setStatus('current')
vrrpAddressScope = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 6), InetScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressScope.setStatus('current')
vrrpAddressIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 7), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressIfIndex.setStatus('current')
vrrpAddressIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressIfName.setStatus('current')
vrrpAddressIfAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressIfAlias.setStatus('current')
vrrpAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("unset", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressStatus.setStatus('current')
vrrpAddressAdvertising = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertised", 1), ("notAdvertised", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpAddressAdvertising.setStatus('current')
vrrpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7), )
if mibBuilder.loadTexts: vrrpRouteTable.setStatus('current')
vrrpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpInstanceIndex"), (0, "KEEPALIVED-MIB", "vrrpRouteIndex"))
if mibBuilder.loadTexts: vrrpRouteEntry.setStatus('current')
vrrpRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vrrpRouteIndex.setStatus('current')
vrrpRouteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteAddressType.setStatus('current')
vrrpRouteDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteDestination.setStatus('current')
vrrpRouteDestinationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 4), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteDestinationMask.setStatus('current')
vrrpRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteGateway.setStatus('current')
vrrpRouteSecondaryGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteSecondaryGateway.setStatus('current')
vrrpRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteSource.setStatus('current')
vrrpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteMetric.setStatus('current')
vrrpRouteScope = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 9), InetScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteScope.setStatus('current')
vrrpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("ecmp", 2), ("blackhole", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteType.setStatus('current')
vrrpRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 11), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteIfIndex.setStatus('current')
vrrpRouteIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteIfName.setStatus('current')
vrrpRouteRoutingTable = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteRoutingTable.setStatus('current')
vrrpRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("unset", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpRouteStatus.setStatus('current')
vrrpScriptTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8), )
if mibBuilder.loadTexts: vrrpScriptTable.setStatus('current')
vrrpScriptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "vrrpScriptIndex"))
if mibBuilder.loadTexts: vrrpScriptEntry.setStatus('current')
vrrpScriptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vrrpScriptIndex.setStatus('current')
vrrpScriptName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpScriptName.setStatus('current')
vrrpScriptCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpScriptCommand.setStatus('current')
vrrpScriptInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 4), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpScriptInterval.setStatus('current')
vrrpScriptWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpScriptWeight.setStatus('current')
vrrpScriptResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("init", 1), ("bad", 2), ("good", 3), ("initgood", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpScriptResult.setStatus('current')
vrrpScriptRise = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpScriptRise.setStatus('current')
vrrpScriptFall = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 8, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrrpScriptFall.setStatus('current')
vrrpTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 9))
vrrpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 9, 0))
vrrpTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 9, 1))
vrrpSyncGroupStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 9, 0, 1)).setObjects(("KEEPALIVED-MIB", "vrrpSyncGroupName"), ("KEEPALIVED-MIB", "vrrpSyncGroupState"))
if mibBuilder.loadTexts: vrrpSyncGroupStateChange.setStatus('current')
vrrpInstanceStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9586, 100, 5, 2, 9, 0, 2)).setObjects(("KEEPALIVED-MIB", "vrrpInstanceName"), ("KEEPALIVED-MIB", "vrrpInstanceState"), ("KEEPALIVED-MIB", "vrrpInstanceInitialState"))
if mibBuilder.loadTexts: vrrpInstanceStateChange.setStatus('current')
virtualServerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 1), )
if mibBuilder.loadTexts: virtualServerGroupTable.setStatus('current')
virtualServerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 1, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "virtualServerGroupIndex"))
if mibBuilder.loadTexts: virtualServerGroupEntry.setStatus('current')
virtualServerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: virtualServerGroupIndex.setStatus('current')
virtualServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupName.setStatus('current')
virtualServerGroupMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2), )
if mibBuilder.loadTexts: virtualServerGroupMemberTable.setStatus('current')
virtualServerGroupMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "virtualServerGroupIndex"), (0, "KEEPALIVED-MIB", "virtualServerGroupMemberIndex"))
if mibBuilder.loadTexts: virtualServerGroupMemberEntry.setStatus('current')
virtualServerGroupMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: virtualServerGroupMemberIndex.setStatus('current')
virtualServerGroupMemberType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fwmark", 1), ("ip", 2), ("iprange", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupMemberType.setStatus('current')
virtualServerGroupMemberFwMark = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupMemberFwMark.setStatus('current')
virtualServerGroupMemberAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupMemberAddrType.setStatus('current')
virtualServerGroupMemberAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupMemberAddress.setStatus('current')
virtualServerGroupMemberAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupMemberAddr1.setStatus('current')
virtualServerGroupMemberAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupMemberAddr2.setStatus('current')
virtualServerGroupMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 2, 1, 8), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerGroupMemberPort.setStatus('current')
virtualServerTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3), )
if mibBuilder.loadTexts: virtualServerTable.setStatus('current')
virtualServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "virtualServerIndex"))
if mibBuilder.loadTexts: virtualServerEntry.setStatus('current')
virtualServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: virtualServerIndex.setStatus('current')
virtualServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fwmark", 1), ("ip", 2), ("group", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerType.setStatus('current')
virtualServerNameOfGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerNameOfGroup.setStatus('current')
virtualServerFwMark = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerFwMark.setStatus('current')
virtualServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerAddrType.setStatus('current')
virtualServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerAddress.setStatus('current')
virtualServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerPort.setStatus('current')
virtualServerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerProtocol.setStatus('current')
virtualServerLoadBalancingAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 99))).clone(namedValues=NamedValues(("rr", 1), ("wrr", 2), ("lc", 3), ("wlc", 4), ("lblc", 5), ("lblcr", 6), ("dh", 7), ("sh", 8), ("sed", 9), ("nq", 10), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerLoadBalancingAlgo.setStatus('current')
virtualServerLoadBalancingKind = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nat", 1), ("dr", 2), ("tun", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerLoadBalancingKind.setStatus('current')
virtualServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alive", 1), ("dead", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerStatus.setStatus('current')
virtualServerVirtualHost = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerVirtualHost.setStatus('current')
virtualServerPersist = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerPersist.setStatus('current')
virtualServerPersistTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 14), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerPersistTimeout.setStatus('current')
virtualServerPersistGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerPersistGranularity.setStatus('current')
virtualServerDelayLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 16), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerDelayLoop.setStatus('current')
virtualServerHaSuspend = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerHaSuspend.setStatus('current')
virtualServerAlpha = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerAlpha.setStatus('current')
virtualServerOmega = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerOmega.setStatus('current')
virtualServerRealServersTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerRealServersTotal.setStatus('current')
virtualServerRealServersUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerRealServersUp.setStatus('current')
virtualServerQuorum = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerQuorum.setStatus('current')
virtualServerQuorumStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("met", 1), ("notMet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerQuorumStatus.setStatus('current')
virtualServerQuorumUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerQuorumUp.setStatus('current')
virtualServerQuorumDown = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerQuorumDown.setStatus('current')
virtualServerHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerHysteresis.setStatus('current')
virtualServerStatsConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 27), Gauge32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerStatsConns.setStatus('current')
virtualServerStatsInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 28), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerStatsInPkts.setStatus('current')
virtualServerStatsOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 29), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerStatsOutPkts.setStatus('current')
virtualServerStatsInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 30), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerStatsInBytes.setStatus('current')
virtualServerStatsOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerStatsOutBytes.setStatus('current')
virtualServerRateCps = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 32), Gauge32()).setUnits('connections/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerRateCps.setStatus('current')
virtualServerRateInPPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 33), Gauge32()).setUnits('packets/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerRateInPPS.setStatus('current')
virtualServerRateOutPPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 34), Gauge32()).setUnits('packets/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerRateOutPPS.setStatus('current')
virtualServerRateInBPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 35), Gauge32()).setUnits('bytes/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerRateInBPS.setStatus('current')
virtualServerRateOutBPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 3, 1, 36), Gauge32()).setUnits('bytes/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualServerRateOutBPS.setStatus('current')
realServerTable = MibTable((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4), )
if mibBuilder.loadTexts: realServerTable.setStatus('current')
realServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1), ).setIndexNames((0, "KEEPALIVED-MIB", "virtualServerIndex"), (0, "KEEPALIVED-MIB", "realServerIndex"))
if mibBuilder.loadTexts: realServerEntry.setStatus('current')
realServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: realServerIndex.setStatus('current')
realServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("regular", 1), ("sorry", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerType.setStatus('current')
realServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerAddrType.setStatus('current')
realServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerAddress.setStatus('current')
realServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 5), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerPort.setStatus('current')
realServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alive", 1), ("dead", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatus.setStatus('current')
realServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realServerWeight.setStatus('current')
realServerUpperConnectionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerUpperConnectionLimit.setStatus('current')
realServerLowerConnectionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerLowerConnectionLimit.setStatus('current')
realServerActionWhenDown = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("remove", 1), ("inhibit", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerActionWhenDown.setStatus('current')
realServerNotifyUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerNotifyUp.setStatus('current')
realServerNotifyDown = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerNotifyDown.setStatus('current')
realServerFailedChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerFailedChecks.setStatus('current')
realServerStatsConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 14), Gauge32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsConns.setStatus('current')
realServerStatsActiveConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 15), Gauge32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsActiveConns.setStatus('current')
realServerStatsInactiveConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 16), Gauge32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsInactiveConns.setStatus('current')
realServerStatsPersistentConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 17), Gauge32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsPersistentConns.setStatus('current')
realServerStatsInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsInPkts.setStatus('current')
realServerStatsOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsOutPkts.setStatus('current')
realServerStatsInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 20), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsInBytes.setStatus('current')
realServerStatsOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 21), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerStatsOutBytes.setStatus('current')
realServerRateCps = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 22), Gauge32()).setUnits('connections/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerRateCps.setStatus('current')
realServerRateInPPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 23), Gauge32()).setUnits('packets/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerRateInPPS.setStatus('current')
realServerRateOutPPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 24), Gauge32()).setUnits('packets/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerRateOutPPS.setStatus('current')
realServerRateInBPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 25), Gauge32()).setUnits('bytes/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerRateInBPS.setStatus('current')
realServerRateOutBPS = MibTableColumn((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 4, 1, 26), Gauge32()).setUnits('bytes/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: realServerRateOutBPS.setStatus('current')
checkTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 5))
checkTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 5, 0))
checkTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 5, 1))
realServerStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 5, 0, 1)).setObjects(("KEEPALIVED-MIB", "realServerAddrType"), ("KEEPALIVED-MIB", "realServerAddress"), ("KEEPALIVED-MIB", "realServerPort"), ("KEEPALIVED-MIB", "realServerStatus"), ("KEEPALIVED-MIB", "virtualServerType"), ("KEEPALIVED-MIB", "virtualServerProtocol"), ("KEEPALIVED-MIB", "virtualServerRealServersUp"), ("KEEPALIVED-MIB", "virtualServerRealServersTotal"))
if mibBuilder.loadTexts: realServerStateChange.setStatus('current')
virtualServerQuorumStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9586, 100, 5, 3, 5, 0, 2)).setObjects(("KEEPALIVED-MIB", "virtualServerType"), ("KEEPALIVED-MIB", "virtualServerProtocol"), ("KEEPALIVED-MIB", "virtualServerQuorumStatus"), ("KEEPALIVED-MIB", "virtualServerQuorum"), ("KEEPALIVED-MIB", "virtualServerRealServersUp"), ("KEEPALIVED-MIB", "virtualServerRealServersTotal"))
if mibBuilder.loadTexts: virtualServerQuorumStateChange.setStatus('current')
compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 1))
groups = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2))
globalCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 1, 1)).setObjects(("KEEPALIVED-MIB", "globalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    globalCompliances = globalCompliances.setStatus('current')
vrrpCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 1, 2)).setObjects(("KEEPALIVED-MIB", "vrrpScriptGroup"), ("KEEPALIVED-MIB", "vrrpSyncGroup"), ("KEEPALIVED-MIB", "vrrpInstanceGroup"), ("KEEPALIVED-MIB", "vrrpTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vrrpCompliances = vrrpCompliances.setStatus('current')
checkCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 1, 3)).setObjects(("KEEPALIVED-MIB", "virtualServerGroupGroup"), ("KEEPALIVED-MIB", "virtualServerGroup"), ("KEEPALIVED-MIB", "realServerGroup"), ("KEEPALIVED-MIB", "checkTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    checkCompliances = checkCompliances.setStatus('current')
globalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 1)).setObjects(("KEEPALIVED-MIB", "version"), ("KEEPALIVED-MIB", "routerId"), ("KEEPALIVED-MIB", "smtpServerAddressType"), ("KEEPALIVED-MIB", "smtpServerAddress"), ("KEEPALIVED-MIB", "smtpServerTimeout"), ("KEEPALIVED-MIB", "emailFrom"), ("KEEPALIVED-MIB", "emailAddress"), ("KEEPALIVED-MIB", "trapEnable"), ("KEEPALIVED-MIB", "linkBeat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    globalGroup = globalGroup.setStatus('current')
vrrpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 2))
vrrpSyncGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 2, 1)).setObjects(("KEEPALIVED-MIB", "vrrpSyncGroupName"), ("KEEPALIVED-MIB", "vrrpSyncGroupState"), ("KEEPALIVED-MIB", "vrrpSyncGroupSmtpAlert"), ("KEEPALIVED-MIB", "vrrpSyncGroupNotifyExec"), ("KEEPALIVED-MIB", "vrrpSyncGroupScriptMaster"), ("KEEPALIVED-MIB", "vrrpSyncGroupScriptBackup"), ("KEEPALIVED-MIB", "vrrpSyncGroupScriptFault"), ("KEEPALIVED-MIB", "vrrpSyncGroupScript"), ("KEEPALIVED-MIB", "vrrpSyncGroupMemberName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vrrpSyncGroup = vrrpSyncGroup.setStatus('current')
vrrpInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 2, 2)).setObjects(("KEEPALIVED-MIB", "vrrpInstanceName"), ("KEEPALIVED-MIB", "vrrpInstanceVirtualRouterId"), ("KEEPALIVED-MIB", "vrrpInstanceState"), ("KEEPALIVED-MIB", "vrrpInstanceInitialState"), ("KEEPALIVED-MIB", "vrrpInstanceWantedState"), ("KEEPALIVED-MIB", "vrrpInstanceBasePriority"), ("KEEPALIVED-MIB", "vrrpInstanceEffectivePriority"), ("KEEPALIVED-MIB", "vrrpInstanceVipsStatus"), ("KEEPALIVED-MIB", "vrrpInstancePrimaryInterface"), ("KEEPALIVED-MIB", "vrrpInstanceTrackPrimaryIf"), ("KEEPALIVED-MIB", "vrrpInstanceAdvertisementsInt"), ("KEEPALIVED-MIB", "vrrpInstancePreempt"), ("KEEPALIVED-MIB", "vrrpInstancePreemptDelay"), ("KEEPALIVED-MIB", "vrrpInstanceAuthType"), ("KEEPALIVED-MIB", "vrrpInstanceLvsSyncDaemon"), ("KEEPALIVED-MIB", "vrrpInstanceLvsSyncInterface"), ("KEEPALIVED-MIB", "vrrpInstanceSyncGroup"), ("KEEPALIVED-MIB", "vrrpInstanceGarpDelay"), ("KEEPALIVED-MIB", "vrrpInstanceSmtpAlert"), ("KEEPALIVED-MIB", "vrrpInstanceNotifyExec"), ("KEEPALIVED-MIB", "vrrpInstanceScriptMaster"), ("KEEPALIVED-MIB", "vrrpInstanceScriptBackup"), ("KEEPALIVED-MIB", "vrrpInstanceScriptFault"), ("KEEPALIVED-MIB", "vrrpInstanceScriptStop"), ("KEEPALIVED-MIB", "vrrpInstanceScript"), ("KEEPALIVED-MIB", "vrrpTrackedInterfaceName"), ("KEEPALIVED-MIB", "vrrpTrackedInterfaceWeight"), ("KEEPALIVED-MIB", "vrrpTrackedScriptName"), ("KEEPALIVED-MIB", "vrrpTrackedScriptWeight"), ("KEEPALIVED-MIB", "vrrpAddressType"), ("KEEPALIVED-MIB", "vrrpAddressValue"), ("KEEPALIVED-MIB", "vrrpAddressBroadcast"), ("KEEPALIVED-MIB", "vrrpAddressMask"), ("KEEPALIVED-MIB", "vrrpAddressScope"), ("KEEPALIVED-MIB", "vrrpAddressIfIndex"), ("KEEPALIVED-MIB", "vrrpAddressIfName"), ("KEEPALIVED-MIB", "vrrpAddressIfAlias"), ("KEEPALIVED-MIB", "vrrpAddressStatus"), ("KEEPALIVED-MIB", "vrrpAddressAdvertising"), ("KEEPALIVED-MIB", "vrrpRouteAddressType"), ("KEEPALIVED-MIB", "vrrpRouteDestination"), ("KEEPALIVED-MIB", "vrrpRouteDestinationMask"), ("KEEPALIVED-MIB", "vrrpRouteGateway"), ("KEEPALIVED-MIB", "vrrpRouteSecondaryGateway"), ("KEEPALIVED-MIB", "vrrpRouteSource"), ("KEEPALIVED-MIB", "vrrpRouteMetric"), ("KEEPALIVED-MIB", "vrrpRouteScope"), ("KEEPALIVED-MIB", "vrrpRouteType"), ("KEEPALIVED-MIB", "vrrpRouteIfIndex"), ("KEEPALIVED-MIB", "vrrpRouteIfName"), ("KEEPALIVED-MIB", "vrrpRouteRoutingTable"), ("KEEPALIVED-MIB", "vrrpRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vrrpInstanceGroup = vrrpInstanceGroup.setStatus('current')
vrrpScriptGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 2, 3)).setObjects(("KEEPALIVED-MIB", "vrrpScriptName"), ("KEEPALIVED-MIB", "vrrpScriptCommand"), ("KEEPALIVED-MIB", "vrrpScriptInterval"), ("KEEPALIVED-MIB", "vrrpScriptWeight"), ("KEEPALIVED-MIB", "vrrpScriptResult"), ("KEEPALIVED-MIB", "vrrpScriptRise"), ("KEEPALIVED-MIB", "vrrpScriptFall"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vrrpScriptGroup = vrrpScriptGroup.setStatus('current')
vrrpTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 2, 4)).setObjects(("KEEPALIVED-MIB", "vrrpSyncGroupStateChange"), ("KEEPALIVED-MIB", "vrrpInstanceStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vrrpTrapsGroup = vrrpTrapsGroup.setStatus('current')
checkGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 3))
virtualServerGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 3, 1)).setObjects(("KEEPALIVED-MIB", "virtualServerGroupName"), ("KEEPALIVED-MIB", "virtualServerGroupMemberType"), ("KEEPALIVED-MIB", "virtualServerGroupMemberFwMark"), ("KEEPALIVED-MIB", "virtualServerGroupMemberAddrType"), ("KEEPALIVED-MIB", "virtualServerGroupMemberAddress"), ("KEEPALIVED-MIB", "virtualServerGroupMemberAddr1"), ("KEEPALIVED-MIB", "virtualServerGroupMemberAddr2"), ("KEEPALIVED-MIB", "virtualServerGroupMemberPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    virtualServerGroupGroup = virtualServerGroupGroup.setStatus('current')
virtualServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 3, 2)).setObjects(("KEEPALIVED-MIB", "virtualServerType"), ("KEEPALIVED-MIB", "virtualServerNameOfGroup"), ("KEEPALIVED-MIB", "virtualServerFwMark"), ("KEEPALIVED-MIB", "virtualServerAddrType"), ("KEEPALIVED-MIB", "virtualServerAddress"), ("KEEPALIVED-MIB", "virtualServerPort"), ("KEEPALIVED-MIB", "virtualServerProtocol"), ("KEEPALIVED-MIB", "virtualServerLoadBalancingAlgo"), ("KEEPALIVED-MIB", "virtualServerLoadBalancingKind"), ("KEEPALIVED-MIB", "virtualServerStatus"), ("KEEPALIVED-MIB", "virtualServerVirtualHost"), ("KEEPALIVED-MIB", "virtualServerPersist"), ("KEEPALIVED-MIB", "virtualServerPersistTimeout"), ("KEEPALIVED-MIB", "virtualServerPersistGranularity"), ("KEEPALIVED-MIB", "virtualServerDelayLoop"), ("KEEPALIVED-MIB", "virtualServerHaSuspend"), ("KEEPALIVED-MIB", "virtualServerAlpha"), ("KEEPALIVED-MIB", "virtualServerOmega"), ("KEEPALIVED-MIB", "virtualServerRealServersTotal"), ("KEEPALIVED-MIB", "virtualServerRealServersUp"), ("KEEPALIVED-MIB", "virtualServerQuorum"), ("KEEPALIVED-MIB", "virtualServerQuorumStatus"), ("KEEPALIVED-MIB", "virtualServerQuorumUp"), ("KEEPALIVED-MIB", "virtualServerQuorumDown"), ("KEEPALIVED-MIB", "virtualServerHysteresis"), ("KEEPALIVED-MIB", "virtualServerStatsConns"), ("KEEPALIVED-MIB", "virtualServerStatsInPkts"), ("KEEPALIVED-MIB", "virtualServerStatsOutPkts"), ("KEEPALIVED-MIB", "virtualServerStatsInBytes"), ("KEEPALIVED-MIB", "virtualServerStatsOutBytes"), ("KEEPALIVED-MIB", "virtualServerRateCps"), ("KEEPALIVED-MIB", "virtualServerRateInPPS"), ("KEEPALIVED-MIB", "virtualServerRateOutPPS"), ("KEEPALIVED-MIB", "virtualServerRateInBPS"), ("KEEPALIVED-MIB", "virtualServerRateOutBPS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    virtualServerGroup = virtualServerGroup.setStatus('current')
realServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 3, 3)).setObjects(("KEEPALIVED-MIB", "realServerType"), ("KEEPALIVED-MIB", "realServerAddrType"), ("KEEPALIVED-MIB", "realServerAddress"), ("KEEPALIVED-MIB", "realServerPort"), ("KEEPALIVED-MIB", "realServerStatus"), ("KEEPALIVED-MIB", "realServerWeight"), ("KEEPALIVED-MIB", "realServerUpperConnectionLimit"), ("KEEPALIVED-MIB", "realServerLowerConnectionLimit"), ("KEEPALIVED-MIB", "realServerActionWhenDown"), ("KEEPALIVED-MIB", "realServerNotifyUp"), ("KEEPALIVED-MIB", "realServerNotifyDown"), ("KEEPALIVED-MIB", "realServerFailedChecks"), ("KEEPALIVED-MIB", "realServerStatsConns"), ("KEEPALIVED-MIB", "realServerStatsActiveConns"), ("KEEPALIVED-MIB", "realServerStatsInactiveConns"), ("KEEPALIVED-MIB", "realServerStatsPersistentConns"), ("KEEPALIVED-MIB", "realServerStatsInPkts"), ("KEEPALIVED-MIB", "realServerStatsOutPkts"), ("KEEPALIVED-MIB", "realServerStatsInBytes"), ("KEEPALIVED-MIB", "realServerStatsOutBytes"), ("KEEPALIVED-MIB", "realServerRateCps"), ("KEEPALIVED-MIB", "realServerRateInPPS"), ("KEEPALIVED-MIB", "realServerRateOutPPS"), ("KEEPALIVED-MIB", "realServerRateInBPS"), ("KEEPALIVED-MIB", "realServerRateOutBPS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    realServerGroup = realServerGroup.setStatus('current')
checkTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9586, 100, 5, 4, 2, 3, 4)).setObjects(("KEEPALIVED-MIB", "realServerStateChange"), ("KEEPALIVED-MIB", "virtualServerQuorumStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    checkTrapsGroup = checkTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("KEEPALIVED-MIB", virtualServerQuorumUp=virtualServerQuorumUp, globalGroup=globalGroup, vrrpInstanceSmtpAlert=vrrpInstanceSmtpAlert, vrrpRouteDestinationMask=vrrpRouteDestinationMask, virtualServerGroupMemberFwMark=virtualServerGroupMemberFwMark, virtualServerQuorumStateChange=virtualServerQuorumStateChange, virtualServerHaSuspend=virtualServerHaSuspend, vrrpAddressType=vrrpAddressType, virtualServerGroupTable=virtualServerGroupTable, vrrpSyncGroupMemberInstanceIndex=vrrpSyncGroupMemberInstanceIndex, vrrpInstanceEffectivePriority=vrrpInstanceEffectivePriority, smtpServerAddressType=smtpServerAddressType, vrrpSyncGroupTable=vrrpSyncGroupTable, virtualServerGroupMemberType=virtualServerGroupMemberType, virtualServerGroupMemberIndex=virtualServerGroupMemberIndex, realServerStatsInactiveConns=realServerStatsInactiveConns, vrrpInstanceWantedState=vrrpInstanceWantedState, linkBeat=linkBeat, virtualServerProtocol=virtualServerProtocol, virtualServerPersist=virtualServerPersist, vrrpRouteEntry=vrrpRouteEntry, vrrpAddressIndex=vrrpAddressIndex, vrrpInstanceName=vrrpInstanceName, virtualServerDelayLoop=virtualServerDelayLoop, realServerFailedChecks=realServerFailedChecks, PYSNMP_MODULE_ID=keepalived, vrrpInstanceBasePriority=vrrpInstanceBasePriority, realServerRateOutBPS=realServerRateOutBPS, vrrpInstanceState=vrrpInstanceState, vrrpSyncGroupSmtpAlert=vrrpSyncGroupSmtpAlert, trapEnable=trapEnable, vrrpRouteScope=vrrpRouteScope, vrrpRouteTable=vrrpRouteTable, realServerStatsOutBytes=realServerStatsOutBytes, vrrpRouteSource=vrrpRouteSource, vrrpRouteDestination=vrrpRouteDestination, virtualServerQuorumStatus=virtualServerQuorumStatus, virtualServerGroup=virtualServerGroup, project=project, vrrp=vrrp, vrrpSyncGroupMemberName=vrrpSyncGroupMemberName, virtualServerPort=virtualServerPort, vrrpTrapsGroup=vrrpTrapsGroup, vrrpScriptName=vrrpScriptName, vrrpAddressScope=vrrpAddressScope, vrrpInstanceTrackPrimaryIf=vrrpInstanceTrackPrimaryIf, virtualServerGroupIndex=virtualServerGroupIndex, virtualServerQuorum=virtualServerQuorum, vrrpRouteType=vrrpRouteType, vrrpTrackedScriptIndex=vrrpTrackedScriptIndex, virtualServerQuorumDown=virtualServerQuorumDown, virtualServerLoadBalancingAlgo=virtualServerLoadBalancingAlgo, checkTraps=checkTraps, realServerGroup=realServerGroup, vrrpTrackedInterfaceName=vrrpTrackedInterfaceName, vrrpSyncGroupScript=vrrpSyncGroupScript, vrrpSyncGroupState=vrrpSyncGroupState, vrrpRouteIndex=vrrpRouteIndex, vrrpTrackedScriptName=vrrpTrackedScriptName, realServerLowerConnectionLimit=realServerLowerConnectionLimit, realServerRateInPPS=realServerRateInPPS, virtualServerEntry=virtualServerEntry, realServerStatus=realServerStatus, vrrpInstanceNotifyExec=vrrpInstanceNotifyExec, emailAddress=emailAddress, realServerRateCps=realServerRateCps, check=check, virtualServerGroupMemberTable=virtualServerGroupMemberTable, vrrpRouteMetric=vrrpRouteMetric, realServerAddrType=realServerAddrType, realServerNotifyUp=realServerNotifyUp, vrrpAddressIfAlias=vrrpAddressIfAlias, realServerType=realServerType, vrrpTrackedScriptEntry=vrrpTrackedScriptEntry, virtualServerRateInPPS=virtualServerRateInPPS, vrrpInstanceAdvertisementsInt=vrrpInstanceAdvertisementsInt, debian=debian, vrrpInstanceScriptMaster=vrrpInstanceScriptMaster, vrrpAddressEntry=vrrpAddressEntry, virtualServerPersistTimeout=virtualServerPersistTimeout, pysmi_global=pysmi_global, vrrpAddressAdvertising=vrrpAddressAdvertising, vrrpSyncGroup=vrrpSyncGroup, virtualServerStatsConns=virtualServerStatsConns, vrrpScriptIndex=vrrpScriptIndex, virtualServerPersistGranularity=virtualServerPersistGranularity, virtualServerGroupMemberPort=virtualServerGroupMemberPort, version=version, vrrpInstanceLvsSyncInterface=vrrpInstanceLvsSyncInterface, virtualServerStatsOutBytes=virtualServerStatsOutBytes, vrrpScriptCommand=vrrpScriptCommand, vrrpScriptRise=vrrpScriptRise, checkCompliances=checkCompliances, compliances=compliances, vrrpInstanceSyncGroup=vrrpInstanceSyncGroup, emailEntry=emailEntry, vrrpRouteGateway=vrrpRouteGateway, realServerAddress=realServerAddress, virtualServerStatsInBytes=virtualServerStatsInBytes, vrrpSyncGroupScriptBackup=vrrpSyncGroupScriptBackup, vrrpRouteAddressType=vrrpRouteAddressType, vrrpInstanceGarpDelay=vrrpInstanceGarpDelay, vrrpSyncGroupScriptMaster=vrrpSyncGroupScriptMaster, vrrpInstanceTable=vrrpInstanceTable, vrrpInstanceScriptStop=vrrpInstanceScriptStop, vrrpScriptWeight=vrrpScriptWeight, vrrpAddressIfName=vrrpAddressIfName, vrrpInstanceVipsStatus=vrrpInstanceVipsStatus, globalCompliances=globalCompliances, vrrpInstanceVirtualRouterId=vrrpInstanceVirtualRouterId, virtualServerStatus=virtualServerStatus, realServerStatsOutPkts=realServerStatsOutPkts, realServerStatsInBytes=realServerStatsInBytes, vrrpAddressMask=vrrpAddressMask, virtualServerRateCps=virtualServerRateCps, keepalived=keepalived, vrrpInstanceLvsSyncDaemon=vrrpInstanceLvsSyncDaemon, vrrpSyncGroupIndex=vrrpSyncGroupIndex, virtualServerType=virtualServerType, realServerStatsInPkts=realServerStatsInPkts, realServerTable=realServerTable, vrrpCompliances=vrrpCompliances, vrrpScriptFall=vrrpScriptFall, vrrpAddressTable=vrrpAddressTable, checkTrapControl=checkTrapControl, realServerStatsConns=realServerStatsConns, virtualServerVirtualHost=virtualServerVirtualHost, vrrpScriptEntry=vrrpScriptEntry, vrrpTrackedScriptTable=vrrpTrackedScriptTable, vrrpAddressValue=vrrpAddressValue, checkTrapsGroup=checkTrapsGroup, vrrpTraps=vrrpTraps, emailFrom=emailFrom, virtualServerNameOfGroup=virtualServerNameOfGroup, virtualServerStatsInPkts=virtualServerStatsInPkts, realServerActionWhenDown=realServerActionWhenDown, realServerRateOutPPS=realServerRateOutPPS, vrrpScriptGroup=vrrpScriptGroup, virtualServerLoadBalancingKind=virtualServerLoadBalancingKind, virtualServerGroupGroup=virtualServerGroupGroup, virtualServerOmega=virtualServerOmega, virtualServerFwMark=virtualServerFwMark, virtualServerGroupMemberEntry=virtualServerGroupMemberEntry, vrrpInstanceStateChange=vrrpInstanceStateChange, realServerUpperConnectionLimit=realServerUpperConnectionLimit, realServerNotifyDown=realServerNotifyDown, virtualServerRateOutBPS=virtualServerRateOutBPS, virtualServerRateOutPPS=virtualServerRateOutPPS, conformance=conformance, emailIndex=emailIndex, vrrpTrap=vrrpTrap, vrrpAddressBroadcast=vrrpAddressBroadcast, checkGroups=checkGroups, virtualServerAddrType=virtualServerAddrType, realServerStatsActiveConns=realServerStatsActiveConns, virtualServerStatsOutPkts=virtualServerStatsOutPkts, vrrpGroups=vrrpGroups, vrrpInstanceIndex=vrrpInstanceIndex, virtualServerHysteresis=virtualServerHysteresis, vrrpInstanceScriptFault=vrrpInstanceScriptFault, vrrpAddressStatus=vrrpAddressStatus, smtpServerAddress=smtpServerAddress, vrrpTrapControl=vrrpTrapControl, vrrpSyncGroupScriptFault=vrrpSyncGroupScriptFault, realServerRateInBPS=realServerRateInBPS, vrrpInstanceGroup=vrrpInstanceGroup, vrrpTrackedInterfaceEntry=vrrpTrackedInterfaceEntry, vrrpSyncGroupMemberTable=vrrpSyncGroupMemberTable, vrrpInstancePrimaryInterface=vrrpInstancePrimaryInterface, vrrpTrackedInterfaceTable=vrrpTrackedInterfaceTable, vrrpScriptResult=vrrpScriptResult, virtualServerRateInBPS=virtualServerRateInBPS, realServerIndex=realServerIndex, vrrpSyncGroupNotifyExec=vrrpSyncGroupNotifyExec, realServerWeight=realServerWeight, VrrpState=VrrpState, mail=mail, vrrpRouteStatus=vrrpRouteStatus, realServerStatsPersistentConns=realServerStatsPersistentConns, vrrpInstanceInitialState=vrrpInstanceInitialState, vrrpInstancePreempt=vrrpInstancePreempt, routerId=routerId, vrrpSyncGroupEntry=vrrpSyncGroupEntry, vrrpSyncGroupStateChange=vrrpSyncGroupStateChange, virtualServerGroupEntry=virtualServerGroupEntry, vrrpScriptTable=vrrpScriptTable, virtualServerGroupMemberAddr1=virtualServerGroupMemberAddr1, vrrpAddressIfIndex=vrrpAddressIfIndex, virtualServerRealServersUp=virtualServerRealServersUp, vrrpRouteSecondaryGateway=vrrpRouteSecondaryGateway, virtualServerAddress=virtualServerAddress, virtualServerIndex=virtualServerIndex, virtualServerGroupName=virtualServerGroupName, vrrpSyncGroupMemberEntry=vrrpSyncGroupMemberEntry, groups=groups, emailTable=emailTable, vrrpRouteIfName=vrrpRouteIfName, vrrpInstanceAuthType=vrrpInstanceAuthType, realServerEntry=realServerEntry, vrrpRouteRoutingTable=vrrpRouteRoutingTable, virtualServerGroupMemberAddrType=virtualServerGroupMemberAddrType, smtpServerTimeout=smtpServerTimeout, vrrpSyncGroupName=vrrpSyncGroupName, vrrpInstanceEntry=vrrpInstanceEntry, realServerPort=realServerPort, virtualServerRealServersTotal=virtualServerRealServersTotal, virtualServerGroupMemberAddr2=virtualServerGroupMemberAddr2, vrrpInstanceScript=vrrpInstanceScript, virtualServerTable=virtualServerTable, vrrpTrackedInterfaceWeight=vrrpTrackedInterfaceWeight, vrrpScriptInterval=vrrpScriptInterval, vrrpRouteIfIndex=vrrpRouteIfIndex, checkTrap=checkTrap, virtualServerGroupMemberAddress=virtualServerGroupMemberAddress, vrrpInstancePreemptDelay=vrrpInstancePreemptDelay, vrrpTrackedScriptWeight=vrrpTrackedScriptWeight, virtualServerAlpha=virtualServerAlpha, realServerStateChange=realServerStateChange, vrrpInstanceScriptBackup=vrrpInstanceScriptBackup)
