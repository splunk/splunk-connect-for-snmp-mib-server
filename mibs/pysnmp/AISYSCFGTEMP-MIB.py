#
# PySNMP MIB module AISYSCFGTEMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AISYSCFGTEMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, Integer32, TimeTicks, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, ObjectIdentity, Counter32, MibIdentifier, IpAddress, Counter64, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Integer32", "TimeTicks", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "ObjectIdentity", "Counter32", "MibIdentifier", "IpAddress", "Counter64", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSysCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32))
aiSysCfgTemp = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 32, 5))
aiSysCfgTemp.setRevisions(('2001-04-30 17:00',))
if mibBuilder.loadTexts: aiSysCfgTemp.setLastUpdated('200104301700Z')
if mibBuilder.loadTexts: aiSysCfgTemp.setOrganization('Applied Innovation Inc.')
aiSCTempTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32, 5, 0))
aiSCTempTrapFail = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 5, 0, 1)).setObjects(("AISYSCFGTEMP-MIB", "aiSCTempProbeIndex"), ("AISYSCFGTEMP-MIB", "aiSCTempProbeTempCelsius"))
if mibBuilder.loadTexts: aiSCTempTrapFail.setStatus('current')
aiSCTempTrapOk = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 5, 0, 2)).setObjects(("AISYSCFGTEMP-MIB", "aiSCTempProbeIndex"), ("AISYSCFGTEMP-MIB", "aiSCTempProbeTempCelsius"))
if mibBuilder.loadTexts: aiSCTempTrapOk.setStatus('current')
aiSCTempAgregateStatus = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("okay", 1), ("trouble", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCTempAgregateStatus.setStatus('current')
aiSCTempProbeTable = MibTable((1, 3, 6, 1, 4, 1, 539, 32, 5, 2), )
if mibBuilder.loadTexts: aiSCTempProbeTable.setStatus('current')
aiSCTempProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1), ).setIndexNames((0, "AISYSCFGTEMP-MIB", "aiSCTempProbeIndex"))
if mibBuilder.loadTexts: aiSCTempProbeEntry.setStatus('current')
aiSCTempProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCTempProbeIndex.setStatus('current')
aiSCTempProbeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCTempProbeDescription.setStatus('current')
aiSCTempProbeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("unavailable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCTempProbeStatus.setStatus('current')
aiSCTempProbeLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCTempProbeLocation.setStatus('current')
aiSCTempProbeLowThreshCelsius = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1, 5), Integer32()).setUnits('degrees Celsius').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCTempProbeLowThreshCelsius.setStatus('current')
aiSCTempProbeHighThreshCelsius = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1, 6), Integer32()).setUnits('degrees Celsius').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCTempProbeHighThreshCelsius.setStatus('current')
aiSCTempProbeTempCelsius = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 5, 2, 1, 7), Integer32()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCTempProbeTempCelsius.setStatus('current')
mibBuilder.exportSymbols("AISYSCFGTEMP-MIB", aiSCTempProbeIndex=aiSCTempProbeIndex, aiSysCfgTemp=aiSysCfgTemp, aiSCTempAgregateStatus=aiSCTempAgregateStatus, aiSCTempTrapFail=aiSCTempTrapFail, aiSCTempTrapOk=aiSCTempTrapOk, PYSNMP_MODULE_ID=aiSysCfgTemp, aiSCTempProbeTable=aiSCTempProbeTable, aiSCTempProbeEntry=aiSCTempProbeEntry, aiSCTempProbeStatus=aiSCTempProbeStatus, aii=aii, aiSCTempProbeLocation=aiSCTempProbeLocation, aiSCTempProbeTempCelsius=aiSCTempProbeTempCelsius, aiSCTempProbeHighThreshCelsius=aiSCTempProbeHighThreshCelsius, aiSCTempProbeLowThreshCelsius=aiSCTempProbeLowThreshCelsius, aiSCTempProbeDescription=aiSCTempProbeDescription, aiSCTempTrapInfo=aiSCTempTrapInfo, aiSysCfg=aiSysCfg)
