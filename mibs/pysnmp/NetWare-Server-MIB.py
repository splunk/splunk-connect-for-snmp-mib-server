#
# PySNMP MIB module NetWare-Server-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NetWare-Server-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
KBytes, InternationalDisplayString = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "KBytes", "InternationalDisplayString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Bits, Integer32, Unsigned32, MibIdentifier, NotificationType, ModuleIdentity, iso, ObjectIdentity, Gauge32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "Integer32", "Unsigned32", "MibIdentifier", "NotificationType", "ModuleIdentity", "iso", "ObjectIdentity", "Gauge32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "Counter32")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
nwServer = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28))
nwSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 1))
nwFileSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 2))
nwUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 3))
nwQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 4))
nwOdi = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 5))
nwSft3 = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 6))
nwNCP = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 7))
nwWatchdog = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 8))
nwNLM = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 9))
nwSetParams = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 10))
nwUserAccounts = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 28, 11))
class Seconds(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class IPXNetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class TransportDomain(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noAddress", 1), ("ipx", 2), ("ip", 3), ("appleTalkDDP", 4))

class TransportAddress(OctetString):
    pass

class EngineType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("msEngine", 1), ("ioEnginePrimary", 2), ("ioEngineSecondary", 3))

class DSTType(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(7, 7)
    fixedLength = 7

nwSysServerName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 1), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysServerName.setStatus('mandatory')
nwSysSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 2), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysSerialNumber.setStatus('mandatory')
nwSysInternalNetNum = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 3), IPXNetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysInternalNetNum.setStatus('mandatory')
nwSysServerUpTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysServerUpTime.setStatus('mandatory')
nwSysOSSFTLevel = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("sftI", 2), ("sftII", 3), ("sftIII", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysOSSFTLevel.setStatus('mandatory')
nwSysOSMajorVer = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysOSMajorVer.setStatus('mandatory')
nwSysOSMinorVer = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysOSMinorVer.setStatus('mandatory')
nwSysOSReleaseDate = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysOSReleaseDate.setStatus('mandatory')
nwSysOSDescription = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 9), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysOSDescription.setStatus('mandatory')
nwSysOSCopyright = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 10), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysOSCopyright.setStatus('mandatory')
nwSysTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 11), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwSysTime.setStatus('mandatory')
nwSysTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 12), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwSysTimeZone.setStatus('mandatory')
nwSysLoginState = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwSysLoginState.setStatus('mandatory')
nwSysLanguageID = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("canadianFrench", 2), ("chinese", 3), ("danish", 4), ("dutch", 5), ("english", 6), ("finnish", 7), ("french", 8), ("german", 9), ("italian", 10), ("japanese", 11), ("portuguese", 14), ("russian", 15), ("spanish", 16), ("swedish", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysLanguageID.setStatus('mandatory')
nwSysNMASerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 15), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysNMASerialNumber.setStatus('mandatory')
nwSysNMACopiesAllowed = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysNMACopiesAllowed.setStatus('mandatory')
nwSysDirectoryTree = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 17), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysDirectoryTree.setStatus('mandatory')
nwSysBinderyContext = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 18), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysBinderyContext.setStatus('mandatory')
nwSysServerDSName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 19), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysServerDSName.setStatus('mandatory')
nwSysDaylightSavingsStart = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 20), DSTType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysDaylightSavingsStart.setStatus('mandatory')
nwSysDaylightSavingsEnd = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 21), DSTType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysDaylightSavingsEnd.setStatus('mandatory')
nwSysDaylightSavingsOffset = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysDaylightSavingsOffset.setStatus('mandatory')
nwSysDaylightSavingsStatus = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSysDaylightSavingsStatus.setStatus('mandatory')
nwFSReads = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSReads.setStatus('mandatory')
nwFSWrites = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSWrites.setStatus('mandatory')
nwFSReadKBytes = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSReadKBytes.setStatus('mandatory')
nwFSWrittenKBytes = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSWrittenKBytes.setStatus('mandatory')
nwFSCacheChecks = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSCacheChecks.setStatus('mandatory')
nwFSCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSCacheHits.setStatus('mandatory')
nwFSOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSOpenFiles.setStatus('mandatory')
nwFSMaxOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSMaxOpenFiles.setStatus('mandatory')
nwFSRecordLocks = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSRecordLocks.setStatus('mandatory')
nwFSMaxRecordLocks = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSMaxRecordLocks.setStatus('mandatory')
nwFSMaxSubdirectoryTreeDepth = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSMaxSubdirectoryTreeDepth.setStatus('mandatory')
nwFSMaxPercentOfVolumeUsedByDir = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSMaxPercentOfVolumeUsedByDir.setStatus('mandatory')
nwFSVolCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFSVolCount.setStatus('mandatory')
nwFSVolTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14), )
if mibBuilder.loadTexts: nwFSVolTable.setStatus('mandatory')
nwFSVolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwVolID"))
if mibBuilder.loadTexts: nwFSVolEntry.setStatus('mandatory')
nwVolID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolID.setStatus('mandatory')
nwVolPhysicalName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolPhysicalName.setStatus('mandatory')
nwVolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 3), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolSize.setStatus('mandatory')
nwVolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 4), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolFree.setStatus('mandatory')
nwVolFreeable = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 5), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolFreeable.setStatus('mandatory')
nwVolNonFreeable = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 6), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolNonFreeable.setStatus('mandatory')
nwVolBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolBlockSize.setStatus('mandatory')
nwVolMounted = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mounted", 1), ("dismounted", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwVolMounted.setStatus('mandatory')
nwVolAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolAttributes.setStatus('mandatory')
nwVolNameSpaces = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolNameSpaces.setStatus('mandatory')
nwVolTotalDirEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolTotalDirEntries.setStatus('mandatory')
nwVolUsedDirEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolUsedDirEntries.setStatus('mandatory')
nwVolSegmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolSegmentCount.setStatus('mandatory')
nwVolDSName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 14), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolDSName.setStatus('mandatory')
nwVolFileSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("netWareVolume", 3), ("nfsVolume", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolFileSystemID.setStatus('mandatory')
nwVolFileSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 14, 1, 16), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolFileSystemName.setStatus('mandatory')
nwFSOpenFileTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15), )
if mibBuilder.loadTexts: nwFSOpenFileTable.setStatus('mandatory')
nwFSOpenFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwOfileVolID"), (0, "NetWare-Server-MIB", "nwOfileDirectoryNumber"), (0, "NetWare-Server-MIB", "nwOfileConnection"))
if mibBuilder.loadTexts: nwFSOpenFileEntry.setStatus('mandatory')
nwOfileVolID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOfileVolID.setStatus('mandatory')
nwOfileDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOfileDirectoryNumber.setStatus('mandatory')
nwOfileConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOfileConnection.setStatus('mandatory')
nwOfileVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOfileVolumeName.setStatus('mandatory')
nwOfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15, 1, 5), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOfileName.setStatus('mandatory')
nwOfileLoginName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 2, 15, 1, 6), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOfileLoginName.setStatus('mandatory')
nwUserCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserCount.setStatus('mandatory')
nwLoginCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwLoginCount.setStatus('mandatory')
nwMaxLogins = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwMaxLogins.setStatus('mandatory')
nwConnectionCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionCount.setStatus('mandatory')
nwPeakRemoteConnections = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPeakRemoteConnections.setStatus('mandatory')
nwMaxConnections = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwMaxConnections.setStatus('mandatory')
nwNLMConnections = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMConnections.setStatus('mandatory')
nwConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8), )
if mibBuilder.loadTexts: nwConnectionTable.setStatus('mandatory')
nwConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwConnectionNumber"))
if mibBuilder.loadTexts: nwConnectionEntry.setStatus('mandatory')
nwConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionNumber.setStatus('mandatory')
nwConnectionLoginName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 2), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionLoginName.setStatus('mandatory')
nwConnectionTransportDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 3), TransportDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionTransportDomain.setStatus('mandatory')
nwConnectionTransportAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 4), TransportAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionTransportAddress.setStatus('mandatory')
nwConnectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionTime.setStatus('mandatory')
nwConnectionReadKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionReadKBytes.setStatus('mandatory')
nwConnectionWrittenKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionWrittenKBytes.setStatus('mandatory')
nwConnectionNcpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionNcpRequests.setStatus('mandatory')
nwConnectionFilesOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionFilesOpen.setStatus('mandatory')
nwConnectionRecordsLocked = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionRecordsLocked.setStatus('mandatory')
nwConnectionPrivilege = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionPrivilege.setStatus('mandatory')
nwConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 3, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectionStatus.setStatus('mandatory')
nwQueueCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQueueCount.setStatus('mandatory')
nwQueueTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2), )
if mibBuilder.loadTexts: nwQueueTable.setStatus('mandatory')
nwQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwQID"))
if mibBuilder.loadTexts: nwQueueEntry.setStatus('mandatory')
nwQID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQID.setStatus('mandatory')
nwQName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 2), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQName.setStatus('mandatory')
nwQType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("printQueue", 2), ("archiveQueue", 3), ("jobQueue", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQType.setStatus('mandatory')
nwQAddJobState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("canAddJobs", 1), ("cannotAddJobs", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQAddJobState.setStatus('mandatory')
nwQAttachState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("canAttach", 1), ("cannotAttach", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQAttachState.setStatus('mandatory')
nwQServiceJobState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("canService", 1), ("cannotService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQServiceJobState.setStatus('mandatory')
nwQDirVolName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 7), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQDirVolName.setStatus('mandatory')
nwQNumJobEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQNumJobEntries.setStatus('mandatory')
nwQNumAssignedServers = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQNumAssignedServers.setStatus('mandatory')
nwQueueJobTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3), )
if mibBuilder.loadTexts: nwQueueJobTable.setStatus('mandatory')
nwQueueJobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwQJobQID"), (0, "NetWare-Server-MIB", "nwQJobNumber"))
if mibBuilder.loadTexts: nwQueueJobEntry.setStatus('mandatory')
nwQJobQID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobQID.setStatus('mandatory')
nwQJobNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobNumber.setStatus('mandatory')
nwQJobDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 3), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobDescription.setStatus('mandatory')
nwQJobEntryDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobEntryDateTime.setStatus('mandatory')
nwQJobPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobPosition.setStatus('mandatory')
nwQJobSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobSize.setStatus('mandatory')
nwQJobControlFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobControlFlags.setStatus('mandatory')
nwQJobUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 8), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobUserName.setStatus('mandatory')
nwQJobTargetServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 9), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobTargetServerName.setStatus('mandatory')
nwQJobTargetDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobTargetDateTime.setStatus('mandatory')
nwQJobServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 3, 1, 11), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQJobServerName.setStatus('mandatory')
nwQueueServerTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 4), )
if mibBuilder.loadTexts: nwQueueServerTable.setStatus('mandatory')
nwQueueServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 4, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwQServerQID"), (0, "NetWare-Server-MIB", "nwQServerID"))
if mibBuilder.loadTexts: nwQueueServerEntry.setStatus('mandatory')
nwQServerQID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQServerQID.setStatus('mandatory')
nwQServerID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQServerID.setStatus('mandatory')
nwQServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 4, 1, 3), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQServerName.setStatus('mandatory')
nwQServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwQServerStatus.setStatus('mandatory')
nwOdiLslEnqSendCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOdiLslEnqSendCount.setStatus('mandatory')
nwOdiOsPktRcvBuffer = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOdiOsPktRcvBuffer.setStatus('mandatory')
nwOdiOsMaxPktRcvBuffers = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwOdiOsMaxPktRcvBuffers.setStatus('mandatory')
nwOdiOsMinPktRcvBuffers = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwOdiOsMinPktRcvBuffers.setStatus('mandatory')
nwSft3Engine = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 6, 1), EngineType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSft3Engine.setStatus('mandatory')
nwSft3EngineState = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("synchronizing", 2), ("mirrored", 3), ("noSecondary", 4), ("down", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSft3EngineState.setStatus('mandatory')
nwSft3EngineTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 6, 3), )
if mibBuilder.loadTexts: nwSft3EngineTable.setStatus('mandatory')
nwSft3EngineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 6, 3, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwSft3EngineType"))
if mibBuilder.loadTexts: nwSft3EngineEntry.setStatus('mandatory')
nwSft3EngineType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 6, 3, 1, 1), EngineType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSft3EngineType.setStatus('mandatory')
nwSft3EngineName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 6, 3, 1, 2), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSft3EngineName.setStatus('mandatory')
nwSft3EngineInternalNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 6, 3, 1, 3), IPXNetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSft3EngineInternalNetNum.setStatus('mandatory')
nwNCPIPXChecksums = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noChecksums", 1), ("checksumIfEnabledAtClient", 2), ("requireChecksums", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwNCPIPXChecksums.setStatus('mandatory')
nwNCPPacketSignatures = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("serverNeverSigns", 1), ("serverSignsOnClientRequest", 2), ("serverSignsIfClientCapable", 3), ("serverMandatesSigning", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPPacketSignatures.setStatus('mandatory')
nwNCPNumNCPReqs = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPNumNCPReqs.setStatus('mandatory')
nwNCPUseCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPUseCount.setStatus('mandatory')
nwNCPPeakUseCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPPeakUseCount.setStatus('mandatory')
nwNCPForgedPkts = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPForgedPkts.setStatus('mandatory')
nwNCPBeingProcesseds = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPBeingProcesseds.setStatus('mandatory')
nwNCPNoAvailConns = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPNoAvailConns.setStatus('mandatory')
nwNCPIPXChecksumErrs = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPIPXChecksumErrs.setStatus('mandatory')
nwNCPInvalidPacketSigs = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPInvalidPacketSigs.setStatus('mandatory')
nwNCPExtNumReg = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPExtNumReg.setStatus('mandatory')
nwNCPExtInvalidReqs = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 7, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNCPExtInvalidReqs.setStatus('mandatory')
nwWDTimeBeforeFirstPkt = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 8, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwWDTimeBeforeFirstPkt.setStatus('mandatory')
nwWDTimeBetweenPkts = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 8, 2), Seconds()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwWDTimeBetweenPkts.setStatus('mandatory')
nwWDNumPktsToSend = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 8, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwWDNumPktsToSend.setStatus('mandatory')
nwWDCurrentState = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("waiting", 2), ("sendingPackets", 3), ("clearingStations", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwWDCurrentState.setStatus('mandatory')
nwWDNotifyConsoleFlag = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 28, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("doNotNotify", 1), ("notify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwWDNotifyConsoleFlag.setStatus('mandatory')
nwNLMTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1), )
if mibBuilder.loadTexts: nwNLMTable.setStatus('mandatory')
nwNLMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwNLMIndex"))
if mibBuilder.loadTexts: nwNLMEntry.setStatus('mandatory')
nwNLMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMIndex.setStatus('mandatory')
nwNLMName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMName.setStatus('mandatory')
nwNLMDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 3), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMDescription.setStatus('mandatory')
nwNLMTotalMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMTotalMemory.setStatus('mandatory')
nwNLMCopyright = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 5), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMCopyright.setStatus('mandatory')
nwNLMProtectionDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("osDomain", 1), ("protectedDomain", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMProtectionDomain.setStatus('mandatory')
nwNLMMajorVer = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMMajorVer.setStatus('mandatory')
nwNLMMinorVer = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMMinorVer.setStatus('mandatory')
nwNLMRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMRevision.setStatus('mandatory')
nwNLMReleaseDate = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 9, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwNLMReleaseDate.setStatus('mandatory')
nwSetCategoryTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 1), )
if mibBuilder.loadTexts: nwSetCategoryTable.setStatus('mandatory')
nwSetCategoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 1, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwSetCategoryIndex"))
if mibBuilder.loadTexts: nwSetCategoryEntry.setStatus('mandatory')
nwSetCategoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetCategoryIndex.setStatus('mandatory')
nwSetCategoryName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 1, 1, 2), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetCategoryName.setStatus('mandatory')
nwSetParamTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2), )
if mibBuilder.loadTexts: nwSetParamTable.setStatus('mandatory')
nwSetParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwSetParamCategoryIndex"), (0, "NetWare-Server-MIB", "nwSetParamIndex"))
if mibBuilder.loadTexts: nwSetParamEntry.setStatus('mandatory')
nwSetParamCategoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetParamCategoryIndex.setStatus('mandatory')
nwSetParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetParamIndex.setStatus('mandatory')
nwSetParamName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 3), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetParamName.setStatus('mandatory')
nwSetParamType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("number", 1), ("boolean", 2), ("ticks", 3), ("blockShift", 4), ("timeOffset", 5), ("string", 6), ("trigger", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetParamType.setStatus('mandatory')
nwSetParamValueInteger = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwSetParamValueInteger.setStatus('mandatory')
nwSetParamValueString = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 6), InternationalDisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwSetParamValueString.setStatus('mandatory')
nwSetParamLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetParamLowerLimit.setStatus('mandatory')
nwSetParamUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetParamUpperLimit.setStatus('mandatory')
nwSetParamDescrLength = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetParamDescrLength.setStatus('mandatory')
nwSetParamMode = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwSetParamMode.setStatus('mandatory')
nwSetDescrTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 3), )
if mibBuilder.loadTexts: nwSetDescrTable.setStatus('mandatory')
nwSetDescrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 3, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwSetDescrCategoryIndex"), (0, "NetWare-Server-MIB", "nwSetDescrParamIndex"), (0, "NetWare-Server-MIB", "nwSetDescrIndex"))
if mibBuilder.loadTexts: nwSetDescrEntry.setStatus('mandatory')
nwSetDescrCategoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetDescrCategoryIndex.setStatus('mandatory')
nwSetDescrParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetDescrParamIndex.setStatus('mandatory')
nwSetDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetDescrIndex.setStatus('mandatory')
nwSetDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 10, 3, 1, 4), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwSetDescription.setStatus('mandatory')
nwUserAcctTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1), )
if mibBuilder.loadTexts: nwUserAcctTable.setStatus('mandatory')
nwUserAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwUserID"))
if mibBuilder.loadTexts: nwUserAcctEntry.setStatus('mandatory')
nwUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserID.setStatus('mandatory')
nwUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 2), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserName.setStatus('mandatory')
nwUserDiskUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 3), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserDiskUsage.setStatus('mandatory')
nwUserLastLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserLastLoginTime.setStatus('mandatory')
nwUserAccountStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("expired", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserAccountStatus.setStatus('mandatory')
nwUserPasswordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("expired", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserPasswordStatus.setStatus('mandatory')
nwUserBadLoginTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 7), TransportDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserBadLoginTransport.setStatus('mandatory')
nwUserBadLoginAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 8), TransportAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserBadLoginAddress.setStatus('mandatory')
nwUserBadLoginAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserBadLoginAttempts.setStatus('mandatory')
nwUserFullName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 1, 1, 10), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserFullName.setStatus('mandatory')
nwUserVolUsageTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2), )
if mibBuilder.loadTexts: nwUserVolUsageTable.setStatus('mandatory')
nwUserVolUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwUserVolUserID"), (0, "NetWare-Server-MIB", "nwUserVolVolID"))
if mibBuilder.loadTexts: nwUserVolUsageEntry.setStatus('mandatory')
nwUserVolUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserVolUserID.setStatus('mandatory')
nwUserVolVolID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserVolVolID.setStatus('mandatory')
nwUserVolUsageUser = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2, 1, 3), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserVolUsageUser.setStatus('mandatory')
nwUserVolUsageVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserVolUsageVolume.setStatus('mandatory')
nwUserVolUsageSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2, 1, 5), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserVolUsageSpaceUsed.setStatus('mandatory')
nwUserVolUsageLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 2, 1, 6), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwUserVolUsageLimit.setStatus('mandatory')
nwVolUsageTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3), )
if mibBuilder.loadTexts: nwVolUsageTable.setStatus('mandatory')
nwVolUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3, 1), ).setIndexNames((0, "NetWare-Server-MIB", "nwVolUsageVolID"), (0, "NetWare-Server-MIB", "nwVolUsageUserID"))
if mibBuilder.loadTexts: nwVolUsageEntry.setStatus('mandatory')
nwVolUsageVolID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolUsageVolID.setStatus('mandatory')
nwVolUsageUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolUsageUserID.setStatus('mandatory')
nwVolUsageVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3, 1, 3), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolUsageVolume.setStatus('mandatory')
nwVolUsageUser = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3, 1, 4), InternationalDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolUsageUser.setStatus('mandatory')
nwVolUsageSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3, 1, 5), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolUsageSpaceUsed.setStatus('mandatory')
nwVolUsageLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 28, 11, 3, 1, 6), KBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwVolUsageLimit.setStatus('mandatory')
mibBuilder.exportSymbols("NetWare-Server-MIB", nwConnectionTransportDomain=nwConnectionTransportDomain, nwSysTime=nwSysTime, nwOfileLoginName=nwOfileLoginName, nwSetParamValueString=nwSetParamValueString, nwQServerName=nwQServerName, nwUserVolUsageTable=nwUserVolUsageTable, nwNCPIPXChecksumErrs=nwNCPIPXChecksumErrs, nwNLMMinorVer=nwNLMMinorVer, nwSft3Engine=nwSft3Engine, nwNLMEntry=nwNLMEntry, nwVolFileSystemName=nwVolFileSystemName, nwSysOSDescription=nwSysOSDescription, nwFSVolTable=nwFSVolTable, nwFSWrites=nwFSWrites, nwNLMReleaseDate=nwNLMReleaseDate, nwFSReadKBytes=nwFSReadKBytes, nwPeakRemoteConnections=nwPeakRemoteConnections, nwOfileVolID=nwOfileVolID, nwUsers=nwUsers, nwUserBadLoginAddress=nwUserBadLoginAddress, nwSysServerUpTime=nwSysServerUpTime, nwSetParamEntry=nwSetParamEntry, nwFSMaxOpenFiles=nwFSMaxOpenFiles, nwSetParamDescrLength=nwSetParamDescrLength, nwSetParamType=nwSetParamType, nwQJobTargetServerName=nwQJobTargetServerName, nwFSWrittenKBytes=nwFSWrittenKBytes, nwMaxLogins=nwMaxLogins, nwSysOSMinorVer=nwSysOSMinorVer, nwSft3EngineEntry=nwSft3EngineEntry, nwSetDescrEntry=nwSetDescrEntry, nwSetDescrCategoryIndex=nwSetDescrCategoryIndex, nwUserVolUsageVolume=nwUserVolUsageVolume, nwSetParamCategoryIndex=nwSetParamCategoryIndex, DSTType=DSTType, nwNCPExtInvalidReqs=nwNCPExtInvalidReqs, nwUserAccounts=nwUserAccounts, nwFileSystem=nwFileSystem, nwNCPInvalidPacketSigs=nwNCPInvalidPacketSigs, nwFSVolCount=nwFSVolCount, nwUserCount=nwUserCount, nwNCPPeakUseCount=nwNCPPeakUseCount, nwQType=nwQType, nwVolMounted=nwVolMounted, nwUserBadLoginAttempts=nwUserBadLoginAttempts, TransportAddress=TransportAddress, nwSysDirectoryTree=nwSysDirectoryTree, nwOfileVolumeName=nwOfileVolumeName, nwOdiLslEnqSendCount=nwOdiLslEnqSendCount, nwSetParams=nwSetParams, nwOfileConnection=nwOfileConnection, nwSft3EngineType=nwSft3EngineType, nwSysLoginState=nwSysLoginState, nwSetParamUpperLimit=nwSetParamUpperLimit, nwVolNonFreeable=nwVolNonFreeable, nwNLMRevision=nwNLMRevision, nwUserBadLoginTransport=nwUserBadLoginTransport, nwSetDescrTable=nwSetDescrTable, nwNLMDescription=nwNLMDescription, nwQJobNumber=nwQJobNumber, nwNLMConnections=nwNLMConnections, nwNCPUseCount=nwNCPUseCount, nwSysInternalNetNum=nwSysInternalNetNum, nwQJobUserName=nwQJobUserName, nwUserVolUsageEntry=nwUserVolUsageEntry, nwVolAttributes=nwVolAttributes, nwUserVolUsageSpaceUsed=nwUserVolUsageSpaceUsed, nwSft3=nwSft3, nwOfileName=nwOfileName, nwNLMCopyright=nwNLMCopyright, nwSetParamLowerLimit=nwSetParamLowerLimit, novell=novell, nwConnectionWrittenKBytes=nwConnectionWrittenKBytes, nwVolUsageVolID=nwVolUsageVolID, nwSysDaylightSavingsStart=nwSysDaylightSavingsStart, nwFSMaxRecordLocks=nwFSMaxRecordLocks, nwConnectionTable=nwConnectionTable, nwVolUsageTable=nwVolUsageTable, nwSysNMASerialNumber=nwSysNMASerialNumber, nwSft3EngineInternalNetNum=nwSft3EngineInternalNetNum, nwMaxConnections=nwMaxConnections, nwOdiOsMaxPktRcvBuffers=nwOdiOsMaxPktRcvBuffers, nwNCPNoAvailConns=nwNCPNoAvailConns, nwQJobControlFlags=nwQJobControlFlags, nwFSCacheHits=nwFSCacheHits, nwQueueTable=nwQueueTable, nwQJobSize=nwQJobSize, nwVolID=nwVolID, nwSysOSSFTLevel=nwSysOSSFTLevel, nwQJobTargetDateTime=nwQJobTargetDateTime, nwWDCurrentState=nwWDCurrentState, nwConnectionCount=nwConnectionCount, nwSysLanguageID=nwSysLanguageID, nwVolUsageUser=nwVolUsageUser, nwUserAcctEntry=nwUserAcctEntry, nwFSOpenFileTable=nwFSOpenFileTable, nwConnectionStatus=nwConnectionStatus, nwFSVolEntry=nwFSVolEntry, nwQAttachState=nwQAttachState, nwSetCategoryName=nwSetCategoryName, nwUserPasswordStatus=nwUserPasswordStatus, nwWDNumPktsToSend=nwWDNumPktsToSend, nwQueueEntry=nwQueueEntry, Seconds=Seconds, nwVolBlockSize=nwVolBlockSize, nwQServiceJobState=nwQServiceJobState, nwVolSize=nwVolSize, nwNLMName=nwNLMName, nwServer=nwServer, nwVolFreeable=nwVolFreeable, nwQJobServerName=nwQJobServerName, nwUserID=nwUserID, nwUserAccountStatus=nwUserAccountStatus, nwUserLastLoginTime=nwUserLastLoginTime, nwUserDiskUsage=nwUserDiskUsage, nwQueueJobEntry=nwQueueJobEntry, nwNLMMajorVer=nwNLMMajorVer, nwSft3EngineState=nwSft3EngineState, EngineType=EngineType, nwUserVolUsageLimit=nwUserVolUsageLimit, nwWDTimeBetweenPkts=nwWDTimeBetweenPkts, nwSysSerialNumber=nwSysSerialNumber, nwSysServerDSName=nwSysServerDSName, nwConnectionRecordsLocked=nwConnectionRecordsLocked, nwSetParamIndex=nwSetParamIndex, nwConnectionTransportAddress=nwConnectionTransportAddress, nwFSReads=nwFSReads, nwQName=nwQName, nwConnectionTime=nwConnectionTime, nwQueueServerTable=nwQueueServerTable, nwNLMTable=nwNLMTable, nwFSOpenFileEntry=nwFSOpenFileEntry, nwSetDescription=nwSetDescription, nwVolUsageVolume=nwVolUsageVolume, nwQueue=nwQueue, nwVolUsageSpaceUsed=nwVolUsageSpaceUsed, nwNLMIndex=nwNLMIndex, nwConnectionReadKBytes=nwConnectionReadKBytes, nwQAddJobState=nwQAddJobState, nwSetParamName=nwSetParamName, nwQID=nwQID, nwSysNMACopiesAllowed=nwSysNMACopiesAllowed, nwSft3EngineName=nwSft3EngineName, nwConnectionLoginName=nwConnectionLoginName, nwVolUsageLimit=nwVolUsageLimit, nwOfileDirectoryNumber=nwOfileDirectoryNumber, mibDoc=mibDoc, nwSysTimeZone=nwSysTimeZone, nwNCPBeingProcesseds=nwNCPBeingProcesseds, nwWDTimeBeforeFirstPkt=nwWDTimeBeforeFirstPkt, nwSysServerName=nwSysServerName, nwNCP=nwNCP, nwSetCategoryTable=nwSetCategoryTable, nwQNumJobEntries=nwQNumJobEntries, nwUserVolUsageUser=nwUserVolUsageUser, nwQServerQID=nwQServerQID, nwLoginCount=nwLoginCount, nwSetCategoryIndex=nwSetCategoryIndex, nwSetParamValueInteger=nwSetParamValueInteger, nwSysDaylightSavingsStatus=nwSysDaylightSavingsStatus, nwQDirVolName=nwQDirVolName, nwNLMTotalMemory=nwNLMTotalMemory, nwVolUsageUserID=nwVolUsageUserID, nwOdiOsMinPktRcvBuffers=nwOdiOsMinPktRcvBuffers, TransportDomain=TransportDomain, nwSysOSReleaseDate=nwSysOSReleaseDate, nwQNumAssignedServers=nwQNumAssignedServers, nwNCPIPXChecksums=nwNCPIPXChecksums, nwQueueJobTable=nwQueueJobTable, nwVolUsedDirEntries=nwVolUsedDirEntries, nwFSOpenFiles=nwFSOpenFiles, nwVolNameSpaces=nwVolNameSpaces, nwVolFileSystemID=nwVolFileSystemID, nwVolUsageEntry=nwVolUsageEntry, nwSetParamMode=nwSetParamMode, nwNLM=nwNLM, nwVolSegmentCount=nwVolSegmentCount, nwConnectionFilesOpen=nwConnectionFilesOpen, nwConnectionPrivilege=nwConnectionPrivilege, nwFSRecordLocks=nwFSRecordLocks, nwVolFree=nwVolFree, nwSetCategoryEntry=nwSetCategoryEntry, nwQJobQID=nwQJobQID, nwOdi=nwOdi, nwFSMaxPercentOfVolumeUsedByDir=nwFSMaxPercentOfVolumeUsedByDir, nwQJobEntryDateTime=nwQJobEntryDateTime, nwNCPPacketSignatures=nwNCPPacketSignatures, nwSetDescrParamIndex=nwSetDescrParamIndex, nwSysOSCopyright=nwSysOSCopyright, nwUserVolVolID=nwUserVolVolID, nwQueueCount=nwQueueCount, nwNCPNumNCPReqs=nwNCPNumNCPReqs, nwWDNotifyConsoleFlag=nwWDNotifyConsoleFlag, nwSetDescrIndex=nwSetDescrIndex, nwQueueServerEntry=nwQueueServerEntry, nwQServerStatus=nwQServerStatus, nwUserName=nwUserName, nwQJobPosition=nwQJobPosition, nwNCPForgedPkts=nwNCPForgedPkts, nwSetParamTable=nwSetParamTable, nwSysDaylightSavingsEnd=nwSysDaylightSavingsEnd, nwNCPExtNumReg=nwNCPExtNumReg, nwOdiOsPktRcvBuffer=nwOdiOsPktRcvBuffer, nwQServerID=nwQServerID, nwFSCacheChecks=nwFSCacheChecks, nwQJobDescription=nwQJobDescription, nwUserAcctTable=nwUserAcctTable, nwVolPhysicalName=nwVolPhysicalName, nwSft3EngineTable=nwSft3EngineTable, nwVolDSName=nwVolDSName, nwNLMProtectionDomain=nwNLMProtectionDomain, nwWatchdog=nwWatchdog, IPXNetNumber=IPXNetNumber, nwConnectionEntry=nwConnectionEntry, nwVolTotalDirEntries=nwVolTotalDirEntries, nwUserVolUserID=nwUserVolUserID, nwSysBinderyContext=nwSysBinderyContext, nwUserFullName=nwUserFullName, nwFSMaxSubdirectoryTreeDepth=nwFSMaxSubdirectoryTreeDepth, nwSysDaylightSavingsOffset=nwSysDaylightSavingsOffset, nwSystem=nwSystem, nwSysOSMajorVer=nwSysOSMajorVer, nwConnectionNumber=nwConnectionNumber, nwConnectionNcpRequests=nwConnectionNcpRequests)
