#
# PySNMP MIB module ELTEX-MES-PHY (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-PHY
# Produced by pysmi-0.3.4 at Mon Apr 29 18:47:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
eltMes, = mibBuilder.importSymbols("ELTEX-MES", "eltMes")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Counter64, TimeTicks, ModuleIdentity, NotificationType, iso, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Gauge32, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "TimeTicks", "ModuleIdentity", "NotificationType", "iso", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Gauge32", "Integer32", "ObjectIdentity")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
eltMesPhy = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90))
eltMesPhy.setRevisions(('2014-01-21 00:00',))
if mibBuilder.loadTexts: eltMesPhy.setLastUpdated('201401210000Z')
if mibBuilder.loadTexts: eltMesPhy.setOrganization('Eltex Enterprise Co, Ltd.')
eltMesPhyTest = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1))
eltPhyTdrTestTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1), )
if mibBuilder.loadTexts: eltPhyTdrTestTable.setStatus('current')
eltPhyTdrTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eltPhyTdrTestEntry.setStatus('current')
eltPhyTdrTestResultIsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestResultIsValid.setStatus('current')
eltPhyTdrTestPair1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("test-failed", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-mismatch", 4), ("short-with-pair-1", 5), ("short-with-pair-2", 6), ("short-with-pair-3", 7), ("short-with-pair-4", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair1Status.setStatus('current')
eltPhyTdrTestPair2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("test-failed", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-mismatch", 4), ("short-with-pair-1", 5), ("short-with-pair-2", 6), ("short-with-pair-3", 7), ("short-with-pair-4", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair2Status.setStatus('current')
eltPhyTdrTestPair3Status = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("test-failed", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-mismatch", 4), ("short-with-pair-1", 5), ("short-with-pair-2", 6), ("short-with-pair-3", 7), ("short-with-pair-4", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair3Status.setStatus('current')
eltPhyTdrTestPair4Status = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("test-failed", 0), ("ok", 1), ("open", 2), ("short", 3), ("impedance-mismatch", 4), ("short-with-pair-1", 5), ("short-with-pair-2", 6), ("short-with-pair-3", 7), ("short-with-pair-4", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair4Status.setStatus('current')
eltPhyTdrTestPair1Length = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair1Length.setStatus('current')
eltPhyTdrTestPair2Length = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair2Length.setStatus('current')
eltPhyTdrTestPair3Length = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair3Length.setStatus('current')
eltPhyTdrTestPair4Length = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 90, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltPhyTdrTestPair4Length.setStatus('current')
mibBuilder.exportSymbols("ELTEX-MES-PHY", eltPhyTdrTestPair2Length=eltPhyTdrTestPair2Length, eltPhyTdrTestPair4Length=eltPhyTdrTestPair4Length, eltMesPhyTest=eltMesPhyTest, eltPhyTdrTestPair4Status=eltPhyTdrTestPair4Status, eltPhyTdrTestPair2Status=eltPhyTdrTestPair2Status, eltPhyTdrTestPair3Length=eltPhyTdrTestPair3Length, eltPhyTdrTestResultIsValid=eltPhyTdrTestResultIsValid, eltPhyTdrTestPair1Length=eltPhyTdrTestPair1Length, eltPhyTdrTestEntry=eltPhyTdrTestEntry, eltPhyTdrTestPair3Status=eltPhyTdrTestPair3Status, eltMesPhy=eltMesPhy, PYSNMP_MODULE_ID=eltMesPhy, eltPhyTdrTestTable=eltPhyTdrTestTable, eltPhyTdrTestPair1Status=eltPhyTdrTestPair1Status)
