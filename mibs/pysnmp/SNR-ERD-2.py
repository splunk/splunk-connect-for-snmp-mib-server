#
# PySNMP MIB module SNR-ERD-2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNR-ERD-2
# Produced by pysmi-0.3.4 at Mon Apr 29 21:00:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, TimeTicks, iso, enterprises, Integer32, Bits, ModuleIdentity, IpAddress, Counter32, NotificationType, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "iso", "enterprises", "Integer32", "Bits", "ModuleIdentity", "IpAddress", "Counter32", "NotificationType", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snr = ModuleIdentity((1, 3, 6, 1, 4, 1, 40418))
snr.setRevisions(('2015-04-29 12:00',))
if mibBuilder.loadTexts: snr.setLastUpdated('201504291200Z')
if mibBuilder.loadTexts: snr.setOrganization('NAG ')
snr_erd = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2)).setLabel("snr-erd")
snr_erd_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2)).setLabel("snr-erd-2")
ipAddressEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1))
resetsSet = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2))
sensesSet1 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3))
sensesSet2 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4))
commS = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5))
erd2Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0))
temperatureSensorAlarM = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 0))
if mibBuilder.loadTexts: temperatureSensorAlarM.setStatus('current')
temperatureSensorReleasE = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 1))
if mibBuilder.loadTexts: temperatureSensorReleasE.setStatus('current')
signalContact3Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 2))
if mibBuilder.loadTexts: signalContact3Alarm.setStatus('current')
signalContact3Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 3))
if mibBuilder.loadTexts: signalContact3Ok.setStatus('current')
voltageSignalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 4))
if mibBuilder.loadTexts: voltageSignalAlarm.setStatus('current')
voltageSignalOk = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 5))
if mibBuilder.loadTexts: voltageSignalOk.setStatus('current')
anySensorSignal1contact4Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 6))
if mibBuilder.loadTexts: anySensorSignal1contact4Alarm.setStatus('current')
anySensorSignal1contact4Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 7))
if mibBuilder.loadTexts: anySensorSignal1contact4Ok.setStatus('current')
anySensorSignal2contact7Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 8))
if mibBuilder.loadTexts: anySensorSignal2contact7Alarm.setStatus('current')
anySensorSignal2contact7Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 9))
if mibBuilder.loadTexts: anySensorSignal2contact7Ok.setStatus('current')
anySensorSignal3contact9Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 10))
if mibBuilder.loadTexts: anySensorSignal3contact9Alarm.setStatus('current')
anySensorSignal3contact9Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 11))
if mibBuilder.loadTexts: anySensorSignal3contact9Ok.setStatus('current')
voltageAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 12))
if mibBuilder.loadTexts: voltageAlarm.setStatus('current')
voltageOk = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 13))
if mibBuilder.loadTexts: voltageOk.setStatus('current')
remoteControlContact8ON = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 14))
if mibBuilder.loadTexts: remoteControlContact8ON.setStatus('current')
remoteControlContact8OFF = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 15))
if mibBuilder.loadTexts: remoteControlContact8OFF.setStatus('current')
resetedSmartContact6 = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 16))
if mibBuilder.loadTexts: resetedSmartContact6.setStatus('current')
erd2TrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 40418, 2, 2, 99)).setObjects(("SNR-ERD-2", "temperatureSensorAlarM"), ("SNR-ERD-2", "temperatureSensorReleasE"), ("SNR-ERD-2", "signalContact3Alarm"), ("SNR-ERD-2", "signalContact3Ok"), ("SNR-ERD-2", "voltageSignalAlarm"), ("SNR-ERD-2", "voltageSignalOk"), ("SNR-ERD-2", "anySensorSignal1contact4Alarm"), ("SNR-ERD-2", "anySensorSignal1contact4Ok"), ("SNR-ERD-2", "anySensorSignal2contact7Alarm"), ("SNR-ERD-2", "anySensorSignal2contact7Ok"), ("SNR-ERD-2", "anySensorSignal3contact9Alarm"), ("SNR-ERD-2", "anySensorSignal3contact9Ok"), ("SNR-ERD-2", "voltageAlarm"), ("SNR-ERD-2", "voltageOk"), ("SNR-ERD-2", "remoteControlContact8ON"), ("SNR-ERD-2", "remoteControlContact8OFF"), ("SNR-ERD-2", "resetedSmartContact6"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    erd2TrapGroup = erd2TrapGroup.setStatus('current')
ipAddress = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipAddress.setStatus('current')
ipGatewayAddress = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipGatewayAddress.setStatus('current')
ipMonitoringDevice = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipMonitoringDevice.setStatus('current')
ipForTrap = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForTrap.setStatus('current')
resetSmartContact6 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("reset", 1), ("bypass", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetSmartContact6.setStatus('current')
numberOfResetPositives = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("resetPositives", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: numberOfResetPositives.setStatus('current')
remoteControlContact8 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 2, 1, 0, 6, 5))).clone(namedValues=NamedValues(("termostatSetON", 3), ("switch", 4), ("manualSetON", 2), ("manOFF", 1), ("manON", 0), ("autoOFF", 6), ("autoON", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteControlContact8.setStatus('current')
monitorAlarmSignalContact3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("doorIsClose", 1), ("doorIsOpen", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAlarmSignalContact3.setStatus('current')
numberOfAlarmPositives = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("resetPositives", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: numberOfAlarmPositives.setStatus('current')
monitorAnySensorSignal1contact4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal1contact4.setStatus('current')
monitorAnySensorSignal2contact7 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal2contact7.setStatus('current')
monitorAnySensorSignal3contact9 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal3contact9.setStatus('current')
monitorVoltageSignal = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("voltageIsYes", 2), ("voltageIsNo", 1), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorVoltageSignal.setStatus('current')
temperatureSensor = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensor.setStatus('current')
voltageSensorContact10 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensorContact10.setStatus('current')
sysVoltageAlarm = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysVoltageAlarm.setStatus('current')
communityString = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: communityString.setStatus('current')
trapMode = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("once", 1), ("cyclically", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapMode.setStatus('current')
alarmSenseName = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSenseName.setStatus('current')
userSense1Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense1Name.setStatus('current')
userSense2Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense2Name.setStatus('current')
userSense3Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense3Name.setStatus('current')
message = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: message.setStatus('current')
mibBuilder.exportSymbols("SNR-ERD-2", monitorVoltageSignal=monitorVoltageSignal, snr=snr, temperatureSensorReleasE=temperatureSensorReleasE, voltageSignalOk=voltageSignalOk, ipGatewayAddress=ipGatewayAddress, signalContact3Alarm=signalContact3Alarm, anySensorSignal2contact7Ok=anySensorSignal2contact7Ok, message=message, communityString=communityString, trapMode=trapMode, anySensorSignal3contact9Alarm=anySensorSignal3contact9Alarm, userSense3Name=userSense3Name, anySensorSignal2contact7Alarm=anySensorSignal2contact7Alarm, voltageSensorContact10=voltageSensorContact10, ipAddress=ipAddress, ipMonitoringDevice=ipMonitoringDevice, anySensorSignal1contact4Alarm=anySensorSignal1contact4Alarm, snr_erd=snr_erd, monitorAnySensorSignal3contact9=monitorAnySensorSignal3contact9, commS=commS, sensesSet2=sensesSet2, snr_erd_2=snr_erd_2, resetsSet=resetsSet, anySensorSignal1contact4Ok=anySensorSignal1contact4Ok, anySensorSignal3contact9Ok=anySensorSignal3contact9Ok, sensesSet1=sensesSet1, voltageOk=voltageOk, erd2TrapGroup=erd2TrapGroup, remoteControlContact8ON=remoteControlContact8ON, remoteControlContact8OFF=remoteControlContact8OFF, ipForTrap=ipForTrap, userSense2Name=userSense2Name, resetSmartContact6=resetSmartContact6, alarmSenseName=alarmSenseName, resetedSmartContact6=resetedSmartContact6, userSense1Name=userSense1Name, PYSNMP_MODULE_ID=snr, remoteControlContact8=remoteControlContact8, monitorAlarmSignalContact3=monitorAlarmSignalContact3, temperatureSensor=temperatureSensor, monitorAnySensorSignal1contact4=monitorAnySensorSignal1contact4, sysVoltageAlarm=sysVoltageAlarm, temperatureSensorAlarM=temperatureSensorAlarM, numberOfAlarmPositives=numberOfAlarmPositives, signalContact3Ok=signalContact3Ok, ipAddressEntry=ipAddressEntry, monitorAnySensorSignal2contact7=monitorAnySensorSignal2contact7, voltageAlarm=voltageAlarm, voltageSignalAlarm=voltageSignalAlarm, numberOfResetPositives=numberOfResetPositives, erd2Traps=erd2Traps)
