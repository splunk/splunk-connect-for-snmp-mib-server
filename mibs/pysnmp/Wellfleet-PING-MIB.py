#
# PySNMP MIB module Wellfleet-PING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-PING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Gauge32, Counter32, ModuleIdentity, Counter64, TimeTicks, Unsigned32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Gauge32", "Counter32", "ModuleIdentity", "Counter64", "TimeTicks", "Unsigned32", "NotificationType", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfPingGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfPingGroup")
wfPingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1), )
if mibBuilder.loadTexts: wfPingTable.setStatus('mandatory')
wfPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1), ).setIndexNames((0, "Wellfleet-PING-MIB", "wfPingType"), (0, "Wellfleet-PING-MIB", "wfPingIndex"))
if mibBuilder.loadTexts: wfPingEntry.setStatus('mandatory')
wfPingDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingDelete.setStatus('mandatory')
wfPingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingIndex.setStatus('mandatory')
wfPingType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ip", 1), ("ipx", 2), ("llc", 3), ("osi", 4), ("vines", 5), ("appletalk", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingType.setStatus('mandatory')
wfPingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingAddress.setStatus('mandatory')
wfPingSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4850)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingSize.setStatus('mandatory')
wfPingTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingTimeOut.setStatus('mandatory')
wfPingRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingRetry.setStatus('mandatory')
wfPingTraceRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trace", 1), ("notrace", 2))).clone('notrace')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingTraceRoute.setStatus('mandatory')
wfPingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingDelay.setStatus('mandatory')
wfPingRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingRemaining.setStatus('mandatory')
wfPingTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingTimer.setStatus('mandatory')
wfPingSourceRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nosourceroute", 1), ("strictsourceroute", 2), ("loosesourceroute", 3))).clone('nosourceroute')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingSourceRoute.setStatus('mandatory')
wfPingSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingSourceAddress.setStatus('mandatory')
wfPingTypeOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("tosnormal", 1))).clone('tosnormal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingTypeOfService.setStatus('mandatory')
wfPingNumHistBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingNumHistBucketsRequested.setStatus('mandatory')
wfPingNumHistBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingNumHistBucketsGranted.setStatus('mandatory')
wfPingSiteName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingSiteName.setStatus('mandatory')
wfPingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("done", 1), ("busy", 2), ("badaddress", 3), ("error", 4), ("timeout", 5), ("invalidparams", 6), ("resourceerror", 7), ("targetunreach", 8), ("ipunavail", 9), ("icmpdestunreach", 10), ("ttlexceeded", 11), ("notimplemented", 12), ("icmphostunreach", 13), ("icmpnetunreach", 14), ("icmpprohibnet", 15), ("icmpprohibhost", 16), ("icmpsrcrtefail", 17), ("protounreach", 18), ("portunreach", 19), ("fragneeded", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingStatus.setStatus('mandatory')
wfPingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("go", 1), ("waiting", 2))).clone('waiting')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingAction.setStatus('mandatory')
wfPingLastMinRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingLastMinRoundTripTime.setStatus('mandatory')
wfPingLastMaxRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingLastMaxRoundTripTime.setStatus('mandatory')
wfPingLastTotalRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingLastTotalRoundTripTime.setStatus('mandatory')
wfPingIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 23), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingIPAddress.setStatus('mandatory')
wfPingSuccessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingSuccessStatus.setStatus('mandatory')
wfPingMaxHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingMaxHopCount.setStatus('mandatory')
wfPingTraceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 2), )
if mibBuilder.loadTexts: wfPingTraceTable.setStatus('mandatory')
wfPingTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 2, 1), ).setIndexNames((0, "Wellfleet-PING-MIB", "wfPingTraceType"), (0, "Wellfleet-PING-MIB", "wfPingEntryIndex"), (0, "Wellfleet-PING-MIB", "wfPingTraceIndex"))
if mibBuilder.loadTexts: wfPingTraceEntry.setStatus('mandatory')
wfPingTraceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingTraceType.setStatus('mandatory')
wfPingEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingEntryIndex.setStatus('mandatory')
wfPingTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingTraceIndex.setStatus('mandatory')
wfPingTraceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingTraceAddress.setStatus('mandatory')
wfPingSourceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 3), )
if mibBuilder.loadTexts: wfPingSourceTable.setStatus('mandatory')
wfPingSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 3, 1), ).setIndexNames((0, "Wellfleet-PING-MIB", "wfPingSourceType"), (0, "Wellfleet-PING-MIB", "wfPingSourceEntryIndex"), (0, "Wellfleet-PING-MIB", "wfPingSourceIndex"))
if mibBuilder.loadTexts: wfPingSourceEntry.setStatus('mandatory')
wfPingSourceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sourcecreated", 1), ("sourcedeleted", 2))).clone('sourcecreated')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingSourceDelete.setStatus('mandatory')
wfPingSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingSourceType.setStatus('mandatory')
wfPingSourceEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingSourceEntryIndex.setStatus('mandatory')
wfPingSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingSourceIndex.setStatus('mandatory')
wfPingSourceRouteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPingSourceRouteAddress.setStatus('mandatory')
wfPingHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4), )
if mibBuilder.loadTexts: wfPingHistoryTable.setStatus('mandatory')
wfPingHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1), ).setIndexNames((0, "Wellfleet-PING-MIB", "wfPingHistoryType"), (0, "Wellfleet-PING-MIB", "wfPingHistoryEntryIndex"), (0, "Wellfleet-PING-MIB", "wfPingHistoryIndex"))
if mibBuilder.loadTexts: wfPingHistoryEntry.setStatus('mandatory')
wfPingHistoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingHistoryType.setStatus('mandatory')
wfPingHistoryEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingHistoryEntryIndex.setStatus('mandatory')
wfPingHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingHistoryIndex.setStatus('mandatory')
wfPingReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingReceived.setStatus('mandatory')
wfPingDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingDropped.setStatus('mandatory')
wfPingRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingRoundTripTime.setStatus('mandatory')
wfPingTotalRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingTotalRoundTripTime.setStatus('mandatory')
wfPingMinRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingMinRoundTripTime.setStatus('mandatory')
wfPingMaxRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingMaxRoundTripTime.setStatus('mandatory')
wfPingBegan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 13, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPingBegan.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-PING-MIB", wfPingTimer=wfPingTimer, wfPingTraceAddress=wfPingTraceAddress, wfPingHistoryIndex=wfPingHistoryIndex, wfPingSourceRouteAddress=wfPingSourceRouteAddress, wfPingSourceTable=wfPingSourceTable, wfPingTotalRoundTripTime=wfPingTotalRoundTripTime, wfPingTable=wfPingTable, wfPingIndex=wfPingIndex, wfPingSourceRoute=wfPingSourceRoute, wfPingNumHistBucketsGranted=wfPingNumHistBucketsGranted, wfPingSourceType=wfPingSourceType, wfPingHistoryEntryIndex=wfPingHistoryEntryIndex, wfPingMaxRoundTripTime=wfPingMaxRoundTripTime, wfPingType=wfPingType, wfPingDropped=wfPingDropped, wfPingSourceIndex=wfPingSourceIndex, wfPingTimeOut=wfPingTimeOut, wfPingBegan=wfPingBegan, wfPingTraceTable=wfPingTraceTable, wfPingIPAddress=wfPingIPAddress, wfPingRetry=wfPingRetry, wfPingTraceType=wfPingTraceType, wfPingReceived=wfPingReceived, wfPingLastMaxRoundTripTime=wfPingLastMaxRoundTripTime, wfPingRoundTripTime=wfPingRoundTripTime, wfPingSourceEntry=wfPingSourceEntry, wfPingAction=wfPingAction, wfPingEntry=wfPingEntry, wfPingSourceAddress=wfPingSourceAddress, wfPingHistoryTable=wfPingHistoryTable, wfPingTypeOfService=wfPingTypeOfService, wfPingMinRoundTripTime=wfPingMinRoundTripTime, wfPingTraceEntry=wfPingTraceEntry, wfPingDelete=wfPingDelete, wfPingEntryIndex=wfPingEntryIndex, wfPingSuccessStatus=wfPingSuccessStatus, wfPingTraceRoute=wfPingTraceRoute, wfPingDelay=wfPingDelay, wfPingSiteName=wfPingSiteName, wfPingTraceIndex=wfPingTraceIndex, wfPingSourceEntryIndex=wfPingSourceEntryIndex, wfPingNumHistBucketsRequested=wfPingNumHistBucketsRequested, wfPingMaxHopCount=wfPingMaxHopCount, wfPingAddress=wfPingAddress, wfPingLastTotalRoundTripTime=wfPingLastTotalRoundTripTime, wfPingSize=wfPingSize, wfPingRemaining=wfPingRemaining, wfPingHistoryType=wfPingHistoryType, wfPingLastMinRoundTripTime=wfPingLastMinRoundTripTime, wfPingSourceDelete=wfPingSourceDelete, wfPingHistoryEntry=wfPingHistoryEntry, wfPingStatus=wfPingStatus)
