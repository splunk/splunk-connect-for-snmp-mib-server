#
# PySNMP MIB module L2TP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/L2TP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:54:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, IpAddress, TimeTicks, Counter32, iso, Unsigned32, Integer32, MibIdentifier, NotificationType, ObjectIdentity, transmission, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "IpAddress", "TimeTicks", "Counter32", "iso", "Unsigned32", "Integer32", "MibIdentifier", "NotificationType", "ObjectIdentity", "transmission", "Counter64", "Gauge32")
RowStatus, TextualConvention, TruthValue, StorageType, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "StorageType", "DisplayString")
l2tp = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 95))
l2tp.setRevisions(('2002-08-23 00:00',))
if mibBuilder.loadTexts: l2tp.setLastUpdated('200208230000Z')
if mibBuilder.loadTexts: l2tp.setOrganization('IETF L2TP Working Group')
class L2tpMilliSeconds(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-3'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483646)

l2tpNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 0))
l2tpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 1))
l2tpTransports = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 3))
l2tpConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 4))
l2tpScalar = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 1, 1))
l2tpConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 1))
l2tpStats = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2))
l2tpTransportIpUdp = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 3, 1))
l2tpIpUdpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1))
l2tpIpUdpTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 2))
l2tpAdminState = MibScalar((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpAdminState.setStatus('current')
l2tpDrainTunnels = MibScalar((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpDrainTunnels.setStatus('current')
l2tpProtocolVersions = MibScalar((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpProtocolVersions.setStatus('current')
l2tpVendorName = MibScalar((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpVendorName.setStatus('current')
l2tpFirmwareRev = MibScalar((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpFirmwareRev.setStatus('current')
l2tpDrainingTunnels = MibScalar((1, 3, 6, 1, 2, 1, 10, 95, 1, 1, 2, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDrainingTunnels.setStatus('current')
l2tpDomainConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 1, 2), )
if mibBuilder.loadTexts: l2tpDomainConfigTable.setStatus('current')
l2tpDomainConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1), ).setIndexNames((0, "L2TP-MIB", "l2tpDomainConfigId"))
if mibBuilder.loadTexts: l2tpDomainConfigEntry.setStatus('current')
l2tpDomainConfigId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: l2tpDomainConfigId.setStatus('current')
l2tpDomainConfigAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigAdminState.setStatus('current')
l2tpDomainConfigDrainTunnels = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigDrainTunnels.setStatus('current')
l2tpDomainConfigAuth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("simple", 2), ("challenge", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigAuth.setStatus('current')
l2tpDomainConfigSecret = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigSecret.setStatus('current')
l2tpDomainConfigTunnelSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("ipSec", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigTunnelSecurity.setStatus('current')
l2tpDomainConfigTunnelHelloInt = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigTunnelHelloInt.setStatus('current')
l2tpDomainConfigTunnelIdleTO = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 86400))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigTunnelIdleTO.setStatus('current')
l2tpDomainConfigControlRWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigControlRWS.setStatus('current')
l2tpDomainConfigControlMaxRetx = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigControlMaxRetx.setStatus('current')
l2tpDomainConfigControlMaxRetxTO = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(16)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigControlMaxRetxTO.setStatus('current')
l2tpDomainConfigPayloadSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onDemand", 1), ("never", 2), ("always", 3))).clone('onDemand')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigPayloadSeq.setStatus('current')
l2tpDomainConfigReassemblyTO = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 13), L2tpMilliSeconds()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigReassemblyTO.setStatus('current')
l2tpDomainConfigProxyPPPAuth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 14), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigProxyPPPAuth.setStatus('current')
l2tpDomainConfigStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 15), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigStorageType.setStatus('current')
l2tpDomainConfigStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 2, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpDomainConfigStatus.setStatus('current')
l2tpDomainStatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 1, 3), )
if mibBuilder.loadTexts: l2tpDomainStatsTable.setStatus('current')
l2tpDomainStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1), )
l2tpDomainConfigEntry.registerAugmentions(("L2TP-MIB", "l2tpDomainStatsEntry"))
l2tpDomainStatsEntry.setIndexNames(*l2tpDomainConfigEntry.getIndexNames())
if mibBuilder.loadTexts: l2tpDomainStatsEntry.setStatus('current')
l2tpDomainStatsTotalTunnels = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsTotalTunnels.setStatus('current')
l2tpDomainStatsFailedTunnels = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsFailedTunnels.setStatus('current')
l2tpDomainStatsFailedAuths = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsFailedAuths.setStatus('current')
l2tpDomainStatsActiveTunnels = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsActiveTunnels.setStatus('current')
l2tpDomainStatsTotalSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsTotalSessions.setStatus('current')
l2tpDomainStatsFailedSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsFailedSessions.setStatus('current')
l2tpDomainStatsActiveSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsActiveSessions.setStatus('current')
l2tpDomainStatsDrainingTunnels = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsDrainingTunnels.setStatus('current')
l2tpDomainStatsControlRxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlRxOctets.setStatus('current')
l2tpDomainStatsControlRxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlRxPkts.setStatus('current')
l2tpDomainStatsControlTxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlTxOctets.setStatus('current')
l2tpDomainStatsControlTxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlTxPkts.setStatus('current')
l2tpDomainStatsPayloadRxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadRxOctets.setStatus('current')
l2tpDomainStatsPayloadRxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadRxPkts.setStatus('current')
l2tpDomainStatsPayloadRxDiscs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadRxDiscs.setStatus('current')
l2tpDomainStatsPayloadTxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadTxOctets.setStatus('current')
l2tpDomainStatsPayloadTxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadTxPkts.setStatus('current')
l2tpDomainStatsControlHCRxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlHCRxOctets.setStatus('current')
l2tpDomainStatsControlHCRxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlHCRxPkts.setStatus('current')
l2tpDomainStatsControlHCTxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlHCTxOctets.setStatus('current')
l2tpDomainStatsControlHCTxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsControlHCTxPkts.setStatus('current')
l2tpDomainStatsPayloadHCRxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadHCRxOctets.setStatus('current')
l2tpDomainStatsPayloadHCRxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadHCRxPkts.setStatus('current')
l2tpDomainStatsPayloadHCRxDiscs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadHCRxDiscs.setStatus('current')
l2tpDomainStatsPayloadHCTxOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadHCTxOctets.setStatus('current')
l2tpDomainStatsPayloadHCTxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpDomainStatsPayloadHCTxPkts.setStatus('current')
l2tpTunnelConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 1, 4), )
if mibBuilder.loadTexts: l2tpTunnelConfigTable.setStatus('current')
l2tpTunnelConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1), ).setIndexNames((0, "L2TP-MIB", "l2tpTunnelConfigIfIndex"))
if mibBuilder.loadTexts: l2tpTunnelConfigEntry.setStatus('current')
l2tpTunnelConfigIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: l2tpTunnelConfigIfIndex.setStatus('current')
l2tpTunnelConfigDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigDomainId.setStatus('current')
l2tpTunnelConfigAuth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("simple", 2), ("challenge", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigAuth.setStatus('current')
l2tpTunnelConfigSecret = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigSecret.setStatus('current')
l2tpTunnelConfigSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("ipsec", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigSecurity.setStatus('current')
l2tpTunnelConfigHelloInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigHelloInterval.setStatus('current')
l2tpTunnelConfigIdleTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigIdleTimeout.setStatus('current')
l2tpTunnelConfigControlRWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigControlRWS.setStatus('current')
l2tpTunnelConfigControlMaxRetx = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigControlMaxRetx.setStatus('current')
l2tpTunnelConfigControlMaxRetxTO = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(16)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigControlMaxRetxTO.setStatus('current')
l2tpTunnelConfigPayloadSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onDemand", 1), ("never", 2), ("always", 3))).clone('onDemand')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigPayloadSeq.setStatus('current')
l2tpTunnelConfigReassemblyTO = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 12), L2tpMilliSeconds()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigReassemblyTO.setStatus('current')
l2tpTunnelConfigTransport = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("udpIp", 3), ("frameRelay", 4), ("atm", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigTransport.setStatus('current')
l2tpTunnelConfigDrainTunnel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigDrainTunnel.setStatus('current')
l2tpTunnelConfigProxyPPPAuth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 4, 1, 15), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelConfigProxyPPPAuth.setStatus('current')
l2tpTunnelStatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 1, 5), )
if mibBuilder.loadTexts: l2tpTunnelStatsTable.setStatus('current')
l2tpTunnelStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1), )
l2tpTunnelConfigEntry.registerAugmentions(("L2TP-MIB", "l2tpTunnelStatsEntry"))
l2tpTunnelStatsEntry.setIndexNames(*l2tpTunnelConfigEntry.getIndexNames())
if mibBuilder.loadTexts: l2tpTunnelStatsEntry.setStatus('current')
l2tpTunnelStatsLocalTID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsLocalTID.setStatus('current')
l2tpTunnelStatsRemoteTID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsRemoteTID.setStatus('current')
l2tpTunnelStatsState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tunnelIdle", 1), ("tunnelConnecting", 2), ("tunnelEstablished", 3), ("tunnelDisconnecting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsState.setStatus('current')
l2tpTunnelStatsInitiated = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("locally", 1), ("remotely", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsInitiated.setStatus('current')
l2tpTunnelStatsRemoteHostName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsRemoteHostName.setStatus('current')
l2tpTunnelStatsRemoteVendorName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsRemoteVendorName.setStatus('current')
l2tpTunnelStatsRemoteFirmwareRev = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsRemoteFirmwareRev.setStatus('current')
l2tpTunnelStatsRemoteProtocolVer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsRemoteProtocolVer.setStatus('current')
l2tpTunnelStatsInitialRemoteRWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsInitialRemoteRWS.setStatus('current')
l2tpTunnelStatsBearerCaps = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("digital", 2), ("analog", 3), ("digitalAnalog", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsBearerCaps.setStatus('current')
l2tpTunnelStatsFramingCaps = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("sync", 2), ("async", 3), ("syncAsync", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsFramingCaps.setStatus('current')
l2tpTunnelStatsControlRxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsControlRxPkts.setStatus('current')
l2tpTunnelStatsControlRxZLB = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsControlRxZLB.setStatus('current')
l2tpTunnelStatsControlOutOfSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsControlOutOfSeq.setStatus('current')
l2tpTunnelStatsControlOutOfWin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsControlOutOfWin.setStatus('current')
l2tpTunnelStatsControlTxPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsControlTxPkts.setStatus('current')
l2tpTunnelStatsControlTxZLB = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsControlTxZLB.setStatus('current')
l2tpTunnelStatsControlAckTO = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsControlAckTO.setStatus('current')
l2tpTunnelStatsCurrentRemoteRWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 19), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsCurrentRemoteRWS.setStatus('current')
l2tpTunnelStatsTxSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsTxSeq.setStatus('current')
l2tpTunnelStatsTxSeqAck = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsTxSeqAck.setStatus('current')
l2tpTunnelStatsRxSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsRxSeq.setStatus('current')
l2tpTunnelStatsRxSeqAck = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsRxSeqAck.setStatus('current')
l2tpTunnelStatsTotalSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsTotalSessions.setStatus('current')
l2tpTunnelStatsFailedSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsFailedSessions.setStatus('current')
l2tpTunnelStatsActiveSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsActiveSessions.setStatus('current')
l2tpTunnelStatsLastResultCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsLastResultCode.setStatus('current')
l2tpTunnelStatsLastErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsLastErrorCode.setStatus('current')
l2tpTunnelStatsLastErrorMessage = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 29), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsLastErrorMessage.setStatus('current')
l2tpTunnelStatsDrainingTunnel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 5, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelStatsDrainingTunnel.setStatus('current')
l2tpSessionStatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 1, 7), )
if mibBuilder.loadTexts: l2tpSessionStatsTable.setStatus('current')
l2tpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1), ).setIndexNames((0, "L2TP-MIB", "l2tpSessionStatsTunnelIfIndex"), (0, "L2TP-MIB", "l2tpSessionStatsLocalSID"))
if mibBuilder.loadTexts: l2tpSessionStatsEntry.setStatus('current')
l2tpSessionStatsTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: l2tpSessionStatsTunnelIfIndex.setStatus('current')
l2tpSessionStatsIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsIfIndex.setStatus('current')
l2tpSessionStatsLocalSID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: l2tpSessionStatsLocalSID.setStatus('current')
l2tpSessionStatsRemoteSID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsRemoteSID.setStatus('current')
l2tpSessionStatsUserName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsUserName.setStatus('current')
l2tpSessionStatsState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sessionIdle", 1), ("sessionConnecting", 2), ("sessionEstablished", 3), ("sessionDisconnecting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsState.setStatus('current')
l2tpSessionStatsCallType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lacIncoming", 1), ("lnsIncoming", 2), ("lacOutgoing", 3), ("lnsOutgoing", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsCallType.setStatus('current')
l2tpSessionStatsCallSerialNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsCallSerialNumber.setStatus('current')
l2tpSessionStatsTxConnectSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 9), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsTxConnectSpeed.setStatus('current')
l2tpSessionStatsRxConnectSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 10), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsRxConnectSpeed.setStatus('current')
l2tpSessionStatsCallBearerType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("digital", 2), ("analog", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsCallBearerType.setStatus('current')
l2tpSessionStatsFramingType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("sync", 2), ("async", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsFramingType.setStatus('current')
l2tpSessionStatsPhysChanId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsPhysChanId.setStatus('current')
l2tpSessionStatsDNIS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsDNIS.setStatus('current')
l2tpSessionStatsCLID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsCLID.setStatus('current')
l2tpSessionStatsSubAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsSubAddress.setStatus('current')
l2tpSessionStatsPrivateGroupID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsPrivateGroupID.setStatus('current')
l2tpSessionStatsProxyLcp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsProxyLcp.setStatus('current')
l2tpSessionStatsAuthMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("text", 2), ("pppChap", 3), ("pppPap", 4), ("pppEap", 5), ("pppMsChapV1", 6), ("pppMsChapV2", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsAuthMethod.setStatus('current')
l2tpSessionStatsSequencingState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("remote", 2), ("local", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsSequencingState.setStatus('current')
l2tpSessionStatsOutSequence = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsOutSequence.setStatus('current')
l2tpSessionStatsReassemblyTO = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsReassemblyTO.setStatus('current')
l2tpSessionStatsTxSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsTxSeq.setStatus('current')
l2tpSessionStatsRxSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 7, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionStatsRxSeq.setStatus('current')
l2tpTunnelMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 1, 8), )
if mibBuilder.loadTexts: l2tpTunnelMapTable.setStatus('current')
l2tpTunnelMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 1, 8, 1), ).setIndexNames((0, "L2TP-MIB", "l2tpTunnelMapLocalTID"))
if mibBuilder.loadTexts: l2tpTunnelMapEntry.setStatus('current')
l2tpTunnelMapLocalTID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: l2tpTunnelMapLocalTID.setStatus('current')
l2tpTunnelMapIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 8, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelMapIfIndex.setStatus('current')
l2tpSessionMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 1, 9), )
if mibBuilder.loadTexts: l2tpSessionMapTable.setStatus('current')
l2tpSessionMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1), ).setIndexNames((0, "L2TP-MIB", "l2tpSessionMapIfIndex"))
if mibBuilder.loadTexts: l2tpSessionMapEntry.setStatus('current')
l2tpSessionMapIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: l2tpSessionMapIfIndex.setStatus('current')
l2tpSessionMapTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpSessionMapTunnelIfIndex.setStatus('current')
l2tpSessionMapLocalSID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionMapLocalSID.setStatus('current')
l2tpSessionMapStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: l2tpSessionMapStatus.setStatus('current')
l2tpUdpStatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2), )
if mibBuilder.loadTexts: l2tpUdpStatsTable.setStatus('current')
l2tpUdpStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1), ).setIndexNames((0, "L2TP-MIB", "l2tpUdpStatsIfIndex"))
if mibBuilder.loadTexts: l2tpUdpStatsEntry.setStatus('current')
l2tpUdpStatsIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: l2tpUdpStatsIfIndex.setStatus('current')
l2tpUdpStatsPeerPort = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpUdpStatsPeerPort.setStatus('current')
l2tpUdpStatsLocalPort = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 3, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpUdpStatsLocalPort.setStatus('current')
l2tpTunnelAuthFailure = NotificationType((1, 3, 6, 1, 2, 1, 10, 95, 0, 1)).setObjects(("L2TP-MIB", "l2tpTunnelStatsInitiated"), ("L2TP-MIB", "l2tpTunnelStatsRemoteHostName"))
if mibBuilder.loadTexts: l2tpTunnelAuthFailure.setStatus('current')
l2tpGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 4, 1))
l2tpCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 4, 2))
l2tpMIBFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 95, 4, 2, 1)).setObjects(("L2TP-MIB", "l2tpConfigGroup"), ("L2TP-MIB", "l2tpStatsGroup"), ("L2TP-MIB", "l2tpTrapGroup"), ("L2TP-MIB", "l2tpIpUdpGroup"), ("L2TP-MIB", "l2tpDomainGroup"), ("L2TP-MIB", "l2tpMappingGroup"), ("L2TP-MIB", "l2tpSecurityGroup"), ("L2TP-MIB", "l2tpHCPacketGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpMIBFullCompliance = l2tpMIBFullCompliance.setStatus('current')
l2tpMIBReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 95, 4, 2, 2)).setObjects(("L2TP-MIB", "l2tpConfigGroup"), ("L2TP-MIB", "l2tpStatsGroup"), ("L2TP-MIB", "l2tpTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpMIBReadOnlyCompliance = l2tpMIBReadOnlyCompliance.setStatus('current')
l2tpConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 1)).setObjects(("L2TP-MIB", "l2tpAdminState"), ("L2TP-MIB", "l2tpDrainTunnels"), ("L2TP-MIB", "l2tpTunnelConfigDomainId"), ("L2TP-MIB", "l2tpTunnelConfigHelloInterval"), ("L2TP-MIB", "l2tpTunnelConfigIdleTimeout"), ("L2TP-MIB", "l2tpTunnelConfigControlRWS"), ("L2TP-MIB", "l2tpTunnelConfigControlMaxRetx"), ("L2TP-MIB", "l2tpTunnelConfigControlMaxRetxTO"), ("L2TP-MIB", "l2tpTunnelConfigPayloadSeq"), ("L2TP-MIB", "l2tpTunnelConfigReassemblyTO"), ("L2TP-MIB", "l2tpTunnelConfigTransport"), ("L2TP-MIB", "l2tpTunnelConfigDrainTunnel"), ("L2TP-MIB", "l2tpTunnelConfigProxyPPPAuth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpConfigGroup = l2tpConfigGroup.setStatus('current')
l2tpStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 2)).setObjects(("L2TP-MIB", "l2tpProtocolVersions"), ("L2TP-MIB", "l2tpVendorName"), ("L2TP-MIB", "l2tpFirmwareRev"), ("L2TP-MIB", "l2tpDrainingTunnels"), ("L2TP-MIB", "l2tpTunnelStatsLocalTID"), ("L2TP-MIB", "l2tpTunnelStatsRemoteTID"), ("L2TP-MIB", "l2tpTunnelStatsState"), ("L2TP-MIB", "l2tpTunnelStatsInitiated"), ("L2TP-MIB", "l2tpTunnelStatsRemoteHostName"), ("L2TP-MIB", "l2tpTunnelStatsRemoteVendorName"), ("L2TP-MIB", "l2tpTunnelStatsRemoteFirmwareRev"), ("L2TP-MIB", "l2tpTunnelStatsRemoteProtocolVer"), ("L2TP-MIB", "l2tpTunnelStatsInitialRemoteRWS"), ("L2TP-MIB", "l2tpTunnelStatsBearerCaps"), ("L2TP-MIB", "l2tpTunnelStatsFramingCaps"), ("L2TP-MIB", "l2tpTunnelStatsControlRxPkts"), ("L2TP-MIB", "l2tpTunnelStatsControlRxZLB"), ("L2TP-MIB", "l2tpTunnelStatsControlOutOfSeq"), ("L2TP-MIB", "l2tpTunnelStatsControlOutOfWin"), ("L2TP-MIB", "l2tpTunnelStatsControlTxPkts"), ("L2TP-MIB", "l2tpTunnelStatsControlTxZLB"), ("L2TP-MIB", "l2tpTunnelStatsControlAckTO"), ("L2TP-MIB", "l2tpTunnelStatsCurrentRemoteRWS"), ("L2TP-MIB", "l2tpTunnelStatsTxSeq"), ("L2TP-MIB", "l2tpTunnelStatsTxSeqAck"), ("L2TP-MIB", "l2tpTunnelStatsRxSeq"), ("L2TP-MIB", "l2tpTunnelStatsRxSeqAck"), ("L2TP-MIB", "l2tpTunnelStatsTotalSessions"), ("L2TP-MIB", "l2tpTunnelStatsFailedSessions"), ("L2TP-MIB", "l2tpTunnelStatsActiveSessions"), ("L2TP-MIB", "l2tpTunnelStatsLastResultCode"), ("L2TP-MIB", "l2tpTunnelStatsLastErrorCode"), ("L2TP-MIB", "l2tpTunnelStatsLastErrorMessage"), ("L2TP-MIB", "l2tpTunnelStatsDrainingTunnel"), ("L2TP-MIB", "l2tpSessionStatsIfIndex"), ("L2TP-MIB", "l2tpSessionStatsRemoteSID"), ("L2TP-MIB", "l2tpSessionStatsUserName"), ("L2TP-MIB", "l2tpSessionStatsState"), ("L2TP-MIB", "l2tpSessionStatsCallType"), ("L2TP-MIB", "l2tpSessionStatsCallSerialNumber"), ("L2TP-MIB", "l2tpSessionStatsTxConnectSpeed"), ("L2TP-MIB", "l2tpSessionStatsRxConnectSpeed"), ("L2TP-MIB", "l2tpSessionStatsCallBearerType"), ("L2TP-MIB", "l2tpSessionStatsFramingType"), ("L2TP-MIB", "l2tpSessionStatsPhysChanId"), ("L2TP-MIB", "l2tpSessionStatsDNIS"), ("L2TP-MIB", "l2tpSessionStatsCLID"), ("L2TP-MIB", "l2tpSessionStatsSubAddress"), ("L2TP-MIB", "l2tpSessionStatsPrivateGroupID"), ("L2TP-MIB", "l2tpSessionStatsProxyLcp"), ("L2TP-MIB", "l2tpSessionStatsAuthMethod"), ("L2TP-MIB", "l2tpSessionStatsSequencingState"), ("L2TP-MIB", "l2tpSessionStatsOutSequence"), ("L2TP-MIB", "l2tpSessionStatsReassemblyTO"), ("L2TP-MIB", "l2tpSessionStatsTxSeq"), ("L2TP-MIB", "l2tpSessionStatsRxSeq"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpStatsGroup = l2tpStatsGroup.setStatus('current')
l2tpIpUdpGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 3)).setObjects(("L2TP-MIB", "l2tpUdpStatsPeerPort"), ("L2TP-MIB", "l2tpUdpStatsLocalPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpIpUdpGroup = l2tpIpUdpGroup.setStatus('current')
l2tpDomainGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 4)).setObjects(("L2TP-MIB", "l2tpDomainConfigAdminState"), ("L2TP-MIB", "l2tpDomainConfigDrainTunnels"), ("L2TP-MIB", "l2tpDomainConfigTunnelHelloInt"), ("L2TP-MIB", "l2tpDomainConfigTunnelIdleTO"), ("L2TP-MIB", "l2tpDomainConfigControlRWS"), ("L2TP-MIB", "l2tpDomainConfigControlMaxRetx"), ("L2TP-MIB", "l2tpDomainConfigControlMaxRetxTO"), ("L2TP-MIB", "l2tpDomainConfigPayloadSeq"), ("L2TP-MIB", "l2tpDomainConfigReassemblyTO"), ("L2TP-MIB", "l2tpDomainConfigProxyPPPAuth"), ("L2TP-MIB", "l2tpDomainConfigStorageType"), ("L2TP-MIB", "l2tpDomainConfigStatus"), ("L2TP-MIB", "l2tpDomainStatsTotalTunnels"), ("L2TP-MIB", "l2tpDomainStatsFailedTunnels"), ("L2TP-MIB", "l2tpDomainStatsFailedAuths"), ("L2TP-MIB", "l2tpDomainStatsActiveTunnels"), ("L2TP-MIB", "l2tpDomainStatsTotalSessions"), ("L2TP-MIB", "l2tpDomainStatsFailedSessions"), ("L2TP-MIB", "l2tpDomainStatsActiveSessions"), ("L2TP-MIB", "l2tpDomainStatsDrainingTunnels"), ("L2TP-MIB", "l2tpDomainStatsControlRxOctets"), ("L2TP-MIB", "l2tpDomainStatsControlRxPkts"), ("L2TP-MIB", "l2tpDomainStatsControlTxOctets"), ("L2TP-MIB", "l2tpDomainStatsControlTxPkts"), ("L2TP-MIB", "l2tpDomainStatsPayloadRxOctets"), ("L2TP-MIB", "l2tpDomainStatsPayloadRxPkts"), ("L2TP-MIB", "l2tpDomainStatsPayloadRxDiscs"), ("L2TP-MIB", "l2tpDomainStatsPayloadTxOctets"), ("L2TP-MIB", "l2tpDomainStatsPayloadTxPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpDomainGroup = l2tpDomainGroup.setStatus('current')
l2tpMappingGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 5)).setObjects(("L2TP-MIB", "l2tpTunnelMapIfIndex"), ("L2TP-MIB", "l2tpSessionMapTunnelIfIndex"), ("L2TP-MIB", "l2tpSessionMapLocalSID"), ("L2TP-MIB", "l2tpSessionMapStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpMappingGroup = l2tpMappingGroup.setStatus('current')
l2tpSecurityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 6)).setObjects(("L2TP-MIB", "l2tpDomainConfigAuth"), ("L2TP-MIB", "l2tpDomainConfigSecret"), ("L2TP-MIB", "l2tpDomainConfigTunnelSecurity"), ("L2TP-MIB", "l2tpTunnelConfigAuth"), ("L2TP-MIB", "l2tpTunnelConfigSecret"), ("L2TP-MIB", "l2tpTunnelConfigSecurity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpSecurityGroup = l2tpSecurityGroup.setStatus('current')
l2tpTrapGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 7)).setObjects(("L2TP-MIB", "l2tpTunnelAuthFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpTrapGroup = l2tpTrapGroup.setStatus('current')
l2tpHCPacketGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 95, 4, 1, 8)).setObjects(("L2TP-MIB", "l2tpDomainStatsControlHCRxOctets"), ("L2TP-MIB", "l2tpDomainStatsControlHCRxPkts"), ("L2TP-MIB", "l2tpDomainStatsControlHCTxOctets"), ("L2TP-MIB", "l2tpDomainStatsControlHCTxPkts"), ("L2TP-MIB", "l2tpDomainStatsPayloadHCRxOctets"), ("L2TP-MIB", "l2tpDomainStatsPayloadHCRxPkts"), ("L2TP-MIB", "l2tpDomainStatsPayloadHCRxDiscs"), ("L2TP-MIB", "l2tpDomainStatsPayloadHCTxOctets"), ("L2TP-MIB", "l2tpDomainStatsPayloadHCTxPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    l2tpHCPacketGroup = l2tpHCPacketGroup.setStatus('current')
mibBuilder.exportSymbols("L2TP-MIB", l2tpTunnelStatsControlAckTO=l2tpTunnelStatsControlAckTO, l2tpTunnelStatsInitiated=l2tpTunnelStatsInitiated, l2tpIpUdpTraps=l2tpIpUdpTraps, l2tpTunnelStatsFramingCaps=l2tpTunnelStatsFramingCaps, l2tpMIBFullCompliance=l2tpMIBFullCompliance, l2tpProtocolVersions=l2tpProtocolVersions, l2tpSessionStatsFramingType=l2tpSessionStatsFramingType, l2tpDomainStatsPayloadTxPkts=l2tpDomainStatsPayloadTxPkts, l2tpTunnelConfigTransport=l2tpTunnelConfigTransport, l2tpTunnelConfigProxyPPPAuth=l2tpTunnelConfigProxyPPPAuth, l2tpSessionStatsAuthMethod=l2tpSessionStatsAuthMethod, l2tpDomainStatsControlHCTxPkts=l2tpDomainStatsControlHCTxPkts, l2tpTunnelConfigDomainId=l2tpTunnelConfigDomainId, l2tpSessionStatsLocalSID=l2tpSessionStatsLocalSID, l2tpDomainConfigDrainTunnels=l2tpDomainConfigDrainTunnels, l2tpDomainConfigId=l2tpDomainConfigId, l2tpTunnelStatsRxSeq=l2tpTunnelStatsRxSeq, l2tpDomainStatsPayloadTxOctets=l2tpDomainStatsPayloadTxOctets, l2tpSessionStatsPhysChanId=l2tpSessionStatsPhysChanId, l2tpSecurityGroup=l2tpSecurityGroup, l2tpUdpStatsIfIndex=l2tpUdpStatsIfIndex, l2tpTunnelStatsCurrentRemoteRWS=l2tpTunnelStatsCurrentRemoteRWS, l2tpDomainStatsFailedSessions=l2tpDomainStatsFailedSessions, l2tpDomainConfigTunnelSecurity=l2tpDomainConfigTunnelSecurity, l2tpDomainConfigProxyPPPAuth=l2tpDomainConfigProxyPPPAuth, l2tpFirmwareRev=l2tpFirmwareRev, l2tpDomainStatsControlRxOctets=l2tpDomainStatsControlRxOctets, l2tpHCPacketGroup=l2tpHCPacketGroup, l2tpTunnelConfigHelloInterval=l2tpTunnelConfigHelloInterval, l2tpTunnelStatsFailedSessions=l2tpTunnelStatsFailedSessions, l2tpDomainConfigEntry=l2tpDomainConfigEntry, l2tpTunnelStatsLastErrorCode=l2tpTunnelStatsLastErrorCode, l2tpDomainStatsPayloadRxOctets=l2tpDomainStatsPayloadRxOctets, l2tpScalar=l2tpScalar, l2tpTransportIpUdp=l2tpTransportIpUdp, l2tpDomainStatsControlTxPkts=l2tpDomainStatsControlTxPkts, l2tpSessionStatsPrivateGroupID=l2tpSessionStatsPrivateGroupID, l2tpSessionMapLocalSID=l2tpSessionMapLocalSID, l2tpTunnelConfigControlMaxRetxTO=l2tpTunnelConfigControlMaxRetxTO, l2tpDomainStatsControlRxPkts=l2tpDomainStatsControlRxPkts, l2tpSessionStatsProxyLcp=l2tpSessionStatsProxyLcp, l2tpDomainStatsPayloadRxPkts=l2tpDomainStatsPayloadRxPkts, l2tpDrainTunnels=l2tpDrainTunnels, l2tpDomainConfigStatus=l2tpDomainConfigStatus, l2tpDomainStatsDrainingTunnels=l2tpDomainStatsDrainingTunnels, l2tpTunnelConfigAuth=l2tpTunnelConfigAuth, l2tpTunnelStatsRemoteVendorName=l2tpTunnelStatsRemoteVendorName, l2tpSessionStatsDNIS=l2tpSessionStatsDNIS, l2tpSessionMapTunnelIfIndex=l2tpSessionMapTunnelIfIndex, l2tpTunnelStatsControlOutOfSeq=l2tpTunnelStatsControlOutOfSeq, l2tpTunnelConfigPayloadSeq=l2tpTunnelConfigPayloadSeq, l2tpSessionStatsState=l2tpSessionStatsState, l2tpTunnelMapIfIndex=l2tpTunnelMapIfIndex, l2tpUdpStatsTable=l2tpUdpStatsTable, l2tpConformance=l2tpConformance, l2tpTransports=l2tpTransports, l2tpStatsGroup=l2tpStatsGroup, l2tpVendorName=l2tpVendorName, l2tpSessionStatsRxSeq=l2tpSessionStatsRxSeq, l2tpTunnelStatsEntry=l2tpTunnelStatsEntry, l2tpTrapGroup=l2tpTrapGroup, l2tpDomainStatsTable=l2tpDomainStatsTable, l2tp=l2tp, l2tpDomainStatsActiveSessions=l2tpDomainStatsActiveSessions, l2tpDomainStatsPayloadHCRxPkts=l2tpDomainStatsPayloadHCRxPkts, l2tpDomainStatsPayloadRxDiscs=l2tpDomainStatsPayloadRxDiscs, l2tpMappingGroup=l2tpMappingGroup, l2tpTunnelMapLocalTID=l2tpTunnelMapLocalTID, l2tpDomainConfigControlMaxRetxTO=l2tpDomainConfigControlMaxRetxTO, l2tpTunnelConfigEntry=l2tpTunnelConfigEntry, l2tpAdminState=l2tpAdminState, l2tpDomainConfigStorageType=l2tpDomainConfigStorageType, l2tpUdpStatsEntry=l2tpUdpStatsEntry, l2tpDomainConfigReassemblyTO=l2tpDomainConfigReassemblyTO, l2tpTunnelConfigSecret=l2tpTunnelConfigSecret, l2tpTunnelStatsRemoteFirmwareRev=l2tpTunnelStatsRemoteFirmwareRev, l2tpDomainStatsControlHCTxOctets=l2tpDomainStatsControlHCTxOctets, l2tpTunnelConfigSecurity=l2tpTunnelConfigSecurity, l2tpTunnelStatsState=l2tpTunnelStatsState, l2tpDomainStatsPayloadHCTxOctets=l2tpDomainStatsPayloadHCTxOctets, l2tpTunnelStatsInitialRemoteRWS=l2tpTunnelStatsInitialRemoteRWS, l2tpTunnelStatsTotalSessions=l2tpTunnelStatsTotalSessions, l2tpTunnelConfigTable=l2tpTunnelConfigTable, l2tpTunnelStatsControlRxPkts=l2tpTunnelStatsControlRxPkts, l2tpDomainStatsTotalSessions=l2tpDomainStatsTotalSessions, l2tpDomainConfigAuth=l2tpDomainConfigAuth, l2tpSessionStatsTxSeq=l2tpSessionStatsTxSeq, l2tpSessionMapIfIndex=l2tpSessionMapIfIndex, l2tpDomainStatsFailedTunnels=l2tpDomainStatsFailedTunnels, l2tpTunnelStatsControlRxZLB=l2tpTunnelStatsControlRxZLB, l2tpSessionStatsTxConnectSpeed=l2tpSessionStatsTxConnectSpeed, l2tpSessionStatsRxConnectSpeed=l2tpSessionStatsRxConnectSpeed, l2tpSessionStatsCallBearerType=l2tpSessionStatsCallBearerType, l2tpTunnelConfigReassemblyTO=l2tpTunnelConfigReassemblyTO, l2tpIpUdpObjects=l2tpIpUdpObjects, l2tpSessionStatsEntry=l2tpSessionStatsEntry, l2tpDomainStatsControlTxOctets=l2tpDomainStatsControlTxOctets, l2tpTunnelStatsRemoteTID=l2tpTunnelStatsRemoteTID, l2tpTunnelStatsActiveSessions=l2tpTunnelStatsActiveSessions, l2tpSessionMapStatus=l2tpSessionMapStatus, l2tpSessionStatsTable=l2tpSessionStatsTable, l2tpSessionStatsCallType=l2tpSessionStatsCallType, l2tpTunnelStatsBearerCaps=l2tpTunnelStatsBearerCaps, l2tpTunnelStatsControlOutOfWin=l2tpTunnelStatsControlOutOfWin, l2tpTunnelStatsLastResultCode=l2tpTunnelStatsLastResultCode, l2tpObjects=l2tpObjects, L2tpMilliSeconds=L2tpMilliSeconds, l2tpSessionStatsTunnelIfIndex=l2tpSessionStatsTunnelIfIndex, l2tpDomainStatsPayloadHCRxOctets=l2tpDomainStatsPayloadHCRxOctets, l2tpTunnelStatsRemoteProtocolVer=l2tpTunnelStatsRemoteProtocolVer, l2tpSessionStatsCLID=l2tpSessionStatsCLID, l2tpConfig=l2tpConfig, l2tpStats=l2tpStats, l2tpTunnelStatsTable=l2tpTunnelStatsTable, l2tpDomainConfigControlMaxRetx=l2tpDomainConfigControlMaxRetx, l2tpDomainConfigAdminState=l2tpDomainConfigAdminState, l2tpDomainStatsPayloadHCTxPkts=l2tpDomainStatsPayloadHCTxPkts, l2tpTunnelStatsTxSeqAck=l2tpTunnelStatsTxSeqAck, l2tpDomainStatsEntry=l2tpDomainStatsEntry, l2tpCompliances=l2tpCompliances, PYSNMP_MODULE_ID=l2tp, l2tpTunnelStatsRemoteHostName=l2tpTunnelStatsRemoteHostName, l2tpTunnelConfigIfIndex=l2tpTunnelConfigIfIndex, l2tpSessionStatsRemoteSID=l2tpSessionStatsRemoteSID, l2tpIpUdpGroup=l2tpIpUdpGroup, l2tpUdpStatsPeerPort=l2tpUdpStatsPeerPort, l2tpDomainConfigPayloadSeq=l2tpDomainConfigPayloadSeq, l2tpDomainGroup=l2tpDomainGroup, l2tpTunnelMapEntry=l2tpTunnelMapEntry, l2tpSessionStatsIfIndex=l2tpSessionStatsIfIndex, l2tpDomainConfigControlRWS=l2tpDomainConfigControlRWS, l2tpDrainingTunnels=l2tpDrainingTunnels, l2tpDomainConfigTunnelIdleTO=l2tpDomainConfigTunnelIdleTO, l2tpTunnelConfigControlMaxRetx=l2tpTunnelConfigControlMaxRetx, l2tpSessionStatsSequencingState=l2tpSessionStatsSequencingState, l2tpMIBReadOnlyCompliance=l2tpMIBReadOnlyCompliance, l2tpDomainStatsTotalTunnels=l2tpDomainStatsTotalTunnels, l2tpTunnelStatsDrainingTunnel=l2tpTunnelStatsDrainingTunnel, l2tpDomainConfigTable=l2tpDomainConfigTable, l2tpDomainStatsPayloadHCRxDiscs=l2tpDomainStatsPayloadHCRxDiscs, l2tpTunnelConfigDrainTunnel=l2tpTunnelConfigDrainTunnel, l2tpSessionMapTable=l2tpSessionMapTable, l2tpDomainConfigTunnelHelloInt=l2tpDomainConfigTunnelHelloInt, l2tpTunnelStatsRxSeqAck=l2tpTunnelStatsRxSeqAck, l2tpTunnelStatsLastErrorMessage=l2tpTunnelStatsLastErrorMessage, l2tpNotifications=l2tpNotifications, l2tpTunnelStatsTxSeq=l2tpTunnelStatsTxSeq, l2tpUdpStatsLocalPort=l2tpUdpStatsLocalPort, l2tpGroups=l2tpGroups, l2tpSessionStatsOutSequence=l2tpSessionStatsOutSequence, l2tpSessionStatsReassemblyTO=l2tpSessionStatsReassemblyTO, l2tpSessionStatsCallSerialNumber=l2tpSessionStatsCallSerialNumber, l2tpConfigGroup=l2tpConfigGroup, l2tpTunnelStatsControlTxPkts=l2tpTunnelStatsControlTxPkts, l2tpDomainStatsActiveTunnels=l2tpDomainStatsActiveTunnels, l2tpTunnelConfigControlRWS=l2tpTunnelConfigControlRWS, l2tpSessionMapEntry=l2tpSessionMapEntry, l2tpDomainStatsControlHCRxPkts=l2tpDomainStatsControlHCRxPkts, l2tpSessionStatsSubAddress=l2tpSessionStatsSubAddress, l2tpDomainConfigSecret=l2tpDomainConfigSecret, l2tpTunnelMapTable=l2tpTunnelMapTable, l2tpTunnelConfigIdleTimeout=l2tpTunnelConfigIdleTimeout, l2tpTunnelStatsControlTxZLB=l2tpTunnelStatsControlTxZLB, l2tpTunnelAuthFailure=l2tpTunnelAuthFailure, l2tpTunnelStatsLocalTID=l2tpTunnelStatsLocalTID, l2tpSessionStatsUserName=l2tpSessionStatsUserName, l2tpDomainStatsControlHCRxOctets=l2tpDomainStatsControlHCRxOctets, l2tpDomainStatsFailedAuths=l2tpDomainStatsFailedAuths)
