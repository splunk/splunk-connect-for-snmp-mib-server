#
# PySNMP MIB module EXTREME-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:53:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
PortList, extremeAgent = mibBuilder.importSymbols("EXTREME-BASE-MIB", "PortList", "extremeAgent")
extremeSlotNumber, = mibBuilder.importSymbols("EXTREME-SYSTEM-MIB", "extremeSlotNumber")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, Counter64, Counter32, NotificationType, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32", "NotificationType", "Integer32", "IpAddress")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
extremeVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 2))
if mibBuilder.loadTexts: extremeVlan.setLastUpdated('0007240000Z')
if mibBuilder.loadTexts: extremeVlan.setOrganization('Extreme Networks, Inc.')
extremeVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1))
extremeVirtualGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 2))
extremeEncapsulationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 3))
extremeVlanIpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 4))
extremeProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5))
extremeVlanOpaqueGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 6))
extremeVlanStackGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 7))
extremeVlanStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8))
extremeVlanAggregationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9))
extremeVlanTranslationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 2, 10))
class ExtremeVlanType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("vlanLayer2", 1))

extremeVlanGlobalMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 1), )
if mibBuilder.loadTexts: extremeVlanGlobalMappingTable.setStatus('deprecated')
extremeVlanGlobalMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanGlobalMappingIdentifier"))
if mibBuilder.loadTexts: extremeVlanGlobalMappingEntry.setStatus('current')
extremeVlanGlobalMappingIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanGlobalMappingIdentifier.setStatus('current')
extremeVlanGlobalMappingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanGlobalMappingIfIndex.setStatus('current')
extremeVlanIfTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2), )
if mibBuilder.loadTexts: extremeVlanIfTable.setStatus('current')
extremeVlanIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanIfIndex"))
if mibBuilder.loadTexts: extremeVlanIfEntry.setStatus('current')
extremeVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIfIndex.setStatus('current')
extremeVlanIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIfDescr.setStatus('current')
extremeVlanIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 3), ExtremeVlanType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIfType.setStatus('current')
extremeVlanIfGlobalIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIfGlobalIdentifier.setStatus('deprecated')
extremeVlanIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIfStatus.setStatus('current')
extremeVlanIfIgnoreStpFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeVlanIfIgnoreStpFlag.setStatus('current')
extremeVlanIfIgnoreBpduFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeVlanIfIgnoreBpduFlag.setStatus('current')
extremeVlanIfLoopbackModeFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeVlanIfLoopbackModeFlag.setStatus('current')
extremeVlanIfVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanIfVlanId.setStatus('current')
class ExtremeVlanEncapsType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("vlanEncaps8021q", 1))

extremeVlanEncapsIfTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 3, 1), )
if mibBuilder.loadTexts: extremeVlanEncapsIfTable.setStatus('current')
extremeVlanEncapsIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 3, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanEncapsIfIndex"))
if mibBuilder.loadTexts: extremeVlanEncapsIfEntry.setStatus('current')
extremeVlanEncapsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 3, 1, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanEncapsIfIndex.setStatus('current')
extremeVlanEncapsIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 3, 1, 1, 2), ExtremeVlanEncapsType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanEncapsIfType.setStatus('current')
extremeVlanEncapsIfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 3, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanEncapsIfTag.setStatus('current')
extremeVlanEncapsIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 3, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanEncapsIfStatus.setStatus('current')
extremeNextAvailableVirtIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeNextAvailableVirtIfIndex.setStatus('current')
extremeVlanIpTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 4, 1), )
if mibBuilder.loadTexts: extremeVlanIpTable.setStatus('current')
extremeVlanIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 4, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanIfIndex"))
if mibBuilder.loadTexts: extremeVlanIpEntry.setStatus('current')
extremeVlanIpNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 4, 1, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIpNetAddress.setStatus('current')
extremeVlanIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 4, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIpNetMask.setStatus('current')
extremeVlanIpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 4, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIpStatus.setStatus('current')
extremeVlanIpForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 4, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanIpForwardingState.setStatus('current')
extremeVlanProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1), )
if mibBuilder.loadTexts: extremeVlanProtocolTable.setStatus('current')
extremeVlanProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanProtocolIndex"), (0, "EXTREME-VLAN-MIB", "extremeVlanProtocolIdIndex"))
if mibBuilder.loadTexts: extremeVlanProtocolEntry.setStatus('current')
extremeVlanProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolIndex.setStatus('current')
extremeVlanProtocolIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolIdIndex.setStatus('current')
extremeVlanProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolName.setStatus('current')
extremeVlanProtocolDllEncapsType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("any", 1), ("ethertype", 2), ("llc", 3), ("llcSnapEthertype", 4), ("none", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolDllEncapsType.setStatus('current')
extremeVlanProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolId.setStatus('current')
extremeVlanProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolStatus.setStatus('current')
extremeVlanProtocolVlanTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 2), )
if mibBuilder.loadTexts: extremeVlanProtocolVlanTable.setStatus('current')
extremeVlanProtocolVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 2, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanProtocolVlanIfIndex"), (0, "EXTREME-VLAN-MIB", "extremeVlanProtocolVlanProtocolIndex"))
if mibBuilder.loadTexts: extremeVlanProtocolVlanEntry.setStatus('current')
extremeVlanProtocolVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 2, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolVlanIfIndex.setStatus('current')
extremeVlanProtocolVlanProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 2, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolVlanProtocolIndex.setStatus('current')
extremeVlanProtocolVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 5, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanProtocolVlanStatus.setStatus('current')
extremeVlanOpaqueTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 6, 1), )
if mibBuilder.loadTexts: extremeVlanOpaqueTable.setStatus('current')
extremeVlanOpaqueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 6, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanIfIndex"), (0, "EXTREME-SYSTEM-MIB", "extremeSlotNumber"))
if mibBuilder.loadTexts: extremeVlanOpaqueEntry.setStatus('current')
extremeVlanOpaqueTaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 6, 1, 1, 1), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanOpaqueTaggedPorts.setStatus('current')
extremeVlanOpaqueUntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 6, 1, 1, 2), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanOpaqueUntaggedPorts.setStatus('current')
extremeVlanStackTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 7, 1), )
if mibBuilder.loadTexts: extremeVlanStackTable.setStatus('current')
extremeVlanStackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 7, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanStackHigherLayer"), (0, "EXTREME-VLAN-MIB", "extremeVlanStackLowerLayer"))
if mibBuilder.loadTexts: extremeVlanStackEntry.setStatus('current')
extremeVlanStackHigherLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanStackHigherLayer.setStatus('current')
extremeVlanStackLowerLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanStackLowerLayer.setStatus('current')
extremeVlanL2StatsTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8, 1), )
if mibBuilder.loadTexts: extremeVlanL2StatsTable.setStatus('current')
extremeVlanL2StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanIfIndex"))
if mibBuilder.loadTexts: extremeVlanL2StatsEntry.setStatus('current')
extremeVlanL2StatsIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanL2StatsIfDescr.setStatus('current')
extremeVlanL2StatsPktsToCpu = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanL2StatsPktsToCpu.setStatus('current')
extremeVlanL2StatsPktsLearnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanL2StatsPktsLearnt.setStatus('current')
extremeVlanL2StatsIgmpCtrlPktsSnooped = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanL2StatsIgmpCtrlPktsSnooped.setStatus('current')
extremeVlanL2StatsIgmpDataPktsSwitched = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 8, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanL2StatsIgmpDataPktsSwitched.setStatus('current')
extremeVlanAggregationTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1), )
if mibBuilder.loadTexts: extremeVlanAggregationTable.setStatus('current')
extremeVlanAggregationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanAggregationSuperVlanIfIndex"), (0, "EXTREME-VLAN-MIB", "extremeVlanAggregationSubVlanIfIndex"))
if mibBuilder.loadTexts: extremeVlanAggregationEntry.setStatus('current')
extremeVlanAggregationSuperVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanAggregationSuperVlanIfIndex.setStatus('current')
extremeVlanAggregationSubVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanAggregationSubVlanIfIndex.setStatus('current')
extremeVlanAggregationSubVlanStartIpNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanAggregationSubVlanStartIpNetAddress.setStatus('current')
extremeVlanAggregationSubVlanStartIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanAggregationSubVlanStartIpNetMask.setStatus('current')
extremeVlanAggregationSubVlanEndIpNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanAggregationSubVlanEndIpNetAddress.setStatus('current')
extremeVlanAggregationSubVlanEndIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanAggregationSubVlanEndIpNetMask.setStatus('current')
extremeVlanAggregationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanAggregationStatus.setStatus('current')
extremeVlanAggregationConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 2), )
if mibBuilder.loadTexts: extremeVlanAggregationConfigTable.setStatus('current')
extremeVlanAggregationConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 2, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanAggregationConfigSuperVlanIfIndex"))
if mibBuilder.loadTexts: extremeVlanAggregationConfigEntry.setStatus('current')
extremeVlanAggregationConfigSuperVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanAggregationConfigSuperVlanIfIndex.setStatus('current')
extremeVlanAggregationConfigSubVlanProxyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 9, 2, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanAggregationConfigSubVlanProxyEnable.setStatus('current')
extremeVlanTranslationTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 2, 10, 1), )
if mibBuilder.loadTexts: extremeVlanTranslationTable.setStatus('current')
extremeVlanTranslationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 2, 10, 1, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanTranslationSuperVlanIfIndex"), (0, "EXTREME-VLAN-MIB", "extremeVlanTranslationMemberVlanIfIndex"))
if mibBuilder.loadTexts: extremeVlanTranslationEntry.setStatus('current')
extremeVlanTranslationSuperVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanTranslationSuperVlanIfIndex.setStatus('current')
extremeVlanTranslationMemberVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeVlanTranslationMemberVlanIfIndex.setStatus('current')
extremeVlanTranslationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 2, 10, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeVlanTranslationStatus.setStatus('current')
mibBuilder.exportSymbols("EXTREME-VLAN-MIB", extremeVlan=extremeVlan, extremeVlanTranslationEntry=extremeVlanTranslationEntry, extremeVlanProtocolStatus=extremeVlanProtocolStatus, extremeVlanAggregationSuperVlanIfIndex=extremeVlanAggregationSuperVlanIfIndex, extremeVlanEncapsIfTag=extremeVlanEncapsIfTag, extremeVlanEncapsIfType=extremeVlanEncapsIfType, extremeVlanIfIndex=extremeVlanIfIndex, extremeVlanIpEntry=extremeVlanIpEntry, extremeVlanL2StatsIgmpDataPktsSwitched=extremeVlanL2StatsIgmpDataPktsSwitched, extremeVlanIpNetMask=extremeVlanIpNetMask, extremeVlanIfGlobalIdentifier=extremeVlanIfGlobalIdentifier, extremeVlanProtocolVlanTable=extremeVlanProtocolVlanTable, extremeVlanAggregationSubVlanStartIpNetAddress=extremeVlanAggregationSubVlanStartIpNetAddress, extremeVlanOpaqueGroup=extremeVlanOpaqueGroup, extremeVlanProtocolName=extremeVlanProtocolName, extremeVlanProtocolVlanEntry=extremeVlanProtocolVlanEntry, extremeVlanIfIgnoreStpFlag=extremeVlanIfIgnoreStpFlag, extremeVlanGlobalMappingIfIndex=extremeVlanGlobalMappingIfIndex, ExtremeVlanType=ExtremeVlanType, extremeVlanL2StatsPktsToCpu=extremeVlanL2StatsPktsToCpu, extremeVlanStackEntry=extremeVlanStackEntry, extremeVlanAggregationEntry=extremeVlanAggregationEntry, extremeVlanIfType=extremeVlanIfType, extremeVlanAggregationSubVlanStartIpNetMask=extremeVlanAggregationSubVlanStartIpNetMask, extremeEncapsulationGroup=extremeEncapsulationGroup, extremeVlanStatsGroup=extremeVlanStatsGroup, extremeVlanTranslationTable=extremeVlanTranslationTable, extremeVlanAggregationGroup=extremeVlanAggregationGroup, extremeVlanTranslationGroup=extremeVlanTranslationGroup, extremeVlanProtocolTable=extremeVlanProtocolTable, extremeVlanIfTable=extremeVlanIfTable, extremeVlanStackHigherLayer=extremeVlanStackHigherLayer, extremeVlanStackLowerLayer=extremeVlanStackLowerLayer, extremeProtocolGroup=extremeProtocolGroup, extremeVlanIpStatus=extremeVlanIpStatus, extremeVlanL2StatsEntry=extremeVlanL2StatsEntry, extremeVlanEncapsIfIndex=extremeVlanEncapsIfIndex, extremeVlanProtocolVlanProtocolIndex=extremeVlanProtocolVlanProtocolIndex, extremeVlanEncapsIfTable=extremeVlanEncapsIfTable, extremeVlanEncapsIfEntry=extremeVlanEncapsIfEntry, extremeVlanEncapsIfStatus=extremeVlanEncapsIfStatus, extremeVlanProtocolIdIndex=extremeVlanProtocolIdIndex, extremeVlanTranslationStatus=extremeVlanTranslationStatus, extremeVlanProtocolVlanIfIndex=extremeVlanProtocolVlanIfIndex, extremeVlanAggregationTable=extremeVlanAggregationTable, extremeVlanIpNetAddress=extremeVlanIpNetAddress, extremeVlanProtocolId=extremeVlanProtocolId, extremeVlanOpaqueTaggedPorts=extremeVlanOpaqueTaggedPorts, extremeVlanOpaqueUntaggedPorts=extremeVlanOpaqueUntaggedPorts, extremeVlanIpGroup=extremeVlanIpGroup, extremeVlanGroup=extremeVlanGroup, extremeVlanAggregationStatus=extremeVlanAggregationStatus, extremeVlanIfVlanId=extremeVlanIfVlanId, extremeVlanIpTable=extremeVlanIpTable, extremeVlanTranslationSuperVlanIfIndex=extremeVlanTranslationSuperVlanIfIndex, extremeVlanProtocolVlanStatus=extremeVlanProtocolVlanStatus, extremeVirtualGroup=extremeVirtualGroup, extremeVlanGlobalMappingEntry=extremeVlanGlobalMappingEntry, extremeVlanL2StatsIfDescr=extremeVlanL2StatsIfDescr, extremeVlanAggregationConfigSuperVlanIfIndex=extremeVlanAggregationConfigSuperVlanIfIndex, extremeVlanIpForwardingState=extremeVlanIpForwardingState, extremeVlanStackGroup=extremeVlanStackGroup, extremeVlanGlobalMappingTable=extremeVlanGlobalMappingTable, extremeVlanL2StatsPktsLearnt=extremeVlanL2StatsPktsLearnt, extremeVlanOpaqueTable=extremeVlanOpaqueTable, extremeVlanTranslationMemberVlanIfIndex=extremeVlanTranslationMemberVlanIfIndex, extremeVlanAggregationSubVlanIfIndex=extremeVlanAggregationSubVlanIfIndex, extremeVlanProtocolDllEncapsType=extremeVlanProtocolDllEncapsType, PYSNMP_MODULE_ID=extremeVlan, extremeVlanIfStatus=extremeVlanIfStatus, extremeVlanGlobalMappingIdentifier=extremeVlanGlobalMappingIdentifier, extremeVlanL2StatsIgmpCtrlPktsSnooped=extremeVlanL2StatsIgmpCtrlPktsSnooped, ExtremeVlanEncapsType=ExtremeVlanEncapsType, extremeVlanIfDescr=extremeVlanIfDescr, extremeVlanIfLoopbackModeFlag=extremeVlanIfLoopbackModeFlag, extremeVlanAggregationSubVlanEndIpNetAddress=extremeVlanAggregationSubVlanEndIpNetAddress, extremeVlanProtocolEntry=extremeVlanProtocolEntry, extremeVlanAggregationConfigSubVlanProxyEnable=extremeVlanAggregationConfigSubVlanProxyEnable, extremeVlanAggregationConfigTable=extremeVlanAggregationConfigTable, extremeVlanProtocolIndex=extremeVlanProtocolIndex, extremeVlanIfEntry=extremeVlanIfEntry, extremeNextAvailableVirtIfIndex=extremeNextAvailableVirtIfIndex, extremeVlanAggregationSubVlanEndIpNetMask=extremeVlanAggregationSubVlanEndIpNetMask, extremeVlanAggregationConfigEntry=extremeVlanAggregationConfigEntry, extremeVlanStackTable=extremeVlanStackTable, extremeVlanOpaqueEntry=extremeVlanOpaqueEntry, extremeVlanIfIgnoreBpduFlag=extremeVlanIfIgnoreBpduFlag, extremeVlanL2StatsTable=extremeVlanL2StatsTable)
