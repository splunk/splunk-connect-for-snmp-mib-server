#
# PySNMP MIB module HH3C-DOT11-CFGEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DOT11-CFGEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
hh3cDot11, = mibBuilder.importSymbols("HH3C-DOT11-REF-MIB", "hh3cDot11")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, Counter64, iso, Integer32, ObjectIdentity, Gauge32, Bits, MibIdentifier, Counter32, NotificationType, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Counter64", "iso", "Integer32", "ObjectIdentity", "Gauge32", "Bits", "MibIdentifier", "Counter32", "NotificationType", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
hh3cDot11CFGEXT = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6))
hh3cDot11CFGEXT.setRevisions(('2010-06-02 14:00', '2007-04-25 20:00',))
if mibBuilder.loadTexts: hh3cDot11CFGEXT.setLastUpdated('201006021400Z')
if mibBuilder.loadTexts: hh3cDot11CFGEXT.setOrganization('H3C Technologies Co., Ltd.')
hh3cDot11LoadBalance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1))
hh3cDot11LBGlobalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1))
hh3cDot11LoadBalanceTrafficEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceTrafficEnable.setStatus('current')
hh3cDot11LoadBalanceTrafficThres = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceTrafficThres.setStatus('current')
hh3cDot11LoadBalanceSessionEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceSessionEnable.setStatus('current')
hh3cDot11LoadBalanceSessionThres = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceSessionThres.setStatus('current')
hh3cDot11LoadBalanceTrafficGap = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceTrafficGap.setStatus('current')
hh3cDot11LoadBalanceSessionGap = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceSessionGap.setStatus('current')
hh3cDot11LBTrafficThresKbps = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 7), Integer32()).setUnits('kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LBTrafficThresKbps.setStatus('current')
hh3cDot11LBTrafficGapKbps = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 1, 8), Integer32()).setUnits('kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11LBTrafficGapKbps.setStatus('current')
hh3cDot11LBRadioGroupTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 2), )
if mibBuilder.loadTexts: hh3cDot11LBRadioGroupTable.setStatus('current')
hh3cDot11LBRadioGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 2, 1), ).setIndexNames((0, "HH3C-DOT11-CFGEXT-MIB", "hh3cDot11LBRadioGroupId"))
if mibBuilder.loadTexts: hh3cDot11LBRadioGroupEntry.setStatus('current')
hh3cDot11LBRadioGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cDot11LBRadioGroupId.setStatus('current')
hh3cDot11LBRadioGroupDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 2, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11LBRadioGroupDesc.setStatus('current')
hh3cDot11LBRadioGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 6, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11LBRadioGroupRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-DOT11-CFGEXT-MIB", hh3cDot11LoadBalanceSessionEnable=hh3cDot11LoadBalanceSessionEnable, hh3cDot11LBRadioGroupDesc=hh3cDot11LBRadioGroupDesc, hh3cDot11LBRadioGroupRowStatus=hh3cDot11LBRadioGroupRowStatus, hh3cDot11LoadBalance=hh3cDot11LoadBalance, hh3cDot11LoadBalanceTrafficEnable=hh3cDot11LoadBalanceTrafficEnable, hh3cDot11CFGEXT=hh3cDot11CFGEXT, hh3cDot11LBRadioGroupId=hh3cDot11LBRadioGroupId, PYSNMP_MODULE_ID=hh3cDot11CFGEXT, hh3cDot11LoadBalanceTrafficThres=hh3cDot11LoadBalanceTrafficThres, hh3cDot11LoadBalanceTrafficGap=hh3cDot11LoadBalanceTrafficGap, hh3cDot11LBTrafficGapKbps=hh3cDot11LBTrafficGapKbps, hh3cDot11LoadBalanceSessionThres=hh3cDot11LoadBalanceSessionThres, hh3cDot11LoadBalanceSessionGap=hh3cDot11LoadBalanceSessionGap, hh3cDot11LBRadioGroupEntry=hh3cDot11LBRadioGroupEntry, hh3cDot11LBTrafficThresKbps=hh3cDot11LBTrafficThresKbps, hh3cDot11LBRadioGroupTable=hh3cDot11LBRadioGroupTable, hh3cDot11LBGlobalGroup=hh3cDot11LBGlobalGroup)
