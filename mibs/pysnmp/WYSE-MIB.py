#
# PySNMP MIB module WYSE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WYSE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter64, Unsigned32, ModuleIdentity, Integer32, NotificationType, TimeTicks, Counter32, Gauge32, IpAddress, enterprises, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "Unsigned32", "ModuleIdentity", "Integer32", "NotificationType", "TimeTicks", "Counter32", "Gauge32", "IpAddress", "enterprises", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wyse = MibIdentifier((1, 3, 6, 1, 4, 1, 714))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1))
old = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 1))
thinClient = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2))
wysenet = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 1, 1))
wbt3 = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3))
wbt3Memory = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1))
wbt3PCCard = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 2))
wbt3IODevice = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 3))
wbt3Display = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4))
wbt3DhcpInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5))
wbt3BuildInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6))
wbt3CustomFields = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 7))
wbt3Administration = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8))
wbt3TrapsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9))
wbt3MibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 10))
wbt3Network = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11))
wbt3Apps = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12))
wbt3Connections = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13))
wbt3Users = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14))
wbt3Ram = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 1))
wbt3Rom = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 2))
wbt3RamNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RamNum.setStatus('mandatory')
wbt3RamTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 1, 2), )
if mibBuilder.loadTexts: wbt3RamTable.setStatus('mandatory')
wbt3RamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 1, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3RamIndex"))
if mibBuilder.loadTexts: wbt3RamEntry.setStatus('mandatory')
wbt3RamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RamIndex.setStatus('mandatory')
wbt3RamType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("base", 1), ("video", 2), ("extend", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RamType.setStatus('mandatory')
wbt3RamSize = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RamSize.setStatus('mandatory')
wbt3RomNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RomNum.setStatus('mandatory')
wbt3RomTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 2, 2), )
if mibBuilder.loadTexts: wbt3RomTable.setStatus('mandatory')
wbt3RomEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 2, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3RomIndex"))
if mibBuilder.loadTexts: wbt3RomEntry.setStatus('mandatory')
wbt3RomIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RomIndex.setStatus('mandatory')
wbt3RomType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("boot", 1), ("os", 2), ("option", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RomType.setStatus('mandatory')
wbt3RomSize = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RomSize.setStatus('mandatory')
wbt3PCCardNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3PCCardNum.setStatus('mandatory')
wbt3PCCardTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 2, 2), )
if mibBuilder.loadTexts: wbt3PCCardTable.setStatus('mandatory')
wbt3PCCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 2, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3PCCardIndex"))
if mibBuilder.loadTexts: wbt3PCCardEntry.setStatus('mandatory')
wbt3PCCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3PCCardIndex.setStatus('mandatory')
wbt3PCCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("empty", 256), ("multifunction", 0), ("memory", 1), ("serial-port-modem", 2), ("parallel-port", 3), ("fixed-disk", 4), ("video-adaptor", 5), ("lan-adapter", 6), ("aims", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3PCCardType.setStatus('mandatory')
wbt3PCCardVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3PCCardVendor.setStatus('mandatory')
wbt3IODevAttached = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3IODevAttached.setStatus('mandatory')
wbt3kbLanguage = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("english-us", 0), ("english-uk", 1), ("french", 2), ("german", 3), ("spanish", 4), ("italian", 5), ("swedish", 6), ("danish", 7), ("norwegian", 8), ("dutch", 9), ("belgian-french", 10), ("finnish", 11), ("swiss-french", 12), ("swiss-german", 13), ("japanese", 14), ("canadian-french", 15), ("belgian-dutch", 16), ("portuguese", 17), ("brazilian-abnt", 18), ("italian-142", 19), ("latin-american", 20), ("us-international", 21), ("canadian-fr-multi", 22), ("canadian-eng-multi", 23), ("spanish-variation", 24)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3kbLanguage.setStatus('mandatory')
wbt3CharacterRepeatDelay = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(250, 500, 750, 1000))).clone(namedValues=NamedValues(("delay-250", 250), ("delay-500", 500), ("delay-750", 750), ("delay-1000", 1000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3CharacterRepeatDelay.setStatus('mandatory')
wbt3CharacterRepeatRate = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3CharacterRepeatRate.setStatus('mandatory')
wbt3DispCharacteristic = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 1))
wbt3DispCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 2))
wbt3EnergySaver = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("screensaver", 1), ("monitoroff", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3EnergySaver.setStatus('mandatory')
wbt3ScreenTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ScreenTimeOut.setStatus('mandatory')
wbt3TouchScreen = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("com1", 1), ("com2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TouchScreen.setStatus('mandatory')
wbt3DispFreq = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3DispFreq.setStatus('mandatory')
wbt3DispHorizPix = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3DispHorizPix.setStatus('mandatory')
wbt3DispVertPix = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3DispVertPix.setStatus('mandatory')
wbt3DispColor = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DispColor.setStatus('mandatory')
wbt3DispUseDDC = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3DispUseDDC.setStatus('mandatory')
wbt3DispFreqMax = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DispFreqMax.setStatus('mandatory')
wbt3DispHorizPixMax = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DispHorizPixMax.setStatus('mandatory')
wbt3DispVertPixMax = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DispVertPixMax.setStatus('mandatory')
wbt3DispColorMax = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 4, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DispColorMax.setStatus('mandatory')
wbt3DhcpInfoNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DhcpInfoNum.setStatus('mandatory')
wbt3DhcpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2), )
if mibBuilder.loadTexts: wbt3DhcpInfoTable.setStatus('mandatory')
wbt3DHCPoptionIDs = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3))
wbt3DhcpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3DhcpInfoIndex"))
if mibBuilder.loadTexts: wbt3DhcpInfoEntry.setStatus('mandatory')
wbt3DhcpInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DhcpInfoIndex.setStatus('mandatory')
wbt3InterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3InterfaceNum.setStatus('mandatory')
wbt3ServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3ServerIP.setStatus('mandatory')
wbt3Username = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3Username.setStatus('mandatory')
wbt3Domain = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3Domain.setStatus('mandatory')
wbt3Password = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nopassword", 0), ("password", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3Password.setStatus('mandatory')
wbt3CommandLine = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CommandLine.setStatus('mandatory')
wbt3WorkingDir = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3WorkingDir.setStatus('mandatory')
wbt3FileServer = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3FileServer.setStatus('mandatory')
wbt3FileRootPath = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3FileRootPath.setStatus('mandatory')
wbt3TrapServerList = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3TrapServerList.setStatus('mandatory')
wbt3SetCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ignored", 0), ("provided", 1), ("notprovided", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3SetCommunity.setStatus('mandatory')
wbt3RDPstartApp = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RDPstartApp.setStatus('mandatory')
wbt3EmulationMode = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3EmulationMode.setStatus('mandatory')
wbt3TerminalID = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3TerminalID.setStatus('mandatory')
wbt3VirtualPortServer = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3VirtualPortServer.setStatus('mandatory')
remoteServer = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteServer.setStatus('mandatory')
logonUserName = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logonUserName.setStatus('mandatory')
domain = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: domain.setStatus('mandatory')
password = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: password.setStatus('mandatory')
commandLine = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLine.setStatus('mandatory')
workingDirectory = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: workingDirectory.setStatus('mandatory')
fTPFileServer = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fTPFileServer.setStatus('mandatory')
fTPRootPath = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fTPRootPath.setStatus('mandatory')
trapServerList = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapServerList.setStatus('mandatory')
setCommunity = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCommunity.setStatus('mandatory')
rDPStartupApp = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rDPStartupApp.setStatus('mandatory')
emulationMode = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emulationMode.setStatus('mandatory')
terminalID = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: terminalID.setStatus('mandatory')
virtualPortServer = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 5, 3, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: virtualPortServer.setStatus('mandatory')
wbt3CurrentInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1))
wbt3DhcpUpdateInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2))
wbt3CurInfoNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurInfoNum.setStatus('mandatory')
wbt3CurInfoTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2), )
if mibBuilder.loadTexts: wbt3CurInfoTable.setStatus('mandatory')
wbt3CurInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3DhcpInfoIndex"))
if mibBuilder.loadTexts: wbt3CurInfoEntry.setStatus('mandatory')
wbt3CurInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurInfoIndex.setStatus('mandatory')
wbt3CurBuildNum = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurBuildNum.setStatus('mandatory')
wbt3CurOEMBuildNum = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurOEMBuildNum.setStatus('mandatory')
wbt3CurModBuildDate = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurModBuildDate.setStatus('mandatory')
wbt3CurOEM = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurOEM.setStatus('mandatory')
wbt3CurHWPlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurHWPlatform.setStatus('mandatory')
wbt3CurOS = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3CurOS.setStatus('mandatory')
wbt3DUpInfoNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DUpInfoNum.setStatus('mandatory')
wbt3DUpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 2), )
if mibBuilder.loadTexts: wbt3DUpInfoTable.setStatus('mandatory')
wbt3DUpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3DUpInfoIndex"))
if mibBuilder.loadTexts: wbt3DUpInfoEntry.setStatus('mandatory')
wbt3DUpInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DUpInfoIndex.setStatus('mandatory')
wbt3DUpBuildNum = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DUpBuildNum.setStatus('mandatory')
wbt3DUpOEMBuildNum = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DUpOEMBuildNum.setStatus('mandatory')
wbt3DUpModBuildDate = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DUpModBuildDate.setStatus('mandatory')
wbt3DUpOEMBuildDate = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 6, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3DUpOEMBuildDate.setStatus('mandatory')
wbt3CustomField1 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3CustomField1.setStatus('mandatory')
wbt3CustomField2 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3CustomField2.setStatus('mandatory')
wbt3CustomField3 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 7, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3CustomField3.setStatus('mandatory')
wbt3UpDnLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1))
wbt3Action = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 2))
wbt3FTPsetting = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 3))
wbt3SNMPupdate = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3SNMPupdate.setStatus('mandatory')
wbt3DHCPupdate = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3DHCPupdate.setStatus('mandatory')
wbt3UpDnLoadNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadNum.setStatus('mandatory')
wbt3UpDnLoadTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2), )
if mibBuilder.loadTexts: wbt3UpDnLoadTable.setStatus('mandatory')
wbt3AcceptReq = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AcceptReq.setStatus('mandatory')
wbt3SubmitLoadJob = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notready", 0), ("ready", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3SubmitLoadJob.setStatus('mandatory')
wbt3UpDnLoadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3UpDnLoadIndex"))
if mibBuilder.loadTexts: wbt3UpDnLoadEntry.setStatus('mandatory')
wbt3UpDnLoadIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadIndex.setStatus('mandatory')
wbt3UpDnLoadId = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadId.setStatus('mandatory')
wbt3UpDnLoadOp = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("upload", 0), ("download", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadOp.setStatus('mandatory')
wbt3UpDnLoadSrcFile = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadSrcFile.setStatus('mandatory')
wbt3UpDnLoadDstFile = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadDstFile.setStatus('mandatory')
wbt3UpDnLoadFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("binary", 0), ("ascii", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadFileType.setStatus('mandatory')
wbt3UpDnLoadProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ftp", 0), ("tftp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadProtocol.setStatus('mandatory')
wbt3UpDnLoadFServer = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadFServer.setStatus('mandatory')
wbt3UpDnLoadTimeFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("immediate", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UpDnLoadTimeFlag.setStatus('mandatory')
wbt3RebootRequest = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noreboot", 0), ("rebootnow", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RebootRequest.setStatus('mandatory')
wbt3ResetToFactoryDefault = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noreset", 0), ("resetnow", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ResetToFactoryDefault.setStatus('mandatory')
wbt3ServerName = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ServerName.setStatus('mandatory')
wbt3Directory = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Directory.setStatus('mandatory')
wbt3UserID = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UserID.setStatus('mandatory')
wbt3Password2 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Password2.setStatus('mandatory')
wbt3SavePassword = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3SavePassword.setStatus('mandatory')
wbt3InfoLocation = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("uselocalinfo", 0), ("usedhcpinfo", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3InfoLocation.setStatus('mandatory')
wbt3Security = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7))
wbt3SecurityEnable = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3SecurityEnable.setStatus('mandatory')
wbt3HideConfigTab = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3HideConfigTab.setStatus('mandatory')
wbt3FailOverEnable = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3FailOverEnable.setStatus('mandatory')
wbt3MultipleConnect = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3MultipleConnect.setStatus('mandatory')
wbt3PingBeforeConnect = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3PingBeforeConnect.setStatus('mandatory')
wbt3Verbose = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Verbose.setStatus('mandatory')
wbt3AutoLoginEnable = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoLoginEnable.setStatus('mandatory')
wbt3AutoLoginUserName = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoLoginUserName.setStatus('mandatory')
wbt3SingleButtonConnect = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3SingleButtonConnect.setStatus('mandatory')
wbt3AutoFailRecovery = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 8, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoFailRecovery.setStatus('mandatory')
wbt3TrapStatus = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("ls-done", 0), ("ls-done-sameversion", 1), ("ls-notready", 2), ("ls-fail-shutdown", 3), ("ls-fail-noupd", 4), ("ls-fail-dnld-blocked", 5), ("ls-fail-filenotfound", 6), ("ls-fail-dir", 7), ("ls-fail-upld-blocked", 8), ("ls-fail-noserv", 9), ("ls-fail-prot", 10), ("ls-fail-nomem", 11), ("ls-fail-noresource", 12), ("ls-fail-resolvename", 13), ("ls-fail-notbundle", 14), ("ls-fail-checksum", 15), ("ls-fail-flasherror", 16), ("ls-fail-dnld-flash", 17), ("ls-fail-usercancel", 18), ("ls-fail-norflash", 19), ("ls-fail-protnsupport", 20), ("ls-fail-parsereg", 21), ("ls-fail-parsereg-verincomp", 22), ("ls-fail-parsereg-platfincomp", 23), ("ls-fail-parsereg-osincomp", 24), ("ls-fail-reset-defaultfactory", 25), ("ls-fail-paraminifilenotfound", 26), ("ls-invalid-bootstrap", 27), ("ls-fail-badkey", 28)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3TrapStatus.setStatus('mandatory')
wbt3TrapReqId = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3TrapReqId.setStatus('mandatory')
wbt3TrapServers = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9, 3))
wbt3TrapServer1 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TrapServer1.setStatus('mandatory')
wbt3TrapServer2 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TrapServer2.setStatus('mandatory')
wbt3TrapServer3 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TrapServer3.setStatus('mandatory')
wbt3TrapServer4 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 9, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TrapServer4.setStatus('mandatory')
wbt3MibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3MibRevMajor.setStatus('mandatory')
wbt3MibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3MibRevMinor.setStatus('mandatory')
wbt3NetworkNum = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3NetworkNum.setStatus('mandatory')
wbt3NetworkTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2), )
if mibBuilder.loadTexts: wbt3NetworkTable.setStatus('mandatory')
wbt3NetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3NetworkIndex"))
if mibBuilder.loadTexts: wbt3NetworkEntry.setStatus('mandatory')
wbt3NetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3NetworkIndex.setStatus('mandatory')
wbt3dhcpEnable = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3dhcpEnable.setStatus('mandatory')
wbt3NetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3NetworkAddress.setStatus('mandatory')
wbt3SubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3SubnetMask.setStatus('mandatory')
wbt3Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Gateway.setStatus('mandatory')
wbt3dnsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3dnsEnable.setStatus('mandatory')
wbt3defaultDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3defaultDomain.setStatus('mandatory')
wbt3primaryDNSserverIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3primaryDNSserverIPaddress.setStatus('mandatory')
wbt3secondaryDNSserverIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3secondaryDNSserverIPaddress.setStatus('mandatory')
wbt3winsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3winsEnable.setStatus('mandatory')
wbt3primaryWINSserverIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3primaryWINSserverIPaddress.setStatus('mandatory')
wbt3secondaryWINSserverIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3secondaryWINSserverIPaddress.setStatus('mandatory')
wbt3NetworkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9, 8, 7, 6))).clone(namedValues=NamedValues(("auto-detect", 0), ("mbs-10halfduplex", 9), ("mbs-10fullduplex", 8), ("mbs-100halfduplex", 7), ("mbs-100fullduplex", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3NetworkSpeed.setStatus('mandatory')
wbt3NetworkProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 11, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 256))).clone(namedValues=NamedValues(("tcp-ip", 0), ("unknown", 256)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3NetworkProtocol.setStatus('mandatory')
wbt3RDPencryption = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPencryption.setStatus('mandatory')
wbt3VirtualPortServerIPaddress = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3VirtualPortServerIPaddress.setStatus('mandatory')
wbt3com1Share = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3com1Share.setStatus('mandatory')
wbt3com2Share = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3com2Share.setStatus('mandatory')
wbt3parallelShare = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3parallelShare.setStatus('mandatory')
iCADefaultHotkeys = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6), )
if mibBuilder.loadTexts: iCADefaultHotkeys.setStatus('mandatory')
defaultHotkeysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1), )
if mibBuilder.loadTexts: defaultHotkeysEntry.setStatus('mandatory')
iCAStatusDialog = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ctrl", 0), ("shift", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAStatusDialog.setStatus('mandatory')
iCAStatusDialog2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAStatusDialog2.setStatus('mandatory')
iCACloseRemoteApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ctrl", 0), ("shift", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCACloseRemoteApplication.setStatus('mandatory')
iCACloseRemoteApplication2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCACloseRemoteApplication2.setStatus('mandatory')
iCAtoggleTitleBar = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ctrl", 0), ("shift", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAtoggleTitleBar.setStatus('mandatory')
iCAtoggleTitleBar2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAtoggleTitleBar2.setStatus('mandatory')
iCActrlAltDel = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("ctrl", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCActrlAltDel.setStatus('mandatory')
iCActrlAltDel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCActrlAltDel2.setStatus('mandatory')
iCActrlEsc = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("ctrl", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCActrlEsc.setStatus('mandatory')
iCActrlEsc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCActrlEsc2.setStatus('mandatory')
iCAaltEsc = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ctrl", 0), ("shift", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAaltEsc.setStatus('mandatory')
iCAaltEsc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAaltEsc2.setStatus('mandatory')
iCAaltTab = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ctrl", 0), ("shift", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAaltTab.setStatus('mandatory')
iCAaltTab2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAaltTab2.setStatus('mandatory')
iCAaltBackTab = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ctrl", 0), ("shift", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAaltBackTab.setStatus('mandatory')
iCAaltBackTab2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 12, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("nb-0", 0), ("nb-1", 1), ("nb-2", 2), ("nb-3", 3), ("nb-4", 4), ("nb-5", 5), ("nb-6", 6), ("nb-7", 7), ("nb-8", 8), ("nb-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iCAaltBackTab2.setStatus('mandatory')
wbt3ConnectionsTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 2), )
if mibBuilder.loadTexts: wbt3ConnectionsTable.setStatus('mandatory')
wbt3ConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3ConnectionName"))
if mibBuilder.loadTexts: wbt3ConnectionEntry.setStatus('mandatory')
wbt3ConnectionName = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ConnectionName.setStatus('mandatory')
wbt3ConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("rdp", 0), ("ica", 1), ("tec", 2), ("dialup", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ConnectionType.setStatus('mandatory')
wbt3ConnectionEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ConnectionEntryStatus.setStatus('mandatory')
wbt3RDPConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3))
wbt3RDPConnTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1), )
if mibBuilder.loadTexts: wbt3RDPConnTable.setStatus('mandatory')
wbt3RDPConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1), )
if mibBuilder.loadTexts: wbt3RDPConnEntry.setStatus('mandatory')
wbt3RDPConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RDPConnName.setStatus('mandatory')
wbt3RDPConnServer = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnServer.setStatus('mandatory')
wbt3RDPConnLowSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnLowSpeed.setStatus('mandatory')
wbt3RDPConnAutoLogon = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnAutoLogon.setStatus('mandatory')
wbt3RDPConnUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnUsername.setStatus('mandatory')
wbt3RDPConnDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnDomain.setStatus('mandatory')
wbt3RDPConnStartApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("desktop", 0), ("filename", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnStartApplication.setStatus('mandatory')
wbt3RDPConnFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnFilename.setStatus('mandatory')
wbt3RDPConnWorkingDir = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3RDPConnWorkingDir.setStatus('mandatory')
wbt3RDPConnModifiable = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3RDPConnModifiable.setStatus('mandatory')
wbt3ICAConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4))
wbt3ICAConnTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1), )
if mibBuilder.loadTexts: wbt3ICAConnTable.setStatus('mandatory')
wbt3ICAConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1), )
if mibBuilder.loadTexts: wbt3ICAConnEntry.setStatus('mandatory')
wbt3ICAConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3ICAConnName.setStatus('mandatory')
wbt3ICAConnCommType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("network", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnCommType.setStatus('mandatory')
wbt3ICAConnServer = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnServer.setStatus('mandatory')
wbt3ICAConnCommandLine = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnCommandLine.setStatus('mandatory')
wbt3ICAConnWorkingDir = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnWorkingDir.setStatus('mandatory')
wbt3ICAConnUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnUsername.setStatus('mandatory')
wbt3ICAConnDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnDomain.setStatus('mandatory')
wbt3ICAConnColors = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nb-16", 0), ("nb-256", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnColors.setStatus('mandatory')
wbt3ICAConnDataCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnDataCompress.setStatus('mandatory')
wbt3ICAConnSoundQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("low", 1), ("medium", 2), ("high", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3ICAConnSoundQuality.setStatus('mandatory')
wbt3ICAConnModifiable = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 4, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3ICAConnModifiable.setStatus('mandatory')
wbt3TermConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5))
wbt3TermConnTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1), )
if mibBuilder.loadTexts: wbt3TermConnTable.setStatus('mandatory')
wbt3TermConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1), )
if mibBuilder.loadTexts: wbt3TermConnEntry.setStatus('mandatory')
wbt3TermConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3TermConnName.setStatus('mandatory')
wbt3TermConnCommType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("network", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnCommType.setStatus('mandatory')
wbt3TermConnServer = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnServer.setStatus('mandatory')
wbt3TermConnEmuType = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("vt52", 0), ("vt100", 1), ("vt400-7-bit", 3), ("vt400-8-bit", 4), ("ansi-bbs", 5), ("sco-console", 6), ("ibm3270", 7), ("ibm3151", 8), ("ibm5250", 9), ("wy50", 10), ("wy50-plus", 11), ("tvi910", 12), ("tvi920", 13), ("tvi925", 14), ("adds-a2", 15), ("hz1500", 16), ("wy60", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnEmuType.setStatus('mandatory')
wbt3TermConnVTEmuModel = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 256))).clone(namedValues=NamedValues(("vt100", 0), ("vt101", 1), ("vt102", 2), ("vt125", 3), ("vt220", 4), ("vt240", 5), ("vt320", 6), ("vt340", 7), ("vt420", 8), ("vt131", 9), ("vt132", 10), ("not-applicable", 256)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnVTEmuModel.setStatus('mandatory')
wbt3TermConnIBM3270EmuModel = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 256))).clone(namedValues=NamedValues(("ibm3278-2", 0), ("ibm3278-3", 1), ("ibm3278-4", 2), ("ibm3278-5", 3), ("ibm3278-2-e", 4), ("ibm3278-3-e", 5), ("ibm3278-4-e", 6), ("ibm3278-5-e", 7), ("ibm3279-2", 8), ("ibm3279-3", 9), ("ibm3279-4", 10), ("ibm3279-5", 11), ("ibm3287-1", 12), ("not-applicable", 256)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnIBM3270EmuModel.setStatus('mandatory')
wbt3TermConnIBM5250EmuModel = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 256))).clone(namedValues=NamedValues(("ibm5291-1", 0), ("ibm5292-2", 1), ("ibm5251-11", 2), ("ibm3179-2", 3), ("ibm3196-a1", 4), ("ibm3180-2", 5), ("ibm3477-fc", 6), ("ibm3477-fg", 7), ("ibm3486-ba", 8), ("ibm3487-ha", 9), ("ibm3487-hc", 10), ("not-applicable", 256)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnIBM5250EmuModel.setStatus('mandatory')
wbt3TermConnPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnPortNumber.setStatus('mandatory')
wbt3TermConnTelnetName = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnTelnetName.setStatus('mandatory')
wbt3TermConnPrinterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("lpt1", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnPrinterPort.setStatus('mandatory')
wbt3TermConnFormFeed = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnFormFeed.setStatus('mandatory')
wbt3TermConnAutoLineFeed = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnAutoLineFeed.setStatus('mandatory')
wbt3TermConnScript = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3TermConnScript.setStatus('mandatory')
wbt3TermConnModifiable = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 13, 5, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbt3TermConnModifiable.setStatus('mandatory')
wbt3UsersTable = MibTable((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2), )
if mibBuilder.loadTexts: wbt3UsersTable.setStatus('mandatory')
wbt3UsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1), ).setIndexNames((0, "WYSE-MIB", "wbt3userName"))
if mibBuilder.loadTexts: wbt3UsersEntry.setStatus('mandatory')
wbt3UsersStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UsersStatus.setStatus('mandatory')
wbt3userName = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3userName.setStatus('mandatory')
wbt3password = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3password.setStatus('mandatory')
wbt3privilege = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("admin", 0), ("user", 1), ("guest", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3privilege.setStatus('mandatory')
wbt3Connection1 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection1.setStatus('mandatory')
wbt3Connection2 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection2.setStatus('mandatory')
wbt3Connection3 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection3.setStatus('mandatory')
wbt3Connection4 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection4.setStatus('mandatory')
wbt3Connection5 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection5.setStatus('mandatory')
wbt3Connection6 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection6.setStatus('mandatory')
wbt3Connection7 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection7.setStatus('mandatory')
wbt3Connection8 = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3Connection8.setStatus('mandatory')
wbt3AutoStart1 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart1.setStatus('mandatory')
wbt3AutoStart2 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart2.setStatus('mandatory')
wbt3AutoStart3 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart3.setStatus('mandatory')
wbt3AutoStart4 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart4.setStatus('mandatory')
wbt3AutoStart5 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart5.setStatus('mandatory')
wbt3AutoStart6 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart6.setStatus('mandatory')
wbt3AutoStart7 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart7.setStatus('mandatory')
wbt3AutoStart8 = MibScalar((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3AutoStart8.setStatus('mandatory')
wbt3UserPasswordChange = MibTableColumn((1, 3, 6, 1, 4, 1, 714, 1, 2, 3, 14, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wbt3UserPasswordChange.setStatus('mandatory')
wbt3TrapDHCPBuildMismatch = NotificationType((1, 3, 6, 1, 4, 1, 714, 1, 2, 3) + (0,1)).setObjects(("WYSE-MIB", "wbt3CurBuildNum"), ("WYSE-MIB", "wbt3CurOEMBuildNum"), ("WYSE-MIB", "wbt3CurModBuildDate"), ("WYSE-MIB", "wbt3DUpBuildNum"), ("WYSE-MIB", "wbt3DUpOEMBuildNum"), ("WYSE-MIB", "wbt3DUpOEMBuildDate"))
wbt3TrapDHCPUpdDone = NotificationType((1, 3, 6, 1, 4, 1, 714, 1, 2, 3) + (0,2)).setObjects(("WYSE-MIB", "wbt3CurBuildNum"), ("WYSE-MIB", "wbt3CurOEMBuildNum"), ("WYSE-MIB", "wbt3CurModBuildDate"), ("WYSE-MIB", "wbt3DUpBuildNum"), ("WYSE-MIB", "wbt3DUpOEMBuildNum"), ("WYSE-MIB", "wbt3DUpOEMBuildDate"))
wbt3TrapDHCPUpdNotComplete = NotificationType((1, 3, 6, 1, 4, 1, 714, 1, 2, 3) + (0,3)).setObjects(("WYSE-MIB", "wbt3CurBuildNum"), ("WYSE-MIB", "wbt3CurOEMBuildNum"), ("WYSE-MIB", "wbt3CurModBuildDate"), ("WYSE-MIB", "wbt3DUpBuildNum"), ("WYSE-MIB", "wbt3DUpOEMBuildNum"), ("WYSE-MIB", "wbt3DUpOEMBuildDate"), ("WYSE-MIB", "wbt3TrapStatus"))
wbt3TrapSNMPAccptLd = NotificationType((1, 3, 6, 1, 4, 1, 714, 1, 2, 3) + (0,4)).setObjects(("WYSE-MIB", "wbt3SubmitLoadJob"))
wbt3TrapSNMPLdDone = NotificationType((1, 3, 6, 1, 4, 1, 714, 1, 2, 3) + (0,5)).setObjects(("WYSE-MIB", "wbt3TrapReqId"))
wbt3TrapSNMPLdNotComplete = NotificationType((1, 3, 6, 1, 4, 1, 714, 1, 2, 3) + (0,6)).setObjects(("WYSE-MIB", "wbt3TrapReqId"), ("WYSE-MIB", "wbt3TrapStatus"))
wbt3TrapRebootNotComplete = NotificationType((1, 3, 6, 1, 4, 1, 714, 1, 2, 3) + (0,7)).setObjects(("WYSE-MIB", "wbt3TrapStatus"))
mibBuilder.exportSymbols("WYSE-MIB", wbt3CustomField1=wbt3CustomField1, wbt3PCCardIndex=wbt3PCCardIndex, wbt3EnergySaver=wbt3EnergySaver, wbt3HideConfigTab=wbt3HideConfigTab, wbt3TrapServer3=wbt3TrapServer3, wbt3SetCommunity=wbt3SetCommunity, wbt3UpDnLoad=wbt3UpDnLoad, wbt3CurInfoNum=wbt3CurInfoNum, wbt3UpDnLoadIndex=wbt3UpDnLoadIndex, wbt3FailOverEnable=wbt3FailOverEnable, wbt3RDPConnections=wbt3RDPConnections, wbt3ICAConnColors=wbt3ICAConnColors, logonUserName=logonUserName, wbt3Connection6=wbt3Connection6, wbt3DispVertPixMax=wbt3DispVertPixMax, wbt3CharacterRepeatDelay=wbt3CharacterRepeatDelay, wbt3DhcpInfoIndex=wbt3DhcpInfoIndex, wbt3RDPConnUsername=wbt3RDPConnUsername, iCACloseRemoteApplication=iCACloseRemoteApplication, wbt3RDPencryption=wbt3RDPencryption, wbt3TrapDHCPUpdNotComplete=wbt3TrapDHCPUpdNotComplete, domain=domain, emulationMode=emulationMode, wbt3CurOEMBuildNum=wbt3CurOEMBuildNum, wbt3DHCPupdate=wbt3DHCPupdate, wbt3CustomField3=wbt3CustomField3, wbt3DUpOEMBuildDate=wbt3DUpOEMBuildDate, wbt3UpDnLoadTable=wbt3UpDnLoadTable, wbt3DUpOEMBuildNum=wbt3DUpOEMBuildNum, wbt3DispFreq=wbt3DispFreq, wbt3UpDnLoadProtocol=wbt3UpDnLoadProtocol, iCAaltBackTab2=iCAaltBackTab2, wbt3Username=wbt3Username, wbt3RDPConnStartApplication=wbt3RDPConnStartApplication, wbt3Password2=wbt3Password2, wbt3DispHorizPixMax=wbt3DispHorizPixMax, wbt3VirtualPortServerIPaddress=wbt3VirtualPortServerIPaddress, iCACloseRemoteApplication2=iCACloseRemoteApplication2, wbt3AutoStart1=wbt3AutoStart1, wbt3TrapSNMPAccptLd=wbt3TrapSNMPAccptLd, wbt3TrapSNMPLdNotComplete=wbt3TrapSNMPLdNotComplete, wbt3NetworkIndex=wbt3NetworkIndex, iCActrlEsc2=iCActrlEsc2, wbt3Password=wbt3Password, trapServerList=trapServerList, wbt3PingBeforeConnect=wbt3PingBeforeConnect, thinClient=thinClient, wbt3InfoLocation=wbt3InfoLocation, wbt3InterfaceNum=wbt3InterfaceNum, wysenet=wysenet, remoteServer=remoteServer, wbt3TrapStatus=wbt3TrapStatus, wbt3TrapServerList=wbt3TrapServerList, wbt3DhcpInfoEntry=wbt3DhcpInfoEntry, iCAaltEsc2=iCAaltEsc2, wbt3SubmitLoadJob=wbt3SubmitLoadJob, wbt3com1Share=wbt3com1Share, wbt3CurOS=wbt3CurOS, wbt3CurInfoIndex=wbt3CurInfoIndex, wbt3UsersEntry=wbt3UsersEntry, wbt3Domain=wbt3Domain, wbt3dhcpEnable=wbt3dhcpEnable, wbt3PCCard=wbt3PCCard, wbt3DUpInfoNum=wbt3DUpInfoNum, wbt3DUpInfoTable=wbt3DUpInfoTable, wbt3ICAConnCommandLine=wbt3ICAConnCommandLine, wbt3CurHWPlatform=wbt3CurHWPlatform, wbt3MibRev=wbt3MibRev, wbt3RDPConnFilename=wbt3RDPConnFilename, wbt3AutoLoginUserName=wbt3AutoLoginUserName, wbt3CommandLine=wbt3CommandLine, wbt3TermConnServer=wbt3TermConnServer, wbt3TrapServer1=wbt3TrapServer1, wbt3ConnectionEntry=wbt3ConnectionEntry, iCAtoggleTitleBar2=iCAtoggleTitleBar2, wbt3ICAConnWorkingDir=wbt3ICAConnWorkingDir, wbt3RomNum=wbt3RomNum, iCAtoggleTitleBar=iCAtoggleTitleBar, wbt3TermConnFormFeed=wbt3TermConnFormFeed, wbt3CurBuildNum=wbt3CurBuildNum, wbt3DispColorMax=wbt3DispColorMax, wbt3CurModBuildDate=wbt3CurModBuildDate, wbt3MultipleConnect=wbt3MultipleConnect, iCActrlAltDel2=iCActrlAltDel2, wbt3Connection2=wbt3Connection2, wbt3Directory=wbt3Directory, wbt3ICAConnTable=wbt3ICAConnTable, wbt3TermConnIBM5250EmuModel=wbt3TermConnIBM5250EmuModel, wbt3TrapSNMPLdDone=wbt3TrapSNMPLdDone, wbt3UpDnLoadOp=wbt3UpDnLoadOp, iCAStatusDialog2=iCAStatusDialog2, product=product, wbt3primaryWINSserverIPaddress=wbt3primaryWINSserverIPaddress, iCAStatusDialog=iCAStatusDialog, wbt3NetworkEntry=wbt3NetworkEntry, wbt3RomSize=wbt3RomSize, wbt3ConnectionsTable=wbt3ConnectionsTable, wbt3SecurityEnable=wbt3SecurityEnable, wbt3ICAConnServer=wbt3ICAConnServer, wbt3Connection1=wbt3Connection1, wbt3primaryDNSserverIPaddress=wbt3primaryDNSserverIPaddress, wbt3DhcpInfo=wbt3DhcpInfo, wbt3UserPasswordChange=wbt3UserPasswordChange, wbt3RebootRequest=wbt3RebootRequest, wbt3RDPstartApp=wbt3RDPstartApp, wbt3CharacterRepeatRate=wbt3CharacterRepeatRate, wbt3TermConnPrinterPort=wbt3TermConnPrinterPort, wbt3Connection7=wbt3Connection7, wbt3CurInfoEntry=wbt3CurInfoEntry, wbt3AutoStart3=wbt3AutoStart3, wbt3Rom=wbt3Rom, wbt3SubnetMask=wbt3SubnetMask, wbt3AutoStart2=wbt3AutoStart2, wbt3DispVertPix=wbt3DispVertPix, wbt3PCCardEntry=wbt3PCCardEntry, wbt3parallelShare=wbt3parallelShare, iCAaltBackTab=iCAaltBackTab, wbt3ICAConnDomain=wbt3ICAConnDomain, wbt3NetworkProtocol=wbt3NetworkProtocol, wbt3TermConnections=wbt3TermConnections, wbt3AutoStart8=wbt3AutoStart8, wbt3RDPConnServer=wbt3RDPConnServer, wbt3IODevice=wbt3IODevice, wbt3ICAConnUsername=wbt3ICAConnUsername, wbt3TermConnPortNumber=wbt3TermConnPortNumber, wbt3ICAConnCommType=wbt3ICAConnCommType, wbt3CurInfoTable=wbt3CurInfoTable, wbt3NetworkSpeed=wbt3NetworkSpeed, iCAaltTab=iCAaltTab, wbt3TermConnAutoLineFeed=wbt3TermConnAutoLineFeed, fTPFileServer=fTPFileServer, wbt3TermConnModifiable=wbt3TermConnModifiable, wbt3Connection8=wbt3Connection8, wbt3TrapServer4=wbt3TrapServer4, wbt3DispCharacteristic=wbt3DispCharacteristic, wbt3ICAConnModifiable=wbt3ICAConnModifiable, wbt3AutoStart7=wbt3AutoStart7, wbt3winsEnable=wbt3winsEnable, wbt3UpDnLoadDstFile=wbt3UpDnLoadDstFile, wbt3Memory=wbt3Memory, wbt3Connection5=wbt3Connection5, wbt3ServerName=wbt3ServerName, wbt3VirtualPortServer=wbt3VirtualPortServer, virtualPortServer=virtualPortServer, iCAaltEsc=iCAaltEsc, wbt3PCCardType=wbt3PCCardType, wbt3MibRevMajor=wbt3MibRevMajor, wbt3PCCardVendor=wbt3PCCardVendor, wbt3DhcpInfoTable=wbt3DhcpInfoTable, wbt3Verbose=wbt3Verbose, wbt3UpDnLoadId=wbt3UpDnLoadId, wbt3RamNum=wbt3RamNum, wbt3dnsEnable=wbt3dnsEnable, wbt3Network=wbt3Network, wbt3TouchScreen=wbt3TouchScreen, wbt3RomType=wbt3RomType, wbt3ConnectionEntryStatus=wbt3ConnectionEntryStatus, wbt3RDPConnLowSpeed=wbt3RDPConnLowSpeed, wbt3ICAConnections=wbt3ICAConnections, wbt3UserID=wbt3UserID, wbt3ICAConnDataCompress=wbt3ICAConnDataCompress, wbt3Gateway=wbt3Gateway, wbt3RamType=wbt3RamType, wbt3SavePassword=wbt3SavePassword, fTPRootPath=fTPRootPath, wbt3ICAConnEntry=wbt3ICAConnEntry, terminalID=terminalID, wbt3ConnectionType=wbt3ConnectionType, wbt3Connection4=wbt3Connection4, wbt3RomEntry=wbt3RomEntry, wbt3AutoStart4=wbt3AutoStart4, wbt3Connections=wbt3Connections, wbt3PCCardTable=wbt3PCCardTable, iCAaltTab2=iCAaltTab2, wbt3Display=wbt3Display, wbt3Apps=wbt3Apps, wbt3TermConnVTEmuModel=wbt3TermConnVTEmuModel, wbt3RomIndex=wbt3RomIndex, rDPStartupApp=rDPStartupApp, wbt3TrapRebootNotComplete=wbt3TrapRebootNotComplete, wbt3CustomFields=wbt3CustomFields, wbt3SingleButtonConnect=wbt3SingleButtonConnect, wbt3FTPsetting=wbt3FTPsetting, wbt3UpDnLoadEntry=wbt3UpDnLoadEntry, wbt3TermConnEmuType=wbt3TermConnEmuType, wbt3AutoFailRecovery=wbt3AutoFailRecovery, wbt3RamTable=wbt3RamTable, wbt3DispCapability=wbt3DispCapability, wbt3NetworkAddress=wbt3NetworkAddress, wbt3RDPConnName=wbt3RDPConnName, wbt3RDPConnEntry=wbt3RDPConnEntry, wbt3NetworkNum=wbt3NetworkNum, wbt3DispHorizPix=wbt3DispHorizPix, wbt3BuildInfo=wbt3BuildInfo, wbt3CurrentInfo=wbt3CurrentInfo, wbt3RDPConnWorkingDir=wbt3RDPConnWorkingDir, wbt3RDPConnTable=wbt3RDPConnTable, wbt3kbLanguage=wbt3kbLanguage, wbt3TerminalID=wbt3TerminalID, wbt3DUpModBuildDate=wbt3DUpModBuildDate, wbt3Security=wbt3Security, wbt3RamSize=wbt3RamSize, wbt3ResetToFactoryDefault=wbt3ResetToFactoryDefault, wbt3TrapServer2=wbt3TrapServer2, wbt3Administration=wbt3Administration, wbt3WorkingDir=wbt3WorkingDir, wbt3DUpBuildNum=wbt3DUpBuildNum, wbt3UpDnLoadNum=wbt3UpDnLoadNum, wbt3UsersStatus=wbt3UsersStatus, wbt3Connection3=wbt3Connection3, wbt3RDPConnDomain=wbt3RDPConnDomain, password=password, old=old, wbt3DUpInfoEntry=wbt3DUpInfoEntry, wbt3RomTable=wbt3RomTable, wbt3TrapReqId=wbt3TrapReqId, wbt3secondaryWINSserverIPaddress=wbt3secondaryWINSserverIPaddress, wbt3ScreenTimeOut=wbt3ScreenTimeOut, wbt3TrapDHCPUpdDone=wbt3TrapDHCPUpdDone, wbt3com2Share=wbt3com2Share, wbt3SNMPupdate=wbt3SNMPupdate, wbt3UsersTable=wbt3UsersTable, wbt3privilege=wbt3privilege, wbt3FileServer=wbt3FileServer, wbt3RamIndex=wbt3RamIndex, wbt3AutoLoginEnable=wbt3AutoLoginEnable, wbt3DispUseDDC=wbt3DispUseDDC, workingDirectory=workingDirectory, wbt3DUpInfoIndex=wbt3DUpInfoIndex, iCActrlEsc=iCActrlEsc, wbt3CurOEM=wbt3CurOEM, wbt3TermConnTable=wbt3TermConnTable, wbt3TermConnName=wbt3TermConnName, defaultHotkeysEntry=defaultHotkeysEntry, wbt3EmulationMode=wbt3EmulationMode, iCADefaultHotkeys=iCADefaultHotkeys, wbt3AutoStart6=wbt3AutoStart6, wbt3DhcpUpdateInfo=wbt3DhcpUpdateInfo, wbt3TermConnScript=wbt3TermConnScript, wbt3Action=wbt3Action, wbt3ICAConnName=wbt3ICAConnName, wbt3Ram=wbt3Ram, wbt3DispColor=wbt3DispColor, wbt3DispFreqMax=wbt3DispFreqMax, wbt3=wbt3, setCommunity=setCommunity, wbt3DhcpInfoNum=wbt3DhcpInfoNum, iCActrlAltDel=iCActrlAltDel, wbt3TrapsInfo=wbt3TrapsInfo, wbt3AcceptReq=wbt3AcceptReq, wbt3NetworkTable=wbt3NetworkTable, wbt3ConnectionName=wbt3ConnectionName, wbt3UpDnLoadTimeFlag=wbt3UpDnLoadTimeFlag, wbt3ICAConnSoundQuality=wbt3ICAConnSoundQuality)
mibBuilder.exportSymbols("WYSE-MIB", wbt3TermConnIBM3270EmuModel=wbt3TermConnIBM3270EmuModel, wbt3userName=wbt3userName, wbt3secondaryDNSserverIPaddress=wbt3secondaryDNSserverIPaddress, wbt3DHCPoptionIDs=wbt3DHCPoptionIDs, wbt3ServerIP=wbt3ServerIP, wbt3AutoStart5=wbt3AutoStart5, wbt3RDPConnModifiable=wbt3RDPConnModifiable, wbt3RamEntry=wbt3RamEntry, wbt3IODevAttached=wbt3IODevAttached, wbt3TrapServers=wbt3TrapServers, wbt3password=wbt3password, wbt3Users=wbt3Users, wbt3TermConnTelnetName=wbt3TermConnTelnetName, wbt3PCCardNum=wbt3PCCardNum, wbt3MibRevMinor=wbt3MibRevMinor, wbt3FileRootPath=wbt3FileRootPath, wbt3CustomField2=wbt3CustomField2, wbt3defaultDomain=wbt3defaultDomain, wbt3RDPConnAutoLogon=wbt3RDPConnAutoLogon, wbt3UpDnLoadSrcFile=wbt3UpDnLoadSrcFile, wbt3TermConnEntry=wbt3TermConnEntry, wbt3TermConnCommType=wbt3TermConnCommType, commandLine=commandLine, wbt3TrapDHCPBuildMismatch=wbt3TrapDHCPBuildMismatch, wbt3UpDnLoadFileType=wbt3UpDnLoadFileType, wbt3UpDnLoadFServer=wbt3UpDnLoadFServer, wyse=wyse)
