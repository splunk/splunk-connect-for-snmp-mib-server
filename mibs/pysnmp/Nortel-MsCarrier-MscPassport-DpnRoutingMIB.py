#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-DpnRoutingMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-DpnRoutingMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
mscRtg, mscRtgIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtg", "mscRtgIndex")
Integer32, RowStatus, Unsigned32, DisplayString, StorageType, RowPointer = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "RowStatus", "Unsigned32", "DisplayString", "StorageType", "RowPointer")
AsciiString, AsciiStringIndex, NonReplicated, PassportCounter64 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiString", "AsciiStringIndex", "NonReplicated", "PassportCounter64")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Counter64, IpAddress, TimeTicks, Gauge32, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, iso, MibIdentifier, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "IpAddress", "TimeTicks", "Gauge32", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "iso", "MibIdentifier", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dpnRoutingMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21))
mscRtgDpn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4))
mscRtgDpnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 1), )
if mibBuilder.loadTexts: mscRtgDpnRowStatusTable.setStatus('mandatory')
mscRtgDpnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"))
if mibBuilder.loadTexts: mscRtgDpnRowStatusEntry.setStatus('mandatory')
mscRtgDpnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRowStatus.setStatus('mandatory')
mscRtgDpnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnComponentName.setStatus('mandatory')
mscRtgDpnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnStorageType.setStatus('mandatory')
mscRtgDpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscRtgDpnIndex.setStatus('mandatory')
mscRtgDpnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11), )
if mibBuilder.loadTexts: mscRtgDpnProvTable.setStatus('mandatory')
mscRtgDpnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"))
if mibBuilder.loadTexts: mscRtgDpnProvEntry.setStatus('mandatory')
mscRtgDpnLogicalNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLogicalNetworkNumber.setStatus('mandatory')
mscRtgDpnRoutingId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnRoutingId.setStatus('mandatory')
mscRtgDpnModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1909))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnModuleId.setStatus('mandatory')
mscRtgDpnDelayMetricCutOff = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 250)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnDelayMetricCutOff.setStatus('mandatory')
mscRtgDpnThroughputMetricCutOff = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(128, 245)).clone(245)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnThroughputMetricCutOff.setStatus('mandatory')
mscRtgDpnForwardingPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("loadspread", 0), ("loadshare", 1), ("loadspreadFast", 2))).clone('loadspread')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnForwardingPolicy.setStatus('mandatory')
mscRtgDpnDelayMetricRangeBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnDelayMetricRangeBoundary.setStatus('mandatory')
mscRtgDpnTputMetricRangeBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnTputMetricRangeBoundary.setStatus('mandatory')
mscRtgDpnConStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 13), )
if mibBuilder.loadTexts: mscRtgDpnConStatsTable.setStatus('mandatory')
mscRtgDpnConStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"))
if mibBuilder.loadTexts: mscRtgDpnConStatsEntry.setStatus('mandatory')
mscRtgDpnControlPktTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnControlPktTx.setStatus('mandatory')
mscRtgDpnControlPktRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnControlPktRx.setStatus('mandatory')
mscRtgDpnControlBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnControlBytesTx.setStatus('mandatory')
mscRtgDpnControlBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnControlBytesRx.setStatus('mandatory')
mscRtgDpnOutOfSequencePkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnOutOfSequencePkt.setStatus('mandatory')
mscRtgDpnFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14), )
if mibBuilder.loadTexts: mscRtgDpnFwdStatsTable.setStatus('mandatory')
mscRtgDpnFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"))
if mibBuilder.loadTexts: mscRtgDpnFwdStatsEntry.setStatus('mandatory')
mscRtgDpnTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnTotalPackets.setStatus('mandatory')
mscRtgDpnThroughputPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnThroughputPackets.setStatus('mandatory')
mscRtgDpnDelayPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnDelayPackets.setStatus('mandatory')
mscRtgDpnNormalReliabilityPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnNormalReliabilityPackets.setStatus('mandatory')
mscRtgDpnHighReliabilityPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnHighReliabilityPackets.setStatus('mandatory')
mscRtgDpnDiscardNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnDiscardNoRoute.setStatus('mandatory')
mscRtgDpnInterruptingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnInterruptingPackets.setStatus('mandatory')
mscRtgDpnDiscardLpCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 14, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnDiscardLpCongested.setStatus('mandatory')
mscRtgDpnCallServerModuleRidsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 232), )
if mibBuilder.loadTexts: mscRtgDpnCallServerModuleRidsTable.setStatus('mandatory')
mscRtgDpnCallServerModuleRidsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 232, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCallServerModuleRidsValue"))
if mibBuilder.loadTexts: mscRtgDpnCallServerModuleRidsEntry.setStatus('mandatory')
mscRtgDpnCallServerModuleRidsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 232, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCallServerModuleRidsValue.setStatus('mandatory')
mscRtgDpnSubnetMidsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 233), )
if mibBuilder.loadTexts: mscRtgDpnSubnetMidsTable.setStatus('mandatory')
mscRtgDpnSubnetMidsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 233, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnSubnetMidsValue"))
if mibBuilder.loadTexts: mscRtgDpnSubnetMidsEntry.setStatus('mandatory')
mscRtgDpnSubnetMidsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 233, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnSubnetMidsValue.setStatus('mandatory')
mscRtgDpnVarianceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 343), )
if mibBuilder.loadTexts: mscRtgDpnVarianceTable.setStatus('mandatory')
mscRtgDpnVarianceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 343, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnVarianceCosIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnVarianceMetricRangeIndex"))
if mibBuilder.loadTexts: mscRtgDpnVarianceEntry.setStatus('mandatory')
mscRtgDpnVarianceCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 343, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("delay", 0), ("throughput", 1))))
if mibBuilder.loadTexts: mscRtgDpnVarianceCosIndex.setStatus('mandatory')
mscRtgDpnVarianceMetricRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 343, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1))))
if mibBuilder.loadTexts: mscRtgDpnVarianceMetricRangeIndex.setStatus('mandatory')
mscRtgDpnVarianceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 343, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 500), ValueRangeConstraint(9999, 9999), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnVarianceValue.setStatus('mandatory')
mscRtgDpnRid = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2))
mscRtgDpnRidRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 1), )
if mibBuilder.loadTexts: mscRtgDpnRidRowStatusTable.setStatus('mandatory')
mscRtgDpnRidRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidRowStatusEntry.setStatus('mandatory')
mscRtgDpnRidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidRowStatus.setStatus('mandatory')
mscRtgDpnRidComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidComponentName.setStatus('mandatory')
mscRtgDpnRidStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidStorageType.setStatus('mandatory')
mscRtgDpnRidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)))
if mibBuilder.loadTexts: mscRtgDpnRidIndex.setStatus('mandatory')
mscRtgDpnRidOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 10), )
if mibBuilder.loadTexts: mscRtgDpnRidOperTable.setStatus('mandatory')
mscRtgDpnRidOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidOperEntry.setStatus('mandatory')
mscRtgDpnRidDpnDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidDpnDelayMetric.setStatus('mandatory')
mscRtgDpnRidDpnTputMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidDpnTputMetric.setStatus('mandatory')
mscRtgDpnRidDelayNextHopLinkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 226), )
if mibBuilder.loadTexts: mscRtgDpnRidDelayNextHopLinkGroupsTable.setStatus('mandatory')
mscRtgDpnRidDelayNextHopLinkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 226, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidDelayNextHopLinkGroupsIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidDelayNextHopLinkGroupsEntry.setStatus('mandatory')
mscRtgDpnRidDelayNextHopLinkGroupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 226, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnRidDelayNextHopLinkGroupsIndex.setStatus('mandatory')
mscRtgDpnRidDelayNextHopLinkGroupsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 226, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidDelayNextHopLinkGroupsValue.setStatus('mandatory')
mscRtgDpnRidTputNextHopLinkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 227), )
if mibBuilder.loadTexts: mscRtgDpnRidTputNextHopLinkGroupsTable.setStatus('mandatory')
mscRtgDpnRidTputNextHopLinkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 227, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidTputNextHopLinkGroupsIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidTputNextHopLinkGroupsEntry.setStatus('mandatory')
mscRtgDpnRidTputNextHopLinkGroupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 227, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnRidTputNextHopLinkGroupsIndex.setStatus('mandatory')
mscRtgDpnRidTputNextHopLinkGroupsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 227, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidTputNextHopLinkGroupsValue.setStatus('mandatory')
mscRtgDpnRidDelayPathTrafficProportionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 328), )
if mibBuilder.loadTexts: mscRtgDpnRidDelayPathTrafficProportionsTable.setStatus('mandatory')
mscRtgDpnRidDelayPathTrafficProportionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 328, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidDelayPathTrafficProportionsIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidDelayPathTrafficProportionsEntry.setStatus('mandatory')
mscRtgDpnRidDelayPathTrafficProportionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 328, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnRidDelayPathTrafficProportionsIndex.setStatus('mandatory')
mscRtgDpnRidDelayPathTrafficProportionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 328, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidDelayPathTrafficProportionsValue.setStatus('mandatory')
mscRtgDpnRidTputPathTrafficProportionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 329), )
if mibBuilder.loadTexts: mscRtgDpnRidTputPathTrafficProportionsTable.setStatus('mandatory')
mscRtgDpnRidTputPathTrafficProportionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 329, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidTputPathTrafficProportionsIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidTputPathTrafficProportionsEntry.setStatus('mandatory')
mscRtgDpnRidTputPathTrafficProportionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 329, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnRidTputPathTrafficProportionsIndex.setStatus('mandatory')
mscRtgDpnRidTputPathTrafficProportionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 329, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidTputPathTrafficProportionsValue.setStatus('mandatory')
mscRtgDpnRidDelayMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 339), )
if mibBuilder.loadTexts: mscRtgDpnRidDelayMetricTable.setStatus('mandatory')
mscRtgDpnRidDelayMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 339, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidDelayMetricIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidDelayMetricEntry.setStatus('mandatory')
mscRtgDpnRidDelayMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 339, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnRidDelayMetricIndex.setStatus('mandatory')
mscRtgDpnRidDelayMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 339, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidDelayMetricValue.setStatus('mandatory')
mscRtgDpnRidTputMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 340), )
if mibBuilder.loadTexts: mscRtgDpnRidTputMetricTable.setStatus('mandatory')
mscRtgDpnRidTputMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 340, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidTputMetricIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidTputMetricEntry.setStatus('mandatory')
mscRtgDpnRidTputMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 340, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnRidTputMetricIndex.setStatus('mandatory')
mscRtgDpnRidTputMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 340, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidTputMetricValue.setStatus('mandatory')
mscRtgDpnRidMid = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 2))
mscRtgDpnRidMidRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 2, 1), )
if mibBuilder.loadTexts: mscRtgDpnRidMidRowStatusTable.setStatus('mandatory')
mscRtgDpnRidMidRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidMidIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidMidRowStatusEntry.setStatus('mandatory')
mscRtgDpnRidMidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidMidRowStatus.setStatus('mandatory')
mscRtgDpnRidMidComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidMidComponentName.setStatus('mandatory')
mscRtgDpnRidMidStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidMidStorageType.setStatus('mandatory')
mscRtgDpnRidMidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2046)))
if mibBuilder.loadTexts: mscRtgDpnRidMidIndex.setStatus('mandatory')
mscRtgDpnMid = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3))
mscRtgDpnMidRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 1), )
if mibBuilder.loadTexts: mscRtgDpnMidRowStatusTable.setStatus('mandatory')
mscRtgDpnMidRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidRowStatusEntry.setStatus('mandatory')
mscRtgDpnMidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidRowStatus.setStatus('mandatory')
mscRtgDpnMidComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidComponentName.setStatus('mandatory')
mscRtgDpnMidStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidStorageType.setStatus('mandatory')
mscRtgDpnMidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2046)))
if mibBuilder.loadTexts: mscRtgDpnMidIndex.setStatus('mandatory')
mscRtgDpnMidOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 10), )
if mibBuilder.loadTexts: mscRtgDpnMidOperTable.setStatus('mandatory')
mscRtgDpnMidOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidOperEntry.setStatus('mandatory')
mscRtgDpnMidSubstituteRid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidSubstituteRid.setStatus('mandatory')
mscRtgDpnMidDelayNextHopLinkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 228), )
if mibBuilder.loadTexts: mscRtgDpnMidDelayNextHopLinkGroupsTable.setStatus('mandatory')
mscRtgDpnMidDelayNextHopLinkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 228, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidDelayNextHopLinkGroupsIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidDelayNextHopLinkGroupsEntry.setStatus('mandatory')
mscRtgDpnMidDelayNextHopLinkGroupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 228, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnMidDelayNextHopLinkGroupsIndex.setStatus('mandatory')
mscRtgDpnMidDelayNextHopLinkGroupsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 228, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidDelayNextHopLinkGroupsValue.setStatus('mandatory')
mscRtgDpnMidTputNextHopLinkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 229), )
if mibBuilder.loadTexts: mscRtgDpnMidTputNextHopLinkGroupsTable.setStatus('mandatory')
mscRtgDpnMidTputNextHopLinkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 229, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidTputNextHopLinkGroupsIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidTputNextHopLinkGroupsEntry.setStatus('mandatory')
mscRtgDpnMidTputNextHopLinkGroupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 229, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnMidTputNextHopLinkGroupsIndex.setStatus('mandatory')
mscRtgDpnMidTputNextHopLinkGroupsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 229, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidTputNextHopLinkGroupsValue.setStatus('mandatory')
mscRtgDpnMidDelayMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 330), )
if mibBuilder.loadTexts: mscRtgDpnMidDelayMetricTable.setStatus('mandatory')
mscRtgDpnMidDelayMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 330, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidDelayMetricIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidDelayMetricEntry.setStatus('mandatory')
mscRtgDpnMidDelayMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 330, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnMidDelayMetricIndex.setStatus('mandatory')
mscRtgDpnMidDelayMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 330, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidDelayMetricValue.setStatus('mandatory')
mscRtgDpnMidTputMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 331), )
if mibBuilder.loadTexts: mscRtgDpnMidTputMetricTable.setStatus('mandatory')
mscRtgDpnMidTputMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 331, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidTputMetricIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidTputMetricEntry.setStatus('mandatory')
mscRtgDpnMidTputMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 331, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnMidTputMetricIndex.setStatus('mandatory')
mscRtgDpnMidTputMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 331, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidTputMetricValue.setStatus('mandatory')
mscRtgDpnMidDelayPathTrafficProportionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 332), )
if mibBuilder.loadTexts: mscRtgDpnMidDelayPathTrafficProportionsTable.setStatus('mandatory')
mscRtgDpnMidDelayPathTrafficProportionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 332, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidDelayPathTrafficProportionsIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidDelayPathTrafficProportionsEntry.setStatus('mandatory')
mscRtgDpnMidDelayPathTrafficProportionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 332, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnMidDelayPathTrafficProportionsIndex.setStatus('mandatory')
mscRtgDpnMidDelayPathTrafficProportionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 332, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidDelayPathTrafficProportionsValue.setStatus('mandatory')
mscRtgDpnMidTputPathTrafficProportionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 333), )
if mibBuilder.loadTexts: mscRtgDpnMidTputPathTrafficProportionsTable.setStatus('mandatory')
mscRtgDpnMidTputPathTrafficProportionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 333, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnMidTputPathTrafficProportionsIndex"))
if mibBuilder.loadTexts: mscRtgDpnMidTputPathTrafficProportionsEntry.setStatus('mandatory')
mscRtgDpnMidTputPathTrafficProportionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 333, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnMidTputPathTrafficProportionsIndex.setStatus('mandatory')
mscRtgDpnMidTputPathTrafficProportionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 3, 333, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnMidTputPathTrafficProportionsValue.setStatus('mandatory')
mscRtgDpnCs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4))
mscRtgDpnCsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 1), )
if mibBuilder.loadTexts: mscRtgDpnCsRowStatusTable.setStatus('mandatory')
mscRtgDpnCsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsIndex"))
if mibBuilder.loadTexts: mscRtgDpnCsRowStatusEntry.setStatus('mandatory')
mscRtgDpnCsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsRowStatus.setStatus('mandatory')
mscRtgDpnCsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsComponentName.setStatus('mandatory')
mscRtgDpnCsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsStorageType.setStatus('mandatory')
mscRtgDpnCsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6, 7, 8, 10, 11, 12, 14))).clone(namedValues=NamedValues(("dcr", 1), ("nui", 4), ("crd", 5), ("lnui", 6), ("scr", 7), ("npm", 8), ("grman", 10), ("gscr", 11), ("gdcr", 12), ("lcr", 14))))
if mibBuilder.loadTexts: mscRtgDpnCsIndex.setStatus('mandatory')
mscRtgDpnCsDelayNextHopLinkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 230), )
if mibBuilder.loadTexts: mscRtgDpnCsDelayNextHopLinkGroupsTable.setStatus('mandatory')
mscRtgDpnCsDelayNextHopLinkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 230, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsDelayNextHopLinkGroupsIndex"))
if mibBuilder.loadTexts: mscRtgDpnCsDelayNextHopLinkGroupsEntry.setStatus('mandatory')
mscRtgDpnCsDelayNextHopLinkGroupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 230, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnCsDelayNextHopLinkGroupsIndex.setStatus('mandatory')
mscRtgDpnCsDelayNextHopLinkGroupsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 230, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsDelayNextHopLinkGroupsValue.setStatus('mandatory')
mscRtgDpnCsTputNextHopLinkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 231), )
if mibBuilder.loadTexts: mscRtgDpnCsTputNextHopLinkGroupsTable.setStatus('mandatory')
mscRtgDpnCsTputNextHopLinkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 231, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsTputNextHopLinkGroupsIndex"))
if mibBuilder.loadTexts: mscRtgDpnCsTputNextHopLinkGroupsEntry.setStatus('mandatory')
mscRtgDpnCsTputNextHopLinkGroupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 231, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnCsTputNextHopLinkGroupsIndex.setStatus('mandatory')
mscRtgDpnCsTputNextHopLinkGroupsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 231, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsTputNextHopLinkGroupsValue.setStatus('mandatory')
mscRtgDpnCsDelayMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 334), )
if mibBuilder.loadTexts: mscRtgDpnCsDelayMetricTable.setStatus('mandatory')
mscRtgDpnCsDelayMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 334, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsDelayMetricIndex"))
if mibBuilder.loadTexts: mscRtgDpnCsDelayMetricEntry.setStatus('mandatory')
mscRtgDpnCsDelayMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 334, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnCsDelayMetricIndex.setStatus('mandatory')
mscRtgDpnCsDelayMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 334, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsDelayMetricValue.setStatus('mandatory')
mscRtgDpnCsTputMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 335), )
if mibBuilder.loadTexts: mscRtgDpnCsTputMetricTable.setStatus('mandatory')
mscRtgDpnCsTputMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 335, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsTputMetricIndex"))
if mibBuilder.loadTexts: mscRtgDpnCsTputMetricEntry.setStatus('mandatory')
mscRtgDpnCsTputMetricIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 335, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnCsTputMetricIndex.setStatus('mandatory')
mscRtgDpnCsTputMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 335, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsTputMetricValue.setStatus('mandatory')
mscRtgDpnCsDelayPathTrafficProportionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 336), )
if mibBuilder.loadTexts: mscRtgDpnCsDelayPathTrafficProportionsTable.setStatus('mandatory')
mscRtgDpnCsDelayPathTrafficProportionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 336, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsDelayPathTrafficProportionsIndex"))
if mibBuilder.loadTexts: mscRtgDpnCsDelayPathTrafficProportionsEntry.setStatus('mandatory')
mscRtgDpnCsDelayPathTrafficProportionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 336, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnCsDelayPathTrafficProportionsIndex.setStatus('mandatory')
mscRtgDpnCsDelayPathTrafficProportionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 336, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsDelayPathTrafficProportionsValue.setStatus('mandatory')
mscRtgDpnCsTputPathTrafficProportionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 337), )
if mibBuilder.loadTexts: mscRtgDpnCsTputPathTrafficProportionsTable.setStatus('mandatory')
mscRtgDpnCsTputPathTrafficProportionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 337, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnCsTputPathTrafficProportionsIndex"))
if mibBuilder.loadTexts: mscRtgDpnCsTputPathTrafficProportionsEntry.setStatus('mandatory')
mscRtgDpnCsTputPathTrafficProportionsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 337, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscRtgDpnCsTputPathTrafficProportionsIndex.setStatus('mandatory')
mscRtgDpnCsTputPathTrafficProportionsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 4, 337, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnCsTputPathTrafficProportionsValue.setStatus('mandatory')
mscRtgDpnLg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5))
mscRtgDpnLgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 1), )
if mibBuilder.loadTexts: mscRtgDpnLgRowStatusTable.setStatus('mandatory')
mscRtgDpnLgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnLgIndex"))
if mibBuilder.loadTexts: mscRtgDpnLgRowStatusEntry.setStatus('mandatory')
mscRtgDpnLgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgRowStatus.setStatus('mandatory')
mscRtgDpnLgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgComponentName.setStatus('mandatory')
mscRtgDpnLgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgStorageType.setStatus('mandatory')
mscRtgDpnLgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: mscRtgDpnLgIndex.setStatus('mandatory')
mscRtgDpnLgOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 3), )
if mibBuilder.loadTexts: mscRtgDpnLgOperTable.setStatus('mandatory')
mscRtgDpnLgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 3, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnLgIndex"))
if mibBuilder.loadTexts: mscRtgDpnLgOperEntry.setStatus('mandatory')
mscRtgDpnLgFarEndType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("em", 0), ("rm", 1), ("am", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgFarEndType.setStatus('mandatory')
mscRtgDpnLgFarEndRid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgFarEndRid.setStatus('mandatory')
mscRtgDpnLgFarEndMid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1910))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgFarEndMid.setStatus('mandatory')
mscRtgDpnLgDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgDelayMetric.setStatus('mandatory')
mscRtgDpnLgTputMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 5, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLgTputMetric.setStatus('mandatory')
mscRtgDpnLpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6))
mscRtgDpnLpStatsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 1), )
if mibBuilder.loadTexts: mscRtgDpnLpStatsRowStatusTable.setStatus('mandatory')
mscRtgDpnLpStatsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnLpStatsIndex"))
if mibBuilder.loadTexts: mscRtgDpnLpStatsRowStatusEntry.setStatus('mandatory')
mscRtgDpnLpStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsRowStatus.setStatus('mandatory')
mscRtgDpnLpStatsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsComponentName.setStatus('mandatory')
mscRtgDpnLpStatsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsStorageType.setStatus('mandatory')
mscRtgDpnLpStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscRtgDpnLpStatsIndex.setStatus('mandatory')
mscRtgDpnLpStatsFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10), )
if mibBuilder.loadTexts: mscRtgDpnLpStatsFwdStatsTable.setStatus('mandatory')
mscRtgDpnLpStatsFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnLpStatsIndex"))
if mibBuilder.loadTexts: mscRtgDpnLpStatsFwdStatsEntry.setStatus('mandatory')
mscRtgDpnLpStatsTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsTotalPackets.setStatus('mandatory')
mscRtgDpnLpStatsThroughputPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsThroughputPackets.setStatus('mandatory')
mscRtgDpnLpStatsDelayPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsDelayPackets.setStatus('mandatory')
mscRtgDpnLpStatsNormalReliabilityPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsNormalReliabilityPackets.setStatus('mandatory')
mscRtgDpnLpStatsHighReliabilityPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsHighReliabilityPackets.setStatus('mandatory')
mscRtgDpnLpStatsDiscardNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsDiscardNoRoute.setStatus('mandatory')
mscRtgDpnLpStatsInterruptingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsInterruptingPackets.setStatus('mandatory')
mscRtgDpnLpStatsDiscardLpCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 6, 10, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnLpStatsDiscardLpCongested.setStatus('mandatory')
mscRtgDpnRidFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7))
mscRtgDpnRidFilterRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 1), )
if mibBuilder.loadTexts: mscRtgDpnRidFilterRowStatusTable.setStatus('mandatory')
mscRtgDpnRidFilterRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidFilterIndex"))
if mibBuilder.loadTexts: mscRtgDpnRidFilterRowStatusEntry.setStatus('mandatory')
mscRtgDpnRidFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnRidFilterRowStatus.setStatus('mandatory')
mscRtgDpnRidFilterComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidFilterComponentName.setStatus('mandatory')
mscRtgDpnRidFilterStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnRidFilterStorageType.setStatus('mandatory')
mscRtgDpnRidFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 126)))
if mibBuilder.loadTexts: mscRtgDpnRidFilterIndex.setStatus('mandatory')
mscRtgDpnRidFilterImportRidListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 303), )
if mibBuilder.loadTexts: mscRtgDpnRidFilterImportRidListTable.setStatus('mandatory')
mscRtgDpnRidFilterImportRidListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 303, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidFilterIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidFilterImportRidListValue"))
if mibBuilder.loadTexts: mscRtgDpnRidFilterImportRidListEntry.setStatus('mandatory')
mscRtgDpnRidFilterImportRidListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 303, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnRidFilterImportRidListValue.setStatus('mandatory')
mscRtgDpnRidFilterImportRidListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 303, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscRtgDpnRidFilterImportRidListRowStatus.setStatus('mandatory')
mscRtgDpnRidFilterExportRidListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 304), )
if mibBuilder.loadTexts: mscRtgDpnRidFilterExportRidListTable.setStatus('mandatory')
mscRtgDpnRidFilterExportRidListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 304, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidFilterIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnRidFilterExportRidListValue"))
if mibBuilder.loadTexts: mscRtgDpnRidFilterExportRidListEntry.setStatus('mandatory')
mscRtgDpnRidFilterExportRidListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 304, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnRidFilterExportRidListValue.setStatus('mandatory')
mscRtgDpnRidFilterExportRidListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 7, 304, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscRtgDpnRidFilterExportRidListRowStatus.setStatus('mandatory')
mscRtgDpnArt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9))
mscRtgDpnArtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 1), )
if mibBuilder.loadTexts: mscRtgDpnArtRowStatusTable.setStatus('mandatory')
mscRtgDpnArtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"))
if mibBuilder.loadTexts: mscRtgDpnArtRowStatusEntry.setStatus('mandatory')
mscRtgDpnArtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtRowStatus.setStatus('mandatory')
mscRtgDpnArtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtComponentName.setStatus('mandatory')
mscRtgDpnArtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtStorageType.setStatus('mandatory')
mscRtgDpnArtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscRtgDpnArtIndex.setStatus('mandatory')
mscRtgDpnArtProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 10), )
if mibBuilder.loadTexts: mscRtgDpnArtProvTable.setStatus('mandatory')
mscRtgDpnArtProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"))
if mibBuilder.loadTexts: mscRtgDpnArtProvEntry.setStatus('mandatory')
mscRtgDpnArtCosUnderTest = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("delayCosOnly", 1), ("tputCosOnly", 2), ("delayAndTputCos", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnArtCosUnderTest.setStatus('mandatory')
mscRtgDpnArtTestInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 900)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgDpnArtTestInterval.setStatus('mandatory')
mscRtgDpnArtOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 11), )
if mibBuilder.loadTexts: mscRtgDpnArtOperTable.setStatus('mandatory')
mscRtgDpnArtOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"))
if mibBuilder.loadTexts: mscRtgDpnArtOperEntry.setStatus('mandatory')
mscRtgDpnArtNumOfLoopDests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtNumOfLoopDests.setStatus('mandatory')
mscRtgDpnArtNumOfTimeoutDests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtNumOfTimeoutDests.setStatus('mandatory')
mscRtgDpnArtErrRid = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2))
mscRtgDpnArtErrRidRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 1), )
if mibBuilder.loadTexts: mscRtgDpnArtErrRidRowStatusTable.setStatus('mandatory')
mscRtgDpnArtErrRidRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrRidIndex"))
if mibBuilder.loadTexts: mscRtgDpnArtErrRidRowStatusEntry.setStatus('mandatory')
mscRtgDpnArtErrRidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrRidRowStatus.setStatus('mandatory')
mscRtgDpnArtErrRidComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrRidComponentName.setStatus('mandatory')
mscRtgDpnArtErrRidStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrRidStorageType.setStatus('mandatory')
mscRtgDpnArtErrRidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)))
if mibBuilder.loadTexts: mscRtgDpnArtErrRidIndex.setStatus('mandatory')
mscRtgDpnArtErrRidOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 10), )
if mibBuilder.loadTexts: mscRtgDpnArtErrRidOperTable.setStatus('mandatory')
mscRtgDpnArtErrRidOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrRidIndex"))
if mibBuilder.loadTexts: mscRtgDpnArtErrRidOperEntry.setStatus('mandatory')
mscRtgDpnArtErrRidDelayCosErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noError", 0), ("timeout", 1), ("loop", 2))).clone('noError')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrRidDelayCosErrType.setStatus('mandatory')
mscRtgDpnArtErrRidThroughputCosErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noError", 0), ("timeout", 1), ("loop", 2))).clone('noError')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrRidThroughputCosErrType.setStatus('mandatory')
mscRtgDpnArtErrRidDelayErrPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 688), )
if mibBuilder.loadTexts: mscRtgDpnArtErrRidDelayErrPathTable.setStatus('mandatory')
mscRtgDpnArtErrRidDelayErrPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 688, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrRidDelayErrPathValue"))
if mibBuilder.loadTexts: mscRtgDpnArtErrRidDelayErrPathEntry.setStatus('mandatory')
mscRtgDpnArtErrRidDelayErrPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 688, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrRidDelayErrPathValue.setStatus('mandatory')
mscRtgDpnArtErrRidTputErrPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 689), )
if mibBuilder.loadTexts: mscRtgDpnArtErrRidTputErrPathTable.setStatus('mandatory')
mscRtgDpnArtErrRidTputErrPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 689, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrRidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrRidTputErrPathValue"))
if mibBuilder.loadTexts: mscRtgDpnArtErrRidTputErrPathEntry.setStatus('mandatory')
mscRtgDpnArtErrRidTputErrPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 2, 689, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrRidTputErrPathValue.setStatus('mandatory')
mscRtgDpnArtErrMid = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3))
mscRtgDpnArtErrMidRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 1), )
if mibBuilder.loadTexts: mscRtgDpnArtErrMidRowStatusTable.setStatus('mandatory')
mscRtgDpnArtErrMidRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrMidIndex"))
if mibBuilder.loadTexts: mscRtgDpnArtErrMidRowStatusEntry.setStatus('mandatory')
mscRtgDpnArtErrMidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrMidRowStatus.setStatus('mandatory')
mscRtgDpnArtErrMidComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrMidComponentName.setStatus('mandatory')
mscRtgDpnArtErrMidStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrMidStorageType.setStatus('mandatory')
mscRtgDpnArtErrMidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2046)))
if mibBuilder.loadTexts: mscRtgDpnArtErrMidIndex.setStatus('mandatory')
mscRtgDpnArtErrMidOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 10), )
if mibBuilder.loadTexts: mscRtgDpnArtErrMidOperTable.setStatus('mandatory')
mscRtgDpnArtErrMidOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrMidIndex"))
if mibBuilder.loadTexts: mscRtgDpnArtErrMidOperEntry.setStatus('mandatory')
mscRtgDpnArtErrMidDelayCosErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noError", 0), ("timeout", 1), ("loop", 2))).clone('noError')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrMidDelayCosErrType.setStatus('mandatory')
mscRtgDpnArtErrMidThroughputCosErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noError", 0), ("timeout", 1), ("loop", 2))).clone('noError')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrMidThroughputCosErrType.setStatus('mandatory')
mscRtgDpnArtErrMidDelayErrPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 688), )
if mibBuilder.loadTexts: mscRtgDpnArtErrMidDelayErrPathTable.setStatus('mandatory')
mscRtgDpnArtErrMidDelayErrPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 688, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrMidDelayErrPathValue"))
if mibBuilder.loadTexts: mscRtgDpnArtErrMidDelayErrPathEntry.setStatus('mandatory')
mscRtgDpnArtErrMidDelayErrPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 688, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrMidDelayErrPathValue.setStatus('mandatory')
mscRtgDpnArtErrMidTputErrPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 689), )
if mibBuilder.loadTexts: mscRtgDpnArtErrMidTputErrPathTable.setStatus('mandatory')
mscRtgDpnArtErrMidTputErrPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 689, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrMidIndex"), (0, "Nortel-MsCarrier-MscPassport-DpnRoutingMIB", "mscRtgDpnArtErrMidTputErrPathValue"))
if mibBuilder.loadTexts: mscRtgDpnArtErrMidTputErrPathEntry.setStatus('mandatory')
mscRtgDpnArtErrMidTputErrPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 4, 9, 3, 689, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgDpnArtErrMidTputErrPathValue.setStatus('mandatory')
dpnRoutingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 1))
dpnRoutingGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 1, 1))
dpnRoutingGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 1, 1, 3))
dpnRoutingGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 1, 1, 3, 2))
dpnRoutingCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 3))
dpnRoutingCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 3, 1))
dpnRoutingCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 3, 1, 3))
dpnRoutingCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 21, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-DpnRoutingMIB", mscRtgDpnMidTputNextHopLinkGroupsIndex=mscRtgDpnMidTputNextHopLinkGroupsIndex, mscRtgDpnCsTputMetricEntry=mscRtgDpnCsTputMetricEntry, mscRtgDpnLpStatsTotalPackets=mscRtgDpnLpStatsTotalPackets, mscRtgDpnMidDelayPathTrafficProportionsEntry=mscRtgDpnMidDelayPathTrafficProportionsEntry, mscRtgDpnRidMidRowStatus=mscRtgDpnRidMidRowStatus, mscRtgDpnCsTputPathTrafficProportionsIndex=mscRtgDpnCsTputPathTrafficProportionsIndex, mscRtgDpnLpStatsRowStatusEntry=mscRtgDpnLpStatsRowStatusEntry, mscRtgDpnRidTputMetricEntry=mscRtgDpnRidTputMetricEntry, mscRtgDpnMidDelayMetricTable=mscRtgDpnMidDelayMetricTable, mscRtgDpnLpStatsRowStatusTable=mscRtgDpnLpStatsRowStatusTable, mscRtgDpnRidFilterImportRidListRowStatus=mscRtgDpnRidFilterImportRidListRowStatus, mscRtgDpnConStatsEntry=mscRtgDpnConStatsEntry, mscRtgDpnMidTputNextHopLinkGroupsEntry=mscRtgDpnMidTputNextHopLinkGroupsEntry, mscRtgDpnArtRowStatusEntry=mscRtgDpnArtRowStatusEntry, mscRtgDpnArtNumOfLoopDests=mscRtgDpnArtNumOfLoopDests, mscRtgDpnArtErrMidThroughputCosErrType=mscRtgDpnArtErrMidThroughputCosErrType, mscRtgDpnMidOperTable=mscRtgDpnMidOperTable, mscRtgDpnCsStorageType=mscRtgDpnCsStorageType, mscRtgDpnArtErrRidIndex=mscRtgDpnArtErrRidIndex, mscRtgDpnArtCosUnderTest=mscRtgDpnArtCosUnderTest, mscRtgDpnRid=mscRtgDpnRid, mscRtgDpnMidComponentName=mscRtgDpnMidComponentName, mscRtgDpnForwardingPolicy=mscRtgDpnForwardingPolicy, mscRtgDpnCsDelayPathTrafficProportionsIndex=mscRtgDpnCsDelayPathTrafficProportionsIndex, mscRtgDpnLgRowStatusEntry=mscRtgDpnLgRowStatusEntry, mscRtgDpnRidOperTable=mscRtgDpnRidOperTable, mscRtgDpnArtErrRid=mscRtgDpnArtErrRid, mscRtgDpnArtErrMidOperTable=mscRtgDpnArtErrMidOperTable, mscRtgDpnMidRowStatus=mscRtgDpnMidRowStatus, mscRtgDpnRidFilterExportRidListValue=mscRtgDpnRidFilterExportRidListValue, mscRtgDpnLgFarEndRid=mscRtgDpnLgFarEndRid, mscRtgDpnCsTputMetricValue=mscRtgDpnCsTputMetricValue, mscRtgDpnArtErrMidDelayErrPathValue=mscRtgDpnArtErrMidDelayErrPathValue, dpnRoutingCapabilitiesCA=dpnRoutingCapabilitiesCA, mscRtgDpnRidRowStatusEntry=mscRtgDpnRidRowStatusEntry, mscRtgDpnDiscardLpCongested=mscRtgDpnDiscardLpCongested, mscRtgDpnArtErrMidOperEntry=mscRtgDpnArtErrMidOperEntry, mscRtgDpnMidTputPathTrafficProportionsEntry=mscRtgDpnMidTputPathTrafficProportionsEntry, mscRtgDpnMidDelayPathTrafficProportionsTable=mscRtgDpnMidDelayPathTrafficProportionsTable, mscRtgDpnMidDelayNextHopLinkGroupsTable=mscRtgDpnMidDelayNextHopLinkGroupsTable, mscRtgDpnComponentName=mscRtgDpnComponentName, mscRtgDpnCsTputMetricTable=mscRtgDpnCsTputMetricTable, mscRtgDpnArtStorageType=mscRtgDpnArtStorageType, mscRtgDpnLpStatsFwdStatsTable=mscRtgDpnLpStatsFwdStatsTable, mscRtgDpnCsDelayPathTrafficProportionsTable=mscRtgDpnCsDelayPathTrafficProportionsTable, mscRtgDpnMidTputMetricValue=mscRtgDpnMidTputMetricValue, mscRtgDpnArtErrMidDelayCosErrType=mscRtgDpnArtErrMidDelayCosErrType, mscRtgDpnCallServerModuleRidsValue=mscRtgDpnCallServerModuleRidsValue, mscRtgDpnRidFilterRowStatusTable=mscRtgDpnRidFilterRowStatusTable, mscRtgDpnLgFarEndType=mscRtgDpnLgFarEndType, mscRtgDpnRidTputMetricValue=mscRtgDpnRidTputMetricValue, mscRtgDpnArtErrRidRowStatus=mscRtgDpnArtErrRidRowStatus, mscRtgDpnArtOperEntry=mscRtgDpnArtOperEntry, mscRtgDpnCallServerModuleRidsEntry=mscRtgDpnCallServerModuleRidsEntry, mscRtgDpnArtErrRidDelayErrPathValue=mscRtgDpnArtErrRidDelayErrPathValue, mscRtgDpnControlPktTx=mscRtgDpnControlPktTx, mscRtgDpnRidDelayMetricTable=mscRtgDpnRidDelayMetricTable, mscRtgDpnFwdStatsEntry=mscRtgDpnFwdStatsEntry, mscRtgDpnRidFilterImportRidListTable=mscRtgDpnRidFilterImportRidListTable, dpnRoutingCapabilitiesCA02=dpnRoutingCapabilitiesCA02, mscRtgDpnArtErrMidTputErrPathTable=mscRtgDpnArtErrMidTputErrPathTable, mscRtgDpnArtComponentName=mscRtgDpnArtComponentName, mscRtgDpnRidDelayNextHopLinkGroupsEntry=mscRtgDpnRidDelayNextHopLinkGroupsEntry, mscRtgDpnMidDelayPathTrafficProportionsIndex=mscRtgDpnMidDelayPathTrafficProportionsIndex, mscRtgDpnRidTputNextHopLinkGroupsValue=mscRtgDpnRidTputNextHopLinkGroupsValue, mscRtgDpnMidDelayNextHopLinkGroupsIndex=mscRtgDpnMidDelayNextHopLinkGroupsIndex, mscRtgDpnArtErrRidTputErrPathEntry=mscRtgDpnArtErrRidTputErrPathEntry, mscRtgDpnCsTputPathTrafficProportionsTable=mscRtgDpnCsTputPathTrafficProportionsTable, mscRtgDpnMidTputPathTrafficProportionsTable=mscRtgDpnMidTputPathTrafficProportionsTable, mscRtgDpnLpStatsStorageType=mscRtgDpnLpStatsStorageType, mscRtgDpnRoutingId=mscRtgDpnRoutingId, mscRtgDpnArtErrRidDelayErrPathEntry=mscRtgDpnArtErrRidDelayErrPathEntry, mscRtgDpnLgStorageType=mscRtgDpnLgStorageType, mscRtgDpnArt=mscRtgDpnArt, mscRtgDpnArtErrMid=mscRtgDpnArtErrMid, mscRtgDpnArtErrRidTputErrPathValue=mscRtgDpnArtErrRidTputErrPathValue, mscRtgDpnArtIndex=mscRtgDpnArtIndex, mscRtgDpnControlBytesTx=mscRtgDpnControlBytesTx, mscRtgDpnDelayMetricCutOff=mscRtgDpnDelayMetricCutOff, mscRtgDpnMidRowStatusEntry=mscRtgDpnMidRowStatusEntry, mscRtgDpnCsIndex=mscRtgDpnCsIndex, mscRtgDpnCsComponentName=mscRtgDpnCsComponentName, mscRtgDpnLgRowStatusTable=mscRtgDpnLgRowStatusTable, mscRtgDpnThroughputMetricCutOff=mscRtgDpnThroughputMetricCutOff, mscRtgDpnLgComponentName=mscRtgDpnLgComponentName, mscRtgDpnLpStatsComponentName=mscRtgDpnLpStatsComponentName, mscRtgDpnTotalPackets=mscRtgDpnTotalPackets, mscRtgDpnRidFilterExportRidListEntry=mscRtgDpnRidFilterExportRidListEntry, mscRtgDpnArtErrRidRowStatusTable=mscRtgDpnArtErrRidRowStatusTable, mscRtgDpnRidFilterImportRidListValue=mscRtgDpnRidFilterImportRidListValue, mscRtgDpnMidStorageType=mscRtgDpnMidStorageType, mscRtgDpnMidOperEntry=mscRtgDpnMidOperEntry, mscRtgDpnRidRowStatusTable=mscRtgDpnRidRowStatusTable, mscRtgDpnCsTputMetricIndex=mscRtgDpnCsTputMetricIndex, mscRtgDpnIndex=mscRtgDpnIndex, mscRtgDpnSubnetMidsTable=mscRtgDpnSubnetMidsTable, mscRtgDpnMidDelayMetricValue=mscRtgDpnMidDelayMetricValue, mscRtgDpnLgTputMetric=mscRtgDpnLgTputMetric, mscRtgDpnArtErrMidTputErrPathEntry=mscRtgDpnArtErrMidTputErrPathEntry, mscRtgDpnRidMidComponentName=mscRtgDpnRidMidComponentName, mscRtgDpnCsDelayMetricEntry=mscRtgDpnCsDelayMetricEntry, mscRtgDpnCsTputPathTrafficProportionsValue=mscRtgDpnCsTputPathTrafficProportionsValue, mscRtgDpnArtErrMidDelayErrPathEntry=mscRtgDpnArtErrMidDelayErrPathEntry, mscRtgDpnCsRowStatusEntry=mscRtgDpnCsRowStatusEntry, mscRtgDpnVarianceValue=mscRtgDpnVarianceValue, mscRtgDpnMidTputMetricTable=mscRtgDpnMidTputMetricTable, mscRtgDpnCsDelayNextHopLinkGroupsIndex=mscRtgDpnCsDelayNextHopLinkGroupsIndex, mscRtgDpnLg=mscRtgDpnLg, mscRtgDpnMidTputMetricIndex=mscRtgDpnMidTputMetricIndex, mscRtgDpnControlPktRx=mscRtgDpnControlPktRx, mscRtgDpnRidDelayPathTrafficProportionsTable=mscRtgDpnRidDelayPathTrafficProportionsTable, mscRtgDpnRidStorageType=mscRtgDpnRidStorageType, mscRtgDpnMidDelayNextHopLinkGroupsValue=mscRtgDpnMidDelayNextHopLinkGroupsValue, mscRtgDpnArtErrRidOperEntry=mscRtgDpnArtErrRidOperEntry, mscRtgDpnLgDelayMetric=mscRtgDpnLgDelayMetric, mscRtgDpnThroughputPackets=mscRtgDpnThroughputPackets, mscRtgDpnMidDelayMetricIndex=mscRtgDpnMidDelayMetricIndex, mscRtgDpnCs=mscRtgDpnCs, mscRtgDpnRidMidRowStatusTable=mscRtgDpnRidMidRowStatusTable, mscRtgDpnArtErrRidStorageType=mscRtgDpnArtErrRidStorageType, mscRtgDpnArtErrRidThroughputCosErrType=mscRtgDpnArtErrRidThroughputCosErrType, mscRtgDpnRidFilterIndex=mscRtgDpnRidFilterIndex, mscRtgDpnModuleId=mscRtgDpnModuleId, mscRtgDpnRidDelayPathTrafficProportionsValue=mscRtgDpnRidDelayPathTrafficProportionsValue, mscRtgDpnRidDelayMetricEntry=mscRtgDpnRidDelayMetricEntry, mscRtgDpnMidTputNextHopLinkGroupsTable=mscRtgDpnMidTputNextHopLinkGroupsTable, mscRtgDpnArtProvTable=mscRtgDpnArtProvTable, mscRtgDpnArtErrRidDelayCosErrType=mscRtgDpnArtErrRidDelayCosErrType, mscRtgDpnArtErrMidRowStatusEntry=mscRtgDpnArtErrMidRowStatusEntry, mscRtgDpnRidDelayMetricValue=mscRtgDpnRidDelayMetricValue, mscRtgDpnCsDelayPathTrafficProportionsValue=mscRtgDpnCsDelayPathTrafficProportionsValue, mscRtgDpnDiscardNoRoute=mscRtgDpnDiscardNoRoute, mscRtgDpnLpStatsIndex=mscRtgDpnLpStatsIndex, mscRtgDpnRidFilterRowStatus=mscRtgDpnRidFilterRowStatus, mscRtgDpnArtNumOfTimeoutDests=mscRtgDpnArtNumOfTimeoutDests, mscRtgDpnArtRowStatus=mscRtgDpnArtRowStatus, dpnRoutingGroupCA02A=dpnRoutingGroupCA02A, mscRtgDpnDelayPackets=mscRtgDpnDelayPackets, mscRtgDpnVarianceTable=mscRtgDpnVarianceTable, mscRtgDpnDelayMetricRangeBoundary=mscRtgDpnDelayMetricRangeBoundary, mscRtgDpnRidFilterRowStatusEntry=mscRtgDpnRidFilterRowStatusEntry, dpnRoutingGroupCA=dpnRoutingGroupCA, mscRtgDpnCsRowStatus=mscRtgDpnCsRowStatus, mscRtgDpnArtErrMidIndex=mscRtgDpnArtErrMidIndex, mscRtgDpnStorageType=mscRtgDpnStorageType, mscRtgDpnLgIndex=mscRtgDpnLgIndex, mscRtgDpnArtErrMidTputErrPathValue=mscRtgDpnArtErrMidTputErrPathValue, mscRtgDpnArtRowStatusTable=mscRtgDpnArtRowStatusTable, mscRtgDpnCsDelayNextHopLinkGroupsValue=mscRtgDpnCsDelayNextHopLinkGroupsValue, mscRtgDpnCsTputNextHopLinkGroupsTable=mscRtgDpnCsTputNextHopLinkGroupsTable, mscRtgDpnMidTputPathTrafficProportionsValue=mscRtgDpnMidTputPathTrafficProportionsValue, mscRtgDpnCsRowStatusTable=mscRtgDpnCsRowStatusTable, mscRtgDpnLogicalNetworkNumber=mscRtgDpnLogicalNetworkNumber, mscRtgDpnArtErrRidRowStatusEntry=mscRtgDpnArtErrRidRowStatusEntry, mscRtgDpnCsTputNextHopLinkGroupsValue=mscRtgDpnCsTputNextHopLinkGroupsValue, dpnRoutingMIB=dpnRoutingMIB, mscRtgDpnRowStatusEntry=mscRtgDpnRowStatusEntry, mscRtgDpnLpStatsFwdStatsEntry=mscRtgDpnLpStatsFwdStatsEntry, mscRtgDpnRidFilter=mscRtgDpnRidFilter, mscRtgDpnRidTputPathTrafficProportionsEntry=mscRtgDpnRidTputPathTrafficProportionsEntry, mscRtgDpnLgOperEntry=mscRtgDpnLgOperEntry, mscRtgDpnLpStatsRowStatus=mscRtgDpnLpStatsRowStatus, mscRtgDpnCsDelayNextHopLinkGroupsEntry=mscRtgDpnCsDelayNextHopLinkGroupsEntry, mscRtgDpnArtErrRidTputErrPathTable=mscRtgDpnArtErrRidTputErrPathTable, mscRtgDpnRidTputNextHopLinkGroupsEntry=mscRtgDpnRidTputNextHopLinkGroupsEntry, mscRtgDpnArtTestInterval=mscRtgDpnArtTestInterval, mscRtgDpnMidIndex=mscRtgDpnMidIndex, mscRtgDpnArtErrMidRowStatusTable=mscRtgDpnArtErrMidRowStatusTable, mscRtgDpnRowStatus=mscRtgDpnRowStatus, mscRtgDpnMidTputMetricEntry=mscRtgDpnMidTputMetricEntry, dpnRoutingCapabilities=dpnRoutingCapabilities, mscRtgDpnLpStatsNormalReliabilityPackets=mscRtgDpnLpStatsNormalReliabilityPackets, mscRtgDpnArtErrRidDelayErrPathTable=mscRtgDpnArtErrRidDelayErrPathTable, mscRtgDpnLpStatsInterruptingPackets=mscRtgDpnLpStatsInterruptingPackets, mscRtgDpnRidDelayNextHopLinkGroupsIndex=mscRtgDpnRidDelayNextHopLinkGroupsIndex, mscRtgDpnMidRowStatusTable=mscRtgDpnMidRowStatusTable, mscRtgDpnRidMidStorageType=mscRtgDpnRidMidStorageType, mscRtgDpnLgRowStatus=mscRtgDpnLgRowStatus, mscRtgDpnRidComponentName=mscRtgDpnRidComponentName, mscRtgDpnMid=mscRtgDpnMid, mscRtgDpnCsDelayNextHopLinkGroupsTable=mscRtgDpnCsDelayNextHopLinkGroupsTable, mscRtgDpnVarianceMetricRangeIndex=mscRtgDpnVarianceMetricRangeIndex, mscRtgDpnRidRowStatus=mscRtgDpnRidRowStatus, mscRtgDpnArtErrMidDelayErrPathTable=mscRtgDpnArtErrMidDelayErrPathTable, mscRtgDpnRidDpnDelayMetric=mscRtgDpnRidDpnDelayMetric, mscRtgDpnCsTputNextHopLinkGroupsEntry=mscRtgDpnCsTputNextHopLinkGroupsEntry, mscRtgDpnRowStatusTable=mscRtgDpnRowStatusTable, mscRtgDpnLpStatsThroughputPackets=mscRtgDpnLpStatsThroughputPackets, mscRtgDpnRidTputNextHopLinkGroupsTable=mscRtgDpnRidTputNextHopLinkGroupsTable, mscRtgDpnLpStats=mscRtgDpnLpStats, mscRtgDpnArtErrMidComponentName=mscRtgDpnArtErrMidComponentName, mscRtgDpnMidDelayNextHopLinkGroupsEntry=mscRtgDpnMidDelayNextHopLinkGroupsEntry, mscRtgDpnRidMid=mscRtgDpnRidMid, mscRtgDpnArtErrMidStorageType=mscRtgDpnArtErrMidStorageType, mscRtgDpnRidDelayNextHopLinkGroupsTable=mscRtgDpnRidDelayNextHopLinkGroupsTable, mscRtgDpnLpStatsDiscardNoRoute=mscRtgDpnLpStatsDiscardNoRoute, mscRtgDpnMidTputNextHopLinkGroupsValue=mscRtgDpnMidTputNextHopLinkGroupsValue, mscRtgDpnRidDelayPathTrafficProportionsEntry=mscRtgDpnRidDelayPathTrafficProportionsEntry, mscRtgDpnCsDelayPathTrafficProportionsEntry=mscRtgDpnCsDelayPathTrafficProportionsEntry, mscRtgDpnFwdStatsTable=mscRtgDpnFwdStatsTable, mscRtgDpnLgOperTable=mscRtgDpnLgOperTable, mscRtgDpnControlBytesRx=mscRtgDpnControlBytesRx, mscRtgDpnMidTputPathTrafficProportionsIndex=mscRtgDpnMidTputPathTrafficProportionsIndex, mscRtgDpnProvTable=mscRtgDpnProvTable, mscRtgDpnConStatsTable=mscRtgDpnConStatsTable, mscRtgDpnRidTputNextHopLinkGroupsIndex=mscRtgDpnRidTputNextHopLinkGroupsIndex, mscRtgDpnRidFilterExportRidListRowStatus=mscRtgDpnRidFilterExportRidListRowStatus, mscRtgDpnCsTputPathTrafficProportionsEntry=mscRtgDpnCsTputPathTrafficProportionsEntry, mscRtgDpnRidDelayNextHopLinkGroupsValue=mscRtgDpnRidDelayNextHopLinkGroupsValue, mscRtgDpnRidTputMetricTable=mscRtgDpnRidTputMetricTable, dpnRoutingCapabilitiesCA02A=dpnRoutingCapabilitiesCA02A, mscRtgDpnCsDelayMetricTable=mscRtgDpnCsDelayMetricTable, mscRtgDpnVarianceEntry=mscRtgDpnVarianceEntry, mscRtgDpnCsDelayMetricValue=mscRtgDpnCsDelayMetricValue, mscRtgDpnInterruptingPackets=mscRtgDpnInterruptingPackets, mscRtgDpnArtErrRidOperTable=mscRtgDpnArtErrRidOperTable, mscRtgDpnRidIndex=mscRtgDpnRidIndex, mscRtgDpnRidTputMetricIndex=mscRtgDpnRidTputMetricIndex, mscRtgDpnArtOperTable=mscRtgDpnArtOperTable, mscRtgDpnNormalReliabilityPackets=mscRtgDpnNormalReliabilityPackets, dpnRoutingGroup=dpnRoutingGroup, mscRtgDpnSubnetMidsEntry=mscRtgDpnSubnetMidsEntry, mscRtgDpnRidDpnTputMetric=mscRtgDpnRidDpnTputMetric, mscRtgDpnRidFilterExportRidListTable=mscRtgDpnRidFilterExportRidListTable, mscRtgDpnArtErrRidComponentName=mscRtgDpnArtErrRidComponentName, mscRtgDpnCallServerModuleRidsTable=mscRtgDpnCallServerModuleRidsTable, mscRtgDpnArtErrMidRowStatus=mscRtgDpnArtErrMidRowStatus, mscRtgDpnOutOfSequencePkt=mscRtgDpnOutOfSequencePkt, mscRtgDpnProvEntry=mscRtgDpnProvEntry, mscRtgDpnMidDelayMetricEntry=mscRtgDpnMidDelayMetricEntry, mscRtgDpnTputMetricRangeBoundary=mscRtgDpnTputMetricRangeBoundary, mscRtgDpnArtProvEntry=mscRtgDpnArtProvEntry, mscRtgDpnRidFilterImportRidListEntry=mscRtgDpnRidFilterImportRidListEntry, mscRtgDpnRidFilterComponentName=mscRtgDpnRidFilterComponentName, mscRtgDpnCsTputNextHopLinkGroupsIndex=mscRtgDpnCsTputNextHopLinkGroupsIndex, mscRtgDpnRidMidIndex=mscRtgDpnRidMidIndex, mscRtgDpnRidTputPathTrafficProportionsIndex=mscRtgDpnRidTputPathTrafficProportionsIndex, mscRtgDpnRidDelayPathTrafficProportionsIndex=mscRtgDpnRidDelayPathTrafficProportionsIndex, mscRtgDpnCsDelayMetricIndex=mscRtgDpnCsDelayMetricIndex, mscRtgDpnLpStatsHighReliabilityPackets=mscRtgDpnLpStatsHighReliabilityPackets, mscRtgDpnMidSubstituteRid=mscRtgDpnMidSubstituteRid, mscRtgDpnVarianceCosIndex=mscRtgDpnVarianceCosIndex, mscRtgDpnLpStatsDiscardLpCongested=mscRtgDpnLpStatsDiscardLpCongested, mscRtgDpnHighReliabilityPackets=mscRtgDpnHighReliabilityPackets, mscRtgDpnRidMidRowStatusEntry=mscRtgDpnRidMidRowStatusEntry, mscRtgDpnRidOperEntry=mscRtgDpnRidOperEntry, mscRtgDpnMidDelayPathTrafficProportionsValue=mscRtgDpnMidDelayPathTrafficProportionsValue, mscRtgDpnRidTputPathTrafficProportionsValue=mscRtgDpnRidTputPathTrafficProportionsValue, mscRtgDpnLgFarEndMid=mscRtgDpnLgFarEndMid, mscRtgDpn=mscRtgDpn, mscRtgDpnLpStatsDelayPackets=mscRtgDpnLpStatsDelayPackets, mscRtgDpnRidFilterStorageType=mscRtgDpnRidFilterStorageType, mscRtgDpnRidTputPathTrafficProportionsTable=mscRtgDpnRidTputPathTrafficProportionsTable, dpnRoutingGroupCA02=dpnRoutingGroupCA02)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-DpnRoutingMIB", mscRtgDpnSubnetMidsValue=mscRtgDpnSubnetMidsValue, mscRtgDpnRidDelayMetricIndex=mscRtgDpnRidDelayMetricIndex)
