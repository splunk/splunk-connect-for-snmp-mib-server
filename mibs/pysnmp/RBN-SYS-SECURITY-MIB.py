#
# PySNMP MIB module RBN-SYS-SECURITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBN-SYS-SECURITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:44:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
rbnModules, = mibBuilder.importSymbols("RBN-SMI", "rbnModules")
RbnUnsigned64, = mibBuilder.importSymbols("RBN-TC", "RbnUnsigned64")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibIdentifier, NotificationType, Counter64, ModuleIdentity, Unsigned32, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, IpAddress, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "NotificationType", "Counter64", "ModuleIdentity", "Unsigned32", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "IpAddress", "Integer32", "Counter32")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
rbnSysSecurityMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2352, 5, 54))
rbnSysSecurityMib.setRevisions(('2009-11-09 18:00',))
if mibBuilder.loadTexts: rbnSysSecurityMib.setLastUpdated('200911091800Z')
if mibBuilder.loadTexts: rbnSysSecurityMib.setOrganization('Ericsson Inc.')
rbnSysSecNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 0))
rbnSysSecObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1))
rbnSysSecConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 2))
rbnSysSecThresholdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 1))
rbnSysSecNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 1, 1), Bits().clone(namedValues=NamedValues(("maliciousPkt", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rbnSysSecNotifyEnable.setStatus('current')
rbnMeasurementInterval = MibScalar((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rbnMeasurementInterval.setStatus('current')
rbnMaliciousPktsThresholdHi = MibScalar((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 1, 3), RbnUnsigned64()).setUnits('Packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rbnMaliciousPktsThresholdHi.setStatus('current')
rbnMaliciousPktsThresholdLow = MibScalar((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 1, 4), RbnUnsigned64()).setUnits('Packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rbnMaliciousPktsThresholdLow.setStatus('current')
rbnSysSecStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 2))
rbnMaliciousPktsCounter = MibScalar((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 2, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnMaliciousPktsCounter.setStatus('current')
rbnMaliciousPktsDelta = MibScalar((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 2, 2), CounterBasedGauge64()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbnMaliciousPktsDelta.setStatus('current')
rbnSysSecNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 4))
rbnThresholdNotifyTime = MibScalar((1, 3, 6, 1, 4, 1, 2352, 5, 54, 1, 4, 1), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rbnThresholdNotifyTime.setStatus('current')
rbnMaliciousPktThresholdHiExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2352, 5, 54, 0, 1))
if mibBuilder.loadTexts: rbnMaliciousPktThresholdHiExceeded.setStatus('current')
rbnMaliciousPktThresholdLowExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2352, 5, 54, 0, 2)).setObjects(("RBN-SYS-SECURITY-MIB", "rbnThresholdNotifyTime"))
if mibBuilder.loadTexts: rbnMaliciousPktThresholdLowExceeded.setStatus('current')
rbnSysSecCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 2, 1))
rbnSysSecGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 5, 54, 2, 2))
rbnMaliciousPktGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 5, 54, 2, 2, 1)).setObjects(("RBN-SYS-SECURITY-MIB", "rbnSysSecNotifyEnable"), ("RBN-SYS-SECURITY-MIB", "rbnMeasurementInterval"), ("RBN-SYS-SECURITY-MIB", "rbnMaliciousPktsThresholdHi"), ("RBN-SYS-SECURITY-MIB", "rbnMaliciousPktsThresholdLow"), ("RBN-SYS-SECURITY-MIB", "rbnMaliciousPktsCounter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnMaliciousPktGroup = rbnMaliciousPktGroup.setStatus('current')
rbnSysSecNotifyObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 5, 54, 2, 2, 4)).setObjects(("RBN-SYS-SECURITY-MIB", "rbnMaliciousPktsDelta"), ("RBN-SYS-SECURITY-MIB", "rbnThresholdNotifyTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnSysSecNotifyObjectsGroup = rbnSysSecNotifyObjectsGroup.setStatus('current')
rbnSysSecNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2352, 5, 54, 2, 2, 5)).setObjects(("RBN-SYS-SECURITY-MIB", "rbnMaliciousPktThresholdHiExceeded"), ("RBN-SYS-SECURITY-MIB", "rbnMaliciousPktThresholdLowExceeded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnSysSecNotificationGroup = rbnSysSecNotificationGroup.setStatus('current')
rbnSysSecCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 5, 54, 2, 1, 1)).setObjects(("RBN-SYS-SECURITY-MIB", "rbnMaliciousPktGroup"), ("RBN-SYS-SECURITY-MIB", "rbnSysSecNotifyObjectsGroup"), ("RBN-SYS-SECURITY-MIB", "rbnSysSecNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnSysSecCompliance = rbnSysSecCompliance.setStatus('current')
mibBuilder.exportSymbols("RBN-SYS-SECURITY-MIB", rbnMaliciousPktsCounter=rbnMaliciousPktsCounter, rbnMaliciousPktThresholdHiExceeded=rbnMaliciousPktThresholdHiExceeded, rbnMaliciousPktsThresholdHi=rbnMaliciousPktsThresholdHi, rbnSysSecGroups=rbnSysSecGroups, rbnSysSecNotifyObjects=rbnSysSecNotifyObjects, PYSNMP_MODULE_ID=rbnSysSecurityMib, rbnSysSecNotifications=rbnSysSecNotifications, rbnMaliciousPktsThresholdLow=rbnMaliciousPktsThresholdLow, rbnSysSecCompliances=rbnSysSecCompliances, rbnMaliciousPktsDelta=rbnMaliciousPktsDelta, rbnMaliciousPktGroup=rbnMaliciousPktGroup, rbnSysSecThresholdObjects=rbnSysSecThresholdObjects, rbnSysSecNotificationGroup=rbnSysSecNotificationGroup, rbnMeasurementInterval=rbnMeasurementInterval, rbnThresholdNotifyTime=rbnThresholdNotifyTime, rbnSysSecConformance=rbnSysSecConformance, rbnSysSecNotifyEnable=rbnSysSecNotifyEnable, rbnSysSecObjects=rbnSysSecObjects, rbnMaliciousPktThresholdLowExceeded=rbnMaliciousPktThresholdLowExceeded, rbnSysSecStatsObjects=rbnSysSecStatsObjects, rbnSysSecurityMib=rbnSysSecurityMib, rbnSysSecCompliance=rbnSysSecCompliance, rbnSysSecNotifyObjectsGroup=rbnSysSecNotifyObjectsGroup)
