#
# PySNMP MIB module CLAB-ANI-DEV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CLAB-ANI-DEV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:08:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
clabCommonMibs, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabCommonMibs")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Bits, IpAddress, Counter32, Unsigned32, ModuleIdentity, MibIdentifier, NotificationType, Counter64, ObjectIdentity, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Bits", "IpAddress", "Counter32", "Unsigned32", "ModuleIdentity", "MibIdentifier", "NotificationType", "Counter64", "ObjectIdentity", "iso", "Integer32")
TextualConvention, TruthValue, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DateAndTime", "DisplayString")
clabAniDevMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 4, 7))
clabAniDevMib.setRevisions(('2017-04-27 00:00', '2017-02-21 00:00', '2016-05-19 00:00', '2016-03-17 00:00',))
if mibBuilder.loadTexts: clabAniDevMib.setLastUpdated('201704270000Z')
if mibBuilder.loadTexts: clabAniDevMib.setOrganization('Cable Television Laboratories, Inc.')
clabAniDevObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1))
aniDevResetNow = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevResetNow.setStatus('current')
clabAniDevSysLoggingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2))
aniDevLoggingCtrlReset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("resetLog", 1), ("pauseLog", 2), ("startLog", 3), ("useDefaultReporting", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevLoggingCtrlReset.setStatus('current')
aniDevSysLoggingSize = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 2), Unsigned32()).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevSysLoggingSize.setStatus('current')
aniDevSysLoggingLevelCtrl = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("all", 1), ("trace", 2), ("debug", 3), ("info", 4), ("warn", 5), ("error", 6), ("fatal", 7), ("off", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevSysLoggingLevelCtrl.setStatus('current')
aniDevSysLoggingGroupCtrl = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 4), Bits().clone(namedValues=NamedValues(("none", 0), ("all", 1), ("group1", 2), ("group2", 3), ("group3", 4), ("group4", 5), ("group5", 6))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevSysLoggingGroupCtrl.setStatus('current')
aniDevSysLoggingEventTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 5), )
if mibBuilder.loadTexts: aniDevSysLoggingEventTable.setStatus('current')
aniDevSysLoggingEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 5, 1), ).setIndexNames((0, "CLAB-ANI-DEV-MIB", "aniDevSysLoggingEventIndex"))
if mibBuilder.loadTexts: aniDevSysLoggingEventEntry.setStatus('current')
aniDevSysLoggingEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: aniDevSysLoggingEventIndex.setStatus('current')
aniDevSysLoggingEventTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 5, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSysLoggingEventTimeStamp.setStatus('current')
aniDevSysLoggingEventMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 7, 1, 2, 5, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSysLoggingEventMessage.setStatus('current')
clabAniDevConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 7, 2))
clabAniDevCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 7, 2, 1))
clabAniDevGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 7, 2, 2))
clabAniDevCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 4, 7, 2, 1, 1)).setObjects(("CLAB-ANI-DEV-MIB", "clabAniDevGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clabAniDevCompliance = clabAniDevCompliance.setStatus('current')
clabAniDevGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 4, 7, 2, 2, 1)).setObjects(("CLAB-ANI-DEV-MIB", "aniDevResetNow"), ("CLAB-ANI-DEV-MIB", "aniDevLoggingCtrlReset"), ("CLAB-ANI-DEV-MIB", "aniDevSysLoggingSize"), ("CLAB-ANI-DEV-MIB", "aniDevSysLoggingLevelCtrl"), ("CLAB-ANI-DEV-MIB", "aniDevSysLoggingGroupCtrl"), ("CLAB-ANI-DEV-MIB", "aniDevSysLoggingEventTimeStamp"), ("CLAB-ANI-DEV-MIB", "aniDevSysLoggingEventMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clabAniDevGroup = clabAniDevGroup.setStatus('current')
mibBuilder.exportSymbols("CLAB-ANI-DEV-MIB", clabAniDevConformance=clabAniDevConformance, aniDevSysLoggingGroupCtrl=aniDevSysLoggingGroupCtrl, clabAniDevGroups=clabAniDevGroups, aniDevSysLoggingLevelCtrl=aniDevSysLoggingLevelCtrl, aniDevResetNow=aniDevResetNow, aniDevSysLoggingSize=aniDevSysLoggingSize, clabAniDevGroup=clabAniDevGroup, aniDevSysLoggingEventIndex=aniDevSysLoggingEventIndex, aniDevSysLoggingEventMessage=aniDevSysLoggingEventMessage, clabAniDevCompliances=clabAniDevCompliances, aniDevSysLoggingEventTable=aniDevSysLoggingEventTable, clabAniDevSysLoggingObjects=clabAniDevSysLoggingObjects, PYSNMP_MODULE_ID=clabAniDevMib, aniDevSysLoggingEventEntry=aniDevSysLoggingEventEntry, clabAniDevObjects=clabAniDevObjects, clabAniDevMib=clabAniDevMib, aniDevLoggingCtrlReset=aniDevLoggingCtrlReset, aniDevSysLoggingEventTimeStamp=aniDevSysLoggingEventTimeStamp, clabAniDevCompliance=clabAniDevCompliance)
