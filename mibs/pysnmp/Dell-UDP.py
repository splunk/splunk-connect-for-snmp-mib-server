#
# PySNMP MIB module Dell-UDP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Dell-UDP
# Produced by pysmi-0.3.4 at Mon Apr 29 18:42:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
rnd, = mibBuilder.importSymbols("Dell-MIB", "rnd")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ipCidrRouteEntry, ipCidrRouteMask, ipCidrRouteNextHop, ipCidrRouteDest, ipCidrRouteTos = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteEntry", "ipCidrRouteMask", "ipCidrRouteNextHop", "ipCidrRouteDest", "ipCidrRouteTos")
ipAddrEntry, = mibBuilder.importSymbols("IP-MIB", "ipAddrEntry")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, NotificationType, Gauge32, ObjectIdentity, Counter64, IpAddress, TimeTicks, Bits, ModuleIdentity, Counter32, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "NotificationType", "Gauge32", "ObjectIdentity", "Counter64", "IpAddress", "TimeTicks", "Bits", "ModuleIdentity", "Counter32", "MibIdentifier", "Integer32")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
rsUDP = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 42))
rsUDP.setRevisions(('2004-06-01 00:00',))
if mibBuilder.loadTexts: rsUDP.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rsUDP.setOrganization('Dell')
rsUdpRelayTable = MibTable((1, 3, 6, 1, 4, 1, 89, 42, 1), )
if mibBuilder.loadTexts: rsUdpRelayTable.setStatus('current')
rsUdpRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 42, 1, 1), ).setIndexNames((0, "Dell-UDP", "rsUdpRelayDstPort"), (0, "Dell-UDP", "rsUdpRelaySrcIpInf"), (0, "Dell-UDP", "rsUdpRelayDstIpAddr"))
if mibBuilder.loadTexts: rsUdpRelayEntry.setStatus('current')
rsUdpRelayDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstPort.setStatus('current')
rsUdpRelaySrcIpInf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelaySrcIpInf.setStatus('current')
rsUdpRelayDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstIpAddr.setStatus('current')
rsUdpRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayStatus.setStatus('current')
rsUdpRelayUserInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayUserInfo.setStatus('current')
rsUdpRelayMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 42, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayMibVersion.setStatus('current')
rlUdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 89, 42, 3), )
if mibBuilder.loadTexts: rlUdpSessionTable.setStatus('current')
rlUdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 42, 3, 1), ).setIndexNames((0, "Dell-UDP", "rlUdpSessionLocalAddrType"), (0, "Dell-UDP", "rlUdpSessionLocalAddr"), (0, "Dell-UDP", "rlUdpSessionLocalPort"), (0, "Dell-UDP", "rlUdpSessionAppInst"))
if mibBuilder.loadTexts: rlUdpSessionEntry.setStatus('current')
rlUdpSessionLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: rlUdpSessionLocalAddrType.setStatus('current')
rlUdpSessionLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: rlUdpSessionLocalAddr.setStatus('current')
rlUdpSessionLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 3, 1, 3), Integer32())
if mibBuilder.loadTexts: rlUdpSessionLocalPort.setStatus('current')
rlUdpSessionAppInst = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: rlUdpSessionAppInst.setStatus('current')
rlUdpSessionAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlUdpSessionAppName.setStatus('current')
mibBuilder.exportSymbols("Dell-UDP", rsUdpRelayDstIpAddr=rsUdpRelayDstIpAddr, PYSNMP_MODULE_ID=rsUDP, rlUdpSessionEntry=rlUdpSessionEntry, rlUdpSessionLocalPort=rlUdpSessionLocalPort, rsUdpRelayMibVersion=rsUdpRelayMibVersion, rsUDP=rsUDP, rsUdpRelaySrcIpInf=rsUdpRelaySrcIpInf, rlUdpSessionAppInst=rlUdpSessionAppInst, rsUdpRelayUserInfo=rsUdpRelayUserInfo, rlUdpSessionLocalAddrType=rlUdpSessionLocalAddrType, rsUdpRelayTable=rsUdpRelayTable, rlUdpSessionLocalAddr=rlUdpSessionLocalAddr, rsUdpRelayDstPort=rsUdpRelayDstPort, rlUdpSessionAppName=rlUdpSessionAppName, rsUdpRelayStatus=rsUdpRelayStatus, rlUdpSessionTable=rlUdpSessionTable, rsUdpRelayEntry=rsUdpRelayEntry)
