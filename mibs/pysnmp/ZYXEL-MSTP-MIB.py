#
# PySNMP MIB module ZYXEL-MSTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-MSTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:44:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
Timeout, BridgeId, dot1dBasePort = mibBuilder.importSymbols("BRIDGE-MIB", "Timeout", "BridgeId", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, iso, Bits, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, Counter64, Gauge32, ModuleIdentity, Counter32, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Bits", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "Counter64", "Gauge32", "ModuleIdentity", "Counter32", "NotificationType", "TimeTicks")
DisplayString, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelMstp = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53))
if mibBuilder.loadTexts: zyxelMstp.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelMstp.setOrganization('Enterprise Solution ZyXEL')
zyxelMstpSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1))
zyxelMstpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2))
zyxelMstpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 3))
class MstiOrCistInstanceIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 16)

zyxelMstpGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1))
zyMstpGeneralState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpGeneralState.setStatus('current')
zyMstpGeneralConfigIdName = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpGeneralConfigIdName.setStatus('current')
zyMstpGeneralConfigIdRevisionLevel = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpGeneralConfigIdRevisionLevel.setStatus('current')
zyMstpGeneralHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1, 4), Timeout().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpGeneralHelloTime.setStatus('current')
zyMstpGeneralMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1, 5), Timeout().subtype(subtypeSpec=ValueRangeConstraint(6, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpGeneralMaxAge.setStatus('current')
zyMstpGeneralForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1, 6), Timeout().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpGeneralForwardDelay.setStatus('current')
zyMstpGeneralMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpGeneralMaxHops.setStatus('current')
zyMstpVlanMapMaxNumberOfInstances = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpVlanMapMaxNumberOfInstances.setStatus('current')
zyxelMstpVlanMapTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3), )
if mibBuilder.loadTexts: zyxelMstpVlanMapTable.setStatus('current')
zyxelMstpVlanMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3, 1), ).setIndexNames((0, "ZYXEL-MSTP-MIB", "zyMstpVlanMapInstance"))
if mibBuilder.loadTexts: zyxelMstpVlanMapEntry.setStatus('current')
zyMstpVlanMapInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3, 1, 1), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: zyMstpVlanMapInstance.setStatus('current')
zyMstpVlanMapVlans1k = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpVlanMapVlans1k.setStatus('current')
zyMstpVlanMapVlans2k = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpVlanMapVlans2k.setStatus('current')
zyMstpVlanMapVlans3k = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpVlanMapVlans3k.setStatus('current')
zyMstpVlanMapVlans4k = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpVlanMapVlans4k.setStatus('current')
zyMstpVlanMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyMstpVlanMapRowStatus.setStatus('current')
zyxelMstpPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 4), )
if mibBuilder.loadTexts: zyxelMstpPortTable.setStatus('current')
zyxelMstpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 4, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMstpPortEntry.setStatus('current')
zyMstpPortAdminEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpPortAdminEdgePort.setStatus('current')
zyxelMstpInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 5), )
if mibBuilder.loadTexts: zyxelMstpInstanceTable.setStatus('current')
zyxelMstpInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 5, 1), ).setIndexNames((0, "ZYXEL-MSTP-MIB", "zyMstpInstanceId"))
if mibBuilder.loadTexts: zyxelMstpInstanceEntry.setStatus('current')
zyMstpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 5, 1, 1), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: zyMstpInstanceId.setStatus('current')
zyMstpInstanceBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpInstanceBridgePriority.setStatus('current')
zyxelMstpInstancePortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 6), )
if mibBuilder.loadTexts: zyxelMstpInstancePortTable.setStatus('current')
zyxelMstpInstancePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 6, 1), ).setIndexNames((0, "ZYXEL-MSTP-MIB", "zyMstpInstancePortInstanceId"), (0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMstpInstancePortEntry.setStatus('current')
zyMstpInstancePortInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 6, 1, 1), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: zyMstpInstancePortInstanceId.setStatus('current')
zyMstpInstancePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 6, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpInstancePortState.setStatus('current')
zyMstpInstancePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpInstancePortPriority.setStatus('current')
zyMstpInstancePortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpInstancePortPathCost.setStatus('current')
zyxelMstpInfoGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1))
zyMstpInfoGeneralConfigIdName = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoGeneralConfigIdName.setStatus('current')
zyMstpInfoGeneralConfigIdRevisionLevel = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoGeneralConfigIdRevisionLevel.setStatus('current')
zyMstpInfoGeneralConfigIdConfigDigest = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoGeneralConfigIdConfigDigest.setStatus('current')
zyMstpInfoGeneralHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 4), Timeout().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoGeneralHelloTime.setStatus('current')
zyMstpInfoGeneralMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 5), Timeout().subtype(subtypeSpec=ValueRangeConstraint(6, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoGeneralMaxAge.setStatus('current')
zyMstpInfoGeneralForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 6), Timeout().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMstpInfoGeneralForwardDelay.setStatus('current')
zyMstpInfoGeneralCistRootPathCost = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoGeneralCistRootPathCost.setStatus('current')
zyMstpInfoGeneralCistRootBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoGeneralCistRootBridgeId.setStatus('current')
zyxelMstpInfoVlanMapTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 2), )
if mibBuilder.loadTexts: zyxelMstpInfoVlanMapTable.setStatus('current')
zyxelMstpInfoVlanMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 2, 1), ).setIndexNames((0, "ZYXEL-MSTP-MIB", "zyMstpInfoVlanMapVid"))
if mibBuilder.loadTexts: zyxelMstpInfoVlanMapEntry.setStatus('current')
zyMstpInfoVlanMapVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: zyMstpInfoVlanMapVid.setStatus('current')
zyMstpInfoVlanMapInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 2, 1, 2), MstiOrCistInstanceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoVlanMapInstance.setStatus('current')
zyxelMstpInfoPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 3), )
if mibBuilder.loadTexts: zyxelMstpInfoPortTable.setStatus('current')
zyxelMstpInfoPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 3, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMstpInfoPortEntry.setStatus('current')
zyMstpInfoPortOperEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 3, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoPortOperEdgePort.setStatus('current')
zyMstpInfoPortOperPointToPointMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 3, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoPortOperPointToPointMAC.setStatus('current')
zyxelMstpInfoInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4), )
if mibBuilder.loadTexts: zyxelMstpInfoInstanceTable.setStatus('current')
zyxelMstpInfoInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4, 1), ).setIndexNames((0, "ZYXEL-MSTP-MIB", "zyMstpInfoInstanceId"))
if mibBuilder.loadTexts: zyxelMstpInfoInstanceEntry.setStatus('current')
zyMstpInfoInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4, 1, 1), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: zyMstpInfoInstanceId.setStatus('current')
zyMstpInfoInstanceBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4, 1, 2), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstanceBridgeId.setStatus('current')
zyMstpInfoInstanceInternalRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstanceInternalRootCost.setStatus('current')
zyMstpInfoInstanceRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstanceRootPort.setStatus('current')
zyMstpInfoInstanceTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstanceTimeSinceTopologyChange.setStatus('current')
zyMstpInfoInstanceTopologyChangesCount = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstanceTopologyChangesCount.setStatus('current')
zyxelMstpInfoInstancePortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5), )
if mibBuilder.loadTexts: zyxelMstpInfoInstancePortTable.setStatus('current')
zyxelMstpInfoInstancePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1), ).setIndexNames((0, "ZYXEL-MSTP-MIB", "zyMstpInfoInstancePortInstanceId"), (0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMstpInfoInstancePortEntry.setStatus('current')
zyMstpInfoInstancePortInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1, 1), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: zyMstpInfoInstancePortInstanceId.setStatus('current')
zyMstpInfoInstancePortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstancePortPathCost.setStatus('current')
zyMstpInfoInstancePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("discarding", 1), ("learning", 2), ("forwarding", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstancePortState.setStatus('current')
zyMstpInfoInstancePortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstancePortDesignatedRoot.setStatus('current')
zyMstpInfoInstancePortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstancePortDesignatedCost.setStatus('current')
zyMstpInfoInstancePortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstancePortDesignatedBridge.setStatus('current')
zyMstpInfoInstancePortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 2, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMstpInfoInstancePortDesignatedPort.setStatus('current')
zyMstpNewRoot = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 3, 1)).setObjects(("ZYXEL-MSTP-MIB", "zyMstpInstanceId"))
if mibBuilder.loadTexts: zyMstpNewRoot.setStatus('current')
zyMstpTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 53, 3, 2)).setObjects(("ZYXEL-MSTP-MIB", "zyMstpInstanceId"))
if mibBuilder.loadTexts: zyMstpTopologyChange.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-MSTP-MIB", PYSNMP_MODULE_ID=zyxelMstp, zyMstpVlanMapMaxNumberOfInstances=zyMstpVlanMapMaxNumberOfInstances, zyMstpInfoInstanceTopologyChangesCount=zyMstpInfoInstanceTopologyChangesCount, zyMstpPortAdminEdgePort=zyMstpPortAdminEdgePort, zyMstpInstancePortInstanceId=zyMstpInstancePortInstanceId, zyxelMstpVlanMapTable=zyxelMstpVlanMapTable, zyMstpVlanMapVlans1k=zyMstpVlanMapVlans1k, zyMstpVlanMapRowStatus=zyMstpVlanMapRowStatus, zyMstpInstanceId=zyMstpInstanceId, zyMstpInfoInstancePortState=zyMstpInfoInstancePortState, zyMstpInfoGeneralCistRootBridgeId=zyMstpInfoGeneralCistRootBridgeId, zyMstpGeneralState=zyMstpGeneralState, zyMstpInfoGeneralConfigIdConfigDigest=zyMstpInfoGeneralConfigIdConfigDigest, zyMstpInfoInstancePortDesignatedBridge=zyMstpInfoInstancePortDesignatedBridge, zyMstpInfoInstancePortInstanceId=zyMstpInfoInstancePortInstanceId, zyMstpInfoGeneralForwardDelay=zyMstpInfoGeneralForwardDelay, zyMstpInfoVlanMapVid=zyMstpInfoVlanMapVid, zyMstpInstancePortState=zyMstpInstancePortState, zyxelMstpGeneral=zyxelMstpGeneral, zyMstpInfoPortOperEdgePort=zyMstpInfoPortOperEdgePort, zyxelMstpInfoInstanceTable=zyxelMstpInfoInstanceTable, zyMstpGeneralMaxHops=zyMstpGeneralMaxHops, zyMstpTopologyChange=zyMstpTopologyChange, zyxelMstpVlanMapEntry=zyxelMstpVlanMapEntry, MstiOrCistInstanceIndex=MstiOrCistInstanceIndex, zyxelMstpInfoGeneral=zyxelMstpInfoGeneral, zyMstpVlanMapVlans4k=zyMstpVlanMapVlans4k, zyxelMstpInfoInstancePortEntry=zyxelMstpInfoInstancePortEntry, zyMstpInfoInstancePortDesignatedCost=zyMstpInfoInstancePortDesignatedCost, zyMstpInfoGeneralHelloTime=zyMstpInfoGeneralHelloTime, zyMstpVlanMapVlans2k=zyMstpVlanMapVlans2k, zyxelMstpInstanceEntry=zyxelMstpInstanceEntry, zyxelMstpInfoVlanMapTable=zyxelMstpInfoVlanMapTable, zyxelMstpSetup=zyxelMstpSetup, zyxelMstpNotifications=zyxelMstpNotifications, zyMstpInfoGeneralConfigIdRevisionLevel=zyMstpInfoGeneralConfigIdRevisionLevel, zyMstpInfoPortOperPointToPointMAC=zyMstpInfoPortOperPointToPointMAC, zyMstpInfoInstancePortDesignatedPort=zyMstpInfoInstancePortDesignatedPort, zyMstpGeneralMaxAge=zyMstpGeneralMaxAge, zyxelMstpInstancePortTable=zyxelMstpInstancePortTable, zyxelMstpInstancePortEntry=zyxelMstpInstancePortEntry, zyMstpInstancePortPriority=zyMstpInstancePortPriority, zyMstpGeneralConfigIdName=zyMstpGeneralConfigIdName, zyMstpVlanMapVlans3k=zyMstpVlanMapVlans3k, zyxelMstpStatus=zyxelMstpStatus, zyMstpInfoGeneralMaxAge=zyMstpInfoGeneralMaxAge, zyMstpInfoVlanMapInstance=zyMstpInfoVlanMapInstance, zyMstpInfoGeneralConfigIdName=zyMstpInfoGeneralConfigIdName, zyxelMstpInfoPortEntry=zyxelMstpInfoPortEntry, zyMstpInfoGeneralCistRootPathCost=zyMstpInfoGeneralCistRootPathCost, zyMstpInfoInstanceId=zyMstpInfoInstanceId, zyMstpGeneralForwardDelay=zyMstpGeneralForwardDelay, zyxelMstpInfoInstanceEntry=zyxelMstpInfoInstanceEntry, zyMstpGeneralHelloTime=zyMstpGeneralHelloTime, zyMstpInfoInstanceBridgeId=zyMstpInfoInstanceBridgeId, zyMstpInfoInstancePortDesignatedRoot=zyMstpInfoInstancePortDesignatedRoot, zyxelMstp=zyxelMstp, zyxelMstpInfoPortTable=zyxelMstpInfoPortTable, zyxelMstpPortTable=zyxelMstpPortTable, zyxelMstpInfoInstancePortTable=zyxelMstpInfoInstancePortTable, zyMstpInfoInstancePortPathCost=zyMstpInfoInstancePortPathCost, zyMstpGeneralConfigIdRevisionLevel=zyMstpGeneralConfigIdRevisionLevel, zyMstpNewRoot=zyMstpNewRoot, zyMstpInfoInstanceRootPort=zyMstpInfoInstanceRootPort, zyMstpVlanMapInstance=zyMstpVlanMapInstance, zyxelMstpInfoVlanMapEntry=zyxelMstpInfoVlanMapEntry, zyMstpInfoInstanceInternalRootCost=zyMstpInfoInstanceInternalRootCost, zyxelMstpPortEntry=zyxelMstpPortEntry, zyMstpInstancePortPathCost=zyMstpInstancePortPathCost, zyxelMstpInstanceTable=zyxelMstpInstanceTable, zyMstpInstanceBridgePriority=zyMstpInstanceBridgePriority, zyMstpInfoInstanceTimeSinceTopologyChange=zyMstpInfoInstanceTimeSinceTopologyChange)
