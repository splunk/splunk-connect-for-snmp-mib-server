#
# PySNMP MIB module WWP-COMMUNITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-COMMUNITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, Counter64, ObjectIdentity, ModuleIdentity, Integer32, Bits, TimeTicks, Unsigned32, NotificationType, iso, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "Counter64", "ObjectIdentity", "ModuleIdentity", "Integer32", "Bits", "TimeTicks", "Unsigned32", "NotificationType", "iso", "MibIdentifier", "Counter32")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpCommunityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 32))
wwpCommunityMIB.setRevisions(('2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpCommunityMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpCommunityMIB.setOrganization('World Wide Packets, Inc')
wwpCommunityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1))
wwpCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1))
wwpCommunityMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 2))
wwpCommunityMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 2, 0))
wwpCommunityMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 3))
wwpCommunityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 3, 1))
wwpCommunityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 3, 2))
wwpCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1), )
if mibBuilder.loadTexts: wwpCommunityTable.setStatus('current')
wwpCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1), ).setIndexNames((0, "WWP-COMMUNITY-MIB", "wwpCommunityName"), (0, "WWP-COMMUNITY-MIB", "wwpCommunityIpAddress"))
if mibBuilder.loadTexts: wwpCommunityEntry.setStatus('current')
wwpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpCommunityName.setStatus('current')
wwpCommunityIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpCommunityIpAddress.setStatus('current')
wwpCommunityRights = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpCommunityRights.setStatus('current')
wwpCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpCommunityStatus.setStatus('current')
wwpNotifCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2), )
if mibBuilder.loadTexts: wwpNotifCommunityTable.setStatus('current')
wwpNotifCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1), ).setIndexNames((0, "WWP-COMMUNITY-MIB", "wwpNotifCommunityName"), (0, "WWP-COMMUNITY-MIB", "wwpNotifCommunityDestAddr"))
if mibBuilder.loadTexts: wwpNotifCommunityEntry.setStatus('current')
wwpNotifCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpNotifCommunityName.setStatus('current')
wwpNotifCommunityDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpNotifCommunityDestAddr.setStatus('current')
wwpNotifCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpNotifCommunityStatus.setStatus('current')
wwpCommunityPersist = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("persist", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpCommunityPersist.setStatus('current')
mibBuilder.exportSymbols("WWP-COMMUNITY-MIB", wwpCommunityMIBCompliances=wwpCommunityMIBCompliances, wwpCommunityIpAddress=wwpCommunityIpAddress, wwpCommunity=wwpCommunity, wwpCommunityTable=wwpCommunityTable, wwpCommunityMIBConformance=wwpCommunityMIBConformance, wwpCommunityStatus=wwpCommunityStatus, wwpNotifCommunityName=wwpNotifCommunityName, wwpCommunityMIBNotificationPrefix=wwpCommunityMIBNotificationPrefix, wwpNotifCommunityTable=wwpNotifCommunityTable, wwpNotifCommunityEntry=wwpNotifCommunityEntry, wwpCommunityMIBGroups=wwpCommunityMIBGroups, PYSNMP_MODULE_ID=wwpCommunityMIB, wwpNotifCommunityDestAddr=wwpNotifCommunityDestAddr, wwpCommunityEntry=wwpCommunityEntry, wwpCommunityMIB=wwpCommunityMIB, wwpCommunityName=wwpCommunityName, wwpCommunityMIBObjects=wwpCommunityMIBObjects, wwpNotifCommunityStatus=wwpNotifCommunityStatus, wwpCommunityPersist=wwpCommunityPersist, wwpCommunityMIBNotifications=wwpCommunityMIBNotifications, wwpCommunityRights=wwpCommunityRights)
