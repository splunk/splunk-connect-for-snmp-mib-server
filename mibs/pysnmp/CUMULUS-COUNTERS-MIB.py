#
# PySNMP MIB module CUMULUS-COUNTERS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CUMULUS-COUNTERS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:16:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
cumulusMib, DateAndTime, DisplayString = mibBuilder.importSymbols("CUMULUS-SNMP-MIB", "cumulusMib", "DateAndTime", "DisplayString")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, IpAddress, Integer32, ModuleIdentity, Gauge32, Counter64, Unsigned32, enterprises, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, ObjectIdentity, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "Integer32", "ModuleIdentity", "Gauge32", "Counter64", "Unsigned32", "enterprises", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "ObjectIdentity", "Counter32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sysSpecificCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 40310, 2))
discardCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 40310, 2, 1))
discardCountersTable = MibTable((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1), )
if mibBuilder.loadTexts: discardCountersTable.setStatus('current')
discardCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: discardCountersEntry.setStatus('current')
portName = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portName.setStatus('current')
l3v4InDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3v4InDiscards.setStatus('current')
bufferOverflowDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferOverflowDiscards.setStatus('current')
l3AclDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3AclDiscards.setStatus('current')
egressQOverflowDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: egressQOverflowDiscards.setStatus('current')
egressNonQDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: egressNonQDiscards.setStatus('current')
mibBuilder.exportSymbols("CUMULUS-COUNTERS-MIB", l3v4InDiscards=l3v4InDiscards, egressNonQDiscards=egressNonQDiscards, discardCounters=discardCounters, portName=portName, bufferOverflowDiscards=bufferOverflowDiscards, egressQOverflowDiscards=egressQOverflowDiscards, discardCountersEntry=discardCountersEntry, sysSpecificCounters=sysSpecificCounters, l3AclDiscards=l3AclDiscards, discardCountersTable=discardCountersTable)
