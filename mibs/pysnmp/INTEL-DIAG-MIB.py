#
# PySNMP MIB module INTEL-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-DIAG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Bits, Unsigned32, iso, Counter64, IpAddress, TimeTicks, NotificationType, Counter32, Integer32, ObjectIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Bits", "Unsigned32", "iso", "Counter64", "IpAddress", "TimeTicks", "NotificationType", "Counter32", "Integer32", "ObjectIdentity", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
diag = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 4))
diagList = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 4, 1))
diagTest = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 4, 2))
diagAutodetect = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 4, 3))
diagListNumberOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagListNumberOfEntries.setStatus('mandatory')
diagListNumberOfErrorEntries = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListNumberOfErrorEntries.setStatus('mandatory')
diagListLastUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListLastUpdateTime.setStatus('mandatory')
diagListTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4), )
if mibBuilder.loadTexts: diagListTable.setStatus('mandatory')
diagListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1), ).setIndexNames((0, "INTEL-DIAG-MIB", "diagListIndex"))
if mibBuilder.loadTexts: diagListEntry.setStatus('mandatory')
diagListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListIndex.setStatus('mandatory')
diagListLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(32, 64, 96))).clone(namedValues=NamedValues(("warning", 32), ("error", 64), ("fatalError", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListLevel.setStatus('mandatory')
diagListCode = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListCode.setStatus('mandatory')
diagListIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListIfindex.setStatus('mandatory')
diagListTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListTimeStamp.setStatus('mandatory')
diagListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(240, 240)).setFixedLength(240)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListDescription.setStatus('mandatory')
diagListAdvice = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(240, 240)).setFixedLength(240)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListAdvice.setStatus('mandatory')
diagListAutoFixAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagListAutoFixAvailable.setStatus('mandatory')
diagListAutoFixState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 1, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagListAutoFixState.setStatus('mandatory')
diagTestTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 4, 2, 1), )
if mibBuilder.loadTexts: diagTestTable.setStatus('mandatory')
diagTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 4, 2, 1, 1), ).setIndexNames((0, "INTEL-DIAG-MIB", "diagTestType"))
if mibBuilder.loadTexts: diagTestEntry.setStatus('mandatory')
diagTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagTestType.setStatus('mandatory')
diagTestDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagTestDescription.setStatus('mandatory')
diagTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ready", 1), ("test", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagTestStatus.setStatus('mandatory')
diagAutodetectTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1), )
if mibBuilder.loadTexts: diagAutodetectTable.setStatus('mandatory')
diagAutodetectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1), ).setIndexNames((0, "INTEL-DIAG-MIB", "diagAutodetectType"), (0, "INTEL-DIAG-MIB", "diagAutodetectIndex1"), (0, "INTEL-DIAG-MIB", "diagAutodetectIndex2"), (0, "INTEL-DIAG-MIB", "diagAutodetectIndex3"))
if mibBuilder.loadTexts: diagAutodetectEntry.setStatus('mandatory')
diagAutodetectType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectType.setStatus('mandatory')
diagAutodetectIndex1 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectIndex1.setStatus('mandatory')
diagAutodetectIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectIndex2.setStatus('mandatory')
diagAutodetectIndex3 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectIndex3.setStatus('mandatory')
diagAutodetectState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ready", 1), ("startTest", 2), ("stopTest", 3), ("testSucceeded", 4), ("testFailed", 5), ("testInProgress", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagAutodetectState.setStatus('mandatory')
diagAutodetectDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectDuration.setStatus('mandatory')
diagAutodetectRes1 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectRes1.setStatus('mandatory')
diagAutodetectRes2a = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectRes2a.setStatus('mandatory')
diagAutodetectRes2b = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagAutodetectRes2b.setStatus('mandatory')
diagAutodetectPreInput = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 4, 3, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diagAutodetectPreInput.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-DIAG-MIB", diagAutodetectEntry=diagAutodetectEntry, diagAutodetectState=diagAutodetectState, diagAutodetectIndex1=diagAutodetectIndex1, diagListTimeStamp=diagListTimeStamp, diagList=diagList, diagListTable=diagListTable, diagAutodetectIndex3=diagAutodetectIndex3, diagAutodetectRes1=diagAutodetectRes1, diagAutodetectType=diagAutodetectType, diagTestTable=diagTestTable, diagAutodetectTable=diagAutodetectTable, diagListLastUpdateTime=diagListLastUpdateTime, diagTestDescription=diagTestDescription, diagListIfindex=diagListIfindex, diag=diag, diagTestStatus=diagTestStatus, diagAutodetectRes2a=diagAutodetectRes2a, diagListLevel=diagListLevel, diagListCode=diagListCode, diagAutodetectPreInput=diagAutodetectPreInput, diagListAutoFixState=diagListAutoFixState, diagTestType=diagTestType, diagAutodetectDuration=diagAutodetectDuration, diagListAutoFixAvailable=diagListAutoFixAvailable, diagListNumberOfErrorEntries=diagListNumberOfErrorEntries, diagTestEntry=diagTestEntry, diagListDescription=diagListDescription, diagTest=diagTest, diagAutodetectIndex2=diagAutodetectIndex2, diagListNumberOfEntries=diagListNumberOfEntries, diagListEntry=diagListEntry, diagAutodetectRes2b=diagAutodetectRes2b, diagAutodetect=diagAutodetect, diagListIndex=diagListIndex, diagListAdvice=diagListAdvice)
