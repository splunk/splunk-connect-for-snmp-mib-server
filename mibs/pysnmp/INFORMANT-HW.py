#
# PySNMP MIB module INFORMANT-HW (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-HW
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Unsigned32, NotificationType, ObjectIdentity, Bits, Counter64, IpAddress, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Unsigned32", "NotificationType", "ObjectIdentity", "Bits", "Counter64", "IpAddress", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Counter32")
DateAndTime, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "TruthValue", "DisplayString")
informant, WtcsDisplayString = mibBuilder.importSymbols("WTCS", "informant", "WtcsDisplayString")
wmiHardware = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21))
wmiHardware.setRevisions(('2007-05-24 23:24', '2004-11-03 21:35',))
if mibBuilder.loadTexts: wmiHardware.setLastUpdated('200705242324Z')
if mibBuilder.loadTexts: wmiHardware.setOrganization('Informant Systems, Inc.')
wmiCoolingDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1))
if mibBuilder.loadTexts: wmiCoolingDevice.setStatus('current')
win32FanTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1), )
if mibBuilder.loadTexts: win32FanTable.setStatus('current')
win32FanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hwfanIndex"))
if mibBuilder.loadTexts: win32FanEntry.setStatus('current')
hwfanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanIndex.setStatus('current')
hwfanActiveCooling = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanActiveCooling.setStatus('current')
hwfanAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanAvailability.setStatus('current')
hwfanCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanCaption.setStatus('current')
hwfanConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanConfigManagerErrorCode.setStatus('current')
hwfanConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanConfigManagerUserConfig.setStatus('current')
hwfanCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanCreationClassName.setStatus('current')
hwfanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanDescription.setStatus('current')
hwfanDesiredSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanDesiredSpeed.setStatus('current')
hwfanDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanDeviceID.setStatus('current')
hwfanErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanErrorCleared.setStatus('current')
hwfanErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanErrorDescription.setStatus('current')
hwfanInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanInstallDate.setStatus('current')
hwfanLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanLastErrorCode.setStatus('current')
hwfanName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanName.setStatus('current')
hwfanPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanPNPDeviceID.setStatus('current')
hwfanPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanPowerManagementCapabilities.setStatus('current')
hwfanPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanPowerManagementSupported.setStatus('current')
hwfanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanStatus.setStatus('current')
hwfanStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanStatusInfo.setStatus('current')
hwfanSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanSystemCreationClassName.setStatus('current')
hwfanSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanSystemName.setStatus('current')
hwfanVariableSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfanVariableSpeed.setStatus('current')
win32HeatPipeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2), )
if mibBuilder.loadTexts: win32HeatPipeTable.setStatus('current')
win32HeatPipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwhpIndex"))
if mibBuilder.loadTexts: win32HeatPipeEntry.setStatus('current')
hwhpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpIndex.setStatus('current')
hwhpActiveCooling = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpActiveCooling.setStatus('current')
hwhpAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpAvailability.setStatus('current')
hwhpCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpCaption.setStatus('current')
hwhpConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpConfigManagerErrorCode.setStatus('current')
hwhpConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpConfigManagerUserConfig.setStatus('current')
hwhpCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpCreationClassName.setStatus('current')
hwhpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpDescription.setStatus('current')
hwhpDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpDeviceID.setStatus('current')
hwhpErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpErrorCleared.setStatus('current')
hwhpErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpErrorDescription.setStatus('current')
hwhpInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpInstallDate.setStatus('current')
hwhpLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpLastErrorCode.setStatus('current')
hwhpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpName.setStatus('current')
hwhpPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpPNPDeviceID.setStatus('current')
hwhpPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpPowerManagementCapabilities.setStatus('current')
hwhpPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpPowerManagementSupported.setStatus('current')
hwhpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpStatus.setStatus('current')
hwhpStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpStatusInfo.setStatus('current')
hwhpSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpSystemCreationClassName.setStatus('current')
hwhpSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhpSystemName.setStatus('current')
win32RefrigerationTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3), )
if mibBuilder.loadTexts: win32RefrigerationTable.setStatus('current')
win32RefrigerationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1), ).setIndexNames((0, "INFORMANT-HW", "hwrfgIndex"))
if mibBuilder.loadTexts: win32RefrigerationEntry.setStatus('current')
hwrfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgIndex.setStatus('current')
hwrfgActiveCooling = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgActiveCooling.setStatus('current')
hwrfgAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgAvailability.setStatus('current')
hwrfgCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgCaption.setStatus('current')
hwrfgConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgConfigManagerErrorCode.setStatus('current')
hwrfgConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgConfigManagerUserConfig.setStatus('current')
hwrfgCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgCreationClassName.setStatus('current')
hwrfgDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgDescription.setStatus('current')
hwrfgDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgDeviceID.setStatus('current')
hwrfgErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgErrorCleared.setStatus('current')
hwrfgErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgErrorDescription.setStatus('current')
hwrfgInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgInstallDate.setStatus('current')
hwrfgLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgLastErrorCode.setStatus('current')
hwrfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgName.setStatus('current')
hwrfgPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgPNPDeviceID.setStatus('current')
hwrfgPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgPowerManagementCapabilities.setStatus('current')
hwrfgPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgPowerManagementSupported.setStatus('current')
hwrfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgStatus.setStatus('current')
hwrfgStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgStatusInfo.setStatus('current')
hwrfgSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgSystemCreationClassName.setStatus('current')
hwrfgSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwrfgSystemName.setStatus('current')
win32TemperatureProbeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4), )
if mibBuilder.loadTexts: win32TemperatureProbeTable.setStatus('current')
win32TemperatureProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1), ).setIndexNames((0, "INFORMANT-HW", "hwtmpIndex"))
if mibBuilder.loadTexts: win32TemperatureProbeEntry.setStatus('current')
hwtmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpIndex.setStatus('current')
hwtmpAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 2), Integer32()).setUnits('Hundredths of Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpAccuracy.setStatus('current')
hwtmpAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpAvailability.setStatus('current')
hwtmpCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpCaption.setStatus('current')
hwtmpConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpConfigManagerErrorCode.setStatus('current')
hwtmpConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpConfigManagerUserConfig.setStatus('current')
hwtmpCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpCreationClassName.setStatus('current')
hwtmpCurrentReading = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 8), Integer32()).setUnits('Tenths of degrees centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpCurrentReading.setStatus('current')
hwtmpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpDescription.setStatus('current')
hwtmpDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpDeviceID.setStatus('current')
hwtmpErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpErrorCleared.setStatus('current')
hwtmpErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpErrorDescription.setStatus('current')
hwtmpInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpInstallDate.setStatus('current')
hwtmpIsLinear = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpIsLinear.setStatus('current')
hwtmpLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpLastErrorCode.setStatus('current')
hwtmpLowerThresholdCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 16), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpLowerThresholdCritical.setStatus('current')
hwtmpLowerThresholdFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 17), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpLowerThresholdFatal.setStatus('current')
hwtmpLowerThresholdNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 18), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpLowerThresholdNonCritical.setStatus('current')
hwtmpMaxReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 19), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpMaxReadable.setStatus('current')
hwtmpMinReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 20), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpMinReadable.setStatus('current')
hwtmpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpName.setStatus('current')
hwtmpNominalReading = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 22), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpNominalReading.setStatus('current')
hwtmpNormalMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 23), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpNormalMax.setStatus('current')
hwtmpNormalMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 24), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpNormalMin.setStatus('current')
hwtmpPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpPNPDeviceID.setStatus('current')
hwtmpPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpPowerManagementCapabilities.setStatus('current')
hwtmpPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpPowerManagementSupported.setStatus('current')
hwtmpResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 28), Gauge32()).setUnits('Hundredths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpResolution.setStatus('current')
hwtmpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpStatus.setStatus('current')
hwtmpStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpStatusInfo.setStatus('current')
hwtmpSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpSystemCreationClassName.setStatus('current')
hwtmpSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpSystemName.setStatus('current')
hwtmpTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 33), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpTolerance.setStatus('current')
hwtmpUpperThresholdCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 34), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpUpperThresholdCritical.setStatus('current')
hwtmpUpperThresholdFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 35), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpUpperThresholdFatal.setStatus('current')
hwtmpUpperThresholdNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 36), Integer32()).setUnits('Tenths of degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtmpUpperThresholdNonCritical.setStatus('current')
wmiInputDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2))
if mibBuilder.loadTexts: wmiInputDevice.setStatus('current')
win32KeyboardTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1), )
if mibBuilder.loadTexts: win32KeyboardTable.setStatus('current')
win32KeyboardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hwkbIndex"))
if mibBuilder.loadTexts: win32KeyboardEntry.setStatus('current')
hwkbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbIndex.setStatus('current')
hwkbAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbAvailability.setStatus('current')
hwkbCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbCaption.setStatus('current')
hwkbConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbConfigManagerErrorCode.setStatus('current')
hwkbConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbConfigManagerUserConfig.setStatus('current')
hwkbCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbCreationClassName.setStatus('current')
hwkbDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbDescription.setStatus('current')
hwkbDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbDeviceID.setStatus('current')
hwkbErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbErrorCleared.setStatus('current')
hwkbErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbErrorDescription.setStatus('current')
hwkbInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbInstallDate.setStatus('current')
hwkbIsLocked = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbIsLocked.setStatus('current')
hwkbLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbLastErrorCode.setStatus('current')
hwkbLayout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbLayout.setStatus('current')
hwkbName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbName.setStatus('current')
hwkbNumberOfFunctionKeys = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbNumberOfFunctionKeys.setStatus('current')
hwkbPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("disabled", 3), ("enabled", 4), ("notImplemented", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbPassword.setStatus('current')
hwkbPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbPNPDeviceID.setStatus('current')
hwkbPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbPowerManagementCapabilities.setStatus('current')
hwkbPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbPowerManagementSupported.setStatus('current')
hwkbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbStatus.setStatus('current')
hwkbStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbStatusInfo.setStatus('current')
hwkbSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbSystemCreationClassName.setStatus('current')
hwkbSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwkbSystemName.setStatus('current')
win32PointingDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2), )
if mibBuilder.loadTexts: win32PointingDeviceTable.setStatus('current')
win32PointingDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwptIndex"))
if mibBuilder.loadTexts: win32PointingDeviceEntry.setStatus('current')
hwptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptIndex.setStatus('current')
hwptAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptAvailability.setStatus('current')
hwptCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptCaption.setStatus('current')
hwptConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptConfigManagerErrorCode.setStatus('current')
hwptConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptConfigManagerUserConfig.setStatus('current')
hwptCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptCreationClassName.setStatus('current')
hwptDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptDescription.setStatus('current')
hwptDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptDeviceID.setStatus('current')
hwptDeviceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 160, 161, 162))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("serial", 3), ("ps2", 4), ("infrared", 5), ("hpHIL", 6), ("busMouse", 7), ("appleDesktopBus", 8), ("busMouseDB9", 160), ("busMouseMicroDIN", 161), ("usb", 162)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptDeviceInterface.setStatus('current')
hwptDoubleSpeedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 10), Gauge32()).setUnits('Mickeys').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptDoubleSpeedThreshold.setStatus('current')
hwptErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptErrorCleared.setStatus('current')
hwptErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptErrorDescription.setStatus('current')
hwptHandedness = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("notApplicable", 1), ("rightHandedOperation", 2), ("leftHandedOperation", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptHandedness.setStatus('current')
hwptHardwareType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptHardwareType.setStatus('current')
hwptInfFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptInfFileName.setStatus('current')
hwptInfSection = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptInfSection.setStatus('current')
hwptInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptInstallDate.setStatus('current')
hwptIsLocked = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptIsLocked.setStatus('current')
hwptLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptLastErrorCode.setStatus('current')
hwptManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptManufacturer.setStatus('current')
hwptName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptName.setStatus('current')
hwptNumberOfButtons = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptNumberOfButtons.setStatus('current')
hwptPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptPNPDeviceID.setStatus('current')
hwptPointingType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("mouse", 3), ("trackBall", 4), ("trackPoint", 5), ("glidePoint", 6), ("touchPad", 7), ("touchScreen", 8), ("mouseOpticalSensor", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptPointingType.setStatus('current')
hwptPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptPowerManagementCapabilities.setStatus('current')
hwptPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptPowerManagementSupported.setStatus('current')
hwptQuadSpeedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 27), Gauge32()).setUnits('Mickeys').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptQuadSpeedThreshold.setStatus('current')
hwptResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptResolution.setStatus('current')
hwptSampleRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 29), Gauge32()).setUnits('Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptSampleRate.setStatus('current')
hwptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptStatus.setStatus('current')
hwptStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptStatusInfo.setStatus('current')
hwptSynch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 32), Gauge32()).setUnits('100 Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptSynch.setStatus('current')
hwptSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptSystemCreationClassName.setStatus('current')
hwptSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwptSystemName.setStatus('current')
wmiMassStorage = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3))
if mibBuilder.loadTexts: wmiMassStorage.setStatus('current')
win32AutochkSettingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2), )
if mibBuilder.loadTexts: win32AutochkSettingTable.setStatus('current')
win32AutochkSettingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwasIndex"))
if mibBuilder.loadTexts: win32AutochkSettingEntry.setStatus('current')
hwasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwasIndex.setStatus('current')
hwasCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwasCaption.setStatus('current')
hwasDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwasDescription.setStatus('current')
hwasSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwasSettingID.setStatus('current')
hwasUserInputDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 5), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwasUserInputDelay.setStatus('current')
win32CDROMDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8), )
if mibBuilder.loadTexts: win32CDROMDriveTable.setStatus('current')
win32CDROMDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1), ).setIndexNames((0, "INFORMANT-HW", "hwcdIndex"))
if mibBuilder.loadTexts: win32CDROMDriveEntry.setStatus('current')
hwcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdIndex.setStatus('current')
hwcdAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdAvailability.setStatus('current')
hwcdCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdCapabilities.setStatus('current')
hwcdCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdCapabilityDescriptions.setStatus('current')
hwcdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdCaption.setStatus('current')
hwcdCompressionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdCompressionMethod.setStatus('current')
hwcdConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdConfigManagerErrorCode.setStatus('current')
hwcdConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdConfigManagerUserConfig.setStatus('current')
hwcdCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdCreationClassName.setStatus('current')
hwcdDefaultBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdDefaultBlockSize.setStatus('current')
hwcdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdDescription.setStatus('current')
hwcdDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdDeviceID.setStatus('current')
hwcdDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdDrive.setStatus('current')
hwcdDriveIntegrity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdDriveIntegrity.setStatus('current')
hwcdErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdErrorCleared.setStatus('current')
hwcdErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdErrorDescription.setStatus('current')
hwcdErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdErrorMethodology.setStatus('current')
hwcdFileSystemFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdFileSystemFlags.setStatus('current')
hwcdFileSystemFlagsEx = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 16384, 32768, 65536, 131072, 262144))).clone(namedValues=NamedValues(("caseSENSITIVESEARCH", 1), ("casePRESERVEDNAMES", 2), ("unicodeONDISK", 4), ("persistentACLS", 8), ("fileCOMPRESSION", 16), ("volumeQUOTAS", 32), ("supportsSPARSEFILES", 64), ("supportsREPARSEPOINTS", 128), ("supportsREMOTESTORAGE", 256), ("supportsLONGNAMES", 16384), ("volumeISCOMPRESSED", 32768), ("supportsOBJECTIDS", 65536), ("supportsENCRYPTION", 131072), ("supportsNAMEDSTREAMS", 262144)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdFileSystemFlagsEx.setStatus('current')
hwcdId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdId.setStatus('current')
hwcdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdInstallDate.setStatus('current')
hwcdLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdLastErrorCode.setStatus('current')
hwcdManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdManufacturer.setStatus('current')
hwcdMaxBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdMaxBlockSize.setStatus('current')
hwcdMaximumComponentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdMaximumComponentLength.setStatus('current')
hwcdMaxMediaSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdMaxMediaSize.setStatus('current')
hwcdMediaLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdMediaLoaded.setStatus('current')
hwcdMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("randomAccess", 1), ("supportsWriting", 2), ("removableMedia", 3), ("cdrom", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdMediaType.setStatus('current')
hwcdMfrAssignedRevisionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdMfrAssignedRevisionLevel.setStatus('current')
hwcdMinBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdMinBlockSize.setStatus('current')
hwcdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdName.setStatus('current')
hwcdNeedsCleaning = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdNeedsCleaning.setStatus('current')
hwcdNumberOfMediaSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdNumberOfMediaSupported.setStatus('current')
hwcdPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdPNPDeviceID.setStatus('current')
hwcdPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 35), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdPowerManagementCapabilities.setStatus('current')
hwcdPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdPowerManagementSupported.setStatus('current')
hwcdRevisionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdRevisionLevel.setStatus('current')
hwcdSCSIBus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdSCSIBus.setStatus('current')
hwcdSCSILogicalUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdSCSILogicalUnit.setStatus('current')
hwcdSCSIPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdSCSIPort.setStatus('current')
hwcdSCSITargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdSCSITargetId.setStatus('current')
hwcdSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 42), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdSize.setStatus('current')
hwcdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdStatus.setStatus('current')
hwcdStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdStatusInfo.setStatus('current')
hwcdSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 45), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdSystemCreationClassName.setStatus('current')
hwcdSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 46), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdSystemName.setStatus('current')
hwcdTransferRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 47), Integer32()).setUnits('KiloBytes per Second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdTransferRate.setStatus('current')
hwcdVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 48), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdVolumeName.setStatus('current')
hwcdVolumeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 49), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcdVolumeSerialNumber.setStatus('current')
win32DiskDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12), )
if mibBuilder.loadTexts: win32DiskDriveTable.setStatus('current')
win32DiskDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1), ).setIndexNames((0, "INFORMANT-HW", "hwddIndex"))
if mibBuilder.loadTexts: win32DiskDriveEntry.setStatus('current')
hwddIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddIndex.setStatus('current')
hwddAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddAvailability.setStatus('current')
hwddBytesPerSector = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 3), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddBytesPerSector.setStatus('current')
hwddCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddCapabilities.setStatus('current')
hwddCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddCapabilityDescriptions.setStatus('current')
hwddCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddCaption.setStatus('current')
hwddCompressionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddCompressionMethod.setStatus('current')
hwddConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddConfigManagerErrorCode.setStatus('current')
hwddConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddConfigManagerUserConfig.setStatus('current')
hwddCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddCreationClassName.setStatus('current')
hwddDefaultBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddDefaultBlockSize.setStatus('current')
hwddDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddDescription.setStatus('current')
hwddDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddDeviceID.setStatus('current')
hwddErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddErrorCleared.setStatus('current')
hwddErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddErrorDescription.setStatus('current')
hwddErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddErrorMethodology.setStatus('current')
hwddPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddPhysicalIndex.setStatus('current')
hwddInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddInstallDate.setStatus('current')
hwddInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddInterfaceType.setStatus('current')
hwddLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddLastErrorCode.setStatus('current')
hwddManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddManufacturer.setStatus('current')
hwddMaxBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddMaxBlockSize.setStatus('current')
hwddMaxMediaSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddMaxMediaSize.setStatus('current')
hwddMediaLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddMediaLoaded.setStatus('current')
hwddMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddMediaType.setStatus('current')
hwddMinBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddMinBlockSize.setStatus('current')
hwddModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddModel.setStatus('current')
hwddName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddName.setStatus('current')
hwddNeedsCleaning = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddNeedsCleaning.setStatus('current')
hwddNumberOfMediaSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddNumberOfMediaSupported.setStatus('current')
hwddPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddPartitions.setStatus('current')
hwddPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddPNPDeviceID.setStatus('current')
hwddPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddPowerManagementCapabilities.setStatus('current')
hwddPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 34), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddPowerManagementSupported.setStatus('current')
hwddSCSIBus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSCSIBus.setStatus('current')
hwddSCSILogicalUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSCSILogicalUnit.setStatus('current')
hwddSCSIPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSCSIPort.setStatus('current')
hwddSCSITargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSCSITargetId.setStatus('current')
hwddSectorsPerTrack = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSectorsPerTrack.setStatus('current')
hwddSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSignature.setStatus('current')
hwddSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 41), WtcsDisplayString()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSize.setStatus('current')
hwddStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddStatus.setStatus('current')
hwddStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddStatusInfo.setStatus('current')
hwddSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 44), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSystemCreationClassName.setStatus('current')
hwddSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 45), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddSystemName.setStatus('current')
hwddTotalCylinders = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddTotalCylinders.setStatus('current')
hwddTotalHeads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddTotalHeads.setStatus('current')
hwddTotalSectors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddTotalSectors.setStatus('current')
hwddTotalTracks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddTotalTracks.setStatus('current')
hwddTracksPerCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwddTracksPerCylinder.setStatus('current')
win32FloppyDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18), )
if mibBuilder.loadTexts: win32FloppyDriveTable.setStatus('current')
win32FloppyDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1), ).setIndexNames((0, "INFORMANT-HW", "hwfdIndex"))
if mibBuilder.loadTexts: win32FloppyDriveEntry.setStatus('current')
hwfdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdIndex.setStatus('current')
hwfdAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdAvailability.setStatus('current')
hwfdCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdCapabilities.setStatus('current')
hwfdCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdCapabilityDescriptions.setStatus('current')
hwfdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdCaption.setStatus('current')
hwfdCompressionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdCompressionMethod.setStatus('current')
hwfdConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdConfigManagerErrorCode.setStatus('current')
hwfdConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdConfigManagerUserConfig.setStatus('current')
hwfdCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdCreationClassName.setStatus('current')
hwfdDefaultBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdDefaultBlockSize.setStatus('current')
hwfdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdDescription.setStatus('current')
hwfdDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdDeviceID.setStatus('current')
hwfdErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdErrorCleared.setStatus('current')
hwfdErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdErrorDescription.setStatus('current')
hwfdErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdErrorMethodology.setStatus('current')
hwfdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdInstallDate.setStatus('current')
hwfdLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdLastErrorCode.setStatus('current')
hwfdManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdManufacturer.setStatus('current')
hwfdMaxBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdMaxBlockSize.setStatus('current')
hwfdMaxMediaSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdMaxMediaSize.setStatus('current')
hwfdMinBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdMinBlockSize.setStatus('current')
hwfdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdName.setStatus('current')
hwfdNeedsCleaning = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdNeedsCleaning.setStatus('current')
hwfdNumberOfMediaSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdNumberOfMediaSupported.setStatus('current')
hwfdPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdPNPDeviceID.setStatus('current')
hwfdPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdPowerManagementCapabilities.setStatus('current')
hwfdPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdPowerManagementSupported.setStatus('current')
hwfdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdStatus.setStatus('current')
hwfdStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdStatusInfo.setStatus('current')
hwfdSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdSystemCreationClassName.setStatus('current')
hwfdSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfdSystemName.setStatus('current')
win32PhysicalMediaTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32), )
if mibBuilder.loadTexts: win32PhysicalMediaTable.setStatus('current')
win32PhysicalMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpmdIndex"))
if mibBuilder.loadTexts: win32PhysicalMediaEntry.setStatus('current')
hwpmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdIndex.setStatus('current')
hwpmdCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdCapacity.setStatus('current')
hwpmdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdCaption.setStatus('current')
hwpmdCleanerMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdCleanerMedia.setStatus('current')
hwpmdCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdCreationClassName.setStatus('current')
hwpmdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdDescription.setStatus('current')
hwpmdHotSwappable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdHotSwappable.setStatus('current')
hwpmdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdInstallDate.setStatus('current')
hwpmdManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdManufacturer.setStatus('current')
hwpmdMediaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdMediaDescription.setStatus('current')
hwpmdMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("tapeCartridge", 2), ("qicCartridge", 3), ("aitCartridge", 4), ("dtfCartridge", 5), ("datCartridge", 6), ("n8mmTapeCartridge", 7), ("n19mmTapeCartridge", 8), ("dltCartridge", 9), ("halfInchMagneticTapeCartridge", 10), ("cartridgeDisk", 11), ("jazDisk", 12), ("zipDisk", 13), ("syQuestDisk", 14), ("winchesterRemovableDisk", 15), ("cdROM", 16), ("cdROMXA", 17), ("cdI", 18), ("cdRecordable", 19), ("worm", 20), ("magnetoOptical", 21), ("dvd", 22), ("dvdRWplus", 23), ("dvdRAM", 24), ("dvdROM", 25), ("dvdVideo", 26), ("divx", 27), ("floppyDiskette", 28), ("hardDisk", 29), ("memoryCard", 30), ("hardCopy", 31), ("clikDisk", 32), ("cdRW", 33), ("cdDA", 34), ("cd", 35), ("dvdRecordable", 36), ("dvdRWminus", 37), ("dvdAudio", 38), ("dvd5", 39), ("dvd9", 40), ("dvd10", 41), ("dvd18", 42), ("magnetoOpticalRewriteable", 43), ("magnetoOpticalWriteOnce", 44), ("magnetoOpticalRewriteableLIMDOW", 45), ("phaseChangeWriteOnce", 46), ("phaseChangeRewriteable", 47), ("phaseChangeDualRewriteable", 48), ("ablativeWriteOnce", 49), ("nearFieldRecording", 50), ("miniQic", 51), ("travan", 52), ("n8mmMetalParticle", 53), ("n8mmAdvancedMetalEvaporate", 54), ("nctp", 55), ("ltoUltrium", 56), ("ltoAccelis", 57), ("n9TrackeTape", 58), ("n18TrackTape", 59), ("n36TrackTape", 60), ("magstar3590", 61), ("magstarMP", 62), ("d2Tape", 63), ("tapeDSTSmall", 64), ("tapeDSTMedium", 65), ("tapeDSTLarge", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdMediaType.setStatus('current')
hwpmdModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdModel.setStatus('current')
hwpmdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdName.setStatus('current')
hwpmdOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdOtherIdentifyingInfo.setStatus('current')
hwpmdPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdPartNumber.setStatus('current')
hwpmdPoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdPoweredOn.setStatus('current')
hwpmdRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdRemovable.setStatus('current')
hwpmdReplaceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdReplaceable.setStatus('current')
hwpmdSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdSerialNumber.setStatus('current')
hwpmdSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdSKU.setStatus('current')
hwpmdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdStatus.setStatus('current')
hwpmdTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 22), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdTag.setStatus('current')
hwpmdVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdVersion.setStatus('current')
hwpmdWriteProtectOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmdWriteProtectOn.setStatus('current')
win32TapeDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56), )
if mibBuilder.loadTexts: win32TapeDriveTable.setStatus('current')
win32TapeDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1), ).setIndexNames((0, "INFORMANT-HW", "hwtdIndex"))
if mibBuilder.loadTexts: win32TapeDriveEntry.setStatus('current')
hwtdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdIndex.setStatus('current')
hwtdAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdAvailability.setStatus('current')
hwtdCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdCapabilities.setStatus('current')
hwtdCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdCapabilityDescriptions.setStatus('current')
hwtdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdCaption.setStatus('current')
hwtdCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdCompression.setStatus('current')
hwtdCompressionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdCompressionMethod.setStatus('current')
hwtdConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdConfigManagerErrorCode.setStatus('current')
hwtdConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdConfigManagerUserConfig.setStatus('current')
hwtdCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdCreationClassName.setStatus('current')
hwtdDefaultBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdDefaultBlockSize.setStatus('current')
hwtdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdDescription.setStatus('current')
hwtdDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdDeviceID.setStatus('current')
hwtdECC = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdECC.setStatus('current')
hwtdEOTWarningZoneSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdEOTWarningZoneSize.setStatus('current')
hwtdErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdErrorCleared.setStatus('current')
hwtdErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdErrorDescription.setStatus('current')
hwtdErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdErrorMethodology.setStatus('current')
hwtdFeaturesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdFeaturesHigh.setStatus('current')
hwtdFeaturesLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdFeaturesLow.setStatus('current')
hwtdId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdId.setStatus('current')
hwtdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 22), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdInstallDate.setStatus('current')
hwtdLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdLastErrorCode.setStatus('current')
hwtdManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdManufacturer.setStatus('current')
hwtdMaxBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdMaxBlockSize.setStatus('current')
hwtdMaxMediaSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdMaxMediaSize.setStatus('current')
hwtdMaxPartitionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdMaxPartitionCount.setStatus('current')
hwtdMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdMediaType.setStatus('current')
hwtdMinBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdMinBlockSize.setStatus('current')
hwtdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdName.setStatus('current')
hwtdNeedsCleaning = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdNeedsCleaning.setStatus('current')
hwtdNumberOfMediaSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdNumberOfMediaSupported.setStatus('current')
hwtdPadding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 33), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdPadding.setStatus('current')
hwtdPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdPNPDeviceID.setStatus('current')
hwtdPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 35), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdPowerManagementCapabilities.setStatus('current')
hwtdPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdPowerManagementSupported.setStatus('current')
hwtdReportSetMarks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdReportSetMarks.setStatus('current')
hwtdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdStatus.setStatus('current')
hwtdStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdStatusInfo.setStatus('current')
hwtdSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdSystemCreationClassName.setStatus('current')
hwtdSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 41), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtdSystemName.setStatus('current')
wmiMotherboardControllerPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4))
if mibBuilder.loadTexts: wmiMotherboardControllerPort.setStatus('current')
win321394ControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1), )
if mibBuilder.loadTexts: win321394ControllerTable.setStatus('current')
win321394ControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hw1394Index"))
if mibBuilder.loadTexts: win321394ControllerEntry.setStatus('current')
hw1394Index = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394Index.setStatus('current')
hw1394Availability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394Availability.setStatus('current')
hw1394Caption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394Caption.setStatus('current')
hw1394ConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394ConfigManagerErrorCode.setStatus('current')
hw1394ConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394ConfigManagerUserConfig.setStatus('current')
hw1394CreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394CreationClassName.setStatus('current')
hw1394Description = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394Description.setStatus('current')
hw1394DeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394DeviceID.setStatus('current')
hw1394ErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394ErrorCleared.setStatus('current')
hw1394ErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394ErrorDescription.setStatus('current')
hw1394InstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394InstallDate.setStatus('current')
hw1394LastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394LastErrorCode.setStatus('current')
hw1394Manufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394Manufacturer.setStatus('current')
hw1394MaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394MaxNumberControlled.setStatus('current')
hw1394Name = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394Name.setStatus('current')
hw1394PNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394PNPDeviceID.setStatus('current')
hw1394PowerManagementCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394PowerManagementCapability.setStatus('current')
hw1394PowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394PowerManagementSupported.setStatus('current')
hw1394ProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("eisa", 3), ("isa", 4), ("pci", 5), ("ataATAPI", 6), ("flexibleDiskette", 7), ("n1496", 8), ("scsiParallelInterface", 9), ("scsiFibreChannelProtocol", 10), ("scsiSerialBusProtocol", 11), ("scsiSerialBusProtocol2", 12), ("scsiSerialStorageArchitecture", 13), ("vesa", 14), ("pcmcia", 15), ("universalSerialBus", 16), ("parallelProtocol", 17), ("escon", 18), ("diagnostic", 19), ("i2C", 20), ("power", 21), ("hippi", 22), ("multiBus", 23), ("vme", 24), ("ipi", 25), ("ieee488", 26), ("rs232", 27), ("ieee802310BASE5", 28), ("ieee802310BASE2", 29), ("ieee80231BASE5", 30), ("ieee802310BROAD36", 31), ("ieee8023100BASEVG", 32), ("ieee8025TokenRing", 33), ("ansiX3T95FDDI", 34), ("mca", 35), ("esdi", 36), ("ide", 37), ("cmd", 38), ("st506", 39), ("dssi", 40), ("qic2", 41), ("enhancedATAIDE", 42), ("agp", 43), ("twoWayInfrared", 44), ("fastInfrared", 45), ("serialInfrared", 46), ("irBus", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394ProtocolSupported.setStatus('current')
hw1394Status = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394Status.setStatus('current')
hw1394StatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394StatusInfo.setStatus('current')
hw1394SystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394SystemCreationClassName.setStatus('current')
hw1394SystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394SystemName.setStatus('current')
hw1394TimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hw1394TimeOfLastReset.setStatus('current')
win32BaseBoardTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2), )
if mibBuilder.loadTexts: win32BaseBoardTable.setStatus('current')
win32BaseBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwbbIndex"))
if mibBuilder.loadTexts: win32BaseBoardEntry.setStatus('current')
hwbbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbIndex.setStatus('current')
hwbbCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbCaption.setStatus('current')
hwbbConfigOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbConfigOptions.setStatus('current')
hwbbCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbCreationClassName.setStatus('current')
hwbbDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbDepth.setStatus('current')
hwbbDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbDescription.setStatus('current')
hwbbHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbHeight.setStatus('current')
hwbbHostingBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbHostingBoard.setStatus('current')
hwbbHotSwappable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbHotSwappable.setStatus('current')
hwbbInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbInstallDate.setStatus('current')
hwbbManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbManufacturer.setStatus('current')
hwbbModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbModel.setStatus('current')
hwbbName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbName.setStatus('current')
hwbbOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbOtherIdentifyingInfo.setStatus('current')
hwbbPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbPartNumber.setStatus('current')
hwbbPoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbPoweredOn.setStatus('current')
hwbbProduct = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbProduct.setStatus('current')
hwbbRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbRemovable.setStatus('current')
hwbbReplaceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbReplaceable.setStatus('current')
hwbbRequirementsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbRequirementsDescription.setStatus('current')
hwbbRequiresDaughterBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbRequiresDaughterBoard.setStatus('current')
hwbbSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbSerialNumber.setStatus('current')
hwbbSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbSKU.setStatus('current')
hwbbSlotLayout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbSlotLayout.setStatus('current')
hwbbSpecialRequirements = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbSpecialRequirements.setStatus('current')
hwbbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbStatus.setStatus('current')
hwbbTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 27), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbTag.setStatus('current')
hwbbVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbVersion.setStatus('current')
hwbbWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbWeight.setStatus('current')
hwbbWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbbWidth.setStatus('current')
win32BIOSTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3), )
if mibBuilder.loadTexts: win32BIOSTable.setStatus('current')
win32BIOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1), ).setIndexNames((0, "INFORMANT-HW", "hwbiIndex"))
if mibBuilder.loadTexts: win32BIOSEntry.setStatus('current')
hwbiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiIndex.setStatus('current')
hwbiBiosCharacteristics = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiBiosCharacteristics.setStatus('current')
hwbiBIOSVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiBIOSVersion.setStatus('current')
hwbiBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiBuildNumber.setStatus('current')
hwbiCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiCaption.setStatus('current')
hwbiCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiCodeSet.setStatus('current')
hwbiCurrentLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiCurrentLanguage.setStatus('current')
hwbiDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiDescription.setStatus('current')
hwbiIdentificationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiIdentificationCode.setStatus('current')
hwbiInstallableLanguages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiInstallableLanguages.setStatus('current')
hwbiInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiInstallDate.setStatus('current')
hwbiLanguageEdition = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 12), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiLanguageEdition.setStatus('current')
hwbiListOfLanguages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiListOfLanguages.setStatus('current')
hwbiManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiManufacturer.setStatus('current')
hwbiName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 15), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiName.setStatus('current')
hwbiOtherTargetOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 16), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiOtherTargetOS.setStatus('current')
hwbiPrimaryBIOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiPrimaryBIOS.setStatus('current')
hwbiReleaseDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiReleaseDate.setStatus('current')
hwbiSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiSerialNumber.setStatus('current')
hwbiSMBIOSBIOSVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiSMBIOSBIOSVersion.setStatus('current')
hwbiSMBIOSMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiSMBIOSMajorVersion.setStatus('current')
hwbiSMBIOSMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiSMBIOSMinorVersion.setStatus('current')
hwbiSMBIOSPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiSMBIOSPresent.setStatus('current')
hwbiSoftwareElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiSoftwareElementID.setStatus('current')
hwbiSoftwareElementState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("deployable", 0), ("installable", 1), ("executable", 2), ("running", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiSoftwareElementState.setStatus('current')
hwbiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiStatus.setStatus('current')
hwbiTargetOperatingSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("macos", 2), ("attunix", 3), ("dgux", 4), ("decnt", 5), ("digitalUnix", 6), ("openVMS", 7), ("hpux", 8), ("aix", 9), ("mvs", 10), ("os400", 11), ("os2", 12), ("javaVM", 13), ("msdos", 14), ("win3x", 15), ("win95", 16), ("win98", 17), ("winnt", 18), ("wince", 19), ("ncr3000", 20), ("netWare", 21), ("osf", 22), ("dcOS", 23), ("reliantUNIX", 24), ("scoUnixWare", 25), ("scoOpenServer", 26), ("sequent", 27), ("irix", 28), ("solaris", 29), ("sunOS", 30), ("u6000", 31), ("aseries", 32), ("tandemNSK", 33), ("tandemNT", 34), ("bs2000", 35), ("linux", 36), ("lynx", 37), ("xenix", 38), ("vmESA", 39), ("interactiveUNIX", 40), ("bsdunix", 41), ("freeBSD", 42), ("netBSD", 43), ("gnuHurd", 44), ("os9", 45), ("machKernel", 46), ("inferno", 47), ("qnx", 48), ("epoc", 49), ("ixWorks", 50), ("vxWorks", 51), ("miNT", 52), ("beOS", 53), ("hpMPE", 54), ("nextStep", 55), ("palmPilot", 56), ("rhapsody", 57), ("windows2000", 58), ("dedicated", 59), ("vse", 60), ("tpf", 61)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiTargetOperatingSystem.setStatus('current')
hwbiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 28), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbiVersion.setStatus('current')
win32BusTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4), )
if mibBuilder.loadTexts: win32BusTable.setStatus('current')
win32BusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1), ).setIndexNames((0, "INFORMANT-HW", "hwbuIndex"))
if mibBuilder.loadTexts: win32BusEntry.setStatus('current')
hwbuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuIndex.setStatus('current')
hwbuAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuAvailability.setStatus('current')
hwbuBusNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuBusNum.setStatus('current')
hwbuBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("internal", 0), ("isa", 1), ("eisa", 2), ("microChannel", 3), ("turboChannel", 4), ("pciBus", 5), ("vmeBus", 6), ("nuBus", 7), ("pcmciaBus", 8), ("cBus", 9), ("mpiBus", 10), ("mpsaBus", 11), ("internalProcessor", 12), ("internalPowerBus", 13), ("pnpISABus", 14), ("pnpBus", 15), ("maximumInterfaceType", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuBusType.setStatus('current')
hwbuCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuCaption.setStatus('current')
hwbuConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuConfigManagerErrorCode.setStatus('current')
hwbuConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuConfigManagerUserConfig.setStatus('current')
hwbuCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuCreationClassName.setStatus('current')
hwbuDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuDescription.setStatus('current')
hwbuDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuDeviceID.setStatus('current')
hwbuErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuErrorCleared.setStatus('current')
hwbuErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuErrorDescription.setStatus('current')
hwbuInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuInstallDate.setStatus('current')
hwbuLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuLastErrorCode.setStatus('current')
hwbuName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuName.setStatus('current')
hwbuPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuPNPDeviceID.setStatus('current')
hwbuPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuPowerManagementCapabilities.setStatus('current')
hwbuPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuPowerManagementSupported.setStatus('current')
hwbuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuStatus.setStatus('current')
hwbuStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuStatusInfo.setStatus('current')
hwbuSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuSystemCreationClassName.setStatus('current')
hwbuSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbuSystemName.setStatus('current')
win32CacheMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5), )
if mibBuilder.loadTexts: win32CacheMemoryTable.setStatus('current')
win32CacheMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1), ).setIndexNames((0, "INFORMANT-HW", "hwcmIndex"))
if mibBuilder.loadTexts: win32CacheMemoryEntry.setStatus('current')
hwcmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmIndex.setStatus('current')
hwcmAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("readable", 1), ("writable", 2), ("readWriteSupported", 3), ("writeOnce", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmAccess.setStatus('current')
hwcmAdditionalErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmAdditionalErrorData.setStatus('current')
hwcmAssociativity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("directMapped", 3), ("n2waySetAssociative", 4), ("n4waySetAssociative", 5), ("fullyAssociative", 6), ("n8waySetAssociative", 7), ("n16waySetAssociative", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmAssociativity.setStatus('current')
hwcmAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmAvailability.setStatus('current')
hwcmBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmBlockSize.setStatus('current')
hwcmCacheSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 7), Gauge32()).setUnits('NanoSeconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmCacheSpeed.setStatus('current')
hwcmCacheType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("instruction", 3), ("data", 4), ("unified", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmCacheType.setStatus('current')
hwcmCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmCaption.setStatus('current')
hwcmConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmConfigManagerErrorCode.setStatus('current')
hwcmConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmConfigManagerUserConfig.setStatus('current')
hwcmCorrectableError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmCorrectableError.setStatus('current')
hwcmCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 13), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmCreationClassName.setStatus('current')
hwcmCurrentSRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmCurrentSRAM.setStatus('current')
hwcmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmDescription.setStatus('current')
hwcmDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmDeviceID.setStatus('current')
hwcmEndingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmEndingAddress.setStatus('current')
hwcmErrorAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("read", 3), ("write", 4), ("partialWrite", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorAccess.setStatus('current')
hwcmErrorAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorAddress.setStatus('current')
hwcmErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorCleared.setStatus('current')
hwcmErrorCorrectType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("reserved", 0), ("other", 1), ("unknown", 2), ("none", 3), ("parity", 4), ("singlebitECC", 5), ("multibitECC", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorCorrectType.setStatus('current')
hwcmErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorData.setStatus('current')
hwcmErrorDataOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("leastSignificantByteFirst", 1), ("mostSignificantByteFirst", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorDataOrder.setStatus('current')
hwcmErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorDescription.setStatus('current')
hwcmErrorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("ok", 3), ("badRead", 4), ("parityError", 5), ("singleBitError", 6), ("doubleBitError", 7), ("multiBitError", 8), ("nibbleError", 9), ("checksumError", 10), ("crcError", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorInfo.setStatus('current')
hwcmErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorMethodology.setStatus('current')
hwcmErrorResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorResolution.setStatus('current')
hwcmErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 28), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorTime.setStatus('current')
hwcmErrorTransferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmErrorTransferSize.setStatus('current')
hwcmFlushTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmFlushTimer.setStatus('current')
hwcmInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 31), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmInstallDate.setStatus('current')
hwcmInstalledSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 32), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmInstalledSize.setStatus('current')
hwcmLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmLastErrorCode.setStatus('current')
hwcmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("primary", 3), ("secondary", 4), ("tertiary", 5), ("notApplicable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmLevel.setStatus('current')
hwcmLineSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmLineSize.setStatus('current')
hwcmLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("internal", 0), ("external", 1), ("reserved", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmLocation.setStatus('current')
hwcmMaxCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 37), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmMaxCacheSize.setStatus('current')
hwcmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 38), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmName.setStatus('current')
hwcmNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmNumberOfBlocks.setStatus('current')
hwcmOtherErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmOtherErrorDescription.setStatus('current')
hwcmPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 41), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmPNPDeviceID.setStatus('current')
hwcmPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 42), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmPowerManagementCapabilities.setStatus('current')
hwcmPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 43), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmPowerManagementSupported.setStatus('current')
hwcmPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 44), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmPurpose.setStatus('current')
hwcmReadPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("read", 3), ("readAhead", 4), ("readAndReadAhead", 5), ("determinationPerIO", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmReadPolicy.setStatus('current')
hwcmReplacementPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("leastRecentlyUsed", 3), ("firstInFirstOut", 4), ("lastInFirstOut", 5), ("leastFrequentlyUsed", 6), ("mostFrequentlyUsed", 7), ("osDependentAlgorithms", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmReplacementPolicy.setStatus('current')
hwcmStartingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmStartingAddress.setStatus('current')
hwcmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmStatus.setStatus('current')
hwcmStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmStatusInfo.setStatus('current')
hwcmSupportedSRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 50), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmSupportedSRAM.setStatus('current')
hwcmSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 51), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmSystemCreationClassName.setStatus('current')
hwcmSystemLevelAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 52), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmSystemLevelAddress.setStatus('current')
hwcmSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 53), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmSystemName.setStatus('current')
hwcmWritePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("writeBack", 3), ("writeThrough", 4), ("variesWithAddress", 5), ("determinationPerIO", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcmWritePolicy.setStatus('current')
win32DeviceMemoryAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6), )
if mibBuilder.loadTexts: win32DeviceMemoryAddressTable.setStatus('current')
win32DeviceMemoryAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1), ).setIndexNames((0, "INFORMANT-HW", "hwdaIndex"))
if mibBuilder.loadTexts: win32DeviceMemoryAddressEntry.setStatus('current')
hwdaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaIndex.setStatus('current')
hwdaCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaCaption.setStatus('current')
hwdaCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaCreationClassName.setStatus('current')
hwdaCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaCSCreationClassName.setStatus('current')
hwdaCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaCSName.setStatus('current')
hwdaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaDescription.setStatus('current')
hwdaEndingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaEndingAddress.setStatus('current')
hwdaInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaInstallDate.setStatus('current')
hwdaMemoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("readWrite", 1), ("readOnly", 2), ("writeOnly", 3), ("prefetchable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaMemoryType.setStatus('current')
hwdaName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaName.setStatus('current')
hwdaStartingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaStartingAddress.setStatus('current')
hwdaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdaStatus.setStatus('current')
win32DMAChannelTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7), )
if mibBuilder.loadTexts: win32DMAChannelTable.setStatus('current')
win32DMAChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1), ).setIndexNames((0, "INFORMANT-HW", "hwdmaIndex"))
if mibBuilder.loadTexts: win32DMAChannelEntry.setStatus('current')
hwdmaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaIndex.setStatus('current')
hwdmaAddressSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaAddressSize.setStatus('current')
hwdmaAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("available", 3), ("inUseNotAvailable", 4), ("inUseAndAvailableShareable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaAvailability.setStatus('current')
hwdmaBurstMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaBurstMode.setStatus('current')
hwdmaByteMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("doesNotExecuteIncountByByteMode", 3), ("executeIncountByByteMode", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaByteMode.setStatus('current')
hwdmaCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaCaption.setStatus('current')
hwdmaChannelTiming = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("isaCompatible", 3), ("typeA", 4), ("typeB", 5), ("typeF", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaChannelTiming.setStatus('current')
hwdmaCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaCreationClassName.setStatus('current')
hwdmaCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaCSCreationClassName.setStatus('current')
hwdmaCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaCSName.setStatus('current')
hwdmaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaDescription.setStatus('current')
hwdmaDMAChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaDMAChannel.setStatus('current')
hwdmaInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaInstallDate.setStatus('current')
hwdmaMaxTransferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaMaxTransferSize.setStatus('current')
hwdmaName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaName.setStatus('current')
hwdmaPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaPort.setStatus('current')
hwdmaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaStatus.setStatus('current')
hwdmaTransferWidths = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaTransferWidths.setStatus('current')
hwdmaTypeCTiming = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("isaCompatible", 3), ("notSupported", 4), ("supported", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaTypeCTiming.setStatus('current')
hwdmaWordMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("doesNotExecuteIncountByWordMode", 3), ("executeIncountByWordMode", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmaWordMode.setStatus('current')
win32FloppyControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8), )
if mibBuilder.loadTexts: win32FloppyControllerTable.setStatus('current')
win32FloppyControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1), ).setIndexNames((0, "INFORMANT-HW", "hwfcIndex"))
if mibBuilder.loadTexts: win32FloppyControllerEntry.setStatus('current')
hwfcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcIndex.setStatus('current')
hwfcAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcAvailability.setStatus('current')
hwfcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcCaption.setStatus('current')
hwfcConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcConfigManagerErrorCode.setStatus('current')
hwfcConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcConfigManagerUserConfig.setStatus('current')
hwfcCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcCreationClassName.setStatus('current')
hwfcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcDescription.setStatus('current')
hwfcDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcDeviceID.setStatus('current')
hwfcErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcErrorCleared.setStatus('current')
hwfcErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcErrorDescription.setStatus('current')
hwfcInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcInstallDate.setStatus('current')
hwfcLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcLastErrorCode.setStatus('current')
hwfcManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcManufacturer.setStatus('current')
hwfcMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcMaxNumberControlled.setStatus('current')
hwfcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcName.setStatus('current')
hwfcPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcPNPDeviceID.setStatus('current')
hwfcPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcPowerManagementCapabilities.setStatus('current')
hwfcPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcPowerManagementSupported.setStatus('current')
hwfcProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("eisa", 3), ("isa", 4), ("pci", 5), ("ataATAPI", 6), ("flexibleDiskette", 7), ("n1496", 8), ("scsiParallelInterface", 9), ("scsiFibreChannelProtocol", 10), ("scsiSerialBusProtocol", 11), ("scsiSerialBusProtocol2", 12), ("scsiSerialStorageArchitecture", 13), ("vesa", 14), ("pcmcia", 15), ("universalSerialBus", 16), ("parallelProtocol", 17), ("escon", 18), ("diagnostic", 19), ("i2C", 20), ("power", 21), ("hippi", 22), ("multiBus", 23), ("vme", 24), ("ipi", 25), ("ieee488", 26), ("rs232", 27), ("ieee802310BASE5", 28), ("ieee802310BASE2", 29), ("ieee80231BASES", 30), ("ieee802310BROAD36", 31), ("ieee8023100BASEVG", 32), ("ieee8025TokenRing", 33), ("ansiX3T95FDDI", 34), ("mca", 35), ("esdi", 36), ("ide", 37), ("cmd", 38), ("st506", 39), ("dssi", 40), ("qic2", 41), ("enhancedATAIDE", 42), ("agp", 43), ("twowayInfrared", 44), ("fastInfrared", 45), ("serialInfrared", 46), ("irBus", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcProtocolSupported.setStatus('current')
hwfcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcStatus.setStatus('current')
hwfcStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcStatusInfo.setStatus('current')
hwfcSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcSystemCreationClassName.setStatus('current')
hwfcSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcSystemName.setStatus('current')
hwfcTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwfcTimeOfLastReset.setStatus('current')
win32IDEControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9), )
if mibBuilder.loadTexts: win32IDEControllerTable.setStatus('current')
win32IDEControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1), ).setIndexNames((0, "INFORMANT-HW", "hwideIndex"))
if mibBuilder.loadTexts: win32IDEControllerEntry.setStatus('current')
hwideIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideIndex.setStatus('current')
hwideAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideAvailability.setStatus('current')
hwideCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideCaption.setStatus('current')
hwideConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideConfigManagerErrorCode.setStatus('current')
hwideConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideConfigManagerUserConfig.setStatus('current')
hwideCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideCreationClassName.setStatus('current')
hwideDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideDescription.setStatus('current')
hwideDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideDeviceID.setStatus('current')
hwideErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideErrorCleared.setStatus('current')
hwideErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideErrorDescription.setStatus('current')
hwideInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideInstallDate.setStatus('current')
hwideLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideLastErrorCode.setStatus('current')
hwideManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideManufacturer.setStatus('current')
hwideMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideMaxNumberControlled.setStatus('current')
hwideName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideName.setStatus('current')
hwidePNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidePNPDeviceID.setStatus('current')
hwidePowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidePowerManagementCapabilities.setStatus('current')
hwidePowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidePowerManagementSupported.setStatus('current')
hwideProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("eisa", 3), ("isa", 4), ("pci", 5), ("ataATAPI", 6), ("flexibleDiskette", 7), ("n1496", 8), ("scsiParallelInterface", 9), ("scsiFibreChannelProtocol", 10), ("scsiSerialBusProtocol", 11), ("scsiSerialBusProtocol1394", 12), ("scsiSerialStorageArchitecture", 13), ("vesa", 14), ("pcmcia", 15), ("universalSerialBus", 16), ("parallelProtocol", 17), ("escon", 18), ("diagnostic", 19), ("i2C", 20), ("power", 21), ("hippi", 22), ("multiBus", 23), ("vme", 24), ("ipi", 25), ("ieee488", 26), ("rs232", 27), ("ieee802310BASE5", 28), ("ieee802310BASE2", 29), ("ieee80231BASE5", 30), ("ieee802310BROAD36", 31), ("ieee8023100BASEVG", 32), ("ieee8025TokenRing", 33), ("ansiX3T95FDDI", 34), ("mca", 35), ("esdi", 36), ("ide", 37), ("cmd", 38), ("st506", 39), ("dssi", 40), ("qic2", 41), ("enhancedATAIDE", 42), ("agp", 43), ("twowayInfrared", 44), ("fastInfrared", 45), ("serialInfrared", 46), ("irBus", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideProtocolSupported.setStatus('current')
hwideStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideStatus.setStatus('current')
hwideStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideStatusInfo.setStatus('current')
hwideSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideSystemCreationClassName.setStatus('current')
hwideSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideSystemName.setStatus('current')
hwideTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwideTimeOfLastReset.setStatus('current')
win32InfraredDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10), )
if mibBuilder.loadTexts: win32InfraredDeviceTable.setStatus('current')
win32InfraredDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1), ).setIndexNames((0, "INFORMANT-HW", "hwidIndex"))
if mibBuilder.loadTexts: win32InfraredDeviceEntry.setStatus('current')
hwidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidIndex.setStatus('current')
hwidAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidAvailability.setStatus('current')
hwidCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidCaption.setStatus('current')
hwidConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidConfigManagerErrorCode.setStatus('current')
hwidConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidConfigManagerUserConfig.setStatus('current')
hwidCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidCreationClassName.setStatus('current')
hwidDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidDescription.setStatus('current')
hwidDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidDeviceID.setStatus('current')
hwidErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidErrorCleared.setStatus('current')
hwidErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidErrorDescription.setStatus('current')
hwidInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidInstallDate.setStatus('current')
hwidLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidLastErrorCode.setStatus('current')
hwidManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidManufacturer.setStatus('current')
hwidMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidMaxNumberControlled.setStatus('current')
hwidName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidName.setStatus('current')
hwidPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidPNPDeviceID.setStatus('current')
hwidPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidPowerManagementCapabilities.setStatus('current')
hwidPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidPowerManagementSupported.setStatus('current')
hwidProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("eisa", 3), ("isa", 4), ("pci", 5), ("ataATAPI", 6), ("flexibleDiskette", 7), ("n1496", 8), ("scsiParallelInterface", 9), ("scsiFibreChannelProtocol", 10), ("scsiSerialBusProtocol", 11), ("scsiSerialBusProtocol1394", 12), ("scsiSerialStorageArchitecture", 13), ("vesa", 14), ("pcmcia", 15), ("universalSerialBus", 16), ("parallelProtocol", 17), ("escon", 18), ("diagnostic", 19), ("i2C", 20), ("power", 21), ("hippi", 22), ("multiBus", 23), ("vme", 24), ("ipi", 25), ("ieee488", 26), ("rs232", 27), ("ieee802310BASE5", 28), ("ieee802310BASE2", 29), ("ieee80231BASE5", 30), ("ieee802310BROAD36", 31), ("ieee8023100BASEVG", 32), ("ieee8025TokenRing", 33), ("ansiX3T95FDDI", 34), ("mca", 35), ("esdi", 36), ("ide", 37), ("cmd", 38), ("st506", 39), ("dssi", 40), ("qic2", 41), ("enhancedATAIDE", 42), ("agp", 43), ("twowayInfrared", 44), ("fastInfrared", 45), ("serialInfrared", 46), ("irBus", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidProtocolSupported.setStatus('current')
hwidStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidStatus.setStatus('current')
hwidStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidStatusInfo.setStatus('current')
hwidSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidSystemCreationClassName.setStatus('current')
hwidSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidSystemName.setStatus('current')
hwidTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwidTimeOfLastReset.setStatus('current')
win32IRQResourceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11), )
if mibBuilder.loadTexts: win32IRQResourceTable.setStatus('current')
win32IRQResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1), ).setIndexNames((0, "INFORMANT-HW", "hwirqIndex"))
if mibBuilder.loadTexts: win32IRQResourceEntry.setStatus('current')
hwirqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqIndex.setStatus('current')
hwirqAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 0), ("unknown", 1), ("available", 2), ("inUseNotAvailable", 3), ("inUseAndAvailableShareable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqAvailability.setStatus('current')
hwirqCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqCaption.setStatus('current')
hwirqCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqCreationClassName.setStatus('current')
hwirqCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqCSCreationClassName.setStatus('current')
hwirqCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqCSName.setStatus('current')
hwirqDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqDescription.setStatus('current')
hwirqHardware = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqHardware.setStatus('current')
hwirqInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqInstallDate.setStatus('current')
hwirqIRQNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqIRQNumber.setStatus('current')
hwirqName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqName.setStatus('current')
hwirqShareable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqShareable.setStatus('current')
hwirqStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqStatus.setStatus('current')
hwirqTriggerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("activeLow", 3), ("activeHigh", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqTriggerLevel.setStatus('current')
hwirqTriggerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("level", 3), ("edge", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqTriggerType.setStatus('current')
hwirqVector = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwirqVector.setStatus('current')
win32MemoryArrayTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12), )
if mibBuilder.loadTexts: win32MemoryArrayTable.setStatus('current')
win32MemoryArrayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1), ).setIndexNames((0, "INFORMANT-HW", "hwmaIndex"))
if mibBuilder.loadTexts: win32MemoryArrayEntry.setStatus('current')
hwmaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaIndex.setStatus('current')
hwmaAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("readable", 1), ("writable", 2), ("readWriteSupported", 3), ("writeOnce", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaAccess.setStatus('current')
hwmaAdditionalErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaAdditionalErrorData.setStatus('current')
hwmaAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaAvailability.setStatus('current')
hwmaBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaBlockSize.setStatus('current')
hwmaCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaCaption.setStatus('current')
hwmaConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaConfigManagerErrorCode.setStatus('current')
hwmaConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaConfigManagerUserConfig.setStatus('current')
hwmaCorrectableError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaCorrectableError.setStatus('current')
hwmaCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 10), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaCreationClassName.setStatus('current')
hwmaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaDescription.setStatus('current')
hwmaDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaDeviceID.setStatus('current')
hwmaEndingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaEndingAddress.setStatus('current')
hwmaErrorAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("read", 3), ("write", 4), ("partialWrite", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorAccess.setStatus('current')
hwmaErrorAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorAddress.setStatus('current')
hwmaErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorCleared.setStatus('current')
hwmaErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorData.setStatus('current')
hwmaErrorDataOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("leastSignificantByteFirst", 1), ("mostSignificantByteFirst", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorDataOrder.setStatus('current')
hwmaErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorDescription.setStatus('current')
hwmaErrorGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("deviceLevel", 3), ("memoryPartitionLevel", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorGranularity.setStatus('current')
hwmaErrorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("ok", 3), ("badRead", 4), ("parityError", 5), ("singleBitError", 6), ("doubleBitError", 7), ("multiBitError", 8), ("nibbleError", 9), ("checksumError", 10), ("crcError", 11), ("correctedSinglebitError", 12), ("correctedError", 13), ("uncorrectableError", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorInfo.setStatus('current')
hwmaErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("none", 3), ("parity", 4), ("singleBitECC", 5), ("multiBitECC", 6), ("crc", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorMethodology.setStatus('current')
hwmaErrorResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorResolution.setStatus('current')
hwmaErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorTime.setStatus('current')
hwmaErrorTransferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaErrorTransferSize.setStatus('current')
hwmaInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaInstallDate.setStatus('current')
hwmaLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaLastErrorCode.setStatus('current')
hwmaName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaName.setStatus('current')
hwmaNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaNumberOfBlocks.setStatus('current')
hwmaOtherErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaOtherErrorDescription.setStatus('current')
hwmaPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaPNPDeviceID.setStatus('current')
hwmaPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaPowerManagementCapabilities.setStatus('current')
hwmaPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaPowerManagementSupported.setStatus('current')
hwmaPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaPurpose.setStatus('current')
hwmaStartingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaStartingAddress.setStatus('current')
hwmaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaStatus.setStatus('current')
hwmaStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaStatusInfo.setStatus('current')
hwmaSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 38), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaSystemCreationClassName.setStatus('current')
hwmaSystemLevelAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 39), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaSystemLevelAddress.setStatus('current')
hwmaSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmaSystemName.setStatus('current')
win32MemoryDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13), )
if mibBuilder.loadTexts: win32MemoryDeviceTable.setStatus('current')
win32MemoryDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1), ).setIndexNames((0, "INFORMANT-HW", "hwmmIndex"))
if mibBuilder.loadTexts: win32MemoryDeviceEntry.setStatus('current')
hwmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmIndex.setStatus('current')
hwmmAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("readable", 1), ("writable", 2), ("readWriteSupported", 3), ("writeOnce", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmAccess.setStatus('current')
hwmmAdditionalErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmAdditionalErrorData.setStatus('current')
hwmmAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmAvailability.setStatus('current')
hwmmBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmBlockSize.setStatus('current')
hwmmCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmCaption.setStatus('current')
hwmmConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmConfigManagerErrorCode.setStatus('current')
hwmmConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmConfigManagerUserConfig.setStatus('current')
hwmmCorrectableError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmCorrectableError.setStatus('current')
hwmmCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 10), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmCreationClassName.setStatus('current')
hwmmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmDescription.setStatus('current')
hwmmDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmDeviceID.setStatus('current')
hwmmEndingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmEndingAddress.setStatus('current')
hwmmErrorAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("read", 3), ("write", 4), ("partialWrite", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorAccess.setStatus('current')
hwmmErrorAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorAddress.setStatus('current')
hwmmErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorCleared.setStatus('current')
hwmmErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorData.setStatus('current')
hwmmErrorDataOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("leastSignificantByteFirst", 1), ("mostSignificantByteFirst", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorDataOrder.setStatus('current')
hwmmErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorDescription.setStatus('current')
hwmmErrorGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("deviceLevel", 3), ("memoryPartitionLevel", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorGranularity.setStatus('current')
hwmmErrorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("ok", 3), ("badRead", 4), ("parityError", 5), ("singleBitError", 6), ("doubleBitError", 7), ("multiBitError", 8), ("nibbleError", 9), ("checksumError", 10), ("crcError", 11), ("correctedSinglebitError", 12), ("correctedError", 13), ("uncorrectableError", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorInfo.setStatus('current')
hwmmErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("name", 3), ("parity", 4), ("singleBitECC", 5), ("multiBitECC", 6), ("crc", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorMethodology.setStatus('current')
hwmmErrorResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorResolution.setStatus('current')
hwmmErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorTime.setStatus('current')
hwmmErrorTransferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmErrorTransferSize.setStatus('current')
hwmmInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmInstallDate.setStatus('current')
hwmmLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmLastErrorCode.setStatus('current')
hwmmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmName.setStatus('current')
hwmmNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmNumberOfBlocks.setStatus('current')
hwmmOtherErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmOtherErrorDescription.setStatus('current')
hwmmPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmPNPDeviceID.setStatus('current')
hwmmPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmPowerManagementCapabilities.setStatus('current')
hwmmPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmPowerManagementSupported.setStatus('current')
hwmmPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmPurpose.setStatus('current')
hwmmStartingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmStartingAddress.setStatus('current')
hwmmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmStatus.setStatus('current')
hwmmStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmStatusInfo.setStatus('current')
hwmmSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 38), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmSystemCreationClassName.setStatus('current')
hwmmSystemLevelAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 39), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmSystemLevelAddress.setStatus('current')
hwmmSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmmSystemName.setStatus('current')
win32MotherboardDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14), )
if mibBuilder.loadTexts: win32MotherboardDeviceTable.setStatus('current')
win32MotherboardDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1), ).setIndexNames((0, "INFORMANT-HW", "hwmbIndex"))
if mibBuilder.loadTexts: win32MotherboardDeviceEntry.setStatus('current')
hwmbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbIndex.setStatus('current')
hwmbAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbAvailability.setStatus('current')
hwmbCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbCaption.setStatus('current')
hwmbConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbConfigManagerErrorCode.setStatus('current')
hwmbConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbConfigManagerUserConfig.setStatus('current')
hwmbCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbCreationClassName.setStatus('current')
hwmbDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbDescription.setStatus('current')
hwmbDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbDeviceID.setStatus('current')
hwmbErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbErrorCleared.setStatus('current')
hwmbErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbErrorDescription.setStatus('current')
hwmbInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbInstallDate.setStatus('current')
hwmbLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbLastErrorCode.setStatus('current')
hwmbName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbName.setStatus('current')
hwmbPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbPNPDeviceID.setStatus('current')
hwmbPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbPowerManagementCapabilities.setStatus('current')
hwmbPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbPowerManagementSupported.setStatus('current')
hwmbPrimaryBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbPrimaryBusType.setStatus('current')
hwmbRevisionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbRevisionNumber.setStatus('current')
hwmbSecondaryBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbSecondaryBusType.setStatus('current')
hwmbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbStatus.setStatus('current')
hwmbStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbStatusInfo.setStatus('current')
hwmbSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbSystemCreationClassName.setStatus('current')
hwmbSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwmbSystemName.setStatus('current')
win32OnBoardDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15), )
if mibBuilder.loadTexts: win32OnBoardDeviceTable.setStatus('current')
win32OnBoardDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1), ).setIndexNames((0, "INFORMANT-HW", "hwobIndex"))
if mibBuilder.loadTexts: win32OnBoardDeviceEntry.setStatus('current')
hwobIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobIndex.setStatus('current')
hwobCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobCaption.setStatus('current')
hwobCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobCreationClassName.setStatus('current')
hwobDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobDescription.setStatus('current')
hwobDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("video", 3), ("scsiController", 4), ("ethernet", 5), ("tokenRing", 6), ("sound", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobDeviceType.setStatus('current')
hwobEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobEnabled.setStatus('current')
hwobHotSwappable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobHotSwappable.setStatus('current')
hwobInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobInstallDate.setStatus('current')
hwobManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobManufacturer.setStatus('current')
hwobModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobModel.setStatus('current')
hwobName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobName.setStatus('current')
hwobOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobOtherIdentifyingInfo.setStatus('current')
hwobPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobPartNumber.setStatus('current')
hwobPoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobPoweredOn.setStatus('current')
hwobRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobRemovable.setStatus('current')
hwobReplaceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobReplaceable.setStatus('current')
hwobSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobSerialNumber.setStatus('current')
hwobSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobSKU.setStatus('current')
hwobStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobStatus.setStatus('current')
hwobTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 20), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobTag.setStatus('current')
hwobVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwobVersion.setStatus('current')
win32ParallelPortTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16), )
if mibBuilder.loadTexts: win32ParallelPortTable.setStatus('current')
win32ParallelPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1), ).setIndexNames((0, "INFORMANT-HW", "hwppIndex"))
if mibBuilder.loadTexts: win32ParallelPortEntry.setStatus('current')
hwppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppIndex.setStatus('current')
hwppAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppAvailability.setStatus('current')
hwppCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppCapabilities.setStatus('current')
hwppCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppCapabilityDescriptions.setStatus('current')
hwppCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppCaption.setStatus('current')
hwppConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppConfigManagerErrorCode.setStatus('current')
hwppConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppConfigManagerUserConfig.setStatus('current')
hwppCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppCreationClassName.setStatus('current')
hwppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppDescription.setStatus('current')
hwppDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppDeviceID.setStatus('current')
hwppDMASupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppDMASupport.setStatus('current')
hwppErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppErrorCleared.setStatus('current')
hwppErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppErrorDescription.setStatus('current')
hwppInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppInstallDate.setStatus('current')
hwppLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppLastErrorCode.setStatus('current')
hwppMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppMaxNumberControlled.setStatus('current')
hwppName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppName.setStatus('current')
hwppOSAutoDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppOSAutoDiscovered.setStatus('current')
hwppPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppPNPDeviceID.setStatus('current')
hwppPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppPowerManagementCapabilities.setStatus('current')
hwppPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppPowerManagementSupported.setStatus('current')
hwppProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("eisa", 3), ("isa", 4), ("pci", 5), ("ataATAPI", 6), ("flexibleDiskette", 7), ("n1496", 8), ("scsiParallelInterface", 9), ("scsiFibreChannelProtocol", 10), ("scsiSerialBusProtocol", 11), ("scsiSerialBusProtocol1394", 12), ("scsiSerialStorageArchitecture", 13), ("vesa", 14), ("pcmcia", 15), ("universalSerialBus", 16), ("parallelProtocol", 17), ("escon", 18), ("diagnostic", 19), ("i2C", 20), ("power", 21), ("hippi", 22), ("multiBus", 23), ("vme", 24), ("ipi", 25), ("ieee488", 26), ("rs232", 27), ("ieee802310BASE5", 28), ("ieee802310BASE2", 29), ("ieee80231BASES", 30), ("ieee802310BROAD36", 31), ("ieee8023100BASEVG", 32), ("ieee8025TokenRing", 33), ("ansiX3T95FDDI", 34), ("mca", 35), ("esdi", 36), ("ide", 37), ("cmd", 38), ("st506", 39), ("dssi", 40), ("qic2", 41), ("enhancedATAIDE", 42), ("agp", 43), ("twowayInfrared", 44), ("fastInfrared", 45), ("serialInfrared", 46), ("irBus", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppProtocolSupported.setStatus('current')
hwppStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppStatus.setStatus('current')
hwppStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppStatusInfo.setStatus('current')
hwppSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppSystemCreationClassName.setStatus('current')
hwppSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppSystemName.setStatus('current')
hwppTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwppTimeOfLastReset.setStatus('current')
win32PCMCIAControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17), )
if mibBuilder.loadTexts: win32PCMCIAControllerTable.setStatus('current')
win32PCMCIAControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpcmIndex"))
if mibBuilder.loadTexts: win32PCMCIAControllerEntry.setStatus('current')
hwpcmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmIndex.setStatus('current')
hwpcmAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmAvailability.setStatus('current')
hwpcmCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmCaption.setStatus('current')
hwpcmConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmConfigManagerErrorCode.setStatus('current')
hwpcmConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmConfigManagerUserConfig.setStatus('current')
hwpcmCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmCreationClassName.setStatus('current')
hwpcmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmDescription.setStatus('current')
hwpcmDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmDeviceID.setStatus('current')
hwpcmErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmErrorCleared.setStatus('current')
hwpcmErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmErrorDescription.setStatus('current')
hwpcmInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmInstallDate.setStatus('current')
hwpcmLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmLastErrorCode.setStatus('current')
hwpcmManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmManufacturer.setStatus('current')
hwpcmMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmMaxNumberControlled.setStatus('current')
hwpcmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmName.setStatus('current')
hwpcmPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmPNPDeviceID.setStatus('current')
hwpcmPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmPowerManagementCapabilities.setStatus('current')
hwpcmPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmPowerManagementSupported.setStatus('current')
hwpcmProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("eisa", 3), ("isa", 4), ("pci", 5), ("ataATAPI", 6), ("flexibleDiskette", 7), ("n1496", 8), ("scsiParallelInterface", 9), ("scsiFibreChannelProtocol", 10), ("scsiSerialBusProtocol", 11), ("scsiSerialBusProtocol1394", 12), ("scsiSerialStorageArchitecture", 13), ("vesa", 14), ("pcmcia", 15), ("universalSerialBus", 16), ("parallelProtocol", 17), ("escon", 18), ("diagnostic", 19), ("i2C", 20), ("power", 21), ("hippi", 22), ("multiBus", 23), ("vme", 24), ("ipi", 25), ("ieee488", 26), ("rs232", 27), ("ieee802310BASE5", 28), ("ieee802310BASE2", 29), ("ieee80231BASE5", 30), ("ieee802310BROAD36", 31), ("ieee8023100BASEVG", 32), ("ieee8025TokenRing", 33), ("ansiX3T95FDDI", 34), ("mca", 35), ("esdi", 36), ("ide", 37), ("cmd", 38), ("st506", 39), ("dssi", 40), ("qic2", 41), ("enhancedATAIDE", 42), ("agp", 43), ("twoWayInfrared", 44), ("fastInfrared", 45), ("serialInfrared", 46), ("irBus", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmProtocolSupported.setStatus('current')
hwpcmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmStatus.setStatus('current')
hwpcmStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmStatusInfo.setStatus('current')
hwpcmSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmSystemCreationClassName.setStatus('current')
hwpcmSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmSystemName.setStatus('current')
hwpcmTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcmTimeOfLastReset.setStatus('current')
win32PhysicalMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18), )
if mibBuilder.loadTexts: win32PhysicalMemoryTable.setStatus('current')
win32PhysicalMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpmmIndex"))
if mibBuilder.loadTexts: win32PhysicalMemoryEntry.setStatus('current')
hwpmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmIndex.setStatus('current')
hwpmmBankLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmBankLabel.setStatus('current')
hwpmmCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmCapacity.setStatus('current')
hwpmmCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmCaption.setStatus('current')
hwpmmCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmCreationClassName.setStatus('current')
hwpmmDataWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmDataWidth.setStatus('current')
hwpmmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmDescription.setStatus('current')
hwpmmDeviceLocator = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmDeviceLocator.setStatus('current')
hwpmmFormFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("sip", 2), ("dip", 3), ("zip", 4), ("soj", 5), ("proprietary", 6), ("simm", 7), ("dimm", 8), ("tsop", 9), ("pga", 10), ("rimm", 11), ("sodimm", 12), ("srimm", 13), ("smd", 14), ("ssmp", 15), ("qfp", 16), ("tqfp", 17), ("soic", 18), ("lcc", 19), ("plcc", 20), ("bga", 21), ("fpbga", 22), ("lga", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmFormFactor.setStatus('current')
hwpmmHotSwappable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmHotSwappable.setStatus('current')
hwpmmInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmInstallDate.setStatus('current')
hwpmmInterleaveDataDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmInterleaveDataDepth.setStatus('current')
hwpmmInterleavePosition = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noninterleaved", 0), ("firstPosition", 1), ("secondPosition", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmInterleavePosition.setStatus('current')
hwpmmManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmManufacturer.setStatus('current')
hwpmmMemoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("dram", 2), ("synchronousDRAM", 3), ("cacheDRAM", 4), ("edo", 5), ("edram", 6), ("vram", 7), ("sram", 8), ("ram", 9), ("rom", 10), ("flash", 11), ("eeprom", 12), ("feprom", 13), ("eprom", 14), ("cdram", 15), ("n3DRAM", 16), ("sdram", 17), ("sgram", 18), ("rdram", 19), ("ddr", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmMemoryType.setStatus('current')
hwpmmModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmModel.setStatus('current')
hwpmmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmName.setStatus('current')
hwpmmOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmOtherIdentifyingInfo.setStatus('current')
hwpmmPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmPartNumber.setStatus('current')
hwpmmPositionInRow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmPositionInRow.setStatus('current')
hwpmmPoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmPoweredOn.setStatus('current')
hwpmmRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmRemovable.setStatus('current')
hwpmmReplaceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmReplaceable.setStatus('current')
hwpmmSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmSerialNumber.setStatus('current')
hwpmmSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmSKU.setStatus('current')
hwpmmSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmSpeed.setStatus('current')
hwpmmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmStatus.setStatus('current')
hwpmmTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 28), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmTag.setStatus('current')
hwpmmTotalWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmTotalWidth.setStatus('current')
hwpmmTypeDetail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("reserved", 1), ("other", 2), ("unknown", 4), ("fastpaged", 8), ("staticColumn", 16), ("pseudostatic", 32), ("rambus", 64), ("synchronous", 128), ("cmos", 256), ("edo", 512), ("windowDRAM", 1024), ("cacheDRAM", 2048), ("nonvolatile", 4096)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmTypeDetail.setStatus('current')
hwpmmVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmmVersion.setStatus('current')
win32PhysicalMemoryArrayTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19), )
if mibBuilder.loadTexts: win32PhysicalMemoryArrayTable.setStatus('current')
win32PhysicalMemoryArrayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpmaIndex"))
if mibBuilder.loadTexts: win32PhysicalMemoryArrayEntry.setStatus('current')
hwpmaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaIndex.setStatus('current')
hwpmaCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaCaption.setStatus('current')
hwpmaCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaCreationClassName.setStatus('current')
hwpmaDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaDepth.setStatus('current')
hwpmaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaDescription.setStatus('current')
hwpmaHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaHeight.setStatus('current')
hwpmaHotSwappable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaHotSwappable.setStatus('current')
hwpmaInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaInstallDate.setStatus('current')
hwpmaLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("reserved", 0), ("other", 1), ("unknown", 2), ("systemBoardOrMotherboard", 3), ("isaAddonCard", 4), ("eisaAddonCard", 5), ("pciAddonCard", 6), ("mcaAddonCard", 7), ("pcmciaAddonCard", 8), ("proprietaryAddonCard", 9), ("nuBus", 10), ("pc98C20AddonCard", 11), ("pc98C24AddonCard", 12), ("pc98EAddonCard", 13), ("pc98LocalBusAddonCard", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaLocation.setStatus('current')
hwpmaManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaManufacturer.setStatus('current')
hwpmaMaxCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 11), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaMaxCapacity.setStatus('current')
hwpmaMemoryDevices = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaMemoryDevices.setStatus('current')
hwpmaMemoryErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("reserved", 0), ("other", 1), ("unknown", 2), ("none", 3), ("parity", 4), ("singlebitECC", 5), ("multibitECC", 6), ("crc", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaMemoryErrorCorrection.setStatus('current')
hwpmaModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaModel.setStatus('current')
hwpmaName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaName.setStatus('current')
hwpmaOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaOtherIdentifyingInfo.setStatus('current')
hwpmaPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaPartNumber.setStatus('current')
hwpmaPoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaPoweredOn.setStatus('current')
hwpmaRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaRemovable.setStatus('current')
hwpmaReplaceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaReplaceable.setStatus('current')
hwpmaSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaSerialNumber.setStatus('current')
hwpmaSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaSKU.setStatus('current')
hwpmaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaStatus.setStatus('current')
hwpmaTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 24), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaTag.setStatus('current')
hwpmaUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("reserved", 0), ("other", 1), ("unknown", 2), ("systemMemory", 3), ("videoMemory", 4), ("flashMemory", 5), ("nonvolatileRAM", 6), ("cacheMemory", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaUse.setStatus('current')
hwpmaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaVersion.setStatus('current')
hwpmaWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaWeight.setStatus('current')
hwpmaWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmaWidth.setStatus('current')
win32PnPEntityTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20), )
if mibBuilder.loadTexts: win32PnPEntityTable.setStatus('current')
win32PnPEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpnpIndex"))
if mibBuilder.loadTexts: win32PnPEntityEntry.setStatus('current')
hwpnpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpIndex.setStatus('current')
hwpnpAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpAvailability.setStatus('current')
hwpnpCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpCaption.setStatus('current')
hwpnpClassGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpClassGuid.setStatus('current')
hwpnpConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpConfigManagerErrorCode.setStatus('current')
hwpnpConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpConfigManagerUserConfig.setStatus('current')
hwpnpCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpCreationClassName.setStatus('current')
hwpnpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpDescription.setStatus('current')
hwpnpDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpDeviceID.setStatus('current')
hwpnpErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpErrorCleared.setStatus('current')
hwpnpErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpErrorDescription.setStatus('current')
hwpnpInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpInstallDate.setStatus('current')
hwpnpLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpLastErrorCode.setStatus('current')
hwpnpManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpManufacturer.setStatus('current')
hwpnpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpName.setStatus('current')
hwpnpPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpPNPDeviceID.setStatus('current')
hwpnpPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpPowerManagementCapabilities.setStatus('current')
hwpnpPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpPowerManagementSupported.setStatus('current')
hwpnpService = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpService.setStatus('current')
hwpnpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpStatus.setStatus('current')
hwpnpStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpStatusInfo.setStatus('current')
hwpnpSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpSystemCreationClassName.setStatus('current')
hwpnpSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpnpSystemName.setStatus('current')
win32PnPSignedDriverTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21), )
if mibBuilder.loadTexts: win32PnPSignedDriverTable.setStatus('current')
win32PnPSignedDriverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpsdIndex"))
if mibBuilder.loadTexts: win32PnPSignedDriverEntry.setStatus('current')
hwpsdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdIndex.setStatus('current')
hwpsdClassGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdClassGuid.setStatus('current')
hwpsdCompatID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdCompatID.setStatus('current')
hwpsdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDescription.setStatus('current')
hwpsdDeviceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDeviceClass.setStatus('current')
hwpsdDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDeviceID.setStatus('current')
hwpsdDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDeviceName.setStatus('current')
hwpsdDevLoader = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDevLoader.setStatus('current')
hwpsdDriverDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDriverDate.setStatus('current')
hwpsdDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDriverName.setStatus('current')
hwpsdDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdDriverVersion.setStatus('current')
hwpsdFriendlyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdFriendlyName.setStatus('current')
hwpsdHardWareID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdHardWareID.setStatus('current')
hwpsdInfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdInfName.setStatus('current')
hwpsdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdInstallDate.setStatus('current')
hwpsdIsSigned = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdIsSigned.setStatus('current')
hwpsdLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdLocation.setStatus('current')
hwpsdManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdManufacturer.setStatus('current')
hwpsdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdName.setStatus('current')
hwpsdPDO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdPDO.setStatus('current')
hwpsdProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdProviderName.setStatus('current')
hwpsdSigner = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdSigner.setStatus('current')
hwpsdStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdStarted.setStatus('current')
hwpsdStartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdStartMode.setStatus('current')
hwpsdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdStatus.setStatus('current')
hwpsdSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdSystemCreationClassName.setStatus('current')
hwpsdSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpsdSystemName.setStatus('current')
win32PortConnectorTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22), )
if mibBuilder.loadTexts: win32PortConnectorTable.setStatus('current')
win32PortConnectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpcIndex"))
if mibBuilder.loadTexts: win32PortConnectorEntry.setStatus('current')
hwpcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcIndex.setStatus('current')
hwpcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcCaption.setStatus('current')
hwpcConnectorPinout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcConnectorPinout.setStatus('current')
hwpcConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcConnectorType.setStatus('current')
hwpcCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcCreationClassName.setStatus('current')
hwpcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcDescription.setStatus('current')
hwpcExternalReferenceDesignator = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcExternalReferenceDesignator.setStatus('current')
hwpcInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcInstallDate.setStatus('current')
hwpcInternalReferenceDesignator = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcInternalReferenceDesignator.setStatus('current')
hwpcManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcManufacturer.setStatus('current')
hwpcModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcModel.setStatus('current')
hwpcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcName.setStatus('current')
hwpcOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcOtherIdentifyingInfo.setStatus('current')
hwpcPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcPartNumber.setStatus('current')
hwpcPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("none", 0), ("parallelPortXTATCompatible", 1), ("parallelPortPS2", 2), ("parallelPortECP", 3), ("parallelPortEPP", 4), ("parallelPortECPEPP", 5), ("serialPortXTATCompatible", 6), ("serialPort16450Compatible", 7), ("serialPort16550Compatible", 8), ("serialPort16550ACompatible", 9), ("scsiPort", 10), ("midiPort", 11), ("joyStickPort", 12), ("keyboardPort", 13), ("mousePort", 14), ("ssaSCSI", 15), ("usb", 16), ("fireWire", 17), ("pcmciaTypeII", 18), ("pcmciaTypeII2", 19), ("cardbus", 20), ("accessBusPort", 21), ("scsiII", 22), ("scsiWide", 23), ("pc98", 24), ("pc98Hireso", 25), ("pcH98", 26), ("audioPort", 27), ("modemPort", 28), ("networkPort", 29), ("n8251Compatible", 30), ("n8251FIFOCompatible", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcPortType.setStatus('current')
hwpcPoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcPoweredOn.setStatus('current')
hwpcSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcSerialNumber.setStatus('current')
hwpcSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcSKU.setStatus('current')
hwpcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcStatus.setStatus('current')
hwpcTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 20), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcTag.setStatus('current')
hwpcVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpcVersion.setStatus('current')
win32PortResourceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23), )
if mibBuilder.loadTexts: win32PortResourceTable.setStatus('current')
win32PortResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpreIndex"))
if mibBuilder.loadTexts: win32PortResourceEntry.setStatus('current')
hwpreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreIndex.setStatus('current')
hwpreAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreAlias.setStatus('current')
hwpreCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreCaption.setStatus('current')
hwpreCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreCreationClassName.setStatus('current')
hwpreCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreCSCreationClassName.setStatus('current')
hwpreCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreCSName.setStatus('current')
hwpreDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreDescription.setStatus('current')
hwpreEndingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreEndingAddress.setStatus('current')
hwpreInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreInstallDate.setStatus('current')
hwpreName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreName.setStatus('current')
hwpreStartingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreStartingAddress.setStatus('current')
hwpreStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpreStatus.setStatus('current')
win32ProcessorTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24), )
if mibBuilder.loadTexts: win32ProcessorTable.setStatus('current')
win32ProcessorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1), ).setIndexNames((0, "INFORMANT-HW", "hwcpuIndex"))
if mibBuilder.loadTexts: win32ProcessorEntry.setStatus('current')
hwcpuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuIndex.setStatus('current')
hwcpuAddressWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuAddressWidth.setStatus('current')
hwcpuArchitecture = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 6))).clone(namedValues=NamedValues(("x86", 0), ("mips", 1), ("alpha", 2), ("powerPC", 3), ("ia64", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuArchitecture.setStatus('current')
hwcpuAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningOrFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuAvailability.setStatus('current')
hwcpuCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuCaption.setStatus('current')
hwcpuConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuConfigManagerErrorCode.setStatus('current')
hwcpuConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuConfigManagerUserConfig.setStatus('current')
hwcpuCpuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("cpuEnabled", 1), ("cpuDisabledByUserViaBIOSSetup", 2), ("cpuDisabledByBIOS", 3), ("cpuIsIdle", 4), ("reserved", 5), ("reserved2", 6), ("other", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuCpuStatus.setStatus('current')
hwcpuCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuCreationClassName.setStatus('current')
hwcpuCurrentClockSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 10), Gauge32()).setUnits('MegaHertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuCurrentClockSpeed.setStatus('current')
hwcpuCurrentVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 11), Integer32()).setUnits('tenth-Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuCurrentVoltage.setStatus('current')
hwcpuDataWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuDataWidth.setStatus('current')
hwcpuDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuDescription.setStatus('current')
hwcpuDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuDeviceID.setStatus('current')
hwcpuErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuErrorCleared.setStatus('current')
hwcpuErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuErrorDescription.setStatus('current')
hwcpuExtClock = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 17), Gauge32()).setUnits('MegaHertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuExtClock.setStatus('current')
hwcpuFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 112, 120, 121, 128, 130, 144, 145, 146, 147, 148, 149, 150, 160, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 200, 201, 202, 250, 251, 260, 261, 280, 281, 300, 301, 302, 320, 350, 500))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("n8086", 3), ("n80286", 4), ("n80386", 5), ("n80486", 6), ("n8087", 7), ("n80287", 8), ("n80387", 9), ("n80487", 10), ("pentiumBrand", 11), ("pentiumPro", 12), ("pentiumII", 13), ("pentiumProcessorMMX", 14), ("celeron", 15), ("pentiumIIXeon", 16), ("pentiumIII", 17), ("m1Family", 18), ("m2Family", 19), ("k5Family", 24), ("k6Family", 25), ("k62", 26), ("k63", 27), ("amdAthlonProcessorFamily", 28), ("amdDuronProcessor", 29), ("amd2900Family", 30), ("k62plus", 31), ("powerPCFamily", 32), ("powerPC601", 33), ("powerPC603", 34), ("powerPC603plus", 35), ("powerPC604", 36), ("powerPC620", 37), ("powerPCX704", 38), ("powerPC750", 39), ("alphaFamily", 48), ("alpha21064", 49), ("alpha21066", 50), ("alpha21164", 51), ("alpha21164PC", 52), ("alpha21164a", 53), ("alpha21264", 54), ("alpha21364", 55), ("mipsFamily", 64), ("mipsR4000", 65), ("mipsR4200", 66), ("mipsR4400", 67), ("mipsR4600", 68), ("mipsR10000", 69), ("sparcFamily", 80), ("superSPARC", 81), ("microSPARCII", 82), ("microSPARCIIep", 83), ("ultraSPARC", 84), ("ultraSPARCII", 85), ("ultraSPARCIIi", 86), ("ultraSPARCIII", 87), ("ultraSPARCIIIi", 88), ("n68040", 96), ("n68xxxFamily", 97), ("n68000", 98), ("n68010", 99), ("n68020", 100), ("n68030", 101), ("hobbitFamily", 112), ("crusoeTM5000Family", 120), ("crusoeTM3000Family", 121), ("weitek", 128), ("itaniumProcessor", 130), ("paRISCFamily", 144), ("paRISC8500", 145), ("paRISC8000", 146), ("paRISC7300LC", 147), ("paRISC7200", 148), ("paRISC7100LC", 149), ("paRISC7100", 150), ("v30Family", 160), ("pentiumIIIXeon", 176), ("pentiumIIIProcessorSpeedStep", 177), ("pentium4", 178), ("intelXeon", 179), ("as400Family", 180), ("intelXeonProcessorMP", 181), ("amdAthlonXPFamily", 182), ("amdAthlonMPFamily", 183), ("intelItanium2", 184), ("amdOpteronFamily", 185), ("k7", 190), ("ibm390Family", 200), ("g4", 201), ("g5", 202), ("i860", 250), ("i960", 251), ("sh3", 260), ("sh4", 261), ("arm", 280), ("strongARM", 281), ("n6x86", 300), ("mediaGX", 301), ("mii", 302), ("winChip", 320), ("dsp", 350), ("videoProcessor", 500)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuFamily.setStatus('current')
hwcpuInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuInstallDate.setStatus('current')
hwcpuL2CacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 20), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuL2CacheSize.setStatus('current')
hwcpuL2CacheSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 21), Gauge32()).setUnits('MegaHertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuL2CacheSpeed.setStatus('current')
hwcpuLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuLastErrorCode.setStatus('current')
hwcpuLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuLevel.setStatus('current')
hwcpuLoadPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 24), Integer32()).setUnits('Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuLoadPercentage.setStatus('current')
hwcpuManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuManufacturer.setStatus('current')
hwcpuMaxClockSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 26), Gauge32()).setUnits('MegaHertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuMaxClockSpeed.setStatus('current')
hwcpuName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuName.setStatus('current')
hwcpuOtherFamilyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 28), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuOtherFamilyDescription.setStatus('current')
hwcpuPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuPNPDeviceID.setStatus('current')
hwcpuPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuPowerManagementCapabilities.setStatus('current')
hwcpuPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuPowerManagementSupported.setStatus('current')
hwcpuProcessorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuProcessorId.setStatus('current')
hwcpuProcessorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("centralProcessor", 3), ("mathProcessor", 4), ("dspProcessor", 5), ("videoProcessor", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuProcessorType.setStatus('current')
hwcpuRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuRevision.setStatus('current')
hwcpuRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 35), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuRole.setStatus('current')
hwcpuSocketDesignation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuSocketDesignation.setStatus('current')
hwcpuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuStatus.setStatus('current')
hwcpuStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuStatusInfo.setStatus('current')
hwcpuStepping = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 39), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuStepping.setStatus('current')
hwcpuSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuSystemCreationClassName.setStatus('current')
hwcpuSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 41), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuSystemName.setStatus('current')
hwcpuUniqueId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 42), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuUniqueId.setStatus('current')
hwcpuUpgradeMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("daughterBoard", 3), ("zifSocket", 4), ("replacementPiggyBack", 5), ("none", 6), ("lifSocket", 7), ("slot1", 8), ("slot2", 9), ("n370PinSocket", 10), ("slotA", 11), ("slotM", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuUpgradeMethod.setStatus('current')
hwcpuVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 44), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuVersion.setStatus('current')
hwcpuVoltageCaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("n5", 1), ("n33", 2), ("n29", 4)))).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuVoltageCaps.setStatus('current')
hwcpuL3CacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 46), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuL3CacheSize.setStatus('current')
hwcpuL3CacheSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 47), Gauge32()).setUnits('MegaHertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuL3CacheSpeed.setStatus('current')
hwcpuNumberOfCores = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuNumberOfCores.setStatus('current')
hwcpuNumberOfLogicalProcessors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpuNumberOfLogicalProcessors.setStatus('current')
win32SCSIControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25), )
if mibBuilder.loadTexts: win32SCSIControllerTable.setStatus('current')
win32SCSIControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1), ).setIndexNames((0, "INFORMANT-HW", "hwscsiIndex"))
if mibBuilder.loadTexts: win32SCSIControllerEntry.setStatus('current')
hwscsiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiIndex.setStatus('current')
hwscsiAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiAvailability.setStatus('current')
hwscsiCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiCaption.setStatus('current')
hwscsiConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiConfigManagerErrorCode.setStatus('current')
hwscsiConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiConfigManagerUserConfig.setStatus('current')
hwscsiControllerTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiControllerTimeouts.setStatus('current')
hwscsiCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiCreationClassName.setStatus('current')
hwscsiDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiDescription.setStatus('current')
hwscsiDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiDeviceID.setStatus('current')
hwscsiDeviceMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiDeviceMap.setStatus('current')
hwscsiDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiDriverName.setStatus('current')
hwscsiErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiErrorCleared.setStatus('current')
hwscsiErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiErrorDescription.setStatus('current')
hwscsiHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiHardwareVersion.setStatus('current')
hwscsiRegistryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiRegistryIndex.setStatus('current')
hwscsiInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiInstallDate.setStatus('current')
hwscsiLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiLastErrorCode.setStatus('current')
hwscsiManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiManufacturer.setStatus('current')
hwscsiMaxDataWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiMaxDataWidth.setStatus('current')
hwscsiMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiMaxNumberControlled.setStatus('current')
hwscsiMaxTransferRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiMaxTransferRate.setStatus('current')
hwscsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiName.setStatus('current')
hwscsiPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiPNPDeviceID.setStatus('current')
hwscsiPowerManagementCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiPowerManagementCapability.setStatus('current')
hwscsiPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiPowerManagementSupported.setStatus('current')
hwscsiProtectionManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("unprotected", 3), ("protected", 4), ("protectedThroughSCC", 5), ("protectedThroughSCC2", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiProtectionManagement.setStatus('current')
hwscsiProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46))).clone(namedValues=NamedValues(("other", 0), ("unknown", 1), ("eisa", 2), ("isa", 3), ("pci", 4), ("ataATAPI", 5), ("flexibleDiskette", 6), ("n1496", 7), ("scsiParallelInterface", 8), ("scsiFibreChannelProtocol", 9), ("scsiSerialBusProtocol", 10), ("scsiSerialBusProtocol1394", 11), ("scsiSerialStorageArchitecture", 12), ("vesa", 13), ("pcmcia", 14), ("universalSerialBus", 15), ("parallelProtocol", 16), ("escon", 17), ("diagnostic", 18), ("i2C", 19), ("power", 20), ("hippi", 21), ("multiBus", 22), ("vme", 23), ("ipi", 24), ("ieee488", 25), ("rs232", 26), ("ieee802310BASE5", 27), ("ieee802310BASE2", 28), ("ieee80231BASE5", 29), ("ieee802310BROAD36", 30), ("ieee8023100BASEVG", 31), ("ieee8025TokenRing", 32), ("ansiX3T95FDDI", 33), ("mca", 34), ("esdi", 35), ("ide", 36), ("cmd", 37), ("st506", 38), ("dssi", 39), ("qic2", 40), ("enhancedATAIDE", 41), ("agp", 42), ("twowayInfrared", 43), ("fastInfrared", 44), ("serialInfrared", 45), ("irBus", 46)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiProtocolSupported.setStatus('current')
hwscsiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiStatus.setStatus('current')
hwscsiStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiStatusInfo.setStatus('current')
hwscsiSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiSystemCreationClassName.setStatus('current')
hwscsiSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiSystemName.setStatus('current')
hwscsiTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 32), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwscsiTimeOfLastReset.setStatus('current')
win32SerialPortTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26), )
if mibBuilder.loadTexts: win32SerialPortTable.setStatus('current')
win32SerialPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1), ).setIndexNames((0, "INFORMANT-HW", "hwspIndex"))
if mibBuilder.loadTexts: win32SerialPortEntry.setStatus('current')
hwspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspIndex.setStatus('current')
hwspAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspAvailability.setStatus('current')
hwspBinary = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspBinary.setStatus('current')
hwspCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspCapabilities.setStatus('current')
hwspCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspCapabilityDescriptions.setStatus('current')
hwspCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspCaption.setStatus('current')
hwspConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspConfigManagerErrorCode.setStatus('current')
hwspConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspConfigManagerUserConfig.setStatus('current')
hwspCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspCreationClassName.setStatus('current')
hwspDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspDescription.setStatus('current')
hwspDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspDeviceID.setStatus('current')
hwspErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspErrorCleared.setStatus('current')
hwspErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspErrorDescription.setStatus('current')
hwspInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspInstallDate.setStatus('current')
hwspLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspLastErrorCode.setStatus('current')
hwspMaxBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 16), Gauge32()).setUnits('Bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspMaxBaudRate.setStatus('current')
hwspMaximumInputBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 17), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspMaximumInputBufferSize.setStatus('current')
hwspMaximumOutputBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 18), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspMaximumOutputBufferSize.setStatus('current')
hwspMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspMaxNumberControlled.setStatus('current')
hwspName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspName.setStatus('current')
hwspOSAutoDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspOSAutoDiscovered.setStatus('current')
hwspPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspPNPDeviceID.setStatus('current')
hwspPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspPowerManagementCapabilities.setStatus('current')
hwspPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspPowerManagementSupported.setStatus('current')
hwspProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46))).clone(namedValues=NamedValues(("other", 0), ("unknown", 1), ("eisa", 2), ("isa", 3), ("pci", 4), ("ataATAPI", 5), ("flexibleDiskette", 6), ("n1496", 7), ("scsiParallelInterface", 8), ("scsiFibreChannelProtocol", 9), ("scsiSerialBusProtocol", 10), ("scsiSerialBusProtocol1394", 11), ("scsiSerialStorageArchitecture", 12), ("vesa", 13), ("pcmcia", 14), ("universalSerialBus", 15), ("parallelProtocol", 16), ("escon", 17), ("diagnostic", 18), ("i2C", 19), ("power", 20), ("hippi", 21), ("multiBus", 22), ("vme", 23), ("ipi", 24), ("ieee488", 25), ("rs232", 26), ("ieee802310BASE5", 27), ("ieee802310BASE2", 28), ("ieee80231BASE5", 29), ("ieee802310BROAD36", 30), ("ieee8023100BASEVG", 31), ("ieee8025TokenRing", 32), ("ansiX3T95FDDI", 33), ("mca", 34), ("esdi", 35), ("ide", 36), ("cmd", 37), ("st506", 38), ("dssi", 39), ("qic2", 40), ("enhancedATAIDE", 41), ("agp", 42), ("twowayInfrared", 43), ("fastInfrared", 44), ("serialInfrared", 45), ("irBus", 46)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspProtocolSupported.setStatus('current')
hwspProviderType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspProviderType.setStatus('current')
hwspSettableBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSettableBaudRate.setStatus('current')
hwspSettableDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSettableDataBits.setStatus('current')
hwspSettableFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSettableFlowControl.setStatus('current')
hwspSettableParity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSettableParity.setStatus('current')
hwspSettableParityCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSettableParityCheck.setStatus('current')
hwspSettableRLSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSettableRLSD.setStatus('current')
hwspSettableStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSettableStopBits.setStatus('current')
hwspStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspStatus.setStatus('current')
hwspStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspStatusInfo.setStatus('current')
hwspSupports16BitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupports16BitMode.setStatus('current')
hwspSupportsDTRDSR = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 37), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsDTRDSR.setStatus('current')
hwspSupportsElapsedTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsElapsedTimeouts.setStatus('current')
hwspSupportsIntTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 39), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsIntTimeouts.setStatus('current')
hwspSupportsParityCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 40), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsParityCheck.setStatus('current')
hwspSupportsRLSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 41), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsRLSD.setStatus('current')
hwspSupportsRTSCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 42), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsRTSCTS.setStatus('current')
hwspSupportsSpecialCharacters = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 43), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsSpecialCharacters.setStatus('current')
hwspSupportsXOnXOff = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 44), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsXOnXOff.setStatus('current')
hwspSupportsXOnXOffSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 45), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSupportsXOnXOffSet.setStatus('current')
hwspSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 46), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSystemCreationClassName.setStatus('current')
hwspSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 47), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspSystemName.setStatus('current')
hwspTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 48), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspTimeOfLastReset.setStatus('current')
win32SerialPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27), )
if mibBuilder.loadTexts: win32SerialPortConfigTable.setStatus('current')
win32SerialPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1), ).setIndexNames((0, "INFORMANT-HW", "hwspcIndex"))
if mibBuilder.loadTexts: win32SerialPortConfigEntry.setStatus('current')
hwspcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcIndex.setStatus('current')
hwspcAbortReadWriteOnError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcAbortReadWriteOnError.setStatus('current')
hwspcBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcBaudRate.setStatus('current')
hwspcBinaryModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcBinaryModeEnabled.setStatus('current')
hwspcBitsPerByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcBitsPerByte.setStatus('current')
hwspcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcCaption.setStatus('current')
hwspcContinueXMitOnXOff = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcContinueXMitOnXOff.setStatus('current')
hwspcCTSOutflowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcCTSOutflowControl.setStatus('current')
hwspcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcDescription.setStatus('current')
hwspcDiscardNULLBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcDiscardNULLBytes.setStatus('current')
hwspcDSROutflowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcDSROutflowControl.setStatus('current')
hwspcDSRSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcDSRSensitivity.setStatus('current')
hwspcDTRFlowControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("handshake", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcDTRFlowControlType.setStatus('current')
hwspcEOFCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcEOFCharacter.setStatus('current')
hwspcErrorReplaceCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcErrorReplaceCharacter.setStatus('current')
hwspcErrorReplacementEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcErrorReplacementEnabled.setStatus('current')
hwspcEventCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcEventCharacter.setStatus('current')
hwspcIsBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcIsBusy.setStatus('current')
hwspcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 19), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcName.setStatus('current')
hwspcParity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcParity.setStatus('current')
hwspcParityCheckEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcParityCheckEnabled.setStatus('current')
hwspcRTSFlowControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcRTSFlowControlType.setStatus('current')
hwspcSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 23), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcSettingID.setStatus('current')
hwspcStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcStopBits.setStatus('current')
hwspcXOffCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcXOffCharacter.setStatus('current')
hwspcXOffXMitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcXOffXMitThreshold.setStatus('current')
hwspcXOnCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcXOnCharacter.setStatus('current')
hwspcXOnXMitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcXOnXMitThreshold.setStatus('current')
hwspcXOnXOffInFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcXOnXOffInFlowControl.setStatus('current')
hwspcXOnXOffOutFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwspcXOnXOffOutFlowControl.setStatus('current')
win32SMBIOSMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28), )
if mibBuilder.loadTexts: win32SMBIOSMemoryTable.setStatus('current')
win32SMBIOSMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1), ).setIndexNames((0, "INFORMANT-HW", "hwsbmIndex"))
if mibBuilder.loadTexts: win32SMBIOSMemoryEntry.setStatus('current')
hwsbmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmIndex.setStatus('current')
hwsbmAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("readable", 1), ("writable", 2), ("readWriteSupported", 3), ("writeOnce", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmAccess.setStatus('current')
hwsbmAdditionalErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmAdditionalErrorData.setStatus('current')
hwsbmAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmAvailability.setStatus('current')
hwsbmBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmBlockSize.setStatus('current')
hwsbmCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmCaption.setStatus('current')
hwsbmConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmConfigManagerErrorCode.setStatus('current')
hwsbmConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmConfigManagerUserConfig.setStatus('current')
hwsbmCorrectableError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmCorrectableError.setStatus('current')
hwsbmCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 10), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmCreationClassName.setStatus('current')
hwsbmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmDescription.setStatus('current')
hwsbmDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmDeviceID.setStatus('current')
hwsbmEndingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmEndingAddress.setStatus('current')
hwsbmErrorAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("read", 3), ("write", 4), ("partialWrite", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorAccess.setStatus('current')
hwsbmErrorAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorAddress.setStatus('current')
hwsbmErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorCleared.setStatus('current')
hwsbmErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorData.setStatus('current')
hwsbmErrorDataOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("leastSignificantByteFirst", 1), ("mostSignificantByteFirst", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorDataOrder.setStatus('current')
hwsbmErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorDescription.setStatus('current')
hwsbmErrorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("ok", 3), ("badRead", 4), ("parityError", 5), ("singleBitError", 6), ("doubleBitError", 7), ("multiBitError", 8), ("nibbleError", 9), ("checksumError", 10), ("crcError", 11), ("correctedSinglebitError", 12), ("correctedError", 13), ("uncorrectableError", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorInfo.setStatus('current')
hwsbmErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("none", 3), ("parity", 4), ("singleBitECC", 5), ("multiBitECC", 6), ("crc", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorMethodology.setStatus('current')
hwsbmErrorResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorResolution.setStatus('current')
hwsbmErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 23), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorTime.setStatus('current')
hwsbmErrorTransferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmErrorTransferSize.setStatus('current')
hwsbmInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmInstallDate.setStatus('current')
hwsbmLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmLastErrorCode.setStatus('current')
hwsbmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmName.setStatus('current')
hwsbmNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmNumberOfBlocks.setStatus('current')
hwsbmOtherErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmOtherErrorDescription.setStatus('current')
hwsbmPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmPNPDeviceID.setStatus('current')
hwsbmPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmPowerManagementCapabilities.setStatus('current')
hwsbmPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmPowerManagementSupported.setStatus('current')
hwsbmPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmPurpose.setStatus('current')
hwsbmStartingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmStartingAddress.setStatus('current')
hwsbmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmStatus.setStatus('current')
hwsbmStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmStatusInfo.setStatus('current')
hwsbmSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmSystemCreationClassName.setStatus('current')
hwsbmSystemLevelAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmSystemLevelAddress.setStatus('current')
hwsbmSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 39), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsbmSystemName.setStatus('current')
win32SoundDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29), )
if mibBuilder.loadTexts: win32SoundDeviceTable.setStatus('current')
win32SoundDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1), ).setIndexNames((0, "INFORMANT-HW", "hwsndIndex"))
if mibBuilder.loadTexts: win32SoundDeviceEntry.setStatus('current')
hwsndIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndIndex.setStatus('current')
hwsndAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndAvailability.setStatus('current')
hwsndCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndCaption.setStatus('current')
hwsndConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndConfigManagerErrorCode.setStatus('current')
hwsndConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndConfigManagerUserConfig.setStatus('current')
hwsndCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndCreationClassName.setStatus('current')
hwsndDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndDescription.setStatus('current')
hwsndDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 260))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndDeviceID.setStatus('current')
hwsndDMABufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 9), Integer32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndDMABufferSize.setStatus('current')
hwsndErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndErrorCleared.setStatus('current')
hwsndErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndErrorDescription.setStatus('current')
hwsndInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndInstallDate.setStatus('current')
hwsndLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndLastErrorCode.setStatus('current')
hwsndManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndManufacturer.setStatus('current')
hwsndMPU401Address = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndMPU401Address.setStatus('current')
hwsndName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndName.setStatus('current')
hwsndPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndPNPDeviceID.setStatus('current')
hwsndPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndPowerManagementCapabilities.setStatus('current')
hwsndPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndPowerManagementSupported.setStatus('current')
hwsndProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndProductName.setStatus('current')
hwsndStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndStatus.setStatus('current')
hwsndStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndStatusInfo.setStatus('current')
hwsndSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndSystemCreationClassName.setStatus('current')
hwsndSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsndSystemName.setStatus('current')
win32SystemEnclosureTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30), )
if mibBuilder.loadTexts: win32SystemEnclosureTable.setStatus('current')
win32SystemEnclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1), ).setIndexNames((0, "INFORMANT-HW", "hwseIndex"))
if mibBuilder.loadTexts: win32SystemEnclosureEntry.setStatus('current')
hwseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseIndex.setStatus('current')
hwseAudibleAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseAudibleAlarm.setStatus('current')
hwseBreachDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseBreachDescription.setStatus('current')
hwseCableManagementStrategy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseCableManagementStrategy.setStatus('current')
hwseCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseCaption.setStatus('current')
hwseChassisTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseChassisTypes.setStatus('current')
hwseCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseCreationClassName.setStatus('current')
hwseCurrentRequiredOrProduced = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 8), Integer32()).setUnits('Amps at 120 Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseCurrentRequiredOrProduced.setStatus('current')
hwseDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseDepth.setStatus('current')
hwseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseDescription.setStatus('current')
hwseHeatGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseHeatGeneration.setStatus('current')
hwseHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseHeight.setStatus('current')
hwseHotSwappable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseHotSwappable.setStatus('current')
hwseInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseInstallDate.setStatus('current')
hwseLockPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseLockPresent.setStatus('current')
hwseManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 16), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseManufacturer.setStatus('current')
hwseModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 17), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseModel.setStatus('current')
hwseName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseName.setStatus('current')
hwseNumberOfPowerCords = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseNumberOfPowerCords.setStatus('current')
hwseOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseOtherIdentifyingInfo.setStatus('current')
hwsePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 21), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsePartNumber.setStatus('current')
hwsePoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsePoweredOn.setStatus('current')
hwseRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseRemovable.setStatus('current')
hwseReplaceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseReplaceable.setStatus('current')
hwseSecurityBreach = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("noBreach", 3), ("breachAttempted", 4), ("breachSuccessful", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseSecurityBreach.setStatus('current')
hwseSecurityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("none", 3), ("externalInterfaceLockedOut", 4), ("externalInterfaceEnabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseSecurityStatus.setStatus('current')
hwseSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 27), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseSerialNumber.setStatus('current')
hwseServiceDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseServiceDescriptions.setStatus('current')
hwseServicePhilosophy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseServicePhilosophy.setStatus('current')
hwseSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 30), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseSKU.setStatus('current')
hwseSMBIOSAssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseSMBIOSAssetTag.setStatus('current')
hwseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseStatus.setStatus('current')
hwseTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 33), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseTag.setStatus('current')
hwseTypeDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseTypeDescriptions.setStatus('current')
hwseVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 35), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseVersion.setStatus('current')
hwseVisibleAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseVisibleAlarm.setStatus('current')
hwseWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseWeight.setStatus('current')
hwseWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwseWidth.setStatus('current')
win32SystemMemoryResourceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31), )
if mibBuilder.loadTexts: win32SystemMemoryResourceTable.setStatus('current')
win32SystemMemoryResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1), ).setIndexNames((0, "INFORMANT-HW", "hwsmrIndex"))
if mibBuilder.loadTexts: win32SystemMemoryResourceEntry.setStatus('current')
hwsmrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrIndex.setStatus('current')
hwsmrCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrCaption.setStatus('current')
hwsmrCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrCreationClassName.setStatus('current')
hwsmrCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrCSCreationClassName.setStatus('current')
hwsmrCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrCSName.setStatus('current')
hwsmrDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrDescription.setStatus('current')
hwsmrEndingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrEndingAddress.setStatus('current')
hwsmrInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrInstallDate.setStatus('current')
hwsmrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrName.setStatus('current')
hwsmrStartingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrStartingAddress.setStatus('current')
hwsmrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwsmrStatus.setStatus('current')
win32SystemSlotTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32), )
if mibBuilder.loadTexts: win32SystemSlotTable.setStatus('current')
win32SystemSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1), ).setIndexNames((0, "INFORMANT-HW", "hwssIndex"))
if mibBuilder.loadTexts: win32SystemSlotEntry.setStatus('current')
hwssIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssIndex.setStatus('current')
hwssCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssCaption.setStatus('current')
hwssConnectorPinout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssConnectorPinout.setStatus('current')
hwssConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssConnectorType.setStatus('current')
hwssCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssCreationClassName.setStatus('current')
hwssCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("reserved", 0), ("other", 1), ("unknown", 2), ("available", 3), ("inUse", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssCurrentUsage.setStatus('current')
hwssDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssDescription.setStatus('current')
hwssHeightAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssHeightAllowed.setStatus('current')
hwssInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssInstallDate.setStatus('current')
hwssLengthAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssLengthAllowed.setStatus('current')
hwssManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 11), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssManufacturer.setStatus('current')
hwssMaxDataWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssMaxDataWidth.setStatus('current')
hwssModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 13), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssModel.setStatus('current')
hwssName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssName.setStatus('current')
hwssNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssNumber.setStatus('current')
hwssOtherIdentifyingInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssOtherIdentifyingInfo.setStatus('current')
hwssPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 17), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssPartNumber.setStatus('current')
hwssPMESignal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssPMESignal.setStatus('current')
hwssPoweredOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssPoweredOn.setStatus('current')
hwssPurposeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssPurposeDescription.setStatus('current')
hwssSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 21), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssSerialNumber.setStatus('current')
hwssShared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssShared.setStatus('current')
hwssSKU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 23), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssSKU.setStatus('current')
hwssSlotDesignation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssSlotDesignation.setStatus('current')
hwssSpecialPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssSpecialPurpose.setStatus('current')
hwssStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssStatus.setStatus('current')
hwssSupportsHotPlug = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssSupportsHotPlug.setStatus('current')
hwssTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 28), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssTag.setStatus('current')
hwssThermalRating = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssThermalRating.setStatus('current')
hwssVccMixedVoltageSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssVccMixedVoltageSupport.setStatus('current')
hwssVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 31), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssVersion.setStatus('current')
hwssVppMixedVoltageSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwssVppMixedVoltageSupport.setStatus('current')
win32USBControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33), )
if mibBuilder.loadTexts: win32USBControllerTable.setStatus('current')
win32USBControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1), ).setIndexNames((0, "INFORMANT-HW", "hwucIndex"))
if mibBuilder.loadTexts: win32USBControllerEntry.setStatus('current')
hwucIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucIndex.setStatus('current')
hwucAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucAvailability.setStatus('current')
hwucCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucCaption.setStatus('current')
hwucConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucConfigManagerErrorCode.setStatus('current')
hwucConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucConfigManagerUserConfig.setStatus('current')
hwucCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucCreationClassName.setStatus('current')
hwucDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucDescription.setStatus('current')
hwucDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucDeviceID.setStatus('current')
hwucErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucErrorCleared.setStatus('current')
hwucErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucErrorDescription.setStatus('current')
hwucInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucInstallDate.setStatus('current')
hwucLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucLastErrorCode.setStatus('current')
hwucManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucManufacturer.setStatus('current')
hwucMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucMaxNumberControlled.setStatus('current')
hwucName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucName.setStatus('current')
hwucPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucPNPDeviceID.setStatus('current')
hwucPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucPowerManagementCapabilities.setStatus('current')
hwucPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucPowerManagementSupported.setStatus('current')
hwucProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46))).clone(namedValues=NamedValues(("other", 0), ("unknown", 1), ("eisa", 2), ("isa", 3), ("pci", 4), ("ataATAPI", 5), ("flexibleDiskette", 6), ("n1496", 7), ("scsiParallelInterface", 8), ("scsiFibreChannelProtocol", 9), ("scsiSerialBusProtocol", 10), ("scsiSerialBusProtocol1394", 11), ("scsiSerialStorageArchitecture", 12), ("vesa", 13), ("pcmcia", 14), ("universalSerialBus", 15), ("parallelProtocol", 16), ("escon", 17), ("diagnostic", 18), ("i2C", 19), ("power", 20), ("hippi", 21), ("multiBus", 22), ("vme", 23), ("ipi", 24), ("ieee488", 25), ("rs232", 26), ("ieee802310BASE5", 27), ("ieee802310BASE2", 28), ("ieee80231BASE5", 29), ("ieee802310BROAD36", 30), ("ieee8023100BASEVG", 31), ("ieee8025TokenRing", 32), ("ansiX3T95FDDI", 33), ("mca", 34), ("esdi", 35), ("ide", 36), ("cmd", 37), ("st506", 38), ("dssi", 39), ("qic2", 40), ("enhancedATAIDE", 41), ("agp", 42), ("twowayInfrared", 43), ("fastInfrared", 44), ("serialInfrared", 45), ("irBus", 46)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucProtocolSupported.setStatus('current')
hwucStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucStatus.setStatus('current')
hwucStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucStatusInfo.setStatus('current')
hwucSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucSystemCreationClassName.setStatus('current')
hwucSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucSystemName.setStatus('current')
hwucTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwucTimeOfLastReset.setStatus('current')
win32USBHubTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34), )
if mibBuilder.loadTexts: win32USBHubTable.setStatus('current')
win32USBHubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1), ).setIndexNames((0, "INFORMANT-HW", "hwuhIndex"))
if mibBuilder.loadTexts: win32USBHubEntry.setStatus('current')
hwuhIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhIndex.setStatus('current')
hwuhAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhAvailability.setStatus('current')
hwuhCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhCaption.setStatus('current')
hwuhClassCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhClassCode.setStatus('current')
hwuhConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhConfigManagerErrorCode.setStatus('current')
hwuhConfigManagerUserCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhConfigManagerUserCode.setStatus('current')
hwuhCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhCreationClassName.setStatus('current')
hwuhCurrentAlternativeSettings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhCurrentAlternativeSettings.setStatus('current')
hwuhCurrentConfigValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhCurrentConfigValue.setStatus('current')
hwuhDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhDescription.setStatus('current')
hwuhDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhDeviceID.setStatus('current')
hwuhErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhErrorCleared.setStatus('current')
hwuhErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhErrorDescription.setStatus('current')
hwuhGangSwitched = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhGangSwitched.setStatus('current')
hwuhInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhInstallDate.setStatus('current')
hwuhLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhLastErrorCode.setStatus('current')
hwuhName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhName.setStatus('current')
hwuhNumberOfConfigs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhNumberOfConfigs.setStatus('current')
hwuhNumberOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhNumberOfPorts.setStatus('current')
hwuhPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhPNPDeviceID.setStatus('current')
hwuhPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhPowerManagementCapabilities.setStatus('current')
hwuhPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhPowerManagementSupported.setStatus('current')
hwuhProtocolCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhProtocolCode.setStatus('current')
hwuhStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhStatus.setStatus('current')
hwuhStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhStatusInfo.setStatus('current')
hwuhSubclassCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhSubclassCode.setStatus('current')
hwuhSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhSystemCreationClassName.setStatus('current')
hwuhSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhSystemName.setStatus('current')
hwuhUSBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwuhUSBVersion.setStatus('current')
wmiNetworkingDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5))
if mibBuilder.loadTexts: wmiNetworkingDevice.setStatus('current')
win32NetworkAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1), )
if mibBuilder.loadTexts: win32NetworkAdapterTable.setStatus('current')
win32NetworkAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hwnaIndex"))
if mibBuilder.loadTexts: win32NetworkAdapterEntry.setStatus('current')
hwnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaIndex.setStatus('current')
hwnaAdapterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaAdapterType.setStatus('current')
hwnaAdapterTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("ethernet8023", 0), ("tokenRing8025", 1), ("fiberDistributedDataInterface", 2), ("wideAreaNetwork", 3), ("localTalk", 4), ("ethernetUsingDIXHeaderFormat", 5), ("arcnet", 6), ("arcnet8782", 7), ("atm", 8), ("wireless", 9), ("infraredWireless", 10), ("bpc", 11), ("coWan", 12), ("n1394", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaAdapterTypeID.setStatus('current')
hwnaAutoSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaAutoSense.setStatus('current')
hwnaAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaAvailability.setStatus('current')
hwnaCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaCaption.setStatus('current')
hwnaConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaConfigManagerErrorCode.setStatus('current')
hwnaConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaConfigManagerUserConfig.setStatus('current')
hwnaCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaCreationClassName.setStatus('current')
hwnaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaDescription.setStatus('current')
hwnaDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaDeviceID.setStatus('current')
hwnaErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaErrorCleared.setStatus('current')
hwnaErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaErrorDescription.setStatus('current')
hwnaRegistryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaRegistryIndex.setStatus('current')
hwnaInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaInstallDate.setStatus('current')
hwnaInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaInstalled.setStatus('current')
hwnaInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaInterfaceIndex.setStatus('current')
hwnaLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaLastErrorCode.setStatus('current')
hwnaMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaMACAddress.setStatus('current')
hwnaManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaManufacturer.setStatus('current')
hwnaMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaMaxNumberControlled.setStatus('current')
hwnaMaxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaMaxSpeed.setStatus('current')
hwnaName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaName.setStatus('current')
hwnaNetConnectionID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaNetConnectionID.setStatus('current')
hwnaNetConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("disconnected", 0), ("connecting", 1), ("connected", 2), ("disconnecting", 3), ("hardwareNotPresent", 4), ("hardwareDisabled", 5), ("hardwareMalfunction", 6), ("mediaDisconnected", 7), ("authenticating", 8), ("authenticationSucceeded", 9), ("authenticationFailed", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaNetConnectionStatus.setStatus('current')
hwnaNetworkAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaNetworkAddresses.setStatus('current')
hwnaPermanentAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaPermanentAddress.setStatus('current')
hwnaPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaPNPDeviceID.setStatus('current')
hwnaPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaPowerManagementCapabilities.setStatus('current')
hwnaPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaPowerManagementSupported.setStatus('current')
hwnaProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaProductName.setStatus('current')
hwnaServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaServiceName.setStatus('current')
hwnaSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaSpeed.setStatus('current')
hwnaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaStatus.setStatus('current')
hwnaStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaStatusInfo.setStatus('current')
hwnaSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaSystemCreationClassName.setStatus('current')
hwnaSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaSystemName.setStatus('current')
hwnaTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 38), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnaTimeOfLastReset.setStatus('current')
win32NetworkAdapterConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2), )
if mibBuilder.loadTexts: win32NetworkAdapterConfigTable.setStatus('current')
win32NetworkAdapterConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwnacIndex"))
if mibBuilder.loadTexts: win32NetworkAdapterConfigEntry.setStatus('current')
hwnacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIndex.setStatus('current')
hwnacArpAlwaysSourceRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacArpAlwaysSourceRoute.setStatus('current')
hwnacArpUseEtherSNAP = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacArpUseEtherSNAP.setStatus('current')
hwnacCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacCaption.setStatus('current')
hwnacDatabasePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDatabasePath.setStatus('current')
hwnacDeadGWDetectEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDeadGWDetectEnabled.setStatus('current')
hwnacDefaultIPGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDefaultIPGateway.setStatus('current')
hwnacDefaultTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDefaultTOS.setStatus('current')
hwnacDefaultTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDefaultTTL.setStatus('current')
hwnacDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDescription.setStatus('current')
hwnacDHCPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDHCPEnabled.setStatus('current')
hwnacDHCPLeaseExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDHCPLeaseExpires.setStatus('current')
hwnacDHCPLeaseObtained = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDHCPLeaseObtained.setStatus('current')
hwnacDHCPServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDHCPServer.setStatus('current')
hwnacDNSDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDNSDomain.setStatus('current')
hwnacDNSDomainSuffixSearchOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDNSDomainSuffixSearchOrder.setStatus('current')
hwnacDNSEnabledForWINSResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDNSEnabledForWINSResolution.setStatus('current')
hwnacDNSHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDNSHostName.setStatus('current')
hwnacDNSServerSearchOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDNSServerSearchOrder.setStatus('current')
hwnacDomainDNSRegistrationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacDomainDNSRegistrationEnable.setStatus('current')
hwnacForwardBufferMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 21), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacForwardBufferMemory.setStatus('current')
hwnacFullDNSRegistrationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacFullDNSRegistrationEnabled.setStatus('current')
hwnacGatewayCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacGatewayCostMetric.setStatus('current')
hwnacIGMPLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noMulticast", 0), ("ipMulticast", 1), ("ipIGMPMulticast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIGMPLevel.setStatus('current')
hwnacConfigurationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacConfigurationIndex.setStatus('current')
hwnacInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacInterfaceIndex.setStatus('current')
hwnacIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPAddress.setStatus('current')
hwnacIPConnectionMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPConnectionMetric.setStatus('current')
hwnacIPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPEnabled.setStatus('current')
hwnacIPFilterSecurityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPFilterSecurityEnabled.setStatus('current')
hwnacIPPortSecurityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPPortSecurityEnabled.setStatus('current')
hwnacIPSecPermitIPProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPSecPermitIPProtocols.setStatus('current')
hwnacIPSecPermitTCPPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPSecPermitTCPPorts.setStatus('current')
hwnacIPSecPermitUDPPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPSecPermitUDPPorts.setStatus('current')
hwnacIPSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 35), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPSubnet.setStatus('current')
hwnacIPUseZeroBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPUseZeroBroadcast.setStatus('current')
hwnacIPXAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPXAddress.setStatus('current')
hwnacIPXEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPXEnabled.setStatus('current')
hwnacIPXFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 39), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPXFrameType.setStatus('current')
hwnacIPXMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8))).clone(namedValues=NamedValues(("ethernet", 1), ("tokenRing", 2), ("fddi", 3), ("arcnet", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPXMediaType.setStatus('current')
hwnacIPXNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 41), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPXNetworkNumber.setStatus('current')
hwnacIPXVirtualNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 42), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacIPXVirtualNetNumber.setStatus('current')
hwnacKeepAliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 43), Gauge32()).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacKeepAliveInterval.setStatus('current')
hwnacKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 44), Gauge32()).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacKeepAliveTime.setStatus('current')
hwnacMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 45), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacMACAddress.setStatus('current')
hwnacMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 46), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacMTU.setStatus('current')
hwnacNumForwardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacNumForwardPackets.setStatus('current')
hwnacPMTUBHDetectEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 48), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacPMTUBHDetectEnabled.setStatus('current')
hwnacPMTUDiscoveryEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 49), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacPMTUDiscoveryEnabled.setStatus('current')
hwnacServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 50), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacServiceName.setStatus('current')
hwnacSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 51), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacSettingID.setStatus('current')
hwnacTcpipNetbiosOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("n0x0EnableNetbiosViaDhcp", 0), ("n0x1EnableNetbios", 1), ("n0x2DisableNetbios", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacTcpipNetbiosOptions.setStatus('current')
hwnacTcpMaxConnectRetransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacTcpMaxConnectRetransmission.setStatus('current')
hwnacTcpMaxDataRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacTcpMaxDataRetransmissions.setStatus('current')
hwnacTcpNumConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacTcpNumConnections.setStatus('current')
hwnacTcpUseRFC1122UrgentPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 56), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacTcpUseRFC1122UrgentPointer.setStatus('current')
hwnacTcpWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 57), Integer32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacTcpWindowSize.setStatus('current')
hwnacWINSEnableLMHostsLookup = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 58), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacWINSEnableLMHostsLookup.setStatus('current')
hwnacWINSHostLookupFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 59), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacWINSHostLookupFile.setStatus('current')
hwnacWINSPrimaryServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 60), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacWINSPrimaryServer.setStatus('current')
hwnacWINSScopeID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 61), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacWINSScopeID.setStatus('current')
hwnacWINSSecondaryServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 62), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwnacWINSSecondaryServer.setStatus('current')
wmiPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6))
if mibBuilder.loadTexts: wmiPower.setStatus('current')
win32BatteryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1), )
if mibBuilder.loadTexts: win32BatteryTable.setStatus('current')
win32BatteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hwbaIndex"))
if mibBuilder.loadTexts: win32BatteryEntry.setStatus('current')
hwbaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaIndex.setStatus('current')
hwbaAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaAvailability.setStatus('current')
hwbaBatteryRechargeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 3), Gauge32()).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaBatteryRechargeTime.setStatus('current')
hwbaBatteryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("fullyCharged", 3), ("low", 4), ("critical", 5), ("charging", 6), ("chargingAndHigh", 7), ("chargingAndLow", 8), ("chargingAndCritical", 9), ("undefined", 10), ("partiallyCharged", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaBatteryStatus.setStatus('current')
hwbaCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaCaption.setStatus('current')
hwbaChemistry = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("leadAcid", 3), ("nickelCadmium", 4), ("nickelMetalHydride", 5), ("lithiumion", 6), ("zincAir", 7), ("lithiumPolymer", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaChemistry.setStatus('current')
hwbaConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaConfigManagerErrorCode.setStatus('current')
hwbaConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaConfigManagerUserConfig.setStatus('current')
hwbaCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaCreationClassName.setStatus('current')
hwbaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaDescription.setStatus('current')
hwbaDesignCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaDesignCapacity.setStatus('current')
hwbaDesignVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaDesignVoltage.setStatus('current')
hwbaDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaDeviceID.setStatus('current')
hwbaErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaErrorCleared.setStatus('current')
hwbaErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaErrorDescription.setStatus('current')
hwbaEstimatedChargeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaEstimatedChargeRemaining.setStatus('current')
hwbaEstimatedRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaEstimatedRunTime.setStatus('current')
hwbaExpectedBatteryLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 18), Gauge32()).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaExpectedBatteryLife.setStatus('current')
hwbaExpectedLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaExpectedLife.setStatus('current')
hwbaFullChargeCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaFullChargeCapacity.setStatus('current')
hwbaInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaInstallDate.setStatus('current')
hwbaLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaLastErrorCode.setStatus('current')
hwbaMaxRechargeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaMaxRechargeTime.setStatus('current')
hwbaName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaName.setStatus('current')
hwbaPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaPNPDeviceID.setStatus('current')
hwbaPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaPowerManagementCapabilities.setStatus('current')
hwbaPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaPowerManagementSupported.setStatus('current')
hwbaSmartBatteryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaSmartBatteryVersion.setStatus('current')
hwbaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaStatus.setStatus('current')
hwbaStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaStatusInfo.setStatus('current')
hwbaSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaSystemCreationClassName.setStatus('current')
hwbaSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaSystemName.setStatus('current')
hwbaTimeOnBattery = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaTimeOnBattery.setStatus('current')
hwbaTimeToFullCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwbaTimeToFullCharge.setStatus('current')
win32CurrentProbeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2), )
if mibBuilder.loadTexts: win32CurrentProbeTable.setStatus('current')
win32CurrentProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwcpIndex"))
if mibBuilder.loadTexts: win32CurrentProbeEntry.setStatus('current')
hwcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpIndex.setStatus('current')
hwcpAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 2), Integer32()).setUnits('Hundredths of Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpAccuracy.setStatus('current')
hwcpAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpAvailability.setStatus('current')
hwcpCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpCaption.setStatus('current')
hwcpConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpConfigManagerErrorCode.setStatus('current')
hwcpConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpConfigManagerUserConfig.setStatus('current')
hwcpCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpCreationClassName.setStatus('current')
hwcpCurrentReading = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 8), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpCurrentReading.setStatus('current')
hwcpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpDescription.setStatus('current')
hwcpDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpDeviceID.setStatus('current')
hwcpErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpErrorCleared.setStatus('current')
hwcpErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpErrorDescription.setStatus('current')
hwcpInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpInstallDate.setStatus('current')
hwcpIsLinear = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpIsLinear.setStatus('current')
hwcpLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpLastErrorCode.setStatus('current')
hwcpLowerThresholdCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 16), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpLowerThresholdCritical.setStatus('current')
hwcpLowerThresholdFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 17), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpLowerThresholdFatal.setStatus('current')
hwcpLowerThresholdNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 18), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpLowerThresholdNonCritical.setStatus('current')
hwcpMaxReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 19), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpMaxReadable.setStatus('current')
hwcpMinReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 20), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpMinReadable.setStatus('current')
hwcpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpName.setStatus('current')
hwcpNominalReading = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 22), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpNominalReading.setStatus('current')
hwcpNormalMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 23), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpNormalMax.setStatus('current')
hwcpNormalMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 24), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpNormalMin.setStatus('current')
hwcpPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpPNPDeviceID.setStatus('current')
hwcpPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpPowerManagementCapabilities.setStatus('current')
hwcpPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpPowerManagementSupported.setStatus('current')
hwcpResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 28), Gauge32()).setUnits('Tenths of Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpResolution.setStatus('current')
hwcpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpStatus.setStatus('current')
hwcpStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpStatusInfo.setStatus('current')
hwcpSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpSystemCreationClassName.setStatus('current')
hwcpSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpSystemName.setStatus('current')
hwcpTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 33), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpTolerance.setStatus('current')
hwcpUpperThresholdCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 34), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpUpperThresholdCritical.setStatus('current')
hwcpUpperThresholdFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 35), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpUpperThresholdFatal.setStatus('current')
hwcpUpperThresholdNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 36), Integer32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwcpUpperThresholdNonCritical.setStatus('current')
win32PortableBatteryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3), )
if mibBuilder.loadTexts: win32PortableBatteryTable.setStatus('current')
win32PortableBatteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpbIndex"))
if mibBuilder.loadTexts: win32PortableBatteryEntry.setStatus('current')
hwpbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbIndex.setStatus('current')
hwpbAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbAvailability.setStatus('current')
hwpbBatteryRechargeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbBatteryRechargeTime.setStatus('current')
hwpbBatteryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("fullyCharged", 3), ("low", 4), ("critical", 5), ("charging", 6), ("chargingAndHigh", 7), ("chargingAndLow", 8), ("chargingAndCritical", 9), ("undefined", 10), ("partiallyCharged", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbBatteryStatus.setStatus('current')
hwpbCapacityMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbCapacityMultiplier.setStatus('current')
hwpbCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbCaption.setStatus('current')
hwpbChemistry = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("leadAcid", 3), ("nickelCadmium", 4), ("nickelMetalHydride", 5), ("lithiumion", 6), ("zincAir", 7), ("lithiumPolymer", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbChemistry.setStatus('current')
hwpbConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbConfigManagerErrorCode.setStatus('current')
hwpbConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbConfigManagerUserConfig.setStatus('current')
hwpbCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 10), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbCreationClassName.setStatus('current')
hwpbDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbDescription.setStatus('current')
hwpbDesignCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbDesignCapacity.setStatus('current')
hwpbDesignVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbDesignVoltage.setStatus('current')
hwpbDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbDeviceID.setStatus('current')
hwpbErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbErrorCleared.setStatus('current')
hwpbErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbErrorDescription.setStatus('current')
hwpbEstimatedChargeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbEstimatedChargeRemaining.setStatus('current')
hwpbEstimatedRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbEstimatedRunTime.setStatus('current')
hwpbExpectedBatteryLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbExpectedBatteryLife.setStatus('current')
hwpbExpectedLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbExpectedLife.setStatus('current')
hwpbFullChargeCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbFullChargeCapacity.setStatus('current')
hwpbInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 22), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbInstallDate.setStatus('current')
hwpbLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbLastErrorCode.setStatus('current')
hwpbLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbLocation.setStatus('current')
hwpbManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbManufactureDate.setStatus('current')
hwpbManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbManufacturer.setStatus('current')
hwpbMaxBatteryError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 27), Integer32()).setUnits('Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbMaxBatteryError.setStatus('current')
hwpbMaxRechargeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbMaxRechargeTime.setStatus('current')
hwpbName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbName.setStatus('current')
hwpbPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbPNPDeviceID.setStatus('current')
hwpbPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbPowerManagementCapabilities.setStatus('current')
hwpbPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbPowerManagementSupported.setStatus('current')
hwpbSmartBatteryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbSmartBatteryVersion.setStatus('current')
hwpbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbStatus.setStatus('current')
hwpbStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbStatusInfo.setStatus('current')
hwpbSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbSystemCreationClassName.setStatus('current')
hwpbSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbSystemName.setStatus('current')
hwpbTimeOnBattery = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbTimeOnBattery.setStatus('current')
hwpbTimeToFullCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpbTimeToFullCharge.setStatus('current')
win32UninterruptPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4), )
if mibBuilder.loadTexts: win32UninterruptPowerSupplyTable.setStatus('current')
win32UninterruptPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1), ).setIndexNames((0, "INFORMANT-HW", "hwupsIndex"))
if mibBuilder.loadTexts: win32UninterruptPowerSupplyEntry.setStatus('current')
hwupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsIndex.setStatus('current')
hwupsActiveInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("range1", 3), ("range2", 4), ("both", 5), ("neither", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsActiveInputVoltage.setStatus('current')
hwupsAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsAvailability.setStatus('current')
hwupsBatteryInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsBatteryInstalled.setStatus('current')
hwupsCanTurnOffRemotely = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsCanTurnOffRemotely.setStatus('current')
hwupsCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsCaption.setStatus('current')
hwupsCommandFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsCommandFile.setStatus('current')
hwupsConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsConfigManagerErrorCode.setStatus('current')
hwupsConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsConfigManagerUserConfig.setStatus('current')
hwupsCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 10), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsCreationClassName.setStatus('current')
hwupsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsDescription.setStatus('current')
hwupsDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsDeviceID.setStatus('current')
hwupsErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsErrorCleared.setStatus('current')
hwupsErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsErrorDescription.setStatus('current')
hwupsEstimatedChargeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsEstimatedChargeRemaining.setStatus('current')
hwupsEstimatedRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsEstimatedRunTime.setStatus('current')
hwupsFirstMessageDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 17), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsFirstMessageDelay.setStatus('current')
hwupsInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsInstallDate.setStatus('current')
hwupsIsSwitchingSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsIsSwitchingSupply.setStatus('current')
hwupsLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsLastErrorCode.setStatus('current')
hwupsLowBatterySignal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsLowBatterySignal.setStatus('current')
hwupsMessageInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 22), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsMessageInterval.setStatus('current')
hwupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsName.setStatus('current')
hwupsPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsPNPDeviceID.setStatus('current')
hwupsPowerFailSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsPowerFailSignal.setStatus('current')
hwupsPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsPowerManagementCapabilities.setStatus('current')
hwupsPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsPowerManagementSupported.setStatus('current')
hwupsRange1InputFrequencyHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange1InputFrequencyHigh.setStatus('current')
hwupsRange1InputFrequencyLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange1InputFrequencyLow.setStatus('current')
hwupsRange1InputVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange1InputVoltageHigh.setStatus('current')
hwupsRange1InputVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange1InputVoltageLow.setStatus('current')
hwupsRange2InputFrequencyHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange2InputFrequencyHigh.setStatus('current')
hwupsRange2InputFrequencyLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange2InputFrequencyLow.setStatus('current')
hwupsRange2InputVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange2InputVoltageHigh.setStatus('current')
hwupsRange2InputVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRange2InputVoltageLow.setStatus('current')
hwupsRemainingCapacityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("norma", 2), ("low", 3), ("depleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsRemainingCapacityStatus.setStatus('current')
hwupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsStatus.setStatus('current')
hwupsStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsStatusInfo.setStatus('current')
hwupsSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 39), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsSystemCreationClassName.setStatus('current')
hwupsSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsSystemName.setStatus('current')
hwupsTimeOnBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsTimeOnBackup.setStatus('current')
hwupsTotalOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsTotalOutputPower.setStatus('current')
hwupsTypeOfRangeSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("manual", 3), ("autoswitch", 4), ("wideRange", 5), ("notApplicable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsTypeOfRangeSwitching.setStatus('current')
hwupsUPSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 44), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwupsUPSPort.setStatus('current')
win32VoltageProbeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5), )
if mibBuilder.loadTexts: win32VoltageProbeTable.setStatus('current')
win32VoltageProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1), ).setIndexNames((0, "INFORMANT-HW", "hwvpIndex"))
if mibBuilder.loadTexts: win32VoltageProbeEntry.setStatus('current')
hwvpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpIndex.setStatus('current')
hwvpAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 2), Integer32()).setUnits('Hundredths of Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpAccuracy.setStatus('current')
hwvpAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpAvailability.setStatus('current')
hwvpCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpCaption.setStatus('current')
hwvpConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpConfigManagerErrorCode.setStatus('current')
hwvpConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpConfigManagerUserConfig.setStatus('current')
hwvpCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpCreationClassName.setStatus('current')
hwvpCurrentReading = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 8), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpCurrentReading.setStatus('current')
hwvpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpDescription.setStatus('current')
hwvpDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpDeviceID.setStatus('current')
hwvpErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpErrorCleared.setStatus('current')
hwvpErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpErrorDescription.setStatus('current')
hwvpInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpInstallDate.setStatus('current')
hwvpIsLinear = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpIsLinear.setStatus('current')
hwvpLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpLastErrorCode.setStatus('current')
hwvpLowerThresholdCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 16), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpLowerThresholdCritical.setStatus('current')
hwvpLowerThresholdFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 17), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpLowerThresholdFatal.setStatus('current')
hwvpLowerThresholdNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 18), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpLowerThresholdNonCritical.setStatus('current')
hwvpMaxReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 19), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpMaxReadable.setStatus('current')
hwvpMinReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 20), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpMinReadable.setStatus('current')
hwvpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpName.setStatus('current')
hwvpNominalReading = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 22), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpNominalReading.setStatus('current')
hwvpNormalMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 23), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpNormalMax.setStatus('current')
hwvpNormalMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 24), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpNormalMin.setStatus('current')
hwvpPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpPNPDeviceID.setStatus('current')
hwvpPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpPowerManagementCapabilities.setStatus('current')
hwvpPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpPowerManagementSupported.setStatus('current')
hwvpResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 28), Gauge32()).setUnits('Tenths of Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpResolution.setStatus('current')
hwvpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpStatus.setStatus('current')
hwvpStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpStatusInfo.setStatus('current')
hwvpSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpSystemCreationClassName.setStatus('current')
hwvpSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpSystemName.setStatus('current')
hwvpTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 33), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpTolerance.setStatus('current')
hwvpUpperThresholdCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 34), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpUpperThresholdCritical.setStatus('current')
hwvpUpperThresholdFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 35), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpUpperThresholdFatal.setStatus('current')
hwvpUpperThresholdNonCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 36), Integer32()).setUnits('Millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvpUpperThresholdNonCritical.setStatus('current')
wmiPrinting = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7))
if mibBuilder.loadTexts: wmiPrinting.setStatus('current')
win32PrinterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1), )
if mibBuilder.loadTexts: win32PrinterTable.setStatus('current')
win32PrinterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hwprIndex"))
if mibBuilder.loadTexts: win32PrinterEntry.setStatus('current')
hwprIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprIndex.setStatus('current')
hwprAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprAttributes.setStatus('current')
hwprAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningOrFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprAvailability.setStatus('current')
hwprAvailableJobSheets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprAvailableJobSheets.setStatus('current')
hwprAveragePagesPerMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprAveragePagesPerMinute.setStatus('current')
hwprCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCapabilities.setStatus('current')
hwprCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCapabilityDescriptions.setStatus('current')
hwprCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCaption.setStatus('current')
hwprCharSetsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCharSetsSupported.setStatus('current')
hwprComment = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprComment.setStatus('current')
hwprConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprConfigManagerErrorCode.setStatus('current')
hwprConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprConfigManagerUserConfig.setStatus('current')
hwprCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCreationClassName.setStatus('current')
hwprCurrentCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCurrentCapabilities.setStatus('current')
hwprCurrentCharSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCurrentCharSet.setStatus('current')
hwprCurrentLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("pcl", 3), ("hpgl", 4), ("pjl", 5), ("ps", 6), ("psprinter", 7), ("ipds", 8), ("ppds", 9), ("escapeP", 10), ("epson", 11), ("ddif", 12), ("interpress", 13), ("iso6429", 14), ("lineData", 15), ("dodca", 16), ("regis", 17), ("scs", 18), ("spdl", 19), ("tek4014", 20), ("pds", 21), ("igp", 22), ("codeV", 23), ("dscdse", 24), ("wps", 25), ("ln03", 26), ("ccitt", 27), ("quic", 28), ("cpap", 29), ("decPPL", 30), ("simpleText", 31), ("npap", 32), ("doc", 33), ("imPress", 34), ("pinwriter", 35), ("npdl", 36), ("nec201PL", 37), ("automatic", 38), ("pages", 39), ("lips", 40), ("tiff", 41), ("diagnostic", 42), ("caPSL", 43), ("excl", 44), ("lcds", 45), ("xes", 46), ("mime", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCurrentLanguage.setStatus('current')
hwprCurrentMimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCurrentMimeType.setStatus('current')
hwprCurrentNaturalLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCurrentNaturalLanguage.setStatus('current')
hwprCurrentPaperType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprCurrentPaperType.setStatus('current')
hwprDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefault.setStatus('current')
hwprDefaultCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefaultCapabilities.setStatus('current')
hwprDefaultCopies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefaultCopies.setStatus('current')
hwprDefaultLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("pcl", 3), ("hpgl", 4), ("pjl", 5), ("ps", 6), ("psprinter", 7), ("ipds", 8), ("ppds", 9), ("escapeP", 10), ("epson", 11), ("ddif", 12), ("interpress", 13), ("iso6429", 14), ("lineData", 15), ("dodca", 16), ("regis", 17), ("scs", 18), ("spdl", 19), ("tek4014", 20), ("pds", 21), ("igp", 22), ("codeV", 23), ("dscdse", 24), ("wps", 25), ("ln03", 26), ("ccitt", 27), ("quic", 28), ("cpap", 29), ("decPPL", 30), ("simpleText", 31), ("npap", 32), ("doc", 33), ("imPress", 34), ("pinwriter", 35), ("npdl", 36), ("nec201PL", 37), ("automatic", 38), ("pages", 39), ("lips", 40), ("tiff", 41), ("diagnostic", 42), ("caPSL", 43), ("excl", 44), ("lcds", 45), ("xes", 46), ("mime", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefaultLanguage.setStatus('current')
hwprDefaultMimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefaultMimeType.setStatus('current')
hwprDefaultNumberUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefaultNumberUp.setStatus('current')
hwprDefaultPaperType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefaultPaperType.setStatus('current')
hwprDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDefaultPriority.setStatus('current')
hwprDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDescription.setStatus('current')
hwprDetectedErrorState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("noError", 3), ("lowPaper", 4), ("noPaper", 5), ("lowToner", 6), ("noToner", 7), ("doorOpen", 8), ("jammed", 9), ("offline", 10), ("serviceRequested", 11), ("outputBinFull", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDetectedErrorState.setStatus('current')
hwprDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDeviceID.setStatus('current')
hwprDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDirect.setStatus('current')
hwprDoCompleteFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDoCompleteFirst.setStatus('current')
hwprDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprDriverName.setStatus('current')
hwprEnableBIDI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 34), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprEnableBIDI.setStatus('current')
hwprEnableDevQueryPrint = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprEnableDevQueryPrint.setStatus('current')
hwprErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprErrorCleared.setStatus('current')
hwprErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprErrorDescription.setStatus('current')
hwprErrorInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 38), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprErrorInformation.setStatus('current')
hwprExtendedDetectedErrorState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("noError", 2), ("lowPaper", 3), ("noPaper", 4), ("lowToner", 5), ("noToner", 6), ("doorOpen", 7), ("jammed", 8), ("serviceRequested", 9), ("outputBinFull", 10), ("paperProblem", 11), ("cannotPrintPage", 12), ("userInterventionRequired", 13), ("outOfMemory", 14), ("serverUnknown", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprExtendedDetectedErrorState.setStatus('current')
hwprExtendedPrinterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("idle", 3), ("printing", 4), ("warmup", 5), ("stoppedPrinting", 6), ("offline", 7), ("paused", 8), ("error", 9), ("busy", 10), ("notAvailable", 11), ("waiting", 12), ("processing", 13), ("initialization", 14), ("powerSave", 15), ("pendingDeletion", 16), ("iOActive", 17), ("manualFeed", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprExtendedPrinterStatus.setStatus('current')
hwprHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 41), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprHidden.setStatus('current')
hwprHorizontalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprHorizontalResolution.setStatus('current')
hwprInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 43), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprInstallDate.setStatus('current')
hwprJobCountSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprJobCountSinceLastReset.setStatus('current')
hwprKeepPrintedJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 45), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprKeepPrintedJobs.setStatus('current')
hwprLanguagesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 46), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprLanguagesSupported.setStatus('current')
hwprLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprLastErrorCode.setStatus('current')
hwprLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 48), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprLocal.setStatus('current')
hwprLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 49), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprLocation.setStatus('current')
hwprMarkingTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("electrophotographicLED", 3), ("electrophotographicLaser", 4), ("electrophotographicOther", 5), ("impactMovingHeadDotMatrix9pin", 6), ("impactMovingHeadDotMatrix24pin", 7), ("impactMovingHeadDotMatrixOther", 8), ("impactMovingHeadFullyFormed", 9), ("impactBand", 10), ("impactOther", 11), ("inkjetAqueous", 12), ("inkjetSolid", 13), ("inkjetOther", 14), ("pen", 15), ("thermalTransfer", 16), ("thermalSensitive", 17), ("thermalDiffusion", 18), ("thermalOther", 19), ("electroerosion", 20), ("electrostatic", 21), ("photographicMicrofiche", 22), ("photographicImagesetter", 23), ("photographicOther", 24), ("ionDeposition", 25), ("eBeam", 26), ("typesetter", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprMarkingTechnology.setStatus('current')
hwprMaxCopies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprMaxCopies.setStatus('current')
hwprMaxNumberUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprMaxNumberUp.setStatus('current')
hwprMaxSizeSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprMaxSizeSupported.setStatus('current')
hwprMimeTypesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 54), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprMimeTypesSupported.setStatus('current')
hwprName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 55), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprName.setStatus('current')
hwprNaturalLanguagesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 56), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprNaturalLanguagesSupported.setStatus('current')
hwprNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 57), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprNetwork.setStatus('current')
hwprPaperSizesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 58), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPaperSizesSupported.setStatus('current')
hwprPaperTypesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 59), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPaperTypesAvailable.setStatus('current')
hwprParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 60), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprParameters.setStatus('current')
hwprPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 61), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPNPDeviceID.setStatus('current')
hwprPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 62), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPortName.setStatus('current')
hwprPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 63), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPowerManagementCapabilities.setStatus('current')
hwprPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 64), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPowerManagementSupported.setStatus('current')
hwprPrinterPaperNames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 65), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPrinterPaperNames.setStatus('current')
hwprPrinterState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("paused", 1), ("error", 2), ("pendingDeletion", 3), ("paperJam", 4), ("paperOut", 5), ("manualFeed", 6), ("paperProblem", 7), ("offline", 8), ("ioActive", 9), ("busy", 10), ("printing", 11), ("outputBinFull", 12), ("notAvailable", 13), ("waiting", 14), ("processing", 15), ("initialization", 16), ("warmingUp", 17), ("tonerLow", 18), ("noToner", 19), ("pagePunt", 20), ("userInterventionRequired", 21), ("outOfMemory", 22), ("doorOpen", 23), ("serverUnknown", 24), ("powerSave", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPrinterState.setStatus('current')
hwprPrinterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("idle", 3), ("printing", 4), ("warmup", 5), ("stoppedPrinting", 6), ("offline", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPrinterStatus.setStatus('current')
hwprPrintJobDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 68), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPrintJobDataType.setStatus('current')
hwprPrintProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 69), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPrintProcessor.setStatus('current')
hwprPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPriority.setStatus('current')
hwprPublished = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 71), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprPublished.setStatus('current')
hwprQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 72), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprQueued.setStatus('current')
hwprRawOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 73), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprRawOnly.setStatus('current')
hwprSeparatorFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 74), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprSeparatorFile.setStatus('current')
hwprServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 75), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprServerName.setStatus('current')
hwprShared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 76), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprShared.setStatus('current')
hwprShareName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 77), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprShareName.setStatus('current')
hwprSpoolEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 78), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprSpoolEnabled.setStatus('current')
hwprStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 79), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprStartTime.setStatus('current')
hwprStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprStatus.setStatus('current')
hwprStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprStatusInfo.setStatus('current')
hwprSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 82), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprSystemCreationClassName.setStatus('current')
hwprSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 83), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprSystemName.setStatus('current')
hwprTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 84), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprTimeOfLastReset.setStatus('current')
hwprUntilTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 85), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprUntilTime.setStatus('current')
hwprVerticalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 86), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprVerticalResolution.setStatus('current')
hwprWorkOffline = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 87), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprWorkOffline.setStatus('current')
win32PrinterConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2), )
if mibBuilder.loadTexts: win32PrinterConfigurationTable.setStatus('current')
win32PrinterConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwprcIndex"))
if mibBuilder.loadTexts: win32PrinterConfigurationEntry.setStatus('current')
hwprcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcIndex.setStatus('current')
hwprcBitsPerPel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcBitsPerPel.setStatus('current')
hwprcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcCaption.setStatus('current')
hwprcCollate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcCollate.setStatus('current')
hwprcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("monochrome", 1), ("color", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcColor.setStatus('current')
hwprcCopies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcCopies.setStatus('current')
hwprcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcDescription.setStatus('current')
hwprcDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcDeviceName.setStatus('current')
hwprcDisplayFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcDisplayFlags.setStatus('current')
hwprcDisplayFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcDisplayFrequency.setStatus('current')
hwprcDitherType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noDithering", 1), ("coarseBrush", 2), ("fineBrush", 3), ("lineArt", 4), ("greyscale", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcDitherType.setStatus('current')
hwprcDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcDriverVersion.setStatus('current')
hwprcDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcDuplex.setStatus('current')
hwprcFormName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcFormName.setStatus('current')
hwprcHorizontalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 15), Gauge32()).setUnits('dots per inch').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcHorizontalResolution.setStatus('current')
hwprcICMIntent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("saturation", 1), ("contrast", 2), ("exactColor", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcICMIntent.setStatus('current')
hwprcICMMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("windows", 2), ("deviceDriver", 3), ("device", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcICMMethod.setStatus('current')
hwprcLogPixels = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcLogPixels.setStatus('current')
hwprcMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("standard", 1), ("transparency", 2), ("glossy", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcMediaType.setStatus('current')
hwprcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 20), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcName.setStatus('current')
hwprcOrientation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portrait", 1), ("landscape", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcOrientation.setStatus('current')
hwprcPaperLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 22), Gauge32()).setUnits('Tenths of a Millimeter').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcPaperLength.setStatus('current')
hwprcPaperSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcPaperSize.setStatus('current')
hwprcPaperWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 24), Gauge32()).setUnits('Tenths of a Millimeter').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcPaperWidth.setStatus('current')
hwprcPelsHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcPelsHeight.setStatus('current')
hwprcPelsWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcPelsWidth.setStatus('current')
hwprcPrintQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcPrintQuality.setStatus('current')
hwprcScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 28), Gauge32()).setUnits('Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcScale.setStatus('current')
hwprcSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 29), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcSettingID.setStatus('current')
hwprcSpecificationVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcSpecificationVersion.setStatus('current')
hwprcTTOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bitmap", 1), ("download", 2), ("substitute", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcTTOption.setStatus('current')
hwprcVerticalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 32), Gauge32()).setUnits('dots per inch').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcVerticalResolution.setStatus('current')
hwprcXResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcXResolution.setStatus('current')
hwprcYResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprcYResolution.setStatus('current')
win32PrinterDriverTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3), )
if mibBuilder.loadTexts: win32PrinterDriverTable.setStatus('current')
win32PrinterDriverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1), ).setIndexNames((0, "INFORMANT-HW", "hwprdIndex"))
if mibBuilder.loadTexts: win32PrinterDriverEntry.setStatus('current')
hwprdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdIndex.setStatus('current')
hwprdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdCaption.setStatus('current')
hwprdConfigFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdConfigFile.setStatus('current')
hwprdCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdCreationClassName.setStatus('current')
hwprdDataFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdDataFile.setStatus('current')
hwprdDefaultDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdDefaultDataType.setStatus('current')
hwprdDependentFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdDependentFiles.setStatus('current')
hwprdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdDescription.setStatus('current')
hwprdDriverPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdDriverPath.setStatus('current')
hwprdFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdFilePath.setStatus('current')
hwprdHelpFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdHelpFile.setStatus('current')
hwprdInfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdInfName.setStatus('current')
hwprdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdInstallDate.setStatus('current')
hwprdMonitorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdMonitorName.setStatus('current')
hwprdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdName.setStatus('current')
hwprdOEMUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdOEMUrl.setStatus('current')
hwprdStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdStarted.setStatus('current')
hwprdStartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdStartMode.setStatus('current')
hwprdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdStatus.setStatus('current')
hwprdSupportedPlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdSupportedPlatform.setStatus('current')
hwprdSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdSystemCreationClassName.setStatus('current')
hwprdSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdSystemName.setStatus('current')
hwprdVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("win9x", 0), ("win351", 1), ("nt40", 2), ("win2k", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprdVersion.setStatus('current')
win32PrintJobTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4), )
if mibBuilder.loadTexts: win32PrintJobTable.setStatus('current')
win32PrintJobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1), ).setIndexNames((0, "INFORMANT-HW", "hwprjIndex"))
if mibBuilder.loadTexts: win32PrintJobEntry.setStatus('current')
hwprjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjIndex.setStatus('current')
hwprjCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjCaption.setStatus('current')
hwprjDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjDataType.setStatus('current')
hwprjDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjDescription.setStatus('current')
hwprjDocument = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjDocument.setStatus('current')
hwprjDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjDriverName.setStatus('current')
hwprjElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjElapsedTime.setStatus('current')
hwprjHostPrintQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjHostPrintQueue.setStatus('current')
hwprjInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjInstallDate.setStatus('current')
hwprjJobId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjJobId.setStatus('current')
hwprjJobStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjJobStatus.setStatus('current')
hwprjName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjName.setStatus('current')
hwprjNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjNotify.setStatus('current')
hwprjOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjOwner.setStatus('current')
hwprjPagesPrinted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjPagesPrinted.setStatus('current')
hwprjParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjParameters.setStatus('current')
hwprjPrintProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjPrintProcessor.setStatus('current')
hwprjPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjPriority.setStatus('current')
hwprjSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 19), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjSize.setStatus('current')
hwprjStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjStartTime.setStatus('current')
hwprjStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjStatus.setStatus('current')
hwprjStatusMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2948))).clone(namedValues=NamedValues(("paused", 1), ("error", 2), ("deleting", 4), ("spooling", 8), ("printing", 16), ("offline", 32), ("paperout", 64), ("printed", 128), ("deleted", 256), ("blockedDevQ", 512), ("userInterventionReq", 1024), ("restart", 2948)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjStatusMask.setStatus('current')
hwprjTimeSubmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 23), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjTimeSubmitted.setStatus('current')
hwprjTotalPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjTotalPages.setStatus('current')
hwprjUntilTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwprjUntilTime.setStatus('current')
win32TCPIPPrinterPortTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5), )
if mibBuilder.loadTexts: win32TCPIPPrinterPortTable.setStatus('current')
win32TCPIPPrinterPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1), ).setIndexNames((0, "INFORMANT-HW", "hwtppIndex"))
if mibBuilder.loadTexts: win32TCPIPPrinterPortEntry.setStatus('current')
hwtppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppIndex.setStatus('current')
hwtppByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppByteCount.setStatus('current')
hwtppCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppCaption.setStatus('current')
hwtppCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppCreationClassName.setStatus('current')
hwtppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppDescription.setStatus('current')
hwtppHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppHostAddress.setStatus('current')
hwtppInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppInstallDate.setStatus('current')
hwtppName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppName.setStatus('current')
hwtppPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppPortNumber.setStatus('current')
hwtppProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("raw", 0), ("lpr", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppProtocol.setStatus('current')
hwtppQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppQueue.setStatus('current')
hwtppSNMPCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppSNMPCommunity.setStatus('current')
hwtppSNMPDevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppSNMPDevIndex.setStatus('current')
hwtppSNMPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppSNMPEnabled.setStatus('current')
hwtppStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppStatus.setStatus('current')
hwtppSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 16), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppSystemCreationClassName.setStatus('current')
hwtppSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 17), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppSystemName.setStatus('current')
hwtppType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("n0x1Write", 1), ("n0x2Read", 2), ("n0x4Redirected", 4), ("n0x8NetAttached", 8), ("n0x10Unknown", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtppType.setStatus('current')
wmiTelephony = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8))
if mibBuilder.loadTexts: wmiTelephony.setStatus('current')
win32POTSModemTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1), )
if mibBuilder.loadTexts: win32POTSModemTable.setStatus('current')
win32POTSModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hwpmIndex"))
if mibBuilder.loadTexts: win32POTSModemEntry.setStatus('current')
hwpmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmIndex.setStatus('current')
hwpmAnswerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("disabled", 3), ("manualAnswer", 4), ("autoAnswer", 5), ("autoAnswerWithCallBack", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmAnswerMode.setStatus('current')
hwpmAttachedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmAttachedTo.setStatus('current')
hwpmAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmAvailability.setStatus('current')
hwpmBlindOff = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmBlindOff.setStatus('current')
hwpmBlindOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmBlindOn.setStatus('current')
hwpmCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCaption.setStatus('current')
hwpmCompatibilityFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCompatibilityFlags.setStatus('current')
hwpmCompressionInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("noCompression", 3), ("mnp5", 4), ("v42bis", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCompressionInfo.setStatus('current')
hwpmCompressionOff = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCompressionOff.setStatus('current')
hwpmCompressionOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCompressionOn.setStatus('current')
hwpmConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmConfigManagerErrorCode.setStatus('current')
hwpmConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmConfigManagerUserConfig.setStatus('current')
hwpmConfigurationDialog = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmConfigurationDialog.setStatus('current')
hwpmCountriesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCountriesSupported.setStatus('current')
hwpmCountrySelected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCountrySelected.setStatus('current')
hwpmCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCreationClassName.setStatus('current')
hwpmCurrentPasswords = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmCurrentPasswords.setStatus('current')
hwpmDCB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDCB.setStatus('current')
hwpmDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDefault.setStatus('current')
hwpmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDescription.setStatus('current')
hwpmDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDeviceID.setStatus('current')
hwpmDeviceLoader = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDeviceLoader.setStatus('current')
hwpmDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nullModem", 1), ("internalModem", 2), ("externalModem", 3), ("pcmciaModem", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDeviceType.setStatus('current')
hwpmDialType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("tone", 1), ("pulse", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDialType.setStatus('current')
hwpmDriverDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmDriverDate.setStatus('current')
hwpmErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmErrorCleared.setStatus('current')
hwpmErrorControlForced = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmErrorControlForced.setStatus('current')
hwpmErrorControlInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("noErrorCorrection", 3), ("mnp4", 4), ("lapm", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmErrorControlInfo.setStatus('current')
hwpmErrorControlOff = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmErrorControlOff.setStatus('current')
hwpmErrorControlOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmErrorControlOn.setStatus('current')
hwpmErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmErrorDescription.setStatus('current')
hwpmFlowControlHard = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmFlowControlHard.setStatus('current')
hwpmFlowControlOff = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmFlowControlOff.setStatus('current')
hwpmFlowControlSoft = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 35), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmFlowControlSoft.setStatus('current')
hwpmInactivityScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmInactivityScale.setStatus('current')
hwpmInactivityTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 37), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmInactivityTimeout.setStatus('current')
hwpmModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmModemIndex.setStatus('current')
hwpmInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 39), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmInstallDate.setStatus('current')
hwpmLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmLastErrorCode.setStatus('current')
hwpmMaxBaudRateToPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 41), Gauge32()).setUnits('Bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmMaxBaudRateToPhone.setStatus('current')
hwpmMaxBaudRateToSerialPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 42), Gauge32()).setUnits('Bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmMaxBaudRateToSerialPort.setStatus('current')
hwpmMaxNumberOfPasswords = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmMaxNumberOfPasswords.setStatus('current')
hwpmModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 44), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmModel.setStatus('current')
hwpmModemInfPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 45), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmModemInfPath.setStatus('current')
hwpmModemInfSection = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 46), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmModemInfSection.setStatus('current')
hwpmModulationBell = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 47), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmModulationBell.setStatus('current')
hwpmModulationCCITT = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 48), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmModulationCCITT.setStatus('current')
hwpmModulationScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("notSupported", 3), ("bell103", 4), ("bell212A", 5), ("v22bis", 6), ("v32", 7), ("v32bis", 8), ("vturbo", 9), ("vFC", 10), ("v34", 11), ("v34bis", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmModulationScheme.setStatus('current')
hwpmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 50), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmName.setStatus('current')
hwpmPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 51), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmPNPDeviceID.setStatus('current')
hwpmPortSubClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("parallelPort", 0), ("serialPort", 1), ("modem", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmPortSubClass.setStatus('current')
hwpmPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 53), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmPowerManagementCapabilities.setStatus('current')
hwpmPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 54), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmPowerManagementSupported.setStatus('current')
hwpmPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 55), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmPrefix.setStatus('current')
hwpmProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 56), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmProperties.setStatus('current')
hwpmProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 57), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmProviderName.setStatus('current')
hwpmPulse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 58), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmPulse.setStatus('current')
hwpmReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 59), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmReset.setStatus('current')
hwpmResponsesKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 60), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmResponsesKeyName.setStatus('current')
hwpmRingsBeforeAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmRingsBeforeAnswer.setStatus('current')
hwpmSpeakerModeDial = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 62), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerModeDial.setStatus('current')
hwpmSpeakerModeOff = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 63), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerModeOff.setStatus('current')
hwpmSpeakerModeOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 64), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerModeOn.setStatus('current')
hwpmSpeakerModeSetup = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 65), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerModeSetup.setStatus('current')
hwpmSpeakerVolumeHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 66), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerVolumeHigh.setStatus('current')
hwpmSpeakerVolumeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("notSupported", 2), ("high", 3), ("medium", 4), ("low", 5), ("off", 6), ("auto", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerVolumeInfo.setStatus('current')
hwpmSpeakerVolumeLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 68), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerVolumeLow.setStatus('current')
hwpmSpeakerVolumeMed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 69), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSpeakerVolumeMed.setStatus('current')
hwpmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmStatus.setStatus('current')
hwpmStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmStatusInfo.setStatus('current')
hwpmStringFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 72), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmStringFormat.setStatus('current')
hwpmSupportsCallback = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 73), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSupportsCallback.setStatus('current')
hwpmSupportsSynchronousConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 74), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSupportsSynchronousConnect.setStatus('current')
hwpmSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 75), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSystemCreationClassName.setStatus('current')
hwpmSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 76), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmSystemName.setStatus('current')
hwpmTerminator = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 77), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmTerminator.setStatus('current')
hwpmTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 78), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmTimeOfLastReset.setStatus('current')
hwpmTone = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 79), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmTone.setStatus('current')
hwpmVoiceSwitchFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 80), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwpmVoiceSwitchFeature.setStatus('current')
wmiVideoMonitor = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9))
if mibBuilder.loadTexts: wmiVideoMonitor.setStatus('current')
win32DesktopMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1), )
if mibBuilder.loadTexts: win32DesktopMonitorTable.setStatus('current')
win32DesktopMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1), ).setIndexNames((0, "INFORMANT-HW", "hwdmIndex"))
if mibBuilder.loadTexts: win32DesktopMonitorEntry.setStatus('current')
hwdmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmIndex.setStatus('current')
hwdmAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmAvailability.setStatus('current')
hwdmBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmBandwidth.setStatus('current')
hwdmCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmCaption.setStatus('current')
hwdmConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmConfigManagerErrorCode.setStatus('current')
hwdmConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmConfigManagerUserConfig.setStatus('current')
hwdmCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmCreationClassName.setStatus('current')
hwdmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmDescription.setStatus('current')
hwdmDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmDeviceID.setStatus('current')
hwdmDisplayType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("multiscanColor", 2), ("multiscanMonochrome", 3), ("fixedFrequencyColor", 4), ("fixedFrequencyMonochrome", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmDisplayType.setStatus('current')
hwdmErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmErrorCleared.setStatus('current')
hwdmErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmErrorDescription.setStatus('current')
hwdmInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmInstallDate.setStatus('current')
hwdmIsLocked = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmIsLocked.setStatus('current')
hwdmLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmLastErrorCode.setStatus('current')
hwdmMonitorManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmMonitorManufacturer.setStatus('current')
hwdmMonitorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmMonitorType.setStatus('current')
hwdmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmName.setStatus('current')
hwdmPixelsPerXLogicalInch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 19), Gauge32()).setUnits('Pixels per Logical Inch').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmPixelsPerXLogicalInch.setStatus('current')
hwdmPixelsPerYLogicalInch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 20), Gauge32()).setUnits('Pixels per Logical Inch').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmPixelsPerYLogicalInch.setStatus('current')
hwdmPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmPNPDeviceID.setStatus('current')
hwdmPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmPowerManagementCapabilities.setStatus('current')
hwdmPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmPowerManagementSupported.setStatus('current')
hwdmScreenHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmScreenHeight.setStatus('current')
hwdmScreenWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmScreenWidth.setStatus('current')
hwdmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmStatus.setStatus('current')
hwdmStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmStatusInfo.setStatus('current')
hwdmSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmSystemCreationClassName.setStatus('current')
hwdmSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdmSystemName.setStatus('current')
win32VideoControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2), )
if mibBuilder.loadTexts: win32VideoControllerTable.setStatus('current')
win32VideoControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1), ).setIndexNames((0, "INFORMANT-HW", "hwvcIndex"))
if mibBuilder.loadTexts: win32VideoControllerEntry.setStatus('current')
hwvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcIndex.setStatus('current')
hwvcAcceleratorCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcAcceleratorCapabilities.setStatus('current')
hwvcAdapterCompatibility = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcAdapterCompatibility.setStatus('current')
hwvcAdapterDACType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcAdapterDACType.setStatus('current')
hwvcAdapterRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 5), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcAdapterRAM.setStatus('current')
hwvcAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcAvailability.setStatus('current')
hwvcCapabilityDescriptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCapabilityDescriptions.setStatus('current')
hwvcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCaption.setStatus('current')
hwvcColorTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcColorTableEntries.setStatus('current')
hwvcConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcConfigManagerErrorCode.setStatus('current')
hwvcConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcConfigManagerUserConfig.setStatus('current')
hwvcCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 12), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCreationClassName.setStatus('current')
hwvcCurrentBitsPerPixel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 13), Gauge32()).setUnits('Bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentBitsPerPixel.setStatus('current')
hwvcCurrentHorizontalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 14), Gauge32()).setUnits('Pixels').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentHorizontalResolution.setStatus('current')
hwvcCurrentNumberOfColors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentNumberOfColors.setStatus('current')
hwvcCurrentNumberOfColumns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentNumberOfColumns.setStatus('current')
hwvcCurrentNumberOfRows = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentNumberOfRows.setStatus('current')
hwvcCurrentRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 18), Gauge32()).setUnits('Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentRefreshRate.setStatus('current')
hwvcCurrentScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("interlaced", 3), ("nonInterlaced", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentScanMode.setStatus('current')
hwvcCurrentVerticalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 20), Gauge32()).setUnits('Pixels').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcCurrentVerticalResolution.setStatus('current')
hwvcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcDescription.setStatus('current')
hwvcDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcDeviceID.setStatus('current')
hwvcDeviceSpecificPens = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcDeviceSpecificPens.setStatus('current')
hwvcDitherType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noDithering", 1), ("ditheringWithACoarseBrush", 2), ("ditheringWithAFineBrush", 3), ("lineArtDithering", 4), ("deviceDoesGrayScaling", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcDitherType.setStatus('current')
hwvcDriverDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcDriverDate.setStatus('current')
hwvcDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcDriverVersion.setStatus('current')
hwvcErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcErrorCleared.setStatus('current')
hwvcErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcErrorDescription.setStatus('current')
hwvcICMIntent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("saturation", 1), ("contrast", 2), ("exactColor", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcICMIntent.setStatus('current')
hwvcICMMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("windows", 2), ("deviceDriver", 3), ("destinationDevice", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcICMMethod.setStatus('current')
hwvcInfFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcInfFilename.setStatus('current')
hwvcInfSection = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcInfSection.setStatus('current')
hwvcInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 33), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcInstallDate.setStatus('current')
hwvcInstalledDisplayDrivers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcInstalledDisplayDrivers.setStatus('current')
hwvcLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcLastErrorCode.setStatus('current')
hwvcMaxMemorySupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 36), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcMaxMemorySupported.setStatus('current')
hwvcMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcMaxNumberControlled.setStatus('current')
hwvcMaxRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 38), Gauge32()).setUnits('Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcMaxRefreshRate.setStatus('current')
hwvcMinRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 39), Gauge32()).setUnits('Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcMinRefreshRate.setStatus('current')
hwvcMonochrome = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 40), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcMonochrome.setStatus('current')
hwvcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 41), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcName.setStatus('current')
hwvcNumberOfColorPlanes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcNumberOfColorPlanes.setStatus('current')
hwvcNumberOfVideoPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcNumberOfVideoPages.setStatus('current')
hwvcPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 44), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcPNPDeviceID.setStatus('current')
hwvcPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 45), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcPowerManagementCapabilities.setStatus('current')
hwvcPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 46), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcPowerManagementSupported.setStatus('current')
hwvcProtocolSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46))).clone(namedValues=NamedValues(("other", 0), ("unknown", 1), ("eisa", 2), ("isa", 3), ("pci", 4), ("ataATAPI", 5), ("flexibleDiskette", 6), ("n1496", 7), ("scsiParallelInterface", 8), ("scsiFibreChannelProtocol", 9), ("scsiSerialBusProtocol", 10), ("scsiSerialBusProtocol1394", 11), ("scsiSerialStorageArchitecture", 12), ("vesa", 13), ("pcmcia", 14), ("universalSerialBus", 15), ("parallelProtocol", 16), ("escon", 17), ("diagnostic", 18), ("i2C", 19), ("power", 20), ("hippi", 21), ("multiBus", 22), ("vme", 23), ("ipi", 24), ("ieee488", 25), ("rs232", 26), ("ieee802310BASE5", 27), ("ieee802310BASE2", 28), ("ieee80231BASE5", 29), ("ieee802310BROAD36", 30), ("ieee8023100BASEVG", 31), ("ieee8025TokenRing", 32), ("ansiX3T95FDDI", 33), ("mca", 34), ("esdi", 35), ("ide", 36), ("cmd", 37), ("st506", 38), ("dssi", 39), ("qic2", 40), ("enhancedATAIDE", 41), ("agp", 42), ("twowayInfrared", 43), ("fastInfrared", 44), ("serialInfrared", 45), ("irBus", 46)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcProtocolSupported.setStatus('current')
hwvcReservedSystemPaletteEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcReservedSystemPaletteEntries.setStatus('current')
hwvcSpecificationVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcSpecificationVersion.setStatus('current')
hwvcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcStatus.setStatus('current')
hwvcStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcStatusInfo.setStatus('current')
hwvcSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 52), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcSystemCreationClassName.setStatus('current')
hwvcSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 53), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcSystemName.setStatus('current')
hwvcSystemPaletteEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcSystemPaletteEntries.setStatus('current')
hwvcTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 55), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcTimeOfLastReset.setStatus('current')
hwvcVideoArchitecture = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 160))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("cga", 3), ("ega", 4), ("vga", 5), ("svga", 6), ("mda", 7), ("hgc", 8), ("mcga", 9), ("n8514A", 10), ("xga", 11), ("linearFrameBuffer", 12), ("pc98", 160)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcVideoArchitecture.setStatus('current')
hwvcVideoMemoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("vram", 3), ("dram", 4), ("sram", 5), ("wram", 6), ("edoRAM", 7), ("burstSynchronousDRAM", 8), ("pipelinedBurstSRAM", 9), ("cdram", 10), ("n3DRAM", 11), ("sdram", 12), ("sgram", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcVideoMemoryType.setStatus('current')
hwvcVideoMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcVideoMode.setStatus('current')
hwvcVideoModeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 59), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcVideoModeDescription.setStatus('current')
hwvcVideoProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 60), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwvcVideoProcessor.setStatus('current')
mibBuilder.exportSymbols("INFORMANT-HW", hwcdConfigManagerUserConfig=hwcdConfigManagerUserConfig, hwobSKU=hwobSKU, hwprcPaperWidth=hwprcPaperWidth, hwpsdDriverDate=hwpsdDriverDate, hwbaName=hwbaName, hwfcPowerManagementSupported=hwfcPowerManagementSupported, hwmmAvailability=hwmmAvailability, hwddPowerManagementCapabilities=hwddPowerManagementCapabilities, hwideErrorDescription=hwideErrorDescription, hwnaSystemName=hwnaSystemName, hwbaExpectedBatteryLife=hwbaExpectedBatteryLife, win32PortConnectorEntry=win32PortConnectorEntry, hwfanSystemName=hwfanSystemName, hwnaProductName=hwnaProductName, hwcpPNPDeviceID=hwcpPNPDeviceID, hwcpNormalMax=hwcpNormalMax, hwcpUpperThresholdFatal=hwcpUpperThresholdFatal, hwkbPowerManagementCapabilities=hwkbPowerManagementCapabilities, hwucProtocolSupported=hwucProtocolSupported, hwprCaption=hwprCaption, hwspcErrorReplaceCharacter=hwspcErrorReplaceCharacter, win32FanEntry=win32FanEntry, hwprdDependentFiles=hwprdDependentFiles, hwcmIndex=hwcmIndex, hwptStatusInfo=hwptStatusInfo, hwmbSystemName=hwmbSystemName, hwprjOwner=hwprjOwner, hwhpPowerManagementSupported=hwhpPowerManagementSupported, win32MotherboardDeviceEntry=win32MotherboardDeviceEntry, hwpmaDescription=hwpmaDescription, hwsbmErrorInfo=hwsbmErrorInfo, hwscsiConfigManagerUserConfig=hwscsiConfigManagerUserConfig, hwpmIndex=hwpmIndex, hwbaCreationClassName=hwbaCreationClassName, hwpsdSigner=hwpsdSigner, hwtdManufacturer=hwtdManufacturer, hwpmaName=hwpmaName, hwidSystemName=hwidSystemName, hwdmStatusInfo=hwdmStatusInfo, hwtmpStatusInfo=hwtmpStatusInfo, hwpmaWeight=hwpmaWeight, hwhpAvailability=hwhpAvailability, hwkbErrorCleared=hwkbErrorCleared, hwpsdFriendlyName=hwpsdFriendlyName, hwbbOtherIdentifyingInfo=hwbbOtherIdentifyingInfo, hwcdCompressionMethod=hwcdCompressionMethod, hwuhPowerManagementSupported=hwuhPowerManagementSupported, hwpmTimeOfLastReset=hwpmTimeOfLastReset, hwpmConfigManagerUserConfig=hwpmConfigManagerUserConfig, hwfanLastErrorCode=hwfanLastErrorCode, hwuhPowerManagementCapabilities=hwuhPowerManagementCapabilities, hwtdConfigManagerErrorCode=hwtdConfigManagerErrorCode, hwideName=hwideName, hwptName=hwptName, hwpcmMaxNumberControlled=hwpcmMaxNumberControlled, hwprDefaultPaperType=hwprDefaultPaperType, hwucErrorCleared=hwucErrorCleared, hwkbDescription=hwkbDescription, hwsndSystemName=hwsndSystemName, hwprcOrientation=hwprcOrientation, hwcdTransferRate=hwcdTransferRate, hwbiSoftwareElementID=hwbiSoftwareElementID, hwsndName=hwsndName, hwpmmOtherIdentifyingInfo=hwpmmOtherIdentifyingInfo, hwvpPowerManagementSupported=hwvpPowerManagementSupported, hwkbInstallDate=hwkbInstallDate, hw1394Index=hw1394Index, hwtmpLastErrorCode=hwtmpLastErrorCode, hw1394Status=hw1394Status, hwpmdMediaType=hwpmdMediaType, hwspPowerManagementSupported=hwspPowerManagementSupported, hwseSecurityBreach=hwseSecurityBreach, hwnaDeviceID=hwnaDeviceID, hwmaErrorGranularity=hwmaErrorGranularity, hwvcCurrentRefreshRate=hwvcCurrentRefreshRate, hwspStatus=hwspStatus, hwkbLastErrorCode=hwkbLastErrorCode, hwppPowerManagementCapabilities=hwppPowerManagementCapabilities, hwmaErrorCleared=hwmaErrorCleared, hwmaLastErrorCode=hwmaLastErrorCode, hwprjCaption=hwprjCaption, hwvcName=hwvcName, hwpsdDevLoader=hwpsdDevLoader, hwbiOtherTargetOS=hwbiOtherTargetOS, hwmmCreationClassName=hwmmCreationClassName, hwcmDescription=hwcmDescription, hwcpName=hwcpName, hwppMaxNumberControlled=hwppMaxNumberControlled, hwbaFullChargeCapacity=hwbaFullChargeCapacity, hwtdNeedsCleaning=hwtdNeedsCleaning, hwcpInstallDate=hwcpInstallDate, hwbbWidth=hwbbWidth, hwpmaOtherIdentifyingInfo=hwpmaOtherIdentifyingInfo, hwmaErrorTransferSize=hwmaErrorTransferSize, hwfcIndex=hwfcIndex, hwupsPNPDeviceID=hwupsPNPDeviceID, hwvpCreationClassName=hwvpCreationClassName, hwprDefaultLanguage=hwprDefaultLanguage, hwcdDeviceID=hwcdDeviceID, hwcpuProcessorId=hwcpuProcessorId, hwpmmReplaceable=hwpmmReplaceable, hwnacConfigurationIndex=hwnacConfigurationIndex, hwmmErrorInfo=hwmmErrorInfo, hwnacIPPortSecurityEnabled=hwnacIPPortSecurityEnabled, win32SerialPortEntry=win32SerialPortEntry, hwssPartNumber=hwssPartNumber, hwvcIndex=hwvcIndex, hwnaMACAddress=hwnaMACAddress, hwfanDesiredSpeed=hwfanDesiredSpeed, hwtmpStatus=hwtmpStatus, hwbuCreationClassName=hwbuCreationClassName, hwvpStatusInfo=hwvpStatusInfo, hwvpInstallDate=hwvpInstallDate, hwupsErrorCleared=hwupsErrorCleared, wmiNetworkingDevice=wmiNetworkingDevice, hwnacWINSPrimaryServer=hwnacWINSPrimaryServer, hwcdDriveIntegrity=hwcdDriveIntegrity, hwddSystemCreationClassName=hwddSystemCreationClassName, hwirqCSName=hwirqCSName, hwpmFlowControlSoft=hwpmFlowControlSoft, hwbiReleaseDate=hwbiReleaseDate, win32DiskDriveTable=win32DiskDriveTable, hwpcmProtocolSupported=hwpcmProtocolSupported, hwspcXOffXMitThreshold=hwspcXOffXMitThreshold, hwptDeviceInterface=hwptDeviceInterface, hwhpPNPDeviceID=hwhpPNPDeviceID, win32SoundDeviceTable=win32SoundDeviceTable, hwrfgSystemCreationClassName=hwrfgSystemCreationClassName, hwmbSystemCreationClassName=hwmbSystemCreationClassName, hwspInstallDate=hwspInstallDate, hwhpConfigManagerErrorCode=hwhpConfigManagerErrorCode, hwddInterfaceType=hwddInterfaceType, hwpmSpeakerVolumeInfo=hwpmSpeakerVolumeInfo, hwasIndex=hwasIndex, hwpbTimeToFullCharge=hwpbTimeToFullCharge, win32NetworkAdapterConfigTable=win32NetworkAdapterConfigTable, hwscsiTimeOfLastReset=hwscsiTimeOfLastReset, hwcdSystemCreationClassName=hwcdSystemCreationClassName, hwseCurrentRequiredOrProduced=hwseCurrentRequiredOrProduced, hwpbMaxRechargeTime=hwpbMaxRechargeTime, hwnacIndex=hwnacIndex, win32PortableBatteryTable=win32PortableBatteryTable, hwfdCreationClassName=hwfdCreationClassName, hwnacDatabasePath=hwnacDatabasePath, hwmmPowerManagementSupported=hwmmPowerManagementSupported, hwtdPNPDeviceID=hwtdPNPDeviceID, win32VideoControllerTable=win32VideoControllerTable, hwtmpName=hwtmpName, hwssPMESignal=hwssPMESignal, hwucDeviceID=hwucDeviceID, hwcmAdditionalErrorData=hwcmAdditionalErrorData, hwddErrorCleared=hwddErrorCleared, hwpsdLocation=hwpsdLocation, hwidIndex=hwidIndex, hwuhErrorDescription=hwuhErrorDescription, hwpmTerminator=hwpmTerminator, hwupsDescription=hwupsDescription, hwdmaWordMode=hwdmaWordMode, hwcpuL3CacheSpeed=hwcpuL3CacheSpeed, hwbbStatus=hwbbStatus, hwtdDescription=hwtdDescription, hwupsTypeOfRangeSwitching=hwupsTypeOfRangeSwitching, hwpnpInstallDate=hwpnpInstallDate, hwvcDitherType=hwvcDitherType, hwmmErrorCleared=hwmmErrorCleared, hwvcSpecificationVersion=hwvcSpecificationVersion, hwspcCTSOutflowControl=hwspcCTSOutflowControl, hwspSettableParityCheck=hwspSettableParityCheck, hwddIndex=hwddIndex, hwpmaStatus=hwpmaStatus, hwprjPrintProcessor=hwprjPrintProcessor, win32RefrigerationEntry=win32RefrigerationEntry, hwcpErrorCleared=hwcpErrorCleared, hwnacWINSEnableLMHostsLookup=hwnacWINSEnableLMHostsLookup, hwcdCapabilityDescriptions=hwcdCapabilityDescriptions, hwpmdHotSwappable=hwpmdHotSwappable, hwnacPMTUBHDetectEnabled=hwnacPMTUBHDetectEnabled, hwidDeviceID=hwidDeviceID, hwvpNormalMax=hwvpNormalMax, hwprVerticalResolution=hwprVerticalResolution, hwpmmCreationClassName=hwpmmCreationClassName, hwcmErrorData=hwcmErrorData, hwrfgStatus=hwrfgStatus, hwsbmErrorDescription=hwsbmErrorDescription, hwprjIndex=hwprjIndex, hwprCurrentLanguage=hwprCurrentLanguage, hwtdMaxPartitionCount=hwtdMaxPartitionCount, hwmbLastErrorCode=hwmbLastErrorCode, hwdaName=hwdaName, hwsbmErrorData=hwsbmErrorData, hwmbStatus=hwmbStatus, hwrfgDescription=hwrfgDescription, hwpmmPoweredOn=hwpmmPoweredOn, hwirqTriggerType=hwirqTriggerType, hwpcModel=hwpcModel, hwnacArpAlwaysSourceRoute=hwnacArpAlwaysSourceRoute, win32MotherboardDeviceTable=win32MotherboardDeviceTable, hwbaSystemCreationClassName=hwbaSystemCreationClassName, hwidErrorCleared=hwidErrorCleared, hwtmpLowerThresholdFatal=hwtmpLowerThresholdFatal, hwvcCurrentNumberOfColors=hwvcCurrentNumberOfColors, hwprStatus=hwprStatus, hwptPowerManagementSupported=hwptPowerManagementSupported, hwdmPowerManagementSupported=hwdmPowerManagementSupported, win32CurrentProbeEntry=win32CurrentProbeEntry, hwtdEOTWarningZoneSize=hwtdEOTWarningZoneSize, hwpcSKU=hwpcSKU, hwvcLastErrorCode=hwvcLastErrorCode, hwcmCacheSpeed=hwcmCacheSpeed, hwprjDescription=hwprjDescription, hwddMediaLoaded=hwddMediaLoaded, hwvpUpperThresholdNonCritical=hwvpUpperThresholdNonCritical, hwspcXOnCharacter=hwspcXOnCharacter, hwfcErrorCleared=hwfcErrorCleared, hwscsiPNPDeviceID=hwscsiPNPDeviceID, hw1394ProtocolSupported=hw1394ProtocolSupported, hwideConfigManagerErrorCode=hwideConfigManagerErrorCode, hwpnpPowerManagementSupported=hwpnpPowerManagementSupported, hwssLengthAllowed=hwssLengthAllowed, hwprAvailability=hwprAvailability, hwfcCaption=hwfcCaption, hwmbPowerManagementSupported=hwmbPowerManagementSupported, hwseHeight=hwseHeight, hwsbmAvailability=hwsbmAvailability, hwppStatus=hwppStatus, hw1394SystemCreationClassName=hw1394SystemCreationClassName, hwpcmIndex=hwpcmIndex, hwuhStatus=hwuhStatus, hwvcConfigManagerErrorCode=hwvcConfigManagerErrorCode, hwprCharSetsSupported=hwprCharSetsSupported, hwbaLastErrorCode=hwbaLastErrorCode, hwdmaCSName=hwdmaCSName, hwpcCreationClassName=hwpcCreationClassName, hwkbPNPDeviceID=hwkbPNPDeviceID, hwscsiErrorCleared=hwscsiErrorCleared, hwidePowerManagementSupported=hwidePowerManagementSupported, hwprWorkOffline=hwprWorkOffline, hwcpuNumberOfCores=hwcpuNumberOfCores, hwprcPrintQuality=hwprcPrintQuality, hwvpDeviceID=hwvpDeviceID, hwmbPrimaryBusType=hwmbPrimaryBusType, hwnaConfigManagerUserConfig=hwnaConfigManagerUserConfig, hwfdErrorDescription=hwfdErrorDescription, hwscsiConfigManagerErrorCode=hwscsiConfigManagerErrorCode, hwpnpConfigManagerErrorCode=hwpnpConfigManagerErrorCode, hwfdLastErrorCode=hwfdLastErrorCode, hwpcName=hwpcName, hwfdMaxBlockSize=hwfdMaxBlockSize, hwbiCurrentLanguage=hwbiCurrentLanguage, hwcpuErrorDescription=hwcpuErrorDescription, hwvpConfigManagerUserConfig=hwvpConfigManagerUserConfig, hwpsdCompatID=hwpsdCompatID, win32FanTable=win32FanTable, hwtdName=hwtdName)
mibBuilder.exportSymbols("INFORMANT-HW", hwpcManufacturer=hwpcManufacturer, hwtmpSystemCreationClassName=hwtmpSystemCreationClassName, hwtdMediaType=hwtdMediaType, hwucInstallDate=hwucInstallDate, hwtmpNormalMin=hwtmpNormalMin, hwnaName=hwnaName, hwcdMinBlockSize=hwcdMinBlockSize, win32PrinterEntry=win32PrinterEntry, hwbbDepth=hwbbDepth, wmiMotherboardControllerPort=wmiMotherboardControllerPort, hwddMaxMediaSize=hwddMaxMediaSize, hwpmInactivityScale=hwpmInactivityScale, hwmaSystemName=hwmaSystemName, hwbaPowerManagementSupported=hwbaPowerManagementSupported, hwucSystemName=hwucSystemName, hwbiListOfLanguages=hwbiListOfLanguages, hwpmCreationClassName=hwpmCreationClassName, hwdmaCreationClassName=hwdmaCreationClassName, hwnaLastErrorCode=hwnaLastErrorCode, hwirqStatus=hwirqStatus, hwbuDeviceID=hwbuDeviceID, hwdmDeviceID=hwdmDeviceID, hwmbInstallDate=hwmbInstallDate, hwppLastErrorCode=hwppLastErrorCode, hwsbmCreationClassName=hwsbmCreationClassName, hwcpErrorDescription=hwcpErrorDescription, hwptPowerManagementCapabilities=hwptPowerManagementCapabilities, hwspcRTSFlowControlType=hwspcRTSFlowControlType, hwspSettableFlowControl=hwspSettableFlowControl, hwssName=hwssName, hwddSignature=hwddSignature, hwidSystemCreationClassName=hwidSystemCreationClassName, hwpreInstallDate=hwpreInstallDate, hwspProviderType=hwspProviderType, hwseHeatGeneration=hwseHeatGeneration, hwvpAvailability=hwvpAvailability, hwmaErrorMethodology=hwmaErrorMethodology, hwnaCreationClassName=hwnaCreationClassName, hwdmInstallDate=hwdmInstallDate, hwbuBusType=hwbuBusType, hwptIndex=hwptIndex, hwupsConfigManagerUserConfig=hwupsConfigManagerUserConfig, hwpmmPositionInRow=hwpmmPositionInRow, win32SystemMemoryResourceTable=win32SystemMemoryResourceTable, hwvpPowerManagementCapabilities=hwvpPowerManagementCapabilities, hwddCaption=hwddCaption, hwkbNumberOfFunctionKeys=hwkbNumberOfFunctionKeys, hwfcLastErrorCode=hwfcLastErrorCode, hwkbAvailability=hwkbAvailability, hwpmmPartNumber=hwpmmPartNumber, hwmmName=hwmmName, hwfdPowerManagementCapabilities=hwfdPowerManagementCapabilities, hwvcCurrentVerticalResolution=hwvcCurrentVerticalResolution, hwfanDeviceID=hwfanDeviceID, hwsbmStatus=hwsbmStatus, hwsmrInstallDate=hwsmrInstallDate, win32PortResourceEntry=win32PortResourceEntry, hwideLastErrorCode=hwideLastErrorCode, hwcdStatusInfo=hwcdStatusInfo, hwdmConfigManagerUserConfig=hwdmConfigManagerUserConfig, hwpbEstimatedRunTime=hwpbEstimatedRunTime, hwobDeviceType=hwobDeviceType, hwpmErrorControlOff=hwpmErrorControlOff, hwmaErrorAccess=hwmaErrorAccess, hwfdMaxMediaSize=hwfdMaxMediaSize, hwpmdTag=hwpmdTag, hwvcColorTableEntries=hwvcColorTableEntries, win32OnBoardDeviceTable=win32OnBoardDeviceTable, hwfdAvailability=hwfdAvailability, hwprEnableBIDI=hwprEnableBIDI, win32POTSModemTable=win32POTSModemTable, hwvcICMMethod=hwvcICMMethod, hwbuStatusInfo=hwbuStatusInfo, hwtdDeviceID=hwtdDeviceID, hwobSerialNumber=hwobSerialNumber, hwprdCaption=hwprdCaption, hwpsdStarted=hwpsdStarted, hwprHidden=hwprHidden, hwcpStatus=hwcpStatus, hwcdCaption=hwcdCaption, hwspCreationClassName=hwspCreationClassName, hwmbConfigManagerUserConfig=hwmbConfigManagerUserConfig, hwpmaRemovable=hwpmaRemovable, hwbbRemovable=hwbbRemovable, hwcpuRevision=hwcpuRevision, hwspTimeOfLastReset=hwspTimeOfLastReset, hwhpLastErrorCode=hwhpLastErrorCode, hwupsBatteryInstalled=hwupsBatteryInstalled, win32FloppyControllerEntry=win32FloppyControllerEntry, hwfcCreationClassName=hwfcCreationClassName, hwideAvailability=hwideAvailability, hwcpuAddressWidth=hwcpuAddressWidth, hwtppType=hwtppType, hwpsdSystemName=hwpsdSystemName, hwpmmInterleaveDataDepth=hwpmmInterleaveDataDepth, hwprdConfigFile=hwprdConfigFile, hwfdDefaultBlockSize=hwfdDefaultBlockSize, hwnaStatus=hwnaStatus, hwddSectorsPerTrack=hwddSectorsPerTrack, hwrfgCreationClassName=hwrfgCreationClassName, hwprcSettingID=hwprcSettingID, hwtmpAvailability=hwtmpAvailability, hwprDefaultNumberUp=hwprDefaultNumberUp, hwprDescription=hwprDescription, hwbbIndex=hwbbIndex, hwfcStatusInfo=hwfcStatusInfo, hwmaErrorResolution=hwmaErrorResolution, hwpmmBankLabel=hwpmmBankLabel, hwsmrStartingAddress=hwsmrStartingAddress, hwbbHostingBoard=hwbbHostingBoard, hwpmmTotalWidth=hwpmmTotalWidth, hwpbConfigManagerUserConfig=hwpbConfigManagerUserConfig, win32UninterruptPowerSupplyEntry=win32UninterruptPowerSupplyEntry, hwdmName=hwdmName, hwscsiDeviceMap=hwscsiDeviceMap, hwidInstallDate=hwidInstallDate, hwmmNumberOfBlocks=hwmmNumberOfBlocks, hwcmMaxCacheSize=hwcmMaxCacheSize, hwdaIndex=hwdaIndex, hwuhNumberOfPorts=hwuhNumberOfPorts, hwcpAccuracy=hwcpAccuracy, hwvcPNPDeviceID=hwvcPNPDeviceID, hwpmdSKU=hwpmdSKU, hwpbDesignVoltage=hwpbDesignVoltage, hwupsCaption=hwupsCaption, hwpmStringFormat=hwpmStringFormat, hwbiLanguageEdition=hwbiLanguageEdition, win32USBControllerTable=win32USBControllerTable, hwnacIPFilterSecurityEnabled=hwnacIPFilterSecurityEnabled, hwsbmEndingAddress=hwsbmEndingAddress, hwtdStatus=hwtdStatus, hwprcDuplex=hwprcDuplex, hwbuPowerManagementSupported=hwbuPowerManagementSupported, hwseManufacturer=hwseManufacturer, win32BusTable=win32BusTable, hwfcManufacturer=hwfcManufacturer, hwprcDitherType=hwprcDitherType, hwdmPixelsPerYLogicalInch=hwdmPixelsPerYLogicalInch, hwfdMinBlockSize=hwfdMinBlockSize, hwpcInstallDate=hwpcInstallDate, win32ParallelPortTable=win32ParallelPortTable, hwspcDSRSensitivity=hwspcDSRSensitivity, hwprcPelsWidth=hwprcPelsWidth, hwuhSystemCreationClassName=hwuhSystemCreationClassName, hwtmpPNPDeviceID=hwtmpPNPDeviceID, hwpmdVersion=hwpmdVersion, hwtdCreationClassName=hwtdCreationClassName, hwfcName=hwfcName, hwpsdIsSigned=hwpsdIsSigned, hwmbStatusInfo=hwmbStatusInfo, hwmbIndex=hwmbIndex, hwhpStatus=hwhpStatus, hwhpName=hwhpName, hwptCaption=hwptCaption, hwnaMaxNumberControlled=hwnaMaxNumberControlled, hwnacMACAddress=hwnacMACAddress, hwspSettableParity=hwspSettableParity, hwprStatusInfo=hwprStatusInfo, hwscsiPowerManagementSupported=hwscsiPowerManagementSupported, hwsndManufacturer=hwsndManufacturer, hwtmpIndex=hwtmpIndex, hwpmmRemovable=hwpmmRemovable, hwrfgSystemName=hwrfgSystemName, hwbaTimeToFullCharge=hwbaTimeToFullCharge, hwddMediaType=hwddMediaType, hwvcReservedSystemPaletteEntries=hwvcReservedSystemPaletteEntries, hwsndLastErrorCode=hwsndLastErrorCode, hwmmErrorTransferSize=hwmmErrorTransferSize, hwbuSystemCreationClassName=hwbuSystemCreationClassName, hwssMaxDataWidth=hwssMaxDataWidth, hwsndStatus=hwsndStatus, hwpcPartNumber=hwpcPartNumber, hwspSettableBaudRate=hwspSettableBaudRate, hwfcConfigManagerUserConfig=hwfcConfigManagerUserConfig, hwcpuName=hwcpuName, wmiInputDevice=wmiInputDevice, hwnacInterfaceIndex=hwnacInterfaceIndex, hwrfgCaption=hwrfgCaption, hwtdPadding=hwtdPadding, win32PrinterDriverTable=win32PrinterDriverTable, hwfanCreationClassName=hwfanCreationClassName, win32PhysicalMemoryEntry=win32PhysicalMemoryEntry, hwcmPowerManagementCapabilities=hwcmPowerManagementCapabilities, hwvcInstallDate=hwvcInstallDate, hwbiSerialNumber=hwbiSerialNumber, hwpmdPoweredOn=hwpmdPoweredOn, hwucCreationClassName=hwucCreationClassName, hwcdSCSIBus=hwcdSCSIBus, hwprTimeOfLastReset=hwprTimeOfLastReset, hwspErrorCleared=hwspErrorCleared, hwvcPowerManagementCapabilities=hwvcPowerManagementCapabilities, hwvcMonochrome=hwvcMonochrome, hwssOtherIdentifyingInfo=hwssOtherIdentifyingInfo, hwidPNPDeviceID=hwidPNPDeviceID, hwcpTolerance=hwcpTolerance, hwvcAdapterRAM=hwvcAdapterRAM, hwtmpSystemName=hwtmpSystemName, hwvcSystemCreationClassName=hwvcSystemCreationClassName, hwdaEndingAddress=hwdaEndingAddress, hwcpuIndex=hwcpuIndex, hwspSupportsXOnXOff=hwspSupportsXOnXOff, hwsePartNumber=hwsePartNumber, hwspcIsBusy=hwspcIsBusy, hwbbReplaceable=hwbbReplaceable, hwpmDeviceLoader=hwpmDeviceLoader, hwpmSupportsCallback=hwpmSupportsCallback, hwmaCaption=hwmaCaption, hwcpNominalReading=hwcpNominalReading, hwprPrinterPaperNames=hwprPrinterPaperNames, hwvcSystemPaletteEntries=hwvcSystemPaletteEntries, hwseCaption=hwseCaption, hwupsSystemCreationClassName=hwupsSystemCreationClassName, hwprStartTime=hwprStartTime, hwprdInfName=hwprdInfName, hwpnpDeviceID=hwpnpDeviceID, hwcdNumberOfMediaSupported=hwcdNumberOfMediaSupported, hwspCapabilityDescriptions=hwspCapabilityDescriptions, hwssShared=hwssShared, hwvcDriverDate=hwvcDriverDate, hwvcMinRefreshRate=hwvcMinRefreshRate, hwcpuPowerManagementCapabilities=hwcpuPowerManagementCapabilities, hwsndPowerManagementCapabilities=hwsndPowerManagementCapabilities, hwtdSystemCreationClassName=hwtdSystemCreationClassName, hwpreAlias=hwpreAlias, hwnaPNPDeviceID=hwnaPNPDeviceID, hwupsFirstMessageDelay=hwupsFirstMessageDelay, win32BusEntry=win32BusEntry, hwssInstallDate=hwssInstallDate, hwucTimeOfLastReset=hwucTimeOfLastReset, hwvpErrorDescription=hwvpErrorDescription, hwprLocation=hwprLocation, hwpmCompressionInfo=hwpmCompressionInfo, hwbbTag=hwbbTag, hwcpuL2CacheSize=hwcpuL2CacheSize, hwsndProductName=hwsndProductName, hwnaStatusInfo=hwnaStatusInfo, hwpbCaption=hwpbCaption, hwmmAdditionalErrorData=hwmmAdditionalErrorData, hwcdVolumeName=hwcdVolumeName, hwpbErrorDescription=hwpbErrorDescription, hwnacIPSecPermitUDPPorts=hwnacIPSecPermitUDPPorts, hwvcAdapterCompatibility=hwvcAdapterCompatibility, hwcpuSystemCreationClassName=hwcpuSystemCreationClassName, hwpmDriverDate=hwpmDriverDate, hwprdSystemCreationClassName=hwprdSystemCreationClassName, hwupsStatusInfo=hwupsStatusInfo, hwppDMASupport=hwppDMASupport, hwprCreationClassName=hwprCreationClassName, hwssDescription=hwssDescription, hwddSCSIPort=hwddSCSIPort, hwptPNPDeviceID=hwptPNPDeviceID, hw1394Caption=hw1394Caption, hwpcmCreationClassName=hwpcmCreationClassName, hwspDeviceID=hwspDeviceID)
mibBuilder.exportSymbols("INFORMANT-HW", hwsbmErrorTime=hwsbmErrorTime, hwseSMBIOSAssetTag=hwseSMBIOSAssetTag, hwspcStopBits=hwspcStopBits, hwpmSpeakerModeSetup=hwpmSpeakerModeSetup, hwcpuInstallDate=hwcpuInstallDate, hwpsdDeviceClass=hwpsdDeviceClass, hwptErrorDescription=hwptErrorDescription, hwmbErrorDescription=hwmbErrorDescription, hwddDefaultBlockSize=hwddDefaultBlockSize, hwmmSystemName=hwmmSystemName, hwbaPNPDeviceID=hwbaPNPDeviceID, hwddCapabilities=hwddCapabilities, hwpcPortType=hwpcPortType, hwsbmCaption=hwsbmCaption, hwspSettableRLSD=hwspSettableRLSD, hwupsMessageInterval=hwupsMessageInterval, hwtmpUpperThresholdCritical=hwtmpUpperThresholdCritical, hwpcConnectorPinout=hwpcConnectorPinout, win32KeyboardEntry=win32KeyboardEntry, hwpmmCaption=hwpmmCaption, win32BaseBoardTable=win32BaseBoardTable, hwvpUpperThresholdCritical=hwvpUpperThresholdCritical, hwfdConfigManagerUserConfig=hwfdConfigManagerUserConfig, hwvpAccuracy=hwvpAccuracy, hwpmdIndex=hwpmdIndex, hwpmaPoweredOn=hwpmaPoweredOn, hwvpNormalMin=hwvpNormalMin, hwpmaModel=hwpmaModel, hwfdDescription=hwfdDescription, hwcpuCreationClassName=hwcpuCreationClassName, hwvcVideoModeDescription=hwvcVideoModeDescription, hwptResolution=hwptResolution, win32SerialPortTable=win32SerialPortTable, hwprMaxNumberUp=hwprMaxNumberUp, hwfcProtocolSupported=hwfcProtocolSupported, hwsbmOtherErrorDescription=hwsbmOtherErrorDescription, hwpmConfigurationDialog=hwpmConfigurationDialog, hwpbCapacityMultiplier=hwpbCapacityMultiplier, hwprcTTOption=hwprcTTOption, hwddConfigManagerErrorCode=hwddConfigManagerErrorCode, win32CacheMemoryTable=win32CacheMemoryTable, hwddInstallDate=hwddInstallDate, hwmaAvailability=hwmaAvailability, hwirqIndex=hwirqIndex, hwucSystemCreationClassName=hwucSystemCreationClassName, win32KeyboardTable=win32KeyboardTable, hwpnpName=hwpnpName, hwuhNumberOfConfigs=hwuhNumberOfConfigs, hwcmErrorCleared=hwcmErrorCleared, hwpnpErrorDescription=hwpnpErrorDescription, hwtmpDeviceID=hwtmpDeviceID, hwucCaption=hwucCaption, hwvpUpperThresholdFatal=hwvpUpperThresholdFatal, hwvpLowerThresholdNonCritical=hwvpLowerThresholdNonCritical, hwpnpLastErrorCode=hwpnpLastErrorCode, hwcpResolution=hwcpResolution, hwddNeedsCleaning=hwddNeedsCleaning, hwseChassisTypes=hwseChassisTypes, hwpmmHotSwappable=hwpmmHotSwappable, hwtmpCreationClassName=hwtmpCreationClassName, hwsbmPNPDeviceID=hwsbmPNPDeviceID, hwbaStatusInfo=hwbaStatusInfo, hwhpDescription=hwhpDescription, hwidePowerManagementCapabilities=hwidePowerManagementCapabilities, win32InfraredDeviceTable=win32InfraredDeviceTable, hwmmErrorMethodology=hwmmErrorMethodology, hwpmaCaption=hwpmaCaption, hwrfgActiveCooling=hwrfgActiveCooling, hwpmmTypeDetail=hwpmmTypeDetail, hwmbConfigManagerErrorCode=hwmbConfigManagerErrorCode, hwspSupportsRTSCTS=hwspSupportsRTSCTS, hwprPaperTypesAvailable=hwprPaperTypesAvailable, hwbuPowerManagementCapabilities=hwbuPowerManagementCapabilities, hwsndErrorDescription=hwsndErrorDescription, hwupsIndex=hwupsIndex, hwpmBlindOff=hwpmBlindOff, hwsndInstallDate=hwsndInstallDate, hwucIndex=hwucIndex, hwsbmSystemLevelAddress=hwsbmSystemLevelAddress, hwpnpDescription=hwpnpDescription, hwcmConfigManagerErrorCode=hwcmConfigManagerErrorCode, hwupsErrorDescription=hwupsErrorDescription, hwprServerName=hwprServerName, hwcmErrorInfo=hwcmErrorInfo, hw1394ErrorDescription=hw1394ErrorDescription, hwobVersion=hwobVersion, hwdmDisplayType=hwdmDisplayType, hwprCapabilityDescriptions=hwprCapabilityDescriptions, hwnaErrorCleared=hwnaErrorCleared, hwupsTimeOnBackup=hwupsTimeOnBackup, hwbaErrorCleared=hwbaErrorCleared, hwmaDeviceID=hwmaDeviceID, win32VoltageProbeEntry=win32VoltageProbeEntry, wmiHardware=wmiHardware, hwideErrorCleared=hwideErrorCleared, hwbbProduct=hwbbProduct, hwpnpStatus=hwpnpStatus, hwprPowerManagementCapabilities=hwprPowerManagementCapabilities, hwptManufacturer=hwptManufacturer, hwssSlotDesignation=hwssSlotDesignation, hwcdMediaLoaded=hwcdMediaLoaded, hwpbPNPDeviceID=hwpbPNPDeviceID, hwpmSpeakerVolumeMed=hwpmSpeakerVolumeMed, hwtmpLowerThresholdNonCritical=hwtmpLowerThresholdNonCritical, hwpreCaption=hwpreCaption, hwpmdOtherIdentifyingInfo=hwpmdOtherIdentifyingInfo, hwnacTcpMaxConnectRetransmission=hwnacTcpMaxConnectRetransmission, hwcdAvailability=hwcdAvailability, hwddAvailability=hwddAvailability, hwbuSystemName=hwbuSystemName, hwpbStatusInfo=hwpbStatusInfo, hwnacDeadGWDetectEnabled=hwnacDeadGWDetectEnabled, hwscsiControllerTimeouts=hwscsiControllerTimeouts, hwcmCorrectableError=hwcmCorrectableError, hwucStatus=hwucStatus, hwdmaChannelTiming=hwdmaChannelTiming, hwprDefault=hwprDefault, hwnacDefaultTOS=hwnacDefaultTOS, hwtmpDescription=hwtmpDescription, hwsePoweredOn=hwsePoweredOn, hwrfgErrorCleared=hwrfgErrorCleared, hwfanConfigManagerUserConfig=hwfanConfigManagerUserConfig, hwpmDCB=hwpmDCB, hwpnpCaption=hwpnpCaption, hwobCreationClassName=hwobCreationClassName, hwcmErrorDescription=hwcmErrorDescription, hwirqCaption=hwirqCaption, hwpmErrorCleared=hwpmErrorCleared, win32PortableBatteryEntry=win32PortableBatteryEntry, hwpsdClassGuid=hwpsdClassGuid, hwspcAbortReadWriteOnError=hwspcAbortReadWriteOnError, hwprjUntilTime=hwprjUntilTime, hwspSupportsDTRDSR=hwspSupportsDTRDSR, win32SystemMemoryResourceEntry=win32SystemMemoryResourceEntry, hwptSystemCreationClassName=hwptSystemCreationClassName, hwvpTolerance=hwvpTolerance, hwdmIsLocked=hwdmIsLocked, hwcpuCaption=hwcpuCaption, hwfdCompressionMethod=hwfdCompressionMethod, hwptSystemName=hwptSystemName, hwprNetwork=hwprNetwork, hwcdStatus=hwcdStatus, hwssCurrentUsage=hwssCurrentUsage, hwtdFeaturesLow=hwtdFeaturesLow, hwpcExternalReferenceDesignator=hwpcExternalReferenceDesignator, hwnacIPSubnet=hwnacIPSubnet, hwdmaStatus=hwdmaStatus, hwnacDNSHostName=hwnacDNSHostName, win32HeatPipeEntry=win32HeatPipeEntry, hwpmInstallDate=hwpmInstallDate, hwsbmErrorCleared=hwsbmErrorCleared, hwpmCountrySelected=hwpmCountrySelected, hwpcmName=hwpcmName, hwspcParity=hwspcParity, hwucStatusInfo=hwucStatusInfo, hwtppSNMPEnabled=hwtppSNMPEnabled, hwspcCaption=hwspcCaption, hwssIndex=hwssIndex, hwptInstallDate=hwptInstallDate, hwssThermalRating=hwssThermalRating, hwcdSCSIPort=hwcdSCSIPort, hwbuConfigManagerUserConfig=hwbuConfigManagerUserConfig, hwdmSystemCreationClassName=hwdmSystemCreationClassName, hwtdSystemName=hwtdSystemName, hwupsInstallDate=hwupsInstallDate, win321394ControllerTable=win321394ControllerTable, hwprjDocument=hwprjDocument, hwdmaPort=hwdmaPort, hwddModel=hwddModel, hwprDeviceID=hwprDeviceID, hwfanDescription=hwfanDescription, hwprCurrentPaperType=hwprCurrentPaperType, hwbbHeight=hwbbHeight, hwpmdWriteProtectOn=hwpmdWriteProtectOn, hwkbPassword=hwkbPassword, hwmaConfigManagerUserConfig=hwmaConfigManagerUserConfig, hwucLastErrorCode=hwucLastErrorCode, hwcpConfigManagerErrorCode=hwcpConfigManagerErrorCode, hwnacIPAddress=hwnacIPAddress, hwppIndex=hwppIndex, hwpmaUse=hwpmaUse, hwpmmFormFactor=hwpmmFormFactor, hwptSynch=hwptSynch, hwupsRange1InputVoltageHigh=hwupsRange1InputVoltageHigh, hwvcCurrentNumberOfRows=hwvcCurrentNumberOfRows, hwssSKU=hwssSKU, hwscsiProtectionManagement=hwscsiProtectionManagement, hwpmPulse=hwpmPulse, hwidLastErrorCode=hwidLastErrorCode, hwkbName=hwkbName, hwbuInstallDate=hwbuInstallDate, hwrfgErrorDescription=hwrfgErrorDescription, hwspcIndex=hwspcIndex, hwcdIndex=hwcdIndex, hwcdSize=hwcdSize, hwssVppMixedVoltageSupport=hwssVppMixedVoltageSupport, hwpmAvailability=hwpmAvailability, hwpmaPartNumber=hwpmaPartNumber, hwdaCSCreationClassName=hwdaCSCreationClassName, hwssCaption=hwssCaption, hwpmaMemoryDevices=hwpmaMemoryDevices, win32PnPEntityEntry=win32PnPEntityEntry, hwscsiPowerManagementCapability=hwscsiPowerManagementCapability, hwpsdDriverName=hwpsdDriverName, hwpmName=hwpmName, hwmmCorrectableError=hwmmCorrectableError, win32PrintJobTable=win32PrintJobTable, hwprcPaperSize=hwprcPaperSize, hwspPNPDeviceID=hwspPNPDeviceID, hwpmModemInfPath=hwpmModemInfPath, hwpmaDepth=hwpmaDepth, hwfcSystemName=hwfcSystemName, win32PnPSignedDriverTable=win32PnPSignedDriverTable, hwprcVerticalResolution=hwprcVerticalResolution, hwbaExpectedLife=hwbaExpectedLife, hwssConnectorPinout=hwssConnectorPinout, hwcpUpperThresholdNonCritical=hwcpUpperThresholdNonCritical, hwbbCreationClassName=hwbbCreationClassName, hwpmProperties=hwpmProperties, hwpnpPowerManagementCapabilities=hwpnpPowerManagementCapabilities, hwfdManufacturer=hwfdManufacturer, hwcpuRole=hwcpuRole, hwspMaximumOutputBufferSize=hwspMaximumOutputBufferSize, hwfdSystemCreationClassName=hwfdSystemCreationClassName, hwideMaxNumberControlled=hwideMaxNumberControlled, hwupsAvailability=hwupsAvailability, hwtdDefaultBlockSize=hwtdDefaultBlockSize, hwcdPNPDeviceID=hwcdPNPDeviceID, hwprCurrentNaturalLanguage=hwprCurrentNaturalLanguage, hwpreName=hwpreName, hwidMaxNumberControlled=hwidMaxNumberControlled, hwvpSystemCreationClassName=hwvpSystemCreationClassName, hwspcBinaryModeEnabled=hwspcBinaryModeEnabled, hwpmStatusInfo=hwpmStatusInfo, hwsbmDeviceID=hwsbmDeviceID, hwnaSystemCreationClassName=hwnaSystemCreationClassName, hwpmmInterleavePosition=hwpmmInterleavePosition, hwfcPowerManagementCapabilities=hwfcPowerManagementCapabilities, hwsbmErrorResolution=hwsbmErrorResolution, hwmbErrorCleared=hwmbErrorCleared, hwidPowerManagementCapabilities=hwidPowerManagementCapabilities, hwmbDescription=hwmbDescription, hwnaTimeOfLastReset=hwnaTimeOfLastReset, win32USBHubTable=win32USBHubTable, hwbaConfigManagerUserConfig=hwbaConfigManagerUserConfig, win32CacheMemoryEntry=win32CacheMemoryEntry, hwmbDeviceID=hwmbDeviceID, hwssSpecialPurpose=hwssSpecialPurpose, win32UninterruptPowerSupplyTable=win32UninterruptPowerSupplyTable, hwpcmErrorCleared=hwpcmErrorCleared, hwsbmPowerManagementSupported=hwsbmPowerManagementSupported, hwpmdSerialNumber=hwpmdSerialNumber, win32PrinterConfigurationTable=win32PrinterConfigurationTable, hwpmPowerManagementSupported=hwpmPowerManagementSupported)
mibBuilder.exportSymbols("INFORMANT-HW", hwbuIndex=hwbuIndex, hwpmMaxNumberOfPasswords=hwpmMaxNumberOfPasswords, hwprdFilePath=hwprdFilePath, hwpmModemIndex=hwpmModemIndex, hw1394SystemName=hw1394SystemName, hwdaStatus=hwdaStatus, hwcdFileSystemFlagsEx=hwcdFileSystemFlagsEx, hwpsdInstallDate=hwpsdInstallDate, hwpnpClassGuid=hwpnpClassGuid, hwpmdCreationClassName=hwpmdCreationClassName, hwcdDescription=hwcdDescription, hwsbmName=hwsbmName, hwfanVariableSpeed=hwfanVariableSpeed, hwnacDefaultIPGateway=hwnacDefaultIPGateway, hwobPartNumber=hwobPartNumber, hwpmErrorControlOn=hwpmErrorControlOn, hwcpuL3CacheSize=hwcpuL3CacheSize, hwpmdMediaDescription=hwpmdMediaDescription, hwmaNumberOfBlocks=hwmaNumberOfBlocks, hwpmCompatibilityFlags=hwpmCompatibilityFlags, hwvcNumberOfVideoPages=hwvcNumberOfVideoPages, hwtdErrorMethodology=hwtdErrorMethodology, hwptInfFileName=hwptInfFileName, hwdmaCSCreationClassName=hwdmaCSCreationClassName, hwppSystemCreationClassName=hwppSystemCreationClassName, hwbaDesignVoltage=hwbaDesignVoltage, hwmmErrorAccess=hwmmErrorAccess, hwmaBlockSize=hwmaBlockSize, hwscsiProtocolSupported=hwscsiProtocolSupported, hwmaInstallDate=hwmaInstallDate, hwprcBitsPerPel=hwprcBitsPerPel, hwmaErrorInfo=hwmaErrorInfo, hwseStatus=hwseStatus, hwfdStatus=hwfdStatus, hwpbManufactureDate=hwpbManufactureDate, hwrfgIndex=hwrfgIndex, hwpmReset=hwpmReset, hwsndConfigManagerUserConfig=hwsndConfigManagerUserConfig, hwprErrorDescription=hwprErrorDescription, hwpcmConfigManagerErrorCode=hwpcmConfigManagerErrorCode, hwprPNPDeviceID=hwprPNPDeviceID, hwmmInstallDate=hwmmInstallDate, hwmmCaption=hwmmCaption, hwspcEOFCharacter=hwspcEOFCharacter, hwpbBatteryRechargeTime=hwpbBatteryRechargeTime, hwspSupportsElapsedTimeouts=hwspSupportsElapsedTimeouts, hwpcmPNPDeviceID=hwpcmPNPDeviceID, win32PCMCIAControllerTable=win32PCMCIAControllerTable, win32TCPIPPrinterPortTable=win32TCPIPPrinterPortTable, hwpsdDescription=hwpsdDescription, hwnacIPXNetworkNumber=hwnacIPXNetworkNumber, hwcpCreationClassName=hwcpCreationClassName, hwfanCaption=hwfanCaption, win32DeviceMemoryAddressTable=win32DeviceMemoryAddressTable, hwnacKeepAliveTime=hwnacKeepAliveTime, hwcdMaximumComponentLength=hwcdMaximumComponentLength, hwpbBatteryStatus=hwpbBatteryStatus, hwsndCreationClassName=hwsndCreationClassName, hwnacKeepAliveInterval=hwnacKeepAliveInterval, hwrfgPowerManagementSupported=hwrfgPowerManagementSupported, hwmaStartingAddress=hwmaStartingAddress, hwpmmDescription=hwpmmDescription, hwprjStartTime=hwprjStartTime, hwptErrorCleared=hwptErrorCleared, hwnacDNSDomainSuffixSearchOrder=hwnacDNSDomainSuffixSearchOrder, hwprCurrentMimeType=hwprCurrentMimeType, hwbuConfigManagerErrorCode=hwbuConfigManagerErrorCode, hwsbmPowerManagementCapabilities=hwsbmPowerManagementCapabilities, hwsbmErrorDataOrder=hwsbmErrorDataOrder, hwrfgName=hwrfgName, hwsbmErrorAddress=hwsbmErrorAddress, hwdmCreationClassName=hwdmCreationClassName, hwspcBitsPerByte=hwspcBitsPerByte, hwssSupportsHotPlug=hwssSupportsHotPlug, hwmmDeviceID=hwmmDeviceID, hwobModel=hwobModel, hwpbMaxBatteryError=hwpbMaxBatteryError, hwtppProtocol=hwtppProtocol, hwptConfigManagerUserConfig=hwptConfigManagerUserConfig, hwsbmConfigManagerErrorCode=hwsbmConfigManagerErrorCode, hwupsConfigManagerErrorCode=hwupsConfigManagerErrorCode, hwcmCurrentSRAM=hwcmCurrentSRAM, hwpmdInstallDate=hwpmdInstallDate, hwpmmDeviceLocator=hwpmmDeviceLocator, hwppStatusInfo=hwppStatusInfo, hwptLastErrorCode=hwptLastErrorCode, hwideInstallDate=hwideInstallDate, hwidCreationClassName=hwidCreationClassName, hwprDoCompleteFirst=hwprDoCompleteFirst, hwprjJobStatus=hwprjJobStatus, hwmaSystemLevelAddress=hwmaSystemLevelAddress, hwnacIPXFrameType=hwnacIPXFrameType, hwmaAdditionalErrorData=hwmaAdditionalErrorData, hwnacIPXEnabled=hwnacIPXEnabled, hwcpuL2CacheSpeed=hwcpuL2CacheSpeed, hwpmmDataWidth=hwpmmDataWidth, hwprcCopies=hwprcCopies, hwmaSystemCreationClassName=hwmaSystemCreationClassName, hwfcDescription=hwfcDescription, hwdmErrorCleared=hwdmErrorCleared, hwscsiDeviceID=hwscsiDeviceID, hwspcErrorReplacementEnabled=hwspcErrorReplacementEnabled, hwvpLowerThresholdCritical=hwvpLowerThresholdCritical, win32PhysicalMediaEntry=win32PhysicalMediaEntry, hwirqDescription=hwirqDescription, hwcpuLevel=hwcpuLevel, hwpreStartingAddress=hwpreStartingAddress, hwppErrorCleared=hwppErrorCleared, hwsndCaption=hwsndCaption, hwtppHostAddress=hwtppHostAddress, hwcpuConfigManagerUserConfig=hwcpuConfigManagerUserConfig, hwcmPNPDeviceID=hwcmPNPDeviceID, hwcpuDeviceID=hwcpuDeviceID, hwspcName=hwspcName, win32PrintJobEntry=win32PrintJobEntry, hwcmAccess=hwcmAccess, hwmaErrorAddress=hwmaErrorAddress, hwcmInstalledSize=hwcmInstalledSize, hwcmErrorResolution=hwcmErrorResolution, hw1394ConfigManagerUserConfig=hw1394ConfigManagerUserConfig, hwbbSpecialRequirements=hwbbSpecialRequirements, hwsbmPurpose=hwsbmPurpose, hwddStatus=hwddStatus, wmiPower=wmiPower, hwupsSystemName=hwupsSystemName, hwsmrCSName=hwsmrCSName, hwbiTargetOperatingSystem=hwbiTargetOperatingSystem, hwpmaVersion=hwpmaVersion, hwfdDeviceID=hwfdDeviceID, hwdmaBurstMode=hwdmaBurstMode, hwscsiSystemName=hwscsiSystemName, hwprPrintJobDataType=hwprPrintJobDataType, hwideManufacturer=hwideManufacturer, win32CDROMDriveEntry=win32CDROMDriveEntry, hwtdIndex=hwtdIndex, hwpmdPartNumber=hwpmdPartNumber, hwpcDescription=hwpcDescription, win32NetworkAdapterTable=win32NetworkAdapterTable, hwcmStartingAddress=hwcmStartingAddress, hwspcDSROutflowControl=hwspcDSROutflowControl, PYSNMP_MODULE_ID=wmiHardware, hwbbPartNumber=hwbbPartNumber, hwpcmCaption=hwpcmCaption, hwddErrorMethodology=hwddErrorMethodology, hwppProtocolSupported=hwppProtocolSupported, hwpmaIndex=hwpmaIndex, hwuhConfigManagerUserCode=hwuhConfigManagerUserCode, hwprMarkingTechnology=hwprMarkingTechnology, hwpmdManufacturer=hwpmdManufacturer, hwpreCreationClassName=hwpreCreationClassName, hwpmSpeakerModeOff=hwpmSpeakerModeOff, hwkbPowerManagementSupported=hwkbPowerManagementSupported, hwfanIndex=hwfanIndex, hwbbSKU=hwbbSKU, hwbiCaption=hwbiCaption, hwcmConfigManagerUserConfig=hwcmConfigManagerUserConfig, hwmmStatusInfo=hwmmStatusInfo, hwmmErrorData=hwmmErrorData, hwsndPNPDeviceID=hwsndPNPDeviceID, hwcmAssociativity=hwcmAssociativity, hwptSampleRate=hwptSampleRate, hwfdName=hwfdName, hwmmErrorAddress=hwmmErrorAddress, hwseVersion=hwseVersion, hwnacDescription=hwnacDescription, hwupsDeviceID=hwupsDeviceID, hwspSettableDataBits=hwspSettableDataBits, hwfanSystemCreationClassName=hwfanSystemCreationClassName, hwmmAccess=hwmmAccess, hwidCaption=hwidCaption, hwddNumberOfMediaSupported=hwddNumberOfMediaSupported, wmiCoolingDevice=wmiCoolingDevice, hwddSCSILogicalUnit=hwddSCSILogicalUnit, hwideCaption=hwideCaption, hw1394Description=hw1394Description, hwuhCurrentConfigValue=hwuhCurrentConfigValue, hwspSupportsIntTimeouts=hwspSupportsIntTimeouts, hwpmInactivityTimeout=hwpmInactivityTimeout, hwprQueued=hwprQueued, hwcmCacheType=hwcmCacheType, hwpbFullChargeCapacity=hwpbFullChargeCapacity, hwprcPelsHeight=hwprcPelsHeight, hwpmLastErrorCode=hwpmLastErrorCode, hwucConfigManagerUserConfig=hwucConfigManagerUserConfig, hwprParameters=hwprParameters, hwobCaption=hwobCaption, hwppConfigManagerUserConfig=hwppConfigManagerUserConfig, hwcpMaxReadable=hwcpMaxReadable, hwsmrCSCreationClassName=hwsmrCSCreationClassName, hwcpuProcessorType=hwcpuProcessorType, win32TemperatureProbeTable=win32TemperatureProbeTable, hwpnpIndex=hwpnpIndex, hwscsiName=hwscsiName, hwcmDeviceID=hwcmDeviceID, hwdmaInstallDate=hwdmaInstallDate, hwpmCompressionOff=hwpmCompressionOff, hwnacIPXVirtualNetNumber=hwnacIPXVirtualNetNumber, win32PhysicalMemoryArrayEntry=win32PhysicalMemoryArrayEntry, hwfanErrorDescription=hwfanErrorDescription, hwseModel=hwseModel, hwprcDriverVersion=hwprcDriverVersion, win32SMBIOSMemoryEntry=win32SMBIOSMemoryEntry, hwbuDescription=hwbuDescription, hwppErrorDescription=hwppErrorDescription, hwcpPowerManagementSupported=hwcpPowerManagementSupported, win32TCPIPPrinterPortEntry=win32TCPIPPrinterPortEntry, hwcdManufacturer=hwcdManufacturer, hwcpDescription=hwcpDescription, hwppSystemName=hwppSystemName, hwpcmLastErrorCode=hwpcmLastErrorCode, hwprAvailableJobSheets=hwprAvailableJobSheets, hwpnpManufacturer=hwpnpManufacturer, hwobReplaceable=hwobReplaceable, hwptHandedness=hwptHandedness, hwbaTimeOnBattery=hwbaTimeOnBattery, hwtmpNormalMax=hwtmpNormalMax, hwupsPowerManagementSupported=hwupsPowerManagementSupported, hwpmModulationBell=hwpmModulationBell, hwsndDMABufferSize=hwsndDMABufferSize, hwidConfigManagerUserConfig=hwidConfigManagerUserConfig, win32USBControllerEntry=win32USBControllerEntry, hwprDefaultMimeType=hwprDefaultMimeType, hwcmName=hwcmName, hwideStatusInfo=hwideStatusInfo, hwtppName=hwtppName, hwdmSystemName=hwdmSystemName, hwtdReportSetMarks=hwtdReportSetMarks, hwuhConfigManagerErrorCode=hwuhConfigManagerErrorCode, hwddConfigManagerUserConfig=hwddConfigManagerUserConfig, hwnacDHCPEnabled=hwnacDHCPEnabled, hwfdSystemName=hwfdSystemName, hwnacTcpipNetbiosOptions=hwnacTcpipNetbiosOptions, hwirqTriggerLevel=hwirqTriggerLevel, hwuhName=hwuhName, hwpmTone=hwpmTone, hwfanActiveCooling=hwfanActiveCooling, hwpbPowerManagementSupported=hwpbPowerManagementSupported, hwprdIndex=hwprdIndex, hwcmFlushTimer=hwcmFlushTimer, hwfcTimeOfLastReset=hwfcTimeOfLastReset, hwvcVideoArchitecture=hwvcVideoArchitecture, hwprcIndex=hwprcIndex, hwmmSystemCreationClassName=hwmmSystemCreationClassName, hwsbmDescription=hwsbmDescription, hwprConfigManagerUserConfig=hwprConfigManagerUserConfig, hwbuLastErrorCode=hwbuLastErrorCode, hwprSystemCreationClassName=hwprSystemCreationClassName, hwpmAnswerMode=hwpmAnswerMode, hwcpuDataWidth=hwcpuDataWidth, hwsmrIndex=hwsmrIndex, hwsbmSystemCreationClassName=hwsbmSystemCreationClassName, hwvcVideoMemoryType=hwvcVideoMemoryType, hwptConfigManagerErrorCode=hwptConfigManagerErrorCode, hwcdPowerManagementSupported=hwcdPowerManagementSupported)
mibBuilder.exportSymbols("INFORMANT-HW", hwtppByteCount=hwtppByteCount, hwprcPaperLength=hwprcPaperLength, hwseOtherIdentifyingInfo=hwseOtherIdentifyingInfo, hwscsiManufacturer=hwscsiManufacturer, win32NetworkAdapterConfigEntry=win32NetworkAdapterConfigEntry, hwupsRemainingCapacityStatus=hwupsRemainingCapacityStatus, hwpnpStatusInfo=hwpnpStatusInfo, hwdmMonitorManufacturer=hwdmMonitorManufacturer, hwprNaturalLanguagesSupported=hwprNaturalLanguagesSupported, hwpcmStatusInfo=hwpcmStatusInfo, win32FloppyControllerTable=win32FloppyControllerTable, hwseNumberOfPowerCords=hwseNumberOfPowerCords, hwcmWritePolicy=hwcmWritePolicy, hwspcXOffCharacter=hwspcXOffCharacter, hwmaCreationClassName=hwmaCreationClassName, hwnacArpUseEtherSNAP=hwnacArpUseEtherSNAP, hwpmErrorDescription=hwpmErrorDescription, hwprDefaultPriority=hwprDefaultPriority, hwmmStartingAddress=hwmmStartingAddress, hwppAvailability=hwppAvailability, hwbuErrorCleared=hwbuErrorCleared, hwbaSystemName=hwbaSystemName, hwhpSystemName=hwhpSystemName, hwmaEndingAddress=hwmaEndingAddress, hwhpErrorCleared=hwhpErrorCleared, hwprConfigManagerErrorCode=hwprConfigManagerErrorCode, hwcdDrive=hwcdDrive, hwpmmCapacity=hwpmmCapacity, hwnaInterfaceIndex=hwnaInterfaceIndex, hwtdPowerManagementSupported=hwtdPowerManagementSupported, hwpbConfigManagerErrorCode=hwpbConfigManagerErrorCode, hwcpConfigManagerUserConfig=hwcpConfigManagerUserConfig, hwdmIndex=hwdmIndex, hwbaSmartBatteryVersion=hwbaSmartBatteryVersion, hwmaOtherErrorDescription=hwmaOtherErrorDescription, hwkbCaption=hwkbCaption, win32BIOSEntry=win32BIOSEntry, hwcmBlockSize=hwcmBlockSize, hwmaErrorData=hwmaErrorData, hwcmErrorDataOrder=hwcmErrorDataOrder, hwcpSystemCreationClassName=hwcpSystemCreationClassName, hwcdInstallDate=hwcdInstallDate, hwmbSecondaryBusType=hwmbSecondaryBusType, hwscsiIndex=hwscsiIndex, hwpmAttachedTo=hwpmAttachedTo, hwvpCurrentReading=hwvpCurrentReading, hwprjInstallDate=hwprjInstallDate, hwtdNumberOfMediaSupported=hwtdNumberOfMediaSupported, hwvcDriverVersion=hwvcDriverVersion, hwupsLastErrorCode=hwupsLastErrorCode, hwobName=hwobName, hwspSystemName=hwspSystemName, hwscsiStatus=hwscsiStatus, hwupsUPSPort=hwupsUPSPort, hwbbSlotLayout=hwbbSlotLayout, hwprPrinterState=hwprPrinterState, hwnacFullDNSRegistrationEnabled=hwnacFullDNSRegistrationEnabled, win32BatteryTable=win32BatteryTable, hwcpuArchitecture=hwcpuArchitecture, hwfanPNPDeviceID=hwfanPNPDeviceID, hwhpInstallDate=hwhpInstallDate, hwideStatus=hwideStatus, hwtmpConfigManagerUserConfig=hwtmpConfigManagerUserConfig, hwupsRange1InputVoltageLow=hwupsRange1InputVoltageLow, hwpmProviderName=hwpmProviderName, hwsmrCreationClassName=hwsmrCreationClassName, hwsbmAccess=hwsbmAccess, hwupsEstimatedChargeRemaining=hwupsEstimatedChargeRemaining, hwpsdManufacturer=hwpsdManufacturer, hwseServicePhilosophy=hwseServicePhilosophy, hwbaDesignCapacity=hwbaDesignCapacity, hwvpLowerThresholdFatal=hwvpLowerThresholdFatal, hwtdMaxBlockSize=hwtdMaxBlockSize, hwcpuSystemName=hwcpuSystemName, hwnacGatewayCostMetric=hwnacGatewayCostMetric, hwbbWeight=hwbbWeight, hwseTag=hwseTag, hwdmErrorDescription=hwdmErrorDescription, hwprcMediaType=hwprcMediaType, hwprjTimeSubmitted=hwprjTimeSubmitted, hwtdLastErrorCode=hwtdLastErrorCode, hwspcXOnXOffInFlowControl=hwspcXOnXOffInFlowControl, hwupsCommandFile=hwupsCommandFile, win32PortConnectorTable=win32PortConnectorTable, hwpsdDeviceName=hwpsdDeviceName, hwcdCreationClassName=hwcdCreationClassName, hwpcTag=hwpcTag, hwprLocal=hwprLocal, hwpreDescription=hwpreDescription, hwssTag=hwssTag, hwspcBaudRate=hwspcBaudRate, hwcmErrorAccess=hwcmErrorAccess, hwdaMemoryType=hwdaMemoryType, hwmaAccess=hwmaAccess, hwtppSNMPDevIndex=hwtppSNMPDevIndex, hwpcmConfigManagerUserConfig=hwpcmConfigManagerUserConfig, win32OnBoardDeviceEntry=win32OnBoardDeviceEntry, hwcpuLastErrorCode=hwcpuLastErrorCode, hwprCurrentCharSet=hwprCurrentCharSet, hwtdCapabilityDescriptions=hwtdCapabilityDescriptions, hwnaPowerManagementCapabilities=hwnaPowerManagementCapabilities, hwtppStatus=hwtppStatus, win32PointingDeviceEntry=win32PointingDeviceEntry, hwprdStatus=hwprdStatus, win32DeviceMemoryAddressEntry=win32DeviceMemoryAddressEntry, hwupsCanTurnOffRemotely=hwupsCanTurnOffRemotely, hwirqInstallDate=hwirqInstallDate, hwpreIndex=hwpreIndex, hwbaErrorDescription=hwbaErrorDescription, hwpmErrorControlInfo=hwpmErrorControlInfo, hwnaAdapterType=hwnaAdapterType, hwdmScreenHeight=hwdmScreenHeight, hwmaErrorTime=hwmaErrorTime, hwsmrStatus=hwsmrStatus, hwfdErrorMethodology=hwfdErrorMethodology, hwprSystemName=hwprSystemName, hwmmEndingAddress=hwmmEndingAddress, win32IRQResourceEntry=win32IRQResourceEntry, hwupsStatus=hwupsStatus, hwnacDNSEnabledForWINSResolution=hwnacDNSEnabledForWINSResolution, hwvcCaption=hwvcCaption, hwcmStatus=hwcmStatus, hwvpDescription=hwvpDescription, hwupsIsSwitchingSupply=hwupsIsSwitchingSupply, hwucAvailability=hwucAvailability, hwpmaMaxCapacity=hwpmaMaxCapacity, hwddBytesPerSector=hwddBytesPerSector, hwpnpCreationClassName=hwpnpCreationClassName, hwprComment=hwprComment, hwpbName=hwpbName, hwprPowerManagementSupported=hwprPowerManagementSupported, hwfanPowerManagementSupported=hwfanPowerManagementSupported, hwtdCaption=hwtdCaption, hwcpCurrentReading=hwcpCurrentReading, hwvcCurrentHorizontalResolution=hwvcCurrentHorizontalResolution, hwtdInstallDate=hwtdInstallDate, hwmbCaption=hwmbCaption, hwprPortName=hwprPortName, hwpmdName=hwpmdName, hwnacPMTUDiscoveryEnabled=hwnacPMTUDiscoveryEnabled, hwnacIPSecPermitIPProtocols=hwnacIPSecPermitIPProtocols, hwbbRequiresDaughterBoard=hwbbRequiresDaughterBoard, hwprPrintProcessor=hwprPrintProcessor, hwseCreationClassName=hwseCreationClassName, hwnacDomainDNSRegistrationEnable=hwnacDomainDNSRegistrationEnable, hwscsiHardwareVersion=hwscsiHardwareVersion, hwprcXResolution=hwprcXResolution, hwddCreationClassName=hwddCreationClassName, hwvcNumberOfColorPlanes=hwvcNumberOfColorPlanes, hwcpIndex=hwcpIndex, hwvcMaxMemorySupported=hwvcMaxMemorySupported, hwpmdRemovable=hwpmdRemovable, hwseRemovable=hwseRemovable, hwpmSupportsSynchronousConnect=hwpmSupportsSynchronousConnect, hwpmaManufacturer=hwpmaManufacturer, hwppTimeOfLastReset=hwppTimeOfLastReset, win32ParallelPortEntry=win32ParallelPortEntry, hwprcCaption=hwprcCaption, hwpcSerialNumber=hwpcSerialNumber, hwtmpErrorCleared=hwtmpErrorCleared, hwfcSystemCreationClassName=hwfcSystemCreationClassName, hwpbLocation=hwpbLocation, hwvcVideoMode=hwvcVideoMode, hwvcCurrentScanMode=hwvcCurrentScanMode, win32SystemSlotEntry=win32SystemSlotEntry, win32DiskDriveEntry=win32DiskDriveEntry, hwmaErrorDataOrder=hwmaErrorDataOrder, hwvcAvailability=hwvcAvailability, hw1394PowerManagementCapability=hw1394PowerManagementCapability, hwucManufacturer=hwucManufacturer, hwspConfigManagerErrorCode=hwspConfigManagerErrorCode, hwpmSpeakerVolumeLow=hwpmSpeakerVolumeLow, hwcpuStatus=hwcpuStatus, hwprPrinterStatus=hwprPrinterStatus, hwmbRevisionNumber=hwmbRevisionNumber, win32PointingDeviceTable=win32PointingDeviceTable, hwtppPortNumber=hwtppPortNumber, hwmmLastErrorCode=hwmmLastErrorCode, hwpbStatus=hwpbStatus, hwprjParameters=hwprjParameters, hwupsRange2InputFrequencyLow=hwupsRange2InputFrequencyLow, hwirqName=hwirqName, hwpmSpeakerModeOn=hwpmSpeakerModeOn, hwprSeparatorFile=hwprSeparatorFile, hwuhUSBVersion=hwuhUSBVersion, hw1394MaxNumberControlled=hw1394MaxNumberControlled, win32AutochkSettingTable=win32AutochkSettingTable, hwsbmLastErrorCode=hwsbmLastErrorCode, hwpmaTag=hwpmaTag, hwssModel=hwssModel, hwbaBatteryStatus=hwbaBatteryStatus, hwbiManufacturer=hwbiManufacturer, hwdmPixelsPerXLogicalInch=hwdmPixelsPerXLogicalInch, hwppConfigManagerErrorCode=hwppConfigManagerErrorCode, hwkbSystemCreationClassName=hwkbSystemCreationClassName, hwcpuManufacturer=hwcpuManufacturer, hwspCapabilities=hwspCapabilities, hwprcICMMethod=hwprcICMMethod, hwrfgStatusInfo=hwrfgStatusInfo, hwtmpTolerance=hwtmpTolerance, hwfdNeedsCleaning=hwfdNeedsCleaning, hwprcHorizontalResolution=hwprcHorizontalResolution, hwpmRingsBeforeAnswer=hwpmRingsBeforeAnswer, hwcmStatusInfo=hwcmStatusInfo, hwprSpoolEnabled=hwprSpoolEnabled, hwspIndex=hwspIndex, hwspcXOnXOffOutFlowControl=hwspcXOnXOffOutFlowControl, hwhpSystemCreationClassName=hwhpSystemCreationClassName, hwppPNPDeviceID=hwppPNPDeviceID, hwpmFlowControlOff=hwpmFlowControlOff, hwseAudibleAlarm=hwseAudibleAlarm, hwrfgInstallDate=hwrfgInstallDate, hwptDescription=hwptDescription, hwcpuUniqueId=hwcpuUniqueId, win32MemoryArrayEntry=win32MemoryArrayEntry, hwbaEstimatedRunTime=hwbaEstimatedRunTime, hwpsdName=hwpsdName, hwptDeviceID=hwptDeviceID, hwtppSNMPCommunity=hwtppSNMPCommunity, hwnacDHCPLeaseObtained=hwnacDHCPLeaseObtained, hwvcErrorDescription=hwvcErrorDescription, hwcpuUpgradeMethod=hwcpuUpgradeMethod, hwcpuVoltageCaps=hwcpuVoltageCaps, hwmaCorrectableError=hwmaCorrectableError, hwideConfigManagerUserConfig=hwideConfigManagerUserConfig, hwnacDHCPServer=hwnacDHCPServer, hwtmpAccuracy=hwtmpAccuracy, hwpbExpectedBatteryLife=hwpbExpectedBatteryLife, hwcmCreationClassName=hwcmCreationClassName, hwfcAvailability=hwfcAvailability, hwpmSystemName=hwpmSystemName, hwprDetectedErrorState=hwprDetectedErrorState, hwdmAvailability=hwdmAvailability, hwpbEstimatedChargeRemaining=hwpbEstimatedChargeRemaining, hwprCapabilities=hwprCapabilities, hwseReplaceable=hwseReplaceable, hwhpCreationClassName=hwhpCreationClassName, hwnaNetConnectionID=hwnaNetConnectionID, hwnacDefaultTTL=hwnacDefaultTTL, hwobStatus=hwobStatus, hwssVersion=hwssVersion, hwssPoweredOn=hwssPoweredOn, win32USBHubEntry=win32USBHubEntry, hwpsdInfName=hwpsdInfName, hwpbLastErrorCode=hwpbLastErrorCode, hwspCaption=hwspCaption, hwpbDeviceID=hwpbDeviceID, hwvcInfFilename=hwvcInfFilename, hwpmSystemCreationClassName=hwpmSystemCreationClassName, win32IDEControllerEntry=win32IDEControllerEntry, hwbbDescription=hwbbDescription, hwptStatus=hwptStatus, hwptQuadSpeedThreshold=hwptQuadSpeedThreshold, hwpmModel=hwpmModel)
mibBuilder.exportSymbols("INFORMANT-HW", hwcmLastErrorCode=hwcmLastErrorCode, hw1394CreationClassName=hw1394CreationClassName, hwcpuCurrentVoltage=hwcpuCurrentVoltage, hwkbCreationClassName=hwkbCreationClassName, hwpcCaption=hwpcCaption, hwmaIndex=hwmaIndex, win32FloppyDriveEntry=win32FloppyDriveEntry, hwdmScreenWidth=hwdmScreenWidth, hwcmSystemLevelAddress=hwcmSystemLevelAddress, hwideIndex=hwideIndex, hwspDescription=hwspDescription, hwcdFileSystemFlags=hwcdFileSystemFlags, hwbbSerialNumber=hwbbSerialNumber, hwmaName=hwmaName, hwscsiRegistryIndex=hwscsiRegistryIndex, hwpbDescription=hwpbDescription, hwmmPurpose=hwmmPurpose, hwseWeight=hwseWeight, hwpnpErrorCleared=hwpnpErrorCleared, hwsbmAdditionalErrorData=hwsbmAdditionalErrorData, hw1394Manufacturer=hw1394Manufacturer, hwbbInstallDate=hwbbInstallDate, wmiTelephony=wmiTelephony, hwpreEndingAddress=hwpreEndingAddress, hwideTimeOfLastReset=hwideTimeOfLastReset, hwfdInstallDate=hwfdInstallDate, hwpreCSName=hwpreCSName, hwnaIndex=hwnaIndex, hwmmSystemLevelAddress=hwmmSystemLevelAddress, hwnacWINSHostLookupFile=hwnacWINSHostLookupFile, hwmbPNPDeviceID=hwmbPNPDeviceID, hwprcDeviceName=hwprcDeviceName, hwfdIndex=hwfdIndex, hwpmdModel=hwpmdModel, hwnaCaption=hwnaCaption, win32PnPSignedDriverEntry=win32PnPSignedDriverEntry, hwirqShareable=hwirqShareable, hwvcCreationClassName=hwvcCreationClassName, hwcpuNumberOfLogicalProcessors=hwcpuNumberOfLogicalProcessors, hwdmPNPDeviceID=hwdmPNPDeviceID, hwpmmStatus=hwpmmStatus, hwfcMaxNumberControlled=hwfcMaxNumberControlled, hwtppSystemName=hwtppSystemName, hwpmDialType=hwpmDialType, win32TemperatureProbeEntry=win32TemperatureProbeEntry, win32SoundDeviceEntry=win32SoundDeviceEntry, hwbuName=hwbuName, hwnaAutoSense=hwnaAutoSense, hwseVisibleAlarm=hwseVisibleAlarm, hwpmPNPDeviceID=hwpmPNPDeviceID, hwssVccMixedVoltageSupport=hwssVccMixedVoltageSupport, hwcmLineSize=hwcmLineSize, hwtdId=hwtdId, hwpmmSKU=hwpmmSKU, hwnacIPSecPermitTCPPorts=hwnacIPSecPermitTCPPorts, win32TapeDriveEntry=win32TapeDriveEntry, hwptPointingType=hwptPointingType, hwbbHotSwappable=hwbbHotSwappable, hwvcConfigManagerUserConfig=hwvcConfigManagerUserConfig, hwirqAvailability=hwirqAvailability, hwpmaHotSwappable=hwpmaHotSwappable, hwcdDefaultBlockSize=hwcdDefaultBlockSize, hwuhPNPDeviceID=hwuhPNPDeviceID, hwcpuExtClock=hwcpuExtClock, hwprInstallDate=hwprInstallDate, hwtmpResolution=hwtmpResolution, hwprPriority=hwprPriority, win32PortResourceTable=win32PortResourceTable, hwseWidth=hwseWidth, hwvcAcceleratorCapabilities=hwvcAcceleratorCapabilities, hwcdId=hwcdId, hwpmModemInfSection=hwpmModemInfSection, hwprdStartMode=hwprdStartMode, hwcmInstallDate=hwcmInstallDate, hwidManufacturer=hwidManufacturer, hwvcCapabilityDescriptions=hwvcCapabilityDescriptions, hwpmmName=hwpmmName, hwpmSpeakerModeDial=hwpmSpeakerModeDial, win32DesktopMonitorEntry=win32DesktopMonitorEntry, hwppCapabilityDescriptions=hwppCapabilityDescriptions, hwdmaName=hwdmaName, hwbaInstallDate=hwbaInstallDate, hwprUntilTime=hwprUntilTime, hwobManufacturer=hwobManufacturer, hwvpStatus=hwvpStatus, hwideDeviceID=hwideDeviceID, hwpbTimeOnBattery=hwpbTimeOnBattery, hwhpConfigManagerUserConfig=hwhpConfigManagerUserConfig, hwnaNetConnectionStatus=hwnaNetConnectionStatus, hwhpDeviceID=hwhpDeviceID, hwprjStatus=hwprjStatus, hwtdMinBlockSize=hwtdMinBlockSize, hwddCapabilityDescriptions=hwddCapabilityDescriptions, hwscsiDescription=hwscsiDescription, hwptHardwareType=hwptHardwareType, hwpreStatus=hwpreStatus, hwvpPNPDeviceID=hwvpPNPDeviceID, hwucMaxNumberControlled=hwucMaxNumberControlled, hwcdSCSITargetId=hwcdSCSITargetId, hwprjElapsedTime=hwprjElapsedTime, hwpcmSystemCreationClassName=hwpcmSystemCreationClassName, hwbaCaption=hwbaCaption, hwddPowerManagementSupported=hwddPowerManagementSupported, hw1394PNPDeviceID=hw1394PNPDeviceID, hwcdSystemName=hwcdSystemName, hwhpErrorDescription=hwhpErrorDescription, hwmaStatusInfo=hwmaStatusInfo, hwmmConfigManagerErrorCode=hwmmConfigManagerErrorCode, hwpmaSerialNumber=hwpmaSerialNumber, win32SerialPortConfigTable=win32SerialPortConfigTable, hwideSystemCreationClassName=hwideSystemCreationClassName, hwprLastErrorCode=hwprLastErrorCode, hwbbVersion=hwbbVersion, hwbaIndex=hwbaIndex, hwssPurposeDescription=hwssPurposeDescription, hwbbPoweredOn=hwbbPoweredOn, hw1394Availability=hw1394Availability, hwmmErrorTime=hwmmErrorTime, hwfdCapabilityDescriptions=hwfdCapabilityDescriptions, win32MemoryDeviceTable=win32MemoryDeviceTable, hwbiSMBIOSMajorVersion=hwbiSMBIOSMajorVersion, hwsndSystemCreationClassName=hwsndSystemCreationClassName, hwpmDeviceType=hwpmDeviceType, hwideCreationClassName=hwideCreationClassName, hwtmpCaption=hwtmpCaption, hwtppCaption=hwtppCaption, hwtdAvailability=hwtdAvailability, hwbuCaption=hwbuCaption, hwtmpMaxReadable=hwtmpMaxReadable, hwidPowerManagementSupported=hwidPowerManagementSupported, win32ProcessorTable=win32ProcessorTable, hwspBinary=hwspBinary, hwpmaCreationClassName=hwpmaCreationClassName, hwhpCaption=hwhpCaption, win32CDROMDriveTable=win32CDROMDriveTable, hwcmReadPolicy=hwcmReadPolicy, hwcpIsLinear=hwcpIsLinear, hwprdName=hwprdName, hwseDescription=hwseDescription, hwdmaTypeCTiming=hwdmaTypeCTiming, hwscsiStatusInfo=hwscsiStatusInfo, hwprExtendedPrinterStatus=hwprExtendedPrinterStatus, wmiMassStorage=wmiMassStorage, hwtdPowerManagementCapabilities=hwtdPowerManagementCapabilities, hwvcPowerManagementSupported=hwvcPowerManagementSupported, hwfdStatusInfo=hwfdStatusInfo, hwdaInstallDate=hwdaInstallDate, hwprShared=hwprShared, hwppCapabilities=hwppCapabilities, hwnacIPXMediaType=hwnacIPXMediaType, hwtppCreationClassName=hwtppCreationClassName, hwscsiInstallDate=hwscsiInstallDate, hwmaPowerManagementCapabilities=hwmaPowerManagementCapabilities, hwprjName=hwprjName, hwpmCountriesSupported=hwpmCountriesSupported, hwupsName=hwupsName, hwfdErrorCleared=hwfdErrorCleared, hwpmmManufacturer=hwpmmManufacturer, hwtdECC=hwtdECC, hwpmCurrentPasswords=hwpmCurrentPasswords, hwpmDeviceID=hwpmDeviceID, hwprjJobId=hwprjJobId, hwprName=hwprName, hwddErrorDescription=hwddErrorDescription, win32SystemSlotTable=win32SystemSlotTable, hwcdMaxMediaSize=hwcdMaxMediaSize, win32SystemEnclosureEntry=win32SystemEnclosureEntry, hwnaAdapterTypeID=hwnaAdapterTypeID, hwprjDriverName=hwprjDriverName, hwprMaxSizeSupported=hwprMaxSizeSupported, hwtdCapabilities=hwtdCapabilities, hwasDescription=hwasDescription, hwprcColor=hwprcColor, hwbiSMBIOSMinorVersion=hwbiSMBIOSMinorVersion, hwseLockPresent=hwseLockPresent, hwhpIndex=hwhpIndex, hwnacCaption=hwnacCaption, hwvcErrorCleared=hwvcErrorCleared, hwprMimeTypesSupported=hwprMimeTypesSupported, hwbaDeviceID=hwbaDeviceID, hwprDriverName=hwprDriverName, hwsbmBlockSize=hwsbmBlockSize, hwdmaDMAChannel=hwdmaDMAChannel, hwupsRange2InputVoltageHigh=hwupsRange2InputVoltageHigh, hwmaPNPDeviceID=hwmaPNPDeviceID, hwupsRange2InputFrequencyHigh=hwupsRange2InputFrequencyHigh, hwdmaIndex=hwdmaIndex, hwupsRange1InputFrequencyHigh=hwupsRange1InputFrequencyHigh, hwrfgConfigManagerErrorCode=hwrfgConfigManagerErrorCode, hwbiVersion=hwbiVersion, hwnacDHCPLeaseExpires=hwnacDHCPLeaseExpires, hwtppQueue=hwtppQueue, win32HeatPipeTable=win32HeatPipeTable, hwpcmTimeOfLastReset=hwpcmTimeOfLastReset, hwdaStartingAddress=hwdaStartingAddress, hwnaAvailability=hwnaAvailability, hwuhClassCode=hwuhClassCode, hwnacTcpUseRFC1122UrgentPointer=hwnacTcpUseRFC1122UrgentPointer, hwpmaWidth=hwpmaWidth, win32IRQResourceTable=win32IRQResourceTable, hwvcVideoProcessor=hwvcVideoProcessor, hwsbmInstallDate=hwsbmInstallDate, hwseName=hwseName, hwvpIsLinear=hwvpIsLinear, hwucConfigManagerErrorCode=hwucConfigManagerErrorCode, hwtdFeaturesHigh=hwtdFeaturesHigh, hwuhSubclassCode=hwuhSubclassCode, hwnacNumForwardPackets=hwnacNumForwardPackets, hwpsdStartMode=hwpsdStartMode, hwuhDescription=hwuhDescription, hwprdStarted=hwprdStarted, hwpsdProviderName=hwpsdProviderName, hwobPoweredOn=hwobPoweredOn, hwhpPowerManagementCapabilities=hwhpPowerManagementCapabilities, hwscsiErrorDescription=hwscsiErrorDescription, hwpsdDriverVersion=hwpsdDriverVersion, hwbiInstallDate=hwbiInstallDate, hwssNumber=hwssNumber, hwpmDescription=hwpmDescription, hwcmSystemName=hwcmSystemName, hwprMaxCopies=hwprMaxCopies, hwpmmInstallDate=hwpmmInstallDate, hwseIndex=hwseIndex, hwpmModulationCCITT=hwpmModulationCCITT, hwobIndex=hwobIndex, hwtmpInstallDate=hwtmpInstallDate, hwupsActiveInputVoltage=hwupsActiveInputVoltage, hwpmStatus=hwpmStatus, hwkbLayout=hwkbLayout, hwpsdDeviceID=hwpsdDeviceID, hwirqHardware=hwirqHardware, hwpbManufacturer=hwpbManufacturer, hwtdErrorDescription=hwtdErrorDescription, hwddPNPDeviceID=hwddPNPDeviceID, hwspErrorDescription=hwspErrorDescription, hwprAveragePagesPerMinute=hwprAveragePagesPerMinute, hwprdSystemName=hwprdSystemName, hwbaDescription=hwbaDescription, hwfdCaption=hwfdCaption, hwupsRange2InputVoltageLow=hwupsRange2InputVoltageLow, hwnacDNSServerSearchOrder=hwnacDNSServerSearchOrder, hwnacDNSDomain=hwnacDNSDomain, hwmmBlockSize=hwmmBlockSize, hwpnpService=hwpnpService, hwfcInstallDate=hwfcInstallDate, hwnacIPEnabled=hwnacIPEnabled, win32POTSModemEntry=win32POTSModemEntry, hwcpuConfigManagerErrorCode=hwcpuConfigManagerErrorCode, hwucDescription=hwucDescription, hwvcInstalledDisplayDrivers=hwvcInstalledDisplayDrivers, hwptCreationClassName=hwptCreationClassName, hwscsiCaption=hwscsiCaption, hwspMaximumInputBufferSize=hwspMaximumInputBufferSize, hwpcmSystemName=hwpcmSystemName)
mibBuilder.exportSymbols("INFORMANT-HW", hwprPublished=hwprPublished, hwhpStatusInfo=hwhpStatusInfo, hwcdName=hwcdName, hwscsiAvailability=hwscsiAvailability, hwprdDescription=hwprdDescription, hwprCurrentCapabilities=hwprCurrentCapabilities, hwpcmDescription=hwpcmDescription, hwspStatusInfo=hwspStatusInfo, hwbiIndex=hwbiIndex, hwsbmSystemName=hwsbmSystemName, hwspSupportsSpecialCharacters=hwspSupportsSpecialCharacters, hwprcFormName=hwprcFormName, hwprPaperSizesSupported=hwprPaperSizesSupported, hwbiPrimaryBIOS=hwbiPrimaryBIOS, hwprdDefaultDataType=hwprdDefaultDataType, hwpmdDescription=hwpmdDescription, hwbaChemistry=hwbaChemistry, hw1394ErrorCleared=hw1394ErrorCleared, hwprcDisplayFlags=hwprcDisplayFlags, win32PCMCIAControllerEntry=win32PCMCIAControllerEntry, hwbiBIOSVersion=hwbiBIOSVersion, hwvcCurrentNumberOfColumns=hwvcCurrentNumberOfColumns, hwseSKU=hwseSKU, hwcpAvailability=hwcpAvailability, hwpbSystemCreationClassName=hwpbSystemCreationClassName, hwpmFlowControlHard=hwpmFlowControlHard, hwpcmStatus=hwpcmStatus, hwmaErrorDescription=hwmaErrorDescription, win32DMAChannelTable=win32DMAChannelTable, hwspSettableStopBits=hwspSettableStopBits, hwuhSystemName=hwuhSystemName, hwptDoubleSpeedThreshold=hwptDoubleSpeedThreshold, hwmmPowerManagementCapabilities=hwmmPowerManagementCapabilities, hwcpuErrorCleared=hwcpuErrorCleared, hwtdStatusInfo=hwtdStatusInfo, hwnaDescription=hwnaDescription, win32PnPEntityTable=win32PnPEntityTable, hwvpCaption=hwvpCaption, hwbiSMBIOSPresent=hwbiSMBIOSPresent, hwobHotSwappable=hwobHotSwappable, hwfdPowerManagementSupported=hwfdPowerManagementSupported, hwnaMaxSpeed=hwnaMaxSpeed, hwptInfSection=hwptInfSection, win32ProcessorEntry=win32ProcessorEntry, hwnacIPXAddress=hwnacIPXAddress, hwnacTcpNumConnections=hwnacTcpNumConnections, hw1394DeviceID=hw1394DeviceID, hwbiInstallableLanguages=hwbiInstallableLanguages, hwtmpMinReadable=hwtmpMinReadable, hwscsiDriverName=hwscsiDriverName, hwsndIndex=hwsndIndex, hwmmPNPDeviceID=hwmmPNPDeviceID, hwuhLastErrorCode=hwuhLastErrorCode, hwsndDescription=hwsndDescription, hwcpUpperThresholdCritical=hwcpUpperThresholdCritical, hwcmCaption=hwcmCaption, hwcpuStatusInfo=hwcpuStatusInfo, hwmaPurpose=hwmaPurpose, win32PhysicalMemoryTable=win32PhysicalMemoryTable, hwrfgDeviceID=hwrfgDeviceID, hwprjPagesPrinted=hwprjPagesPrinted, hwpmCompressionOn=hwpmCompressionOn, hwkbDeviceID=hwkbDeviceID, hwcpDeviceID=hwcpDeviceID, hwsbmErrorTransferSize=hwsbmErrorTransferSize, win32PhysicalMediaTable=win32PhysicalMediaTable, hwobRemovable=hwobRemovable, hwseSerialNumber=hwseSerialNumber, hwprHorizontalResolution=hwprHorizontalResolution, hwidePNPDeviceID=hwidePNPDeviceID, hwmmErrorResolution=hwmmErrorResolution, hwpmSpeakerVolumeHigh=hwpmSpeakerVolumeHigh, hwprjHostPrintQueue=hwprjHostPrintQueue, hwscsiLastErrorCode=hwscsiLastErrorCode, wmiVideoMonitor=wmiVideoMonitor, win32RefrigerationTable=win32RefrigerationTable, hwdmConfigManagerErrorCode=hwdmConfigManagerErrorCode, hw1394StatusInfo=hw1394StatusInfo, hwfanStatusInfo=hwfanStatusInfo, hwmbCreationClassName=hwmbCreationClassName, hwscsiMaxTransferRate=hwscsiMaxTransferRate, hwssStatus=hwssStatus, hwddPhysicalIndex=hwddPhysicalIndex, hwuhIndex=hwuhIndex, hwppCaption=hwppCaption, hwspConfigManagerUserConfig=hwspConfigManagerUserConfig, hwseInstallDate=hwseInstallDate, hwuhStatusInfo=hwuhStatusInfo, hwnacIGMPLevel=hwnacIGMPLevel, hwspcContinueXMitOnXOff=hwspcContinueXMitOnXOff, hwnaInstalled=hwnaInstalled, hwprKeepPrintedJobs=hwprKeepPrintedJobs, win32PrinterTable=win32PrinterTable, hwobDescription=hwobDescription, hwbbConfigOptions=hwbbConfigOptions, hwscsiMaxDataWidth=hwscsiMaxDataWidth, hwcmLevel=hwcmLevel, hwvcICMIntent=hwvcICMIntent, hwprcLogPixels=hwprcLogPixels, hwideDescription=hwideDescription, hwsbmConfigManagerUserConfig=hwsbmConfigManagerUserConfig, hwmaPowerManagementSupported=hwmaPowerManagementSupported, hwprLanguagesSupported=hwprLanguagesSupported, win321394ControllerEntry=win321394ControllerEntry, win32NetworkAdapterEntry=win32NetworkAdapterEntry, hwkbIndex=hwkbIndex, hwpnpConfigManagerUserConfig=hwpnpConfigManagerUserConfig, hwddTotalHeads=hwddTotalHeads, hwpnpSystemCreationClassName=hwpnpSystemCreationClassName, hwsmrCaption=hwsmrCaption, hwpmErrorControlForced=hwpmErrorControlForced, hwpmmVersion=hwpmmVersion, hwirqCreationClassName=hwirqCreationClassName, win32PrinterDriverEntry=win32PrinterDriverEntry, hwmmIndex=hwmmIndex, hwuhGangSwitched=hwuhGangSwitched, hwpcmDeviceID=hwpcmDeviceID, hwnaErrorDescription=hwnaErrorDescription, hwcpuPNPDeviceID=hwcpuPNPDeviceID, hwprcScale=hwprcScale, hwddLastErrorCode=hwddLastErrorCode, hwcmErrorCorrectType=hwcmErrorCorrectType, hwcdLastErrorCode=hwcdLastErrorCode, hwcpuAvailability=hwcpuAvailability, hwvcInfSection=hwvcInfSection, hwprcSpecificationVersion=hwprcSpecificationVersion, hwfanName=hwfanName, hwpmdReplaceable=hwpmdReplaceable, hwkbIsLocked=hwkbIsLocked, hwprdHelpFile=hwprdHelpFile, hwbaStatus=hwbaStatus, hwpbInstallDate=hwpbInstallDate, hwkbStatus=hwkbStatus, hwnacMTU=hwnacMTU, hwpbChemistry=hwpbChemistry, hwidName=hwidName, hwpmmSpeed=hwpmmSpeed, hwnaRegistryIndex=hwnaRegistryIndex, hwspcSettingID=hwspcSettingID, hwcdCapabilities=hwcdCapabilities, hwcpuPowerManagementSupported=hwcpuPowerManagementSupported, hwtmpNominalReading=hwtmpNominalReading, hwobOtherIdentifyingInfo=hwobOtherIdentifyingInfo, hwssManufacturer=hwssManufacturer, hwprdDataFile=hwprdDataFile, hwcmLocation=hwcmLocation, hwtdCompressionMethod=hwtdCompressionMethod, hwdmaTransferWidths=hwdmaTransferWidths, hwdaDescription=hwdaDescription, hwprExtendedDetectedErrorState=hwprExtendedDetectedErrorState, hwpmCaption=hwpmCaption, hwcdMaxBlockSize=hwcdMaxBlockSize, hwsmrEndingAddress=hwsmrEndingAddress, hwbbName=hwbbName, hwrfgPowerManagementCapabilities=hwrfgPowerManagementCapabilities, hwmbAvailability=hwmbAvailability, hwddCompressionMethod=hwddCompressionMethod, hwpmMaxBaudRateToPhone=hwpmMaxBaudRateToPhone, hwcpuDescription=hwcpuDescription, hwspcDiscardNULLBytes=hwspcDiscardNULLBytes, hwnacTcpWindowSize=hwnacTcpWindowSize, hwssConnectorType=hwssConnectorType, hwbaAvailability=hwbaAvailability, hwhpActiveCooling=hwhpActiveCooling, hwddTotalTracks=hwddTotalTracks, hwdmaAddressSize=hwdmaAddressSize, hwpsdStatus=hwpsdStatus, win32FloppyDriveTable=win32FloppyDriveTable, hwrfgLastErrorCode=hwrfgLastErrorCode, hwtmpLowerThresholdCritical=hwtmpLowerThresholdCritical, hwpcmErrorDescription=hwpcmErrorDescription, hwprIndex=hwprIndex, hwprJobCountSinceLastReset=hwprJobCountSinceLastReset, hwprRawOnly=hwprRawOnly, hwvcAdapterDACType=hwvcAdapterDACType, hwmbName=hwmbName, hwpcConnectorType=hwpcConnectorType, hwirqVector=hwirqVector, hwpsdIndex=hwpsdIndex, hwtmpIsLinear=hwtmpIsLinear, hwfcErrorDescription=hwfcErrorDescription, hwcpLowerThresholdFatal=hwcpLowerThresholdFatal, hwpmMaxBaudRateToSerialPort=hwpmMaxBaudRateToSerialPort, hwideSystemName=hwideSystemName, hwfanConfigManagerErrorCode=hwfanConfigManagerErrorCode, hwddDescription=hwddDescription, hwddSCSIBus=hwddSCSIBus, hwddTotalCylinders=hwddTotalCylinders, hwpmaLocation=hwpmaLocation, hwprErrorInformation=hwprErrorInformation, hwpbPowerManagementCapabilities=hwpbPowerManagementCapabilities, hwtmpPowerManagementCapabilities=hwtmpPowerManagementCapabilities, hwbiDescription=hwbiDescription, hwnacForwardBufferMemory=hwnacForwardBufferMemory, hwvcMaxRefreshRate=hwvcMaxRefreshRate, hwpcPoweredOn=hwpcPoweredOn, hwcmSystemCreationClassName=hwcmSystemCreationClassName, hwspName=hwspName, hwpmaHeight=hwpmaHeight, hwucPowerManagementCapabilities=hwucPowerManagementCapabilities, hwptIsLocked=hwptIsLocked, hwprdDriverPath=hwprdDriverPath, hwuhAvailability=hwuhAvailability, hw1394PowerManagementSupported=hw1394PowerManagementSupported, hwspMaxBaudRate=hwspMaxBaudRate, hwfdPNPDeviceID=hwfdPNPDeviceID, hwsbmStartingAddress=hwsbmStartingAddress, hwbaPowerManagementCapabilities=hwbaPowerManagementCapabilities, hwupsCreationClassName=hwupsCreationClassName, hwnaSpeed=hwnaSpeed, hwddMaxBlockSize=hwddMaxBlockSize, hwidProtocolSupported=hwidProtocolSupported, hwprjSize=hwprjSize, hwmaDescription=hwmaDescription, hw1394ConfigManagerErrorCode=hw1394ConfigManagerErrorCode, hwbuStatus=hwbuStatus, hwcdMediaType=hwcdMediaType, hwpmdCleanerMedia=hwpmdCleanerMedia, hwpnpPNPDeviceID=hwpnpPNPDeviceID, hw1394LastErrorCode=hw1394LastErrorCode, hwmmErrorDataOrder=hwmmErrorDataOrder, hwbaEstimatedChargeRemaining=hwbaEstimatedChargeRemaining, hwpbIndex=hwpbIndex, hwcmErrorTime=hwcmErrorTime, hwtdMaxMediaSize=hwtdMaxMediaSize, hwnacServiceName=hwnacServiceName, hwpsdSystemCreationClassName=hwpsdSystemCreationClassName, hwvcDeviceSpecificPens=hwvcDeviceSpecificPens, hwsndStatusInfo=hwsndStatusInfo, hwdaCreationClassName=hwdaCreationClassName, hwkbStatusInfo=hwkbStatusInfo, hwfcStatus=hwfcStatus, hwvcDeviceID=hwvcDeviceID, hwprcName=hwprcName, hwideProtocolSupported=hwideProtocolSupported, hwscsiSystemCreationClassName=hwscsiSystemCreationClassName, hwsbmErrorMethodology=hwsbmErrorMethodology, hwbiCodeSet=hwbiCodeSet, hwddTracksPerCylinder=hwddTracksPerCylinder, hwspSupportsParityCheck=hwspSupportsParityCheck, hwsndAvailability=hwsndAvailability, hwcpMinReadable=hwcpMinReadable, hwsmrName=hwsmrName, hwfcDeviceID=hwfcDeviceID, hwbbRequirementsDescription=hwbbRequirementsDescription, hwddMinBlockSize=hwddMinBlockSize, hwtmpConfigManagerErrorCode=hwtmpConfigManagerErrorCode, win32SerialPortConfigEntry=win32SerialPortConfigEntry, win32SCSIControllerTable=win32SCSIControllerTable, hwidAvailability=hwidAvailability, hwseTypeDescriptions=hwseTypeDescriptions, hwtmpUpperThresholdFatal=hwtmpUpperThresholdFatal, hwtdCompression=hwtdCompression, hwcpStatusInfo=hwcpStatusInfo)
mibBuilder.exportSymbols("INFORMANT-HW", hwidTimeOfLastReset=hwidTimeOfLastReset, hwpbSystemName=hwpbSystemName, hwvcTimeOfLastReset=hwvcTimeOfLastReset, hwnaServiceName=hwnaServiceName, hwasUserInputDelay=hwasUserInputDelay, hwuhCurrentAlternativeSettings=hwuhCurrentAlternativeSettings, hwcpSystemName=hwcpSystemName, hwkbConfigManagerUserConfig=hwkbConfigManagerUserConfig, hwcpuLoadPercentage=hwcpuLoadPercentage, hwmmOtherErrorDescription=hwmmOtherErrorDescription, hwppDescription=hwppDescription, hwnaNetworkAddresses=hwnaNetworkAddresses, hwpmmModel=hwpmmModel, win32AutochkSettingEntry=win32AutochkSettingEntry, hwspAvailability=hwspAvailability, hwirqCSCreationClassName=hwirqCSCreationClassName, hwbiIdentificationCode=hwbiIdentificationCode, hwprcDescription=hwprcDescription, hwupsPowerFailSignal=hwupsPowerFailSignal, hwprDefaultCapabilities=hwprDefaultCapabilities, hwcpuMaxClockSpeed=hwcpuMaxClockSpeed, hwpmResponsesKeyName=hwpmResponsesKeyName, hwscsiCreationClassName=hwscsiCreationClassName, hwcpPowerManagementCapabilities=hwcpPowerManagementCapabilities, hwuhInstallDate=hwuhInstallDate, hwddSize=hwddSize, hwspPowerManagementCapabilities=hwspPowerManagementCapabilities, hwcmAvailability=hwcmAvailability, hwbiSoftwareElementState=hwbiSoftwareElementState, hwnacWINSSecondaryServer=hwnacWINSSecondaryServer, hwtmpUpperThresholdNonCritical=hwtmpUpperThresholdNonCritical, hwuhErrorCleared=hwuhErrorCleared, hwvpNominalReading=hwvpNominalReading, hwmmStatus=hwmmStatus, hwdmBandwidth=hwdmBandwidth, hwseCableManagementStrategy=hwseCableManagementStrategy, hwpmPowerManagementCapabilities=hwpmPowerManagementCapabilities, hwspSystemCreationClassName=hwspSystemCreationClassName, hwprjPriority=hwprjPriority, hwcdNeedsCleaning=hwcdNeedsCleaning, hwupsTotalOutputPower=hwupsTotalOutputPower, hwcmErrorAddress=hwcmErrorAddress, hwcmErrorMethodology=hwcmErrorMethodology, hwsbmStatusInfo=hwsbmStatusInfo, win32BaseBoardEntry=win32BaseBoardEntry, hwdmaMaxTransferSize=hwdmaMaxTransferSize, hwprdSupportedPlatform=hwprdSupportedPlatform, hwnacWINSScopeID=hwnacWINSScopeID, hwpmDefault=hwpmDefault, hwnaManufacturer=hwnaManufacturer, hwprAttributes=hwprAttributes, hwdmPowerManagementCapabilities=hwdmPowerManagementCapabilities, hwvcMaxNumberControlled=hwvcMaxNumberControlled, hwpcmAvailability=hwpcmAvailability, hwfanStatus=hwfanStatus, hwtmpCurrentReading=hwtmpCurrentReading, hwtmpPowerManagementSupported=hwtmpPowerManagementSupported, hwbbCaption=hwbbCaption, hwprcDisplayFrequency=hwprcDisplayFrequency, hwpmaMemoryErrorCorrection=hwpmaMemoryErrorCorrection, hwprjNotify=hwprjNotify, hwspProtocolSupported=hwspProtocolSupported, hwseSecurityStatus=hwseSecurityStatus, hwtdErrorCleared=hwtdErrorCleared, hwsndPowerManagementSupported=hwsndPowerManagementSupported, hwcdVolumeSerialNumber=hwcdVolumeSerialNumber, hwucErrorDescription=hwucErrorDescription, win32PrinterConfigurationEntry=win32PrinterConfigurationEntry, hwspOSAutoDiscovered=hwspOSAutoDiscovered, win32DesktopMonitorTable=win32DesktopMonitorTable, hwpbExpectedLife=hwpbExpectedLife, hwbaConfigManagerErrorCode=hwbaConfigManagerErrorCode, hwidErrorDescription=hwidErrorDescription, hwcmOtherErrorDescription=hwcmOtherErrorDescription, hwpcIndex=hwpcIndex, hwseDepth=hwseDepth, hwkbConfigManagerErrorCode=hwkbConfigManagerErrorCode, hwbiStatus=hwbiStatus, hwpmaReplaceable=hwpmaReplaceable, hwcpLowerThresholdCritical=hwcpLowerThresholdCritical, hwseBreachDescription=hwseBreachDescription, win32SMBIOSMemoryTable=win32SMBIOSMemoryTable, hwbbModel=hwbbModel, hwssSerialNumber=hwssSerialNumber, hwpcmInstallDate=hwpcmInstallDate, hwvpErrorCleared=hwvpErrorCleared, hwcdMfrAssignedRevisionLevel=hwcdMfrAssignedRevisionLevel, hwdmDescription=hwdmDescription, hwvpLastErrorCode=hwvpLastErrorCode, hwdmaCaption=hwdmaCaption, hwppCreationClassName=hwppCreationClassName, hwnacIPConnectionMetric=hwnacIPConnectionMetric, hwppOSAutoDiscovered=hwppOSAutoDiscovered, hwscsiMaxNumberControlled=hwscsiMaxNumberControlled, hwspLastErrorCode=hwspLastErrorCode, hwprjTotalPages=hwprjTotalPages, hwprdVersion=hwprdVersion, hwupsLowBatterySignal=hwupsLowBatterySignal, hwbaMaxRechargeTime=hwbaMaxRechargeTime, hwdmaByteMode=hwdmaByteMode, win32TapeDriveTable=win32TapeDriveTable, hwpbDesignCapacity=hwpbDesignCapacity, hwpnpSystemName=hwpnpSystemName, wmiPrinting=wmiPrinting, hwprcCollate=hwprcCollate, hwpcOtherIdentifyingInfo=hwpcOtherIdentifyingInfo, hwsndErrorCleared=hwsndErrorCleared, hwfanInstallDate=hwfanInstallDate, hwdaCSName=hwdaCSName, hwprErrorCleared=hwprErrorCleared, hwbuPNPDeviceID=hwbuPNPDeviceID, hwnaPermanentAddress=hwnaPermanentAddress, hwddSystemName=hwddSystemName, hwvcSystemName=hwvcSystemName, hwcpuOtherFamilyDescription=hwcpuOtherFamilyDescription, hwddPartitions=hwddPartitions, hwpmmTag=hwpmmTag, hwobTag=hwobTag, hwuhCreationClassName=hwuhCreationClassName, hwpcStatus=hwpcStatus, hwvcStatus=hwvcStatus, hw1394InstallDate=hw1394InstallDate, hwspcXOnXMitThreshold=hwspcXOnXMitThreshold, hwuhCaption=hwuhCaption, hwprDefaultCopies=hwprDefaultCopies, hwtppInstallDate=hwtppInstallDate, hwddStatusInfo=hwddStatusInfo, hwsbmCorrectableError=hwsbmCorrectableError, hwpmConfigManagerErrorCode=hwpmConfigManagerErrorCode, hwdmaAvailability=hwdmaAvailability, hwvpSystemName=hwvpSystemName, hwpmVoiceSwitchFeature=hwpmVoiceSwitchFeature, hwidConfigManagerErrorCode=hwidConfigManagerErrorCode, hwcdErrorDescription=hwcdErrorDescription, hw1394Name=hw1394Name, hwucName=hwucName, hwpbSmartBatteryVersion=hwpbSmartBatteryVersion, hwuhProtocolCode=hwuhProtocolCode, hwptNumberOfButtons=hwptNumberOfButtons, hwsmrDescription=hwsmrDescription, hwsbmNumberOfBlocks=hwsbmNumberOfBlocks, hwpmPrefix=hwpmPrefix, hwfanAvailability=hwfanAvailability, hwprcICMIntent=hwprcICMIntent, hwvcProtocolSupported=hwvcProtocolSupported, win32VideoControllerEntry=win32VideoControllerEntry, hwpreCSCreationClassName=hwpreCSCreationClassName, hwpcVersion=hwpcVersion, hwptAvailability=hwptAvailability, win32BatteryEntry=win32BatteryEntry, hwssHeightAllowed=hwssHeightAllowed, hwseHotSwappable=hwseHotSwappable, hwtmpErrorDescription=hwtmpErrorDescription, hwcmNumberOfBlocks=hwcmNumberOfBlocks, hwpnpAvailability=hwpnpAvailability, hwtppIndex=hwtppIndex, hwbaBatteryRechargeTime=hwbaBatteryRechargeTime, hwbbManufacturer=hwbbManufacturer, hwcpuCpuStatus=hwcpuCpuStatus, hwfdNumberOfMediaSupported=hwfdNumberOfMediaSupported, hwpmmIndex=hwpmmIndex, hwobEnabled=hwobEnabled, hwspcDescription=hwspcDescription, win32PhysicalMemoryArrayTable=win32PhysicalMemoryArrayTable, hwcpLowerThresholdNonCritical=hwcpLowerThresholdNonCritical, win32CurrentProbeTable=win32CurrentProbeTable, hwtdConfigManagerUserConfig=hwtdConfigManagerUserConfig, hwcdRevisionLevel=hwcdRevisionLevel, hwppDeviceID=hwppDeviceID, hwpbCreationClassName=hwpbCreationClassName, hwprdMonitorName=hwprdMonitorName, hwvcCurrentBitsPerPixel=hwvcCurrentBitsPerPixel, hwddDeviceID=hwddDeviceID, hwprjStatusMask=hwprjStatusMask, hwcpNormalMin=hwcpNormalMin, hwsbmIndex=hwsbmIndex, hwasCaption=hwasCaption, hwcdErrorMethodology=hwcdErrorMethodology, hwbuBusNum=hwbuBusNum, hwprcYResolution=hwprcYResolution, hwvpIndex=hwvpIndex, hwnaConfigManagerErrorCode=hwnaConfigManagerErrorCode, hwbiSMBIOSBIOSVersion=hwbiSMBIOSBIOSVersion, win32DMAChannelEntry=win32DMAChannelEntry, win32SystemEnclosureTable=win32SystemEnclosureTable, hwspcParityCheckEnabled=hwspcParityCheckEnabled, hwcpLastErrorCode=hwcpLastErrorCode, hwsndMPU401Address=hwsndMPU401Address, win32SCSIControllerEntry=win32SCSIControllerEntry, hwppName=hwppName, hwcmEndingAddress=hwcmEndingAddress, hwtppDescription=hwtppDescription, hwssCreationClassName=hwssCreationClassName, hwvpResolution=hwvpResolution, hwmaConfigManagerErrorCode=hwmaConfigManagerErrorCode, hwspcDTRFlowControlType=hwspcDTRFlowControlType, hwcpuVersion=hwcpuVersion, hwcdSCSILogicalUnit=hwcdSCSILogicalUnit, hwppInstallDate=hwppInstallDate, hwidDescription=hwidDescription, hwucPowerManagementSupported=hwucPowerManagementSupported, hwpmdStatus=hwpmdStatus, hwpmPortSubClass=hwpmPortSubClass, hwmbPowerManagementCapabilities=hwmbPowerManagementCapabilities, hwsbmErrorAccess=hwsbmErrorAccess, hwcdErrorCleared=hwcdErrorCleared, hwcpuCurrentClockSpeed=hwcpuCurrentClockSpeed, hwpsdHardWareID=hwpsdHardWareID, hw1394TimeOfLastReset=hw1394TimeOfLastReset, hwspSupports16BitMode=hwspSupports16BitMode, hwfdCapabilities=hwfdCapabilities, hwpmModulationScheme=hwpmModulationScheme, hwpmaSKU=hwpmaSKU, hwpcmPowerManagementSupported=hwpcmPowerManagementSupported, hwrfgAvailability=hwrfgAvailability, hwspMaxNumberControlled=hwspMaxNumberControlled, hwprdCreationClassName=hwprdCreationClassName, hwdmaDescription=hwdmaDescription, hwpmBlindOn=hwpmBlindOn, hwpbErrorCleared=hwpbErrorCleared, hwmaStatus=hwmaStatus, hwidStatusInfo=hwidStatusInfo, hwnacTcpMaxDataRetransmissions=hwnacTcpMaxDataRetransmissions, hwupsPowerManagementCapabilities=hwupsPowerManagementCapabilities, hwdmLastErrorCode=hwdmLastErrorCode, hwvpConfigManagerErrorCode=hwvpConfigManagerErrorCode, hwpcmPowerManagementCapabilities=hwpcmPowerManagementCapabilities, hwdaCaption=hwdaCaption, hwprjDataType=hwprjDataType, hwmmErrorGranularity=hwmmErrorGranularity, hwpcmManufacturer=hwpcmManufacturer, hwupsEstimatedRunTime=hwupsEstimatedRunTime, hwnaPowerManagementSupported=hwnaPowerManagementSupported, hwvpMinReadable=hwvpMinReadable, hwmmDescription=hwmmDescription, hwcpuSocketDesignation=hwcpuSocketDesignation, hwirqIRQNumber=hwirqIRQNumber, hwsndDeviceID=hwsndDeviceID, hwfanErrorCleared=hwfanErrorCleared, hwddName=hwddName, hwcpuFamily=hwcpuFamily, hwnaInstallDate=hwnaInstallDate, hwbiBuildNumber=hwbiBuildNumber, hwmmErrorDescription=hwmmErrorDescription, win32BIOSTable=win32BIOSTable, hwkbSystemName=hwkbSystemName, hwcmSupportedSRAM=hwcmSupportedSRAM, hwasSettingID=hwasSettingID, hwvpMaxReadable=hwvpMaxReadable, hwvpName=hwvpName, win32MemoryArrayTable=win32MemoryArrayTable, hwbuAvailability=hwbuAvailability, hwobInstallDate=hwobInstallDate, hwdmMonitorType=hwdmMonitorType)
mibBuilder.exportSymbols("INFORMANT-HW", hwpmmMemoryType=hwpmmMemoryType, hwspSupportsRLSD=hwspSupportsRLSD, hwprShareName=hwprShareName, hwprEnableDevQueryPrint=hwprEnableDevQueryPrint, hwbuErrorDescription=hwbuErrorDescription, hwbiBiosCharacteristics=hwbiBiosCharacteristics, hwfcPNPDeviceID=hwfcPNPDeviceID, hwspcEventCharacter=hwspcEventCharacter, hwupsRange1InputFrequencyLow=hwupsRange1InputFrequencyLow, hwprDirect=hwprDirect, hwrfgConfigManagerUserConfig=hwrfgConfigManagerUserConfig, hwfcConfigManagerErrorCode=hwfcConfigManagerErrorCode, hwnacIPUseZeroBroadcast=hwnacIPUseZeroBroadcast, hwseServiceDescriptions=hwseServiceDescriptions, hwprdInstallDate=hwprdInstallDate, hwddSCSITargetId=hwddSCSITargetId, hwfdConfigManagerErrorCode=hwfdConfigManagerErrorCode, win32IDEControllerTable=win32IDEControllerTable, win32MemoryDeviceEntry=win32MemoryDeviceEntry, hwfanPowerManagementCapabilities=hwfanPowerManagementCapabilities, hwcmPowerManagementSupported=hwcmPowerManagementSupported, hwcmPurpose=hwcmPurpose, hwmmConfigManagerUserConfig=hwmmConfigManagerUserConfig, hwnacSettingID=hwnacSettingID, hwtppSystemCreationClassName=hwtppSystemCreationClassName, hwcdPowerManagementCapabilities=hwcdPowerManagementCapabilities, hwkbErrorDescription=hwkbErrorDescription, hwddManufacturer=hwddManufacturer, hwcmErrorTransferSize=hwcmErrorTransferSize, hwspSupportsXOnXOffSet=hwspSupportsXOnXOffSet, hwidStatus=hwidStatus, hwsndConfigManagerErrorCode=hwsndConfigManagerErrorCode, hwbiName=hwbiName, hwpsdPDO=hwpsdPDO, hwpmdCaption=hwpmdCaption, hwuhDeviceID=hwuhDeviceID, hwrfgPNPDeviceID=hwrfgPNPDeviceID, hwprdOEMUrl=hwprdOEMUrl, hwvcDescription=hwvcDescription, hwpmaInstallDate=hwpmaInstallDate, hwddTotalSectors=hwddTotalSectors, hwcpuStepping=hwcpuStepping, hwdmCaption=hwdmCaption, hwcmReplacementPolicy=hwcmReplacementPolicy, hwpcInternalReferenceDesignator=hwpcInternalReferenceDesignator, hwpmmSerialNumber=hwpmmSerialNumber, hwppPowerManagementSupported=hwppPowerManagementSupported, win32VoltageProbeTable=win32VoltageProbeTable, hwdmStatus=hwdmStatus, hwpbAvailability=hwpbAvailability, win32InfraredDeviceEntry=win32InfraredDeviceEntry, hwpmdCapacity=hwpmdCapacity, hwcpCaption=hwcpCaption, hwvcStatusInfo=hwvcStatusInfo, hwucPNPDeviceID=hwucPNPDeviceID, hwcdConfigManagerErrorCode=hwcdConfigManagerErrorCode)
