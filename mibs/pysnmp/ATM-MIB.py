#
# PySNMP MIB module ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:57:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Counter64, NotificationType, ObjectIdentity, ModuleIdentity, Gauge32, MibIdentifier, Unsigned32, Integer32, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Counter64", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Gauge32", "MibIdentifier", "Unsigned32", "Integer32", "TimeTicks", "iso")
TimeStamp, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "TextualConvention", "RowStatus")
atmMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 37))
if mibBuilder.loadTexts: atmMIB.setLastUpdated('9406072245Z')
if mibBuilder.loadTexts: atmMIB.setOrganization('IETF AToM MIB Working Group')
atmMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 37, 1))
class IfIndex(TextualConvention, Integer32):
    status = 'current'

class AtmTrafficDescrParamIndex(TextualConvention, Integer32):
    status = 'current'

atmTrafficDescriptorTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 37, 1, 1))
atmNoTrafficDescriptor = ObjectIdentity((1, 3, 6, 1, 2, 1, 37, 1, 1, 1))
if mibBuilder.loadTexts: atmNoTrafficDescriptor.setStatus('current')
atmNoClpNoScr = ObjectIdentity((1, 3, 6, 1, 2, 1, 37, 1, 1, 2))
if mibBuilder.loadTexts: atmNoClpNoScr.setStatus('current')
atmClpNoTaggingNoScr = ObjectIdentity((1, 3, 6, 1, 2, 1, 37, 1, 1, 3))
if mibBuilder.loadTexts: atmClpNoTaggingNoScr.setStatus('current')
atmClpTaggingNoScr = ObjectIdentity((1, 3, 6, 1, 2, 1, 37, 1, 1, 4))
if mibBuilder.loadTexts: atmClpTaggingNoScr.setStatus('current')
atmNoClpScr = ObjectIdentity((1, 3, 6, 1, 2, 1, 37, 1, 1, 5))
if mibBuilder.loadTexts: atmNoClpScr.setStatus('current')
atmClpNoTaggingScr = ObjectIdentity((1, 3, 6, 1, 2, 1, 37, 1, 1, 6))
if mibBuilder.loadTexts: atmClpNoTaggingScr.setStatus('current')
atmClpTaggingScr = ObjectIdentity((1, 3, 6, 1, 2, 1, 37, 1, 1, 7))
if mibBuilder.loadTexts: atmClpTaggingScr.setStatus('current')
atmInterfaceConfTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 2), )
if mibBuilder.loadTexts: atmInterfaceConfTable.setStatus('current')
atmInterfaceConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: atmInterfaceConfEntry.setStatus('current')
atmInterfaceMaxVpcs = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceMaxVpcs.setStatus('current')
atmInterfaceMaxVccs = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceMaxVccs.setStatus('current')
atmInterfaceConfVpcs = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceConfVpcs.setStatus('current')
atmInterfaceConfVccs = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceConfVccs.setStatus('current')
atmInterfaceMaxActiveVpiBits = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceMaxActiveVpiBits.setStatus('current')
atmInterfaceMaxActiveVciBits = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceMaxActiveVciBits.setStatus('current')
atmInterfaceIlmiVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceIlmiVpi.setStatus('current')
atmInterfaceIlmiVci = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceIlmiVci.setStatus('current')
atmInterfaceAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("private", 1), ("nsapE164", 2), ("nativeE164", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceAddressType.setStatus('current')
atmInterfaceAdminAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceAdminAddress.setStatus('current')
atmInterfaceMyNeighborIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceMyNeighborIpAddress.setStatus('current')
atmInterfaceMyNeighborIfName = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInterfaceMyNeighborIfName.setStatus('current')
atmInterfaceDs3PlcpTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 3), )
if mibBuilder.loadTexts: atmInterfaceDs3PlcpTable.setStatus('current')
atmInterfaceDs3PlcpEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: atmInterfaceDs3PlcpEntry.setStatus('current')
atmInterfaceDs3PlcpSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceDs3PlcpSEFSs.setStatus('current')
atmInterfaceDs3PlcpAlarmState = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAlarm", 1), ("receivedFarEndAlarm", 2), ("incomingLOF", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceDs3PlcpAlarmState.setStatus('current')
atmInterfaceDs3PlcpUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceDs3PlcpUASs.setStatus('current')
atmInterfaceTCTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 4), )
if mibBuilder.loadTexts: atmInterfaceTCTable.setStatus('current')
atmInterfaceTCEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: atmInterfaceTCEntry.setStatus('current')
atmInterfaceOCDEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceOCDEvents.setStatus('current')
atmInterfaceTCAlarmState = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAlarm", 1), ("lcdFailure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmInterfaceTCAlarmState.setStatus('current')
atmTrafficDescrParamTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 5), )
if mibBuilder.loadTexts: atmTrafficDescrParamTable.setStatus('current')
atmTrafficDescrParamEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 5, 1), ).setIndexNames((0, "ATM-MIB", "atmTrafficDescrParamIndex"))
if mibBuilder.loadTexts: atmTrafficDescrParamEntry.setStatus('current')
atmTrafficDescrParamIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 1), AtmTrafficDescrParamIndex())
if mibBuilder.loadTexts: atmTrafficDescrParamIndex.setStatus('current')
atmTrafficDescrType = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 2), ObjectIdentifier().clone((1, 3, 6, 1, 2, 1, 37, 1, 1, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficDescrType.setStatus('current')
atmTrafficDescrParam1 = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficDescrParam1.setStatus('current')
atmTrafficDescrParam2 = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficDescrParam2.setStatus('current')
atmTrafficDescrParam3 = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficDescrParam3.setStatus('current')
atmTrafficDescrParam4 = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficDescrParam4.setStatus('current')
atmTrafficDescrParam5 = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficDescrParam5.setStatus('current')
atmTrafficQoSClass = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficQoSClass.setStatus('current')
atmTrafficDescrRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 5, 1, 9), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmTrafficDescrRowStatus.setStatus('current')
atmVplTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 6), )
if mibBuilder.loadTexts: atmVplTable.setStatus('current')
atmVplEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: atmVplEntry.setStatus('current')
atmVplVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: atmVplVpi.setStatus('current')
atmVplAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVplAdminStatus.setStatus('current')
atmVplOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVplOperStatus.setStatus('current')
atmVplLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVplLastChange.setStatus('current')
atmVplReceiveTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 5), AtmTrafficDescrParamIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVplReceiveTrafficDescrIndex.setStatus('current')
atmVplTransmitTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 6), AtmTrafficDescrParamIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVplTransmitTrafficDescrIndex.setStatus('current')
atmVplCrossConnectIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVplCrossConnectIdentifier.setStatus('current')
atmVplRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 6, 1, 8), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVplRowStatus.setStatus('current')
atmVclTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 7), )
if mibBuilder.loadTexts: atmVclTable.setStatus('current')
atmVclEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: atmVclEntry.setStatus('current')
atmVclVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: atmVclVpi.setStatus('current')
atmVclVci = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: atmVclVci.setStatus('current')
atmVclAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVclAdminStatus.setStatus('current')
atmVclOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVclOperStatus.setStatus('current')
atmVclLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVclLastChange.setStatus('current')
atmVclReceiveTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 6), AtmTrafficDescrParamIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVclReceiveTrafficDescrIndex.setStatus('current')
atmVclTransmitTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 7), AtmTrafficDescrParamIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVclTransmitTrafficDescrIndex.setStatus('current')
atmVccAalType = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("aal1", 1), ("aal34", 2), ("aal5", 3), ("other", 4), ("unknown", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVccAalType.setStatus('current')
atmVccAal5CpcsTransmitSduSize = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(9188)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVccAal5CpcsTransmitSduSize.setStatus('current')
atmVccAal5CpcsReceiveSduSize = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(9188)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVccAal5CpcsReceiveSduSize.setStatus('current')
atmVccAal5EncapsType = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("vcMultiplexRoutedProtocol", 1), ("vcMultiplexBridgedProtocol8023", 2), ("vcMultiplexBridgedProtocol8025", 3), ("vcMultiplexBridgedProtocol8026", 4), ("vcMultiplexLANemulation8023", 5), ("vcMultiplexLANemulation8025", 6), ("llcEncapsulation", 7), ("multiprotocolFrameRelaySscs", 8), ("other", 9), ("unknown", 10))).clone('llcEncapsulation')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVccAal5EncapsType.setStatus('current')
atmVclCrossConnectIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVclCrossConnectIdentifier.setStatus('current')
atmVclRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 7, 1, 13), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVclRowStatus.setStatus('current')
atmVpCrossConnectIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 37, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVpCrossConnectIndexNext.setStatus('current')
atmVpCrossConnectTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 9), )
if mibBuilder.loadTexts: atmVpCrossConnectTable.setStatus('current')
atmVpCrossConnectEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 9, 1), ).setIndexNames((0, "ATM-MIB", "atmVpCrossConnectIndex"), (0, "ATM-MIB", "atmVpCrossConnectLowIfIndex"), (0, "ATM-MIB", "atmVpCrossConnectLowVpi"), (0, "ATM-MIB", "atmVpCrossConnectHighIfIndex"), (0, "ATM-MIB", "atmVpCrossConnectHighVpi"))
if mibBuilder.loadTexts: atmVpCrossConnectEntry.setStatus('current')
atmVpCrossConnectIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: atmVpCrossConnectIndex.setStatus('current')
atmVpCrossConnectLowIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 2), IfIndex())
if mibBuilder.loadTexts: atmVpCrossConnectLowIfIndex.setStatus('current')
atmVpCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: atmVpCrossConnectLowVpi.setStatus('current')
atmVpCrossConnectHighIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 4), IfIndex())
if mibBuilder.loadTexts: atmVpCrossConnectHighIfIndex.setStatus('current')
atmVpCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: atmVpCrossConnectHighVpi.setStatus('current')
atmVpCrossConnectAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVpCrossConnectAdminStatus.setStatus('current')
atmVpCrossConnectL2HOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVpCrossConnectL2HOperStatus.setStatus('current')
atmVpCrossConnectH2LOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVpCrossConnectH2LOperStatus.setStatus('current')
atmVpCrossConnectL2HLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVpCrossConnectL2HLastChange.setStatus('current')
atmVpCrossConnectH2LLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVpCrossConnectH2LLastChange.setStatus('current')
atmVpCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 9, 1, 11), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVpCrossConnectRowStatus.setStatus('current')
atmVcCrossConnectIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 37, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVcCrossConnectIndexNext.setStatus('current')
atmVcCrossConnectTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 11), )
if mibBuilder.loadTexts: atmVcCrossConnectTable.setStatus('current')
atmVcCrossConnectEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 11, 1), ).setIndexNames((0, "ATM-MIB", "atmVcCrossConnectIndex"), (0, "ATM-MIB", "atmVcCrossConnectLowIfIndex"), (0, "ATM-MIB", "atmVcCrossConnectLowVpi"), (0, "ATM-MIB", "atmVcCrossConnectLowVci"), (0, "ATM-MIB", "atmVcCrossConnectHighIfIndex"), (0, "ATM-MIB", "atmVcCrossConnectHighVpi"), (0, "ATM-MIB", "atmVcCrossConnectHighVci"))
if mibBuilder.loadTexts: atmVcCrossConnectEntry.setStatus('current')
atmVcCrossConnectIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: atmVcCrossConnectIndex.setStatus('current')
atmVcCrossConnectLowIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 2), IfIndex())
if mibBuilder.loadTexts: atmVcCrossConnectLowIfIndex.setStatus('current')
atmVcCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: atmVcCrossConnectLowVpi.setStatus('current')
atmVcCrossConnectLowVci = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: atmVcCrossConnectLowVci.setStatus('current')
atmVcCrossConnectHighIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 5), IfIndex())
if mibBuilder.loadTexts: atmVcCrossConnectHighIfIndex.setStatus('current')
atmVcCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: atmVcCrossConnectHighVpi.setStatus('current')
atmVcCrossConnectHighVci = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: atmVcCrossConnectHighVci.setStatus('current')
atmVcCrossConnectAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVcCrossConnectAdminStatus.setStatus('current')
atmVcCrossConnectL2HOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVcCrossConnectL2HOperStatus.setStatus('current')
atmVcCrossConnectH2LOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVcCrossConnectH2LOperStatus.setStatus('current')
atmVcCrossConnectL2HLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVcCrossConnectL2HLastChange.setStatus('current')
atmVcCrossConnectH2LLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmVcCrossConnectH2LLastChange.setStatus('current')
atmVcCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 11, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmVcCrossConnectRowStatus.setStatus('current')
aal5VccTable = MibTable((1, 3, 6, 1, 2, 1, 37, 1, 12), )
if mibBuilder.loadTexts: aal5VccTable.setStatus('current')
aal5VccEntry = MibTableRow((1, 3, 6, 1, 2, 1, 37, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "aal5VccVpi"), (0, "ATM-MIB", "aal5VccVci"))
if mibBuilder.loadTexts: aal5VccEntry.setStatus('current')
aal5VccVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: aal5VccVpi.setStatus('current')
aal5VccVci = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: aal5VccVci.setStatus('current')
aal5VccCrcErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aal5VccCrcErrors.setStatus('current')
aal5VccSarTimeOuts = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aal5VccSarTimeOuts.setStatus('current')
aal5VccOverSizedSDUs = MibTableColumn((1, 3, 6, 1, 2, 1, 37, 1, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aal5VccOverSizedSDUs.setStatus('current')
atmMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 37, 2))
atmMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 37, 2, 1))
atmMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 37, 2, 2))
atmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 37, 2, 2, 1)).setObjects(("ATM-MIB", "atmInterfaceConfGroup"), ("ATM-MIB", "atmTrafficDescrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmMIBCompliance = atmMIBCompliance.setStatus('current')
atmInterfaceConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 1)).setObjects(("ATM-MIB", "atmInterfaceMaxVpcs"), ("ATM-MIB", "atmInterfaceMaxVccs"), ("ATM-MIB", "atmInterfaceConfVpcs"), ("ATM-MIB", "atmInterfaceConfVccs"), ("ATM-MIB", "atmInterfaceMaxActiveVpiBits"), ("ATM-MIB", "atmInterfaceMaxActiveVciBits"), ("ATM-MIB", "atmInterfaceIlmiVpi"), ("ATM-MIB", "atmInterfaceIlmiVci"), ("ATM-MIB", "atmInterfaceAddressType"), ("ATM-MIB", "atmInterfaceAdminAddress"), ("ATM-MIB", "atmInterfaceMyNeighborIpAddress"), ("ATM-MIB", "atmInterfaceMyNeighborIfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmInterfaceConfGroup = atmInterfaceConfGroup.setStatus('current')
atmTrafficDescrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 2)).setObjects(("ATM-MIB", "atmTrafficDescrType"), ("ATM-MIB", "atmTrafficDescrParam1"), ("ATM-MIB", "atmTrafficDescrParam2"), ("ATM-MIB", "atmTrafficDescrParam3"), ("ATM-MIB", "atmTrafficDescrParam4"), ("ATM-MIB", "atmTrafficDescrParam5"), ("ATM-MIB", "atmTrafficQoSClass"), ("ATM-MIB", "atmTrafficDescrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmTrafficDescrGroup = atmTrafficDescrGroup.setStatus('current')
atmInterfaceDs3PlcpGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 3)).setObjects(("ATM-MIB", "atmInterfaceDs3PlcpSEFSs"), ("ATM-MIB", "atmInterfaceDs3PlcpAlarmState"), ("ATM-MIB", "atmInterfaceDs3PlcpUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmInterfaceDs3PlcpGroup = atmInterfaceDs3PlcpGroup.setStatus('current')
atmInterfaceTCGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 4)).setObjects(("ATM-MIB", "atmInterfaceOCDEvents"), ("ATM-MIB", "atmInterfaceTCAlarmState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmInterfaceTCGroup = atmInterfaceTCGroup.setStatus('current')
atmVpcTerminationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 5)).setObjects(("ATM-MIB", "atmVplOperStatus"), ("ATM-MIB", "atmVplAdminStatus"), ("ATM-MIB", "atmVplLastChange"), ("ATM-MIB", "atmVplReceiveTrafficDescrIndex"), ("ATM-MIB", "atmVplTransmitTrafficDescrIndex"), ("ATM-MIB", "atmVplRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmVpcTerminationGroup = atmVpcTerminationGroup.setStatus('current')
atmVccTerminationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 6)).setObjects(("ATM-MIB", "atmVclOperStatus"), ("ATM-MIB", "atmVclAdminStatus"), ("ATM-MIB", "atmVclLastChange"), ("ATM-MIB", "atmVclReceiveTrafficDescrIndex"), ("ATM-MIB", "atmVclTransmitTrafficDescrIndex"), ("ATM-MIB", "atmVccAalType"), ("ATM-MIB", "atmVclRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmVccTerminationGroup = atmVccTerminationGroup.setStatus('current')
atmVpCrossConnectGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 7)).setObjects(("ATM-MIB", "atmVplReceiveTrafficDescrIndex"), ("ATM-MIB", "atmVplTransmitTrafficDescrIndex"), ("ATM-MIB", "atmVplOperStatus"), ("ATM-MIB", "atmVplRowStatus"), ("ATM-MIB", "atmVpCrossConnectAdminStatus"), ("ATM-MIB", "atmVpCrossConnectL2HOperStatus"), ("ATM-MIB", "atmVpCrossConnectH2LOperStatus"), ("ATM-MIB", "atmVpCrossConnectL2HLastChange"), ("ATM-MIB", "atmVpCrossConnectH2LLastChange"), ("ATM-MIB", "atmVpCrossConnectRowStatus"), ("ATM-MIB", "atmVplCrossConnectIdentifier"), ("ATM-MIB", "atmVpCrossConnectIndexNext"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmVpCrossConnectGroup = atmVpCrossConnectGroup.setStatus('current')
atmVcCrossConnectGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 8)).setObjects(("ATM-MIB", "atmVclReceiveTrafficDescrIndex"), ("ATM-MIB", "atmVclTransmitTrafficDescrIndex"), ("ATM-MIB", "atmVclOperStatus"), ("ATM-MIB", "atmVclRowStatus"), ("ATM-MIB", "atmVcCrossConnectAdminStatus"), ("ATM-MIB", "atmVcCrossConnectL2HOperStatus"), ("ATM-MIB", "atmVcCrossConnectH2LOperStatus"), ("ATM-MIB", "atmVcCrossConnectL2HLastChange"), ("ATM-MIB", "atmVcCrossConnectH2LLastChange"), ("ATM-MIB", "atmVcCrossConnectRowStatus"), ("ATM-MIB", "atmVclCrossConnectIdentifier"), ("ATM-MIB", "atmVcCrossConnectIndexNext"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    atmVcCrossConnectGroup = atmVcCrossConnectGroup.setStatus('current')
aal5VccGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 37, 2, 1, 9)).setObjects(("ATM-MIB", "atmVccAal5CpcsTransmitSduSize"), ("ATM-MIB", "atmVccAal5CpcsReceiveSduSize"), ("ATM-MIB", "atmVccAal5EncapsType"), ("ATM-MIB", "aal5VccCrcErrors"), ("ATM-MIB", "aal5VccSarTimeOuts"), ("ATM-MIB", "aal5VccOverSizedSDUs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aal5VccGroup = aal5VccGroup.setStatus('current')
mibBuilder.exportSymbols("ATM-MIB", atmVpCrossConnectGroup=atmVpCrossConnectGroup, atmVpCrossConnectHighVpi=atmVpCrossConnectHighVpi, atmVclLastChange=atmVclLastChange, atmVcCrossConnectHighVci=atmVcCrossConnectHighVci, atmVpCrossConnectL2HOperStatus=atmVpCrossConnectL2HOperStatus, aal5VccOverSizedSDUs=aal5VccOverSizedSDUs, aal5VccTable=aal5VccTable, atmVclEntry=atmVclEntry, atmVcCrossConnectH2LOperStatus=atmVcCrossConnectH2LOperStatus, atmMIBGroups=atmMIBGroups, atmVcCrossConnectHighVpi=atmVcCrossConnectHighVpi, aal5VccVci=aal5VccVci, aal5VccGroup=aal5VccGroup, atmInterfaceDs3PlcpSEFSs=atmInterfaceDs3PlcpSEFSs, atmVplReceiveTrafficDescrIndex=atmVplReceiveTrafficDescrIndex, atmVpCrossConnectH2LLastChange=atmVpCrossConnectH2LLastChange, atmInterfaceConfVccs=atmInterfaceConfVccs, atmInterfaceConfGroup=atmInterfaceConfGroup, atmVplCrossConnectIdentifier=atmVplCrossConnectIdentifier, atmVcCrossConnectL2HLastChange=atmVcCrossConnectL2HLastChange, atmVpCrossConnectHighIfIndex=atmVpCrossConnectHighIfIndex, atmInterfaceMaxVccs=atmInterfaceMaxVccs, atmVpCrossConnectRowStatus=atmVpCrossConnectRowStatus, atmVcCrossConnectTable=atmVcCrossConnectTable, atmVcCrossConnectAdminStatus=atmVcCrossConnectAdminStatus, atmTrafficDescrGroup=atmTrafficDescrGroup, atmTrafficDescrParam3=atmTrafficDescrParam3, IfIndex=IfIndex, atmVpCrossConnectAdminStatus=atmVpCrossConnectAdminStatus, atmVcCrossConnectL2HOperStatus=atmVcCrossConnectL2HOperStatus, atmTrafficDescrParam4=atmTrafficDescrParam4, atmVcCrossConnectLowVci=atmVcCrossConnectLowVci, atmMIBCompliance=atmMIBCompliance, atmInterfaceMyNeighborIfName=atmInterfaceMyNeighborIfName, atmTrafficDescrParam1=atmTrafficDescrParam1, atmVcCrossConnectIndexNext=atmVcCrossConnectIndexNext, atmClpTaggingScr=atmClpTaggingScr, atmVcCrossConnectRowStatus=atmVcCrossConnectRowStatus, aal5VccSarTimeOuts=aal5VccSarTimeOuts, atmInterfaceAdminAddress=atmInterfaceAdminAddress, atmClpNoTaggingNoScr=atmClpNoTaggingNoScr, atmInterfaceDs3PlcpEntry=atmInterfaceDs3PlcpEntry, atmClpTaggingNoScr=atmClpTaggingNoScr, atmClpNoTaggingScr=atmClpNoTaggingScr, atmTrafficDescrParamTable=atmTrafficDescrParamTable, atmVpCrossConnectLowIfIndex=atmVpCrossConnectLowIfIndex, atmTrafficDescrParam5=atmTrafficDescrParam5, atmTrafficQoSClass=atmTrafficQoSClass, atmVccAal5EncapsType=atmVccAal5EncapsType, atmVcCrossConnectEntry=atmVcCrossConnectEntry, atmTrafficDescrParamEntry=atmTrafficDescrParamEntry, atmVccAal5CpcsTransmitSduSize=atmVccAal5CpcsTransmitSduSize, atmVclTransmitTrafficDescrIndex=atmVclTransmitTrafficDescrIndex, aal5VccEntry=aal5VccEntry, atmMIBCompliances=atmMIBCompliances, PYSNMP_MODULE_ID=atmMIB, atmInterfaceMaxActiveVpiBits=atmInterfaceMaxActiveVpiBits, atmVccTerminationGroup=atmVccTerminationGroup, atmInterfaceConfEntry=atmInterfaceConfEntry, atmInterfaceMaxVpcs=atmInterfaceMaxVpcs, atmVpCrossConnectL2HLastChange=atmVpCrossConnectL2HLastChange, aal5VccCrcErrors=aal5VccCrcErrors, AtmTrafficDescrParamIndex=AtmTrafficDescrParamIndex, atmVclCrossConnectIdentifier=atmVclCrossConnectIdentifier, atmVcCrossConnectGroup=atmVcCrossConnectGroup, atmTrafficDescrParamIndex=atmTrafficDescrParamIndex, atmVcCrossConnectH2LLastChange=atmVcCrossConnectH2LLastChange, atmVpCrossConnectIndexNext=atmVpCrossConnectIndexNext, atmInterfaceConfTable=atmInterfaceConfTable, atmVclVci=atmVclVci, atmVcCrossConnectIndex=atmVcCrossConnectIndex, atmMIB=atmMIB, atmVplRowStatus=atmVplRowStatus, atmTrafficDescrParam2=atmTrafficDescrParam2, atmVclOperStatus=atmVclOperStatus, atmVclAdminStatus=atmVclAdminStatus, atmInterfaceMyNeighborIpAddress=atmInterfaceMyNeighborIpAddress, atmInterfaceTCGroup=atmInterfaceTCGroup, atmVpCrossConnectH2LOperStatus=atmVpCrossConnectH2LOperStatus, atmVplTable=atmVplTable, atmVplOperStatus=atmVplOperStatus, atmTrafficDescriptorTypes=atmTrafficDescriptorTypes, atmTrafficDescrType=atmTrafficDescrType, atmVclReceiveTrafficDescrIndex=atmVclReceiveTrafficDescrIndex, atmVclVpi=atmVclVpi, atmMIBConformance=atmMIBConformance, atmNoTrafficDescriptor=atmNoTrafficDescriptor, atmMIBObjects=atmMIBObjects, atmVccAal5CpcsReceiveSduSize=atmVccAal5CpcsReceiveSduSize, atmInterfaceTCEntry=atmInterfaceTCEntry, atmInterfaceDs3PlcpAlarmState=atmInterfaceDs3PlcpAlarmState, atmInterfaceDs3PlcpGroup=atmInterfaceDs3PlcpGroup, atmInterfaceDs3PlcpUASs=atmInterfaceDs3PlcpUASs, atmTrafficDescrRowStatus=atmTrafficDescrRowStatus, atmInterfaceTCAlarmState=atmInterfaceTCAlarmState, atmVcCrossConnectLowIfIndex=atmVcCrossConnectLowIfIndex, aal5VccVpi=aal5VccVpi, atmVplAdminStatus=atmVplAdminStatus, atmVplLastChange=atmVplLastChange, atmVpcTerminationGroup=atmVpcTerminationGroup, atmNoClpNoScr=atmNoClpNoScr, atmNoClpScr=atmNoClpScr, atmVpCrossConnectIndex=atmVpCrossConnectIndex, atmVcCrossConnectLowVpi=atmVcCrossConnectLowVpi, atmInterfaceTCTable=atmInterfaceTCTable, atmInterfaceIlmiVci=atmInterfaceIlmiVci, atmInterfaceAddressType=atmInterfaceAddressType, atmInterfaceOCDEvents=atmInterfaceOCDEvents, atmVclRowStatus=atmVclRowStatus, atmInterfaceConfVpcs=atmInterfaceConfVpcs, atmVplTransmitTrafficDescrIndex=atmVplTransmitTrafficDescrIndex, atmVpCrossConnectEntry=atmVpCrossConnectEntry, atmInterfaceMaxActiveVciBits=atmInterfaceMaxActiveVciBits, atmVcCrossConnectHighIfIndex=atmVcCrossConnectHighIfIndex, atmVplVpi=atmVplVpi, atmVpCrossConnectLowVpi=atmVpCrossConnectLowVpi, atmInterfaceIlmiVpi=atmInterfaceIlmiVpi, atmVccAalType=atmVccAalType, atmVpCrossConnectTable=atmVpCrossConnectTable, atmInterfaceDs3PlcpTable=atmInterfaceDs3PlcpTable, atmVplEntry=atmVplEntry, atmVclTable=atmVclTable)
