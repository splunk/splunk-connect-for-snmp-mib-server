#
# PySNMP MIB module CPQEXTERNAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQEXTERNAL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:11:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
compaq, = mibBuilder.importSymbols("CPQHOST-MIB", "compaq")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, IpAddress, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, iso, ObjectIdentity, Bits, Counter64, TimeTicks, ModuleIdentity, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "iso", "ObjectIdentity", "Bits", "Counter64", "TimeTicks", "ModuleIdentity", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cpqExternalMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 17))
cpqExMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 17, 1))
cpqExComponent = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 17, 2))
cpqExInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 17, 2, 1))
cpqExStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 17, 2, 2))
cpqExOsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4))
cpqExMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 232, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExMibRevMajor.setStatus('mandatory')
cpqExMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 232, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExMibRevMinor.setStatus('mandatory')
cpqExMibCondition = MibScalar((1, 3, 6, 1, 4, 1, 232, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExMibCondition.setStatus('mandatory')
cpqExOsCommonPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqExOsCommonPollFreq.setStatus('mandatory')
cpqExOsCommonModuleTable = MibTable((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 2), )
if mibBuilder.loadTexts: cpqExOsCommonModuleTable.setStatus('deprecated')
cpqExOsCommonModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 2, 1), ).setIndexNames((0, "CPQEXTERNAL-MIB", "cpqExOsCommonModuleIndex"))
if mibBuilder.loadTexts: cpqExOsCommonModuleEntry.setStatus('deprecated')
cpqExOsCommonModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExOsCommonModuleIndex.setStatus('deprecated')
cpqExOsCommonModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExOsCommonModuleName.setStatus('deprecated')
cpqExOsCommonModuleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExOsCommonModuleVersion.setStatus('deprecated')
cpqExOsCommonModuleDate = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExOsCommonModuleDate.setStatus('deprecated')
cpqExOsCommonModulePurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 1, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExOsCommonModulePurpose.setStatus('deprecated')
cpqExExternalCondition = MibScalar((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalCondition.setStatus('mandatory')
cpqExExternalStatusTable = MibTable((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2), )
if mibBuilder.loadTexts: cpqExExternalStatusTable.setStatus('mandatory')
cpqExExternalStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1), ).setIndexNames((0, "CPQEXTERNAL-MIB", "cpqExExternalStatusIndex"))
if mibBuilder.loadTexts: cpqExExternalStatusEntry.setStatus('mandatory')
cpqExExternalStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusIndex.setStatus('mandatory')
cpqExExternalStatusInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusInterval.setStatus('mandatory')
cpqExExternalStatusVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusVariable.setStatus('mandatory')
cpqExExternalStatusValid = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusValid.setStatus('mandatory')
cpqExExternalStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusValue.setStatus('mandatory')
cpqExExternalStatusCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusCondition.setStatus('mandatory')
cpqExExternalStatusOkValues = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusOkValues.setStatus('mandatory')
cpqExExternalStatusDegradedValues = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusDegradedValues.setStatus('mandatory')
cpqExExternalStatusFailedValues = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 17, 2, 2, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqExExternalStatusFailedValues.setStatus('mandatory')
mibBuilder.exportSymbols("CPQEXTERNAL-MIB", cpqExStatus=cpqExStatus, cpqExExternalStatusEntry=cpqExExternalStatusEntry, cpqExExternalStatusOkValues=cpqExExternalStatusOkValues, cpqExternalMgmt=cpqExternalMgmt, cpqExExternalStatusFailedValues=cpqExExternalStatusFailedValues, cpqExOsCommonModuleEntry=cpqExOsCommonModuleEntry, cpqExExternalStatusDegradedValues=cpqExExternalStatusDegradedValues, cpqExMibRevMinor=cpqExMibRevMinor, cpqExOsCommonPollFreq=cpqExOsCommonPollFreq, cpqExInterface=cpqExInterface, cpqExOsCommonModuleIndex=cpqExOsCommonModuleIndex, cpqExOsCommon=cpqExOsCommon, cpqExOsCommonModuleDate=cpqExOsCommonModuleDate, cpqExComponent=cpqExComponent, cpqExExternalStatusValue=cpqExExternalStatusValue, cpqExExternalStatusCondition=cpqExExternalStatusCondition, cpqExExternalStatusValid=cpqExExternalStatusValid, cpqExMibRev=cpqExMibRev, cpqExExternalStatusVariable=cpqExExternalStatusVariable, cpqExExternalStatusInterval=cpqExExternalStatusInterval, cpqExMibCondition=cpqExMibCondition, cpqExOsCommonModuleTable=cpqExOsCommonModuleTable, cpqExOsCommonModuleVersion=cpqExOsCommonModuleVersion, cpqExOsCommonModulePurpose=cpqExOsCommonModulePurpose, cpqExExternalStatusIndex=cpqExExternalStatusIndex, cpqExExternalStatusTable=cpqExExternalStatusTable, cpqExMibRevMajor=cpqExMibRevMajor, cpqExOsCommonModuleName=cpqExOsCommonModuleName, cpqExExternalCondition=cpqExExternalCondition)
