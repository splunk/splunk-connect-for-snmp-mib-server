#
# PySNMP MIB module CISCO-FC-SPAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FC-SPAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:40:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcList, = mibBuilder.importSymbols("CISCO-ZS-MIB", "FcList")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, Counter32, ModuleIdentity, Unsigned32, Counter64, MibIdentifier, TimeTicks, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "Counter32", "ModuleIdentity", "Unsigned32", "Counter64", "MibIdentifier", "TimeTicks", "NotificationType", "IpAddress")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
ciscoFcSpanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 363))
ciscoFcSpanMIB.setRevisions(('2003-04-09 00:00',))
if mibBuilder.loadTexts: ciscoFcSpanMIB.setLastUpdated('200304090000Z')
if mibBuilder.loadTexts: ciscoFcSpanMIB.setOrganization('Cisco Systems Inc. ')
ciscoSpanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 363, 1))
cspanConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1))
class SessionIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4095)

cspanMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cspanMaxSessions.setStatus('current')
cspanSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2), )
if mibBuilder.loadTexts: cspanSessionTable.setStatus('current')
cspanSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-FC-SPAN-MIB", "cspanSessionIndex"))
if mibBuilder.loadTexts: cspanSessionEntry.setStatus('current')
cspanSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2, 1, 1), SessionIndex())
if mibBuilder.loadTexts: cspanSessionIndex.setStatus('current')
cspanSessionDestIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cspanSessionDestIfIndex.setStatus('current')
cspanSessionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cspanSessionAdminStatus.setStatus('current')
cspanSessionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cspanSessionOperStatus.setStatus('current')
cspanSessionInactiveReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cspanSessionInactiveReason.setStatus('current')
cspanSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cspanSessionRowStatus.setStatus('current')
cspanSourcesIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 3), )
if mibBuilder.loadTexts: cspanSourcesIfTable.setStatus('current')
cspanSourcesIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-FC-SPAN-MIB", "cspanSessionIndex"), (0, "CISCO-FC-SPAN-MIB", "cspanSourcesIfIndex"), (0, "CISCO-FC-SPAN-MIB", "cspanSourcesDirection"))
if mibBuilder.loadTexts: cspanSourcesIfEntry.setStatus('current')
cspanSourcesIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cspanSourcesIfIndex.setStatus('current')
cspanSourcesDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("receive", 1), ("transmit", 2))))
if mibBuilder.loadTexts: cspanSourcesDirection.setStatus('current')
cspanSourcesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cspanSourcesRowStatus.setStatus('current')
cspanSourcesVsanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 4), )
if mibBuilder.loadTexts: cspanSourcesVsanTable.setStatus('current')
cspanSourcesVsanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-FC-SPAN-MIB", "cspanSessionIndex"))
if mibBuilder.loadTexts: cspanSourcesVsanEntry.setStatus('current')
cspanSourcesVsans2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 4, 1, 1), FcList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cspanSourcesVsans2k.setStatus('current')
cspanSourcesVsans4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 4, 1, 2), FcList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cspanSourcesVsans4k.setStatus('current')
cspanSourcesVsanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 5), )
if mibBuilder.loadTexts: cspanSourcesVsanCfgTable.setStatus('current')
cspanSourcesVsanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-FC-SPAN-MIB", "cspanSourcesVsanCfgSessIndex"))
if mibBuilder.loadTexts: cspanSourcesVsanCfgEntry.setStatus('current')
cspanSourcesVsanCfgSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 5, 1, 1), SessionIndex())
if mibBuilder.loadTexts: cspanSourcesVsanCfgSessIndex.setStatus('current')
cspanSourcesVsanCfgCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("remove", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cspanSourcesVsanCfgCommand.setStatus('current')
cspanSourcesVsanCfgVsans2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 5, 1, 3), FcList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cspanSourcesVsanCfgVsans2k.setStatus('current')
cspanSourcesVsanCfgVsans4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 5, 1, 4), FcList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cspanSourcesVsanCfgVsans4k.setStatus('current')
cspanVsanFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 6), )
if mibBuilder.loadTexts: cspanVsanFilterTable.setStatus('current')
cspanVsanFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-FC-SPAN-MIB", "cspanVsanFilterSessIndex"))
if mibBuilder.loadTexts: cspanVsanFilterEntry.setStatus('current')
cspanVsanFilterSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 6, 1, 1), SessionIndex())
if mibBuilder.loadTexts: cspanVsanFilterSessIndex.setStatus('current')
cspanVsanFilterVsans2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 6, 1, 2), FcList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cspanVsanFilterVsans2k.setStatus('current')
cspanVsanFilterVsans4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 6, 1, 3), FcList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cspanVsanFilterVsans4k.setStatus('current')
cspanVsanFilterOpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 7), )
if mibBuilder.loadTexts: cspanVsanFilterOpTable.setStatus('current')
cspanVsanFilterOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-FC-SPAN-MIB", "cspanVsanFilterOpSessIndex"))
if mibBuilder.loadTexts: cspanVsanFilterOpEntry.setStatus('current')
cspanVsanFilterOpSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 7, 1, 1), SessionIndex())
if mibBuilder.loadTexts: cspanVsanFilterOpSessIndex.setStatus('current')
cspanVsanFilterOpCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("remove", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cspanVsanFilterOpCommand.setStatus('current')
cspanVsanFilterOpVsans2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 7, 1, 3), FcList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cspanVsanFilterOpVsans2k.setStatus('current')
cspanVsanFilterOpVsans4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 363, 1, 1, 7, 1, 4), FcList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cspanVsanFilterOpVsans4k.setStatus('current')
ciscoFcSpanMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 363, 2))
ciscoFcSpanMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 1))
ciscoFcSpanMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2))
ciscoFcSpanMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 1, 1)).setObjects(("CISCO-FC-SPAN-MIB", "cspanScalarsGroup"), ("CISCO-FC-SPAN-MIB", "cspanSessionsGroup"), ("CISCO-FC-SPAN-MIB", "cspanSourceIfGroup"), ("CISCO-FC-SPAN-MIB", "cspanSourceVsanGroup"), ("CISCO-FC-SPAN-MIB", "cspanSourceVsanCfgGroup"), ("CISCO-FC-SPAN-MIB", "cspanVsanFilterGroup"), ("CISCO-FC-SPAN-MIB", "cspanVsanFilterOpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFcSpanMIBCompliance = ciscoFcSpanMIBCompliance.setStatus('current')
cspanScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2, 1)).setObjects(("CISCO-FC-SPAN-MIB", "cspanMaxSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cspanScalarsGroup = cspanScalarsGroup.setStatus('current')
cspanSessionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2, 2)).setObjects(("CISCO-FC-SPAN-MIB", "cspanSessionDestIfIndex"), ("CISCO-FC-SPAN-MIB", "cspanSessionAdminStatus"), ("CISCO-FC-SPAN-MIB", "cspanSessionOperStatus"), ("CISCO-FC-SPAN-MIB", "cspanSessionInactiveReason"), ("CISCO-FC-SPAN-MIB", "cspanSessionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cspanSessionsGroup = cspanSessionsGroup.setStatus('current')
cspanSourceIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2, 3)).setObjects(("CISCO-FC-SPAN-MIB", "cspanSourcesRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cspanSourceIfGroup = cspanSourceIfGroup.setStatus('current')
cspanSourceVsanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2, 4)).setObjects(("CISCO-FC-SPAN-MIB", "cspanSourcesVsans2k"), ("CISCO-FC-SPAN-MIB", "cspanSourcesVsans4k"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cspanSourceVsanGroup = cspanSourceVsanGroup.setStatus('current')
cspanSourceVsanCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2, 5)).setObjects(("CISCO-FC-SPAN-MIB", "cspanSourcesVsanCfgCommand"), ("CISCO-FC-SPAN-MIB", "cspanSourcesVsanCfgVsans2k"), ("CISCO-FC-SPAN-MIB", "cspanSourcesVsanCfgVsans4k"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cspanSourceVsanCfgGroup = cspanSourceVsanCfgGroup.setStatus('current')
cspanVsanFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2, 6)).setObjects(("CISCO-FC-SPAN-MIB", "cspanSourcesVsanCfgVsans2k"), ("CISCO-FC-SPAN-MIB", "cspanVsanFilterVsans2k"), ("CISCO-FC-SPAN-MIB", "cspanVsanFilterVsans4k"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cspanVsanFilterGroup = cspanVsanFilterGroup.setStatus('current')
cspanVsanFilterOpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 363, 2, 2, 7)).setObjects(("CISCO-FC-SPAN-MIB", "cspanVsanFilterOpCommand"), ("CISCO-FC-SPAN-MIB", "cspanVsanFilterOpVsans2k"), ("CISCO-FC-SPAN-MIB", "cspanVsanFilterOpVsans4k"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cspanVsanFilterOpGroup = cspanVsanFilterOpGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FC-SPAN-MIB", cspanSessionDestIfIndex=cspanSessionDestIfIndex, cspanVsanFilterOpGroup=cspanVsanFilterOpGroup, cspanSessionOperStatus=cspanSessionOperStatus, cspanVsanFilterOpTable=cspanVsanFilterOpTable, ciscoFcSpanMIB=ciscoFcSpanMIB, cspanVsanFilterVsans4k=cspanVsanFilterVsans4k, cspanMaxSessions=cspanMaxSessions, cspanSourceIfGroup=cspanSourceIfGroup, ciscoFcSpanMIBCompliance=ciscoFcSpanMIBCompliance, cspanSessionsGroup=cspanSessionsGroup, cspanConfiguration=cspanConfiguration, cspanVsanFilterOpVsans4k=cspanVsanFilterOpVsans4k, cspanSourcesRowStatus=cspanSourcesRowStatus, cspanSourcesDirection=cspanSourcesDirection, cspanVsanFilterOpCommand=cspanVsanFilterOpCommand, ciscoFcSpanMIBGroups=ciscoFcSpanMIBGroups, cspanSourcesIfIndex=cspanSourcesIfIndex, cspanSourcesVsanCfgCommand=cspanSourcesVsanCfgCommand, cspanSessionEntry=cspanSessionEntry, cspanVsanFilterOpVsans2k=cspanVsanFilterOpVsans2k, cspanSourcesVsanTable=cspanSourcesVsanTable, cspanSourceVsanGroup=cspanSourceVsanGroup, cspanSourcesVsanCfgVsans4k=cspanSourcesVsanCfgVsans4k, cspanSourcesVsanCfgTable=cspanSourcesVsanCfgTable, cspanVsanFilterOpEntry=cspanVsanFilterOpEntry, ciscoFcSpanMIBCompliances=ciscoFcSpanMIBCompliances, cspanVsanFilterGroup=cspanVsanFilterGroup, cspanSourcesIfEntry=cspanSourcesIfEntry, cspanVsanFilterOpSessIndex=cspanVsanFilterOpSessIndex, cspanSourcesVsanCfgVsans2k=cspanSourcesVsanCfgVsans2k, cspanVsanFilterSessIndex=cspanVsanFilterSessIndex, cspanScalarsGroup=cspanScalarsGroup, cspanVsanFilterTable=cspanVsanFilterTable, cspanSourcesVsans2k=cspanSourcesVsans2k, PYSNMP_MODULE_ID=ciscoFcSpanMIB, cspanSourcesVsanEntry=cspanSourcesVsanEntry, cspanSourcesVsans4k=cspanSourcesVsans4k, cspanSourcesVsanCfgEntry=cspanSourcesVsanCfgEntry, cspanSessionIndex=cspanSessionIndex, cspanSessionRowStatus=cspanSessionRowStatus, cspanVsanFilterEntry=cspanVsanFilterEntry, ciscoSpanMIBObjects=ciscoSpanMIBObjects, cspanSourcesVsanCfgSessIndex=cspanSourcesVsanCfgSessIndex, cspanSessionTable=cspanSessionTable, cspanVsanFilterVsans2k=cspanVsanFilterVsans2k, cspanSessionAdminStatus=cspanSessionAdminStatus, SessionIndex=SessionIndex, ciscoFcSpanMIBConformance=ciscoFcSpanMIBConformance, cspanSourcesIfTable=cspanSourcesIfTable, cspanSourceVsanCfgGroup=cspanSourceVsanCfgGroup, cspanSessionInactiveReason=cspanSessionInactiveReason)
